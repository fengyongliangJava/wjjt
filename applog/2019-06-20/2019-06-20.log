2019-06-20 09:26:29 -Starting BootdoApplication on PC-201905091110 with PID 2752 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-06-20 09:26:29 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-06-20 09:26:29 -The following profiles are active: dev
2019-06-20 09:26:29 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d18aa28: startup date [Thu Jun 20 09:26:29 CST 2019]; root of context hierarchy
2019-06-20 09:26:34 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-06-20 09:26:38 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$aa9f4531] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-20 09:26:38 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$9cf873d8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-20 09:26:39 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-20 09:26:40 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-20 09:26:40 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-20 09:26:40 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-06-20 09:26:40 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-06-20 09:26:40 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-20 09:26:40 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-20 09:26:40 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-20 09:26:41 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-20 09:26:42 -Tomcat initialized with port(s): 8081 (http)
2019-06-20 09:26:42 -Initializing ProtocolHandler ["http-nio-8081"]
2019-06-20 09:26:42 -Starting service [Tomcat]
2019-06-20 09:26:42 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-06-20 09:26:43 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:\Java\JDK\jdk1.8.0_102\jre\bin;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-06-20 09:26:43 -Initializing Spring embedded WebApplicationContext
2019-06-20 09:26:43 -Root WebApplicationContext: initialization completed in 14288 ms
2019-06-20 09:26:44 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-06-20 09:26:44 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-06-20 09:26:44 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-06-20 09:26:44 -Mapping filter: 'requestContextFilter' to: [/*]
2019-06-20 09:26:44 -Filter xssFilter was not registered (disabled)
2019-06-20 09:26:44 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-06-20 09:26:44 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-06-20 09:26:44 -Servlet statViewServlet mapped to [/druid/*]
2019-06-20 09:26:44 -Servlet dispatcherServlet mapped to [/]
2019-06-20 09:26:49 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d18aa28: startup date [Thu Jun 20 09:26:29 CST 2019]; root of context hierarchy
2019-06-20 09:26:50 -Using default implementation for ThreadExecutor
2019-06-20 09:26:50 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-06-20 09:26:50 -Quartz Scheduler v.2.3.0 created.
2019-06-20 09:26:50 -RAMJobStore initialized.
2019-06-20 09:26:50 -Scheduler meta-data: Quartz Scheduler (v2.3.0) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-06-20 09:26:50 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-06-20 09:26:50 -Quartz scheduler version: 2.3.0
2019-06-20 09:26:50 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@5cba890e
2019-06-20 09:26:51 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-06-20 09:26:51 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-06-20 09:26:55 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-20 09:26:55 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-06-20 09:26:55 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-20 09:26:55 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-20 09:26:55 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-20 09:26:55 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-06-20 09:26:55 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countOweController.getCountOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-06-20 09:26:55 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-06-20 09:26:55 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-06-20 09:26:55 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-06-20 09:26:55 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-20 09:26:55 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-20 09:26:55 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-06-20 09:26:55 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-20 09:26:55 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-20 09:26:55 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-20 09:26:55 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-06-20 09:26:55 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-20 09:26:55 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-06-20 09:26:55 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-06-20 09:26:55 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-06-20 09:26:55 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-06-20 09:26:55 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-06-20 09:26:55 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-06-20 09:26:55 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-20 09:26:55 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-06-20 09:26:55 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-06-20 09:26:55 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-20 09:26:55 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-06-20 09:26:55 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-06-20 09:26:55 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-06-20 09:26:55 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-06-20 09:26:55 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-20 09:26:55 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Integer> com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-06-20 09:26:55 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-06-20 09:26:55 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-20 09:26:55 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-06-20 09:26:55 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-06-20 09:26:55 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-06-20 09:26:55 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-06-20 09:26:55 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 09:26:55 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-06-20 09:26:55 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-06-20 09:26:55 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-06-20 09:26:55 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-06-20 09:26:55 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 09:26:55 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-06-20 09:26:55 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-06-20 09:26:55 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-06-20 09:26:55 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-06-20 09:26:55 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-06-20 09:26:55 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 09:26:55 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-06-20 09:26:55 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-06-20 09:26:55 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 09:26:55 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-06-20 09:26:55 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-06-20 09:26:55 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 09:26:55 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-06-20 09:26:55 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-06-20 09:26:55 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-06-20 09:26:55 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-06-20 09:26:55 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-06-20 09:26:55 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-06-20 09:26:55 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-06-20 09:26:55 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-06-20 09:26:55 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-06-20 09:26:55 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 09:26:55 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-06-20 09:26:55 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-06-20 09:26:55 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-06-20 09:26:55 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-06-20 09:26:55 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 09:26:55 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-06-20 09:26:55 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-06-20 09:26:55 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 09:26:55 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-06-20 09:26:55 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-06-20 09:26:55 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-06-20 09:26:55 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-20 09:26:55 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-20 09:26:55 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-06-20 09:26:55 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-06-20 09:26:55 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-06-20 09:26:55 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-06-20 09:26:55 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-06-20 09:26:55 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-06-20 09:26:55 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 09:26:55 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-06-20 09:26:55 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-06-20 09:26:55 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-06-20 09:26:55 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-06-20 09:26:55 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-06-20 09:26:55 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-06-20 09:26:55 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-06-20 09:26:55 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-06-20 09:26:55 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-06-20 09:26:55 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 09:26:55 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-06-20 09:26:55 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 09:26:55 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-06-20 09:26:55 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-06-20 09:26:55 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-06-20 09:26:55 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-06-20 09:26:55 -Mapped "{[/elec/elecUpLoad/importElecUser]}" onto public java.lang.String com.bootdo.elec.controller.ElecUpLoadController.importElecUser(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-20 09:26:55 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-06-20 09:26:55 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-06-20 09:26:55 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-06-20 09:26:55 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-06-20 09:26:55 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 09:26:55 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-06-20 09:26:55 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-06-20 09:26:55 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-06-20 09:26:55 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-06-20 09:26:55 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-06-20 09:26:55 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-06-20 09:26:55 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-06-20 09:26:55 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-06-20 09:26:55 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-06-20 09:26:55 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-06-20 09:26:55 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-06-20 09:26:55 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 09:26:55 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-06-20 09:26:55 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-06-20 09:26:55 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 09:26:55 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-06-20 09:26:55 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-06-20 09:26:55 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-20 09:26:55 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-06-20 09:26:55 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-06-20 09:26:55 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-06-20 09:26:55 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 09:26:55 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-06-20 09:26:55 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-06-20 09:26:55 -Mapped "{[/moneyList/moneyWZ/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.add()
2019-06-20 09:26:55 -Mapped "{[/moneyList/moneyWZ/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long)
2019-06-20 09:26:55 -Mapped "{[/moneyList/moneyWZ/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long[])
2019-06-20 09:26:55 -Mapped "{[/moneyList/moneyWZ/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.update(com.bootdo.elec.domain.ElecDO)
2019-06-20 09:26:55 -Mapped "{[/moneyList/moneyWZ/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyList.controller.MoneyListWZController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-06-20 09:26:55 -Mapped "{[/moneyList/moneyWZ/exprotWZ],methods=[GET]}" onto public void com.bootdo.moneyList.controller.MoneyListWZController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-06-20 09:26:55 -Mapped "{[/moneyList/moneyWZ/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 09:26:55 -Mapped "{[/moneyList/moneyWZ/batchMoney],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.batchMoney(java.lang.Long[])
2019-06-20 09:26:55 -Mapped "{[/moneyList/moneyWZ],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
2019-06-20 09:26:55 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-06-20 09:26:55 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-06-20 09:26:55 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-06-20 09:26:55 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-06-20 09:26:55 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 09:26:55 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-06-20 09:26:55 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 09:26:55 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-06-20 09:26:55 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-20 09:26:55 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-06-20 09:26:55 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-06-20 09:26:55 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-06-20 09:26:55 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-06-20 09:26:55 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 09:26:55 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-06-20 09:26:55 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 09:26:55 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-06-20 09:26:55 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-20 09:26:55 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-06-20 09:26:55 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-06-20 09:26:55 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-06-20 09:26:55 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-06-20 09:26:55 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 09:26:55 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-06-20 09:26:55 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 09:26:55 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-06-20 09:26:55 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-20 09:26:55 -Mapped "{[/moneyUpLoad/ElecLogUpLoad/importElecLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.importElecLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-20 09:26:55 -Mapped "{[/moneyUpLoad/ElecLogUpLoad/exprotElecLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.exprotElecLogExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-20 09:26:55 -Mapped "{[/moneyUpLoad/ElecLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.ElecLogUpLoad()
2019-06-20 09:26:55 -Mapped "{[/moneyUpLoad/HeatLogUpLoad/importHeatLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.importHeatLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-20 09:26:55 -Mapped "{[/moneyUpLoad/HeatLogUpLoad/exprotHeatLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.exprotHeatLogExcel(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-20 09:26:55 -Mapped "{[/moneyUpLoad/HeatLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.HeatLogUpLoad()
2019-06-20 09:26:55 -Mapped "{[/moneyUpLoad/WaterLogUpLoad/exprotWaterLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.exprotWaterLogExcel(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-20 09:26:55 -Mapped "{[/moneyUpLoad/WaterLogUpLoad/importWaterLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.importWaterLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-20 09:26:55 -Mapped "{[/moneyUpLoad/WaterLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.WaterLogLogUpLoad()
2019-06-20 09:26:55 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-06-20 09:26:55 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-06-20 09:26:55 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-06-20 09:26:55 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-06-20 09:26:55 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-06-20 09:26:55 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 09:26:55 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-06-20 09:26:55 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-06-20 09:26:55 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 09:26:55 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-06-20 09:26:55 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-06-20 09:26:55 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 09:26:55 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-06-20 09:26:55 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-06-20 09:26:55 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-06-20 09:26:55 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 09:26:55 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-06-20 09:26:55 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.batchRemove(java.lang.Long[])
2019-06-20 09:26:55 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 09:26:55 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 09:26:55 -Mapped "{[/print/print/batchPrint],methods=[POST]}" onto public java.util.List<com.bootdo.print.vo.PrintVo> com.bootdo.print.controller.PrintController.batchPrint(java.lang.Long[])
2019-06-20 09:26:55 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-06-20 09:26:55 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-06-20 09:26:55 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-06-20 09:26:55 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-06-20 09:26:55 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-06-20 09:26:55 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-06-20 09:26:55 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-06-20 09:26:55 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-06-20 09:26:55 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-06-20 09:26:55 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-06-20 09:26:55 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 09:26:55 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-06-20 09:26:55 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-06-20 09:26:55 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-06-20 09:26:55 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-06-20 09:26:55 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-06-20 09:26:55 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-06-20 09:26:55 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-06-20 09:26:55 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-06-20 09:26:55 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-20 09:26:55 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-06-20 09:26:55 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-06-20 09:26:55 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-06-20 09:26:55 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 09:26:55 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-06-20 09:26:55 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-06-20 09:26:55 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-06-20 09:26:55 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-06-20 09:26:55 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-06-20 09:26:55 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-06-20 09:26:55 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-06-20 09:26:55 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-06-20 09:26:55 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-06-20 09:26:55 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-06-20 09:26:55 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-06-20 09:26:55 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-06-20 09:26:55 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 09:26:55 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-06-20 09:26:55 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-06-20 09:26:55 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-06-20 09:26:55 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-06-20 09:26:55 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 09:26:55 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-06-20 09:26:55 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-06-20 09:26:55 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-06-20 09:26:55 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 09:26:55 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-06-20 09:26:55 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-06-20 09:26:55 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-06-20 09:26:55 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-06-20 09:26:55 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-06-20 09:26:55 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-06-20 09:26:55 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-06-20 09:26:55 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-06-20 09:26:55 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-06-20 09:26:55 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-06-20 09:26:55 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-06-20 09:26:55 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-06-20 09:26:55 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-06-20 09:26:55 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-06-20 09:26:55 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-06-20 09:26:55 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-06-20 09:26:55 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-06-20 09:26:55 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 09:26:55 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-06-20 09:26:55 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 09:26:55 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-06-20 09:26:55 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-06-20 09:26:55 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-06-20 09:26:55 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-06-20 09:26:55 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-06-20 09:26:55 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-06-20 09:26:55 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-06-20 09:26:55 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-06-20 09:26:55 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-06-20 09:26:55 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 09:26:55 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-06-20 09:26:55 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-06-20 09:26:55 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 09:26:55 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-06-20 09:26:55 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-06-20 09:26:55 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-20 09:26:55 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-06-20 09:26:55 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-06-20 09:26:55 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-06-20 09:26:55 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-06-20 09:26:55 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-06-20 09:26:56 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-06-20 09:26:56 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-06-20 09:26:56 -Initializing ExecutorService  'brokerChannelExecutor'
2019-06-20 09:26:57 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-20 09:26:57 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d18aa28: startup date [Thu Jun 20 09:26:29 CST 2019]; root of context hierarchy
2019-06-20 09:26:58 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-20 09:26:58 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-20 09:26:58 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-06-20 09:26:58 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-06-20 09:27:03 -Registering beans for JMX exposure on startup
2019-06-20 09:27:03 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-06-20 09:27:03 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-06-20 09:27:03 -Starting beans in phase 2147483647
2019-06-20 09:27:03 -Context refreshed
2019-06-20 09:27:04 -Found 1 custom documentation plugin(s)
2019-06-20 09:27:04 -Scanning for api listing references
2019-06-20 09:27:05 -Generating unique operation named: removeUsingPOST_1
2019-06-20 09:27:05 -Generating unique operation named: addUsingGET_1
2019-06-20 09:27:05 -Generating unique operation named: editUsingGET_1
2019-06-20 09:27:05 -Generating unique operation named: listUsingGET_1
2019-06-20 09:27:05 -Generating unique operation named: removeUsingPOST_2
2019-06-20 09:27:05 -Generating unique operation named: removeUsingPOST_3
2019-06-20 09:27:05 -Generating unique operation named: saveUsingPOST_1
2019-06-20 09:27:05 -Generating unique operation named: updateUsingGET_1
2019-06-20 09:27:05 -Generating unique operation named: updateUsingHEAD_1
2019-06-20 09:27:05 -Generating unique operation named: updateUsingPOST_1
2019-06-20 09:27:05 -Generating unique operation named: updateUsingPUT_1
2019-06-20 09:27:05 -Generating unique operation named: updateUsingPATCH_1
2019-06-20 09:27:05 -Generating unique operation named: updateUsingDELETE_1
2019-06-20 09:27:05 -Generating unique operation named: updateUsingOPTIONS_1
2019-06-20 09:27:05 -Generating unique operation named: updateUsingTRACE_1
2019-06-20 09:27:05 -Generating unique operation named: addUsingGET_2
2019-06-20 09:27:05 -Generating unique operation named: editUsingGET_2
2019-06-20 09:27:05 -Generating unique operation named: listUsingGET_2
2019-06-20 09:27:05 -Generating unique operation named: removeUsingPOST_4
2019-06-20 09:27:05 -Generating unique operation named: removeUsingPOST_5
2019-06-20 09:27:05 -Generating unique operation named: saveUsingPOST_2
2019-06-20 09:27:05 -Generating unique operation named: updateUsingPOST_2
2019-06-20 09:27:05 -Generating unique operation named: exprotExcelUsingGET_1
2019-06-20 09:27:05 -Generating unique operation named: addUsingGET_3
2019-06-20 09:27:05 -Generating unique operation named: editUsingGET_3
2019-06-20 09:27:05 -Generating unique operation named: listUsingGET_3
2019-06-20 09:27:05 -Generating unique operation named: removeUsingPOST_6
2019-06-20 09:27:05 -Generating unique operation named: removeUsingPOST_7
2019-06-20 09:27:05 -Generating unique operation named: saveUsingPOST_3
2019-06-20 09:27:05 -Generating unique operation named: updateUsingGET_2
2019-06-20 09:27:05 -Generating unique operation named: updateUsingHEAD_2
2019-06-20 09:27:05 -Generating unique operation named: updateUsingPOST_3
2019-06-20 09:27:05 -Generating unique operation named: updateUsingPUT_2
2019-06-20 09:27:05 -Generating unique operation named: updateUsingPATCH_2
2019-06-20 09:27:05 -Generating unique operation named: updateUsingDELETE_2
2019-06-20 09:27:05 -Generating unique operation named: updateUsingOPTIONS_2
2019-06-20 09:27:05 -Generating unique operation named: updateUsingTRACE_2
2019-06-20 09:27:05 -Generating unique operation named: addUsingGET_4
2019-06-20 09:27:05 -Generating unique operation named: editUsingGET_4
2019-06-20 09:27:05 -Generating unique operation named: listUsingGET_4
2019-06-20 09:27:05 -Generating unique operation named: removeUsingPOST_8
2019-06-20 09:27:06 -Generating unique operation named: removeUsingPOST_9
2019-06-20 09:27:06 -Generating unique operation named: saveUsingPOST_4
2019-06-20 09:27:06 -Generating unique operation named: updateUsingGET_3
2019-06-20 09:27:06 -Generating unique operation named: updateUsingHEAD_3
2019-06-20 09:27:06 -Generating unique operation named: updateUsingPOST_4
2019-06-20 09:27:06 -Generating unique operation named: updateUsingPUT_3
2019-06-20 09:27:06 -Generating unique operation named: updateUsingPATCH_3
2019-06-20 09:27:06 -Generating unique operation named: updateUsingDELETE_3
2019-06-20 09:27:06 -Generating unique operation named: updateUsingOPTIONS_3
2019-06-20 09:27:06 -Generating unique operation named: updateUsingTRACE_3
2019-06-20 09:27:06 -Generating unique operation named: ElecUsingGET_1
2019-06-20 09:27:06 -Generating unique operation named: addUsingGET_5
2019-06-20 09:27:06 -Generating unique operation named: editUsingGET_5
2019-06-20 09:27:06 -Generating unique operation named: listUsingGET_5
2019-06-20 09:27:06 -Generating unique operation named: removeUsingPOST_10
2019-06-20 09:27:06 -Generating unique operation named: removeUsingPOST_11
2019-06-20 09:27:06 -Generating unique operation named: saveUsingPOST_5
2019-06-20 09:27:06 -Generating unique operation named: updateUsingGET_4
2019-06-20 09:27:06 -Generating unique operation named: updateUsingHEAD_4
2019-06-20 09:27:06 -Generating unique operation named: updateUsingPOST_5
2019-06-20 09:27:06 -Generating unique operation named: updateUsingPUT_4
2019-06-20 09:27:06 -Generating unique operation named: updateUsingPATCH_4
2019-06-20 09:27:06 -Generating unique operation named: updateUsingDELETE_4
2019-06-20 09:27:06 -Generating unique operation named: updateUsingOPTIONS_4
2019-06-20 09:27:06 -Generating unique operation named: updateUsingTRACE_4
2019-06-20 09:27:06 -Generating unique operation named: editUsingGET_6
2019-06-20 09:27:06 -Generating unique operation named: listUsingGET_6
2019-06-20 09:27:06 -Generating unique operation named: updateUsingPOST_6
2019-06-20 09:27:06 -Generating unique operation named: addUsingGET_6
2019-06-20 09:27:06 -Generating unique operation named: editUsingGET_7
2019-06-20 09:27:06 -Generating unique operation named: exprotExcelUsingGET_2
2019-06-20 09:27:06 -Generating unique operation named: listUsingGET_7
2019-06-20 09:27:06 -Generating unique operation named: removeUsingPOST_12
2019-06-20 09:27:06 -Generating unique operation named: removeUsingPOST_13
2019-06-20 09:27:06 -Generating unique operation named: saveUsingPOST_6
2019-06-20 09:27:06 -Generating unique operation named: updateUsingGET_5
2019-06-20 09:27:06 -Generating unique operation named: updateUsingHEAD_5
2019-06-20 09:27:06 -Generating unique operation named: updateUsingPOST_7
2019-06-20 09:27:06 -Generating unique operation named: updateUsingPUT_5
2019-06-20 09:27:06 -Generating unique operation named: updateUsingPATCH_5
2019-06-20 09:27:06 -Generating unique operation named: updateUsingDELETE_5
2019-06-20 09:27:06 -Generating unique operation named: updateUsingOPTIONS_5
2019-06-20 09:27:06 -Generating unique operation named: updateUsingTRACE_5
2019-06-20 09:27:06 -Generating unique operation named: exprotExcelUsingGET_3
2019-06-20 09:27:06 -Generating unique operation named: addUsingGET_7
2019-06-20 09:27:06 -Generating unique operation named: editUsingGET_8
2019-06-20 09:27:06 -Generating unique operation named: listUsingGET_8
2019-06-20 09:27:06 -Generating unique operation named: removeUsingPOST_14
2019-06-20 09:27:06 -Generating unique operation named: removeUsingPOST_15
2019-06-20 09:27:06 -Generating unique operation named: saveUsingPOST_7
2019-06-20 09:27:06 -Generating unique operation named: updateUsingGET_6
2019-06-20 09:27:06 -Generating unique operation named: updateUsingHEAD_6
2019-06-20 09:27:06 -Generating unique operation named: updateUsingPOST_8
2019-06-20 09:27:06 -Generating unique operation named: updateUsingPUT_6
2019-06-20 09:27:06 -Generating unique operation named: updateUsingPATCH_6
2019-06-20 09:27:06 -Generating unique operation named: updateUsingDELETE_6
2019-06-20 09:27:06 -Generating unique operation named: updateUsingOPTIONS_6
2019-06-20 09:27:06 -Generating unique operation named: updateUsingTRACE_6
2019-06-20 09:27:06 -Generating unique operation named: addUsingGET_8
2019-06-20 09:27:06 -Generating unique operation named: editUsingGET_9
2019-06-20 09:27:06 -Generating unique operation named: listUsingGET_9
2019-06-20 09:27:06 -Generating unique operation named: removeUsingPOST_16
2019-06-20 09:27:06 -Generating unique operation named: removeUsingPOST_17
2019-06-20 09:27:06 -Generating unique operation named: saveUsingPOST_8
2019-06-20 09:27:06 -Generating unique operation named: updateUsingGET_7
2019-06-20 09:27:06 -Generating unique operation named: updateUsingHEAD_7
2019-06-20 09:27:06 -Generating unique operation named: updateUsingPOST_9
2019-06-20 09:27:06 -Generating unique operation named: updateUsingPUT_7
2019-06-20 09:27:06 -Generating unique operation named: updateUsingPATCH_7
2019-06-20 09:27:06 -Generating unique operation named: updateUsingDELETE_7
2019-06-20 09:27:06 -Generating unique operation named: updateUsingOPTIONS_7
2019-06-20 09:27:06 -Generating unique operation named: updateUsingTRACE_7
2019-06-20 09:27:06 -Generating unique operation named: addUsingGET_9
2019-06-20 09:27:06 -Generating unique operation named: editUsingGET_10
2019-06-20 09:27:06 -Generating unique operation named: infoUsingGET_1
2019-06-20 09:27:06 -Generating unique operation named: infoUsingHEAD_1
2019-06-20 09:27:06 -Generating unique operation named: infoUsingPOST_1
2019-06-20 09:27:06 -Generating unique operation named: infoUsingPUT_1
2019-06-20 09:27:06 -Generating unique operation named: infoUsingPATCH_1
2019-06-20 09:27:06 -Generating unique operation named: infoUsingDELETE_1
2019-06-20 09:27:06 -Generating unique operation named: infoUsingOPTIONS_1
2019-06-20 09:27:06 -Generating unique operation named: infoUsingTRACE_1
2019-06-20 09:27:06 -Generating unique operation named: listUsingGET_10
2019-06-20 09:27:06 -Generating unique operation named: removeUsingPOST_18
2019-06-20 09:27:06 -Generating unique operation named: removeUsingPOST_19
2019-06-20 09:27:06 -Generating unique operation named: saveUsingPOST_9
2019-06-20 09:27:06 -Generating unique operation named: updateUsingPOST_10
2019-06-20 09:27:06 -Generating unique operation named: listUsingGET_11
2019-06-20 09:27:06 -Generating unique operation named: removeUsingPOST_20
2019-06-20 09:27:06 -Generating unique operation named: welcomeUsingGET_1
2019-06-20 09:27:06 -Generating unique operation named: addUsingGET_10
2019-06-20 09:27:06 -Generating unique operation named: editUsingGET_11
2019-06-20 09:27:06 -Generating unique operation named: listUsingGET_12
2019-06-20 09:27:06 -Generating unique operation named: removeUsingPOST_21
2019-06-20 09:27:07 -Generating unique operation named: saveUsingPOST_10
2019-06-20 09:27:07 -Generating unique operation named: treeUsingGET_1
2019-06-20 09:27:07 -Generating unique operation named: treeUsingGET_2
2019-06-20 09:27:07 -Generating unique operation named: updateUsingPOST_11
2019-06-20 09:27:07 -Generating unique operation named: addUsingGET_11
2019-06-20 09:27:07 -Generating unique operation named: editUsingGET_12
2019-06-20 09:27:07 -Generating unique operation named: listUsingGET_13
2019-06-20 09:27:07 -Generating unique operation named: removeUsingPOST_22
2019-06-20 09:27:07 -Generating unique operation named: removeUsingPOST_23
2019-06-20 09:27:07 -Generating unique operation named: updateUsingPOST_12
2019-06-20 09:27:07 -Generating unique operation named: addUsingGET_12
2019-06-20 09:27:07 -Generating unique operation named: editUsingGET_13
2019-06-20 09:27:07 -Generating unique operation named: listUsingGET_14
2019-06-20 09:27:07 -Generating unique operation named: removeUsingPOST_24
2019-06-20 09:27:07 -Generating unique operation named: removeUsingPOST_25
2019-06-20 09:27:07 -Generating unique operation named: saveUsingPOST_11
2019-06-20 09:27:07 -Generating unique operation named: updateUsingGET_8
2019-06-20 09:27:07 -Generating unique operation named: updateUsingHEAD_8
2019-06-20 09:27:07 -Generating unique operation named: updateUsingPOST_13
2019-06-20 09:27:07 -Generating unique operation named: updateUsingPUT_8
2019-06-20 09:27:07 -Generating unique operation named: updateUsingPATCH_8
2019-06-20 09:27:07 -Generating unique operation named: updateUsingDELETE_8
2019-06-20 09:27:07 -Generating unique operation named: updateUsingOPTIONS_8
2019-06-20 09:27:07 -Generating unique operation named: updateUsingTRACE_8
2019-06-20 09:27:07 -Generating unique operation named: addUsingGET_13
2019-06-20 09:27:07 -Generating unique operation named: batchRemoveUsingPOST_1
2019-06-20 09:27:07 -Generating unique operation named: editUsingGET_14
2019-06-20 09:27:07 -Generating unique operation named: listUsingGET_15
2019-06-20 09:27:07 -Generating unique operation named: printEditUsingGET_1
2019-06-20 09:27:07 -Generating unique operation named: removeUsingPOST_26
2019-06-20 09:27:07 -Generating unique operation named: saveUsingPOST_12
2019-06-20 09:27:07 -Generating unique operation named: updateUsingGET_9
2019-06-20 09:27:07 -Generating unique operation named: updateUsingHEAD_9
2019-06-20 09:27:07 -Generating unique operation named: updateUsingPOST_14
2019-06-20 09:27:07 -Generating unique operation named: updateUsingPUT_9
2019-06-20 09:27:07 -Generating unique operation named: updateUsingPATCH_9
2019-06-20 09:27:07 -Generating unique operation named: updateUsingDELETE_9
2019-06-20 09:27:07 -Generating unique operation named: updateUsingOPTIONS_9
2019-06-20 09:27:07 -Generating unique operation named: updateUsingTRACE_9
2019-06-20 09:27:07 -Generating unique operation named: addUsingGET_14
2019-06-20 09:27:07 -Generating unique operation named: batchRemoveUsingPOST_2
2019-06-20 09:27:07 -Generating unique operation named: editUsingGET_15
2019-06-20 09:27:07 -Generating unique operation named: listUsingGET_16
2019-06-20 09:27:07 -Generating unique operation named: saveUsingPOST_13
2019-06-20 09:27:07 -Generating unique operation named: saveUsingPOST_14
2019-06-20 09:27:07 -Generating unique operation named: updateUsingPOST_15
2019-06-20 09:27:07 -Generating unique operation named: listUsingGET_17
2019-06-20 09:27:07 -Generating unique operation named: listUsingHEAD_1
2019-06-20 09:27:07 -Generating unique operation named: listUsingPOST_1
2019-06-20 09:27:07 -Generating unique operation named: listUsingPUT_1
2019-06-20 09:27:07 -Generating unique operation named: listUsingPATCH_1
2019-06-20 09:27:07 -Generating unique operation named: listUsingDELETE_1
2019-06-20 09:27:07 -Generating unique operation named: listUsingOPTIONS_1
2019-06-20 09:27:07 -Generating unique operation named: listUsingTRACE_1
2019-06-20 09:27:07 -Generating unique operation named: countDDUsingGET_1
2019-06-20 09:27:07 -Generating unique operation named: exportDDUsingGET_1
2019-06-20 09:27:07 -Generating unique operation named: exportElecYYUsingGET_1
2019-06-20 09:27:07 -Generating unique operation named: addUsingGET_15
2019-06-20 09:27:07 -Generating unique operation named: batchRemoveUsingPOST_3
2019-06-20 09:27:07 -Generating unique operation named: editUsingGET_16
2019-06-20 09:27:07 -Generating unique operation named: listUsingGET_18
2019-06-20 09:27:07 -Generating unique operation named: removeUsingPOST_27
2019-06-20 09:27:07 -Generating unique operation named: saveUsingPOST_15
2019-06-20 09:27:07 -Generating unique operation named: treeUsingGET_3
2019-06-20 09:27:07 -Generating unique operation named: treeViewUsingGET_1
2019-06-20 09:27:07 -Generating unique operation named: updateUsingPOST_16
2019-06-20 09:27:07 -Generating unique operation named: addUsingGET_16
2019-06-20 09:27:07 -Generating unique operation named: editUsingGET_17
2019-06-20 09:27:07 -Generating unique operation named: exprotExcelUsingGET_4
2019-06-20 09:27:07 -Generating unique operation named: listUsingGET_19
2019-06-20 09:27:07 -Generating unique operation named: removeUsingPOST_28
2019-06-20 09:27:07 -Generating unique operation named: removeUsingPOST_29
2019-06-20 09:27:07 -Generating unique operation named: saveUsingPOST_16
2019-06-20 09:27:07 -Generating unique operation named: updateUsingGET_10
2019-06-20 09:27:07 -Generating unique operation named: updateUsingHEAD_10
2019-06-20 09:27:07 -Generating unique operation named: updateUsingPOST_17
2019-06-20 09:27:07 -Generating unique operation named: updateUsingPUT_10
2019-06-20 09:27:07 -Generating unique operation named: updateUsingPATCH_10
2019-06-20 09:27:07 -Generating unique operation named: updateUsingDELETE_10
2019-06-20 09:27:07 -Generating unique operation named: updateUsingOPTIONS_10
2019-06-20 09:27:07 -Generating unique operation named: updateUsingTRACE_10
2019-06-20 09:27:07 -Generating unique operation named: exprotExcelUsingGET_5
2019-06-20 09:27:07 -Generating unique operation named: addUsingGET_17
2019-06-20 09:27:07 -Generating unique operation named: editUsingGET_18
2019-06-20 09:27:08 -Generating unique operation named: listUsingGET_20
2019-06-20 09:27:08 -Generating unique operation named: removeUsingPOST_30
2019-06-20 09:27:08 -Generating unique operation named: removeUsingPOST_31
2019-06-20 09:27:08 -Generating unique operation named: saveUsingPOST_17
2019-06-20 09:27:08 -Generating unique operation named: updateUsingGET_11
2019-06-20 09:27:08 -Generating unique operation named: updateUsingHEAD_11
2019-06-20 09:27:08 -Generating unique operation named: updateUsingPOST_18
2019-06-20 09:27:08 -Generating unique operation named: updateUsingPUT_11
2019-06-20 09:27:08 -Generating unique operation named: updateUsingPATCH_11
2019-06-20 09:27:08 -Generating unique operation named: updateUsingDELETE_11
2019-06-20 09:27:08 -Generating unique operation named: updateUsingOPTIONS_11
2019-06-20 09:27:08 -Generating unique operation named: updateUsingTRACE_11
2019-06-20 09:27:08 -Generating unique operation named: addUsingGET_18
2019-06-20 09:27:08 -Generating unique operation named: editUsingGET_19
2019-06-20 09:27:08 -Generating unique operation named: listUsingGET_21
2019-06-20 09:27:08 -Generating unique operation named: removeUsingPOST_32
2019-06-20 09:27:08 -Generating unique operation named: removeUsingPOST_33
2019-06-20 09:27:08 -Generating unique operation named: saveUsingPOST_18
2019-06-20 09:27:08 -Generating unique operation named: updateUsingGET_12
2019-06-20 09:27:08 -Generating unique operation named: updateUsingHEAD_12
2019-06-20 09:27:08 -Generating unique operation named: updateUsingPOST_19
2019-06-20 09:27:08 -Generating unique operation named: updateUsingPUT_12
2019-06-20 09:27:08 -Generating unique operation named: updateUsingPATCH_12
2019-06-20 09:27:08 -Generating unique operation named: updateUsingDELETE_12
2019-06-20 09:27:08 -Generating unique operation named: updateUsingOPTIONS_12
2019-06-20 09:27:08 -Generating unique operation named: updateUsingTRACE_12
2019-06-20 09:27:08 -Starting Quartz Scheduler now
2019-06-20 09:27:08 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-06-20 09:27:08 -Starting...
2019-06-20 09:27:08 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-06-20 09:27:08 -Started.
2019-06-20 09:27:08 -Starting ProtocolHandler ["http-nio-8081"]
2019-06-20 09:27:08 -Using a shared selector for servlet write/read
2019-06-20 09:27:08 -Tomcat started on port(s): 8081 (http) with context path ''
2019-06-20 09:27:08 -Started BootdoApplication in 41.461 seconds (JVM running for 43.223)
2019-06-20 09:27:08 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-06-20 09:27:08 -==> Parameters: 
2019-06-20 09:27:09 -<==      Total: 1
2019-06-20 09:27:56 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-06-20 09:28:26 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-06-20 09:28:26 -FrameworkServlet 'dispatcherServlet': initialization started
2019-06-20 09:28:26 -FrameworkServlet 'dispatcherServlet': initialization completed in 74 ms
2019-06-20 09:28:27 -Enabling session validation scheduler...
2019-06-20 09:28:27 -请求地址 : http://localhost:8081/login;JSESSIONID=56c6874c-095e-4189-9ac6-3a516979bfbf
2019-06-20 09:28:27 -HTTP METHOD : GET
2019-06-20 09:28:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-06-20 09:28:27 -参数 : [{}]
2019-06-20 09:28:27 -耗时 : 9
2019-06-20 09:28:27 -返回值 : login
2019-06-20 09:28:30 -请求地址 : http://localhost:8081/getVerify
2019-06-20 09:28:30 -HTTP METHOD : GET
2019-06-20 09:28:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-06-20 09:28:30 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@ccc8745, org.apache.shiro.web.servlet.ShiroHttpServletResponse@8f30204]
2019-06-20 09:28:36 -0216
2019-06-20 09:28:37 -耗时 : 6448
2019-06-20 09:28:37 -返回值 : null
2019-06-20 09:28:42 -请求地址 : http://localhost:8081/login
2019-06-20 09:28:42 -HTTP METHOD : POST
2019-06-20 09:28:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-06-20 09:28:42 -参数 : [admin, 111111, 0216, org.apache.shiro.web.servlet.ShiroHttpServletRequest@6d9d3830]
2019-06-20 09:28:43 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-06-20 09:28:43 -==> Parameters: admin(String)
2019-06-20 09:28:43 -<==      Total: 1
2019-06-20 09:28:43 -耗时 : 188
2019-06-20 09:28:43 -返回值 : {msg=操作成功, code=0}
2019-06-20 09:28:43 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-06-20 09:28:43 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-20 09:28:43 -==> Parameters: 1(Long), admin(String), 登录(String), 189(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-06-20 09:28:43.232(Timestamp)
2019-06-20 09:28:43 -<==    Updates: 1
2019-06-20 09:28:43 -请求地址 : http://localhost:8081/index
2019-06-20 09:28:43 -HTTP METHOD : GET
2019-06-20 09:28:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-20 09:28:43 -参数 : [{}]
2019-06-20 09:28:43 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-20 09:28:43 -==> Parameters: 1(Long)
2019-06-20 09:28:44 -<==      Total: 51
2019-06-20 09:28:44 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-20 09:28:44 -==> Parameters: 138(Long)
2019-06-20 09:28:44 -<==      Total: 1
2019-06-20 09:28:44 -耗时 : 442
2019-06-20 09:28:44 -返回值 : index_v1
2019-06-20 09:28:44 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-20 09:28:44 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 442(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-bullseye","url":"/moneyUpLoad/ElecLogUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"165","parentId":"106","text":"缴费上传"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":tru(String), 127.0.0.1(String), 2019-06-20 09:28:44.434(Timestamp)
2019-06-20 09:28:44 -<==    Updates: 1
2019-06-20 09:28:44 -请求地址 : http://localhost:8081/main
2019-06-20 09:28:44 -HTTP METHOD : GET
2019-06-20 09:28:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-20 09:28:44 -参数 : []
2019-06-20 09:28:44 -耗时 : 1
2019-06-20 09:28:44 -返回值 : main
2019-06-20 09:28:47 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-20 09:28:47 -HTTP METHOD : GET
2019-06-20 09:28:47 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-20 09:28:47 -参数 : []
2019-06-20 09:28:47 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-20 09:28:47 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-20 09:28:47 -请求地址 : http://localhost:8081/main
2019-06-20 09:28:47 -HTTP METHOD : GET
2019-06-20 09:28:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-20 09:28:47 -参数 : []
2019-06-20 09:28:47 -耗时 : 0
2019-06-20 09:28:47 -返回值 : main
2019-06-20 09:28:47 -<==      Total: 0
2019-06-20 09:28:47 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-20 09:28:47 -==> Parameters: 1(Long), 0(String)
2019-06-20 09:28:47 -<==      Total: 1
2019-06-20 09:28:47 -耗时 : 206
2019-06-20 09:28:47 -返回值 : com.bootdo.common.utils.PageUtils@66286857
2019-06-20 09:29:31 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-06-20 09:29:31 -==> Parameters: 1(Long)
2019-06-20 09:29:31 -<==      Total: 95
2019-06-20 09:29:31 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-06-20 09:29:31 -HTTP METHOD : GET
2019-06-20 09:29:31 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-06-20 09:29:31 -参数 : []
2019-06-20 09:29:31 -耗时 : 20
2019-06-20 09:29:31 -返回值 : charts/tableElecMM
2019-06-20 09:29:32 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-06-20 09:29:32 -HTTP METHOD : GET
2019-06-20 09:29:32 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:29:32 -参数 : [elecType]
2019-06-20 09:29:32 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-20 09:29:32 -HTTP METHOD : GET
2019-06-20 09:29:32 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:29:32 -参数 : [userType]
2019-06-20 09:29:32 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:29:32 -==> Parameters: userType(String)
2019-06-20 09:29:32 -<==      Total: 4
2019-06-20 09:29:32 -耗时 : 43
2019-06-20 09:29:32 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:29:32 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:29:32 -==> Parameters: elecType(String)
2019-06-20 09:29:32 -<==      Total: 11
2019-06-20 09:29:32 -耗时 : 64
2019-06-20 09:29:32 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:29:44 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-06-20 09:29:44 -HTTP METHOD : GET
2019-06-20 09:29:44 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-06-20 09:29:44 -参数 : []
2019-06-20 09:29:44 -耗时 : 0
2019-06-20 09:29:44 -返回值 : system/dept/deptTree
2019-06-20 09:29:44 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-06-20 09:29:44 -HTTP METHOD : GET
2019-06-20 09:29:44 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-06-20 09:29:44 -参数 : []
2019-06-20 09:29:44 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-06-20 09:29:44 -==> Parameters: 
2019-06-20 09:29:44 -<==      Total: 3
2019-06-20 09:29:44 -耗时 : 23
2019-06-20 09:29:44 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-06-20 09:29:49 -请求地址 : http://localhost:8081/charts/tableElecMM/exportElecMM
2019-06-20 09:29:49 -HTTP METHOD : GET
2019-06-20 09:29:49 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.exportElecMM
2019-06-20 09:29:49 -参数 : [com.bootdo.elec.vo.ElecVo@2164e1bb, com.bootdo.moneyLog.vo.ElecLogVo@25efc2c6, org.apache.shiro.web.servlet.ShiroHttpServletResponse@2bfde174]
2019-06-20 09:29:50 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-06-20 09:29:50 -==> Parameters: 2019-05(String), 3(String), 2(String)
2019-06-20 09:29:50 -<==      Total: 29
2019-06-20 09:29:50 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `elec_sum` < 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-06-20 09:29:50 -==> Parameters: 2019-05(String), 3(String), 2(String)
2019-06-20 09:29:50 -<==      Total: 49
2019-06-20 09:29:50 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-06-20 09:29:50 -==> Parameters: 2019-05(String), 3(String), 2(String)
2019-06-20 09:29:50 -<==      Total: 13
2019-06-20 09:29:51 -耗时 : 1320
2019-06-20 09:29:51 -返回值 : null
2019-06-20 09:31:14 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-06-20 09:31:14 -HTTP METHOD : GET
2019-06-20 09:31:14 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-06-20 09:31:14 -参数 : []
2019-06-20 09:31:14 -耗时 : 11
2019-06-20 09:31:14 -返回值 : charts/tableHeatMM
2019-06-20 09:31:14 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-06-20 09:31:14 -HTTP METHOD : GET
2019-06-20 09:31:14 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:31:14 -参数 : [heatType]
2019-06-20 09:31:14 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-20 09:31:14 -HTTP METHOD : GET
2019-06-20 09:31:14 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:31:14 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:31:14 -参数 : [userType]
2019-06-20 09:31:14 -==> Parameters: heatType(String)
2019-06-20 09:31:14 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:31:14 -==> Parameters: userType(String)
2019-06-20 09:31:14 -<==      Total: 4
2019-06-20 09:31:14 -耗时 : 14
2019-06-20 09:31:14 -返回值 : [DictDO{id=184, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=183, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=182, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=181, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:31:15 -<==      Total: 4
2019-06-20 09:31:15 -耗时 : 331
2019-06-20 09:31:15 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:31:16 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-06-20 09:31:16 -HTTP METHOD : GET
2019-06-20 09:31:16 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-06-20 09:31:16 -参数 : []
2019-06-20 09:31:16 -耗时 : 0
2019-06-20 09:31:16 -返回值 : charts/tableElecMM
2019-06-20 09:31:16 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-20 09:31:16 -HTTP METHOD : GET
2019-06-20 09:31:16 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:31:16 -参数 : [userType]
2019-06-20 09:31:16 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:31:16 -==> Parameters: userType(String)
2019-06-20 09:31:16 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-06-20 09:31:16 -HTTP METHOD : GET
2019-06-20 09:31:16 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:31:16 -参数 : [elecType]
2019-06-20 09:31:16 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:31:16 -==> Parameters: elecType(String)
2019-06-20 09:31:16 -<==      Total: 4
2019-06-20 09:31:16 -耗时 : 15
2019-06-20 09:31:16 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:31:16 -<==      Total: 11
2019-06-20 09:31:16 -耗时 : 15
2019-06-20 09:31:16 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:33:25 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-06-20 09:33:25 -HTTP METHOD : GET
2019-06-20 09:33:25 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-06-20 09:33:25 -参数 : []
2019-06-20 09:33:25 -耗时 : 0
2019-06-20 09:33:25 -返回值 : charts/tableHeatMM
2019-06-20 09:33:25 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-06-20 09:33:25 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-20 09:33:25 -HTTP METHOD : GET
2019-06-20 09:33:25 -HTTP METHOD : GET
2019-06-20 09:33:25 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:33:25 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:33:25 -参数 : [heatType]
2019-06-20 09:33:25 -参数 : [userType]
2019-06-20 09:33:25 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:33:25 -==> Parameters: userType(String)
2019-06-20 09:33:25 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:33:25 -==> Parameters: heatType(String)
2019-06-20 09:33:25 -<==      Total: 4
2019-06-20 09:33:25 -耗时 : 6
2019-06-20 09:33:25 -返回值 : [DictDO{id=184, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=183, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=182, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=181, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:33:25 -<==      Total: 4
2019-06-20 09:33:25 -耗时 : 11
2019-06-20 09:33:25 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:33:26 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-06-20 09:33:26 -HTTP METHOD : GET
2019-06-20 09:33:26 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-06-20 09:33:26 -参数 : []
2019-06-20 09:33:26 -耗时 : 14
2019-06-20 09:33:26 -返回值 : charts/tableWaterMM
2019-06-20 09:33:26 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-20 09:33:26 -HTTP METHOD : GET
2019-06-20 09:33:26 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:33:26 -参数 : [userType]
2019-06-20 09:33:26 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:33:26 -==> Parameters: userType(String)
2019-06-20 09:33:26 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-06-20 09:33:26 -HTTP METHOD : GET
2019-06-20 09:33:26 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:33:26 -参数 : [waterType]
2019-06-20 09:33:26 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:33:26 -==> Parameters: waterType(String)
2019-06-20 09:33:26 -<==      Total: 4
2019-06-20 09:33:26 -耗时 : 6
2019-06-20 09:33:26 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:33:26 -<==      Total: 4
2019-06-20 09:33:26 -耗时 : 4
2019-06-20 09:33:26 -返回值 : [DictDO{id=188, name='民用水', value='1', type='waterType', description='水费性质', sort=10, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=187, name='商业水1', value='2', type='waterType', description='水费性质', sort=20, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=186, name='商业水2', value='3', type='waterType', description='水费性质', sort=30, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=185, name='商业水3', value='4', type='waterType', description='水费性质', sort=40, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:33:32 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-06-20 09:33:32 -HTTP METHOD : GET
2019-06-20 09:33:32 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-06-20 09:33:32 -参数 : []
2019-06-20 09:33:32 -耗时 : 0
2019-06-20 09:33:32 -返回值 : charts/tableHeatMM
2019-06-20 09:33:32 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-20 09:33:32 -HTTP METHOD : GET
2019-06-20 09:33:32 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:33:32 -参数 : [userType]
2019-06-20 09:33:32 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-06-20 09:33:32 -HTTP METHOD : GET
2019-06-20 09:33:32 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:33:32 -参数 : [heatType]
2019-06-20 09:33:32 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:33:32 -==> Parameters: userType(String)
2019-06-20 09:33:32 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:33:32 -==> Parameters: heatType(String)
2019-06-20 09:33:32 -<==      Total: 4
2019-06-20 09:33:32 -耗时 : 4
2019-06-20 09:33:32 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:33:32 -<==      Total: 4
2019-06-20 09:33:32 -耗时 : 7
2019-06-20 09:33:32 -返回值 : [DictDO{id=184, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=183, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=182, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=181, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:33:33 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-06-20 09:33:33 -HTTP METHOD : GET
2019-06-20 09:33:33 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-06-20 09:33:33 -参数 : []
2019-06-20 09:33:33 -耗时 : 0
2019-06-20 09:33:33 -返回值 : charts/tableElecMM
2019-06-20 09:33:33 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-20 09:33:33 -HTTP METHOD : GET
2019-06-20 09:33:33 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:33:33 -参数 : [userType]
2019-06-20 09:33:33 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:33:33 -==> Parameters: userType(String)
2019-06-20 09:33:33 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-06-20 09:33:33 -HTTP METHOD : GET
2019-06-20 09:33:33 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:33:33 -参数 : [elecType]
2019-06-20 09:33:33 -<==      Total: 4
2019-06-20 09:33:33 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:33:33 -==> Parameters: elecType(String)
2019-06-20 09:33:33 -耗时 : 5
2019-06-20 09:33:33 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:33:33 -<==      Total: 11
2019-06-20 09:33:33 -耗时 : 6
2019-06-20 09:33:33 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:33:33 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-06-20 09:33:33 -HTTP METHOD : GET
2019-06-20 09:33:33 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-06-20 09:33:33 -参数 : []
2019-06-20 09:33:33 -耗时 : 0
2019-06-20 09:33:33 -返回值 : charts/tableHeatMM
2019-06-20 09:33:33 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-20 09:33:33 -HTTP METHOD : GET
2019-06-20 09:33:33 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:33:33 -参数 : [userType]
2019-06-20 09:33:33 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-06-20 09:33:33 -HTTP METHOD : GET
2019-06-20 09:33:33 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:33:33 -参数 : [heatType]
2019-06-20 09:33:33 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:33:33 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:33:33 -==> Parameters: userType(String)
2019-06-20 09:33:33 -==> Parameters: heatType(String)
2019-06-20 09:33:33 -<==      Total: 4
2019-06-20 09:33:33 -<==      Total: 4
2019-06-20 09:33:33 -耗时 : 3
2019-06-20 09:33:33 -耗时 : 4
2019-06-20 09:33:33 -返回值 : [DictDO{id=184, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=183, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=182, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=181, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:33:33 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:33:34 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-06-20 09:33:34 -HTTP METHOD : GET
2019-06-20 09:33:34 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-06-20 09:33:34 -参数 : []
2019-06-20 09:33:34 -耗时 : 0
2019-06-20 09:33:34 -返回值 : charts/tableWaterMM
2019-06-20 09:33:34 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-20 09:33:34 -HTTP METHOD : GET
2019-06-20 09:33:34 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:33:34 -参数 : [userType]
2019-06-20 09:33:34 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:33:34 -==> Parameters: userType(String)
2019-06-20 09:33:34 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-06-20 09:33:34 -HTTP METHOD : GET
2019-06-20 09:33:34 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:33:34 -参数 : [waterType]
2019-06-20 09:33:34 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:33:34 -==> Parameters: waterType(String)
2019-06-20 09:33:34 -<==      Total: 4
2019-06-20 09:33:34 -耗时 : 4
2019-06-20 09:33:34 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:33:34 -<==      Total: 4
2019-06-20 09:33:34 -耗时 : 7
2019-06-20 09:33:34 -返回值 : [DictDO{id=188, name='民用水', value='1', type='waterType', description='水费性质', sort=10, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=187, name='商业水1', value='2', type='waterType', description='水费性质', sort=20, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=186, name='商业水2', value='3', type='waterType', description='水费性质', sort=30, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=185, name='商业水3', value='4', type='waterType', description='水费性质', sort=40, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:33:40 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-06-20 09:33:40 -HTTP METHOD : GET
2019-06-20 09:33:40 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-06-20 09:33:40 -参数 : []
2019-06-20 09:33:40 -耗时 : 0
2019-06-20 09:33:40 -返回值 : system/dept/deptTree
2019-06-20 09:33:40 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-06-20 09:33:40 -HTTP METHOD : GET
2019-06-20 09:33:40 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-06-20 09:33:40 -参数 : []
2019-06-20 09:33:40 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-06-20 09:33:40 -==> Parameters: 
2019-06-20 09:33:40 -<==      Total: 3
2019-06-20 09:33:40 -耗时 : 6
2019-06-20 09:33:40 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-06-20 09:33:42 -请求地址 : http://localhost:8081/charts/tableWaterMM/tableWaterMM
2019-06-20 09:33:42 -HTTP METHOD : POST
2019-06-20 09:33:42 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-06-20 09:33:42 -参数 : [com.bootdo.water.vo.WaterVo@6af062be, com.bootdo.moneyLog.vo.WaterLogVo@42466cf9]
2019-06-20 09:33:42 -==>  Preparing: select COUNT(*) from water WHERE `water_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and water_type = ? and user_org = ? 
2019-06-20 09:33:42 -==> Parameters: 2019-05(String), 1(String), 2(String)
2019-06-20 09:33:43 -<==      Total: 1
2019-06-20 09:33:43 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE `water_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and water_type = ? and user_org = ? 
2019-06-20 09:33:43 -==> Parameters: 2019-05(String), 1(String), 2(String)
2019-06-20 09:33:43 -<==      Total: 1
2019-06-20 09:33:43 -==>  Preparing: select COUNT(*) from water WHERE water_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and water_type = ? and user_org = ? 
2019-06-20 09:33:43 -==> Parameters: 2019-05(String), 1(String), 2(String)
2019-06-20 09:33:43 -<==      Total: 1
2019-06-20 09:33:43 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE water_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and water_type = ? and user_org = ? 
2019-06-20 09:33:43 -==> Parameters: 2019-05(String), 1(String), 2(String)
2019-06-20 09:33:43 -<==      Total: 1
2019-06-20 09:33:43 -==>  Preparing: select COUNT(ID) from water WHERE `create_time` = ? and water_type = ? and user_org = ? 
2019-06-20 09:33:43 -==> Parameters: 2019-05(String), 1(String), 2(String)
2019-06-20 09:33:43 -<==      Total: 1
2019-06-20 09:33:43 -==>  Preparing: select ifnull(SUM(water_cost),0) from water WHERE `create_time` = ? and water_type = ? and user_org = ? 
2019-06-20 09:33:43 -==> Parameters: 2019-05(String), 1(String), 2(String)
2019-06-20 09:33:43 -<==      Total: 1
2019-06-20 09:33:43 -==>  Preparing: select COUNT(ID) from water_log WHERE `create_time` = ? and water_type = ? and user_org = ? 
2019-06-20 09:33:43 -==> Parameters: 2019-05(String), 1(String), 2(String)
2019-06-20 09:33:43 -<==      Total: 1
2019-06-20 09:33:43 -==>  Preparing: select ifnull(SUM(water_money),0) from water_log WHERE `create_time` = ? and water_type = ? and user_org = ? 
2019-06-20 09:33:43 -==> Parameters: 2019-05(String), 1(String), 2(String)
2019-06-20 09:33:43 -<==      Total: 1
2019-06-20 09:33:43 -==>  Preparing: select COUNT(ID) from water WHERE `water_sum` >= 0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-06-20 09:33:43 -==> Parameters: 2019-05(String), 1(String), 2(String)
2019-06-20 09:33:43 -<==      Total: 1
2019-06-20 09:33:43 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE `water_sum` >= 0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-06-20 09:33:43 -==> Parameters: 2019-05(String), 1(String), 2(String)
2019-06-20 09:33:43 -<==      Total: 1
2019-06-20 09:33:43 -==>  Preparing: select COUNT(ID) from water WHERE water_sum <0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-06-20 09:33:43 -==> Parameters: 2019-05(String), 1(String), 2(String)
2019-06-20 09:33:43 -<==      Total: 1
2019-06-20 09:33:43 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE water_sum <0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-06-20 09:33:43 -==> Parameters: 2019-05(String), 1(String), 2(String)
2019-06-20 09:33:43 -<==      Total: 1
2019-06-20 09:33:43 -==>  Preparing: select COUNT(*) from water WHERE `water_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and water_type = ? and user_org = ? 
2019-06-20 09:33:43 -==> Parameters: 2019-05(String), 2(String), 2(String)
2019-06-20 09:33:43 -<==      Total: 1
2019-06-20 09:33:43 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE `water_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and water_type = ? and user_org = ? 
2019-06-20 09:33:43 -==> Parameters: 2019-05(String), 2(String), 2(String)
2019-06-20 09:33:43 -<==      Total: 1
2019-06-20 09:33:43 -==>  Preparing: select COUNT(*) from water WHERE water_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and water_type = ? and user_org = ? 
2019-06-20 09:33:43 -==> Parameters: 2019-05(String), 2(String), 2(String)
2019-06-20 09:33:43 -<==      Total: 1
2019-06-20 09:33:43 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE water_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and water_type = ? and user_org = ? 
2019-06-20 09:33:43 -==> Parameters: 2019-05(String), 2(String), 2(String)
2019-06-20 09:33:43 -<==      Total: 1
2019-06-20 09:33:43 -==>  Preparing: select COUNT(ID) from water WHERE `create_time` = ? and water_type = ? and user_org = ? 
2019-06-20 09:33:43 -==> Parameters: 2019-05(String), 2(String), 2(String)
2019-06-20 09:33:43 -<==      Total: 1
2019-06-20 09:33:43 -==>  Preparing: select ifnull(SUM(water_cost),0) from water WHERE `create_time` = ? and water_type = ? and user_org = ? 
2019-06-20 09:33:43 -==> Parameters: 2019-05(String), 2(String), 2(String)
2019-06-20 09:33:43 -<==      Total: 1
2019-06-20 09:33:43 -==>  Preparing: select COUNT(ID) from water_log WHERE `create_time` = ? and water_type = ? and user_org = ? 
2019-06-20 09:33:43 -==> Parameters: 2019-05(String), 2(String), 2(String)
2019-06-20 09:33:43 -<==      Total: 1
2019-06-20 09:33:43 -==>  Preparing: select ifnull(SUM(water_money),0) from water_log WHERE `create_time` = ? and water_type = ? and user_org = ? 
2019-06-20 09:33:43 -==> Parameters: 2019-05(String), 2(String), 2(String)
2019-06-20 09:33:43 -<==      Total: 1
2019-06-20 09:33:43 -==>  Preparing: select COUNT(ID) from water WHERE `water_sum` >= 0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-06-20 09:33:43 -==> Parameters: 2019-05(String), 2(String), 2(String)
2019-06-20 09:33:43 -<==      Total: 1
2019-06-20 09:33:43 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE `water_sum` >= 0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-06-20 09:33:43 -==> Parameters: 2019-05(String), 2(String), 2(String)
2019-06-20 09:33:43 -<==      Total: 1
2019-06-20 09:33:43 -==>  Preparing: select COUNT(ID) from water WHERE water_sum <0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-06-20 09:33:43 -==> Parameters: 2019-05(String), 2(String), 2(String)
2019-06-20 09:33:43 -<==      Total: 1
2019-06-20 09:33:43 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE water_sum <0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-06-20 09:33:43 -==> Parameters: 2019-05(String), 2(String), 2(String)
2019-06-20 09:33:43 -<==      Total: 1
2019-06-20 09:33:43 -==>  Preparing: select COUNT(*) from water WHERE `water_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and water_type = ? and user_org = ? 
2019-06-20 09:33:43 -==> Parameters: 2019-05(String), 3(String), 2(String)
2019-06-20 09:33:43 -<==      Total: 1
2019-06-20 09:33:43 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE `water_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and water_type = ? and user_org = ? 
2019-06-20 09:33:43 -==> Parameters: 2019-05(String), 3(String), 2(String)
2019-06-20 09:33:43 -<==      Total: 1
2019-06-20 09:33:43 -==>  Preparing: select COUNT(*) from water WHERE water_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and water_type = ? and user_org = ? 
2019-06-20 09:33:43 -==> Parameters: 2019-05(String), 3(String), 2(String)
2019-06-20 09:33:43 -<==      Total: 1
2019-06-20 09:33:43 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE water_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and water_type = ? and user_org = ? 
2019-06-20 09:33:43 -==> Parameters: 2019-05(String), 3(String), 2(String)
2019-06-20 09:33:43 -<==      Total: 1
2019-06-20 09:33:43 -==>  Preparing: select COUNT(ID) from water WHERE `create_time` = ? and water_type = ? and user_org = ? 
2019-06-20 09:33:43 -==> Parameters: 2019-05(String), 3(String), 2(String)
2019-06-20 09:33:43 -<==      Total: 1
2019-06-20 09:33:43 -==>  Preparing: select ifnull(SUM(water_cost),0) from water WHERE `create_time` = ? and water_type = ? and user_org = ? 
2019-06-20 09:33:43 -==> Parameters: 2019-05(String), 3(String), 2(String)
2019-06-20 09:33:43 -<==      Total: 1
2019-06-20 09:33:43 -==>  Preparing: select COUNT(ID) from water_log WHERE `create_time` = ? and water_type = ? and user_org = ? 
2019-06-20 09:33:43 -==> Parameters: 2019-05(String), 3(String), 2(String)
2019-06-20 09:33:43 -<==      Total: 1
2019-06-20 09:33:43 -==>  Preparing: select ifnull(SUM(water_money),0) from water_log WHERE `create_time` = ? and water_type = ? and user_org = ? 
2019-06-20 09:33:43 -==> Parameters: 2019-05(String), 3(String), 2(String)
2019-06-20 09:33:43 -<==      Total: 1
2019-06-20 09:33:43 -==>  Preparing: select COUNT(ID) from water WHERE `water_sum` >= 0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-06-20 09:33:43 -==> Parameters: 2019-05(String), 3(String), 2(String)
2019-06-20 09:33:43 -<==      Total: 1
2019-06-20 09:33:43 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE `water_sum` >= 0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-06-20 09:33:43 -==> Parameters: 2019-05(String), 3(String), 2(String)
2019-06-20 09:33:43 -<==      Total: 1
2019-06-20 09:33:43 -==>  Preparing: select COUNT(ID) from water WHERE water_sum <0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-06-20 09:33:43 -==> Parameters: 2019-05(String), 3(String), 2(String)
2019-06-20 09:33:43 -<==      Total: 1
2019-06-20 09:33:43 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE water_sum <0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-06-20 09:33:43 -==> Parameters: 2019-05(String), 3(String), 2(String)
2019-06-20 09:33:43 -<==      Total: 1
2019-06-20 09:33:43 -==>  Preparing: select COUNT(*) from water WHERE `water_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and water_type = ? and user_org = ? 
2019-06-20 09:33:43 -==> Parameters: 2019-05(String), 4(String), 2(String)
2019-06-20 09:33:43 -<==      Total: 1
2019-06-20 09:33:43 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE `water_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and water_type = ? and user_org = ? 
2019-06-20 09:33:43 -==> Parameters: 2019-05(String), 4(String), 2(String)
2019-06-20 09:33:43 -<==      Total: 1
2019-06-20 09:33:43 -==>  Preparing: select COUNT(*) from water WHERE water_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and water_type = ? and user_org = ? 
2019-06-20 09:33:43 -==> Parameters: 2019-05(String), 4(String), 2(String)
2019-06-20 09:33:43 -<==      Total: 1
2019-06-20 09:33:43 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE water_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and water_type = ? and user_org = ? 
2019-06-20 09:33:43 -==> Parameters: 2019-05(String), 4(String), 2(String)
2019-06-20 09:33:43 -<==      Total: 1
2019-06-20 09:33:43 -==>  Preparing: select COUNT(ID) from water WHERE `create_time` = ? and water_type = ? and user_org = ? 
2019-06-20 09:33:43 -==> Parameters: 2019-05(String), 4(String), 2(String)
2019-06-20 09:33:43 -<==      Total: 1
2019-06-20 09:33:43 -==>  Preparing: select ifnull(SUM(water_cost),0) from water WHERE `create_time` = ? and water_type = ? and user_org = ? 
2019-06-20 09:33:43 -==> Parameters: 2019-05(String), 4(String), 2(String)
2019-06-20 09:33:43 -<==      Total: 1
2019-06-20 09:33:43 -==>  Preparing: select COUNT(ID) from water_log WHERE `create_time` = ? and water_type = ? and user_org = ? 
2019-06-20 09:33:43 -==> Parameters: 2019-05(String), 4(String), 2(String)
2019-06-20 09:33:43 -<==      Total: 1
2019-06-20 09:33:43 -==>  Preparing: select ifnull(SUM(water_money),0) from water_log WHERE `create_time` = ? and water_type = ? and user_org = ? 
2019-06-20 09:33:43 -==> Parameters: 2019-05(String), 4(String), 2(String)
2019-06-20 09:33:43 -<==      Total: 1
2019-06-20 09:33:43 -==>  Preparing: select COUNT(ID) from water WHERE `water_sum` >= 0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-06-20 09:33:43 -==> Parameters: 2019-05(String), 4(String), 2(String)
2019-06-20 09:33:43 -<==      Total: 1
2019-06-20 09:33:43 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE `water_sum` >= 0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-06-20 09:33:43 -==> Parameters: 2019-05(String), 4(String), 2(String)
2019-06-20 09:33:43 -<==      Total: 1
2019-06-20 09:33:43 -==>  Preparing: select COUNT(ID) from water WHERE water_sum <0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-06-20 09:33:43 -==> Parameters: 2019-05(String), 4(String), 2(String)
2019-06-20 09:33:43 -<==      Total: 1
2019-06-20 09:33:43 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE water_sum <0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-06-20 09:33:43 -==> Parameters: 2019-05(String), 4(String), 2(String)
2019-06-20 09:33:43 -<==      Total: 1
2019-06-20 09:33:43 -==>  Preparing: select m_water,s1_water,s2_water,s3_water,water_org from water_price 
2019-06-20 09:33:43 -==> Parameters: 
2019-06-20 09:33:43 -<==      Total: 2
2019-06-20 09:33:43 -耗时 : 1211
2019-06-20 09:33:43 -返回值 : {MOweWaterSumMMOld=0, S3TotalhuNew=0, S3WaterCostMMCount=0, S1PreWaterSumMMNew=1440, S3WaterLogMMCount=0, MWaterCostMMSum=7270, S1PreWaterSumMMOld=0, type=2, S2OweWaterSumMMNew=0, TotalPreyuNew=45865, S3WaterLogMMSum=0, TotalCostyu=7560, S1WaterPrice=11, MWaterLogMMCount=32, S1TotalyuOld=0, S2OweWaterSumMMOld=0, TotalPreyuOld=0, S3TotalhuOld=0, TotalOwehuNew=178, TotalCosthu=1513, MOweWaterCountMMOld=0, S3OweWaterSumMMNew=0, MWaterCostMMCount=1455, TotalLogyu=1896, MOweWaterCountMMNew=164, S2TotalhuNew=0, MTotalyuOld=0, S2OweWaterCountMMOld=0, S3OweWaterCountMMNew=0, MWaterPrice=1, S1PreWaterCountMMNew=44, MTotalhuNew=1455, MTotalyuNew=39018, S1WaterLogMMSum=40, S3OweWaterCountMMOld=0, TotalLoghu=33, S2OweWaterCountMMNew=0, S1PreWaterCountMMOld=0, S3OweWaterSumMMOld=0, MOweWaterSumMMNew=-5407, S2TotalhuOld=0, S2TotalyuOld=0, TotalOweyuOld=0, S2WaterCostMMSum=0, MWaterLogMMSum=1856, S1OweWaterCountMMOld=0, MPreWaterCountMMOld=0, S3PreWaterCountMMOld=0, S3PreWaterSumMMOld=0, S2TotalyuNew=0, S1TotalhuNew=58, MTotalhuOld=0, S1OweWaterSumMMOld=0, S3PreWaterCountMMNew=0, S2WaterLogMMSum=0, MPreWaterCountMMNew=1291, S1TotalhuOld=0, S2WaterLogMMCount=0, TotalPrehuNew=1335, S1OweWaterSumMMNew=-510, S2WaterCostMMCount=0, S2PreWaterCountMMOld=0, MPreWaterSumMMOld=0, S3WaterCostMMSum=0, TotalOweyuNew=-5917, S1OweWaterCountMMNew=14, S2PreWaterCountMMNew=0, S3TotalyuOld=0, MPreWaterSumMMNew=44425, S3PreWaterSumMMNew=0, S3TotalyuNew=0, TotalPrehuOld=0, S2PreWaterSumMMNew=0, S2PreWaterSumMMOld=0, S1WaterLogMMCount=1, TotalOwehuOld=0, PriceTotal=12, S1WaterCostMMSum=290, S1TotalyuNew=930, TotalAllhuNew=1513, TotalAllyuNew=39948, TotalAllhuOld=0, S1WaterCostMMCount=58, TotalAllyuOld=0}
2019-06-20 09:34:02 -请求地址 : http://localhost:8081/charts/countYY
2019-06-20 09:34:02 -HTTP METHOD : GET
2019-06-20 09:34:02 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.countYY
2019-06-20 09:34:02 -参数 : []
2019-06-20 09:34:02 -耗时 : 1
2019-06-20 09:34:02 -返回值 : charts/countYY
2019-06-20 09:34:02 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-20 09:34:02 -HTTP METHOD : GET
2019-06-20 09:34:02 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:34:02 -参数 : [userType]
2019-06-20 09:34:02 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:34:02 -==> Parameters: userType(String)
2019-06-20 09:34:02 -<==      Total: 4
2019-06-20 09:34:02 -耗时 : 3
2019-06-20 09:34:02 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:34:04 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-06-20 09:34:04 -HTTP METHOD : GET
2019-06-20 09:34:04 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-06-20 09:34:04 -参数 : []
2019-06-20 09:34:04 -耗时 : 13
2019-06-20 09:34:04 -返回值 : charts/tableElecYY
2019-06-20 09:34:05 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-20 09:34:05 -HTTP METHOD : GET
2019-06-20 09:34:05 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:34:05 -参数 : [userType]
2019-06-20 09:34:05 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:34:05 -==> Parameters: userType(String)
2019-06-20 09:34:05 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-06-20 09:34:05 -HTTP METHOD : GET
2019-06-20 09:34:05 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:34:05 -参数 : [elecType]
2019-06-20 09:34:05 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:34:05 -<==      Total: 4
2019-06-20 09:34:05 -==> Parameters: elecType(String)
2019-06-20 09:34:05 -耗时 : 4
2019-06-20 09:34:05 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:34:05 -<==      Total: 11
2019-06-20 09:34:05 -耗时 : 4
2019-06-20 09:34:05 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:34:07 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-06-20 09:34:07 -HTTP METHOD : GET
2019-06-20 09:34:07 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-06-20 09:34:07 -参数 : []
2019-06-20 09:34:07 -耗时 : 9
2019-06-20 09:34:07 -返回值 : charts/tableHeatYY
2019-06-20 09:34:07 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-20 09:34:07 -HTTP METHOD : GET
2019-06-20 09:34:07 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:34:07 -参数 : [userType]
2019-06-20 09:34:07 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:34:07 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-06-20 09:34:07 -HTTP METHOD : GET
2019-06-20 09:34:07 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:34:07 -参数 : [heatType]
2019-06-20 09:34:07 -==> Parameters: userType(String)
2019-06-20 09:34:07 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:34:07 -==> Parameters: heatType(String)
2019-06-20 09:34:07 -<==      Total: 4
2019-06-20 09:34:07 -耗时 : 4
2019-06-20 09:34:07 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:34:07 -<==      Total: 4
2019-06-20 09:34:07 -耗时 : 7
2019-06-20 09:34:07 -返回值 : [DictDO{id=184, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=183, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=182, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=181, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:34:10 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-06-20 09:34:10 -HTTP METHOD : GET
2019-06-20 09:34:10 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-06-20 09:34:10 -参数 : []
2019-06-20 09:34:10 -耗时 : 1
2019-06-20 09:34:10 -返回值 : charts/tableElecYY
2019-06-20 09:34:10 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-20 09:34:10 -HTTP METHOD : GET
2019-06-20 09:34:10 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:34:10 -参数 : [userType]
2019-06-20 09:34:10 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:34:10 -==> Parameters: userType(String)
2019-06-20 09:34:10 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-06-20 09:34:10 -HTTP METHOD : GET
2019-06-20 09:34:10 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:34:10 -参数 : [elecType]
2019-06-20 09:34:10 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:34:10 -==> Parameters: elecType(String)
2019-06-20 09:34:10 -<==      Total: 4
2019-06-20 09:34:10 -耗时 : 4
2019-06-20 09:34:10 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:34:10 -<==      Total: 11
2019-06-20 09:34:10 -耗时 : 4
2019-06-20 09:34:10 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:34:11 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-06-20 09:34:11 -HTTP METHOD : GET
2019-06-20 09:34:11 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-06-20 09:34:11 -参数 : []
2019-06-20 09:34:11 -耗时 : 11
2019-06-20 09:34:11 -返回值 : charts/tableWaterYY
2019-06-20 09:34:11 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-20 09:34:11 -HTTP METHOD : GET
2019-06-20 09:34:11 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:34:11 -参数 : [userType]
2019-06-20 09:34:11 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:34:11 -==> Parameters: userType(String)
2019-06-20 09:34:11 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-06-20 09:34:11 -HTTP METHOD : GET
2019-06-20 09:34:11 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:34:11 -参数 : [waterType]
2019-06-20 09:34:11 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:34:11 -==> Parameters: waterType(String)
2019-06-20 09:34:11 -<==      Total: 4
2019-06-20 09:34:11 -耗时 : 4
2019-06-20 09:34:11 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:34:11 -<==      Total: 4
2019-06-20 09:34:11 -耗时 : 3
2019-06-20 09:34:11 -返回值 : [DictDO{id=188, name='民用水', value='1', type='waterType', description='水费性质', sort=10, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=187, name='商业水1', value='2', type='waterType', description='水费性质', sort=20, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=186, name='商业水2', value='3', type='waterType', description='水费性质', sort=30, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=185, name='商业水3', value='4', type='waterType', description='水费性质', sort=40, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:34:14 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-06-20 09:34:14 -HTTP METHOD : GET
2019-06-20 09:34:14 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-06-20 09:34:14 -参数 : []
2019-06-20 09:34:14 -耗时 : 0
2019-06-20 09:34:14 -返回值 : charts/tableHeatYY
2019-06-20 09:34:14 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-06-20 09:34:14 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-20 09:34:14 -HTTP METHOD : GET
2019-06-20 09:34:14 -HTTP METHOD : GET
2019-06-20 09:34:14 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:34:14 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:34:14 -参数 : [heatType]
2019-06-20 09:34:14 -参数 : [userType]
2019-06-20 09:34:14 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:34:14 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:34:14 -==> Parameters: heatType(String)
2019-06-20 09:34:14 -==> Parameters: userType(String)
2019-06-20 09:34:14 -<==      Total: 4
2019-06-20 09:34:14 -<==      Total: 4
2019-06-20 09:34:14 -耗时 : 3
2019-06-20 09:34:14 -耗时 : 3
2019-06-20 09:34:14 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:34:14 -返回值 : [DictDO{id=184, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=183, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=182, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=181, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:34:16 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-06-20 09:34:16 -HTTP METHOD : GET
2019-06-20 09:34:16 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-06-20 09:34:16 -参数 : []
2019-06-20 09:34:16 -耗时 : 0
2019-06-20 09:34:16 -返回值 : charts/tableElecYY
2019-06-20 09:34:17 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-06-20 09:34:17 -HTTP METHOD : GET
2019-06-20 09:34:17 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:34:17 -参数 : [elecType]
2019-06-20 09:34:17 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-20 09:34:17 -HTTP METHOD : GET
2019-06-20 09:34:17 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:34:17 -参数 : [userType]
2019-06-20 09:34:17 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:34:17 -==> Parameters: elecType(String)
2019-06-20 09:34:17 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:34:17 -==> Parameters: userType(String)
2019-06-20 09:34:17 -<==      Total: 4
2019-06-20 09:34:17 -耗时 : 5
2019-06-20 09:34:17 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:34:17 -<==      Total: 11
2019-06-20 09:34:17 -耗时 : 5
2019-06-20 09:34:17 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:34:30 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-06-20 09:34:30 -HTTP METHOD : GET
2019-06-20 09:34:30 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-06-20 09:34:30 -参数 : []
2019-06-20 09:34:30 -耗时 : 0
2019-06-20 09:34:30 -返回值 : charts/tableHeatYY
2019-06-20 09:34:30 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-20 09:34:30 -HTTP METHOD : GET
2019-06-20 09:34:30 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:34:30 -参数 : [userType]
2019-06-20 09:34:30 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-06-20 09:34:30 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:34:30 -HTTP METHOD : GET
2019-06-20 09:34:30 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:34:30 -参数 : [heatType]
2019-06-20 09:34:30 -==> Parameters: userType(String)
2019-06-20 09:34:30 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:34:30 -==> Parameters: heatType(String)
2019-06-20 09:34:30 -<==      Total: 4
2019-06-20 09:34:30 -耗时 : 4
2019-06-20 09:34:30 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:34:30 -<==      Total: 4
2019-06-20 09:34:30 -耗时 : 5
2019-06-20 09:34:30 -返回值 : [DictDO{id=184, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=183, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=182, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=181, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:34:31 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-06-20 09:34:31 -HTTP METHOD : GET
2019-06-20 09:34:31 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-06-20 09:34:31 -参数 : []
2019-06-20 09:34:31 -耗时 : 0
2019-06-20 09:34:31 -返回值 : charts/tableWaterYY
2019-06-20 09:34:31 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-20 09:34:31 -HTTP METHOD : GET
2019-06-20 09:34:31 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:34:31 -参数 : [userType]
2019-06-20 09:34:31 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-06-20 09:34:31 -HTTP METHOD : GET
2019-06-20 09:34:31 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:34:31 -参数 : [waterType]
2019-06-20 09:34:31 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:34:31 -==> Parameters: userType(String)
2019-06-20 09:34:31 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:34:31 -==> Parameters: waterType(String)
2019-06-20 09:34:31 -<==      Total: 4
2019-06-20 09:34:31 -<==      Total: 4
2019-06-20 09:34:31 -耗时 : 6
2019-06-20 09:34:31 -返回值 : [DictDO{id=188, name='民用水', value='1', type='waterType', description='水费性质', sort=10, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=187, name='商业水1', value='2', type='waterType', description='水费性质', sort=20, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=186, name='商业水2', value='3', type='waterType', description='水费性质', sort=30, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=185, name='商业水3', value='4', type='waterType', description='水费性质', sort=40, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:34:31 -耗时 : 6
2019-06-20 09:34:31 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:34:32 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-06-20 09:34:32 -HTTP METHOD : GET
2019-06-20 09:34:32 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-06-20 09:34:32 -参数 : []
2019-06-20 09:34:32 -耗时 : 0
2019-06-20 09:34:32 -返回值 : charts/tableElecYY
2019-06-20 09:34:32 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-06-20 09:34:32 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-20 09:34:32 -HTTP METHOD : GET
2019-06-20 09:34:32 -HTTP METHOD : GET
2019-06-20 09:34:32 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:34:32 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:34:32 -参数 : [elecType]
2019-06-20 09:34:32 -参数 : [userType]
2019-06-20 09:34:32 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:34:32 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:34:32 -==> Parameters: userType(String)
2019-06-20 09:34:32 -==> Parameters: elecType(String)
2019-06-20 09:34:32 -<==      Total: 4
2019-06-20 09:34:32 -耗时 : 5
2019-06-20 09:34:32 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:34:32 -<==      Total: 11
2019-06-20 09:34:32 -耗时 : 10
2019-06-20 09:34:32 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:34:32 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-06-20 09:34:32 -HTTP METHOD : GET
2019-06-20 09:34:32 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-06-20 09:34:32 -参数 : []
2019-06-20 09:34:32 -耗时 : 0
2019-06-20 09:34:32 -返回值 : charts/tableHeatYY
2019-06-20 09:34:32 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-20 09:34:32 -HTTP METHOD : GET
2019-06-20 09:34:32 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:34:32 -参数 : [userType]
2019-06-20 09:34:32 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:34:32 -==> Parameters: userType(String)
2019-06-20 09:34:32 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-06-20 09:34:32 -HTTP METHOD : GET
2019-06-20 09:34:32 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:34:32 -参数 : [heatType]
2019-06-20 09:34:32 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:34:32 -==> Parameters: heatType(String)
2019-06-20 09:34:32 -<==      Total: 4
2019-06-20 09:34:32 -耗时 : 4
2019-06-20 09:34:32 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:34:32 -<==      Total: 4
2019-06-20 09:34:32 -耗时 : 6
2019-06-20 09:34:32 -返回值 : [DictDO{id=184, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=183, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=182, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=181, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:34:33 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-06-20 09:34:33 -HTTP METHOD : GET
2019-06-20 09:34:33 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-06-20 09:34:33 -参数 : []
2019-06-20 09:34:33 -耗时 : 0
2019-06-20 09:34:33 -返回值 : charts/tableWaterYY
2019-06-20 09:34:33 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-20 09:34:33 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-06-20 09:34:33 -HTTP METHOD : GET
2019-06-20 09:34:33 -HTTP METHOD : GET
2019-06-20 09:34:33 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:34:33 -参数 : [userType]
2019-06-20 09:34:33 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:34:33 -参数 : [waterType]
2019-06-20 09:34:33 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:34:33 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:34:33 -==> Parameters: waterType(String)
2019-06-20 09:34:33 -==> Parameters: userType(String)
2019-06-20 09:34:33 -<==      Total: 4
2019-06-20 09:34:33 -<==      Total: 4
2019-06-20 09:34:33 -耗时 : 3
2019-06-20 09:34:33 -耗时 : 4
2019-06-20 09:34:33 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:34:33 -返回值 : [DictDO{id=188, name='民用水', value='1', type='waterType', description='水费性质', sort=10, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=187, name='商业水1', value='2', type='waterType', description='水费性质', sort=20, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=186, name='商业水2', value='3', type='waterType', description='水费性质', sort=30, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=185, name='商业水3', value='4', type='waterType', description='水费性质', sort=40, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:34:33 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-06-20 09:34:33 -HTTP METHOD : GET
2019-06-20 09:34:33 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-06-20 09:34:33 -参数 : []
2019-06-20 09:34:33 -耗时 : 0
2019-06-20 09:34:33 -返回值 : charts/tableHeatYY
2019-06-20 09:34:34 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-06-20 09:34:34 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-20 09:34:34 -HTTP METHOD : GET
2019-06-20 09:34:34 -HTTP METHOD : GET
2019-06-20 09:34:34 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:34:34 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:34:34 -参数 : [heatType]
2019-06-20 09:34:34 -参数 : [userType]
2019-06-20 09:34:34 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:34:34 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:34:34 -==> Parameters: userType(String)
2019-06-20 09:34:34 -==> Parameters: heatType(String)
2019-06-20 09:34:34 -<==      Total: 4
2019-06-20 09:34:34 -<==      Total: 4
2019-06-20 09:34:34 -耗时 : 3
2019-06-20 09:34:34 -耗时 : 3
2019-06-20 09:34:34 -返回值 : [DictDO{id=184, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=183, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=182, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=181, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:34:34 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:34:34 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-06-20 09:34:34 -HTTP METHOD : GET
2019-06-20 09:34:34 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-06-20 09:34:34 -参数 : []
2019-06-20 09:34:34 -耗时 : 1
2019-06-20 09:34:34 -返回值 : charts/tableElecYY
2019-06-20 09:34:34 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-20 09:34:34 -HTTP METHOD : GET
2019-06-20 09:34:34 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:34:34 -参数 : [userType]
2019-06-20 09:34:34 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:34:34 -==> Parameters: userType(String)
2019-06-20 09:34:34 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-06-20 09:34:34 -HTTP METHOD : GET
2019-06-20 09:34:34 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:34:34 -参数 : [elecType]
2019-06-20 09:34:34 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:34:34 -==> Parameters: elecType(String)
2019-06-20 09:34:34 -<==      Total: 4
2019-06-20 09:34:34 -耗时 : 6
2019-06-20 09:34:34 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:34:34 -<==      Total: 11
2019-06-20 09:34:34 -耗时 : 12
2019-06-20 09:34:34 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:34:41 -请求地址 : http://localhost:8081/print/print
2019-06-20 09:34:41 -HTTP METHOD : GET
2019-06-20 09:34:41 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-06-20 09:34:41 -参数 : []
2019-06-20 09:34:41 -耗时 : 1
2019-06-20 09:34:41 -返回值 : print/print/print
2019-06-20 09:34:41 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-20 09:34:41 -HTTP METHOD : GET
2019-06-20 09:34:41 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:34:41 -参数 : [userType]
2019-06-20 09:34:41 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:34:41 -==> Parameters: userType(String)
2019-06-20 09:34:41 -<==      Total: 4
2019-06-20 09:34:41 -耗时 : 3
2019-06-20 09:34:41 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:34:41 -请求地址 : http://localhost:8081/print/print/list
2019-06-20 09:34:41 -HTTP METHOD : GET
2019-06-20 09:34:41 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-06-20 09:34:41 -参数 : [{limit=100, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-06-20 09:34:41 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-06-20 09:34:41 -==> Parameters: 0(Integer), 100(Integer)
2019-06-20 09:34:42 -<==      Total: 9
2019-06-20 09:34:42 -==>  Preparing: select count(*) from print 
2019-06-20 09:34:42 -==> Parameters: 
2019-06-20 09:34:42 -<==      Total: 1
2019-06-20 09:34:42 -耗时 : 288
2019-06-20 09:34:42 -返回值 : com.bootdo.common.utils.PageUtils@658a48c4
2019-06-20 09:35:53 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-06-20 09:35:53 -HTTP METHOD : GET
2019-06-20 09:35:53 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-06-20 09:35:53 -参数 : []
2019-06-20 09:35:53 -耗时 : 1
2019-06-20 09:35:53 -返回值 : moneyList/moneyList
2019-06-20 09:35:54 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-06-20 09:35:54 -HTTP METHOD : GET
2019-06-20 09:35:54 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-06-20 09:35:54 -参数 : []
2019-06-20 09:35:54 -耗时 : 1
2019-06-20 09:35:54 -返回值 : moneyLog/elecLog/elecLog
2019-06-20 09:35:54 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-20 09:35:54 -HTTP METHOD : GET
2019-06-20 09:35:54 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:35:54 -参数 : [userType]
2019-06-20 09:35:54 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-06-20 09:35:54 -HTTP METHOD : GET
2019-06-20 09:35:54 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:35:54 -参数 : [elecType]
2019-06-20 09:35:54 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:35:54 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:35:54 -==> Parameters: elecType(String)
2019-06-20 09:35:54 -==> Parameters: userType(String)
2019-06-20 09:35:54 -<==      Total: 4
2019-06-20 09:35:54 -耗时 : 5
2019-06-20 09:35:54 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:35:54 -<==      Total: 11
2019-06-20 09:35:54 -耗时 : 6
2019-06-20 09:35:54 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:35:54 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-06-20 09:35:54 -HTTP METHOD : GET
2019-06-20 09:35:54 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-06-20 09:35:54 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, elecDate=}]
2019-06-20 09:35:54 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-06-20 09:35:54 -==> Parameters: 0(Integer), 10(Integer)
2019-06-20 09:35:55 -<==      Total: 10
2019-06-20 09:35:55 -==>  Preparing: select count(*) from elec_log 
2019-06-20 09:35:55 -==> Parameters: 
2019-06-20 09:35:55 -<==      Total: 1
2019-06-20 09:35:55 -耗时 : 144
2019-06-20 09:35:55 -返回值 : com.bootdo.common.utils.PageUtils@72ac9c47
2019-06-20 09:36:02 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-20 09:36:02 -HTTP METHOD : GET
2019-06-20 09:36:02 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:36:02 -参数 : [userType]
2019-06-20 09:36:02 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:36:02 -==> Parameters: userType(String)
2019-06-20 09:36:02 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-06-20 09:36:02 -HTTP METHOD : GET
2019-06-20 09:36:02 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:36:02 -参数 : [elecType]
2019-06-20 09:36:02 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:36:02 -==> Parameters: elecType(String)
2019-06-20 09:36:02 -<==      Total: 4
2019-06-20 09:36:02 -耗时 : 3
2019-06-20 09:36:02 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:36:02 -<==      Total: 11
2019-06-20 09:36:02 -耗时 : 4
2019-06-20 09:36:02 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:36:03 -请求地址 : http://localhost:8081/moneyList/moneyWZ
2019-06-20 09:36:03 -HTTP METHOD : GET
2019-06-20 09:36:03 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ
2019-06-20 09:36:03 -参数 : []
2019-06-20 09:36:03 -耗时 : 0
2019-06-20 09:36:03 -返回值 : moneyList/moneyWZ
2019-06-20 09:36:03 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-20 09:36:03 -HTTP METHOD : GET
2019-06-20 09:36:03 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:36:03 -参数 : [userType]
2019-06-20 09:36:03 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:36:03 -==> Parameters: userType(String)
2019-06-20 09:36:03 -<==      Total: 4
2019-06-20 09:36:03 -耗时 : 4
2019-06-20 09:36:03 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:36:03 -请求地址 : http://localhost:8081/moneyList/moneyWZ/list
2019-06-20 09:36:03 -HTTP METHOD : GET
2019-06-20 09:36:03 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.list
2019-06-20 09:36:03 -参数 : [{limit=100, offset=0, createTime=, userType=, userId=, queryType=1}, com.bootdo.elec.domain.ElecDO@2d70f8db]
2019-06-20 09:36:03 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `user_id` LIKE 'W%' and user_org = '2' order by id asc limit ?, ? 
2019-06-20 09:36:03 -==> Parameters: 0(Integer), 100(Integer)
2019-06-20 09:36:03 -<==      Total: 100
2019-06-20 09:36:03 -==>  Preparing: select count(*) from elec WHERE `user_id` LIKE 'W%' and user_org = '2' 
2019-06-20 09:36:03 -==> Parameters: 
2019-06-20 09:36:03 -<==      Total: 1
2019-06-20 09:36:03 -耗时 : 93
2019-06-20 09:36:03 -返回值 : com.bootdo.common.utils.PageUtils@33646f13
2019-06-20 09:36:33 -请求地址 : http://localhost:8081/elec/elecInto
2019-06-20 09:36:33 -HTTP METHOD : GET
2019-06-20 09:36:33 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.ElecInto
2019-06-20 09:36:33 -参数 : []
2019-06-20 09:36:33 -耗时 : 1
2019-06-20 09:36:33 -返回值 : elec/elecInto/elecInto
2019-06-20 09:37:52 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-06-20 09:37:52 -HTTP METHOD : GET
2019-06-20 09:37:52 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:37:52 -参数 : [heatType]
2019-06-20 09:37:52 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-20 09:37:52 -HTTP METHOD : GET
2019-06-20 09:37:52 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:37:52 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:37:52 -参数 : [userType]
2019-06-20 09:37:52 -==> Parameters: heatType(String)
2019-06-20 09:37:52 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:37:52 -==> Parameters: userType(String)
2019-06-20 09:37:52 -<==      Total: 4
2019-06-20 09:37:52 -<==      Total: 4
2019-06-20 09:37:52 -耗时 : 6
2019-06-20 09:37:52 -耗时 : 5
2019-06-20 09:37:52 -返回值 : [DictDO{id=184, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=183, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=182, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=181, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:37:52 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:37:53 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-20 09:37:53 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-06-20 09:37:53 -HTTP METHOD : GET
2019-06-20 09:37:53 -HTTP METHOD : GET
2019-06-20 09:37:53 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:37:53 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:37:53 -参数 : [userType]
2019-06-20 09:37:53 -参数 : [waterType]
2019-06-20 09:37:53 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:37:53 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:37:53 -==> Parameters: waterType(String)
2019-06-20 09:37:53 -<==      Total: 4
2019-06-20 09:37:53 -耗时 : 4
2019-06-20 09:37:53 -==> Parameters: userType(String)
2019-06-20 09:37:53 -返回值 : [DictDO{id=188, name='民用水', value='1', type='waterType', description='水费性质', sort=10, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=187, name='商业水1', value='2', type='waterType', description='水费性质', sort=20, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=186, name='商业水2', value='3', type='waterType', description='水费性质', sort=30, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=185, name='商业水3', value='4', type='waterType', description='水费性质', sort=40, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:37:53 -<==      Total: 4
2019-06-20 09:37:53 -耗时 : 9
2019-06-20 09:37:53 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:37:54 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-06-20 09:37:54 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-20 09:37:54 -HTTP METHOD : GET
2019-06-20 09:37:54 -HTTP METHOD : GET
2019-06-20 09:37:54 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:37:54 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:37:54 -参数 : [heatType]
2019-06-20 09:37:54 -参数 : [userType]
2019-06-20 09:37:54 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:37:54 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:37:54 -==> Parameters: heatType(String)
2019-06-20 09:37:54 -==> Parameters: userType(String)
2019-06-20 09:37:54 -<==      Total: 4
2019-06-20 09:37:54 -<==      Total: 4
2019-06-20 09:37:54 -耗时 : 4
2019-06-20 09:37:54 -耗时 : 4
2019-06-20 09:37:54 -返回值 : [DictDO{id=184, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=183, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=182, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=181, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:37:54 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:37:54 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-20 09:37:54 -HTTP METHOD : GET
2019-06-20 09:37:54 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:37:54 -参数 : [userType]
2019-06-20 09:37:54 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:37:54 -==> Parameters: userType(String)
2019-06-20 09:37:54 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-06-20 09:37:54 -HTTP METHOD : GET
2019-06-20 09:37:54 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:37:54 -参数 : [elecType]
2019-06-20 09:37:54 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:37:54 -==> Parameters: elecType(String)
2019-06-20 09:37:54 -<==      Total: 4
2019-06-20 09:37:54 -耗时 : 4
2019-06-20 09:37:54 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:37:54 -<==      Total: 11
2019-06-20 09:37:54 -耗时 : 9
2019-06-20 09:37:54 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:44:41 -请求地址 : http://localhost:8081/
2019-06-20 09:44:41 -HTTP METHOD : GET
2019-06-20 09:44:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2019-06-20 09:44:41 -参数 : [{}]
2019-06-20 09:44:41 -耗时 : 1
2019-06-20 09:44:41 -返回值 : redirect:/index
2019-06-20 09:44:43 -请求地址 : http://localhost:8081/login;JSESSIONID=3cc348b7-ab33-4116-b6db-7a32449a4b94
2019-06-20 09:44:43 -HTTP METHOD : GET
2019-06-20 09:44:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-06-20 09:44:43 -参数 : [{}]
2019-06-20 09:44:43 -耗时 : 1
2019-06-20 09:44:43 -返回值 : login
2019-06-20 09:44:54 -请求地址 : http://localhost:8081/getVerify
2019-06-20 09:44:54 -HTTP METHOD : GET
2019-06-20 09:44:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-06-20 09:44:54 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@53c3b34b, org.apache.shiro.web.servlet.ShiroHttpServletResponse@36e31a79]
2019-06-20 09:44:59 -4982
2019-06-20 09:45:01 -耗时 : 7024
2019-06-20 09:45:01 -返回值 : null
2019-06-20 09:45:01 -请求地址 : http://localhost:8081/login
2019-06-20 09:45:01 -HTTP METHOD : GET
2019-06-20 09:45:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-06-20 09:45:01 -参数 : [{}]
2019-06-20 09:45:01 -耗时 : 0
2019-06-20 09:45:01 -返回值 : login
2019-06-20 09:45:11 -请求地址 : http://localhost:8081/login
2019-06-20 09:45:11 -HTTP METHOD : POST
2019-06-20 09:45:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-06-20 09:45:11 -参数 : [admin, 111111, 4982, org.apache.shiro.web.servlet.ShiroHttpServletRequest@14cc52ff]
2019-06-20 09:45:12 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-06-20 09:45:12 -==> Parameters: admin(String)
2019-06-20 09:45:12 -<==      Total: 1
2019-06-20 09:45:12 -耗时 : 606
2019-06-20 09:45:12 -返回值 : {msg=操作成功, code=0}
2019-06-20 09:45:12 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-20 09:45:12 -==> Parameters: 1(Long), admin(String), 登录(String), 606(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-06-20 09:45:12.666(Timestamp)
2019-06-20 09:45:13 -请求地址 : http://localhost:8081/index
2019-06-20 09:45:13 -HTTP METHOD : GET
2019-06-20 09:45:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-20 09:45:13 -参数 : [{}]
2019-06-20 09:45:13 -<==    Updates: 1
2019-06-20 09:45:13 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-20 09:45:13 -==> Parameters: 1(Long)
2019-06-20 09:45:13 -<==      Total: 51
2019-06-20 09:45:13 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-20 09:45:13 -==> Parameters: 138(Long)
2019-06-20 09:45:13 -<==      Total: 1
2019-06-20 09:45:13 -耗时 : 660
2019-06-20 09:45:13 -返回值 : index_v1
2019-06-20 09:45:13 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-20 09:45:13 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 661(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-bullseye","url":"/moneyUpLoad/ElecLogUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"165","parentId":"106","text":"缴费上传"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":tru(String), 127.0.0.1(String), 2019-06-20 09:45:13.873(Timestamp)
2019-06-20 09:45:14 -<==    Updates: 1
2019-06-20 09:45:14 -请求地址 : http://localhost:8081/main
2019-06-20 09:45:14 -HTTP METHOD : GET
2019-06-20 09:45:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-20 09:45:14 -参数 : []
2019-06-20 09:45:14 -耗时 : 0
2019-06-20 09:45:14 -返回值 : main
2019-06-20 09:45:16 -请求地址 : http://localhost:8081/main
2019-06-20 09:45:16 -HTTP METHOD : GET
2019-06-20 09:45:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-20 09:45:16 -参数 : []
2019-06-20 09:45:16 -耗时 : 0
2019-06-20 09:45:16 -返回值 : main
2019-06-20 09:45:16 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-20 09:45:16 -HTTP METHOD : GET
2019-06-20 09:45:16 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-20 09:45:16 -参数 : []
2019-06-20 09:45:16 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-20 09:45:16 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-20 09:45:17 -<==      Total: 0
2019-06-20 09:45:17 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-20 09:45:17 -==> Parameters: 1(Long), 0(String)
2019-06-20 09:45:17 -<==      Total: 1
2019-06-20 09:45:17 -耗时 : 660
2019-06-20 09:45:17 -返回值 : com.bootdo.common.utils.PageUtils@2ba7b173
2019-06-20 09:45:38 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-06-20 09:45:38 -==> Parameters: 1(Long)
2019-06-20 09:45:38 -<==      Total: 95
2019-06-20 09:45:38 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-06-20 09:45:38 -HTTP METHOD : GET
2019-06-20 09:45:38 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-06-20 09:45:38 -参数 : []
2019-06-20 09:45:38 -耗时 : 0
2019-06-20 09:45:38 -返回值 : moneyList/moneyList
2019-06-20 09:45:42 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-06-20 09:45:42 -HTTP METHOD : GET
2019-06-20 09:45:42 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-06-20 09:45:42 -参数 : []
2019-06-20 09:45:42 -耗时 : 0
2019-06-20 09:45:42 -返回值 : moneyLog/elecLog/elecLog
2019-06-20 09:45:43 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-20 09:45:43 -HTTP METHOD : GET
2019-06-20 09:45:43 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:45:43 -参数 : [userType]
2019-06-20 09:45:43 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:45:43 -==> Parameters: userType(String)
2019-06-20 09:45:43 -<==      Total: 4
2019-06-20 09:45:43 -耗时 : 5
2019-06-20 09:45:43 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:45:43 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-06-20 09:45:43 -HTTP METHOD : GET
2019-06-20 09:45:43 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:45:43 -参数 : [elecType]
2019-06-20 09:45:43 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:45:43 -==> Parameters: elecType(String)
2019-06-20 09:45:43 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-06-20 09:45:43 -HTTP METHOD : GET
2019-06-20 09:45:43 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-06-20 09:45:43 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, elecDate=}]
2019-06-20 09:45:43 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-06-20 09:45:43 -==> Parameters: 0(Integer), 10(Integer)
2019-06-20 09:45:43 -<==      Total: 11
2019-06-20 09:45:43 -<==      Total: 10
2019-06-20 09:45:43 -耗时 : 129
2019-06-20 09:45:43 -==>  Preparing: select count(*) from elec_log 
2019-06-20 09:45:43 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:45:43 -==> Parameters: 
2019-06-20 09:45:43 -<==      Total: 1
2019-06-20 09:45:43 -耗时 : 29
2019-06-20 09:45:43 -返回值 : com.bootdo.common.utils.PageUtils@128e5898
2019-06-20 09:45:46 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-06-20 09:45:46 -HTTP METHOD : GET
2019-06-20 09:45:46 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-06-20 09:45:46 -参数 : []
2019-06-20 09:45:46 -耗时 : 1
2019-06-20 09:45:46 -返回值 : moneyLog/heatLog/heatLog
2019-06-20 09:45:46 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-20 09:45:46 -HTTP METHOD : GET
2019-06-20 09:45:46 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:45:46 -参数 : [userType]
2019-06-20 09:45:46 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-06-20 09:45:46 -HTTP METHOD : GET
2019-06-20 09:45:46 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:45:46 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:45:46 -参数 : [heatType]
2019-06-20 09:45:46 -==> Parameters: userType(String)
2019-06-20 09:45:46 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:45:46 -==> Parameters: heatType(String)
2019-06-20 09:45:46 -<==      Total: 4
2019-06-20 09:45:46 -<==      Total: 4
2019-06-20 09:45:46 -耗时 : 3
2019-06-20 09:45:46 -耗时 : 4
2019-06-20 09:45:46 -返回值 : [DictDO{id=184, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=183, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=182, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=181, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:45:46 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:45:46 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-06-20 09:45:46 -HTTP METHOD : GET
2019-06-20 09:45:46 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-06-20 09:45:46 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-06-20 09:45:47 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-06-20 09:45:47 -==> Parameters: 0(Integer), 10(Integer)
2019-06-20 09:45:47 -<==      Total: 10
2019-06-20 09:45:47 -==>  Preparing: select count(*) from heat_log 
2019-06-20 09:45:47 -==> Parameters: 
2019-06-20 09:45:47 -<==      Total: 1
2019-06-20 09:45:47 -耗时 : 644
2019-06-20 09:45:47 -返回值 : com.bootdo.common.utils.PageUtils@7c5dcd12
2019-06-20 09:45:53 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-06-20 09:45:53 -HTTP METHOD : GET
2019-06-20 09:45:53 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-06-20 09:45:53 -参数 : []
2019-06-20 09:45:53 -耗时 : 1
2019-06-20 09:45:53 -返回值 : moneyLog/waterLog/waterLog
2019-06-20 09:45:53 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-20 09:45:53 -HTTP METHOD : GET
2019-06-20 09:45:53 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:45:53 -参数 : [userType]
2019-06-20 09:45:53 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:45:53 -==> Parameters: userType(String)
2019-06-20 09:45:58 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-06-20 09:45:58 -HTTP METHOD : GET
2019-06-20 09:45:58 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:45:58 -参数 : [waterType]
2019-06-20 09:45:58 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:45:58 -==> Parameters: waterType(String)
2019-06-20 09:45:58 -<==      Total: 4
2019-06-20 09:45:58 -耗时 : 3
2019-06-20 09:45:58 -返回值 : [DictDO{id=188, name='民用水', value='1', type='waterType', description='水费性质', sort=10, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=187, name='商业水1', value='2', type='waterType', description='水费性质', sort=20, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=186, name='商业水2', value='3', type='waterType', description='水费性质', sort=30, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=185, name='商业水3', value='4', type='waterType', description='水费性质', sort=40, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:45:59 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-06-20 09:45:59 -HTTP METHOD : GET
2019-06-20 09:45:59 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-06-20 09:45:59 -参数 : [{limit=10, offset=0, userType=, waterType=, userOrg=, userId=, waterDate=}]
2019-06-20 09:45:59 -<==      Total: 4
2019-06-20 09:45:59 -耗时 : 5964
2019-06-20 09:45:59 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:45:59 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-06-20 09:45:59 -==> Parameters: 0(Integer), 10(Integer)
2019-06-20 09:45:59 -<==      Total: 10
2019-06-20 09:45:59 -==>  Preparing: select count(*) from water_log 
2019-06-20 09:45:59 -==> Parameters: 
2019-06-20 09:45:59 -<==      Total: 1
2019-06-20 09:45:59 -耗时 : 445
2019-06-20 09:45:59 -返回值 : com.bootdo.common.utils.PageUtils@95efaa8
2019-06-20 09:46:01 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-06-20 09:46:01 -HTTP METHOD : GET
2019-06-20 09:46:01 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-06-20 09:46:01 -参数 : []
2019-06-20 09:46:01 -耗时 : 1
2019-06-20 09:46:01 -返回值 : moneyLog/heatLog/heatLog
2019-06-20 09:46:01 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-20 09:46:01 -HTTP METHOD : GET
2019-06-20 09:46:01 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:46:01 -参数 : [userType]
2019-06-20 09:46:01 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:46:01 -==> Parameters: userType(String)
2019-06-20 09:46:01 -<==      Total: 4
2019-06-20 09:46:01 -耗时 : 4
2019-06-20 09:46:01 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:46:01 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-06-20 09:46:01 -HTTP METHOD : GET
2019-06-20 09:46:01 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:46:01 -参数 : [heatType]
2019-06-20 09:46:01 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:46:01 -==> Parameters: heatType(String)
2019-06-20 09:46:01 -<==      Total: 4
2019-06-20 09:46:01 -耗时 : 3
2019-06-20 09:46:01 -返回值 : [DictDO{id=184, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=183, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=182, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=181, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:46:01 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-06-20 09:46:01 -HTTP METHOD : GET
2019-06-20 09:46:01 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-06-20 09:46:01 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-06-20 09:46:01 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-06-20 09:46:01 -==> Parameters: 0(Integer), 10(Integer)
2019-06-20 09:46:01 -<==      Total: 10
2019-06-20 09:46:01 -==>  Preparing: select count(*) from heat_log 
2019-06-20 09:46:01 -==> Parameters: 
2019-06-20 09:46:01 -<==      Total: 1
2019-06-20 09:46:01 -耗时 : 73
2019-06-20 09:46:01 -返回值 : com.bootdo.common.utils.PageUtils@ef8aa86
2019-06-20 09:46:13 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-06-20 09:46:13 -HTTP METHOD : GET
2019-06-20 09:46:13 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-06-20 09:46:13 -参数 : []
2019-06-20 09:46:13 -耗时 : 0
2019-06-20 09:46:13 -返回值 : moneyLog/elecLog/elecLog
2019-06-20 09:46:14 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-06-20 09:46:14 -HTTP METHOD : GET
2019-06-20 09:46:14 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:46:14 -参数 : [elecType]
2019-06-20 09:46:14 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:46:14 -==> Parameters: elecType(String)
2019-06-20 09:46:14 -<==      Total: 11
2019-06-20 09:46:14 -耗时 : 9
2019-06-20 09:46:14 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:46:14 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-06-20 09:46:14 -HTTP METHOD : GET
2019-06-20 09:46:14 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-06-20 09:46:14 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, elecDate=}]
2019-06-20 09:46:14 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-06-20 09:46:14 -==> Parameters: 0(Integer), 10(Integer)
2019-06-20 09:46:14 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-20 09:46:14 -HTTP METHOD : GET
2019-06-20 09:46:14 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:46:14 -参数 : [userType]
2019-06-20 09:46:14 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:46:14 -==> Parameters: userType(String)
2019-06-20 09:46:14 -<==      Total: 10
2019-06-20 09:46:14 -<==      Total: 4
2019-06-20 09:46:14 -耗时 : 3
2019-06-20 09:46:14 -==>  Preparing: select count(*) from elec_log 
2019-06-20 09:46:14 -==> Parameters: 
2019-06-20 09:46:14 -<==      Total: 1
2019-06-20 09:46:14 -耗时 : 6
2019-06-20 09:46:14 -返回值 : com.bootdo.common.utils.PageUtils@18d7dbdc
2019-06-20 09:46:14 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:46:14 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-06-20 09:46:14 -HTTP METHOD : GET
2019-06-20 09:46:14 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-06-20 09:46:14 -参数 : []
2019-06-20 09:46:14 -耗时 : 0
2019-06-20 09:46:14 -返回值 : moneyLog/waterLog/waterLog
2019-06-20 09:46:15 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-06-20 09:46:15 -HTTP METHOD : GET
2019-06-20 09:46:15 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-20 09:46:15 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:46:15 -HTTP METHOD : GET
2019-06-20 09:46:15 -参数 : [waterType]
2019-06-20 09:46:15 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:46:15 -参数 : [userType]
2019-06-20 09:46:15 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:46:15 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:46:15 -==> Parameters: userType(String)
2019-06-20 09:46:15 -==> Parameters: waterType(String)
2019-06-20 09:46:15 -<==      Total: 4
2019-06-20 09:46:15 -<==      Total: 4
2019-06-20 09:46:15 -耗时 : 3
2019-06-20 09:46:15 -耗时 : 3
2019-06-20 09:46:15 -返回值 : [DictDO{id=188, name='民用水', value='1', type='waterType', description='水费性质', sort=10, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=187, name='商业水1', value='2', type='waterType', description='水费性质', sort=20, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=186, name='商业水2', value='3', type='waterType', description='水费性质', sort=30, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=185, name='商业水3', value='4', type='waterType', description='水费性质', sort=40, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:46:15 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:46:15 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-06-20 09:46:15 -HTTP METHOD : GET
2019-06-20 09:46:15 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-06-20 09:46:15 -参数 : [{limit=10, offset=0, userType=, waterType=, userOrg=, userId=, waterDate=}]
2019-06-20 09:46:15 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-06-20 09:46:15 -==> Parameters: 0(Integer), 10(Integer)
2019-06-20 09:46:15 -<==      Total: 10
2019-06-20 09:46:15 -==>  Preparing: select count(*) from water_log 
2019-06-20 09:46:15 -==> Parameters: 
2019-06-20 09:46:15 -<==      Total: 1
2019-06-20 09:46:15 -耗时 : 70
2019-06-20 09:46:15 -返回值 : com.bootdo.common.utils.PageUtils@813fb3e
2019-06-20 09:46:15 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-06-20 09:46:15 -HTTP METHOD : GET
2019-06-20 09:46:15 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-06-20 09:46:15 -参数 : []
2019-06-20 09:46:15 -耗时 : 0
2019-06-20 09:46:15 -返回值 : moneyLog/heatLog/heatLog
2019-06-20 09:46:15 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-06-20 09:46:15 -HTTP METHOD : GET
2019-06-20 09:46:15 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:46:15 -参数 : [heatType]
2019-06-20 09:46:15 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:46:15 -==> Parameters: heatType(String)
2019-06-20 09:46:15 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-06-20 09:46:15 -HTTP METHOD : GET
2019-06-20 09:46:15 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-06-20 09:46:15 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-06-20 09:46:15 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-06-20 09:46:15 -==> Parameters: 0(Integer), 10(Integer)
2019-06-20 09:46:15 -<==      Total: 4
2019-06-20 09:46:15 -耗时 : 5
2019-06-20 09:46:15 -返回值 : [DictDO{id=184, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=183, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=182, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=181, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:46:15 -<==      Total: 10
2019-06-20 09:46:15 -==>  Preparing: select count(*) from heat_log 
2019-06-20 09:46:15 -==> Parameters: 
2019-06-20 09:46:15 -<==      Total: 1
2019-06-20 09:46:15 -耗时 : 6
2019-06-20 09:46:15 -返回值 : com.bootdo.common.utils.PageUtils@15e836a2
2019-06-20 09:46:15 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-20 09:46:15 -HTTP METHOD : GET
2019-06-20 09:46:15 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:46:15 -参数 : [userType]
2019-06-20 09:46:15 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:46:15 -==> Parameters: userType(String)
2019-06-20 09:46:15 -<==      Total: 4
2019-06-20 09:46:15 -耗时 : 63
2019-06-20 09:46:15 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:46:16 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-06-20 09:46:16 -HTTP METHOD : GET
2019-06-20 09:46:16 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-06-20 09:46:16 -参数 : []
2019-06-20 09:46:16 -耗时 : 0
2019-06-20 09:46:16 -返回值 : moneyLog/elecLog/elecLog
2019-06-20 09:46:16 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-20 09:46:16 -HTTP METHOD : GET
2019-06-20 09:46:16 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:46:16 -参数 : [userType]
2019-06-20 09:46:16 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-06-20 09:46:16 -HTTP METHOD : GET
2019-06-20 09:46:16 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:46:16 -参数 : [elecType]
2019-06-20 09:46:16 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:46:16 -==> Parameters: elecType(String)
2019-06-20 09:46:16 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:46:16 -==> Parameters: userType(String)
2019-06-20 09:46:16 -<==      Total: 11
2019-06-20 09:46:16 -耗时 : 4
2019-06-20 09:46:16 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:46:16 -<==      Total: 4
2019-06-20 09:46:16 -耗时 : 11
2019-06-20 09:46:16 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:46:16 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-06-20 09:46:16 -HTTP METHOD : GET
2019-06-20 09:46:16 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-06-20 09:46:16 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, elecDate=}]
2019-06-20 09:46:16 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-06-20 09:46:16 -==> Parameters: 0(Integer), 10(Integer)
2019-06-20 09:46:16 -<==      Total: 10
2019-06-20 09:46:16 -==>  Preparing: select count(*) from elec_log 
2019-06-20 09:46:16 -==> Parameters: 
2019-06-20 09:46:16 -<==      Total: 1
2019-06-20 09:46:16 -耗时 : 51
2019-06-20 09:46:16 -返回值 : com.bootdo.common.utils.PageUtils@18fe09ef
2019-06-20 09:46:17 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-06-20 09:46:17 -HTTP METHOD : GET
2019-06-20 09:46:17 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-06-20 09:46:17 -参数 : []
2019-06-20 09:46:17 -耗时 : 1
2019-06-20 09:46:17 -返回值 : moneyLog/waterLog/waterLog
2019-06-20 09:46:17 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-06-20 09:46:17 -HTTP METHOD : GET
2019-06-20 09:46:17 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:46:17 -参数 : [waterType]
2019-06-20 09:46:17 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:46:17 -==> Parameters: waterType(String)
2019-06-20 09:46:17 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-06-20 09:46:17 -HTTP METHOD : GET
2019-06-20 09:46:17 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-06-20 09:46:17 -参数 : [{limit=10, offset=0, userType=, waterType=, userOrg=, userId=, waterDate=}]
2019-06-20 09:46:17 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-06-20 09:46:17 -==> Parameters: 0(Integer), 10(Integer)
2019-06-20 09:46:17 -<==      Total: 4
2019-06-20 09:46:17 -耗时 : 7
2019-06-20 09:46:17 -返回值 : [DictDO{id=188, name='民用水', value='1', type='waterType', description='水费性质', sort=10, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=187, name='商业水1', value='2', type='waterType', description='水费性质', sort=20, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=186, name='商业水2', value='3', type='waterType', description='水费性质', sort=30, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=185, name='商业水3', value='4', type='waterType', description='水费性质', sort=40, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:46:17 -<==      Total: 10
2019-06-20 09:46:17 -==>  Preparing: select count(*) from water_log 
2019-06-20 09:46:17 -==> Parameters: 
2019-06-20 09:46:17 -<==      Total: 1
2019-06-20 09:46:17 -耗时 : 12
2019-06-20 09:46:17 -返回值 : com.bootdo.common.utils.PageUtils@73702c99
2019-06-20 09:46:17 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-20 09:46:17 -HTTP METHOD : GET
2019-06-20 09:46:17 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:46:17 -参数 : [userType]
2019-06-20 09:46:17 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:46:17 -==> Parameters: userType(String)
2019-06-20 09:46:17 -<==      Total: 4
2019-06-20 09:46:17 -耗时 : 4
2019-06-20 09:46:17 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:46:17 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-06-20 09:46:17 -HTTP METHOD : GET
2019-06-20 09:46:17 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-06-20 09:46:17 -参数 : []
2019-06-20 09:46:17 -耗时 : 0
2019-06-20 09:46:17 -返回值 : moneyLog/heatLog/heatLog
2019-06-20 09:46:18 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-06-20 09:46:18 -HTTP METHOD : GET
2019-06-20 09:46:18 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:46:18 -参数 : [heatType]
2019-06-20 09:46:18 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:46:18 -==> Parameters: heatType(String)
2019-06-20 09:46:18 -<==      Total: 4
2019-06-20 09:46:18 -耗时 : 6
2019-06-20 09:46:18 -返回值 : [DictDO{id=184, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=183, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=182, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=181, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:46:18 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-20 09:46:18 -HTTP METHOD : GET
2019-06-20 09:46:18 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:46:18 -参数 : [userType]
2019-06-20 09:46:18 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:46:18 -==> Parameters: userType(String)
2019-06-20 09:46:18 -<==      Total: 4
2019-06-20 09:46:18 -耗时 : 5
2019-06-20 09:46:18 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:46:18 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-06-20 09:46:18 -HTTP METHOD : GET
2019-06-20 09:46:18 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-06-20 09:46:18 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-06-20 09:46:18 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-06-20 09:46:18 -==> Parameters: 0(Integer), 10(Integer)
2019-06-20 09:46:18 -<==      Total: 10
2019-06-20 09:46:18 -==>  Preparing: select count(*) from heat_log 
2019-06-20 09:46:18 -==> Parameters: 
2019-06-20 09:46:18 -<==      Total: 1
2019-06-20 09:46:18 -耗时 : 42
2019-06-20 09:46:18 -返回值 : com.bootdo.common.utils.PageUtils@5dde8abf
2019-06-20 09:46:19 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-06-20 09:46:19 -HTTP METHOD : GET
2019-06-20 09:46:19 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-06-20 09:46:19 -参数 : []
2019-06-20 09:46:19 -耗时 : 0
2019-06-20 09:46:19 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-06-20 09:46:19 -HTTP METHOD : GET
2019-06-20 09:46:19 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-06-20 09:46:19 -参数 : []
2019-06-20 09:46:19 -耗时 : 2
2019-06-20 09:46:19 -返回值 : moneyLog/waterLog/waterLog
2019-06-20 09:46:19 -返回值 : moneyLog/heatLog/heatLog
2019-06-20 09:46:19 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-20 09:46:19 -HTTP METHOD : GET
2019-06-20 09:46:19 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:46:19 -参数 : [userType]
2019-06-20 09:46:19 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-06-20 09:46:19 -HTTP METHOD : GET
2019-06-20 09:46:19 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-06-20 09:46:19 -参数 : [{limit=10, offset=0, userType=, waterType=, userOrg=, userId=, waterDate=}]
2019-06-20 09:46:19 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-06-20 09:46:19 -==> Parameters: 0(Integer), 10(Integer)
2019-06-20 09:46:19 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:46:19 -==> Parameters: userType(String)
2019-06-20 09:46:19 -<==      Total: 10
2019-06-20 09:46:19 -<==      Total: 4
2019-06-20 09:46:19 -耗时 : 8
2019-06-20 09:46:19 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:46:19 -==>  Preparing: select count(*) from water_log 
2019-06-20 09:46:19 -==> Parameters: 
2019-06-20 09:46:19 -<==      Total: 1
2019-06-20 09:46:19 -耗时 : 7
2019-06-20 09:46:19 -返回值 : com.bootdo.common.utils.PageUtils@446fd349
2019-06-20 09:46:19 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-06-20 09:46:19 -HTTP METHOD : GET
2019-06-20 09:46:19 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:46:19 -参数 : [waterType]
2019-06-20 09:46:19 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:46:19 -==> Parameters: waterType(String)
2019-06-20 09:46:19 -<==      Total: 4
2019-06-20 09:46:19 -耗时 : 5
2019-06-20 09:46:19 -返回值 : [DictDO{id=188, name='民用水', value='1', type='waterType', description='水费性质', sort=10, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=187, name='商业水1', value='2', type='waterType', description='水费性质', sort=20, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=186, name='商业水2', value='3', type='waterType', description='水费性质', sort=30, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=185, name='商业水3', value='4', type='waterType', description='水费性质', sort=40, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:46:20 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-06-20 09:46:20 -HTTP METHOD : GET
2019-06-20 09:46:20 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-06-20 09:46:20 -参数 : []
2019-06-20 09:46:20 -耗时 : 0
2019-06-20 09:46:20 -返回值 : moneyLog/elecLog/elecLog
2019-06-20 09:46:20 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-06-20 09:46:20 -HTTP METHOD : GET
2019-06-20 09:46:20 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:46:20 -参数 : [elecType]
2019-06-20 09:46:20 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:46:20 -==> Parameters: elecType(String)
2019-06-20 09:46:20 -<==      Total: 11
2019-06-20 09:46:20 -耗时 : 3
2019-06-20 09:46:20 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:46:20 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-20 09:46:20 -HTTP METHOD : GET
2019-06-20 09:46:20 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:46:20 -参数 : [userType]
2019-06-20 09:46:20 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:46:20 -==> Parameters: userType(String)
2019-06-20 09:46:20 -<==      Total: 4
2019-06-20 09:46:20 -耗时 : 4
2019-06-20 09:46:20 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:46:20 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-06-20 09:46:20 -HTTP METHOD : GET
2019-06-20 09:46:20 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-06-20 09:46:20 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, elecDate=}]
2019-06-20 09:46:20 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-06-20 09:46:20 -==> Parameters: 0(Integer), 10(Integer)
2019-06-20 09:46:20 -<==      Total: 10
2019-06-20 09:46:20 -==>  Preparing: select count(*) from elec_log 
2019-06-20 09:46:20 -==> Parameters: 
2019-06-20 09:46:20 -<==      Total: 1
2019-06-20 09:46:20 -耗时 : 16
2019-06-20 09:46:20 -返回值 : com.bootdo.common.utils.PageUtils@489675c4
2019-06-20 09:46:20 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-06-20 09:46:20 -HTTP METHOD : GET
2019-06-20 09:46:20 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-06-20 09:46:20 -参数 : []
2019-06-20 09:46:20 -耗时 : 1
2019-06-20 09:46:20 -返回值 : moneyLog/heatLog/heatLog
2019-06-20 09:46:21 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-20 09:46:21 -HTTP METHOD : GET
2019-06-20 09:46:21 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:46:21 -参数 : [userType]
2019-06-20 09:46:21 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:46:21 -==> Parameters: userType(String)
2019-06-20 09:46:21 -<==      Total: 4
2019-06-20 09:46:21 -耗时 : 3
2019-06-20 09:46:21 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:46:21 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-06-20 09:46:21 -HTTP METHOD : GET
2019-06-20 09:46:21 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:46:21 -参数 : [heatType]
2019-06-20 09:46:21 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:46:21 -==> Parameters: heatType(String)
2019-06-20 09:46:21 -<==      Total: 4
2019-06-20 09:46:21 -耗时 : 3
2019-06-20 09:46:21 -返回值 : [DictDO{id=184, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=183, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=182, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=181, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:46:21 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-06-20 09:46:21 -HTTP METHOD : GET
2019-06-20 09:46:21 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-06-20 09:46:21 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-06-20 09:46:21 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-06-20 09:46:21 -==> Parameters: 0(Integer), 10(Integer)
2019-06-20 09:46:21 -<==      Total: 10
2019-06-20 09:46:21 -==>  Preparing: select count(*) from heat_log 
2019-06-20 09:46:21 -==> Parameters: 
2019-06-20 09:46:21 -<==      Total: 1
2019-06-20 09:46:21 -耗时 : 106
2019-06-20 09:46:21 -返回值 : com.bootdo.common.utils.PageUtils@64433ff4
2019-06-20 09:46:22 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-06-20 09:46:22 -HTTP METHOD : GET
2019-06-20 09:46:22 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-06-20 09:46:22 -参数 : []
2019-06-20 09:46:22 -耗时 : 0
2019-06-20 09:46:22 -返回值 : moneyLog/waterLog/waterLog
2019-06-20 09:46:23 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-20 09:46:23 -HTTP METHOD : GET
2019-06-20 09:46:23 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:46:23 -参数 : [userType]
2019-06-20 09:46:23 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:46:23 -==> Parameters: userType(String)
2019-06-20 09:46:23 -<==      Total: 4
2019-06-20 09:46:23 -耗时 : 3
2019-06-20 09:46:23 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:46:23 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-06-20 09:46:23 -HTTP METHOD : GET
2019-06-20 09:46:23 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:46:23 -参数 : [waterType]
2019-06-20 09:46:23 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:46:23 -==> Parameters: waterType(String)
2019-06-20 09:46:23 -<==      Total: 4
2019-06-20 09:46:23 -耗时 : 3
2019-06-20 09:46:23 -返回值 : [DictDO{id=188, name='民用水', value='1', type='waterType', description='水费性质', sort=10, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=187, name='商业水1', value='2', type='waterType', description='水费性质', sort=20, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=186, name='商业水2', value='3', type='waterType', description='水费性质', sort=30, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=185, name='商业水3', value='4', type='waterType', description='水费性质', sort=40, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:46:23 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-06-20 09:46:23 -HTTP METHOD : GET
2019-06-20 09:46:23 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-06-20 09:46:23 -参数 : [{limit=10, offset=0, userType=, waterType=, userOrg=, userId=, waterDate=}]
2019-06-20 09:46:23 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-06-20 09:46:23 -==> Parameters: 0(Integer), 10(Integer)
2019-06-20 09:46:23 -<==      Total: 10
2019-06-20 09:46:23 -==>  Preparing: select count(*) from water_log 
2019-06-20 09:46:23 -==> Parameters: 
2019-06-20 09:46:23 -<==      Total: 1
2019-06-20 09:46:23 -耗时 : 16
2019-06-20 09:46:23 -返回值 : com.bootdo.common.utils.PageUtils@368b4dc9
2019-06-20 09:46:23 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-06-20 09:46:23 -HTTP METHOD : GET
2019-06-20 09:46:23 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-06-20 09:46:23 -参数 : []
2019-06-20 09:46:23 -耗时 : 0
2019-06-20 09:46:23 -返回值 : moneyLog/heatLog/heatLog
2019-06-20 09:46:23 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-06-20 09:46:23 -HTTP METHOD : GET
2019-06-20 09:46:23 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:46:23 -参数 : [heatType]
2019-06-20 09:46:23 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:46:23 -==> Parameters: heatType(String)
2019-06-20 09:46:23 -<==      Total: 4
2019-06-20 09:46:23 -耗时 : 5
2019-06-20 09:46:23 -返回值 : [DictDO{id=184, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=183, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=182, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=181, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:46:23 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-06-20 09:46:23 -HTTP METHOD : GET
2019-06-20 09:46:23 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-06-20 09:46:23 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-06-20 09:46:23 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-06-20 09:46:23 -==> Parameters: 0(Integer), 10(Integer)
2019-06-20 09:46:23 -<==      Total: 10
2019-06-20 09:46:23 -==>  Preparing: select count(*) from heat_log 
2019-06-20 09:46:23 -==> Parameters: 
2019-06-20 09:46:23 -<==      Total: 1
2019-06-20 09:46:23 -耗时 : 7
2019-06-20 09:46:23 -返回值 : com.bootdo.common.utils.PageUtils@5af85a42
2019-06-20 09:46:23 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-20 09:46:23 -HTTP METHOD : GET
2019-06-20 09:46:23 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:46:23 -参数 : [userType]
2019-06-20 09:46:23 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:46:23 -==> Parameters: userType(String)
2019-06-20 09:46:23 -<==      Total: 4
2019-06-20 09:46:23 -耗时 : 4
2019-06-20 09:46:23 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:46:24 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-06-20 09:46:24 -HTTP METHOD : GET
2019-06-20 09:46:24 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-06-20 09:46:24 -参数 : []
2019-06-20 09:46:24 -耗时 : 1
2019-06-20 09:46:24 -返回值 : moneyLog/elecLog/elecLog
2019-06-20 09:46:24 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-20 09:46:24 -HTTP METHOD : GET
2019-06-20 09:46:24 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:46:24 -参数 : [userType]
2019-06-20 09:46:24 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:46:24 -==> Parameters: userType(String)
2019-06-20 09:46:24 -<==      Total: 4
2019-06-20 09:46:24 -耗时 : 5
2019-06-20 09:46:24 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:46:24 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-06-20 09:46:24 -HTTP METHOD : GET
2019-06-20 09:46:24 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-06-20 09:46:24 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, elecDate=}]
2019-06-20 09:46:24 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-06-20 09:46:24 -==> Parameters: 0(Integer), 10(Integer)
2019-06-20 09:46:24 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-06-20 09:46:24 -HTTP METHOD : GET
2019-06-20 09:46:24 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:46:24 -参数 : [elecType]
2019-06-20 09:46:24 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:46:24 -==> Parameters: elecType(String)
2019-06-20 09:46:24 -<==      Total: 10
2019-06-20 09:46:24 -==>  Preparing: select count(*) from elec_log 
2019-06-20 09:46:24 -==> Parameters: 
2019-06-20 09:46:24 -<==      Total: 11
2019-06-20 09:46:24 -耗时 : 4
2019-06-20 09:46:24 -<==      Total: 1
2019-06-20 09:46:24 -耗时 : 8
2019-06-20 09:46:24 -返回值 : com.bootdo.common.utils.PageUtils@3edd5a3
2019-06-20 09:46:24 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:46:30 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-06-20 09:46:30 -HTTP METHOD : GET
2019-06-20 09:46:30 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-06-20 09:46:30 -参数 : []
2019-06-20 09:46:30 -耗时 : 1
2019-06-20 09:46:30 -返回值 : moneyLog/heatLog/heatLog
2019-06-20 09:46:30 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-06-20 09:46:30 -HTTP METHOD : GET
2019-06-20 09:46:30 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:46:30 -参数 : [heatType]
2019-06-20 09:46:30 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:46:30 -==> Parameters: heatType(String)
2019-06-20 09:46:30 -<==      Total: 4
2019-06-20 09:46:30 -耗时 : 4
2019-06-20 09:46:30 -返回值 : [DictDO{id=184, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=183, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=182, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=181, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:46:30 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-20 09:46:30 -HTTP METHOD : GET
2019-06-20 09:46:30 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:46:30 -参数 : [userType]
2019-06-20 09:46:30 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:46:30 -==> Parameters: userType(String)
2019-06-20 09:46:31 -<==      Total: 4
2019-06-20 09:46:31 -耗时 : 4
2019-06-20 09:46:31 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:46:31 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-06-20 09:46:31 -HTTP METHOD : GET
2019-06-20 09:46:31 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-06-20 09:46:31 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-06-20 09:46:31 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-06-20 09:46:31 -==> Parameters: 0(Integer), 10(Integer)
2019-06-20 09:46:31 -<==      Total: 10
2019-06-20 09:46:31 -==>  Preparing: select count(*) from heat_log 
2019-06-20 09:46:31 -==> Parameters: 
2019-06-20 09:46:31 -<==      Total: 1
2019-06-20 09:46:31 -耗时 : 7
2019-06-20 09:46:31 -返回值 : com.bootdo.common.utils.PageUtils@22e4a218
2019-06-20 09:46:31 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-06-20 09:46:31 -HTTP METHOD : GET
2019-06-20 09:46:31 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-06-20 09:46:31 -参数 : []
2019-06-20 09:46:31 -耗时 : 0
2019-06-20 09:46:31 -返回值 : moneyLog/waterLog/waterLog
2019-06-20 09:46:31 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-06-20 09:46:31 -HTTP METHOD : GET
2019-06-20 09:46:31 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:46:31 -参数 : [waterType]
2019-06-20 09:46:31 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:46:31 -==> Parameters: waterType(String)
2019-06-20 09:46:31 -<==      Total: 4
2019-06-20 09:46:31 -耗时 : 8
2019-06-20 09:46:31 -返回值 : [DictDO{id=188, name='民用水', value='1', type='waterType', description='水费性质', sort=10, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=187, name='商业水1', value='2', type='waterType', description='水费性质', sort=20, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=186, name='商业水2', value='3', type='waterType', description='水费性质', sort=30, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=185, name='商业水3', value='4', type='waterType', description='水费性质', sort=40, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:46:31 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-20 09:46:31 -HTTP METHOD : GET
2019-06-20 09:46:31 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:46:31 -参数 : [userType]
2019-06-20 09:46:31 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:46:31 -==> Parameters: userType(String)
2019-06-20 09:46:31 -<==      Total: 4
2019-06-20 09:46:31 -耗时 : 4
2019-06-20 09:46:31 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:46:31 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-06-20 09:46:31 -HTTP METHOD : GET
2019-06-20 09:46:31 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-06-20 09:46:31 -参数 : [{limit=10, offset=0, userType=, waterType=, userOrg=, userId=, waterDate=}]
2019-06-20 09:46:31 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-06-20 09:46:31 -==> Parameters: 0(Integer), 10(Integer)
2019-06-20 09:46:31 -<==      Total: 10
2019-06-20 09:46:31 -==>  Preparing: select count(*) from water_log 
2019-06-20 09:46:31 -==> Parameters: 
2019-06-20 09:46:31 -<==      Total: 1
2019-06-20 09:46:31 -耗时 : 7
2019-06-20 09:46:31 -返回值 : com.bootdo.common.utils.PageUtils@22d1456f
2019-06-20 09:47:00 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-06-20 09:47:00 -HTTP METHOD : GET
2019-06-20 09:47:00 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-06-20 09:47:00 -参数 : []
2019-06-20 09:47:00 -耗时 : 0
2019-06-20 09:47:00 -返回值 : moneyLog/heatLog/heatLog
2019-06-20 09:47:01 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-20 09:47:01 -HTTP METHOD : GET
2019-06-20 09:47:01 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:47:01 -参数 : [userType]
2019-06-20 09:47:01 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:47:01 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-06-20 09:47:01 -HTTP METHOD : GET
2019-06-20 09:47:01 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:47:01 -参数 : [heatType]
2019-06-20 09:47:01 -==> Parameters: userType(String)
2019-06-20 09:47:01 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:47:01 -==> Parameters: heatType(String)
2019-06-20 09:47:01 -<==      Total: 4
2019-06-20 09:47:01 -<==      Total: 4
2019-06-20 09:47:01 -耗时 : 2
2019-06-20 09:47:01 -返回值 : [DictDO{id=184, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=183, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=182, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=181, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:47:01 -耗时 : 4
2019-06-20 09:47:01 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:47:01 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-06-20 09:47:01 -HTTP METHOD : GET
2019-06-20 09:47:01 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-06-20 09:47:01 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-06-20 09:47:01 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-06-20 09:47:01 -==> Parameters: 0(Integer), 10(Integer)
2019-06-20 09:47:01 -<==      Total: 10
2019-06-20 09:47:01 -==>  Preparing: select count(*) from heat_log 
2019-06-20 09:47:01 -==> Parameters: 
2019-06-20 09:47:01 -<==      Total: 1
2019-06-20 09:47:01 -耗时 : 9
2019-06-20 09:47:01 -返回值 : com.bootdo.common.utils.PageUtils@1f3c0700
2019-06-20 09:47:01 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-06-20 09:47:01 -HTTP METHOD : GET
2019-06-20 09:47:01 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-06-20 09:47:01 -参数 : []
2019-06-20 09:47:01 -耗时 : 0
2019-06-20 09:47:01 -返回值 : moneyLog/elecLog/elecLog
2019-06-20 09:47:02 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-20 09:47:02 -HTTP METHOD : GET
2019-06-20 09:47:02 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:47:02 -参数 : [userType]
2019-06-20 09:47:02 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:47:02 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-06-20 09:47:02 -HTTP METHOD : GET
2019-06-20 09:47:02 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:47:02 -参数 : [elecType]
2019-06-20 09:47:02 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:47:02 -==> Parameters: elecType(String)
2019-06-20 09:47:02 -<==      Total: 11
2019-06-20 09:47:02 -耗时 : 3
2019-06-20 09:47:02 -==> Parameters: userType(String)
2019-06-20 09:47:02 -<==      Total: 4
2019-06-20 09:47:02 -耗时 : 16
2019-06-20 09:47:02 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:47:02 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:47:02 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-06-20 09:47:02 -HTTP METHOD : GET
2019-06-20 09:47:02 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-06-20 09:47:02 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, elecDate=}]
2019-06-20 09:47:02 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-06-20 09:47:02 -==> Parameters: 0(Integer), 10(Integer)
2019-06-20 09:47:02 -<==      Total: 10
2019-06-20 09:47:02 -==>  Preparing: select count(*) from elec_log 
2019-06-20 09:47:02 -==> Parameters: 
2019-06-20 09:47:02 -<==      Total: 1
2019-06-20 09:47:02 -耗时 : 6
2019-06-20 09:47:02 -返回值 : com.bootdo.common.utils.PageUtils@403ba391
2019-06-20 09:47:02 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-06-20 09:47:02 -HTTP METHOD : GET
2019-06-20 09:47:02 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-06-20 09:47:02 -参数 : []
2019-06-20 09:47:02 -耗时 : 0
2019-06-20 09:47:02 -返回值 : moneyLog/heatLog/heatLog
2019-06-20 09:47:02 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-06-20 09:47:02 -HTTP METHOD : GET
2019-06-20 09:47:02 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:47:02 -参数 : [heatType]
2019-06-20 09:47:02 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:47:02 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-20 09:47:02 -HTTP METHOD : GET
2019-06-20 09:47:02 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:47:02 -参数 : [userType]
2019-06-20 09:47:02 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:47:02 -==> Parameters: userType(String)
2019-06-20 09:47:02 -<==      Total: 4
2019-06-20 09:47:02 -耗时 : 4
2019-06-20 09:47:02 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:47:02 -==> Parameters: heatType(String)
2019-06-20 09:47:02 -<==      Total: 4
2019-06-20 09:47:02 -耗时 : 21
2019-06-20 09:47:02 -返回值 : [DictDO{id=184, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=183, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=182, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=181, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:47:02 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-06-20 09:47:02 -HTTP METHOD : GET
2019-06-20 09:47:02 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-06-20 09:47:02 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-06-20 09:47:02 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-06-20 09:47:02 -==> Parameters: 0(Integer), 10(Integer)
2019-06-20 09:47:02 -<==      Total: 10
2019-06-20 09:47:02 -==>  Preparing: select count(*) from heat_log 
2019-06-20 09:47:02 -==> Parameters: 
2019-06-20 09:47:02 -<==      Total: 1
2019-06-20 09:47:02 -耗时 : 6
2019-06-20 09:47:02 -返回值 : com.bootdo.common.utils.PageUtils@3b5fbb42
2019-06-20 09:47:03 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-06-20 09:47:03 -HTTP METHOD : GET
2019-06-20 09:47:03 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-06-20 09:47:03 -参数 : []
2019-06-20 09:47:03 -耗时 : 1
2019-06-20 09:47:03 -返回值 : moneyLog/waterLog/waterLog
2019-06-20 09:47:03 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-20 09:47:03 -HTTP METHOD : GET
2019-06-20 09:47:03 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:47:03 -参数 : [userType]
2019-06-20 09:47:03 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:47:03 -==> Parameters: userType(String)
2019-06-20 09:47:03 -<==      Total: 4
2019-06-20 09:47:03 -耗时 : 15
2019-06-20 09:47:03 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:47:03 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-06-20 09:47:03 -HTTP METHOD : GET
2019-06-20 09:47:03 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:47:03 -参数 : [waterType]
2019-06-20 09:47:03 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:47:03 -==> Parameters: waterType(String)
2019-06-20 09:47:03 -<==      Total: 4
2019-06-20 09:47:03 -耗时 : 3
2019-06-20 09:47:03 -返回值 : [DictDO{id=188, name='民用水', value='1', type='waterType', description='水费性质', sort=10, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=187, name='商业水1', value='2', type='waterType', description='水费性质', sort=20, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=186, name='商业水2', value='3', type='waterType', description='水费性质', sort=30, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=185, name='商业水3', value='4', type='waterType', description='水费性质', sort=40, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:47:03 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-06-20 09:47:03 -HTTP METHOD : GET
2019-06-20 09:47:03 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-06-20 09:47:03 -参数 : [{limit=10, offset=0, userType=, waterType=, userOrg=, userId=, waterDate=}]
2019-06-20 09:47:03 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-06-20 09:47:03 -==> Parameters: 0(Integer), 10(Integer)
2019-06-20 09:47:03 -<==      Total: 10
2019-06-20 09:47:03 -==>  Preparing: select count(*) from water_log 
2019-06-20 09:47:03 -==> Parameters: 
2019-06-20 09:47:03 -<==      Total: 1
2019-06-20 09:47:03 -耗时 : 8
2019-06-20 09:47:03 -返回值 : com.bootdo.common.utils.PageUtils@685573a3
2019-06-20 09:47:03 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-06-20 09:47:03 -HTTP METHOD : GET
2019-06-20 09:47:03 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-06-20 09:47:03 -参数 : []
2019-06-20 09:47:03 -耗时 : 8
2019-06-20 09:47:03 -返回值 : moneyLog/elecLog/elecLog
2019-06-20 09:47:03 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-20 09:47:03 -HTTP METHOD : GET
2019-06-20 09:47:03 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:47:03 -参数 : [userType]
2019-06-20 09:47:03 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:47:03 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-06-20 09:47:03 -HTTP METHOD : GET
2019-06-20 09:47:03 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:47:03 -==> Parameters: userType(String)
2019-06-20 09:47:03 -参数 : [elecType]
2019-06-20 09:47:03 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:47:03 -==> Parameters: elecType(String)
2019-06-20 09:47:03 -<==      Total: 4
2019-06-20 09:47:03 -耗时 : 6
2019-06-20 09:47:03 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:47:03 -<==      Total: 11
2019-06-20 09:47:03 -耗时 : 4
2019-06-20 09:47:03 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:47:03 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-06-20 09:47:03 -HTTP METHOD : GET
2019-06-20 09:47:03 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-06-20 09:47:03 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, elecDate=}]
2019-06-20 09:47:03 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-06-20 09:47:03 -==> Parameters: 0(Integer), 10(Integer)
2019-06-20 09:47:03 -<==      Total: 10
2019-06-20 09:47:03 -==>  Preparing: select count(*) from elec_log 
2019-06-20 09:47:03 -==> Parameters: 
2019-06-20 09:47:03 -<==      Total: 1
2019-06-20 09:47:03 -耗时 : 10
2019-06-20 09:47:03 -返回值 : com.bootdo.common.utils.PageUtils@b9229e5
2019-06-20 09:47:04 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-06-20 09:47:04 -HTTP METHOD : GET
2019-06-20 09:47:04 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-06-20 09:47:04 -参数 : []
2019-06-20 09:47:04 -耗时 : 1
2019-06-20 09:47:04 -返回值 : moneyLog/heatLog/heatLog
2019-06-20 09:47:04 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-20 09:47:04 -HTTP METHOD : GET
2019-06-20 09:47:04 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:47:04 -参数 : [userType]
2019-06-20 09:47:04 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:47:04 -==> Parameters: userType(String)
2019-06-20 09:47:04 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-06-20 09:47:04 -HTTP METHOD : GET
2019-06-20 09:47:04 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:47:04 -参数 : [heatType]
2019-06-20 09:47:04 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:47:04 -==> Parameters: heatType(String)
2019-06-20 09:47:04 -<==      Total: 4
2019-06-20 09:47:04 -耗时 : 3
2019-06-20 09:47:04 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:47:04 -<==      Total: 4
2019-06-20 09:47:04 -耗时 : 3
2019-06-20 09:47:04 -返回值 : [DictDO{id=184, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=183, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=182, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=181, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:47:04 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-06-20 09:47:04 -HTTP METHOD : GET
2019-06-20 09:47:04 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-06-20 09:47:04 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-06-20 09:47:04 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-06-20 09:47:04 -==> Parameters: 0(Integer), 10(Integer)
2019-06-20 09:47:04 -<==      Total: 10
2019-06-20 09:47:04 -==>  Preparing: select count(*) from heat_log 
2019-06-20 09:47:04 -==> Parameters: 
2019-06-20 09:47:04 -<==      Total: 1
2019-06-20 09:47:04 -耗时 : 6
2019-06-20 09:47:04 -返回值 : com.bootdo.common.utils.PageUtils@6214cabe
2019-06-20 09:47:05 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-06-20 09:47:05 -HTTP METHOD : GET
2019-06-20 09:47:05 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-06-20 09:47:05 -参数 : []
2019-06-20 09:47:05 -耗时 : 1
2019-06-20 09:47:05 -返回值 : moneyLog/elecLog/elecLog
2019-06-20 09:47:05 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-20 09:47:05 -HTTP METHOD : GET
2019-06-20 09:47:05 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:47:05 -参数 : [userType]
2019-06-20 09:47:05 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-06-20 09:47:05 -HTTP METHOD : GET
2019-06-20 09:47:05 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:47:05 -参数 : [elecType]
2019-06-20 09:47:05 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:47:05 -==> Parameters: userType(String)
2019-06-20 09:47:05 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:47:05 -==> Parameters: elecType(String)
2019-06-20 09:47:05 -<==      Total: 11
2019-06-20 09:47:05 -耗时 : 3
2019-06-20 09:47:05 -<==      Total: 4
2019-06-20 09:47:05 -耗时 : 4
2019-06-20 09:47:05 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:47:05 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:47:05 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-06-20 09:47:05 -HTTP METHOD : GET
2019-06-20 09:47:05 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-06-20 09:47:05 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, elecDate=}]
2019-06-20 09:47:05 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-06-20 09:47:05 -==> Parameters: 0(Integer), 10(Integer)
2019-06-20 09:47:05 -<==      Total: 10
2019-06-20 09:47:05 -==>  Preparing: select count(*) from elec_log 
2019-06-20 09:47:05 -==> Parameters: 
2019-06-20 09:47:05 -<==      Total: 1
2019-06-20 09:47:05 -耗时 : 7
2019-06-20 09:47:05 -返回值 : com.bootdo.common.utils.PageUtils@46e47e5
2019-06-20 09:48:57 -请求地址 : http://localhost:8081/index
2019-06-20 09:48:57 -HTTP METHOD : GET
2019-06-20 09:48:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-20 09:48:57 -参数 : [{}]
2019-06-20 09:48:57 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-20 09:48:57 -==> Parameters: 1(Long)
2019-06-20 09:48:57 -<==      Total: 51
2019-06-20 09:48:57 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-20 09:48:57 -==> Parameters: 138(Long)
2019-06-20 09:48:57 -<==      Total: 1
2019-06-20 09:48:57 -耗时 : 188
2019-06-20 09:48:57 -返回值 : index_v1
2019-06-20 09:48:57 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-20 09:48:57 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 188(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-bullseye","url":"/moneyUpLoad/ElecLogUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"165","parentId":"106","text":"缴费上传"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":tru(String), 127.0.0.1(String), 2019-06-20 09:48:57.68(Timestamp)
2019-06-20 09:48:57 -<==    Updates: 1
2019-06-20 09:48:58 -请求地址 : http://localhost:8081/main
2019-06-20 09:48:58 -HTTP METHOD : GET
2019-06-20 09:48:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-20 09:48:58 -参数 : []
2019-06-20 09:48:58 -耗时 : 0
2019-06-20 09:48:58 -返回值 : main
2019-06-20 09:48:58 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-20 09:48:58 -HTTP METHOD : GET
2019-06-20 09:48:58 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-20 09:48:58 -参数 : []
2019-06-20 09:48:58 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-20 09:48:58 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-20 09:48:58 -<==      Total: 0
2019-06-20 09:48:58 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-20 09:48:58 -==> Parameters: 1(Long), 0(String)
2019-06-20 09:48:58 -<==      Total: 1
2019-06-20 09:48:58 -耗时 : 45
2019-06-20 09:48:58 -返回值 : com.bootdo.common.utils.PageUtils@44f8e374
2019-06-20 09:48:58 -请求地址 : http://localhost:8081/main
2019-06-20 09:48:58 -HTTP METHOD : GET
2019-06-20 09:48:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-20 09:48:58 -参数 : []
2019-06-20 09:48:58 -耗时 : 1
2019-06-20 09:48:58 -返回值 : main
2019-06-20 09:49:00 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-06-20 09:49:00 -HTTP METHOD : GET
2019-06-20 09:49:00 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-06-20 09:49:00 -参数 : []
2019-06-20 09:49:00 -耗时 : 0
2019-06-20 09:49:00 -返回值 : moneyLog/elecLog/elecLog
2019-06-20 09:49:00 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-20 09:49:00 -HTTP METHOD : GET
2019-06-20 09:49:00 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:49:00 -参数 : [userType]
2019-06-20 09:49:00 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:49:00 -==> Parameters: userType(String)
2019-06-20 09:49:00 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-06-20 09:49:00 -HTTP METHOD : GET
2019-06-20 09:49:00 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:49:00 -参数 : [elecType]
2019-06-20 09:49:00 -<==      Total: 4
2019-06-20 09:49:00 -耗时 : 3
2019-06-20 09:49:00 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:49:00 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:49:00 -==> Parameters: elecType(String)
2019-06-20 09:49:00 -<==      Total: 11
2019-06-20 09:49:00 -耗时 : 3
2019-06-20 09:49:00 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:49:00 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-06-20 09:49:00 -HTTP METHOD : GET
2019-06-20 09:49:00 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-06-20 09:49:00 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, elecDate=}]
2019-06-20 09:49:00 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-06-20 09:49:00 -==> Parameters: 0(Integer), 10(Integer)
2019-06-20 09:49:00 -<==      Total: 10
2019-06-20 09:49:00 -==>  Preparing: select count(*) from elec_log 
2019-06-20 09:49:00 -==> Parameters: 
2019-06-20 09:49:00 -<==      Total: 1
2019-06-20 09:49:00 -耗时 : 29
2019-06-20 09:49:00 -返回值 : com.bootdo.common.utils.PageUtils@5fca38c1
2019-06-20 09:49:17 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-06-20 09:49:17 -HTTP METHOD : GET
2019-06-20 09:49:17 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-06-20 09:49:17 -参数 : []
2019-06-20 09:49:17 -耗时 : 0
2019-06-20 09:49:17 -返回值 : system/dept/deptTree
2019-06-20 09:49:17 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-06-20 09:49:17 -HTTP METHOD : GET
2019-06-20 09:49:17 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-06-20 09:49:17 -参数 : []
2019-06-20 09:49:17 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-06-20 09:49:17 -==> Parameters: 
2019-06-20 09:49:17 -<==      Total: 3
2019-06-20 09:49:17 -耗时 : 3
2019-06-20 09:49:17 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-06-20 09:49:27 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-06-20 09:49:27 -HTTP METHOD : GET
2019-06-20 09:49:27 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-06-20 09:49:27 -参数 : []
2019-06-20 09:49:27 -耗时 : 0
2019-06-20 09:49:27 -返回值 : system/dept/deptTree
2019-06-20 09:49:27 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-06-20 09:49:27 -HTTP METHOD : GET
2019-06-20 09:49:27 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-06-20 09:49:27 -参数 : []
2019-06-20 09:49:27 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-06-20 09:49:27 -==> Parameters: 
2019-06-20 09:49:27 -<==      Total: 3
2019-06-20 09:49:27 -耗时 : 3
2019-06-20 09:49:27 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-06-20 09:49:30 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-06-20 09:49:30 -HTTP METHOD : GET
2019-06-20 09:49:30 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-06-20 09:49:30 -参数 : []
2019-06-20 09:49:30 -耗时 : 1
2019-06-20 09:49:30 -返回值 : moneyLog/heatLog/heatLog
2019-06-20 09:49:30 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-20 09:49:30 -HTTP METHOD : GET
2019-06-20 09:49:30 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:49:30 -参数 : [userType]
2019-06-20 09:49:30 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:49:30 -==> Parameters: userType(String)
2019-06-20 09:49:30 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-06-20 09:49:30 -HTTP METHOD : GET
2019-06-20 09:49:30 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:49:30 -参数 : [heatType]
2019-06-20 09:49:30 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:49:30 -==> Parameters: heatType(String)
2019-06-20 09:49:30 -<==      Total: 4
2019-06-20 09:49:30 -<==      Total: 4
2019-06-20 09:49:30 -耗时 : 12
2019-06-20 09:49:30 -耗时 : 14
2019-06-20 09:49:30 -返回值 : [DictDO{id=184, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=183, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=182, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=181, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:49:30 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:49:30 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-06-20 09:49:30 -HTTP METHOD : GET
2019-06-20 09:49:30 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-06-20 09:49:30 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-06-20 09:49:30 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-06-20 09:49:30 -==> Parameters: 0(Integer), 10(Integer)
2019-06-20 09:49:30 -<==      Total: 10
2019-06-20 09:49:30 -==>  Preparing: select count(*) from heat_log 
2019-06-20 09:49:30 -==> Parameters: 
2019-06-20 09:49:30 -<==      Total: 1
2019-06-20 09:49:30 -耗时 : 6
2019-06-20 09:49:30 -返回值 : com.bootdo.common.utils.PageUtils@176d5344
2019-06-20 09:49:31 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-06-20 09:49:31 -HTTP METHOD : GET
2019-06-20 09:49:31 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-06-20 09:49:31 -参数 : []
2019-06-20 09:49:31 -耗时 : 0
2019-06-20 09:49:31 -返回值 : moneyLog/elecLog/elecLog
2019-06-20 09:49:31 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-20 09:49:31 -HTTP METHOD : GET
2019-06-20 09:49:31 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:49:31 -参数 : [userType]
2019-06-20 09:49:31 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:49:31 -==> Parameters: userType(String)
2019-06-20 09:49:31 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-06-20 09:49:31 -HTTP METHOD : GET
2019-06-20 09:49:31 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:49:31 -参数 : [elecType]
2019-06-20 09:49:31 -<==      Total: 4
2019-06-20 09:49:31 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:49:31 -耗时 : 3
2019-06-20 09:49:31 -==> Parameters: elecType(String)
2019-06-20 09:49:31 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:49:31 -<==      Total: 11
2019-06-20 09:49:31 -耗时 : 5
2019-06-20 09:49:31 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:49:31 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-06-20 09:49:31 -HTTP METHOD : GET
2019-06-20 09:49:31 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-06-20 09:49:31 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, elecDate=}]
2019-06-20 09:49:31 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-06-20 09:49:31 -==> Parameters: 0(Integer), 10(Integer)
2019-06-20 09:49:31 -<==      Total: 10
2019-06-20 09:49:31 -==>  Preparing: select count(*) from elec_log 
2019-06-20 09:49:31 -==> Parameters: 
2019-06-20 09:49:31 -<==      Total: 1
2019-06-20 09:49:31 -耗时 : 6
2019-06-20 09:49:31 -返回值 : com.bootdo.common.utils.PageUtils@172ff40e
2019-06-20 09:52:49 -请求地址 : http://localhost:8081/index
2019-06-20 09:52:49 -HTTP METHOD : GET
2019-06-20 09:52:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-20 09:52:49 -参数 : [{}]
2019-06-20 09:52:49 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-20 09:52:49 -==> Parameters: 1(Long)
2019-06-20 09:52:49 -<==      Total: 51
2019-06-20 09:52:49 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-20 09:52:49 -==> Parameters: 138(Long)
2019-06-20 09:52:49 -<==      Total: 1
2019-06-20 09:52:49 -耗时 : 100
2019-06-20 09:52:49 -返回值 : index_v1
2019-06-20 09:52:49 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-20 09:52:49 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 100(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-bullseye","url":"/moneyUpLoad/ElecLogUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"165","parentId":"106","text":"缴费上传"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":tru(String), 127.0.0.1(String), 2019-06-20 09:52:49.345(Timestamp)
2019-06-20 09:52:49 -<==    Updates: 1
2019-06-20 09:52:49 -请求地址 : http://localhost:8081/main
2019-06-20 09:52:49 -HTTP METHOD : GET
2019-06-20 09:52:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-20 09:52:49 -参数 : []
2019-06-20 09:52:49 -耗时 : 0
2019-06-20 09:52:49 -返回值 : main
2019-06-20 09:52:49 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-20 09:52:49 -HTTP METHOD : GET
2019-06-20 09:52:49 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-20 09:52:49 -参数 : []
2019-06-20 09:52:49 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-20 09:52:49 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-20 09:52:49 -<==      Total: 0
2019-06-20 09:52:49 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-20 09:52:49 -==> Parameters: 1(Long), 0(String)
2019-06-20 09:52:49 -<==      Total: 1
2019-06-20 09:52:49 -耗时 : 41
2019-06-20 09:52:49 -返回值 : com.bootdo.common.utils.PageUtils@70a76d1b
2019-06-20 09:52:49 -请求地址 : http://localhost:8081/main
2019-06-20 09:52:49 -HTTP METHOD : GET
2019-06-20 09:52:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-20 09:52:49 -参数 : []
2019-06-20 09:52:49 -耗时 : 36
2019-06-20 09:52:49 -返回值 : main
2019-06-20 09:52:51 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-06-20 09:52:51 -HTTP METHOD : GET
2019-06-20 09:52:51 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-06-20 09:52:51 -参数 : []
2019-06-20 09:52:51 -耗时 : 0
2019-06-20 09:52:51 -返回值 : moneyLog/elecLog/elecLog
2019-06-20 09:52:51 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-06-20 09:52:51 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-20 09:52:51 -HTTP METHOD : GET
2019-06-20 09:52:51 -HTTP METHOD : GET
2019-06-20 09:52:51 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:52:51 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:52:51 -参数 : [elecType]
2019-06-20 09:52:51 -参数 : [userType]
2019-06-20 09:52:51 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:52:51 -==> Parameters: userType(String)
2019-06-20 09:52:51 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:52:51 -==> Parameters: elecType(String)
2019-06-20 09:52:51 -<==      Total: 11
2019-06-20 09:52:51 -耗时 : 6
2019-06-20 09:52:51 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:52:51 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-06-20 09:52:51 -HTTP METHOD : GET
2019-06-20 09:52:51 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-06-20 09:52:51 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, elecDate=}]
2019-06-20 09:52:51 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-06-20 09:52:51 -==> Parameters: 0(Integer), 10(Integer)
2019-06-20 09:52:51 -<==      Total: 10
2019-06-20 09:52:51 -==>  Preparing: select count(*) from elec_log 
2019-06-20 09:52:51 -==> Parameters: 
2019-06-20 09:52:51 -<==      Total: 1
2019-06-20 09:52:51 -耗时 : 5
2019-06-20 09:52:51 -返回值 : com.bootdo.common.utils.PageUtils@4c69dff0
2019-06-20 09:52:52 -<==      Total: 4
2019-06-20 09:52:52 -耗时 : 93
2019-06-20 09:52:52 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:52:53 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-06-20 09:52:53 -HTTP METHOD : GET
2019-06-20 09:52:53 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-06-20 09:52:53 -参数 : []
2019-06-20 09:52:53 -耗时 : 1
2019-06-20 09:52:53 -返回值 : moneyLog/heatLog/heatLog
2019-06-20 09:52:53 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-20 09:52:53 -HTTP METHOD : GET
2019-06-20 09:52:53 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:52:53 -参数 : [userType]
2019-06-20 09:52:53 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:52:53 -==> Parameters: userType(String)
2019-06-20 09:52:53 -<==      Total: 4
2019-06-20 09:52:53 -耗时 : 4
2019-06-20 09:52:53 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:52:53 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-06-20 09:52:53 -HTTP METHOD : GET
2019-06-20 09:52:53 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:52:53 -参数 : [heatType]
2019-06-20 09:52:53 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:52:53 -==> Parameters: heatType(String)
2019-06-20 09:52:53 -<==      Total: 4
2019-06-20 09:52:53 -耗时 : 3
2019-06-20 09:52:53 -返回值 : [DictDO{id=184, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=183, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=182, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=181, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:52:53 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-06-20 09:52:53 -HTTP METHOD : GET
2019-06-20 09:52:53 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-06-20 09:52:53 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-06-20 09:52:53 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-06-20 09:52:53 -==> Parameters: 0(Integer), 10(Integer)
2019-06-20 09:52:53 -<==      Total: 10
2019-06-20 09:52:53 -==>  Preparing: select count(*) from heat_log 
2019-06-20 09:52:53 -==> Parameters: 
2019-06-20 09:52:53 -<==      Total: 1
2019-06-20 09:52:53 -耗时 : 26
2019-06-20 09:52:53 -返回值 : com.bootdo.common.utils.PageUtils@7a57ad02
2019-06-20 09:52:54 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-06-20 09:52:54 -HTTP METHOD : GET
2019-06-20 09:52:54 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-06-20 09:52:54 -参数 : []
2019-06-20 09:52:54 -耗时 : 1
2019-06-20 09:52:54 -返回值 : moneyLog/waterLog/waterLog
2019-06-20 09:52:54 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-20 09:52:54 -HTTP METHOD : GET
2019-06-20 09:52:54 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:52:54 -参数 : [userType]
2019-06-20 09:52:54 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:52:54 -==> Parameters: userType(String)
2019-06-20 09:52:54 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-06-20 09:52:54 -HTTP METHOD : GET
2019-06-20 09:52:54 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:52:54 -参数 : [waterType]
2019-06-20 09:52:54 -<==      Total: 4
2019-06-20 09:52:54 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:52:54 -==> Parameters: waterType(String)
2019-06-20 09:52:54 -<==      Total: 4
2019-06-20 09:52:54 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-06-20 09:52:54 -HTTP METHOD : GET
2019-06-20 09:52:54 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-06-20 09:52:54 -参数 : [{limit=10, offset=0, userType=, waterType=, userOrg=, userId=, waterDate=}]
2019-06-20 09:52:54 -耗时 : 25
2019-06-20 09:52:54 -耗时 : 27
2019-06-20 09:52:54 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-06-20 09:52:54 -返回值 : [DictDO{id=188, name='民用水', value='1', type='waterType', description='水费性质', sort=10, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=187, name='商业水1', value='2', type='waterType', description='水费性质', sort=20, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=186, name='商业水2', value='3', type='waterType', description='水费性质', sort=30, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=185, name='商业水3', value='4', type='waterType', description='水费性质', sort=40, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:52:54 -==> Parameters: 0(Integer), 10(Integer)
2019-06-20 09:52:54 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:52:54 -<==      Total: 10
2019-06-20 09:52:54 -==>  Preparing: select count(*) from water_log 
2019-06-20 09:52:54 -==> Parameters: 
2019-06-20 09:52:54 -<==      Total: 1
2019-06-20 09:52:54 -耗时 : 13
2019-06-20 09:52:54 -返回值 : com.bootdo.common.utils.PageUtils@5fdb21ed
2019-06-20 09:52:55 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-06-20 09:52:55 -HTTP METHOD : GET
2019-06-20 09:52:55 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-06-20 09:52:55 -参数 : []
2019-06-20 09:52:55 -耗时 : 1
2019-06-20 09:52:55 -返回值 : moneyLog/heatLog/heatLog
2019-06-20 09:52:55 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-20 09:52:55 -HTTP METHOD : GET
2019-06-20 09:52:55 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:52:55 -参数 : [userType]
2019-06-20 09:52:55 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:52:55 -==> Parameters: userType(String)
2019-06-20 09:52:55 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-06-20 09:52:55 -HTTP METHOD : GET
2019-06-20 09:52:55 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:52:55 -参数 : [heatType]
2019-06-20 09:52:55 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:52:55 -==> Parameters: heatType(String)
2019-06-20 09:52:55 -<==      Total: 4
2019-06-20 09:52:55 -耗时 : 4
2019-06-20 09:52:55 -返回值 : [DictDO{id=184, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=183, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=182, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=181, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:52:55 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-06-20 09:52:55 -HTTP METHOD : GET
2019-06-20 09:52:55 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-06-20 09:52:55 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-06-20 09:52:55 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-06-20 09:52:55 -==> Parameters: 0(Integer), 10(Integer)
2019-06-20 09:52:55 -<==      Total: 10
2019-06-20 09:52:55 -==>  Preparing: select count(*) from heat_log 
2019-06-20 09:52:55 -==> Parameters: 
2019-06-20 09:52:55 -<==      Total: 1
2019-06-20 09:52:55 -耗时 : 5
2019-06-20 09:52:55 -返回值 : com.bootdo.common.utils.PageUtils@475fc14d
2019-06-20 09:52:56 -<==      Total: 4
2019-06-20 09:52:56 -耗时 : 116
2019-06-20 09:52:56 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:52:56 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-06-20 09:52:56 -HTTP METHOD : GET
2019-06-20 09:52:56 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-06-20 09:52:56 -参数 : []
2019-06-20 09:52:56 -耗时 : 0
2019-06-20 09:52:56 -返回值 : moneyLog/elecLog/elecLog
2019-06-20 09:52:56 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-20 09:52:56 -HTTP METHOD : GET
2019-06-20 09:52:56 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:52:56 -参数 : [userType]
2019-06-20 09:52:56 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:52:56 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-06-20 09:52:56 -HTTP METHOD : GET
2019-06-20 09:52:56 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:52:56 -参数 : [elecType]
2019-06-20 09:52:56 -==> Parameters: userType(String)
2019-06-20 09:52:56 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:52:56 -==> Parameters: elecType(String)
2019-06-20 09:52:56 -<==      Total: 4
2019-06-20 09:52:56 -耗时 : 3
2019-06-20 09:52:56 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:52:56 -<==      Total: 11
2019-06-20 09:52:56 -耗时 : 3
2019-06-20 09:52:56 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:52:56 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-06-20 09:52:56 -HTTP METHOD : GET
2019-06-20 09:52:56 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-06-20 09:52:56 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, elecDate=}]
2019-06-20 09:52:56 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-06-20 09:52:56 -==> Parameters: 0(Integer), 10(Integer)
2019-06-20 09:52:56 -<==      Total: 10
2019-06-20 09:52:56 -==>  Preparing: select count(*) from elec_log 
2019-06-20 09:52:56 -==> Parameters: 
2019-06-20 09:52:56 -<==      Total: 1
2019-06-20 09:52:56 -耗时 : 26
2019-06-20 09:52:56 -返回值 : com.bootdo.common.utils.PageUtils@587bf8af
2019-06-20 09:52:57 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-06-20 09:52:57 -HTTP METHOD : GET
2019-06-20 09:52:57 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-06-20 09:52:57 -参数 : []
2019-06-20 09:52:57 -耗时 : 1
2019-06-20 09:52:57 -返回值 : moneyLog/heatLog/heatLog
2019-06-20 09:52:57 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-20 09:52:57 -HTTP METHOD : GET
2019-06-20 09:52:57 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:52:57 -参数 : [userType]
2019-06-20 09:52:57 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:52:57 -==> Parameters: userType(String)
2019-06-20 09:52:57 -<==      Total: 4
2019-06-20 09:52:57 -耗时 : 4
2019-06-20 09:52:57 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:52:57 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-06-20 09:52:57 -HTTP METHOD : GET
2019-06-20 09:52:57 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:52:57 -参数 : [heatType]
2019-06-20 09:52:57 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:52:57 -==> Parameters: heatType(String)
2019-06-20 09:52:57 -<==      Total: 4
2019-06-20 09:52:57 -耗时 : 7
2019-06-20 09:52:57 -返回值 : [DictDO{id=184, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=183, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=182, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=181, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:52:57 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-06-20 09:52:57 -HTTP METHOD : GET
2019-06-20 09:52:57 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-06-20 09:52:57 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-06-20 09:52:57 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-06-20 09:52:57 -==> Parameters: 0(Integer), 10(Integer)
2019-06-20 09:52:57 -<==      Total: 10
2019-06-20 09:52:57 -==>  Preparing: select count(*) from heat_log 
2019-06-20 09:52:57 -==> Parameters: 
2019-06-20 09:52:57 -<==      Total: 1
2019-06-20 09:52:57 -耗时 : 6
2019-06-20 09:52:57 -返回值 : com.bootdo.common.utils.PageUtils@3bae7913
2019-06-20 09:52:57 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-06-20 09:52:57 -HTTP METHOD : GET
2019-06-20 09:52:57 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-06-20 09:52:57 -参数 : []
2019-06-20 09:52:57 -耗时 : 1
2019-06-20 09:52:57 -返回值 : moneyLog/waterLog/waterLog
2019-06-20 09:52:57 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-20 09:52:57 -HTTP METHOD : GET
2019-06-20 09:52:57 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:52:57 -参数 : [userType]
2019-06-20 09:52:57 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:52:57 -==> Parameters: userType(String)
2019-06-20 09:52:57 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-06-20 09:52:57 -HTTP METHOD : GET
2019-06-20 09:52:57 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:52:57 -参数 : [waterType]
2019-06-20 09:52:57 -<==      Total: 4
2019-06-20 09:52:57 -耗时 : 4
2019-06-20 09:52:57 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:52:57 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:52:57 -==> Parameters: waterType(String)
2019-06-20 09:52:57 -<==      Total: 4
2019-06-20 09:52:57 -耗时 : 4
2019-06-20 09:52:57 -返回值 : [DictDO{id=188, name='民用水', value='1', type='waterType', description='水费性质', sort=10, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=187, name='商业水1', value='2', type='waterType', description='水费性质', sort=20, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=186, name='商业水2', value='3', type='waterType', description='水费性质', sort=30, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=185, name='商业水3', value='4', type='waterType', description='水费性质', sort=40, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:52:57 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-06-20 09:52:57 -HTTP METHOD : GET
2019-06-20 09:52:57 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-06-20 09:52:57 -参数 : [{limit=10, offset=0, userType=, waterType=, userOrg=, userId=, waterDate=}]
2019-06-20 09:52:57 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-06-20 09:52:57 -==> Parameters: 0(Integer), 10(Integer)
2019-06-20 09:52:58 -<==      Total: 10
2019-06-20 09:52:58 -==>  Preparing: select count(*) from water_log 
2019-06-20 09:52:58 -==> Parameters: 
2019-06-20 09:52:58 -<==      Total: 1
2019-06-20 09:52:58 -耗时 : 452
2019-06-20 09:52:58 -返回值 : com.bootdo.common.utils.PageUtils@574d591a
2019-06-20 09:52:59 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-06-20 09:52:59 -HTTP METHOD : GET
2019-06-20 09:52:59 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-06-20 09:52:59 -参数 : []
2019-06-20 09:52:59 -耗时 : 0
2019-06-20 09:52:59 -返回值 : moneyLog/heatLog/heatLog
2019-06-20 09:52:59 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-20 09:52:59 -HTTP METHOD : GET
2019-06-20 09:52:59 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:52:59 -参数 : [userType]
2019-06-20 09:52:59 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-06-20 09:52:59 -HTTP METHOD : GET
2019-06-20 09:52:59 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:52:59 -参数 : [heatType]
2019-06-20 09:52:59 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:52:59 -==> Parameters: heatType(String)
2019-06-20 09:52:59 -<==      Total: 4
2019-06-20 09:52:59 -耗时 : 5
2019-06-20 09:52:59 -返回值 : [DictDO{id=184, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=183, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=182, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=181, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:52:59 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:52:59 -==> Parameters: userType(String)
2019-06-20 09:52:59 -<==      Total: 4
2019-06-20 09:52:59 -耗时 : 21
2019-06-20 09:52:59 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:52:59 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-06-20 09:52:59 -HTTP METHOD : GET
2019-06-20 09:52:59 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-06-20 09:52:59 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-06-20 09:52:59 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-06-20 09:52:59 -==> Parameters: 0(Integer), 10(Integer)
2019-06-20 09:52:59 -<==      Total: 10
2019-06-20 09:52:59 -==>  Preparing: select count(*) from heat_log 
2019-06-20 09:52:59 -==> Parameters: 
2019-06-20 09:52:59 -<==      Total: 1
2019-06-20 09:52:59 -耗时 : 79
2019-06-20 09:52:59 -返回值 : com.bootdo.common.utils.PageUtils@724962df
2019-06-20 09:53:00 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-06-20 09:53:00 -HTTP METHOD : GET
2019-06-20 09:53:00 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-06-20 09:53:00 -参数 : []
2019-06-20 09:53:00 -耗时 : 0
2019-06-20 09:53:00 -返回值 : moneyLog/elecLog/elecLog
2019-06-20 09:53:00 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-20 09:53:00 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-06-20 09:53:00 -HTTP METHOD : GET
2019-06-20 09:53:00 -HTTP METHOD : GET
2019-06-20 09:53:00 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:53:00 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:53:00 -参数 : [userType]
2019-06-20 09:53:00 -参数 : [elecType]
2019-06-20 09:53:00 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:53:00 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:53:00 -==> Parameters: elecType(String)
2019-06-20 09:53:00 -==> Parameters: userType(String)
2019-06-20 09:53:00 -<==      Total: 4
2019-06-20 09:53:00 -耗时 : 3
2019-06-20 09:53:00 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:53:00 -<==      Total: 11
2019-06-20 09:53:00 -耗时 : 6
2019-06-20 09:53:00 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:53:00 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-06-20 09:53:00 -HTTP METHOD : GET
2019-06-20 09:53:00 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-06-20 09:53:00 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, elecDate=}]
2019-06-20 09:53:00 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-06-20 09:53:00 -==> Parameters: 0(Integer), 10(Integer)
2019-06-20 09:53:00 -<==      Total: 10
2019-06-20 09:53:00 -==>  Preparing: select count(*) from elec_log 
2019-06-20 09:53:00 -==> Parameters: 
2019-06-20 09:53:00 -<==      Total: 1
2019-06-20 09:53:00 -耗时 : 9
2019-06-20 09:53:00 -返回值 : com.bootdo.common.utils.PageUtils@51cd874b
2019-06-20 09:53:00 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-06-20 09:53:00 -HTTP METHOD : GET
2019-06-20 09:53:00 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-06-20 09:53:00 -参数 : []
2019-06-20 09:53:00 -耗时 : 0
2019-06-20 09:53:00 -返回值 : moneyLog/waterLog/waterLog
2019-06-20 09:53:00 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-20 09:53:00 -HTTP METHOD : GET
2019-06-20 09:53:00 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:53:00 -参数 : [userType]
2019-06-20 09:53:00 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:53:00 -==> Parameters: userType(String)
2019-06-20 09:53:00 -<==      Total: 4
2019-06-20 09:53:00 -耗时 : 3
2019-06-20 09:53:00 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:53:00 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-06-20 09:53:00 -HTTP METHOD : GET
2019-06-20 09:53:00 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:53:00 -参数 : [waterType]
2019-06-20 09:53:00 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:53:00 -==> Parameters: waterType(String)
2019-06-20 09:53:00 -<==      Total: 4
2019-06-20 09:53:00 -耗时 : 4
2019-06-20 09:53:00 -返回值 : [DictDO{id=188, name='民用水', value='1', type='waterType', description='水费性质', sort=10, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=187, name='商业水1', value='2', type='waterType', description='水费性质', sort=20, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=186, name='商业水2', value='3', type='waterType', description='水费性质', sort=30, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=185, name='商业水3', value='4', type='waterType', description='水费性质', sort=40, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:53:00 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-06-20 09:53:00 -HTTP METHOD : GET
2019-06-20 09:53:00 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-06-20 09:53:00 -参数 : [{limit=10, offset=0, userType=, waterType=, userOrg=, userId=, waterDate=}]
2019-06-20 09:53:00 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-06-20 09:53:00 -==> Parameters: 0(Integer), 10(Integer)
2019-06-20 09:53:00 -<==      Total: 10
2019-06-20 09:53:00 -==>  Preparing: select count(*) from water_log 
2019-06-20 09:53:00 -==> Parameters: 
2019-06-20 09:53:00 -<==      Total: 1
2019-06-20 09:53:00 -耗时 : 5
2019-06-20 09:53:00 -返回值 : com.bootdo.common.utils.PageUtils@7305f538
2019-06-20 09:53:01 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-06-20 09:53:01 -HTTP METHOD : GET
2019-06-20 09:53:01 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-06-20 09:53:01 -参数 : []
2019-06-20 09:53:01 -耗时 : 0
2019-06-20 09:53:01 -返回值 : moneyLog/heatLog/heatLog
2019-06-20 09:53:01 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-20 09:53:01 -HTTP METHOD : GET
2019-06-20 09:53:01 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:53:01 -参数 : [userType]
2019-06-20 09:53:01 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-06-20 09:53:01 -HTTP METHOD : GET
2019-06-20 09:53:01 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:53:01 -参数 : [heatType]
2019-06-20 09:53:01 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:53:01 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:53:01 -==> Parameters: heatType(String)
2019-06-20 09:53:01 -==> Parameters: userType(String)
2019-06-20 09:53:01 -<==      Total: 4
2019-06-20 09:53:01 -耗时 : 7
2019-06-20 09:53:01 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:53:01 -<==      Total: 4
2019-06-20 09:53:01 -耗时 : 11
2019-06-20 09:53:01 -返回值 : [DictDO{id=184, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=183, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=182, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=181, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:53:01 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-06-20 09:53:01 -HTTP METHOD : GET
2019-06-20 09:53:01 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-06-20 09:53:01 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-06-20 09:53:01 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-06-20 09:53:01 -==> Parameters: 0(Integer), 10(Integer)
2019-06-20 09:53:01 -<==      Total: 10
2019-06-20 09:53:01 -==>  Preparing: select count(*) from heat_log 
2019-06-20 09:53:01 -==> Parameters: 
2019-06-20 09:53:01 -<==      Total: 1
2019-06-20 09:53:01 -耗时 : 7
2019-06-20 09:53:01 -返回值 : com.bootdo.common.utils.PageUtils@9d748c7
2019-06-20 09:53:02 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-06-20 09:53:02 -HTTP METHOD : GET
2019-06-20 09:53:02 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-06-20 09:53:02 -参数 : []
2019-06-20 09:53:02 -耗时 : 1
2019-06-20 09:53:02 -返回值 : moneyLog/elecLog/elecLog
2019-06-20 09:53:02 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-06-20 09:53:02 -HTTP METHOD : GET
2019-06-20 09:53:02 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:53:02 -参数 : [elecType]
2019-06-20 09:53:02 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-20 09:53:02 -HTTP METHOD : GET
2019-06-20 09:53:02 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:53:02 -参数 : [userType]
2019-06-20 09:53:02 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:53:02 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:53:02 -==> Parameters: elecType(String)
2019-06-20 09:53:02 -==> Parameters: userType(String)
2019-06-20 09:53:02 -<==      Total: 11
2019-06-20 09:53:02 -耗时 : 4
2019-06-20 09:53:02 -<==      Total: 4
2019-06-20 09:53:02 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:53:02 -耗时 : 6
2019-06-20 09:53:02 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:53:02 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-06-20 09:53:02 -HTTP METHOD : GET
2019-06-20 09:53:02 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-06-20 09:53:02 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, elecDate=}]
2019-06-20 09:53:02 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-06-20 09:53:02 -==> Parameters: 0(Integer), 10(Integer)
2019-06-20 09:53:02 -<==      Total: 10
2019-06-20 09:53:02 -==>  Preparing: select count(*) from elec_log 
2019-06-20 09:53:02 -==> Parameters: 
2019-06-20 09:53:02 -<==      Total: 1
2019-06-20 09:53:02 -耗时 : 321
2019-06-20 09:53:02 -返回值 : com.bootdo.common.utils.PageUtils@7988a36f
2019-06-20 09:53:04 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-06-20 09:53:04 -HTTP METHOD : GET
2019-06-20 09:53:04 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-06-20 09:53:04 -参数 : []
2019-06-20 09:53:04 -耗时 : 1
2019-06-20 09:53:04 -返回值 : moneyLog/waterLog/waterLog
2019-06-20 09:53:04 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-20 09:53:04 -HTTP METHOD : GET
2019-06-20 09:53:04 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:53:04 -参数 : [userType]
2019-06-20 09:53:04 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-06-20 09:53:04 -HTTP METHOD : GET
2019-06-20 09:53:04 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:53:04 -参数 : [waterType]
2019-06-20 09:53:04 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:53:04 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:53:04 -==> Parameters: userType(String)
2019-06-20 09:53:04 -==> Parameters: waterType(String)
2019-06-20 09:53:04 -<==      Total: 4
2019-06-20 09:53:04 -<==      Total: 4
2019-06-20 09:53:04 -耗时 : 4
2019-06-20 09:53:04 -耗时 : 4
2019-06-20 09:53:04 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:53:04 -返回值 : [DictDO{id=188, name='民用水', value='1', type='waterType', description='水费性质', sort=10, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=187, name='商业水1', value='2', type='waterType', description='水费性质', sort=20, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=186, name='商业水2', value='3', type='waterType', description='水费性质', sort=30, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=185, name='商业水3', value='4', type='waterType', description='水费性质', sort=40, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:53:04 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-06-20 09:53:04 -HTTP METHOD : GET
2019-06-20 09:53:04 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-06-20 09:53:04 -参数 : [{limit=10, offset=0, userType=, waterType=, userOrg=, userId=, waterDate=}]
2019-06-20 09:53:04 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-06-20 09:53:04 -==> Parameters: 0(Integer), 10(Integer)
2019-06-20 09:53:04 -<==      Total: 10
2019-06-20 09:53:04 -==>  Preparing: select count(*) from water_log 
2019-06-20 09:53:04 -==> Parameters: 
2019-06-20 09:53:04 -<==      Total: 1
2019-06-20 09:53:04 -耗时 : 6
2019-06-20 09:53:04 -返回值 : com.bootdo.common.utils.PageUtils@3117d926
2019-06-20 09:53:05 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-06-20 09:53:05 -HTTP METHOD : GET
2019-06-20 09:53:05 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-06-20 09:53:05 -参数 : []
2019-06-20 09:53:05 -耗时 : 13
2019-06-20 09:53:05 -返回值 : moneyLog/heatLog/heatLog
2019-06-20 09:53:05 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-20 09:53:05 -HTTP METHOD : GET
2019-06-20 09:53:05 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:53:05 -参数 : [userType]
2019-06-20 09:53:05 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:53:05 -==> Parameters: userType(String)
2019-06-20 09:53:05 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-06-20 09:53:05 -HTTP METHOD : GET
2019-06-20 09:53:05 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:53:05 -参数 : [heatType]
2019-06-20 09:53:05 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:53:05 -==> Parameters: heatType(String)
2019-06-20 09:53:05 -<==      Total: 4
2019-06-20 09:53:05 -耗时 : 4
2019-06-20 09:53:05 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:53:05 -<==      Total: 4
2019-06-20 09:53:05 -耗时 : 3
2019-06-20 09:53:05 -返回值 : [DictDO{id=184, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=183, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=182, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=181, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:53:05 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-06-20 09:53:05 -HTTP METHOD : GET
2019-06-20 09:53:05 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-06-20 09:53:05 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-06-20 09:53:05 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-06-20 09:53:05 -==> Parameters: 0(Integer), 10(Integer)
2019-06-20 09:53:05 -<==      Total: 10
2019-06-20 09:53:05 -==>  Preparing: select count(*) from heat_log 
2019-06-20 09:53:05 -==> Parameters: 
2019-06-20 09:53:05 -<==      Total: 1
2019-06-20 09:53:05 -耗时 : 5
2019-06-20 09:53:05 -返回值 : com.bootdo.common.utils.PageUtils@3d8f4048
2019-06-20 09:53:06 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-06-20 09:53:06 -HTTP METHOD : GET
2019-06-20 09:53:06 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-06-20 09:53:06 -参数 : []
2019-06-20 09:53:06 -耗时 : 0
2019-06-20 09:53:06 -返回值 : moneyLog/elecLog/elecLog
2019-06-20 09:53:06 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-20 09:53:06 -HTTP METHOD : GET
2019-06-20 09:53:06 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:53:06 -参数 : [userType]
2019-06-20 09:53:06 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:53:06 -==> Parameters: userType(String)
2019-06-20 09:53:06 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-06-20 09:53:06 -HTTP METHOD : GET
2019-06-20 09:53:06 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:53:06 -参数 : [elecType]
2019-06-20 09:53:06 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:53:06 -==> Parameters: elecType(String)
2019-06-20 09:53:06 -<==      Total: 4
2019-06-20 09:53:06 -耗时 : 3
2019-06-20 09:53:06 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:53:06 -<==      Total: 11
2019-06-20 09:53:06 -耗时 : 4
2019-06-20 09:53:06 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:53:06 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-06-20 09:53:06 -HTTP METHOD : GET
2019-06-20 09:53:06 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-06-20 09:53:06 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, elecDate=}]
2019-06-20 09:53:06 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-06-20 09:53:06 -==> Parameters: 0(Integer), 10(Integer)
2019-06-20 09:53:06 -<==      Total: 10
2019-06-20 09:53:06 -==>  Preparing: select count(*) from elec_log 
2019-06-20 09:53:06 -==> Parameters: 
2019-06-20 09:53:06 -<==      Total: 1
2019-06-20 09:53:06 -耗时 : 6
2019-06-20 09:53:06 -返回值 : com.bootdo.common.utils.PageUtils@31ffeacf
2019-06-20 09:53:07 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-20 09:53:07 -HTTP METHOD : GET
2019-06-20 09:53:07 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:53:07 -参数 : [userType]
2019-06-20 09:53:07 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-06-20 09:53:07 -HTTP METHOD : GET
2019-06-20 09:53:07 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:53:07 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:53:07 -==> Parameters: userType(String)
2019-06-20 09:53:07 -参数 : [elecType]
2019-06-20 09:53:07 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:53:07 -==> Parameters: elecType(String)
2019-06-20 09:53:07 -<==      Total: 4
2019-06-20 09:53:07 -耗时 : 6
2019-06-20 09:53:07 -<==      Total: 11
2019-06-20 09:53:07 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:53:07 -耗时 : 4
2019-06-20 09:53:07 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:53:28 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-20 09:53:28 -HTTP METHOD : GET
2019-06-20 09:53:28 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:53:28 -参数 : [userType]
2019-06-20 09:53:28 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:53:28 -==> Parameters: userType(String)
2019-06-20 09:53:28 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-06-20 09:53:28 -HTTP METHOD : GET
2019-06-20 09:53:28 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:53:28 -参数 : [heatType]
2019-06-20 09:53:28 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:53:28 -==> Parameters: heatType(String)
2019-06-20 09:53:28 -<==      Total: 4
2019-06-20 09:53:28 -耗时 : 5
2019-06-20 09:53:28 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:53:28 -<==      Total: 4
2019-06-20 09:53:28 -耗时 : 5
2019-06-20 09:53:28 -返回值 : [DictDO{id=184, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=183, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=182, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=181, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:53:29 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-20 09:53:29 -HTTP METHOD : GET
2019-06-20 09:53:29 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:53:29 -参数 : [userType]
2019-06-20 09:53:29 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:53:29 -==> Parameters: userType(String)
2019-06-20 09:53:29 -<==      Total: 4
2019-06-20 09:53:29 -耗时 : 4
2019-06-20 09:53:29 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:53:29 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-06-20 09:53:29 -HTTP METHOD : GET
2019-06-20 09:53:29 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:53:29 -参数 : [waterType]
2019-06-20 09:53:29 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:53:29 -==> Parameters: waterType(String)
2019-06-20 09:53:29 -<==      Total: 4
2019-06-20 09:53:29 -耗时 : 3
2019-06-20 09:53:29 -返回值 : [DictDO{id=188, name='民用水', value='1', type='waterType', description='水费性质', sort=10, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=187, name='商业水1', value='2', type='waterType', description='水费性质', sort=20, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=186, name='商业水2', value='3', type='waterType', description='水费性质', sort=30, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=185, name='商业水3', value='4', type='waterType', description='水费性质', sort=40, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:53:30 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-06-20 09:53:30 -HTTP METHOD : GET
2019-06-20 09:53:30 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:53:30 -参数 : [heatType]
2019-06-20 09:53:30 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:53:30 -==> Parameters: heatType(String)
2019-06-20 09:53:30 -<==      Total: 4
2019-06-20 09:53:30 -耗时 : 6
2019-06-20 09:53:30 -返回值 : [DictDO{id=184, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=183, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=182, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=181, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:53:30 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-20 09:53:30 -HTTP METHOD : GET
2019-06-20 09:53:30 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:53:30 -参数 : [userType]
2019-06-20 09:53:30 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:53:30 -==> Parameters: userType(String)
2019-06-20 09:53:30 -<==      Total: 4
2019-06-20 09:53:30 -耗时 : 5
2019-06-20 09:53:30 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:53:31 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-20 09:53:31 -HTTP METHOD : GET
2019-06-20 09:53:31 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:53:31 -参数 : [userType]
2019-06-20 09:53:31 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:53:31 -==> Parameters: userType(String)
2019-06-20 09:53:31 -<==      Total: 4
2019-06-20 09:53:31 -耗时 : 3
2019-06-20 09:53:31 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:53:31 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-06-20 09:53:31 -HTTP METHOD : GET
2019-06-20 09:53:31 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:53:31 -参数 : [elecType]
2019-06-20 09:53:31 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:53:31 -==> Parameters: elecType(String)
2019-06-20 09:53:31 -<==      Total: 11
2019-06-20 09:53:31 -耗时 : 4
2019-06-20 09:53:31 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:53:36 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-06-20 09:53:36 -HTTP METHOD : GET
2019-06-20 09:53:36 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-06-20 09:53:36 -参数 : []
2019-06-20 09:53:36 -耗时 : 0
2019-06-20 09:53:36 -返回值 : system/dept/deptTree
2019-06-20 09:53:36 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-06-20 09:53:36 -HTTP METHOD : GET
2019-06-20 09:53:36 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-06-20 09:53:36 -参数 : []
2019-06-20 09:53:36 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-06-20 09:53:36 -==> Parameters: 
2019-06-20 09:53:36 -<==      Total: 3
2019-06-20 09:53:36 -耗时 : 3
2019-06-20 09:53:36 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-06-20 09:53:44 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-06-20 09:53:44 -HTTP METHOD : GET
2019-06-20 09:53:44 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-06-20 09:53:44 -参数 : []
2019-06-20 09:53:44 -耗时 : 1
2019-06-20 09:53:44 -返回值 : moneyLog/heatLog/heatLog
2019-06-20 09:53:44 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-20 09:53:44 -HTTP METHOD : GET
2019-06-20 09:53:44 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:53:44 -参数 : [userType]
2019-06-20 09:53:44 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:53:44 -==> Parameters: userType(String)
2019-06-20 09:53:44 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-06-20 09:53:44 -HTTP METHOD : GET
2019-06-20 09:53:44 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:53:44 -参数 : [heatType]
2019-06-20 09:53:44 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:53:44 -==> Parameters: heatType(String)
2019-06-20 09:53:44 -<==      Total: 4
2019-06-20 09:53:44 -耗时 : 4
2019-06-20 09:53:44 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:53:44 -<==      Total: 4
2019-06-20 09:53:44 -耗时 : 4
2019-06-20 09:53:44 -返回值 : [DictDO{id=184, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=183, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=182, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=181, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:53:44 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-06-20 09:53:44 -HTTP METHOD : GET
2019-06-20 09:53:44 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-06-20 09:53:44 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-06-20 09:53:44 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-06-20 09:53:44 -==> Parameters: 0(Integer), 10(Integer)
2019-06-20 09:53:44 -<==      Total: 10
2019-06-20 09:53:44 -==>  Preparing: select count(*) from heat_log 
2019-06-20 09:53:44 -==> Parameters: 
2019-06-20 09:53:44 -<==      Total: 1
2019-06-20 09:53:44 -耗时 : 5
2019-06-20 09:53:44 -返回值 : com.bootdo.common.utils.PageUtils@9e3d836
2019-06-20 09:53:45 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-06-20 09:53:45 -HTTP METHOD : GET
2019-06-20 09:53:45 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-06-20 09:53:45 -参数 : []
2019-06-20 09:53:45 -耗时 : 0
2019-06-20 09:53:45 -返回值 : moneyLog/waterLog/waterLog
2019-06-20 09:53:46 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-20 09:53:46 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-06-20 09:53:46 -HTTP METHOD : GET
2019-06-20 09:53:46 -HTTP METHOD : GET
2019-06-20 09:53:46 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:53:46 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:53:46 -参数 : [userType]
2019-06-20 09:53:46 -参数 : [waterType]
2019-06-20 09:53:46 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:53:46 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:53:46 -==> Parameters: waterType(String)
2019-06-20 09:53:46 -==> Parameters: userType(String)
2019-06-20 09:53:46 -<==      Total: 4
2019-06-20 09:53:46 -耗时 : 2
2019-06-20 09:53:46 -返回值 : [DictDO{id=188, name='民用水', value='1', type='waterType', description='水费性质', sort=10, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=187, name='商业水1', value='2', type='waterType', description='水费性质', sort=20, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=186, name='商业水2', value='3', type='waterType', description='水费性质', sort=30, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=185, name='商业水3', value='4', type='waterType', description='水费性质', sort=40, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:53:46 -<==      Total: 4
2019-06-20 09:53:46 -耗时 : 4
2019-06-20 09:53:46 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:53:46 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-06-20 09:53:46 -HTTP METHOD : GET
2019-06-20 09:53:46 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-06-20 09:53:46 -参数 : [{limit=10, offset=0, userType=, waterType=, userOrg=, userId=, waterDate=}]
2019-06-20 09:53:46 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-06-20 09:53:46 -==> Parameters: 0(Integer), 10(Integer)
2019-06-20 09:53:46 -<==      Total: 10
2019-06-20 09:53:46 -==>  Preparing: select count(*) from water_log 
2019-06-20 09:53:46 -==> Parameters: 
2019-06-20 09:53:46 -<==      Total: 1
2019-06-20 09:53:46 -耗时 : 4
2019-06-20 09:53:46 -返回值 : com.bootdo.common.utils.PageUtils@4709c836
2019-06-20 09:53:47 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-06-20 09:53:47 -HTTP METHOD : GET
2019-06-20 09:53:47 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-06-20 09:53:47 -参数 : []
2019-06-20 09:53:47 -耗时 : 0
2019-06-20 09:53:47 -返回值 : moneyLog/heatLog/heatLog
2019-06-20 09:53:47 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-20 09:53:47 -HTTP METHOD : GET
2019-06-20 09:53:47 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:53:47 -参数 : [userType]
2019-06-20 09:53:47 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:53:47 -==> Parameters: userType(String)
2019-06-20 09:53:47 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-06-20 09:53:47 -HTTP METHOD : GET
2019-06-20 09:53:47 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:53:47 -参数 : [heatType]
2019-06-20 09:53:47 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:53:47 -<==      Total: 4
2019-06-20 09:53:47 -==> Parameters: heatType(String)
2019-06-20 09:53:47 -耗时 : 3
2019-06-20 09:53:47 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:53:47 -<==      Total: 4
2019-06-20 09:53:47 -耗时 : 3
2019-06-20 09:53:47 -返回值 : [DictDO{id=184, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=183, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=182, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=181, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:53:47 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-06-20 09:53:47 -HTTP METHOD : GET
2019-06-20 09:53:47 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-06-20 09:53:47 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-06-20 09:53:47 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-06-20 09:53:47 -==> Parameters: 0(Integer), 10(Integer)
2019-06-20 09:53:47 -<==      Total: 10
2019-06-20 09:53:47 -==>  Preparing: select count(*) from heat_log 
2019-06-20 09:53:47 -==> Parameters: 
2019-06-20 09:53:47 -<==      Total: 1
2019-06-20 09:53:47 -耗时 : 5
2019-06-20 09:53:47 -返回值 : com.bootdo.common.utils.PageUtils@cb40f15
2019-06-20 09:53:47 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-06-20 09:53:47 -HTTP METHOD : GET
2019-06-20 09:53:47 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-06-20 09:53:47 -参数 : []
2019-06-20 09:53:47 -耗时 : 0
2019-06-20 09:53:47 -返回值 : moneyLog/elecLog/elecLog
2019-06-20 09:53:48 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-20 09:53:48 -HTTP METHOD : GET
2019-06-20 09:53:48 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:53:48 -参数 : [userType]
2019-06-20 09:53:48 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:53:48 -==> Parameters: userType(String)
2019-06-20 09:53:48 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-06-20 09:53:48 -HTTP METHOD : GET
2019-06-20 09:53:48 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:53:48 -参数 : [elecType]
2019-06-20 09:53:48 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:53:48 -==> Parameters: elecType(String)
2019-06-20 09:53:48 -<==      Total: 4
2019-06-20 09:53:48 -耗时 : 3
2019-06-20 09:53:48 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:53:48 -<==      Total: 11
2019-06-20 09:53:48 -耗时 : 4
2019-06-20 09:53:48 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:53:48 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-06-20 09:53:48 -HTTP METHOD : GET
2019-06-20 09:53:48 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-06-20 09:53:48 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, elecDate=}]
2019-06-20 09:53:48 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-06-20 09:53:48 -==> Parameters: 0(Integer), 10(Integer)
2019-06-20 09:53:48 -<==      Total: 10
2019-06-20 09:53:48 -==>  Preparing: select count(*) from elec_log 
2019-06-20 09:53:48 -==> Parameters: 
2019-06-20 09:53:48 -<==      Total: 1
2019-06-20 09:53:48 -耗时 : 30
2019-06-20 09:53:48 -返回值 : com.bootdo.common.utils.PageUtils@2d6d803b
2019-06-20 09:53:48 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-06-20 09:53:48 -HTTP METHOD : GET
2019-06-20 09:53:48 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-06-20 09:53:48 -参数 : []
2019-06-20 09:53:48 -耗时 : 0
2019-06-20 09:53:48 -返回值 : moneyLog/waterLog/waterLog
2019-06-20 09:53:48 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-20 09:53:48 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-06-20 09:53:48 -HTTP METHOD : GET
2019-06-20 09:53:48 -HTTP METHOD : GET
2019-06-20 09:53:48 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:53:48 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:53:48 -参数 : [userType]
2019-06-20 09:53:48 -参数 : [waterType]
2019-06-20 09:53:48 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:53:48 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:53:48 -==> Parameters: waterType(String)
2019-06-20 09:53:48 -==> Parameters: userType(String)
2019-06-20 09:53:48 -<==      Total: 4
2019-06-20 09:53:48 -<==      Total: 4
2019-06-20 09:53:48 -耗时 : 3
2019-06-20 09:53:48 -耗时 : 3
2019-06-20 09:53:48 -返回值 : [DictDO{id=188, name='民用水', value='1', type='waterType', description='水费性质', sort=10, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=187, name='商业水1', value='2', type='waterType', description='水费性质', sort=20, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=186, name='商业水2', value='3', type='waterType', description='水费性质', sort=30, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=185, name='商业水3', value='4', type='waterType', description='水费性质', sort=40, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:53:48 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:53:48 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-06-20 09:53:48 -HTTP METHOD : GET
2019-06-20 09:53:48 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-06-20 09:53:48 -参数 : [{limit=10, offset=0, userType=, waterType=, userOrg=, userId=, waterDate=}]
2019-06-20 09:53:48 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-06-20 09:53:48 -==> Parameters: 0(Integer), 10(Integer)
2019-06-20 09:53:48 -<==      Total: 10
2019-06-20 09:53:48 -==>  Preparing: select count(*) from water_log 
2019-06-20 09:53:48 -==> Parameters: 
2019-06-20 09:53:48 -<==      Total: 1
2019-06-20 09:53:48 -耗时 : 5
2019-06-20 09:53:48 -返回值 : com.bootdo.common.utils.PageUtils@1a43bc3e
2019-06-20 09:53:49 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-06-20 09:53:49 -HTTP METHOD : GET
2019-06-20 09:53:49 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-06-20 09:53:49 -参数 : []
2019-06-20 09:53:49 -耗时 : 1
2019-06-20 09:53:49 -返回值 : moneyLog/heatLog/heatLog
2019-06-20 09:53:49 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-20 09:53:49 -HTTP METHOD : GET
2019-06-20 09:53:49 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:53:49 -参数 : [userType]
2019-06-20 09:53:49 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:53:49 -==> Parameters: userType(String)
2019-06-20 09:53:49 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-06-20 09:53:49 -HTTP METHOD : GET
2019-06-20 09:53:49 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:53:49 -参数 : [heatType]
2019-06-20 09:53:49 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:53:49 -==> Parameters: heatType(String)
2019-06-20 09:53:49 -<==      Total: 4
2019-06-20 09:53:49 -耗时 : 2
2019-06-20 09:53:49 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:53:49 -<==      Total: 4
2019-06-20 09:53:49 -耗时 : 2
2019-06-20 09:53:49 -返回值 : [DictDO{id=184, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=183, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=182, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=181, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:53:49 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-06-20 09:53:49 -HTTP METHOD : GET
2019-06-20 09:53:49 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-06-20 09:53:49 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-06-20 09:53:49 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-06-20 09:53:49 -==> Parameters: 0(Integer), 10(Integer)
2019-06-20 09:53:49 -<==      Total: 10
2019-06-20 09:53:49 -==>  Preparing: select count(*) from heat_log 
2019-06-20 09:53:49 -==> Parameters: 
2019-06-20 09:53:49 -<==      Total: 1
2019-06-20 09:53:49 -耗时 : 7
2019-06-20 09:53:49 -返回值 : com.bootdo.common.utils.PageUtils@7a10ac81
2019-06-20 09:54:48 -请求地址 : http://localhost:8081/index
2019-06-20 09:54:48 -HTTP METHOD : GET
2019-06-20 09:54:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-20 09:54:48 -参数 : [{}]
2019-06-20 09:54:48 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-20 09:54:48 -==> Parameters: 1(Long)
2019-06-20 09:54:48 -<==      Total: 51
2019-06-20 09:54:48 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-20 09:54:48 -==> Parameters: 138(Long)
2019-06-20 09:54:49 -<==      Total: 1
2019-06-20 09:54:49 -耗时 : 231
2019-06-20 09:54:49 -返回值 : index_v1
2019-06-20 09:54:49 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-20 09:54:49 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 231(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-bullseye","url":"/moneyUpLoad/ElecLogUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"165","parentId":"106","text":"缴费上传"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":tru(String), 127.0.0.1(String), 2019-06-20 09:54:49.014(Timestamp)
2019-06-20 09:54:49 -<==    Updates: 1
2019-06-20 09:54:49 -请求地址 : http://localhost:8081/main
2019-06-20 09:54:49 -HTTP METHOD : GET
2019-06-20 09:54:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-20 09:54:49 -参数 : []
2019-06-20 09:54:49 -耗时 : 0
2019-06-20 09:54:49 -返回值 : main
2019-06-20 09:54:49 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-20 09:54:49 -HTTP METHOD : GET
2019-06-20 09:54:49 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-20 09:54:49 -参数 : []
2019-06-20 09:54:49 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-20 09:54:49 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-20 09:54:49 -<==      Total: 0
2019-06-20 09:54:49 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-20 09:54:49 -==> Parameters: 1(Long), 0(String)
2019-06-20 09:54:49 -<==      Total: 1
2019-06-20 09:54:49 -耗时 : 42
2019-06-20 09:54:49 -返回值 : com.bootdo.common.utils.PageUtils@d8ffb9c
2019-06-20 09:54:49 -请求地址 : http://localhost:8081/main
2019-06-20 09:54:49 -HTTP METHOD : GET
2019-06-20 09:54:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-20 09:54:49 -参数 : []
2019-06-20 09:54:49 -耗时 : 0
2019-06-20 09:54:49 -返回值 : main
2019-06-20 09:54:51 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-20 09:54:51 -HTTP METHOD : GET
2019-06-20 09:54:51 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:54:51 -参数 : [userType]
2019-06-20 09:54:51 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-06-20 09:54:51 -HTTP METHOD : GET
2019-06-20 09:54:51 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:54:51 -参数 : [elecType]
2019-06-20 09:54:51 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:54:51 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:54:51 -==> Parameters: userType(String)
2019-06-20 09:54:51 -==> Parameters: elecType(String)
2019-06-20 09:54:51 -<==      Total: 4
2019-06-20 09:54:51 -<==      Total: 11
2019-06-20 09:54:51 -耗时 : 3
2019-06-20 09:54:51 -耗时 : 3
2019-06-20 09:54:51 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:54:51 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:55:31 -请求地址 : http://localhost:8081/index
2019-06-20 09:55:31 -HTTP METHOD : GET
2019-06-20 09:55:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-20 09:55:31 -参数 : [{}]
2019-06-20 09:55:31 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-20 09:55:31 -==> Parameters: 1(Long)
2019-06-20 09:55:31 -<==      Total: 51
2019-06-20 09:55:31 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-20 09:55:31 -==> Parameters: 138(Long)
2019-06-20 09:55:31 -<==      Total: 1
2019-06-20 09:55:31 -耗时 : 21
2019-06-20 09:55:31 -返回值 : index_v1
2019-06-20 09:55:31 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-20 09:55:31 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 21(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-bullseye","url":"/moneyUpLoad/ElecLogUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"165","parentId":"106","text":"缴费上传"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":tru(String), 127.0.0.1(String), 2019-06-20 09:55:31.786(Timestamp)
2019-06-20 09:55:31 -<==    Updates: 1
2019-06-20 09:55:31 -请求地址 : http://localhost:8081/main
2019-06-20 09:55:31 -HTTP METHOD : GET
2019-06-20 09:55:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-20 09:55:31 -参数 : []
2019-06-20 09:55:31 -耗时 : 0
2019-06-20 09:55:31 -返回值 : main
2019-06-20 09:55:31 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-20 09:55:31 -HTTP METHOD : GET
2019-06-20 09:55:31 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-20 09:55:31 -参数 : []
2019-06-20 09:55:31 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-20 09:55:31 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-20 09:55:31 -<==      Total: 0
2019-06-20 09:55:31 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-20 09:55:31 -==> Parameters: 1(Long), 0(String)
2019-06-20 09:55:31 -<==      Total: 1
2019-06-20 09:55:31 -耗时 : 19
2019-06-20 09:55:31 -返回值 : com.bootdo.common.utils.PageUtils@5bad94c4
2019-06-20 09:55:32 -请求地址 : http://localhost:8081/main
2019-06-20 09:55:32 -HTTP METHOD : GET
2019-06-20 09:55:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-20 09:55:32 -参数 : []
2019-06-20 09:55:32 -耗时 : 0
2019-06-20 09:55:32 -返回值 : main
2019-06-20 09:55:34 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-06-20 09:55:34 -HTTP METHOD : GET
2019-06-20 09:55:34 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:55:34 -参数 : [elecType]
2019-06-20 09:55:34 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:55:34 -==> Parameters: elecType(String)
2019-06-20 09:55:34 -<==      Total: 11
2019-06-20 09:55:34 -耗时 : 3
2019-06-20 09:55:34 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:55:34 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-20 09:55:34 -HTTP METHOD : GET
2019-06-20 09:55:34 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:55:34 -参数 : [userType]
2019-06-20 09:55:34 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:55:34 -==> Parameters: userType(String)
2019-06-20 09:55:34 -<==      Total: 4
2019-06-20 09:55:34 -耗时 : 4
2019-06-20 09:55:34 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:57:21 -请求地址 : http://localhost:8081/index
2019-06-20 09:57:21 -HTTP METHOD : GET
2019-06-20 09:57:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-20 09:57:21 -参数 : [{}]
2019-06-20 09:57:21 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-20 09:57:21 -==> Parameters: 1(Long)
2019-06-20 09:57:21 -<==      Total: 51
2019-06-20 09:57:21 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-20 09:57:21 -==> Parameters: 138(Long)
2019-06-20 09:57:21 -<==      Total: 1
2019-06-20 09:57:21 -耗时 : 29
2019-06-20 09:57:21 -返回值 : index_v1
2019-06-20 09:57:21 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-20 09:57:21 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 29(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-bullseye","url":"/moneyUpLoad/ElecLogUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"165","parentId":"106","text":"缴费上传"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":tru(String), 127.0.0.1(String), 2019-06-20 09:57:21.957(Timestamp)
2019-06-20 09:57:22 -<==    Updates: 1
2019-06-20 09:57:22 -请求地址 : http://localhost:8081/main
2019-06-20 09:57:22 -HTTP METHOD : GET
2019-06-20 09:57:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-20 09:57:22 -参数 : []
2019-06-20 09:57:22 -耗时 : 0
2019-06-20 09:57:22 -返回值 : main
2019-06-20 09:57:22 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-20 09:57:22 -HTTP METHOD : GET
2019-06-20 09:57:22 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-20 09:57:22 -参数 : []
2019-06-20 09:57:22 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-20 09:57:22 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-20 09:57:22 -<==      Total: 0
2019-06-20 09:57:22 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-20 09:57:22 -==> Parameters: 1(Long), 0(String)
2019-06-20 09:57:22 -<==      Total: 1
2019-06-20 09:57:22 -耗时 : 5
2019-06-20 09:57:22 -返回值 : com.bootdo.common.utils.PageUtils@6fa1ecf6
2019-06-20 09:57:22 -请求地址 : http://localhost:8081/main
2019-06-20 09:57:22 -HTTP METHOD : GET
2019-06-20 09:57:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-20 09:57:22 -参数 : []
2019-06-20 09:57:22 -耗时 : 0
2019-06-20 09:57:22 -返回值 : main
2019-06-20 09:57:24 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-06-20 09:57:24 -==> Parameters: 1(Long)
2019-06-20 09:57:24 -<==      Total: 95
2019-06-20 09:57:24 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-20 09:57:24 -HTTP METHOD : GET
2019-06-20 09:57:24 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:57:24 -参数 : [userType]
2019-06-20 09:57:24 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:57:24 -==> Parameters: userType(String)
2019-06-20 09:57:24 -<==      Total: 4
2019-06-20 09:57:24 -耗时 : 3
2019-06-20 09:57:24 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:57:24 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-06-20 09:57:24 -HTTP METHOD : GET
2019-06-20 09:57:24 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:57:24 -参数 : [elecType]
2019-06-20 09:57:24 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:57:24 -==> Parameters: elecType(String)
2019-06-20 09:57:24 -<==      Total: 11
2019-06-20 09:57:24 -耗时 : 4
2019-06-20 09:57:24 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:57:25 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-20 09:57:25 -HTTP METHOD : GET
2019-06-20 09:57:25 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:57:25 -参数 : [userType]
2019-06-20 09:57:25 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:57:25 -==> Parameters: userType(String)
2019-06-20 09:57:25 -<==      Total: 4
2019-06-20 09:57:25 -耗时 : 3
2019-06-20 09:57:25 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:57:25 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-06-20 09:57:25 -HTTP METHOD : GET
2019-06-20 09:57:25 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:57:25 -参数 : [heatType]
2019-06-20 09:57:25 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:57:25 -==> Parameters: heatType(String)
2019-06-20 09:57:25 -<==      Total: 4
2019-06-20 09:57:25 -耗时 : 4
2019-06-20 09:57:25 -返回值 : [DictDO{id=184, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=183, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=182, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=181, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:57:26 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-20 09:57:26 -HTTP METHOD : GET
2019-06-20 09:57:26 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:57:26 -参数 : [userType]
2019-06-20 09:57:26 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:57:26 -==> Parameters: userType(String)
2019-06-20 09:57:26 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-06-20 09:57:26 -HTTP METHOD : GET
2019-06-20 09:57:26 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:57:26 -参数 : [waterType]
2019-06-20 09:57:26 -<==      Total: 4
2019-06-20 09:57:26 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:57:26 -==> Parameters: waterType(String)
2019-06-20 09:57:26 -耗时 : 3
2019-06-20 09:57:26 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:57:26 -<==      Total: 4
2019-06-20 09:57:26 -耗时 : 3
2019-06-20 09:57:26 -返回值 : [DictDO{id=188, name='民用水', value='1', type='waterType', description='水费性质', sort=10, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=187, name='商业水1', value='2', type='waterType', description='水费性质', sort=20, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=186, name='商业水2', value='3', type='waterType', description='水费性质', sort=30, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=185, name='商业水3', value='4', type='waterType', description='水费性质', sort=40, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:57:28 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-20 09:57:28 -HTTP METHOD : GET
2019-06-20 09:57:28 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:57:28 -参数 : [userType]
2019-06-20 09:57:28 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:57:28 -==> Parameters: userType(String)
2019-06-20 09:57:28 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-06-20 09:57:28 -HTTP METHOD : GET
2019-06-20 09:57:28 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:57:28 -参数 : [heatType]
2019-06-20 09:57:28 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:57:28 -==> Parameters: heatType(String)
2019-06-20 09:57:28 -<==      Total: 4
2019-06-20 09:57:28 -耗时 : 3
2019-06-20 09:57:28 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:57:28 -<==      Total: 4
2019-06-20 09:57:28 -耗时 : 2
2019-06-20 09:57:28 -返回值 : [DictDO{id=184, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=183, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=182, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=181, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:57:28 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-20 09:57:28 -HTTP METHOD : GET
2019-06-20 09:57:28 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:57:28 -参数 : [userType]
2019-06-20 09:57:28 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:57:28 -==> Parameters: userType(String)
2019-06-20 09:57:28 -<==      Total: 4
2019-06-20 09:57:28 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-06-20 09:57:28 -HTTP METHOD : GET
2019-06-20 09:57:28 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:57:28 -参数 : [elecType]
2019-06-20 09:57:28 -耗时 : 5
2019-06-20 09:57:28 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:57:28 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:57:28 -==> Parameters: elecType(String)
2019-06-20 09:57:28 -<==      Total: 11
2019-06-20 09:57:28 -耗时 : 32
2019-06-20 09:57:28 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:57:29 -请求地址 : http://localhost:8081/moneyList/moneyWZ
2019-06-20 09:57:29 -HTTP METHOD : GET
2019-06-20 09:57:29 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ
2019-06-20 09:57:29 -参数 : []
2019-06-20 09:57:29 -耗时 : 1
2019-06-20 09:57:29 -返回值 : moneyList/moneyWZ
2019-06-20 09:57:29 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-20 09:57:29 -HTTP METHOD : GET
2019-06-20 09:57:29 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:57:29 -参数 : [userType]
2019-06-20 09:57:29 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:57:29 -==> Parameters: userType(String)
2019-06-20 09:57:29 -<==      Total: 4
2019-06-20 09:57:29 -耗时 : 3
2019-06-20 09:57:29 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:57:30 -请求地址 : http://localhost:8081/moneyList/moneyWZ/list
2019-06-20 09:57:30 -HTTP METHOD : GET
2019-06-20 09:57:30 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.list
2019-06-20 09:57:30 -参数 : [{limit=100, offset=0, createTime=, userType=, userId=, queryType=1}, com.bootdo.elec.domain.ElecDO@2a053d9d]
2019-06-20 09:57:30 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `user_id` LIKE 'W%' and user_org = '2' order by id asc limit ?, ? 
2019-06-20 09:57:30 -==> Parameters: 0(Integer), 100(Integer)
2019-06-20 09:57:30 -<==      Total: 100
2019-06-20 09:57:30 -==>  Preparing: select count(*) from elec WHERE `user_id` LIKE 'W%' and user_org = '2' 
2019-06-20 09:57:30 -==> Parameters: 
2019-06-20 09:57:30 -<==      Total: 1
2019-06-20 09:57:30 -耗时 : 102
2019-06-20 09:57:30 -返回值 : com.bootdo.common.utils.PageUtils@7e9d5896
2019-06-20 09:57:56 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 7 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(7)-CONNECTED(7)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 81], outboundChannelpool size = 2, active threads = 0, queued tasks = 0, completed tasks = 13], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 400]
2019-06-20 09:58:11 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-06-20 09:58:11 -HTTP METHOD : GET
2019-06-20 09:58:11 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-06-20 09:58:11 -参数 : []
2019-06-20 09:58:11 -耗时 : 0
2019-06-20 09:58:11 -返回值 : moneyList/moneyList
2019-06-20 09:58:13 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-06-20 09:58:13 -HTTP METHOD : GET
2019-06-20 09:58:13 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-06-20 09:58:13 -参数 : []
2019-06-20 09:58:13 -耗时 : 0
2019-06-20 09:58:13 -返回值 : moneyLog/elecLog/elecLog
2019-06-20 09:58:13 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-06-20 09:58:13 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-20 09:58:13 -HTTP METHOD : GET
2019-06-20 09:58:13 -HTTP METHOD : GET
2019-06-20 09:58:13 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:58:13 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:58:13 -参数 : [elecType]
2019-06-20 09:58:13 -参数 : [userType]
2019-06-20 09:58:13 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:58:13 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:58:13 -==> Parameters: userType(String)
2019-06-20 09:58:13 -==> Parameters: elecType(String)
2019-06-20 09:58:13 -<==      Total: 4
2019-06-20 09:58:13 -<==      Total: 11
2019-06-20 09:58:13 -耗时 : 3
2019-06-20 09:58:13 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:58:13 -耗时 : 4
2019-06-20 09:58:13 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:58:13 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-06-20 09:58:13 -HTTP METHOD : GET
2019-06-20 09:58:13 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-06-20 09:58:13 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, elecDate=}]
2019-06-20 09:58:13 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-06-20 09:58:13 -==> Parameters: 0(Integer), 10(Integer)
2019-06-20 09:58:13 -<==      Total: 10
2019-06-20 09:58:13 -==>  Preparing: select count(*) from elec_log 
2019-06-20 09:58:13 -==> Parameters: 
2019-06-20 09:58:13 -<==      Total: 1
2019-06-20 09:58:13 -耗时 : 17
2019-06-20 09:58:13 -返回值 : com.bootdo.common.utils.PageUtils@3e5a6a97
2019-06-20 09:58:29 -请求地址 : http://localhost:8081/elec/elec
2019-06-20 09:58:29 -HTTP METHOD : GET
2019-06-20 09:58:29 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-06-20 09:58:29 -参数 : []
2019-06-20 09:58:29 -耗时 : 0
2019-06-20 09:58:29 -返回值 : elec/elec/elec
2019-06-20 09:58:30 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-20 09:58:30 -HTTP METHOD : GET
2019-06-20 09:58:30 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:58:30 -参数 : [userType]
2019-06-20 09:58:30 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:58:30 -==> Parameters: userType(String)
2019-06-20 09:58:30 -<==      Total: 4
2019-06-20 09:58:30 -耗时 : 32
2019-06-20 09:58:30 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:58:30 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-06-20 09:58:30 -HTTP METHOD : GET
2019-06-20 09:58:30 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:58:30 -参数 : [elecType]
2019-06-20 09:58:30 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:58:30 -==> Parameters: elecType(String)
2019-06-20 09:58:30 -<==      Total: 11
2019-06-20 09:58:30 -耗时 : 4
2019-06-20 09:58:30 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:58:30 -请求地址 : http://localhost:8081/elec/elec/list
2019-06-20 09:58:30 -HTTP METHOD : GET
2019-06-20 09:58:30 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-06-20 09:58:30 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@963e71e]
2019-06-20 09:58:30 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-06-20 09:58:30 -==> Parameters: 0(Integer), 10(Integer)
2019-06-20 09:58:30 -<==      Total: 10
2019-06-20 09:58:30 -==>  Preparing: select count(*) from elec 
2019-06-20 09:58:30 -==> Parameters: 
2019-06-20 09:58:30 -<==      Total: 1
2019-06-20 09:58:30 -耗时 : 171
2019-06-20 09:58:30 -返回值 : com.bootdo.common.utils.PageUtils@8a8ce47
2019-06-20 09:59:54 -请求地址 : http://localhost:8081/index
2019-06-20 09:59:54 -HTTP METHOD : GET
2019-06-20 09:59:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-20 09:59:54 -参数 : [{}]
2019-06-20 09:59:54 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-20 09:59:54 -==> Parameters: 1(Long)
2019-06-20 09:59:54 -<==      Total: 51
2019-06-20 09:59:54 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-20 09:59:54 -==> Parameters: 138(Long)
2019-06-20 09:59:54 -<==      Total: 1
2019-06-20 09:59:54 -耗时 : 79
2019-06-20 09:59:54 -返回值 : index_v1
2019-06-20 09:59:54 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-20 09:59:54 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 79(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-bullseye","url":"/moneyUpLoad/ElecLogUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"165","parentId":"106","text":"缴费上传"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":tru(String), 127.0.0.1(String), 2019-06-20 09:59:54.289(Timestamp)
2019-06-20 09:59:54 -<==    Updates: 1
2019-06-20 09:59:54 -请求地址 : http://localhost:8081/main
2019-06-20 09:59:54 -HTTP METHOD : GET
2019-06-20 09:59:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-20 09:59:54 -参数 : []
2019-06-20 09:59:54 -耗时 : 0
2019-06-20 09:59:54 -返回值 : main
2019-06-20 09:59:54 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-20 09:59:54 -HTTP METHOD : GET
2019-06-20 09:59:54 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-20 09:59:54 -参数 : []
2019-06-20 09:59:54 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-20 09:59:54 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-20 09:59:54 -<==      Total: 0
2019-06-20 09:59:54 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-20 09:59:54 -==> Parameters: 1(Long), 0(String)
2019-06-20 09:59:54 -<==      Total: 1
2019-06-20 09:59:54 -耗时 : 6
2019-06-20 09:59:54 -返回值 : com.bootdo.common.utils.PageUtils@5114bdcf
2019-06-20 09:59:54 -请求地址 : http://localhost:8081/main
2019-06-20 09:59:54 -HTTP METHOD : GET
2019-06-20 09:59:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-20 09:59:54 -参数 : []
2019-06-20 09:59:54 -耗时 : 1
2019-06-20 09:59:54 -返回值 : main
2019-06-20 09:59:55 -请求地址 : http://localhost:8081/elec/elec
2019-06-20 09:59:55 -HTTP METHOD : GET
2019-06-20 09:59:55 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-06-20 09:59:55 -参数 : []
2019-06-20 09:59:55 -耗时 : 0
2019-06-20 09:59:55 -返回值 : elec/elec/elec
2019-06-20 09:59:56 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-20 09:59:56 -HTTP METHOD : GET
2019-06-20 09:59:56 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:59:56 -参数 : [userType]
2019-06-20 09:59:56 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:59:56 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-06-20 09:59:56 -HTTP METHOD : GET
2019-06-20 09:59:56 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 09:59:56 -==> Parameters: userType(String)
2019-06-20 09:59:56 -参数 : [elecType]
2019-06-20 09:59:56 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 09:59:56 -==> Parameters: elecType(String)
2019-06-20 09:59:56 -<==      Total: 4
2019-06-20 09:59:56 -耗时 : 4
2019-06-20 09:59:56 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:59:56 -<==      Total: 11
2019-06-20 09:59:56 -耗时 : 4
2019-06-20 09:59:56 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 09:59:56 -请求地址 : http://localhost:8081/elec/elec/list
2019-06-20 09:59:56 -HTTP METHOD : GET
2019-06-20 09:59:56 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-06-20 09:59:56 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@3bd92bd5]
2019-06-20 09:59:56 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-06-20 09:59:56 -==> Parameters: 0(Integer), 10(Integer)
2019-06-20 09:59:56 -<==      Total: 10
2019-06-20 09:59:56 -==>  Preparing: select count(*) from elec 
2019-06-20 09:59:56 -==> Parameters: 
2019-06-20 09:59:56 -<==      Total: 1
2019-06-20 09:59:56 -耗时 : 22
2019-06-20 09:59:56 -返回值 : com.bootdo.common.utils.PageUtils@7d4b141
2019-06-20 10:00:11 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-06-20 10:00:11 -HTTP METHOD : GET
2019-06-20 10:00:11 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-06-20 10:00:11 -参数 : []
2019-06-20 10:00:11 -耗时 : 70
2019-06-20 10:00:11 -返回值 : system/dept/deptTree
2019-06-20 10:00:11 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-06-20 10:00:11 -HTTP METHOD : GET
2019-06-20 10:00:11 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-06-20 10:00:11 -参数 : []
2019-06-20 10:00:11 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-06-20 10:00:11 -==> Parameters: 
2019-06-20 10:00:11 -<==      Total: 3
2019-06-20 10:00:11 -耗时 : 64
2019-06-20 10:00:11 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-06-20 10:02:22 -请求地址 : http://localhost:8081/index
2019-06-20 10:02:22 -HTTP METHOD : GET
2019-06-20 10:02:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-20 10:02:22 -参数 : [{}]
2019-06-20 10:02:22 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-20 10:02:22 -==> Parameters: 1(Long)
2019-06-20 10:02:22 -<==      Total: 51
2019-06-20 10:02:22 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-20 10:02:22 -==> Parameters: 138(Long)
2019-06-20 10:02:22 -<==      Total: 1
2019-06-20 10:02:22 -耗时 : 15
2019-06-20 10:02:22 -返回值 : index_v1
2019-06-20 10:02:22 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-20 10:02:22 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 15(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-bullseye","url":"/moneyUpLoad/ElecLogUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"165","parentId":"106","text":"缴费上传"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":tru(String), 127.0.0.1(String), 2019-06-20 10:02:22.167(Timestamp)
2019-06-20 10:02:22 -<==    Updates: 1
2019-06-20 10:02:22 -请求地址 : http://localhost:8081/main
2019-06-20 10:02:22 -HTTP METHOD : GET
2019-06-20 10:02:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-20 10:02:22 -参数 : []
2019-06-20 10:02:22 -耗时 : 1
2019-06-20 10:02:22 -返回值 : main
2019-06-20 10:02:22 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-20 10:02:22 -HTTP METHOD : GET
2019-06-20 10:02:22 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-20 10:02:22 -参数 : []
2019-06-20 10:02:22 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-20 10:02:22 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-20 10:02:22 -<==      Total: 0
2019-06-20 10:02:22 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-20 10:02:22 -==> Parameters: 1(Long), 0(String)
2019-06-20 10:02:22 -<==      Total: 1
2019-06-20 10:02:22 -耗时 : 5
2019-06-20 10:02:22 -返回值 : com.bootdo.common.utils.PageUtils@501e29ec
2019-06-20 10:02:22 -请求地址 : http://localhost:8081/main
2019-06-20 10:02:22 -HTTP METHOD : GET
2019-06-20 10:02:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-20 10:02:22 -参数 : []
2019-06-20 10:02:22 -耗时 : 0
2019-06-20 10:02:22 -返回值 : main
2019-06-20 10:02:26 -请求地址 : http://localhost:8081/index
2019-06-20 10:02:26 -HTTP METHOD : GET
2019-06-20 10:02:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-20 10:02:26 -参数 : [{}]
2019-06-20 10:02:26 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-20 10:02:26 -==> Parameters: 1(Long)
2019-06-20 10:02:26 -<==      Total: 51
2019-06-20 10:02:26 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-20 10:02:26 -==> Parameters: 138(Long)
2019-06-20 10:02:26 -<==      Total: 1
2019-06-20 10:02:26 -耗时 : 18
2019-06-20 10:02:26 -返回值 : index_v1
2019-06-20 10:02:26 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-20 10:02:26 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 18(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-bullseye","url":"/moneyUpLoad/ElecLogUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"165","parentId":"106","text":"缴费上传"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":tru(String), 127.0.0.1(String), 2019-06-20 10:02:26.57(Timestamp)
2019-06-20 10:02:26 -请求地址 : http://localhost:8081/main
2019-06-20 10:02:26 -HTTP METHOD : GET
2019-06-20 10:02:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-20 10:02:26 -参数 : []
2019-06-20 10:02:26 -耗时 : 0
2019-06-20 10:02:26 -返回值 : main
2019-06-20 10:02:26 -<==    Updates: 1
2019-06-20 10:02:26 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-20 10:02:26 -HTTP METHOD : GET
2019-06-20 10:02:26 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-20 10:02:26 -参数 : []
2019-06-20 10:02:26 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-20 10:02:26 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-20 10:02:26 -<==      Total: 0
2019-06-20 10:02:26 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-20 10:02:26 -==> Parameters: 1(Long), 0(String)
2019-06-20 10:02:26 -<==      Total: 1
2019-06-20 10:02:26 -耗时 : 28
2019-06-20 10:02:26 -返回值 : com.bootdo.common.utils.PageUtils@55a74550
2019-06-20 10:02:26 -请求地址 : http://localhost:8081/main
2019-06-20 10:02:26 -HTTP METHOD : GET
2019-06-20 10:02:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-20 10:02:26 -参数 : []
2019-06-20 10:02:26 -耗时 : 1
2019-06-20 10:02:26 -返回值 : main
2019-06-20 10:02:29 -请求地址 : http://localhost:8081/elec/elec
2019-06-20 10:02:29 -HTTP METHOD : GET
2019-06-20 10:02:29 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-06-20 10:02:29 -参数 : []
2019-06-20 10:02:29 -耗时 : 0
2019-06-20 10:02:29 -返回值 : elec/elec/elec
2019-06-20 10:02:30 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-06-20 10:02:30 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-20 10:02:30 -HTTP METHOD : GET
2019-06-20 10:02:30 -HTTP METHOD : GET
2019-06-20 10:02:30 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 10:02:30 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 10:02:30 -参数 : [elecType]
2019-06-20 10:02:30 -参数 : [userType]
2019-06-20 10:02:30 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 10:02:30 -==> Parameters: elecType(String)
2019-06-20 10:02:30 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 10:02:30 -==> Parameters: userType(String)
2019-06-20 10:02:30 -<==      Total: 4
2019-06-20 10:02:30 -<==      Total: 11
2019-06-20 10:02:30 -耗时 : 2
2019-06-20 10:02:30 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 10:02:30 -耗时 : 2
2019-06-20 10:02:30 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 10:02:30 -请求地址 : http://localhost:8081/elec/elec/list
2019-06-20 10:02:30 -HTTP METHOD : GET
2019-06-20 10:02:30 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-06-20 10:02:30 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@364023c5]
2019-06-20 10:02:30 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-06-20 10:02:30 -==> Parameters: 0(Integer), 10(Integer)
2019-06-20 10:02:30 -<==      Total: 10
2019-06-20 10:02:30 -==>  Preparing: select count(*) from elec 
2019-06-20 10:02:30 -==> Parameters: 
2019-06-20 10:02:30 -<==      Total: 1
2019-06-20 10:02:30 -耗时 : 7
2019-06-20 10:02:30 -返回值 : com.bootdo.common.utils.PageUtils@414fbe6
2019-06-20 10:02:35 -请求地址 : http://localhost:8081/water/water
2019-06-20 10:02:35 -HTTP METHOD : GET
2019-06-20 10:02:35 -CLASS_METHOD : com.bootdo.water.controller.WaterController.Water
2019-06-20 10:02:35 -参数 : []
2019-06-20 10:02:35 -耗时 : 0
2019-06-20 10:02:35 -返回值 : water/water/water
2019-06-20 10:02:35 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-20 10:02:35 -HTTP METHOD : GET
2019-06-20 10:02:35 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 10:02:35 -参数 : [userType]
2019-06-20 10:02:35 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 10:02:35 -==> Parameters: userType(String)
2019-06-20 10:02:35 -<==      Total: 4
2019-06-20 10:02:35 -耗时 : 26
2019-06-20 10:02:35 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 10:02:35 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-06-20 10:02:35 -HTTP METHOD : GET
2019-06-20 10:02:35 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 10:02:35 -参数 : [waterType]
2019-06-20 10:02:35 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 10:02:35 -==> Parameters: waterType(String)
2019-06-20 10:02:35 -<==      Total: 4
2019-06-20 10:02:35 -耗时 : 3
2019-06-20 10:02:35 -返回值 : [DictDO{id=188, name='民用水', value='1', type='waterType', description='水费性质', sort=10, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=187, name='商业水1', value='2', type='waterType', description='水费性质', sort=20, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=186, name='商业水2', value='3', type='waterType', description='水费性质', sort=30, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=185, name='商业水3', value='4', type='waterType', description='水费性质', sort=40, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 10:02:35 -请求地址 : http://localhost:8081/water/water/list
2019-06-20 10:02:35 -HTTP METHOD : GET
2019-06-20 10:02:35 -CLASS_METHOD : com.bootdo.water.controller.WaterController.list
2019-06-20 10:02:35 -参数 : [{limit=10, offset=0, userType=, waterType=, userOrg=, userId=, createTime=, queryType=1}]
2019-06-20 10:02:35 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_cost`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water order by id asc limit ?, ? 
2019-06-20 10:02:35 -==> Parameters: 0(Integer), 10(Integer)
2019-06-20 10:02:35 -<==      Total: 10
2019-06-20 10:02:35 -==>  Preparing: select count(*) from water 
2019-06-20 10:02:35 -==> Parameters: 
2019-06-20 10:02:35 -<==      Total: 1
2019-06-20 10:02:35 -耗时 : 212
2019-06-20 10:02:35 -返回值 : com.bootdo.common.utils.PageUtils@346a3f9c
2019-06-20 10:03:25 -请求地址 : http://localhost:8081/index
2019-06-20 10:03:25 -HTTP METHOD : GET
2019-06-20 10:03:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-20 10:03:25 -参数 : [{}]
2019-06-20 10:03:25 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-20 10:03:25 -==> Parameters: 1(Long)
2019-06-20 10:03:25 -<==      Total: 51
2019-06-20 10:03:25 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-20 10:03:25 -==> Parameters: 138(Long)
2019-06-20 10:03:25 -<==      Total: 1
2019-06-20 10:03:25 -耗时 : 31
2019-06-20 10:03:25 -返回值 : index_v1
2019-06-20 10:03:25 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-20 10:03:25 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 31(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-bullseye","url":"/moneyUpLoad/ElecLogUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"165","parentId":"106","text":"缴费上传"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":tru(String), 127.0.0.1(String), 2019-06-20 10:03:25.649(Timestamp)
2019-06-20 10:03:25 -<==    Updates: 1
2019-06-20 10:03:25 -请求地址 : http://localhost:8081/main
2019-06-20 10:03:25 -HTTP METHOD : GET
2019-06-20 10:03:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-20 10:03:25 -参数 : []
2019-06-20 10:03:25 -耗时 : 0
2019-06-20 10:03:25 -返回值 : main
2019-06-20 10:03:25 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-20 10:03:25 -HTTP METHOD : GET
2019-06-20 10:03:25 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-20 10:03:25 -参数 : []
2019-06-20 10:03:25 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-20 10:03:25 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-20 10:03:25 -<==      Total: 0
2019-06-20 10:03:25 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-20 10:03:25 -==> Parameters: 1(Long), 0(String)
2019-06-20 10:03:25 -<==      Total: 1
2019-06-20 10:03:25 -耗时 : 5
2019-06-20 10:03:25 -返回值 : com.bootdo.common.utils.PageUtils@2d6dba07
2019-06-20 10:03:25 -请求地址 : http://localhost:8081/main
2019-06-20 10:03:25 -HTTP METHOD : GET
2019-06-20 10:03:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-20 10:03:25 -参数 : []
2019-06-20 10:03:25 -耗时 : 0
2019-06-20 10:03:25 -返回值 : main
2019-06-20 10:03:27 -请求地址 : http://localhost:8081/water/water
2019-06-20 10:03:27 -HTTP METHOD : GET
2019-06-20 10:03:27 -CLASS_METHOD : com.bootdo.water.controller.WaterController.Water
2019-06-20 10:03:27 -参数 : []
2019-06-20 10:03:27 -耗时 : 0
2019-06-20 10:03:27 -返回值 : water/water/water
2019-06-20 10:03:28 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-20 10:03:28 -HTTP METHOD : GET
2019-06-20 10:03:28 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 10:03:28 -参数 : [userType]
2019-06-20 10:03:28 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 10:03:28 -==> Parameters: userType(String)
2019-06-20 10:03:28 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-06-20 10:03:28 -HTTP METHOD : GET
2019-06-20 10:03:28 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 10:03:28 -参数 : [waterType]
2019-06-20 10:03:28 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 10:03:28 -==> Parameters: waterType(String)
2019-06-20 10:03:28 -<==      Total: 4
2019-06-20 10:03:28 -耗时 : 2
2019-06-20 10:03:28 -返回值 : [DictDO{id=188, name='民用水', value='1', type='waterType', description='水费性质', sort=10, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=187, name='商业水1', value='2', type='waterType', description='水费性质', sort=20, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=186, name='商业水2', value='3', type='waterType', description='水费性质', sort=30, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=185, name='商业水3', value='4', type='waterType', description='水费性质', sort=40, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 10:03:28 -<==      Total: 4
2019-06-20 10:03:28 -耗时 : 5
2019-06-20 10:03:28 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 10:03:28 -请求地址 : http://localhost:8081/water/water/list
2019-06-20 10:03:28 -HTTP METHOD : GET
2019-06-20 10:03:28 -CLASS_METHOD : com.bootdo.water.controller.WaterController.list
2019-06-20 10:03:28 -参数 : [{limit=10, offset=0, userType=, waterType=, userOrg=, userId=, createTime=, queryType=1}]
2019-06-20 10:03:28 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_cost`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water order by id asc limit ?, ? 
2019-06-20 10:03:28 -==> Parameters: 0(Integer), 10(Integer)
2019-06-20 10:03:28 -<==      Total: 10
2019-06-20 10:03:28 -==>  Preparing: select count(*) from water 
2019-06-20 10:03:28 -==> Parameters: 
2019-06-20 10:03:28 -<==      Total: 1
2019-06-20 10:03:28 -耗时 : 11
2019-06-20 10:03:28 -返回值 : com.bootdo.common.utils.PageUtils@7ab27c8d
2019-06-20 10:03:36 -请求地址 : http://localhost:8081/heat/heat
2019-06-20 10:03:36 -HTTP METHOD : GET
2019-06-20 10:03:36 -CLASS_METHOD : com.bootdo.heat.controller.HeatController.Heat
2019-06-20 10:03:36 -参数 : []
2019-06-20 10:03:36 -耗时 : 0
2019-06-20 10:03:36 -返回值 : heat/heat/heat
2019-06-20 10:03:36 -[THYMELEAF][http-nio-8081-exec-9] Exception processing template "heat/heat/heat": An error happened during template parsing (template: "class path resource [templates/heat/heat/heat.html]" - line 58, col 8)
org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/heat/heat/heat.html]" - line 58, col 8)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:239)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:354)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:187)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1325)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1069)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.attoparser.ParseException: (Line = 58, Column = 8) Incomplete structure: "<input id="btnSubmit" class="btn btn-primary" type="button" value="用户查询" onclick = "reLoad(1);/>
						    <input id="btnSubmit" class="btn btn-primary" type="button" value="欠费查询" onclick = "reLoad(2);"/>
						    <input id="btnSubmit" class="btn btn-primary" type="button" value="用户导出" onclick = "exprotHeat();"/>
						    
						</form> 
						 
					</div> 
					
					
					<table id="heatTable" data-mobile-responsive="true"  style="table-layout:fixed;width:2000px;">
					
					</table>
					
				</div>
			</div>
		</div>
	</div>
	
		<div>
			<script type="text/javascript">
				var s_edit_h = 'hidden';
				var s_remove_h = 'hidden';
				var s_add_h = 'hidden';
				var s_batchRemove_h = 'hidden';
			</script>
		</div>
		
		
		<div shiro:hasPermission="elec:elec:edit">
			<script type="text/javascript">
				s_edit_h = '';
			</script>
		</div>
		<div shiro:hasPermission="elec:elec:remove">
			<script type="text/javascript">
				var s_remove_h = '';
			</script>
		</div>
		
		<div shiro:hasPermission="elec:elec:add">
			<script type="text/javascript">
				var s_add_h = '';
			</script>
		</div>
		
		<div shiro:hasPermission="elec:elec:batchRemove">
			<script type="text/javascript">
				var s_batchRemove_h = '';
			</script>
		</div>
	</div>
	<div th:include="include :: footer"></div>
	<script type="text/javascript" src="/js/appjs/heat/heat/heat.js"></script>
</body>
</html>"
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:366)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 69 common frames omitted
2019-06-20 10:03:36 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/heat/heat/heat.html]" - line 58, col 8)] with root cause
org.attoparser.ParseException: (Line = 58, Column = 8) Incomplete structure: "<input id="btnSubmit" class="btn btn-primary" type="button" value="用户查询" onclick = "reLoad(1);/>
						    <input id="btnSubmit" class="btn btn-primary" type="button" value="欠费查询" onclick = "reLoad(2);"/>
						    <input id="btnSubmit" class="btn btn-primary" type="button" value="用户导出" onclick = "exprotHeat();"/>
						    
						</form> 
						 
					</div> 
					
					
					<table id="heatTable" data-mobile-responsive="true"  style="table-layout:fixed;width:2000px;">
					
					</table>
					
				</div>
			</div>
		</div>
	</div>
	
		<div>
			<script type="text/javascript">
				var s_edit_h = 'hidden';
				var s_remove_h = 'hidden';
				var s_add_h = 'hidden';
				var s_batchRemove_h = 'hidden';
			</script>
		</div>
		
		
		<div shiro:hasPermission="elec:elec:edit">
			<script type="text/javascript">
				s_edit_h = '';
			</script>
		</div>
		<div shiro:hasPermission="elec:elec:remove">
			<script type="text/javascript">
				var s_remove_h = '';
			</script>
		</div>
		
		<div shiro:hasPermission="elec:elec:add">
			<script type="text/javascript">
				var s_add_h = '';
			</script>
		</div>
		
		<div shiro:hasPermission="elec:elec:batchRemove">
			<script type="text/javascript">
				var s_batchRemove_h = '';
			</script>
		</div>
	</div>
	<div th:include="include :: footer"></div>
	<script type="text/javascript" src="/js/appjs/heat/heat/heat.js"></script>
</body>
</html>"
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:366)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:354)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:187)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1325)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1069)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-06-20 10:05:20 -请求地址 : http://localhost:8081/index
2019-06-20 10:05:20 -HTTP METHOD : GET
2019-06-20 10:05:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-20 10:05:20 -参数 : [{}]
2019-06-20 10:05:20 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-20 10:05:20 -==> Parameters: 1(Long)
2019-06-20 10:05:20 -<==      Total: 51
2019-06-20 10:05:20 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-20 10:05:20 -==> Parameters: 138(Long)
2019-06-20 10:05:20 -<==      Total: 1
2019-06-20 10:05:20 -耗时 : 28
2019-06-20 10:05:20 -返回值 : index_v1
2019-06-20 10:05:20 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-20 10:05:20 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 28(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-bullseye","url":"/moneyUpLoad/ElecLogUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"165","parentId":"106","text":"缴费上传"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":tru(String), 127.0.0.1(String), 2019-06-20 10:05:20.903(Timestamp)
2019-06-20 10:05:20 -<==    Updates: 1
2019-06-20 10:05:21 -请求地址 : http://localhost:8081/main
2019-06-20 10:05:21 -HTTP METHOD : GET
2019-06-20 10:05:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-20 10:05:21 -参数 : []
2019-06-20 10:05:21 -耗时 : 1
2019-06-20 10:05:21 -返回值 : main
2019-06-20 10:05:21 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-20 10:05:21 -HTTP METHOD : GET
2019-06-20 10:05:21 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-20 10:05:21 -参数 : []
2019-06-20 10:05:21 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-20 10:05:21 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-20 10:05:21 -<==      Total: 0
2019-06-20 10:05:21 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-20 10:05:21 -==> Parameters: 1(Long), 0(String)
2019-06-20 10:05:21 -<==      Total: 1
2019-06-20 10:05:21 -耗时 : 6
2019-06-20 10:05:21 -返回值 : com.bootdo.common.utils.PageUtils@73984726
2019-06-20 10:05:21 -请求地址 : http://localhost:8081/main
2019-06-20 10:05:21 -HTTP METHOD : GET
2019-06-20 10:05:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-20 10:05:21 -参数 : []
2019-06-20 10:05:21 -耗时 : 0
2019-06-20 10:05:21 -返回值 : main
2019-06-20 10:05:23 -请求地址 : http://localhost:8081/heat/heat
2019-06-20 10:05:23 -HTTP METHOD : GET
2019-06-20 10:05:23 -CLASS_METHOD : com.bootdo.heat.controller.HeatController.Heat
2019-06-20 10:05:23 -参数 : []
2019-06-20 10:05:23 -耗时 : 1
2019-06-20 10:05:23 -返回值 : heat/heat/heat
2019-06-20 10:05:24 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-20 10:05:24 -HTTP METHOD : GET
2019-06-20 10:05:24 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 10:05:24 -参数 : [userType]
2019-06-20 10:05:24 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 10:05:24 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-06-20 10:05:24 -HTTP METHOD : GET
2019-06-20 10:05:24 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 10:05:24 -参数 : [heatType]
2019-06-20 10:05:24 -==> Parameters: userType(String)
2019-06-20 10:05:24 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 10:05:24 -==> Parameters: heatType(String)
2019-06-20 10:05:24 -<==      Total: 4
2019-06-20 10:05:24 -耗时 : 2
2019-06-20 10:05:24 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 10:05:24 -<==      Total: 4
2019-06-20 10:05:24 -耗时 : 3
2019-06-20 10:05:24 -返回值 : [DictDO{id=184, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=183, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=182, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=181, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 10:05:24 -请求地址 : http://localhost:8081/heat/heat/list
2019-06-20 10:05:24 -HTTP METHOD : GET
2019-06-20 10:05:24 -CLASS_METHOD : com.bootdo.heat.controller.HeatController.list
2019-06-20 10:05:24 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, createTime=, queryType=1}]
2019-06-20 10:05:24 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`heat_type`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat order by id asc limit ?, ? 
2019-06-20 10:05:24 -==> Parameters: 0(Integer), 10(Integer)
2019-06-20 10:05:24 -<==      Total: 10
2019-06-20 10:05:24 -==>  Preparing: select count(*) from heat 
2019-06-20 10:05:24 -==> Parameters: 
2019-06-20 10:05:24 -<==      Total: 1
2019-06-20 10:05:24 -耗时 : 482
2019-06-20 10:05:24 -返回值 : com.bootdo.common.utils.PageUtils@3da7769d
2019-06-20 10:05:39 -请求地址 : http://localhost:8081/elec/elec
2019-06-20 10:05:39 -HTTP METHOD : GET
2019-06-20 10:05:39 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-06-20 10:05:39 -参数 : []
2019-06-20 10:05:39 -耗时 : 1
2019-06-20 10:05:39 -返回值 : elec/elec/elec
2019-06-20 10:05:39 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-20 10:05:39 -HTTP METHOD : GET
2019-06-20 10:05:39 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 10:05:39 -参数 : [userType]
2019-06-20 10:05:39 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 10:05:39 -==> Parameters: userType(String)
2019-06-20 10:05:39 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-06-20 10:05:39 -HTTP METHOD : GET
2019-06-20 10:05:39 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 10:05:39 -参数 : [elecType]
2019-06-20 10:05:39 -<==      Total: 4
2019-06-20 10:05:39 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 10:05:39 -耗时 : 3
2019-06-20 10:05:39 -==> Parameters: elecType(String)
2019-06-20 10:05:39 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 10:05:39 -<==      Total: 11
2019-06-20 10:05:39 -耗时 : 4
2019-06-20 10:05:39 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 10:05:39 -请求地址 : http://localhost:8081/elec/elec/list
2019-06-20 10:05:39 -HTTP METHOD : GET
2019-06-20 10:05:39 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-06-20 10:05:39 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@584cda6f]
2019-06-20 10:05:39 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-06-20 10:05:39 -==> Parameters: 0(Integer), 10(Integer)
2019-06-20 10:05:39 -<==      Total: 10
2019-06-20 10:05:39 -==>  Preparing: select count(*) from elec 
2019-06-20 10:05:39 -==> Parameters: 
2019-06-20 10:05:39 -<==      Total: 1
2019-06-20 10:05:39 -耗时 : 7
2019-06-20 10:05:39 -返回值 : com.bootdo.common.utils.PageUtils@4d46d89e
2019-06-20 10:05:46 -请求地址 : http://localhost:8081/water/water
2019-06-20 10:05:46 -HTTP METHOD : GET
2019-06-20 10:05:46 -CLASS_METHOD : com.bootdo.water.controller.WaterController.Water
2019-06-20 10:05:46 -参数 : []
2019-06-20 10:05:46 -耗时 : 0
2019-06-20 10:05:46 -返回值 : water/water/water
2019-06-20 10:05:46 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-20 10:05:46 -HTTP METHOD : GET
2019-06-20 10:05:46 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 10:05:46 -参数 : [userType]
2019-06-20 10:05:46 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 10:05:46 -==> Parameters: userType(String)
2019-06-20 10:05:46 -<==      Total: 4
2019-06-20 10:05:46 -耗时 : 3
2019-06-20 10:05:46 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 10:05:46 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-06-20 10:05:46 -HTTP METHOD : GET
2019-06-20 10:05:46 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 10:05:46 -参数 : [waterType]
2019-06-20 10:05:46 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 10:05:46 -==> Parameters: waterType(String)
2019-06-20 10:05:46 -<==      Total: 4
2019-06-20 10:05:46 -耗时 : 3
2019-06-20 10:05:46 -返回值 : [DictDO{id=188, name='民用水', value='1', type='waterType', description='水费性质', sort=10, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=187, name='商业水1', value='2', type='waterType', description='水费性质', sort=20, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=186, name='商业水2', value='3', type='waterType', description='水费性质', sort=30, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=185, name='商业水3', value='4', type='waterType', description='水费性质', sort=40, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 10:05:46 -请求地址 : http://localhost:8081/water/water/list
2019-06-20 10:05:46 -HTTP METHOD : GET
2019-06-20 10:05:46 -CLASS_METHOD : com.bootdo.water.controller.WaterController.list
2019-06-20 10:05:46 -参数 : [{limit=10, offset=0, userType=, waterType=, userOrg=, userId=, createTime=, queryType=1}]
2019-06-20 10:05:46 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_cost`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water order by id asc limit ?, ? 
2019-06-20 10:05:46 -==> Parameters: 0(Integer), 10(Integer)
2019-06-20 10:05:46 -<==      Total: 10
2019-06-20 10:05:46 -==>  Preparing: select count(*) from water 
2019-06-20 10:05:46 -==> Parameters: 
2019-06-20 10:05:46 -<==      Total: 1
2019-06-20 10:05:46 -耗时 : 7
2019-06-20 10:05:46 -返回值 : com.bootdo.common.utils.PageUtils@17d2446d
2019-06-20 10:05:52 -请求地址 : http://localhost:8081/elec/elecInto
2019-06-20 10:05:52 -HTTP METHOD : GET
2019-06-20 10:05:52 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.ElecInto
2019-06-20 10:05:52 -参数 : []
2019-06-20 10:05:52 -耗时 : 1
2019-06-20 10:05:52 -返回值 : elec/elecInto/elecInto
2019-06-20 10:06:16 -请求地址 : http://localhost:8081/water/waterInto
2019-06-20 10:06:16 -HTTP METHOD : GET
2019-06-20 10:06:16 -CLASS_METHOD : com.bootdo.water.controller.WaterIntoController.WaterInto
2019-06-20 10:06:16 -参数 : []
2019-06-20 10:06:16 -耗时 : 0
2019-06-20 10:06:16 -返回值 : water/waterInto/waterInto
2019-06-20 10:06:22 -请求地址 : http://localhost:8081/heat/heatInto
2019-06-20 10:06:22 -HTTP METHOD : GET
2019-06-20 10:06:22 -CLASS_METHOD : com.bootdo.heat.controller.HeatIntoController.HeatInto
2019-06-20 10:06:22 -参数 : []
2019-06-20 10:06:22 -耗时 : 0
2019-06-20 10:06:22 -返回值 : heat/heatInto/heatInto
2019-06-20 10:06:26 -请求地址 : http://localhost:8081/elec/elecUpLoad
2019-06-20 10:06:26 -HTTP METHOD : GET
2019-06-20 10:06:26 -CLASS_METHOD : com.bootdo.elec.controller.ElecUpLoadController.Elec
2019-06-20 10:06:26 -参数 : []
2019-06-20 10:06:26 -耗时 : 1
2019-06-20 10:06:26 -返回值 : elec/elecUpLoad/elecUpLoad
2019-06-20 10:06:33 -请求地址 : http://localhost:8081/heat/heatUpLoad
2019-06-20 10:06:33 -HTTP METHOD : GET
2019-06-20 10:06:33 -CLASS_METHOD : com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad
2019-06-20 10:06:33 -参数 : []
2019-06-20 10:06:33 -耗时 : 1
2019-06-20 10:06:33 -返回值 : heat/heatUpLoad/heatUpLoad
2019-06-20 10:06:39 -请求地址 : http://localhost:8081/water/waterUpLoad
2019-06-20 10:06:39 -HTTP METHOD : GET
2019-06-20 10:06:39 -CLASS_METHOD : com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad
2019-06-20 10:06:39 -参数 : []
2019-06-20 10:06:39 -耗时 : 0
2019-06-20 10:06:39 -返回值 : water/waterUpLoad/waterUpLoad
2019-06-20 10:06:43 -请求地址 : http://localhost:8081/water/waterPrice
2019-06-20 10:06:43 -HTTP METHOD : GET
2019-06-20 10:06:43 -CLASS_METHOD : com.bootdo.water.controller.WaterPriceController.WaterPrice
2019-06-20 10:06:43 -参数 : []
2019-06-20 10:06:43 -耗时 : 0
2019-06-20 10:06:43 -返回值 : water/waterPrice/waterPrice
2019-06-20 10:06:43 -请求地址 : http://localhost:8081/water/waterPrice/list
2019-06-20 10:06:43 -HTTP METHOD : GET
2019-06-20 10:06:43 -CLASS_METHOD : com.bootdo.water.controller.WaterPriceController.list
2019-06-20 10:06:43 -参数 : [{limit=10, offset=0}]
2019-06-20 10:06:43 -==>  Preparing: select `id`,`water_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `water_org`) AS waterOrgName,`m_water`,`s1_water`,`s2_water`,`s3_water`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_price order by id asc limit ?, ? 
2019-06-20 10:06:43 -==> Parameters: 0(Integer), 10(Integer)
2019-06-20 10:06:43 -<==      Total: 2
2019-06-20 10:06:43 -==>  Preparing: select count(*) from water_price 
2019-06-20 10:06:43 -==> Parameters: 
2019-06-20 10:06:43 -<==      Total: 1
2019-06-20 10:06:43 -耗时 : 149
2019-06-20 10:06:43 -返回值 : com.bootdo.common.utils.PageUtils@53e9daa7
2019-06-20 10:06:47 -请求地址 : http://localhost:8081/print/print
2019-06-20 10:06:47 -HTTP METHOD : GET
2019-06-20 10:06:47 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-06-20 10:06:47 -参数 : []
2019-06-20 10:06:47 -耗时 : 0
2019-06-20 10:06:47 -返回值 : print/print/print
2019-06-20 10:06:47 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-20 10:06:47 -HTTP METHOD : GET
2019-06-20 10:06:47 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 10:06:47 -参数 : [userType]
2019-06-20 10:06:47 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 10:06:47 -==> Parameters: userType(String)
2019-06-20 10:06:47 -<==      Total: 4
2019-06-20 10:06:47 -耗时 : 14
2019-06-20 10:06:47 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 10:06:47 -请求地址 : http://localhost:8081/print/print/list
2019-06-20 10:06:47 -HTTP METHOD : GET
2019-06-20 10:06:47 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-06-20 10:06:47 -参数 : [{limit=100, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-06-20 10:06:47 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-06-20 10:06:47 -==> Parameters: 0(Integer), 100(Integer)
2019-06-20 10:06:47 -<==      Total: 9
2019-06-20 10:06:47 -==>  Preparing: select count(*) from print 
2019-06-20 10:06:47 -==> Parameters: 
2019-06-20 10:06:47 -<==      Total: 1
2019-06-20 10:06:47 -耗时 : 133
2019-06-20 10:06:47 -返回值 : com.bootdo.common.utils.PageUtils@1190e6da
2019-06-20 10:07:01 -请求地址 : http://localhost:8081/charts/countDD
2019-06-20 10:07:01 -HTTP METHOD : GET
2019-06-20 10:07:01 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-06-20 10:07:01 -参数 : []
2019-06-20 10:07:01 -耗时 : 15
2019-06-20 10:07:01 -返回值 : charts/countDD
2019-06-20 10:07:02 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-20 10:07:02 -HTTP METHOD : GET
2019-06-20 10:07:02 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 10:07:02 -参数 : [userType]
2019-06-20 10:07:02 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 10:07:02 -==> Parameters: userType(String)
2019-06-20 10:07:02 -<==      Total: 4
2019-06-20 10:07:02 -耗时 : 4
2019-06-20 10:07:02 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 10:07:20 -请求地址 : http://localhost:8081/charts/tableDD
2019-06-20 10:07:20 -HTTP METHOD : GET
2019-06-20 10:07:20 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-06-20 10:07:20 -参数 : []
2019-06-20 10:07:20 -耗时 : 221
2019-06-20 10:07:20 -返回值 : charts/tableDD
2019-06-20 10:07:33 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-06-20 10:07:33 -==> Parameters: 1(Long)
2019-06-20 10:07:33 -<==      Total: 95
2019-06-20 10:07:33 -请求地址 : http://localhost:8081/charts/countMM
2019-06-20 10:07:33 -HTTP METHOD : GET
2019-06-20 10:07:33 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-06-20 10:07:33 -参数 : []
2019-06-20 10:07:33 -耗时 : 10
2019-06-20 10:07:33 -返回值 : charts/countMM
2019-06-20 10:07:33 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-20 10:07:33 -HTTP METHOD : GET
2019-06-20 10:07:33 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 10:07:33 -参数 : [userType]
2019-06-20 10:07:33 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 10:07:33 -==> Parameters: userType(String)
2019-06-20 10:07:33 -<==      Total: 4
2019-06-20 10:07:33 -耗时 : 2
2019-06-20 10:07:33 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 10:07:36 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-06-20 10:07:36 -HTTP METHOD : GET
2019-06-20 10:07:36 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-06-20 10:07:36 -参数 : []
2019-06-20 10:07:36 -耗时 : 0
2019-06-20 10:07:36 -返回值 : charts/tableElecMM
2019-06-20 10:07:37 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-20 10:07:37 -HTTP METHOD : GET
2019-06-20 10:07:37 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 10:07:37 -参数 : [userType]
2019-06-20 10:07:37 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 10:07:37 -==> Parameters: userType(String)
2019-06-20 10:07:37 -<==      Total: 4
2019-06-20 10:07:37 -耗时 : 3
2019-06-20 10:07:37 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 10:07:37 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-06-20 10:07:37 -HTTP METHOD : GET
2019-06-20 10:07:37 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 10:07:37 -参数 : [elecType]
2019-06-20 10:07:37 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 10:07:37 -==> Parameters: elecType(String)
2019-06-20 10:07:37 -<==      Total: 11
2019-06-20 10:07:37 -耗时 : 2
2019-06-20 10:07:37 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 10:09:34 -请求地址 : http://localhost:8081/index
2019-06-20 10:09:34 -HTTP METHOD : GET
2019-06-20 10:09:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-20 10:09:34 -参数 : [{}]
2019-06-20 10:09:34 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-20 10:09:34 -==> Parameters: 1(Long)
2019-06-20 10:09:34 -<==      Total: 51
2019-06-20 10:09:34 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-20 10:09:34 -==> Parameters: 138(Long)
2019-06-20 10:09:34 -<==      Total: 1
2019-06-20 10:09:34 -耗时 : 18
2019-06-20 10:09:34 -返回值 : index_v1
2019-06-20 10:09:34 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-20 10:09:34 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 18(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-bullseye","url":"/moneyUpLoad/ElecLogUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"165","parentId":"106","text":"缴费上传"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":tru(String), 127.0.0.1(String), 2019-06-20 10:09:34.876(Timestamp)
2019-06-20 10:09:34 -<==    Updates: 1
2019-06-20 10:09:35 -请求地址 : http://localhost:8081/main
2019-06-20 10:09:35 -HTTP METHOD : GET
2019-06-20 10:09:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-20 10:09:35 -参数 : []
2019-06-20 10:09:35 -耗时 : 0
2019-06-20 10:09:35 -返回值 : main
2019-06-20 10:09:35 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-20 10:09:35 -HTTP METHOD : GET
2019-06-20 10:09:35 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-20 10:09:35 -参数 : []
2019-06-20 10:09:35 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-20 10:09:35 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-20 10:09:35 -<==      Total: 0
2019-06-20 10:09:35 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-20 10:09:35 -==> Parameters: 1(Long), 0(String)
2019-06-20 10:09:35 -<==      Total: 1
2019-06-20 10:09:35 -耗时 : 6
2019-06-20 10:09:35 -返回值 : com.bootdo.common.utils.PageUtils@249b7b8e
2019-06-20 10:09:35 -请求地址 : http://localhost:8081/main
2019-06-20 10:09:35 -HTTP METHOD : GET
2019-06-20 10:09:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-20 10:09:35 -参数 : []
2019-06-20 10:09:35 -耗时 : 0
2019-06-20 10:09:35 -返回值 : main
2019-06-20 10:09:37 -请求地址 : http://localhost:8081/charts/tableDD
2019-06-20 10:09:37 -HTTP METHOD : GET
2019-06-20 10:09:37 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-06-20 10:09:37 -参数 : []
2019-06-20 10:09:37 -耗时 : 0
2019-06-20 10:09:37 -返回值 : charts/tableDD
2019-06-20 10:12:56 -请求地址 : http://localhost:8081/index
2019-06-20 10:12:56 -HTTP METHOD : GET
2019-06-20 10:12:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-20 10:12:56 -参数 : [{}]
2019-06-20 10:12:56 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-20 10:12:56 -==> Parameters: 1(Long)
2019-06-20 10:12:56 -<==      Total: 51
2019-06-20 10:12:56 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-20 10:12:56 -==> Parameters: 138(Long)
2019-06-20 10:12:56 -<==      Total: 1
2019-06-20 10:12:56 -耗时 : 20
2019-06-20 10:12:56 -返回值 : index_v1
2019-06-20 10:12:56 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-20 10:12:56 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 20(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-bullseye","url":"/moneyUpLoad/ElecLogUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"165","parentId":"106","text":"缴费上传"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":tru(String), 127.0.0.1(String), 2019-06-20 10:12:56.42(Timestamp)
2019-06-20 10:12:56 -请求地址 : http://localhost:8081/main
2019-06-20 10:12:56 -HTTP METHOD : GET
2019-06-20 10:12:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-20 10:12:56 -参数 : []
2019-06-20 10:12:56 -耗时 : 1
2019-06-20 10:12:56 -返回值 : main
2019-06-20 10:12:56 -<==    Updates: 1
2019-06-20 10:12:56 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-20 10:12:56 -HTTP METHOD : GET
2019-06-20 10:12:56 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-20 10:12:56 -参数 : []
2019-06-20 10:12:56 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-20 10:12:56 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-20 10:12:56 -<==      Total: 0
2019-06-20 10:12:56 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-20 10:12:56 -==> Parameters: 1(Long), 0(String)
2019-06-20 10:12:56 -<==      Total: 1
2019-06-20 10:12:56 -耗时 : 6
2019-06-20 10:12:56 -返回值 : com.bootdo.common.utils.PageUtils@2d96b500
2019-06-20 10:12:56 -请求地址 : http://localhost:8081/main
2019-06-20 10:12:56 -HTTP METHOD : GET
2019-06-20 10:12:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-20 10:12:56 -参数 : []
2019-06-20 10:12:56 -耗时 : 1
2019-06-20 10:12:56 -返回值 : main
2019-06-20 10:12:59 -请求地址 : http://localhost:8081/charts/countDD
2019-06-20 10:12:59 -HTTP METHOD : GET
2019-06-20 10:12:59 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-06-20 10:12:59 -参数 : []
2019-06-20 10:12:59 -耗时 : 1
2019-06-20 10:12:59 -返回值 : charts/countDD
2019-06-20 10:12:59 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-20 10:12:59 -HTTP METHOD : GET
2019-06-20 10:12:59 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 10:12:59 -参数 : [userType]
2019-06-20 10:12:59 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 10:12:59 -==> Parameters: userType(String)
2019-06-20 10:12:59 -<==      Total: 4
2019-06-20 10:12:59 -耗时 : 5
2019-06-20 10:12:59 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 10:13:03 -请求地址 : http://localhost:8081/charts/tableDD
2019-06-20 10:13:03 -HTTP METHOD : GET
2019-06-20 10:13:03 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-06-20 10:13:03 -参数 : []
2019-06-20 10:13:03 -耗时 : 0
2019-06-20 10:13:03 -返回值 : charts/tableDD
2019-06-20 10:14:12 -请求地址 : http://localhost:8081/index
2019-06-20 10:14:12 -HTTP METHOD : GET
2019-06-20 10:14:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-20 10:14:12 -参数 : [{}]
2019-06-20 10:14:12 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-20 10:14:12 -==> Parameters: 1(Long)
2019-06-20 10:14:12 -<==      Total: 51
2019-06-20 10:14:12 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-20 10:14:12 -==> Parameters: 138(Long)
2019-06-20 10:14:12 -<==      Total: 1
2019-06-20 10:14:12 -耗时 : 16
2019-06-20 10:14:12 -返回值 : index_v1
2019-06-20 10:14:12 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-20 10:14:12 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 16(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-bullseye","url":"/moneyUpLoad/ElecLogUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"165","parentId":"106","text":"缴费上传"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":tru(String), 127.0.0.1(String), 2019-06-20 10:14:12.215(Timestamp)
2019-06-20 10:14:12 -<==    Updates: 1
2019-06-20 10:14:12 -请求地址 : http://localhost:8081/main
2019-06-20 10:14:12 -HTTP METHOD : GET
2019-06-20 10:14:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-20 10:14:12 -参数 : []
2019-06-20 10:14:12 -耗时 : 0
2019-06-20 10:14:12 -返回值 : main
2019-06-20 10:14:12 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-20 10:14:12 -HTTP METHOD : GET
2019-06-20 10:14:12 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-20 10:14:12 -参数 : []
2019-06-20 10:14:12 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-20 10:14:12 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-20 10:14:12 -<==      Total: 0
2019-06-20 10:14:12 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-20 10:14:12 -==> Parameters: 1(Long), 0(String)
2019-06-20 10:14:12 -<==      Total: 1
2019-06-20 10:14:12 -耗时 : 7
2019-06-20 10:14:12 -返回值 : com.bootdo.common.utils.PageUtils@10c6de34
2019-06-20 10:14:12 -请求地址 : http://localhost:8081/main
2019-06-20 10:14:12 -HTTP METHOD : GET
2019-06-20 10:14:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-20 10:14:12 -参数 : []
2019-06-20 10:14:12 -耗时 : 0
2019-06-20 10:14:12 -返回值 : main
2019-06-20 10:14:14 -请求地址 : http://localhost:8081/charts/tableDD
2019-06-20 10:14:14 -HTTP METHOD : GET
2019-06-20 10:14:14 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-06-20 10:14:14 -参数 : []
2019-06-20 10:14:14 -耗时 : 0
2019-06-20 10:14:14 -返回值 : charts/tableDD
2019-06-20 10:15:01 -请求地址 : http://localhost:8081/sys/user/personal
2019-06-20 10:15:01 -HTTP METHOD : GET
2019-06-20 10:15:01 -CLASS_METHOD : com.bootdo.system.controller.UserController.personal
2019-06-20 10:15:01 -参数 : [{}]
2019-06-20 10:15:02 -==>  Preparing: select role_id from sys_user_role where user_id=? 
2019-06-20 10:15:02 -==> Parameters: 1(Long)
2019-06-20 10:15:02 -<==      Total: 1
2019-06-20 10:15:02 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user where user_id = ? 
2019-06-20 10:15:02 -==> Parameters: 1(Long)
2019-06-20 10:15:02 -<==      Total: 1
2019-06-20 10:15:02 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept where dept_id = ? 
2019-06-20 10:15:02 -==> Parameters: 1(Long)
2019-06-20 10:15:02 -<==      Total: 1
2019-06-20 10:15:02 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 10:15:02 -==> Parameters: hobby(String)
2019-06-20 10:15:02 -<==      Total: 2
2019-06-20 10:15:02 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 10:15:02 -==> Parameters: sex(String)
2019-06-20 10:15:02 -<==      Total: 2
2019-06-20 10:15:02 -耗时 : 513
2019-06-20 10:15:02 -返回值 : system/user/personal
2019-06-20 10:15:40 -请求地址 : http://localhost:8081/login;JSESSIONID=b78d2110-da89-437c-8f6e-54a90ad31dd4
2019-06-20 10:15:40 -HTTP METHOD : GET
2019-06-20 10:15:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-06-20 10:15:40 -参数 : [{}]
2019-06-20 10:15:40 -耗时 : 2
2019-06-20 10:15:40 -返回值 : login
2019-06-20 10:15:42 -请求地址 : http://localhost:8081/getVerify
2019-06-20 10:15:42 -HTTP METHOD : GET
2019-06-20 10:15:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-06-20 10:15:42 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@1b9a90c4, org.apache.shiro.web.servlet.ShiroHttpServletResponse@502bac6a]
2019-06-20 10:15:42 -0238
2019-06-20 10:15:42 -耗时 : 194
2019-06-20 10:15:42 -返回值 : null
2019-06-20 10:15:42 -请求地址 : http://localhost:8081/login
2019-06-20 10:15:42 -HTTP METHOD : GET
2019-06-20 10:15:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-06-20 10:15:42 -参数 : [{}]
2019-06-20 10:15:42 -耗时 : 0
2019-06-20 10:15:42 -返回值 : login
2019-06-20 10:15:50 -请求地址 : http://localhost:8081/login
2019-06-20 10:15:50 -HTTP METHOD : POST
2019-06-20 10:15:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-06-20 10:15:50 -参数 : [admin, 111111, 0238, org.apache.shiro.web.servlet.ShiroHttpServletRequest@330a21a]
2019-06-20 10:15:50 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-06-20 10:15:50 -==> Parameters: admin(String)
2019-06-20 10:15:50 -<==      Total: 1
2019-06-20 10:15:50 -耗时 : 23
2019-06-20 10:15:50 -返回值 : {msg=操作成功, code=0}
2019-06-20 10:15:50 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-20 10:15:50 -==> Parameters: 1(Long), admin(String), 登录(String), 24(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-06-20 10:15:50.623(Timestamp)
2019-06-20 10:15:50 -请求地址 : http://localhost:8081/index
2019-06-20 10:15:50 -HTTP METHOD : GET
2019-06-20 10:15:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-20 10:15:50 -参数 : [{}]
2019-06-20 10:15:50 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-20 10:15:50 -==> Parameters: 1(Long)
2019-06-20 10:15:50 -<==      Total: 51
2019-06-20 10:15:50 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-20 10:15:50 -==> Parameters: 138(Long)
2019-06-20 10:15:50 -<==    Updates: 1
2019-06-20 10:15:50 -<==      Total: 1
2019-06-20 10:15:50 -耗时 : 94
2019-06-20 10:15:50 -返回值 : index_v1
2019-06-20 10:15:50 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-20 10:15:50 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 94(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-bullseye","url":"/moneyUpLoad/ElecLogUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"165","parentId":"106","text":"缴费上传"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":tru(String), 127.0.0.1(String), 2019-06-20 10:15:50.759(Timestamp)
2019-06-20 10:15:50 -<==    Updates: 1
2019-06-20 10:15:50 -请求地址 : http://localhost:8081/main
2019-06-20 10:15:50 -HTTP METHOD : GET
2019-06-20 10:15:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-20 10:15:50 -参数 : []
2019-06-20 10:15:50 -耗时 : 0
2019-06-20 10:15:50 -返回值 : main
2019-06-20 10:15:51 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-20 10:15:51 -HTTP METHOD : GET
2019-06-20 10:15:51 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-20 10:15:51 -参数 : []
2019-06-20 10:15:51 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-20 10:15:51 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-20 10:15:51 -<==      Total: 0
2019-06-20 10:15:51 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-20 10:15:51 -==> Parameters: 1(Long), 0(String)
2019-06-20 10:15:51 -<==      Total: 1
2019-06-20 10:15:51 -耗时 : 8
2019-06-20 10:15:51 -返回值 : com.bootdo.common.utils.PageUtils@5cc8fa2a
2019-06-20 10:15:51 -请求地址 : http://localhost:8081/main
2019-06-20 10:15:51 -HTTP METHOD : GET
2019-06-20 10:15:51 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-20 10:15:51 -参数 : []
2019-06-20 10:15:51 -耗时 : 0
2019-06-20 10:15:51 -返回值 : main
2019-06-20 10:15:55 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-06-20 10:15:55 -==> Parameters: 1(Long)
2019-06-20 10:15:55 -<==      Total: 95
2019-06-20 10:15:55 -请求地址 : http://localhost:8081/charts/tableDD
2019-06-20 10:15:55 -HTTP METHOD : GET
2019-06-20 10:15:55 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-06-20 10:15:55 -参数 : []
2019-06-20 10:15:55 -耗时 : 1
2019-06-20 10:15:55 -返回值 : charts/tableDD
2019-06-20 10:15:56 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-20 10:15:56 -HTTP METHOD : GET
2019-06-20 10:15:56 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 10:15:56 -参数 : [userType]
2019-06-20 10:15:56 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 10:15:56 -==> Parameters: userType(String)
2019-06-20 10:15:56 -<==      Total: 4
2019-06-20 10:15:56 -耗时 : 5
2019-06-20 10:15:56 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 10:16:07 -请求地址 : http://localhost:8081/charts/countOwe
2019-06-20 10:16:07 -HTTP METHOD : GET
2019-06-20 10:16:07 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.countOwe
2019-06-20 10:16:07 -参数 : []
2019-06-20 10:16:07 -耗时 : 1
2019-06-20 10:16:07 -返回值 : charts/countOwe
2019-06-20 10:16:07 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-20 10:16:07 -HTTP METHOD : GET
2019-06-20 10:16:07 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 10:16:07 -参数 : [userType]
2019-06-20 10:16:07 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 10:16:07 -==> Parameters: userType(String)
2019-06-20 10:16:07 -<==      Total: 4
2019-06-20 10:16:07 -耗时 : 3
2019-06-20 10:16:07 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 10:16:08 -请求地址 : http://localhost:8081/charts/countRun
2019-06-20 10:16:08 -HTTP METHOD : GET
2019-06-20 10:16:08 -CLASS_METHOD : com.bootdo.charts.controller.countRunController.countRun
2019-06-20 10:16:08 -参数 : []
2019-06-20 10:16:08 -耗时 : 1
2019-06-20 10:16:08 -返回值 : charts/countRun
2019-06-20 10:16:08 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-20 10:16:08 -HTTP METHOD : GET
2019-06-20 10:16:08 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 10:16:08 -参数 : [userType]
2019-06-20 10:16:08 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 10:16:08 -==> Parameters: userType(String)
2019-06-20 10:16:08 -<==      Total: 4
2019-06-20 10:16:08 -耗时 : 4
2019-06-20 10:16:08 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 10:16:10 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-06-20 10:16:10 -HTTP METHOD : GET
2019-06-20 10:16:10 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-06-20 10:16:10 -参数 : []
2019-06-20 10:16:10 -耗时 : 0
2019-06-20 10:16:10 -返回值 : charts/tableElecYY
2019-06-20 10:16:11 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-20 10:16:11 -HTTP METHOD : GET
2019-06-20 10:16:11 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 10:16:11 -参数 : [userType]
2019-06-20 10:16:11 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 10:16:11 -==> Parameters: userType(String)
2019-06-20 10:16:11 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-06-20 10:16:11 -HTTP METHOD : GET
2019-06-20 10:16:11 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 10:16:11 -参数 : [elecType]
2019-06-20 10:16:11 -<==      Total: 4
2019-06-20 10:16:11 -耗时 : 3
2019-06-20 10:16:11 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 10:16:11 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 10:16:11 -==> Parameters: elecType(String)
2019-06-20 10:16:11 -<==      Total: 11
2019-06-20 10:16:11 -耗时 : 3
2019-06-20 10:16:11 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 10:27:56 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 16 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(16)-CONNECTED(16)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 189], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 31], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 829]
2019-06-20 10:28:27 -Validating all active sessions...
2019-06-20 10:28:27 -Finished session validation.  No sessions were stopped.
2019-06-20 10:57:56 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 16 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(16)-CONNECTED(16)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 189], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 31], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 1262]
2019-06-20 11:27:56 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 16 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(16)-CONNECTED(16)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 189], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 31], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 1695]
2019-06-20 11:28:27 -Validating all active sessions...
2019-06-20 11:28:27 -Finished session validation.  [1] sessions were stopped.
2019-06-20 11:57:56 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 16 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(16)-CONNECTED(16)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 189], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 31], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 2128]
2019-06-20 12:27:56 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 16 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(16)-CONNECTED(16)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 189], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 31], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 2561]
2019-06-20 12:28:27 -Validating all active sessions...
2019-06-20 12:28:27 -Finished session validation.  [2] sessions were stopped.
2019-06-20 12:57:56 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 16 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(16)-CONNECTED(16)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 189], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 31], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 2994]
2019-06-20 13:27:56 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 16 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(16)-CONNECTED(16)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 189], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 31], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 3427]
2019-06-20 13:28:27 -Validating all active sessions...
2019-06-20 13:28:27 -Finished session validation.  No sessions were stopped.
2019-06-20 13:57:56 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 16 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(16)-CONNECTED(16)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 189], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 31], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 3860]
2019-06-20 14:09:51 -请求地址 : http://localhost:8081/login;JSESSIONID=df586b41-3102-409f-aa4a-c00273b0dc1e
2019-06-20 14:09:51 -HTTP METHOD : GET
2019-06-20 14:09:51 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-06-20 14:09:51 -参数 : [{}]
2019-06-20 14:09:51 -耗时 : 3
2019-06-20 14:09:51 -返回值 : login
2019-06-20 14:09:51 -请求地址 : http://localhost:8081/getVerify
2019-06-20 14:09:51 -HTTP METHOD : GET
2019-06-20 14:09:51 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-06-20 14:09:51 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@4fcc8b21, org.apache.shiro.web.servlet.ShiroHttpServletResponse@11ce3f77]
2019-06-20 14:09:51 -9489
2019-06-20 14:09:51 -耗时 : 43
2019-06-20 14:09:51 -返回值 : null
2019-06-20 14:10:01 -请求地址 : http://localhost:8081/login
2019-06-20 14:10:01 -HTTP METHOD : POST
2019-06-20 14:10:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-06-20 14:10:01 -参数 : [admin, 111111, 9489, org.apache.shiro.web.servlet.ShiroHttpServletRequest@5ad8ddae]
2019-06-20 14:10:02 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-06-20 14:10:02 -==> Parameters: admin(String)
2019-06-20 14:10:02 -<==      Total: 1
2019-06-20 14:10:02 -耗时 : 78
2019-06-20 14:10:02 -返回值 : {msg=操作成功, code=0}
2019-06-20 14:10:02 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-20 14:10:02 -==> Parameters: 1(Long), admin(String), 登录(String), 78(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-06-20 14:10:02.047(Timestamp)
2019-06-20 14:10:02 -请求地址 : http://localhost:8081/index
2019-06-20 14:10:02 -HTTP METHOD : GET
2019-06-20 14:10:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-20 14:10:02 -参数 : [{}]
2019-06-20 14:10:02 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-20 14:10:02 -==> Parameters: 1(Long)
2019-06-20 14:10:02 -<==      Total: 51
2019-06-20 14:10:02 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-20 14:10:02 -==> Parameters: 138(Long)
2019-06-20 14:10:02 -<==      Total: 1
2019-06-20 14:10:02 -耗时 : 123
2019-06-20 14:10:02 -返回值 : index_v1
2019-06-20 14:10:02 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-20 14:10:02 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 123(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-bullseye","url":"/moneyUpLoad/ElecLogUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"165","parentId":"106","text":"缴费上传"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":tru(String), 127.0.0.1(String), 2019-06-20 14:10:02.272(Timestamp)
2019-06-20 14:10:02 -<==    Updates: 1
2019-06-20 14:10:02 -<==    Updates: 1
2019-06-20 14:10:02 -请求地址 : http://localhost:8081/main
2019-06-20 14:10:02 -HTTP METHOD : GET
2019-06-20 14:10:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-20 14:10:02 -参数 : []
2019-06-20 14:10:02 -耗时 : 0
2019-06-20 14:10:02 -返回值 : main
2019-06-20 14:10:02 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-20 14:10:02 -HTTP METHOD : GET
2019-06-20 14:10:02 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-20 14:10:02 -参数 : []
2019-06-20 14:10:02 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-20 14:10:02 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-20 14:10:02 -<==      Total: 0
2019-06-20 14:10:02 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-20 14:10:02 -==> Parameters: 1(Long), 0(String)
2019-06-20 14:10:02 -<==      Total: 1
2019-06-20 14:10:02 -耗时 : 5
2019-06-20 14:10:02 -返回值 : com.bootdo.common.utils.PageUtils@75fe3096
2019-06-20 14:10:02 -请求地址 : http://localhost:8081/main
2019-06-20 14:10:02 -HTTP METHOD : GET
2019-06-20 14:10:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-20 14:10:02 -参数 : []
2019-06-20 14:10:02 -耗时 : 28
2019-06-20 14:10:02 -返回值 : main
2019-06-20 14:10:04 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-06-20 14:10:04 -==> Parameters: 1(Long)
2019-06-20 14:10:04 -<==      Total: 95
2019-06-20 14:10:04 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-06-20 14:10:04 -HTTP METHOD : GET
2019-06-20 14:10:04 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-06-20 14:10:04 -参数 : []
2019-06-20 14:10:04 -耗时 : 0
2019-06-20 14:10:04 -返回值 : moneyList/moneyList
2019-06-20 14:10:06 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-06-20 14:10:06 -HTTP METHOD : GET
2019-06-20 14:10:06 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-06-20 14:10:06 -参数 : []
2019-06-20 14:10:06 -耗时 : 0
2019-06-20 14:10:06 -返回值 : system/dept/deptTree
2019-06-20 14:10:07 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-06-20 14:10:07 -HTTP METHOD : GET
2019-06-20 14:10:07 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-06-20 14:10:07 -参数 : []
2019-06-20 14:10:07 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-06-20 14:10:07 -==> Parameters: 
2019-06-20 14:10:07 -<==      Total: 3
2019-06-20 14:10:07 -耗时 : 3
2019-06-20 14:10:07 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-06-20 14:18:48 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-06-20 14:18:48 -HTTP METHOD : GET
2019-06-20 14:18:48 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-06-20 14:18:48 -参数 : []
2019-06-20 14:18:48 -耗时 : 74
2019-06-20 14:18:48 -返回值 : system/dept/deptTree
2019-06-20 14:18:49 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-06-20 14:18:49 -HTTP METHOD : GET
2019-06-20 14:18:49 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-06-20 14:18:49 -参数 : []
2019-06-20 14:18:49 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-06-20 14:18:49 -==> Parameters: 
2019-06-20 14:18:49 -<==      Total: 3
2019-06-20 14:18:49 -耗时 : 2
2019-06-20 14:18:49 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-06-20 14:24:42 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-06-20 14:24:42 -HTTP METHOD : GET
2019-06-20 14:24:42 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-06-20 14:24:42 -参数 : []
2019-06-20 14:24:42 -耗时 : 0
2019-06-20 14:24:42 -返回值 : system/dept/deptTree
2019-06-20 14:24:43 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-06-20 14:24:43 -HTTP METHOD : GET
2019-06-20 14:24:43 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-06-20 14:24:43 -参数 : []
2019-06-20 14:24:43 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-06-20 14:24:43 -==> Parameters: 
2019-06-20 14:24:43 -<==      Total: 3
2019-06-20 14:24:43 -耗时 : 6
2019-06-20 14:24:43 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-06-20 14:24:46 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-06-20 14:24:46 -HTTP METHOD : GET
2019-06-20 14:24:46 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-06-20 14:24:46 -参数 : []
2019-06-20 14:24:46 -耗时 : 1
2019-06-20 14:24:46 -返回值 : system/dept/deptTree
2019-06-20 14:24:47 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-06-20 14:24:47 -HTTP METHOD : GET
2019-06-20 14:24:47 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-06-20 14:24:47 -参数 : []
2019-06-20 14:24:47 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-06-20 14:24:47 -==> Parameters: 
2019-06-20 14:24:47 -<==      Total: 3
2019-06-20 14:24:47 -耗时 : 4
2019-06-20 14:24:47 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-06-20 14:24:50 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-06-20 14:24:50 -HTTP METHOD : GET
2019-06-20 14:24:50 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-06-20 14:24:50 -参数 : []
2019-06-20 14:24:50 -耗时 : 0
2019-06-20 14:24:50 -返回值 : system/dept/deptTree
2019-06-20 14:24:50 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-06-20 14:24:50 -HTTP METHOD : GET
2019-06-20 14:24:50 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-06-20 14:24:50 -参数 : []
2019-06-20 14:24:50 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-06-20 14:24:50 -==> Parameters: 
2019-06-20 14:24:50 -<==      Total: 3
2019-06-20 14:24:50 -耗时 : 6
2019-06-20 14:24:50 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-06-20 14:24:54 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-06-20 14:24:54 -HTTP METHOD : GET
2019-06-20 14:24:54 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-06-20 14:24:54 -参数 : []
2019-06-20 14:24:54 -耗时 : 1
2019-06-20 14:24:54 -返回值 : system/dept/deptTree
2019-06-20 14:24:54 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-06-20 14:24:54 -HTTP METHOD : GET
2019-06-20 14:24:54 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-06-20 14:24:54 -参数 : []
2019-06-20 14:24:54 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-06-20 14:24:54 -==> Parameters: 
2019-06-20 14:24:54 -<==      Total: 3
2019-06-20 14:24:54 -耗时 : 3
2019-06-20 14:24:54 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-06-20 14:27:56 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 17 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(17)-CONNECTED(17)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 201], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 33], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 4292]
2019-06-20 14:28:27 -Validating all active sessions...
2019-06-20 14:28:27 -Finished session validation.  No sessions were stopped.
2019-06-20 14:31:55 -Starting BootdoApplication on PC-201905091110 with PID 8836 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-06-20 14:31:55 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-06-20 14:31:55 -The following profiles are active: dev
2019-06-20 14:31:55 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7c7d3c46: startup date [Thu Jun 20 14:31:55 CST 2019]; root of context hierarchy
2019-06-20 14:32:08 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-06-20 14:32:12 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$8feb5807] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-20 14:32:13 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$824486ae] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-20 14:32:15 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-20 14:32:16 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-20 14:32:16 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-20 14:32:16 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-06-20 14:32:16 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-06-20 14:32:16 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-20 14:32:16 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-20 14:32:16 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-20 14:32:16 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-20 14:32:19 -Tomcat initialized with port(s): 8081 (http)
2019-06-20 14:32:19 -Initializing ProtocolHandler ["http-nio-8081"]
2019-06-20 14:32:19 -Starting service [Tomcat]
2019-06-20 14:32:19 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-06-20 14:32:19 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:\Java\JDK\jdk1.8.0_102\jre\bin;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-06-20 14:32:20 -Initializing Spring embedded WebApplicationContext
2019-06-20 14:32:20 -Root WebApplicationContext: initialization completed in 25005 ms
2019-06-20 14:32:22 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-06-20 14:32:22 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-06-20 14:32:22 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-06-20 14:32:22 -Mapping filter: 'requestContextFilter' to: [/*]
2019-06-20 14:32:22 -Filter xssFilter was not registered (disabled)
2019-06-20 14:32:22 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-06-20 14:32:22 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-06-20 14:32:22 -Servlet statViewServlet mapped to [/druid/*]
2019-06-20 14:32:22 -Servlet dispatcherServlet mapped to [/]
2019-06-20 14:32:30 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7c7d3c46: startup date [Thu Jun 20 14:31:55 CST 2019]; root of context hierarchy
2019-06-20 14:32:31 -Using default implementation for ThreadExecutor
2019-06-20 14:32:31 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-06-20 14:32:31 -Quartz Scheduler v.2.3.0 created.
2019-06-20 14:32:31 -RAMJobStore initialized.
2019-06-20 14:32:31 -Scheduler meta-data: Quartz Scheduler (v2.3.0) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-06-20 14:32:31 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-06-20 14:32:31 -Quartz scheduler version: 2.3.0
2019-06-20 14:32:31 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@8585cdd
2019-06-20 14:32:32 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-06-20 14:32:32 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-06-20 14:32:37 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-06-20 14:32:37 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-20 14:32:37 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-20 14:32:37 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-20 14:32:37 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-06-20 14:32:37 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-20 14:32:37 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countOweController.getCountOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-06-20 14:32:37 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-06-20 14:32:37 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-06-20 14:32:37 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-20 14:32:37 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-20 14:32:37 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-06-20 14:32:37 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-06-20 14:32:37 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-20 14:32:37 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-20 14:32:37 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-20 14:32:37 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-06-20 14:32:37 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-20 14:32:37 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-06-20 14:32:37 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-06-20 14:32:37 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-06-20 14:32:37 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-06-20 14:32:37 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-06-20 14:32:37 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-06-20 14:32:37 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-20 14:32:37 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-06-20 14:32:37 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-06-20 14:32:37 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-06-20 14:32:37 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-06-20 14:32:37 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-20 14:32:37 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-20 14:32:37 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-06-20 14:32:37 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-06-20 14:32:37 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Integer> com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-06-20 14:32:37 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-06-20 14:32:37 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-20 14:32:37 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-06-20 14:32:37 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-06-20 14:32:37 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-06-20 14:32:37 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-06-20 14:32:37 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 14:32:37 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-06-20 14:32:37 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 14:32:37 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-06-20 14:32:37 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-06-20 14:32:37 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-06-20 14:32:37 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-06-20 14:32:37 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-06-20 14:32:37 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-06-20 14:32:37 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-06-20 14:32:37 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-06-20 14:32:37 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 14:32:37 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-06-20 14:32:37 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-06-20 14:32:37 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 14:32:37 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-06-20 14:32:37 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-06-20 14:32:37 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 14:32:37 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-06-20 14:32:37 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-06-20 14:32:37 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-06-20 14:32:37 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-06-20 14:32:37 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-06-20 14:32:37 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-06-20 14:32:37 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-06-20 14:32:37 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-06-20 14:32:37 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-06-20 14:32:37 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 14:32:37 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-06-20 14:32:37 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-06-20 14:32:37 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 14:32:37 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-06-20 14:32:37 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-06-20 14:32:37 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-06-20 14:32:37 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-06-20 14:32:37 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 14:32:37 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-06-20 14:32:37 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-06-20 14:32:37 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-06-20 14:32:37 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-20 14:32:37 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-20 14:32:37 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-06-20 14:32:37 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-06-20 14:32:37 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-06-20 14:32:37 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-06-20 14:32:37 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-06-20 14:32:37 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-06-20 14:32:37 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 14:32:37 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-06-20 14:32:37 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-06-20 14:32:37 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-06-20 14:32:37 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-06-20 14:32:37 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-06-20 14:32:37 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-06-20 14:32:37 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-06-20 14:32:37 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-06-20 14:32:37 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-06-20 14:32:37 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 14:32:37 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-06-20 14:32:37 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 14:32:37 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-06-20 14:32:37 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-06-20 14:32:37 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-06-20 14:32:37 -Mapped "{[/elec/elecUpLoad/importElecUser]}" onto public java.lang.String com.bootdo.elec.controller.ElecUpLoadController.importElecUser(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-20 14:32:37 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-06-20 14:32:37 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-06-20 14:32:37 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-06-20 14:32:37 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-06-20 14:32:37 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-06-20 14:32:37 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 14:32:37 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-06-20 14:32:37 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-06-20 14:32:37 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-06-20 14:32:37 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-06-20 14:32:37 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-06-20 14:32:37 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-06-20 14:32:37 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-06-20 14:32:37 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-06-20 14:32:37 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-06-20 14:32:37 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-06-20 14:32:37 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-06-20 14:32:37 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 14:32:37 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-06-20 14:32:37 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 14:32:37 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-06-20 14:32:37 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-06-20 14:32:37 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-06-20 14:32:37 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-20 14:32:37 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-06-20 14:32:37 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-06-20 14:32:37 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-06-20 14:32:37 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-06-20 14:32:37 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-06-20 14:32:37 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 14:32:37 -Mapped "{[/moneyList/moneyWZ/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.add()
2019-06-20 14:32:37 -Mapped "{[/moneyList/moneyWZ/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long)
2019-06-20 14:32:37 -Mapped "{[/moneyList/moneyWZ/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long[])
2019-06-20 14:32:37 -Mapped "{[/moneyList/moneyWZ/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.update(com.bootdo.elec.domain.ElecDO)
2019-06-20 14:32:37 -Mapped "{[/moneyList/moneyWZ/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyList.controller.MoneyListWZController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-06-20 14:32:37 -Mapped "{[/moneyList/moneyWZ/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 14:32:37 -Mapped "{[/moneyList/moneyWZ],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
2019-06-20 14:32:37 -Mapped "{[/moneyList/moneyWZ/batchMoney],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.batchMoney(java.lang.Long[])
2019-06-20 14:32:37 -Mapped "{[/moneyList/moneyWZ/exprotWZ],methods=[GET]}" onto public void com.bootdo.moneyList.controller.MoneyListWZController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-06-20 14:32:37 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-06-20 14:32:37 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-06-20 14:32:37 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-06-20 14:32:37 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-06-20 14:32:37 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 14:32:37 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-06-20 14:32:37 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 14:32:37 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-06-20 14:32:37 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-20 14:32:37 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-06-20 14:32:37 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-06-20 14:32:37 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-06-20 14:32:37 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-06-20 14:32:37 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 14:32:37 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-06-20 14:32:37 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 14:32:37 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-06-20 14:32:37 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-20 14:32:37 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-06-20 14:32:37 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-06-20 14:32:37 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-06-20 14:32:37 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-06-20 14:32:37 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 14:32:37 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-06-20 14:32:37 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 14:32:37 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-20 14:32:37 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-06-20 14:32:37 -Mapped "{[/moneyUpLoad/ElecLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.ElecLogUpLoad()
2019-06-20 14:32:37 -Mapped "{[/moneyUpLoad/ElecLogUpLoad/importElecLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.importElecLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-20 14:32:37 -Mapped "{[/moneyUpLoad/ElecLogUpLoad/exprotElecLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.exprotElecLogExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-20 14:32:37 -Mapped "{[/moneyUpLoad/HeatLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.HeatLogUpLoad()
2019-06-20 14:32:37 -Mapped "{[/moneyUpLoad/HeatLogUpLoad/importHeatLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.importHeatLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-20 14:32:37 -Mapped "{[/moneyUpLoad/HeatLogUpLoad/exprotHeatLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.exprotHeatLogExcel(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-20 14:32:37 -Mapped "{[/moneyUpLoad/WaterLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.WaterLogLogUpLoad()
2019-06-20 14:32:37 -Mapped "{[/moneyUpLoad/WaterLogUpLoad/importWaterLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.importWaterLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-20 14:32:37 -Mapped "{[/moneyUpLoad/WaterLogUpLoad/exprotWaterLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.exprotWaterLogExcel(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-20 14:32:37 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-06-20 14:32:37 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-06-20 14:32:37 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-06-20 14:32:37 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-06-20 14:32:37 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-06-20 14:32:37 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 14:32:37 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-06-20 14:32:37 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-06-20 14:32:37 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 14:32:37 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-06-20 14:32:37 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 14:32:37 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-06-20 14:32:37 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-06-20 14:32:37 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-06-20 14:32:37 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-06-20 14:32:37 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 14:32:37 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-06-20 14:32:38 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.batchRemove(java.lang.Long[])
2019-06-20 14:32:38 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-06-20 14:32:38 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-06-20 14:32:38 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-06-20 14:32:38 -Mapped "{[/print/print/batchPrint],methods=[POST]}" onto public java.util.List<com.bootdo.print.vo.PrintVo> com.bootdo.print.controller.PrintController.batchPrint(java.lang.Long[])
2019-06-20 14:32:38 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 14:32:38 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 14:32:38 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-06-20 14:32:38 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-06-20 14:32:38 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-06-20 14:32:38 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-06-20 14:32:38 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-06-20 14:32:38 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-06-20 14:32:38 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-06-20 14:32:38 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-06-20 14:32:38 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView(org.springframework.web.servlet.ModelAndView)
2019-06-20 14:32:38 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 14:32:38 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-06-20 14:32:38 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-06-20 14:32:38 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-06-20 14:32:38 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-20 14:32:38 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-06-20 14:32:38 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-06-20 14:32:38 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-06-20 14:32:38 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-06-20 14:32:38 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-06-20 14:32:38 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-06-20 14:32:38 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 14:32:38 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-06-20 14:32:38 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-06-20 14:32:38 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-06-20 14:32:38 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-06-20 14:32:38 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-06-20 14:32:38 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-06-20 14:32:38 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-06-20 14:32:38 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-06-20 14:32:38 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-06-20 14:32:38 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-06-20 14:32:38 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-06-20 14:32:38 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 14:32:38 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-06-20 14:32:38 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-06-20 14:32:38 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-06-20 14:32:38 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-06-20 14:32:38 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-06-20 14:32:38 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 14:32:38 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-06-20 14:32:38 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-06-20 14:32:38 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-06-20 14:32:38 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 14:32:38 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-06-20 14:32:38 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-06-20 14:32:38 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-06-20 14:32:38 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-06-20 14:32:38 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-06-20 14:32:38 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-06-20 14:32:38 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-06-20 14:32:38 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-06-20 14:32:38 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-06-20 14:32:38 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-06-20 14:32:38 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-06-20 14:32:38 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-06-20 14:32:38 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-06-20 14:32:38 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-06-20 14:32:38 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-06-20 14:32:38 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-06-20 14:32:38 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-06-20 14:32:38 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 14:32:38 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-06-20 14:32:38 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-06-20 14:32:38 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 14:32:38 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-06-20 14:32:38 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-06-20 14:32:38 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-06-20 14:32:38 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-06-20 14:32:38 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-06-20 14:32:38 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-06-20 14:32:38 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-06-20 14:32:38 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-06-20 14:32:38 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 14:32:38 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-06-20 14:32:38 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-06-20 14:32:38 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 14:32:38 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-06-20 14:32:38 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-06-20 14:32:38 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-20 14:32:38 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-06-20 14:32:38 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-06-20 14:32:38 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-06-20 14:32:38 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-06-20 14:32:38 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-06-20 14:32:39 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-06-20 14:32:39 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-06-20 14:32:39 -Initializing ExecutorService  'brokerChannelExecutor'
2019-06-20 14:32:40 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-20 14:32:40 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7c7d3c46: startup date [Thu Jun 20 14:31:55 CST 2019]; root of context hierarchy
2019-06-20 14:32:40 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-20 14:32:40 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-20 14:32:41 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-06-20 14:32:41 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-06-20 14:32:45 -Registering beans for JMX exposure on startup
2019-06-20 14:32:45 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-06-20 14:32:45 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-06-20 14:32:45 -Starting beans in phase 2147483647
2019-06-20 14:32:45 -Context refreshed
2019-06-20 14:32:45 -Found 1 custom documentation plugin(s)
2019-06-20 14:32:46 -Scanning for api listing references
2019-06-20 14:32:47 -Generating unique operation named: removeUsingPOST_1
2019-06-20 14:32:47 -Generating unique operation named: addUsingGET_1
2019-06-20 14:32:47 -Generating unique operation named: editUsingGET_1
2019-06-20 14:32:47 -Generating unique operation named: listUsingGET_1
2019-06-20 14:32:47 -Generating unique operation named: removeUsingPOST_2
2019-06-20 14:32:47 -Generating unique operation named: removeUsingPOST_3
2019-06-20 14:32:47 -Generating unique operation named: saveUsingPOST_1
2019-06-20 14:32:48 -Generating unique operation named: updateUsingGET_1
2019-06-20 14:32:48 -Generating unique operation named: updateUsingHEAD_1
2019-06-20 14:32:48 -Generating unique operation named: updateUsingPOST_1
2019-06-20 14:32:48 -Generating unique operation named: updateUsingPUT_1
2019-06-20 14:32:48 -Generating unique operation named: updateUsingPATCH_1
2019-06-20 14:32:48 -Generating unique operation named: updateUsingDELETE_1
2019-06-20 14:32:48 -Generating unique operation named: updateUsingOPTIONS_1
2019-06-20 14:32:48 -Generating unique operation named: updateUsingTRACE_1
2019-06-20 14:32:48 -Generating unique operation named: addUsingGET_2
2019-06-20 14:32:48 -Generating unique operation named: editUsingGET_2
2019-06-20 14:32:48 -Generating unique operation named: listUsingGET_2
2019-06-20 14:32:48 -Generating unique operation named: removeUsingPOST_4
2019-06-20 14:32:48 -Generating unique operation named: removeUsingPOST_5
2019-06-20 14:32:48 -Generating unique operation named: saveUsingPOST_2
2019-06-20 14:32:48 -Generating unique operation named: updateUsingPOST_2
2019-06-20 14:32:48 -Generating unique operation named: exprotExcelUsingGET_1
2019-06-20 14:32:48 -Generating unique operation named: addUsingGET_3
2019-06-20 14:32:48 -Generating unique operation named: editUsingGET_3
2019-06-20 14:32:48 -Generating unique operation named: listUsingGET_3
2019-06-20 14:32:48 -Generating unique operation named: removeUsingPOST_6
2019-06-20 14:32:48 -Generating unique operation named: removeUsingPOST_7
2019-06-20 14:32:48 -Generating unique operation named: saveUsingPOST_3
2019-06-20 14:32:48 -Generating unique operation named: updateUsingGET_2
2019-06-20 14:32:48 -Generating unique operation named: updateUsingHEAD_2
2019-06-20 14:32:48 -Generating unique operation named: updateUsingPOST_3
2019-06-20 14:32:48 -Generating unique operation named: updateUsingPUT_2
2019-06-20 14:32:48 -Generating unique operation named: updateUsingPATCH_2
2019-06-20 14:32:48 -Generating unique operation named: updateUsingDELETE_2
2019-06-20 14:32:49 -Generating unique operation named: updateUsingOPTIONS_2
2019-06-20 14:32:49 -Generating unique operation named: updateUsingTRACE_2
2019-06-20 14:32:49 -Generating unique operation named: addUsingGET_4
2019-06-20 14:32:49 -Generating unique operation named: editUsingGET_4
2019-06-20 14:32:49 -Generating unique operation named: listUsingGET_4
2019-06-20 14:32:49 -Generating unique operation named: removeUsingPOST_8
2019-06-20 14:32:49 -Generating unique operation named: removeUsingPOST_9
2019-06-20 14:32:49 -Generating unique operation named: saveUsingPOST_4
2019-06-20 14:32:49 -Generating unique operation named: updateUsingGET_3
2019-06-20 14:32:49 -Generating unique operation named: updateUsingHEAD_3
2019-06-20 14:32:49 -Generating unique operation named: updateUsingPOST_4
2019-06-20 14:32:49 -Generating unique operation named: updateUsingPUT_3
2019-06-20 14:32:49 -Generating unique operation named: updateUsingPATCH_3
2019-06-20 14:32:49 -Generating unique operation named: updateUsingDELETE_3
2019-06-20 14:32:49 -Generating unique operation named: updateUsingOPTIONS_3
2019-06-20 14:32:49 -Generating unique operation named: updateUsingTRACE_3
2019-06-20 14:32:49 -Generating unique operation named: ElecUsingGET_1
2019-06-20 14:32:49 -Generating unique operation named: addUsingGET_5
2019-06-20 14:32:49 -Generating unique operation named: editUsingGET_5
2019-06-20 14:32:49 -Generating unique operation named: listUsingGET_5
2019-06-20 14:32:49 -Generating unique operation named: removeUsingPOST_10
2019-06-20 14:32:49 -Generating unique operation named: removeUsingPOST_11
2019-06-20 14:32:49 -Generating unique operation named: saveUsingPOST_5
2019-06-20 14:32:49 -Generating unique operation named: updateUsingGET_4
2019-06-20 14:32:49 -Generating unique operation named: updateUsingHEAD_4
2019-06-20 14:32:49 -Generating unique operation named: updateUsingPOST_5
2019-06-20 14:32:49 -Generating unique operation named: updateUsingPUT_4
2019-06-20 14:32:49 -Generating unique operation named: updateUsingPATCH_4
2019-06-20 14:32:49 -Generating unique operation named: updateUsingDELETE_4
2019-06-20 14:32:49 -Generating unique operation named: updateUsingOPTIONS_4
2019-06-20 14:32:49 -Generating unique operation named: updateUsingTRACE_4
2019-06-20 14:32:50 -Generating unique operation named: editUsingGET_6
2019-06-20 14:32:50 -Generating unique operation named: listUsingGET_6
2019-06-20 14:32:50 -Generating unique operation named: updateUsingPOST_6
2019-06-20 14:32:50 -Generating unique operation named: addUsingGET_6
2019-06-20 14:32:50 -Generating unique operation named: editUsingGET_7
2019-06-20 14:32:50 -Generating unique operation named: exprotExcelUsingGET_2
2019-06-20 14:32:50 -Generating unique operation named: listUsingGET_7
2019-06-20 14:32:50 -Generating unique operation named: removeUsingPOST_12
2019-06-20 14:32:50 -Generating unique operation named: removeUsingPOST_13
2019-06-20 14:32:50 -Generating unique operation named: saveUsingPOST_6
2019-06-20 14:32:50 -Generating unique operation named: updateUsingGET_5
2019-06-20 14:32:50 -Generating unique operation named: updateUsingHEAD_5
2019-06-20 14:32:50 -Generating unique operation named: updateUsingPOST_7
2019-06-20 14:32:50 -Generating unique operation named: updateUsingPUT_5
2019-06-20 14:32:50 -Generating unique operation named: updateUsingPATCH_5
2019-06-20 14:32:50 -Generating unique operation named: updateUsingDELETE_5
2019-06-20 14:32:50 -Generating unique operation named: updateUsingOPTIONS_5
2019-06-20 14:32:50 -Generating unique operation named: updateUsingTRACE_5
2019-06-20 14:32:50 -Generating unique operation named: exprotExcelUsingGET_3
2019-06-20 14:32:50 -Generating unique operation named: addUsingGET_7
2019-06-20 14:32:50 -Generating unique operation named: editUsingGET_8
2019-06-20 14:32:50 -Generating unique operation named: listUsingGET_8
2019-06-20 14:32:50 -Generating unique operation named: removeUsingPOST_14
2019-06-20 14:32:50 -Generating unique operation named: removeUsingPOST_15
2019-06-20 14:32:50 -Generating unique operation named: saveUsingPOST_7
2019-06-20 14:32:50 -Generating unique operation named: updateUsingGET_6
2019-06-20 14:32:50 -Generating unique operation named: updateUsingHEAD_6
2019-06-20 14:32:50 -Generating unique operation named: updateUsingPOST_8
2019-06-20 14:32:50 -Generating unique operation named: updateUsingPUT_6
2019-06-20 14:32:50 -Generating unique operation named: updateUsingPATCH_6
2019-06-20 14:32:50 -Generating unique operation named: updateUsingDELETE_6
2019-06-20 14:32:50 -Generating unique operation named: updateUsingOPTIONS_6
2019-06-20 14:32:50 -Generating unique operation named: updateUsingTRACE_6
2019-06-20 14:32:50 -Generating unique operation named: addUsingGET_8
2019-06-20 14:32:50 -Generating unique operation named: editUsingGET_9
2019-06-20 14:32:50 -Generating unique operation named: listUsingGET_9
2019-06-20 14:32:50 -Generating unique operation named: removeUsingPOST_16
2019-06-20 14:32:50 -Generating unique operation named: removeUsingPOST_17
2019-06-20 14:32:50 -Generating unique operation named: saveUsingPOST_8
2019-06-20 14:32:50 -Generating unique operation named: updateUsingGET_7
2019-06-20 14:32:50 -Generating unique operation named: updateUsingHEAD_7
2019-06-20 14:32:50 -Generating unique operation named: updateUsingPOST_9
2019-06-20 14:32:50 -Generating unique operation named: updateUsingPUT_7
2019-06-20 14:32:50 -Generating unique operation named: updateUsingPATCH_7
2019-06-20 14:32:50 -Generating unique operation named: updateUsingDELETE_7
2019-06-20 14:32:50 -Generating unique operation named: updateUsingOPTIONS_7
2019-06-20 14:32:50 -Generating unique operation named: updateUsingTRACE_7
2019-06-20 14:32:50 -Generating unique operation named: addUsingGET_9
2019-06-20 14:32:50 -Generating unique operation named: editUsingGET_10
2019-06-20 14:32:50 -Generating unique operation named: infoUsingGET_1
2019-06-20 14:32:50 -Generating unique operation named: infoUsingHEAD_1
2019-06-20 14:32:50 -Generating unique operation named: infoUsingPOST_1
2019-06-20 14:32:50 -Generating unique operation named: infoUsingPUT_1
2019-06-20 14:32:50 -Generating unique operation named: infoUsingPATCH_1
2019-06-20 14:32:50 -Generating unique operation named: infoUsingDELETE_1
2019-06-20 14:32:50 -Generating unique operation named: infoUsingOPTIONS_1
2019-06-20 14:32:50 -Generating unique operation named: infoUsingTRACE_1
2019-06-20 14:32:50 -Generating unique operation named: listUsingGET_10
2019-06-20 14:32:50 -Generating unique operation named: removeUsingPOST_18
2019-06-20 14:32:50 -Generating unique operation named: removeUsingPOST_19
2019-06-20 14:32:51 -Generating unique operation named: saveUsingPOST_9
2019-06-20 14:32:51 -Generating unique operation named: updateUsingPOST_10
2019-06-20 14:32:51 -Generating unique operation named: listUsingGET_11
2019-06-20 14:32:51 -Generating unique operation named: removeUsingPOST_20
2019-06-20 14:32:51 -Generating unique operation named: welcomeUsingGET_1
2019-06-20 14:32:51 -Generating unique operation named: addUsingGET_10
2019-06-20 14:32:51 -Generating unique operation named: editUsingGET_11
2019-06-20 14:32:51 -Generating unique operation named: listUsingGET_12
2019-06-20 14:32:51 -Generating unique operation named: removeUsingPOST_21
2019-06-20 14:32:51 -Generating unique operation named: saveUsingPOST_10
2019-06-20 14:32:51 -Generating unique operation named: treeUsingGET_1
2019-06-20 14:32:51 -Generating unique operation named: treeUsingGET_2
2019-06-20 14:32:51 -Generating unique operation named: updateUsingPOST_11
2019-06-20 14:32:51 -Generating unique operation named: addUsingGET_11
2019-06-20 14:32:51 -Generating unique operation named: editUsingGET_12
2019-06-20 14:32:51 -Generating unique operation named: listUsingGET_13
2019-06-20 14:32:51 -Generating unique operation named: removeUsingPOST_22
2019-06-20 14:32:51 -Generating unique operation named: removeUsingPOST_23
2019-06-20 14:32:51 -Generating unique operation named: updateUsingPOST_12
2019-06-20 14:32:51 -Generating unique operation named: addUsingGET_12
2019-06-20 14:32:51 -Generating unique operation named: editUsingGET_13
2019-06-20 14:32:51 -Generating unique operation named: listUsingGET_14
2019-06-20 14:32:51 -Generating unique operation named: removeUsingPOST_24
2019-06-20 14:32:51 -Generating unique operation named: removeUsingPOST_25
2019-06-20 14:32:51 -Generating unique operation named: saveUsingPOST_11
2019-06-20 14:32:51 -Generating unique operation named: updateUsingGET_8
2019-06-20 14:32:51 -Generating unique operation named: updateUsingHEAD_8
2019-06-20 14:32:51 -Generating unique operation named: updateUsingPOST_13
2019-06-20 14:32:51 -Generating unique operation named: updateUsingPUT_8
2019-06-20 14:32:51 -Generating unique operation named: updateUsingPATCH_8
2019-06-20 14:32:51 -Generating unique operation named: updateUsingDELETE_8
2019-06-20 14:32:51 -Generating unique operation named: updateUsingOPTIONS_8
2019-06-20 14:32:51 -Generating unique operation named: updateUsingTRACE_8
2019-06-20 14:32:51 -Generating unique operation named: addUsingGET_13
2019-06-20 14:32:51 -Generating unique operation named: batchRemoveUsingPOST_1
2019-06-20 14:32:51 -Generating unique operation named: editUsingGET_14
2019-06-20 14:32:52 -Generating unique operation named: listUsingGET_15
2019-06-20 14:32:52 -Generating unique operation named: printEditUsingGET_1
2019-06-20 14:32:52 -Generating unique operation named: removeUsingPOST_26
2019-06-20 14:32:52 -Generating unique operation named: saveUsingPOST_12
2019-06-20 14:32:52 -Generating unique operation named: updateUsingGET_9
2019-06-20 14:32:52 -Generating unique operation named: updateUsingHEAD_9
2019-06-20 14:32:52 -Generating unique operation named: updateUsingPOST_14
2019-06-20 14:32:52 -Generating unique operation named: updateUsingPUT_9
2019-06-20 14:32:52 -Generating unique operation named: updateUsingPATCH_9
2019-06-20 14:32:52 -Generating unique operation named: updateUsingDELETE_9
2019-06-20 14:32:52 -Generating unique operation named: updateUsingOPTIONS_9
2019-06-20 14:32:52 -Generating unique operation named: updateUsingTRACE_9
2019-06-20 14:32:52 -Generating unique operation named: addUsingGET_14
2019-06-20 14:32:52 -Generating unique operation named: batchRemoveUsingPOST_2
2019-06-20 14:32:52 -Generating unique operation named: editUsingGET_15
2019-06-20 14:32:52 -Generating unique operation named: listUsingGET_16
2019-06-20 14:32:52 -Generating unique operation named: saveUsingPOST_13
2019-06-20 14:32:52 -Generating unique operation named: saveUsingPOST_14
2019-06-20 14:32:52 -Generating unique operation named: updateUsingPOST_15
2019-06-20 14:32:52 -Generating unique operation named: listUsingGET_17
2019-06-20 14:32:52 -Generating unique operation named: listUsingHEAD_1
2019-06-20 14:32:52 -Generating unique operation named: listUsingPOST_1
2019-06-20 14:32:52 -Generating unique operation named: listUsingPUT_1
2019-06-20 14:32:52 -Generating unique operation named: listUsingPATCH_1
2019-06-20 14:32:52 -Generating unique operation named: listUsingDELETE_1
2019-06-20 14:32:52 -Generating unique operation named: listUsingOPTIONS_1
2019-06-20 14:32:52 -Generating unique operation named: listUsingTRACE_1
2019-06-20 14:32:52 -Generating unique operation named: countDDUsingGET_1
2019-06-20 14:32:52 -Generating unique operation named: exportDDUsingGET_1
2019-06-20 14:32:52 -Generating unique operation named: exportElecYYUsingGET_1
2019-06-20 14:32:52 -Generating unique operation named: addUsingGET_15
2019-06-20 14:32:52 -Generating unique operation named: batchRemoveUsingPOST_3
2019-06-20 14:32:52 -Generating unique operation named: editUsingGET_16
2019-06-20 14:32:52 -Generating unique operation named: listUsingGET_18
2019-06-20 14:32:52 -Generating unique operation named: removeUsingPOST_27
2019-06-20 14:32:52 -Generating unique operation named: saveUsingPOST_15
2019-06-20 14:32:52 -Generating unique operation named: treeUsingGET_3
2019-06-20 14:32:52 -Generating unique operation named: treeViewUsingGET_1
2019-06-20 14:32:52 -Generating unique operation named: updateUsingPOST_16
2019-06-20 14:32:52 -Generating unique operation named: addUsingGET_16
2019-06-20 14:32:52 -Generating unique operation named: editUsingGET_17
2019-06-20 14:32:52 -Generating unique operation named: exprotExcelUsingGET_4
2019-06-20 14:32:52 -Generating unique operation named: listUsingGET_19
2019-06-20 14:32:52 -Generating unique operation named: removeUsingPOST_28
2019-06-20 14:32:53 -Generating unique operation named: removeUsingPOST_29
2019-06-20 14:32:53 -Generating unique operation named: saveUsingPOST_16
2019-06-20 14:32:53 -Generating unique operation named: updateUsingGET_10
2019-06-20 14:32:53 -Generating unique operation named: updateUsingHEAD_10
2019-06-20 14:32:53 -Generating unique operation named: updateUsingPOST_17
2019-06-20 14:32:53 -Generating unique operation named: updateUsingPUT_10
2019-06-20 14:32:53 -Generating unique operation named: updateUsingPATCH_10
2019-06-20 14:32:53 -Generating unique operation named: updateUsingDELETE_10
2019-06-20 14:32:53 -Generating unique operation named: updateUsingOPTIONS_10
2019-06-20 14:32:53 -Generating unique operation named: updateUsingTRACE_10
2019-06-20 14:32:53 -Generating unique operation named: exprotExcelUsingGET_5
2019-06-20 14:32:53 -Generating unique operation named: addUsingGET_17
2019-06-20 14:32:53 -Generating unique operation named: editUsingGET_18
2019-06-20 14:32:53 -Generating unique operation named: listUsingGET_20
2019-06-20 14:32:53 -Generating unique operation named: removeUsingPOST_30
2019-06-20 14:32:53 -Generating unique operation named: removeUsingPOST_31
2019-06-20 14:32:53 -Generating unique operation named: saveUsingPOST_17
2019-06-20 14:32:53 -Generating unique operation named: updateUsingGET_11
2019-06-20 14:32:53 -Generating unique operation named: updateUsingHEAD_11
2019-06-20 14:32:53 -Generating unique operation named: updateUsingPOST_18
2019-06-20 14:32:53 -Generating unique operation named: updateUsingPUT_11
2019-06-20 14:32:53 -Generating unique operation named: updateUsingPATCH_11
2019-06-20 14:32:53 -Generating unique operation named: updateUsingDELETE_11
2019-06-20 14:32:53 -Generating unique operation named: updateUsingOPTIONS_11
2019-06-20 14:32:53 -Generating unique operation named: updateUsingTRACE_11
2019-06-20 14:32:53 -Generating unique operation named: addUsingGET_18
2019-06-20 14:32:53 -Generating unique operation named: editUsingGET_19
2019-06-20 14:32:53 -Generating unique operation named: listUsingGET_21
2019-06-20 14:32:53 -Generating unique operation named: removeUsingPOST_32
2019-06-20 14:32:53 -Generating unique operation named: removeUsingPOST_33
2019-06-20 14:32:53 -Generating unique operation named: saveUsingPOST_18
2019-06-20 14:32:53 -Generating unique operation named: updateUsingGET_12
2019-06-20 14:32:53 -Generating unique operation named: updateUsingHEAD_12
2019-06-20 14:32:53 -Generating unique operation named: updateUsingPOST_19
2019-06-20 14:32:53 -Generating unique operation named: updateUsingPUT_12
2019-06-20 14:32:53 -Generating unique operation named: updateUsingPATCH_12
2019-06-20 14:32:53 -Generating unique operation named: updateUsingDELETE_12
2019-06-20 14:32:53 -Generating unique operation named: updateUsingOPTIONS_12
2019-06-20 14:32:53 -Generating unique operation named: updateUsingTRACE_12
2019-06-20 14:32:53 -Starting Quartz Scheduler now
2019-06-20 14:32:53 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-06-20 14:32:53 -Starting...
2019-06-20 14:32:53 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-06-20 14:32:53 -Started.
2019-06-20 14:32:53 -Starting ProtocolHandler ["http-nio-8081"]
2019-06-20 14:32:53 -Using a shared selector for servlet write/read
2019-06-20 14:32:54 -Tomcat started on port(s): 8081 (http) with context path ''
2019-06-20 14:32:54 -Started BootdoApplication in 65.494 seconds (JVM running for 72.723)
2019-06-20 14:32:54 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-06-20 14:32:54 -==> Parameters: 
2019-06-20 14:32:55 -<==      Total: 1
2019-06-20 14:32:59 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-06-20 14:32:59 -FrameworkServlet 'dispatcherServlet': initialization started
2019-06-20 14:32:59 -FrameworkServlet 'dispatcherServlet': initialization completed in 139 ms
2019-06-20 14:32:59 -Enabling session validation scheduler...
2019-06-20 14:33:00 -请求地址 : http://localhost:8081/login;JSESSIONID=6402661d-6126-4bb8-92b3-7720ff281b0b
2019-06-20 14:33:00 -HTTP METHOD : GET
2019-06-20 14:33:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-06-20 14:33:00 -参数 : [{}]
2019-06-20 14:33:00 -耗时 : 76
2019-06-20 14:33:00 -返回值 : login
2019-06-20 14:33:04 -请求地址 : http://localhost:8081/getVerify
2019-06-20 14:33:04 -HTTP METHOD : GET
2019-06-20 14:33:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-06-20 14:33:04 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@59efa976, org.apache.shiro.web.servlet.ShiroHttpServletResponse@b32ddaa]
2019-06-20 14:33:15 -5350
2019-06-20 14:33:15 -耗时 : 10837
2019-06-20 14:33:15 -返回值 : null
2019-06-20 14:33:20 -请求地址 : http://localhost:8081/login
2019-06-20 14:33:20 -HTTP METHOD : POST
2019-06-20 14:33:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-06-20 14:33:20 -参数 : [admin, 111111, 5350, org.apache.shiro.web.servlet.ShiroHttpServletRequest@77f1134a]
2019-06-20 14:33:20 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-06-20 14:33:20 -==> Parameters: admin(String)
2019-06-20 14:33:20 -<==      Total: 1
2019-06-20 14:33:20 -耗时 : 383
2019-06-20 14:33:20 -返回值 : {msg=操作成功, code=0}
2019-06-20 14:33:21 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-06-20 14:33:21 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-20 14:33:21 -==> Parameters: 1(Long), admin(String), 登录(String), 383(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-06-20 14:33:21.114(Timestamp)
2019-06-20 14:33:21 -请求地址 : http://localhost:8081/index
2019-06-20 14:33:21 -HTTP METHOD : GET
2019-06-20 14:33:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-20 14:33:21 -参数 : [{}]
2019-06-20 14:33:21 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-20 14:33:21 -<==    Updates: 1
2019-06-20 14:33:21 -==> Parameters: 1(Long)
2019-06-20 14:33:22 -<==      Total: 51
2019-06-20 14:33:22 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-20 14:33:22 -==> Parameters: 138(Long)
2019-06-20 14:33:22 -<==      Total: 1
2019-06-20 14:33:22 -耗时 : 644
2019-06-20 14:33:22 -返回值 : index_v1
2019-06-20 14:33:22 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-20 14:33:22 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 645(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-bullseye","url":"/moneyUpLoad/ElecLogUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"165","parentId":"106","text":"缴费上传"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":tru(String), 127.0.0.1(String), 2019-06-20 14:33:22.389(Timestamp)
2019-06-20 14:33:22 -<==    Updates: 1
2019-06-20 14:33:23 -请求地址 : http://localhost:8081/main
2019-06-20 14:33:23 -HTTP METHOD : GET
2019-06-20 14:33:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-20 14:33:23 -参数 : []
2019-06-20 14:33:23 -耗时 : 0
2019-06-20 14:33:23 -返回值 : main
2019-06-20 14:33:27 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-20 14:33:27 -HTTP METHOD : GET
2019-06-20 14:33:27 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-20 14:33:27 -参数 : []
2019-06-20 14:33:27 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-20 14:33:27 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-20 14:33:28 -请求地址 : http://localhost:8081/main
2019-06-20 14:33:28 -HTTP METHOD : GET
2019-06-20 14:33:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-20 14:33:28 -参数 : []
2019-06-20 14:33:28 -耗时 : 1
2019-06-20 14:33:28 -返回值 : main
2019-06-20 14:33:28 -<==      Total: 0
2019-06-20 14:33:28 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-20 14:33:28 -==> Parameters: 1(Long), 0(String)
2019-06-20 14:33:28 -<==      Total: 1
2019-06-20 14:33:28 -耗时 : 655
2019-06-20 14:33:28 -返回值 : com.bootdo.common.utils.PageUtils@20705c5f
2019-06-20 14:33:32 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-06-20 14:33:32 -==> Parameters: 1(Long)
2019-06-20 14:33:32 -<==      Total: 95
2019-06-20 14:33:32 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-06-20 14:33:32 -HTTP METHOD : GET
2019-06-20 14:33:32 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-06-20 14:33:32 -参数 : []
2019-06-20 14:33:32 -耗时 : 0
2019-06-20 14:33:32 -返回值 : moneyList/moneyList
2019-06-20 14:33:35 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-06-20 14:33:35 -HTTP METHOD : GET
2019-06-20 14:33:35 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-06-20 14:33:35 -参数 : [ModelAndView: materialized View is [null]; model is null]
2019-06-20 14:33:39 -WebSocketSession[1 current WS(0)-HttpStream(1)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 12], outboundChannelpool size = 2, active threads = 0, queued tasks = 0, completed tasks = 2], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 3]
2019-06-20 14:34:43 -耗时 : 68480
2019-06-20 14:34:43 -返回值 : system/dept/deptTree
2019-06-20 14:34:48 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-06-20 14:34:48 -HTTP METHOD : GET
2019-06-20 14:34:48 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-06-20 14:34:48 -参数 : []
2019-06-20 14:34:48 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-06-20 14:34:48 -==> Parameters: 
2019-06-20 14:34:48 -<==      Total: 3
2019-06-20 14:34:48 -耗时 : 86
2019-06-20 14:34:48 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-06-20 14:39:29 -请求地址 : http://localhost:8081/index
2019-06-20 14:39:29 -HTTP METHOD : GET
2019-06-20 14:39:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-20 14:39:29 -参数 : [{}]
2019-06-20 14:39:29 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-20 14:39:29 -==> Parameters: 1(Long)
2019-06-20 14:39:29 -<==      Total: 51
2019-06-20 14:39:29 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-20 14:39:29 -==> Parameters: 138(Long)
2019-06-20 14:39:29 -<==      Total: 1
2019-06-20 14:39:29 -耗时 : 60
2019-06-20 14:39:29 -返回值 : index_v1
2019-06-20 14:39:29 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-20 14:39:29 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 60(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-bullseye","url":"/moneyUpLoad/ElecLogUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"165","parentId":"106","text":"缴费上传"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":tru(String), 127.0.0.1(String), 2019-06-20 14:39:29.291(Timestamp)
2019-06-20 14:39:29 -<==    Updates: 1
2019-06-20 14:39:29 -请求地址 : http://localhost:8081/main
2019-06-20 14:39:29 -HTTP METHOD : GET
2019-06-20 14:39:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-20 14:39:29 -参数 : []
2019-06-20 14:39:29 -耗时 : 1
2019-06-20 14:39:29 -返回值 : main
2019-06-20 14:39:32 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-20 14:39:32 -HTTP METHOD : GET
2019-06-20 14:39:32 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-20 14:39:32 -参数 : []
2019-06-20 14:39:32 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-20 14:39:32 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-20 14:39:32 -<==      Total: 0
2019-06-20 14:39:32 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-20 14:39:32 -==> Parameters: 1(Long), 0(String)
2019-06-20 14:39:32 -<==      Total: 1
2019-06-20 14:39:32 -耗时 : 9
2019-06-20 14:39:32 -返回值 : com.bootdo.common.utils.PageUtils@68c076ef
2019-06-20 14:39:32 -请求地址 : http://localhost:8081/main
2019-06-20 14:39:32 -HTTP METHOD : GET
2019-06-20 14:39:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-20 14:39:32 -参数 : []
2019-06-20 14:39:32 -耗时 : 0
2019-06-20 14:39:32 -返回值 : main
2019-06-20 14:39:38 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-06-20 14:39:38 -HTTP METHOD : GET
2019-06-20 14:39:38 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-06-20 14:39:38 -参数 : []
2019-06-20 14:39:38 -耗时 : 1
2019-06-20 14:39:38 -返回值 : moneyList/moneyList
2019-06-20 14:39:40 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-06-20 14:39:40 -HTTP METHOD : GET
2019-06-20 14:39:40 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-06-20 14:39:40 -参数 : [ModelAndView: materialized View is [null]; model is null]
2019-06-20 14:39:50 -耗时 : 9510
2019-06-20 14:39:50 -返回值 : system/dept/deptTree
2019-06-20 14:39:53 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-06-20 14:39:53 -HTTP METHOD : GET
2019-06-20 14:39:53 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-06-20 14:39:53 -参数 : []
2019-06-20 14:39:53 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-06-20 14:39:53 -==> Parameters: 
2019-06-20 14:39:53 -<==      Total: 3
2019-06-20 14:39:53 -耗时 : 11
2019-06-20 14:39:53 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-06-20 14:40:13 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:20)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:23)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:73)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:424)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:232)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-06-20 14:40:58 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-06-20 14:40:58 -HTTP METHOD : GET
2019-06-20 14:40:58 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-06-20 14:40:58 -参数 : []
2019-06-20 14:40:58 -耗时 : 1
2019-06-20 14:40:58 -返回值 : moneyList/moneyList
2019-06-20 14:41:01 -请求地址 : http://localhost:8081/index
2019-06-20 14:41:01 -HTTP METHOD : GET
2019-06-20 14:41:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-20 14:41:01 -参数 : [{}]
2019-06-20 14:41:01 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-20 14:41:01 -==> Parameters: 1(Long)
2019-06-20 14:41:01 -<==      Total: 51
2019-06-20 14:41:01 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-20 14:41:01 -==> Parameters: 138(Long)
2019-06-20 14:41:01 -<==      Total: 1
2019-06-20 14:41:01 -耗时 : 99
2019-06-20 14:41:01 -返回值 : index_v1
2019-06-20 14:41:01 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-20 14:41:01 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 99(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-bullseye","url":"/moneyUpLoad/ElecLogUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"165","parentId":"106","text":"缴费上传"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":tru(String), 127.0.0.1(String), 2019-06-20 14:41:01.649(Timestamp)
2019-06-20 14:41:01 -<==    Updates: 1
2019-06-20 14:41:01 -请求地址 : http://localhost:8081/main
2019-06-20 14:41:01 -HTTP METHOD : GET
2019-06-20 14:41:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-20 14:41:01 -参数 : []
2019-06-20 14:41:01 -耗时 : 1
2019-06-20 14:41:01 -返回值 : main
2019-06-20 14:41:02 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-20 14:41:02 -HTTP METHOD : GET
2019-06-20 14:41:02 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-20 14:41:02 -参数 : []
2019-06-20 14:41:02 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-20 14:41:02 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-20 14:41:02 -<==      Total: 0
2019-06-20 14:41:02 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-20 14:41:02 -==> Parameters: 1(Long), 0(String)
2019-06-20 14:41:02 -<==      Total: 1
2019-06-20 14:41:02 -耗时 : 44
2019-06-20 14:41:02 -返回值 : com.bootdo.common.utils.PageUtils@78b72188
2019-06-20 14:41:02 -请求地址 : http://localhost:8081/main
2019-06-20 14:41:02 -HTTP METHOD : GET
2019-06-20 14:41:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-20 14:41:02 -参数 : []
2019-06-20 14:41:02 -耗时 : 0
2019-06-20 14:41:02 -返回值 : main
2019-06-20 14:41:05 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-06-20 14:41:05 -HTTP METHOD : GET
2019-06-20 14:41:05 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-06-20 14:41:05 -参数 : []
2019-06-20 14:41:05 -耗时 : 1
2019-06-20 14:41:05 -返回值 : moneyList/moneyList
2019-06-20 14:41:06 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-06-20 14:41:06 -HTTP METHOD : GET
2019-06-20 14:41:06 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-06-20 14:41:06 -参数 : [ModelAndView: materialized View is [null]; model is null]
2019-06-20 14:41:11 -耗时 : 4967
2019-06-20 14:41:11 -返回值 : system/dept/deptTree
2019-06-20 14:41:11 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-06-20 14:41:11 -HTTP METHOD : GET
2019-06-20 14:41:11 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-06-20 14:41:11 -参数 : []
2019-06-20 14:41:11 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-06-20 14:41:11 -==> Parameters: 
2019-06-20 14:41:11 -<==      Total: 3
2019-06-20 14:41:11 -耗时 : 6
2019-06-20 14:41:11 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-06-20 14:45:56 -请求地址 : http://localhost:8081/index
2019-06-20 14:45:56 -HTTP METHOD : GET
2019-06-20 14:45:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-20 14:45:56 -参数 : [{}]
2019-06-20 14:45:56 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-20 14:45:56 -==> Parameters: 1(Long)
2019-06-20 14:45:56 -<==      Total: 51
2019-06-20 14:45:56 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-20 14:45:56 -==> Parameters: 138(Long)
2019-06-20 14:45:56 -<==      Total: 1
2019-06-20 14:45:56 -耗时 : 36
2019-06-20 14:45:56 -返回值 : index_v1
2019-06-20 14:45:56 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-20 14:45:56 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 36(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-bullseye","url":"/moneyUpLoad/ElecLogUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"165","parentId":"106","text":"缴费上传"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":tru(String), 127.0.0.1(String), 2019-06-20 14:45:56.646(Timestamp)
2019-06-20 14:45:56 -<==    Updates: 1
2019-06-20 14:45:56 -请求地址 : http://localhost:8081/main
2019-06-20 14:45:56 -HTTP METHOD : GET
2019-06-20 14:45:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-20 14:45:56 -参数 : []
2019-06-20 14:45:56 -耗时 : 1
2019-06-20 14:45:56 -返回值 : main
2019-06-20 14:45:57 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-20 14:45:57 -HTTP METHOD : GET
2019-06-20 14:45:57 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-20 14:45:57 -参数 : []
2019-06-20 14:45:57 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-20 14:45:57 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-20 14:45:57 -<==      Total: 0
2019-06-20 14:45:57 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-20 14:45:57 -==> Parameters: 1(Long), 0(String)
2019-06-20 14:45:57 -<==      Total: 1
2019-06-20 14:45:57 -耗时 : 13
2019-06-20 14:45:57 -返回值 : com.bootdo.common.utils.PageUtils@6e39c4eb
2019-06-20 14:45:57 -请求地址 : http://localhost:8081/main
2019-06-20 14:45:57 -HTTP METHOD : GET
2019-06-20 14:45:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-20 14:45:57 -参数 : []
2019-06-20 14:45:57 -耗时 : 1
2019-06-20 14:45:57 -返回值 : main
2019-06-20 14:45:59 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-06-20 14:45:59 -==> Parameters: 1(Long)
2019-06-20 14:45:59 -<==      Total: 95
2019-06-20 14:45:59 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-06-20 14:45:59 -HTTP METHOD : GET
2019-06-20 14:45:59 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-06-20 14:45:59 -参数 : []
2019-06-20 14:45:59 -耗时 : 1
2019-06-20 14:45:59 -返回值 : moneyList/moneyList
2019-06-20 14:46:01 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-06-20 14:46:01 -HTTP METHOD : GET
2019-06-20 14:46:01 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-06-20 14:46:01 -参数 : [ModelAndView: materialized View is [null]; model is null]
2019-06-20 14:46:01 -耗时 : 1
2019-06-20 14:46:01 -返回值 : system/dept/deptTree
2019-06-20 14:46:01 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-06-20 14:46:01 -HTTP METHOD : GET
2019-06-20 14:46:01 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-06-20 14:46:01 -参数 : []
2019-06-20 14:46:01 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-06-20 14:46:01 -==> Parameters: 
2019-06-20 14:46:01 -<==      Total: 3
2019-06-20 14:46:01 -耗时 : 5
2019-06-20 14:46:01 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-06-20 14:46:55 -请求地址 : http://localhost:8081/index
2019-06-20 14:46:55 -HTTP METHOD : GET
2019-06-20 14:46:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-20 14:46:55 -参数 : [{}]
2019-06-20 14:46:55 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-20 14:46:55 -==> Parameters: 1(Long)
2019-06-20 14:46:55 -<==      Total: 51
2019-06-20 14:46:55 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-20 14:46:55 -==> Parameters: 138(Long)
2019-06-20 14:46:55 -<==      Total: 1
2019-06-20 14:46:55 -耗时 : 94
2019-06-20 14:46:55 -返回值 : index_v1
2019-06-20 14:46:55 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-20 14:46:55 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 94(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-bullseye","url":"/moneyUpLoad/ElecLogUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"165","parentId":"106","text":"缴费上传"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":tru(String), 127.0.0.1(String), 2019-06-20 14:46:55.452(Timestamp)
2019-06-20 14:46:55 -<==    Updates: 1
2019-06-20 14:46:55 -请求地址 : http://localhost:8081/main
2019-06-20 14:46:55 -HTTP METHOD : GET
2019-06-20 14:46:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-20 14:46:55 -参数 : []
2019-06-20 14:46:55 -耗时 : 0
2019-06-20 14:46:55 -返回值 : main
2019-06-20 14:46:56 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-20 14:46:56 -HTTP METHOD : GET
2019-06-20 14:46:56 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-20 14:46:56 -参数 : []
2019-06-20 14:46:56 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-20 14:46:56 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-20 14:46:56 -<==      Total: 0
2019-06-20 14:46:56 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-20 14:46:56 -==> Parameters: 1(Long), 0(String)
2019-06-20 14:46:56 -<==      Total: 1
2019-06-20 14:46:56 -耗时 : 34
2019-06-20 14:46:56 -返回值 : com.bootdo.common.utils.PageUtils@1c57e685
2019-06-20 14:46:56 -请求地址 : http://localhost:8081/main
2019-06-20 14:46:56 -HTTP METHOD : GET
2019-06-20 14:46:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-20 14:46:56 -参数 : []
2019-06-20 14:46:56 -耗时 : 0
2019-06-20 14:46:56 -返回值 : main
2019-06-20 14:46:58 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-06-20 14:46:58 -HTTP METHOD : GET
2019-06-20 14:46:58 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-06-20 14:46:58 -参数 : []
2019-06-20 14:46:58 -耗时 : 1
2019-06-20 14:46:58 -返回值 : moneyList/moneyList
2019-06-20 14:46:59 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-06-20 14:46:59 -HTTP METHOD : GET
2019-06-20 14:46:59 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-06-20 14:46:59 -参数 : [ModelAndView: materialized View is [null]; model is null]
2019-06-20 14:46:59 -耗时 : 1
2019-06-20 14:46:59 -返回值 : system/dept/deptTree
2019-06-20 14:47:00 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-06-20 14:47:00 -HTTP METHOD : GET
2019-06-20 14:47:00 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-06-20 14:47:00 -参数 : []
2019-06-20 14:47:00 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-06-20 14:47:00 -==> Parameters: 
2019-06-20 14:47:00 -<==      Total: 3
2019-06-20 14:47:00 -耗时 : 5
2019-06-20 14:47:00 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-06-20 14:53:48 -Starting BootdoApplication on PC-201905091110 with PID 8508 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-06-20 14:53:48 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-06-20 14:53:48 -The following profiles are active: dev
2019-06-20 14:53:49 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@66b7550d: startup date [Thu Jun 20 14:53:49 CST 2019]; root of context hierarchy
2019-06-20 14:54:01 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-06-20 14:54:06 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$794ce965] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-20 14:54:07 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$6ba6180c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-20 14:54:10 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-20 14:54:12 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-20 14:54:12 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-20 14:54:12 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-06-20 14:54:12 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-06-20 14:54:12 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-20 14:54:12 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-20 14:54:13 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-20 14:54:13 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-20 14:54:16 -Tomcat initialized with port(s): 8081 (http)
2019-06-20 14:54:16 -Initializing ProtocolHandler ["http-nio-8081"]
2019-06-20 14:54:16 -Starting service [Tomcat]
2019-06-20 14:54:16 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-06-20 14:54:16 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:\Java\JDK\jdk1.8.0_102\jre\bin;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-06-20 14:54:17 -Initializing Spring embedded WebApplicationContext
2019-06-20 14:54:17 -Root WebApplicationContext: initialization completed in 28081 ms
2019-06-20 14:54:19 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-06-20 14:54:19 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-06-20 14:54:19 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-06-20 14:54:19 -Mapping filter: 'requestContextFilter' to: [/*]
2019-06-20 14:54:19 -Filter xssFilter was not registered (disabled)
2019-06-20 14:54:19 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-06-20 14:54:19 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-06-20 14:54:19 -Servlet statViewServlet mapped to [/druid/*]
2019-06-20 14:54:19 -Servlet dispatcherServlet mapped to [/]
2019-06-20 14:54:27 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@66b7550d: startup date [Thu Jun 20 14:53:49 CST 2019]; root of context hierarchy
2019-06-20 14:54:29 -Using default implementation for ThreadExecutor
2019-06-20 14:54:29 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-06-20 14:54:29 -Quartz Scheduler v.2.3.0 created.
2019-06-20 14:54:29 -RAMJobStore initialized.
2019-06-20 14:54:29 -Scheduler meta-data: Quartz Scheduler (v2.3.0) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-06-20 14:54:29 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-06-20 14:54:29 -Quartz scheduler version: 2.3.0
2019-06-20 14:54:29 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@4acc27fd
2019-06-20 14:54:31 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-06-20 14:54:31 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-06-20 14:54:36 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-06-20 14:54:36 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-20 14:54:36 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-20 14:54:36 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-20 14:54:36 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-06-20 14:54:36 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-20 14:54:36 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-06-20 14:54:36 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countOweController.getCountOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-06-20 14:54:36 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-06-20 14:54:36 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-06-20 14:54:36 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-20 14:54:36 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-20 14:54:36 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-20 14:54:36 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-20 14:54:36 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-06-20 14:54:36 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-06-20 14:54:36 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-20 14:54:36 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-20 14:54:36 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-06-20 14:54:36 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-06-20 14:54:36 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-06-20 14:54:36 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-06-20 14:54:36 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-06-20 14:54:36 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-06-20 14:54:36 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-20 14:54:36 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-06-20 14:54:36 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-06-20 14:54:36 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-20 14:54:36 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-06-20 14:54:36 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-06-20 14:54:36 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-20 14:54:36 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-06-20 14:54:36 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-06-20 14:54:36 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Integer> com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-06-20 14:54:36 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-06-20 14:54:36 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-20 14:54:36 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-06-20 14:54:36 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-06-20 14:54:36 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-06-20 14:54:36 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-06-20 14:54:36 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 14:54:36 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-06-20 14:54:36 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-06-20 14:54:36 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-06-20 14:54:36 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-06-20 14:54:36 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 14:54:36 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-06-20 14:54:36 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-06-20 14:54:36 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-06-20 14:54:36 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-06-20 14:54:36 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-06-20 14:54:36 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 14:54:36 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-06-20 14:54:36 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-06-20 14:54:36 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-06-20 14:54:36 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-06-20 14:54:36 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 14:54:36 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 14:54:36 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-06-20 14:54:36 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-06-20 14:54:36 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-06-20 14:54:36 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-06-20 14:54:36 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-06-20 14:54:36 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-06-20 14:54:36 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-06-20 14:54:36 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-06-20 14:54:36 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-06-20 14:54:36 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 14:54:36 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-06-20 14:54:36 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-06-20 14:54:36 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-06-20 14:54:36 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 14:54:36 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-06-20 14:54:36 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-06-20 14:54:36 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-06-20 14:54:36 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 14:54:36 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-06-20 14:54:36 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-06-20 14:54:36 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-06-20 14:54:36 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-20 14:54:36 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-20 14:54:36 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-06-20 14:54:36 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-06-20 14:54:36 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-06-20 14:54:36 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-06-20 14:54:36 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-06-20 14:54:36 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-06-20 14:54:36 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 14:54:36 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-06-20 14:54:36 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-06-20 14:54:36 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-06-20 14:54:36 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-06-20 14:54:36 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-06-20 14:54:36 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-06-20 14:54:36 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-06-20 14:54:36 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-06-20 14:54:36 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-06-20 14:54:36 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 14:54:36 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-06-20 14:54:36 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-06-20 14:54:36 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 14:54:36 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-06-20 14:54:36 -Mapped "{[/elec/elecUpLoad/importElecUser]}" onto public java.lang.String com.bootdo.elec.controller.ElecUpLoadController.importElecUser(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-20 14:54:36 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-06-20 14:54:36 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-06-20 14:54:36 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-06-20 14:54:36 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-06-20 14:54:36 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-06-20 14:54:36 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-06-20 14:54:36 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 14:54:36 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-06-20 14:54:36 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-06-20 14:54:36 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-06-20 14:54:36 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-06-20 14:54:36 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-06-20 14:54:36 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-06-20 14:54:36 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-06-20 14:54:36 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-06-20 14:54:36 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-06-20 14:54:36 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-06-20 14:54:36 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-06-20 14:54:36 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 14:54:36 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-06-20 14:54:36 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-06-20 14:54:36 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 14:54:36 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-06-20 14:54:36 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-06-20 14:54:36 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-06-20 14:54:36 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-20 14:54:36 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-06-20 14:54:36 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-06-20 14:54:36 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-06-20 14:54:36 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-06-20 14:54:36 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 14:54:36 -Mapped "{[/moneyList/moneyWZ/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.add()
2019-06-20 14:54:36 -Mapped "{[/moneyList/moneyWZ/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long)
2019-06-20 14:54:36 -Mapped "{[/moneyList/moneyWZ/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long[])
2019-06-20 14:54:36 -Mapped "{[/moneyList/moneyWZ/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.update(com.bootdo.elec.domain.ElecDO)
2019-06-20 14:54:37 -Mapped "{[/moneyList/moneyWZ/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyList.controller.MoneyListWZController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-06-20 14:54:37 -Mapped "{[/moneyList/moneyWZ/exprotWZ],methods=[GET]}" onto public void com.bootdo.moneyList.controller.MoneyListWZController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-06-20 14:54:37 -Mapped "{[/moneyList/moneyWZ/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 14:54:37 -Mapped "{[/moneyList/moneyWZ/batchMoney],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.batchMoney(java.lang.Long[])
2019-06-20 14:54:37 -Mapped "{[/moneyList/moneyWZ],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
2019-06-20 14:54:37 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-06-20 14:54:37 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-06-20 14:54:37 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-06-20 14:54:37 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-06-20 14:54:37 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 14:54:37 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-06-20 14:54:37 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 14:54:37 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-06-20 14:54:37 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-20 14:54:37 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-06-20 14:54:37 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-06-20 14:54:37 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-06-20 14:54:37 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-06-20 14:54:37 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 14:54:37 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-06-20 14:54:37 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 14:54:37 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-20 14:54:37 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-06-20 14:54:37 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-06-20 14:54:37 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-06-20 14:54:37 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-06-20 14:54:37 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-06-20 14:54:37 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 14:54:37 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-06-20 14:54:37 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 14:54:37 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-20 14:54:37 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-06-20 14:54:37 -Mapped "{[/moneyUpLoad/ElecLogUpLoad/importElecLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.importElecLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-20 14:54:37 -Mapped "{[/moneyUpLoad/ElecLogUpLoad/exprotElecLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.exprotElecLogExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-20 14:54:37 -Mapped "{[/moneyUpLoad/ElecLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.ElecLogUpLoad()
2019-06-20 14:54:37 -Mapped "{[/moneyUpLoad/HeatLogUpLoad/exprotHeatLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.exprotHeatLogExcel(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-20 14:54:37 -Mapped "{[/moneyUpLoad/HeatLogUpLoad/importHeatLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.importHeatLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-20 14:54:37 -Mapped "{[/moneyUpLoad/HeatLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.HeatLogUpLoad()
2019-06-20 14:54:37 -Mapped "{[/moneyUpLoad/WaterLogUpLoad/exprotWaterLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.exprotWaterLogExcel(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-20 14:54:37 -Mapped "{[/moneyUpLoad/WaterLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.WaterLogLogUpLoad()
2019-06-20 14:54:37 -Mapped "{[/moneyUpLoad/WaterLogUpLoad/importWaterLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.importWaterLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-20 14:54:37 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-06-20 14:54:37 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-06-20 14:54:37 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-06-20 14:54:37 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-06-20 14:54:37 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-06-20 14:54:37 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 14:54:37 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-06-20 14:54:37 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-06-20 14:54:37 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 14:54:37 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-06-20 14:54:37 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 14:54:37 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-06-20 14:54:37 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-06-20 14:54:37 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-06-20 14:54:37 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-06-20 14:54:37 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 14:54:37 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-06-20 14:54:37 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.batchRemove(java.lang.Long[])
2019-06-20 14:54:37 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 14:54:37 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 14:54:37 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-06-20 14:54:37 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-06-20 14:54:37 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-06-20 14:54:37 -Mapped "{[/print/print/batchPrint],methods=[POST]}" onto public java.util.List<com.bootdo.print.vo.PrintVo> com.bootdo.print.controller.PrintController.batchPrint(java.lang.Long[])
2019-06-20 14:54:37 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-06-20 14:54:37 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-06-20 14:54:37 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-06-20 14:54:37 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-06-20 14:54:37 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-06-20 14:54:37 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-06-20 14:54:37 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-06-20 14:54:37 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 14:54:37 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView(org.springframework.web.servlet.ModelAndView)
2019-06-20 14:54:37 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-06-20 14:54:37 -Mapped "{[/system/sysDept/getDeptId],methods=[POST]}" onto public java.lang.String com.bootdo.system.controller.DeptController.getDeptId()
2019-06-20 14:54:37 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-06-20 14:54:37 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-06-20 14:54:37 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-20 14:54:37 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-06-20 14:54:37 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-06-20 14:54:37 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-06-20 14:54:37 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-06-20 14:54:37 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-06-20 14:54:37 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-06-20 14:54:37 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-06-20 14:54:37 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 14:54:37 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-06-20 14:54:37 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-06-20 14:54:37 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-06-20 14:54:37 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-06-20 14:54:37 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-06-20 14:54:37 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-06-20 14:54:37 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-06-20 14:54:37 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-06-20 14:54:37 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-06-20 14:54:37 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-06-20 14:54:37 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-06-20 14:54:37 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-06-20 14:54:37 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 14:54:37 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-06-20 14:54:37 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-06-20 14:54:37 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-06-20 14:54:37 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-06-20 14:54:37 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 14:54:37 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-06-20 14:54:37 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-06-20 14:54:37 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-06-20 14:54:37 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 14:54:37 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-06-20 14:54:37 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-06-20 14:54:37 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-06-20 14:54:37 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-06-20 14:54:37 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-06-20 14:54:37 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-06-20 14:54:37 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-06-20 14:54:37 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-06-20 14:54:37 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-06-20 14:54:37 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-06-20 14:54:37 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-06-20 14:54:37 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-06-20 14:54:37 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-06-20 14:54:37 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-06-20 14:54:37 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-06-20 14:54:37 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-06-20 14:54:37 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-06-20 14:54:37 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 14:54:37 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-06-20 14:54:37 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-06-20 14:54:37 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 14:54:37 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-06-20 14:54:37 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-06-20 14:54:37 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-06-20 14:54:37 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-06-20 14:54:37 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-06-20 14:54:37 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-06-20 14:54:37 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-06-20 14:54:37 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-06-20 14:54:37 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 14:54:37 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-06-20 14:54:37 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-06-20 14:54:37 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 14:54:37 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-20 14:54:37 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-06-20 14:54:37 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-06-20 14:54:37 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-06-20 14:54:37 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-06-20 14:54:37 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-06-20 14:54:37 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-06-20 14:54:37 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-06-20 14:54:38 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-06-20 14:54:38 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-06-20 14:54:38 -Initializing ExecutorService  'brokerChannelExecutor'
2019-06-20 14:54:39 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-20 14:54:40 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@66b7550d: startup date [Thu Jun 20 14:53:49 CST 2019]; root of context hierarchy
2019-06-20 14:54:40 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-20 14:54:40 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-20 14:54:40 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-06-20 14:54:40 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-06-20 14:54:46 -Registering beans for JMX exposure on startup
2019-06-20 14:54:46 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-06-20 14:54:46 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-06-20 14:54:46 -Starting beans in phase 2147483647
2019-06-20 14:54:46 -Context refreshed
2019-06-20 14:54:46 -Found 1 custom documentation plugin(s)
2019-06-20 14:54:46 -Scanning for api listing references
2019-06-20 14:54:48 -Generating unique operation named: removeUsingPOST_1
2019-06-20 14:54:48 -Generating unique operation named: addUsingGET_1
2019-06-20 14:54:48 -Generating unique operation named: editUsingGET_1
2019-06-20 14:54:48 -Generating unique operation named: listUsingGET_1
2019-06-20 14:54:48 -Generating unique operation named: removeUsingPOST_2
2019-06-20 14:54:48 -Generating unique operation named: removeUsingPOST_3
2019-06-20 14:54:48 -Generating unique operation named: saveUsingPOST_1
2019-06-20 14:54:48 -Generating unique operation named: updateUsingGET_1
2019-06-20 14:54:48 -Generating unique operation named: updateUsingHEAD_1
2019-06-20 14:54:48 -Generating unique operation named: updateUsingPOST_1
2019-06-20 14:54:48 -Generating unique operation named: updateUsingPUT_1
2019-06-20 14:54:48 -Generating unique operation named: updateUsingPATCH_1
2019-06-20 14:54:48 -Generating unique operation named: updateUsingDELETE_1
2019-06-20 14:54:48 -Generating unique operation named: updateUsingOPTIONS_1
2019-06-20 14:54:48 -Generating unique operation named: updateUsingTRACE_1
2019-06-20 14:54:48 -Generating unique operation named: addUsingGET_2
2019-06-20 14:54:48 -Generating unique operation named: editUsingGET_2
2019-06-20 14:54:48 -Generating unique operation named: listUsingGET_2
2019-06-20 14:54:48 -Generating unique operation named: removeUsingPOST_4
2019-06-20 14:54:48 -Generating unique operation named: removeUsingPOST_5
2019-06-20 14:54:48 -Generating unique operation named: saveUsingPOST_2
2019-06-20 14:54:48 -Generating unique operation named: updateUsingPOST_2
2019-06-20 14:54:48 -Generating unique operation named: exprotExcelUsingGET_1
2019-06-20 14:54:48 -Generating unique operation named: addUsingGET_3
2019-06-20 14:54:48 -Generating unique operation named: editUsingGET_3
2019-06-20 14:54:48 -Generating unique operation named: listUsingGET_3
2019-06-20 14:54:49 -Generating unique operation named: removeUsingPOST_6
2019-06-20 14:54:49 -Generating unique operation named: removeUsingPOST_7
2019-06-20 14:54:49 -Generating unique operation named: saveUsingPOST_3
2019-06-20 14:54:49 -Generating unique operation named: updateUsingGET_2
2019-06-20 14:54:49 -Generating unique operation named: updateUsingHEAD_2
2019-06-20 14:54:49 -Generating unique operation named: updateUsingPOST_3
2019-06-20 14:54:49 -Generating unique operation named: updateUsingPUT_2
2019-06-20 14:54:49 -Generating unique operation named: updateUsingPATCH_2
2019-06-20 14:54:49 -Generating unique operation named: updateUsingDELETE_2
2019-06-20 14:54:49 -Generating unique operation named: updateUsingOPTIONS_2
2019-06-20 14:54:49 -Generating unique operation named: updateUsingTRACE_2
2019-06-20 14:54:49 -Generating unique operation named: addUsingGET_4
2019-06-20 14:54:49 -Generating unique operation named: editUsingGET_4
2019-06-20 14:54:49 -Generating unique operation named: listUsingGET_4
2019-06-20 14:54:49 -Generating unique operation named: removeUsingPOST_8
2019-06-20 14:54:49 -Generating unique operation named: removeUsingPOST_9
2019-06-20 14:54:49 -Generating unique operation named: saveUsingPOST_4
2019-06-20 14:54:49 -Generating unique operation named: updateUsingGET_3
2019-06-20 14:54:49 -Generating unique operation named: updateUsingHEAD_3
2019-06-20 14:54:49 -Generating unique operation named: updateUsingPOST_4
2019-06-20 14:54:49 -Generating unique operation named: updateUsingPUT_3
2019-06-20 14:54:49 -Generating unique operation named: updateUsingPATCH_3
2019-06-20 14:54:49 -Generating unique operation named: updateUsingDELETE_3
2019-06-20 14:54:49 -Generating unique operation named: updateUsingOPTIONS_3
2019-06-20 14:54:49 -Generating unique operation named: updateUsingTRACE_3
2019-06-20 14:54:49 -Generating unique operation named: ElecUsingGET_1
2019-06-20 14:54:49 -Generating unique operation named: addUsingGET_5
2019-06-20 14:54:49 -Generating unique operation named: editUsingGET_5
2019-06-20 14:54:49 -Generating unique operation named: listUsingGET_5
2019-06-20 14:54:49 -Generating unique operation named: removeUsingPOST_10
2019-06-20 14:54:49 -Generating unique operation named: removeUsingPOST_11
2019-06-20 14:54:49 -Generating unique operation named: saveUsingPOST_5
2019-06-20 14:54:49 -Generating unique operation named: updateUsingGET_4
2019-06-20 14:54:49 -Generating unique operation named: updateUsingHEAD_4
2019-06-20 14:54:49 -Generating unique operation named: updateUsingPOST_5
2019-06-20 14:54:49 -Generating unique operation named: updateUsingPUT_4
2019-06-20 14:54:49 -Generating unique operation named: updateUsingPATCH_4
2019-06-20 14:54:49 -Generating unique operation named: updateUsingDELETE_4
2019-06-20 14:54:49 -Generating unique operation named: updateUsingOPTIONS_4
2019-06-20 14:54:49 -Generating unique operation named: updateUsingTRACE_4
2019-06-20 14:54:50 -Generating unique operation named: editUsingGET_6
2019-06-20 14:54:50 -Generating unique operation named: listUsingGET_6
2019-06-20 14:54:50 -Generating unique operation named: updateUsingPOST_6
2019-06-20 14:54:50 -Generating unique operation named: addUsingGET_6
2019-06-20 14:54:50 -Generating unique operation named: editUsingGET_7
2019-06-20 14:54:50 -Generating unique operation named: exprotExcelUsingGET_2
2019-06-20 14:54:50 -Generating unique operation named: listUsingGET_7
2019-06-20 14:54:50 -Generating unique operation named: removeUsingPOST_12
2019-06-20 14:54:50 -Generating unique operation named: removeUsingPOST_13
2019-06-20 14:54:50 -Generating unique operation named: saveUsingPOST_6
2019-06-20 14:54:50 -Generating unique operation named: updateUsingGET_5
2019-06-20 14:54:50 -Generating unique operation named: updateUsingHEAD_5
2019-06-20 14:54:50 -Generating unique operation named: updateUsingPOST_7
2019-06-20 14:54:50 -Generating unique operation named: updateUsingPUT_5
2019-06-20 14:54:50 -Generating unique operation named: updateUsingPATCH_5
2019-06-20 14:54:50 -Generating unique operation named: updateUsingDELETE_5
2019-06-20 14:54:50 -Generating unique operation named: updateUsingOPTIONS_5
2019-06-20 14:54:50 -Generating unique operation named: updateUsingTRACE_5
2019-06-20 14:54:50 -Generating unique operation named: exprotExcelUsingGET_3
2019-06-20 14:54:50 -Generating unique operation named: addUsingGET_7
2019-06-20 14:54:50 -Generating unique operation named: editUsingGET_8
2019-06-20 14:54:50 -Generating unique operation named: listUsingGET_8
2019-06-20 14:54:50 -Generating unique operation named: removeUsingPOST_14
2019-06-20 14:54:50 -Generating unique operation named: removeUsingPOST_15
2019-06-20 14:54:50 -Generating unique operation named: saveUsingPOST_7
2019-06-20 14:54:50 -Generating unique operation named: updateUsingGET_6
2019-06-20 14:54:50 -Generating unique operation named: updateUsingHEAD_6
2019-06-20 14:54:50 -Generating unique operation named: updateUsingPOST_8
2019-06-20 14:54:50 -Generating unique operation named: updateUsingPUT_6
2019-06-20 14:54:50 -Generating unique operation named: updateUsingPATCH_6
2019-06-20 14:54:50 -Generating unique operation named: updateUsingDELETE_6
2019-06-20 14:54:50 -Generating unique operation named: updateUsingOPTIONS_6
2019-06-20 14:54:50 -Generating unique operation named: updateUsingTRACE_6
2019-06-20 14:54:50 -Generating unique operation named: addUsingGET_8
2019-06-20 14:54:51 -Generating unique operation named: editUsingGET_9
2019-06-20 14:54:51 -Generating unique operation named: listUsingGET_9
2019-06-20 14:54:51 -Generating unique operation named: removeUsingPOST_16
2019-06-20 14:54:51 -Generating unique operation named: removeUsingPOST_17
2019-06-20 14:54:51 -Generating unique operation named: saveUsingPOST_8
2019-06-20 14:54:51 -Generating unique operation named: updateUsingGET_7
2019-06-20 14:54:51 -Generating unique operation named: updateUsingHEAD_7
2019-06-20 14:54:51 -Generating unique operation named: updateUsingPOST_9
2019-06-20 14:54:51 -Generating unique operation named: updateUsingPUT_7
2019-06-20 14:54:51 -Generating unique operation named: updateUsingPATCH_7
2019-06-20 14:54:51 -Generating unique operation named: updateUsingDELETE_7
2019-06-20 14:54:51 -Generating unique operation named: updateUsingOPTIONS_7
2019-06-20 14:54:51 -Generating unique operation named: updateUsingTRACE_7
2019-06-20 14:54:51 -Generating unique operation named: addUsingGET_9
2019-06-20 14:54:51 -Generating unique operation named: editUsingGET_10
2019-06-20 14:54:51 -Generating unique operation named: infoUsingGET_1
2019-06-20 14:54:51 -Generating unique operation named: infoUsingHEAD_1
2019-06-20 14:54:51 -Generating unique operation named: infoUsingPOST_1
2019-06-20 14:54:51 -Generating unique operation named: infoUsingPUT_1
2019-06-20 14:54:51 -Generating unique operation named: infoUsingPATCH_1
2019-06-20 14:54:51 -Generating unique operation named: infoUsingDELETE_1
2019-06-20 14:54:51 -Generating unique operation named: infoUsingOPTIONS_1
2019-06-20 14:54:51 -Generating unique operation named: infoUsingTRACE_1
2019-06-20 14:54:51 -Generating unique operation named: listUsingGET_10
2019-06-20 14:54:51 -Generating unique operation named: removeUsingPOST_18
2019-06-20 14:54:51 -Generating unique operation named: removeUsingPOST_19
2019-06-20 14:54:51 -Generating unique operation named: saveUsingPOST_9
2019-06-20 14:54:51 -Generating unique operation named: updateUsingPOST_10
2019-06-20 14:54:51 -Generating unique operation named: listUsingGET_11
2019-06-20 14:54:51 -Generating unique operation named: removeUsingPOST_20
2019-06-20 14:54:51 -Generating unique operation named: welcomeUsingGET_1
2019-06-20 14:54:52 -Generating unique operation named: addUsingGET_10
2019-06-20 14:54:52 -Generating unique operation named: editUsingGET_11
2019-06-20 14:54:52 -Generating unique operation named: listUsingGET_12
2019-06-20 14:54:52 -Generating unique operation named: removeUsingPOST_21
2019-06-20 14:54:52 -Generating unique operation named: saveUsingPOST_10
2019-06-20 14:54:52 -Generating unique operation named: treeUsingGET_1
2019-06-20 14:54:52 -Generating unique operation named: treeUsingGET_2
2019-06-20 14:54:52 -Generating unique operation named: updateUsingPOST_11
2019-06-20 14:54:52 -Generating unique operation named: addUsingGET_11
2019-06-20 14:54:52 -Generating unique operation named: editUsingGET_12
2019-06-20 14:54:52 -Generating unique operation named: listUsingGET_13
2019-06-20 14:54:52 -Generating unique operation named: removeUsingPOST_22
2019-06-20 14:54:52 -Generating unique operation named: removeUsingPOST_23
2019-06-20 14:54:52 -Generating unique operation named: updateUsingPOST_12
2019-06-20 14:54:52 -Generating unique operation named: addUsingGET_12
2019-06-20 14:54:52 -Generating unique operation named: editUsingGET_13
2019-06-20 14:54:52 -Generating unique operation named: listUsingGET_14
2019-06-20 14:54:52 -Generating unique operation named: removeUsingPOST_24
2019-06-20 14:54:52 -Generating unique operation named: removeUsingPOST_25
2019-06-20 14:54:52 -Generating unique operation named: saveUsingPOST_11
2019-06-20 14:54:52 -Generating unique operation named: updateUsingGET_8
2019-06-20 14:54:52 -Generating unique operation named: updateUsingHEAD_8
2019-06-20 14:54:52 -Generating unique operation named: updateUsingPOST_13
2019-06-20 14:54:52 -Generating unique operation named: updateUsingPUT_8
2019-06-20 14:54:52 -Generating unique operation named: updateUsingPATCH_8
2019-06-20 14:54:52 -Generating unique operation named: updateUsingDELETE_8
2019-06-20 14:54:52 -Generating unique operation named: updateUsingOPTIONS_8
2019-06-20 14:54:52 -Generating unique operation named: updateUsingTRACE_8
2019-06-20 14:54:52 -Generating unique operation named: addUsingGET_13
2019-06-20 14:54:52 -Generating unique operation named: batchRemoveUsingPOST_1
2019-06-20 14:54:52 -Generating unique operation named: editUsingGET_14
2019-06-20 14:54:52 -Generating unique operation named: listUsingGET_15
2019-06-20 14:54:52 -Generating unique operation named: printEditUsingGET_1
2019-06-20 14:54:52 -Generating unique operation named: removeUsingPOST_26
2019-06-20 14:54:53 -Generating unique operation named: saveUsingPOST_12
2019-06-20 14:54:53 -Generating unique operation named: updateUsingGET_9
2019-06-20 14:54:53 -Generating unique operation named: updateUsingHEAD_9
2019-06-20 14:54:53 -Generating unique operation named: updateUsingPOST_14
2019-06-20 14:54:53 -Generating unique operation named: updateUsingPUT_9
2019-06-20 14:54:53 -Generating unique operation named: updateUsingPATCH_9
2019-06-20 14:54:53 -Generating unique operation named: updateUsingDELETE_9
2019-06-20 14:54:53 -Generating unique operation named: updateUsingOPTIONS_9
2019-06-20 14:54:53 -Generating unique operation named: updateUsingTRACE_9
2019-06-20 14:54:53 -Generating unique operation named: addUsingGET_14
2019-06-20 14:54:53 -Generating unique operation named: batchRemoveUsingPOST_2
2019-06-20 14:54:53 -Generating unique operation named: editUsingGET_15
2019-06-20 14:54:53 -Generating unique operation named: listUsingGET_16
2019-06-20 14:54:53 -Generating unique operation named: saveUsingPOST_13
2019-06-20 14:54:53 -Generating unique operation named: saveUsingPOST_14
2019-06-20 14:54:53 -Generating unique operation named: updateUsingPOST_15
2019-06-20 14:54:53 -Generating unique operation named: listUsingGET_17
2019-06-20 14:54:53 -Generating unique operation named: listUsingHEAD_1
2019-06-20 14:54:53 -Generating unique operation named: listUsingPOST_1
2019-06-20 14:54:53 -Generating unique operation named: listUsingPUT_1
2019-06-20 14:54:53 -Generating unique operation named: listUsingPATCH_1
2019-06-20 14:54:53 -Generating unique operation named: listUsingDELETE_1
2019-06-20 14:54:53 -Generating unique operation named: listUsingOPTIONS_1
2019-06-20 14:54:53 -Generating unique operation named: listUsingTRACE_1
2019-06-20 14:54:53 -Generating unique operation named: countDDUsingGET_1
2019-06-20 14:54:53 -Generating unique operation named: exportDDUsingGET_1
2019-06-20 14:54:53 -Generating unique operation named: exportElecYYUsingGET_1
2019-06-20 14:54:53 -Generating unique operation named: addUsingGET_15
2019-06-20 14:54:53 -Generating unique operation named: batchRemoveUsingPOST_3
2019-06-20 14:54:53 -Generating unique operation named: editUsingGET_16
2019-06-20 14:54:53 -Generating unique operation named: listUsingGET_18
2019-06-20 14:54:53 -Generating unique operation named: removeUsingPOST_27
2019-06-20 14:54:53 -Generating unique operation named: saveUsingPOST_15
2019-06-20 14:54:53 -Generating unique operation named: treeUsingGET_3
2019-06-20 14:54:53 -Generating unique operation named: treeViewUsingGET_1
2019-06-20 14:54:53 -Generating unique operation named: updateUsingPOST_16
2019-06-20 14:54:54 -Generating unique operation named: addUsingGET_16
2019-06-20 14:54:54 -Generating unique operation named: editUsingGET_17
2019-06-20 14:54:54 -Generating unique operation named: exprotExcelUsingGET_4
2019-06-20 14:54:54 -Generating unique operation named: listUsingGET_19
2019-06-20 14:54:54 -Generating unique operation named: removeUsingPOST_28
2019-06-20 14:54:54 -Generating unique operation named: removeUsingPOST_29
2019-06-20 14:54:54 -Generating unique operation named: saveUsingPOST_16
2019-06-20 14:54:54 -Generating unique operation named: updateUsingGET_10
2019-06-20 14:54:54 -Generating unique operation named: updateUsingHEAD_10
2019-06-20 14:54:54 -Generating unique operation named: updateUsingPOST_17
2019-06-20 14:54:54 -Generating unique operation named: updateUsingPUT_10
2019-06-20 14:54:54 -Generating unique operation named: updateUsingPATCH_10
2019-06-20 14:54:54 -Generating unique operation named: updateUsingDELETE_10
2019-06-20 14:54:54 -Generating unique operation named: updateUsingOPTIONS_10
2019-06-20 14:54:54 -Generating unique operation named: updateUsingTRACE_10
2019-06-20 14:54:54 -Generating unique operation named: exprotExcelUsingGET_5
2019-06-20 14:54:54 -Generating unique operation named: addUsingGET_17
2019-06-20 14:54:54 -Generating unique operation named: editUsingGET_18
2019-06-20 14:54:54 -Generating unique operation named: listUsingGET_20
2019-06-20 14:54:54 -Generating unique operation named: removeUsingPOST_30
2019-06-20 14:54:54 -Generating unique operation named: removeUsingPOST_31
2019-06-20 14:54:54 -Generating unique operation named: saveUsingPOST_17
2019-06-20 14:54:54 -Generating unique operation named: updateUsingGET_11
2019-06-20 14:54:54 -Generating unique operation named: updateUsingHEAD_11
2019-06-20 14:54:54 -Generating unique operation named: updateUsingPOST_18
2019-06-20 14:54:54 -Generating unique operation named: updateUsingPUT_11
2019-06-20 14:54:54 -Generating unique operation named: updateUsingPATCH_11
2019-06-20 14:54:54 -Generating unique operation named: updateUsingDELETE_11
2019-06-20 14:54:54 -Generating unique operation named: updateUsingOPTIONS_11
2019-06-20 14:54:54 -Generating unique operation named: updateUsingTRACE_11
2019-06-20 14:54:54 -Generating unique operation named: addUsingGET_18
2019-06-20 14:54:54 -Generating unique operation named: editUsingGET_19
2019-06-20 14:54:54 -Generating unique operation named: listUsingGET_21
2019-06-20 14:54:54 -Generating unique operation named: removeUsingPOST_32
2019-06-20 14:54:54 -Generating unique operation named: removeUsingPOST_33
2019-06-20 14:54:54 -Generating unique operation named: saveUsingPOST_18
2019-06-20 14:54:54 -Generating unique operation named: updateUsingGET_12
2019-06-20 14:54:54 -Generating unique operation named: updateUsingHEAD_12
2019-06-20 14:54:54 -Generating unique operation named: updateUsingPOST_19
2019-06-20 14:54:54 -Generating unique operation named: updateUsingPUT_12
2019-06-20 14:54:54 -Generating unique operation named: updateUsingPATCH_12
2019-06-20 14:54:54 -Generating unique operation named: updateUsingDELETE_12
2019-06-20 14:54:54 -Generating unique operation named: updateUsingOPTIONS_12
2019-06-20 14:54:54 -Generating unique operation named: updateUsingTRACE_12
2019-06-20 14:54:54 -Starting Quartz Scheduler now
2019-06-20 14:54:54 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-06-20 14:54:54 -Starting...
2019-06-20 14:54:54 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-06-20 14:54:54 -Started.
2019-06-20 14:54:54 -Starting ProtocolHandler ["http-nio-8081"]
2019-06-20 14:54:54 -Using a shared selector for servlet write/read
2019-06-20 14:54:54 -Tomcat started on port(s): 8081 (http) with context path ''
2019-06-20 14:54:54 -Started BootdoApplication in 71.582 seconds (JVM running for 73.592)
2019-06-20 14:54:55 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-06-20 14:54:55 -==> Parameters: 
2019-06-20 14:54:55 -<==      Total: 1
2019-06-20 14:55:06 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-06-20 14:55:06 -FrameworkServlet 'dispatcherServlet': initialization started
2019-06-20 14:55:06 -FrameworkServlet 'dispatcherServlet': initialization completed in 221 ms
2019-06-20 14:55:07 -Enabling session validation scheduler...
2019-06-20 14:55:07 -请求地址 : http://localhost:8081/login;JSESSIONID=ae611b71-e104-4197-8948-8fb238ed7f57
2019-06-20 14:55:07 -HTTP METHOD : GET
2019-06-20 14:55:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-06-20 14:55:07 -参数 : [{}]
2019-06-20 14:55:07 -耗时 : 9
2019-06-20 14:55:07 -返回值 : login
2019-06-20 14:55:09 -请求地址 : http://localhost:8081/getVerify
2019-06-20 14:55:09 -HTTP METHOD : GET
2019-06-20 14:55:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-06-20 14:55:09 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@470f3bf7, org.apache.shiro.web.servlet.ShiroHttpServletResponse@49c8cd66]
2019-06-20 14:55:29 -6204
2019-06-20 14:55:29 -耗时 : 20151
2019-06-20 14:55:29 -返回值 : null
2019-06-20 14:55:36 -请求地址 : http://localhost:8081/login
2019-06-20 14:55:36 -HTTP METHOD : POST
2019-06-20 14:55:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-06-20 14:55:36 -参数 : [admin, 111111, 6204, org.apache.shiro.web.servlet.ShiroHttpServletRequest@491af682]
2019-06-20 14:55:36 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-06-20 14:55:36 -==> Parameters: admin(String)
2019-06-20 14:55:37 -<==      Total: 1
2019-06-20 14:55:37 -耗时 : 1246
2019-06-20 14:55:37 -返回值 : {msg=操作成功, code=0}
2019-06-20 14:55:37 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-06-20 14:55:37 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-20 14:55:37 -==> Parameters: 1(Long), admin(String), 登录(String), 1247(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-06-20 14:55:37.613(Timestamp)
2019-06-20 14:55:38 -<==    Updates: 1
2019-06-20 14:55:38 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-06-20 14:55:38 -请求地址 : http://localhost:8081/index
2019-06-20 14:55:38 -HTTP METHOD : GET
2019-06-20 14:55:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-20 14:55:38 -参数 : [{}]
2019-06-20 14:55:38 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-20 14:55:38 -==> Parameters: 1(Long)
2019-06-20 14:55:39 -<==      Total: 51
2019-06-20 14:55:39 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-20 14:55:39 -==> Parameters: 138(Long)
2019-06-20 14:55:39 -<==      Total: 1
2019-06-20 14:55:39 -耗时 : 561
2019-06-20 14:55:39 -返回值 : index_v1
2019-06-20 14:55:39 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-20 14:55:39 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 561(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-bullseye","url":"/moneyUpLoad/ElecLogUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"165","parentId":"106","text":"缴费上传"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":tru(String), 127.0.0.1(String), 2019-06-20 14:55:39.333(Timestamp)
2019-06-20 14:55:39 -<==    Updates: 1
2019-06-20 14:55:40 -请求地址 : http://localhost:8081/main
2019-06-20 14:55:40 -HTTP METHOD : GET
2019-06-20 14:55:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-20 14:55:40 -参数 : []
2019-06-20 14:55:40 -耗时 : 1
2019-06-20 14:55:40 -返回值 : main
2019-06-20 14:55:40 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-20 14:55:40 -HTTP METHOD : GET
2019-06-20 14:55:40 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-20 14:55:40 -参数 : []
2019-06-20 14:55:40 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-20 14:55:40 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-20 14:55:40 -请求地址 : http://localhost:8081/main
2019-06-20 14:55:40 -HTTP METHOD : GET
2019-06-20 14:55:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-20 14:55:40 -参数 : []
2019-06-20 14:55:40 -耗时 : 68
2019-06-20 14:55:40 -返回值 : main
2019-06-20 14:55:40 -<==      Total: 0
2019-06-20 14:55:40 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-20 14:55:40 -==> Parameters: 1(Long), 0(String)
2019-06-20 14:55:40 -<==      Total: 1
2019-06-20 14:55:40 -耗时 : 765
2019-06-20 14:55:40 -返回值 : com.bootdo.common.utils.PageUtils@77f61325
2019-06-20 14:55:43 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-06-20 14:55:43 -==> Parameters: 1(Long)
2019-06-20 14:55:43 -<==      Total: 95
2019-06-20 14:55:43 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-06-20 14:55:43 -HTTP METHOD : GET
2019-06-20 14:55:43 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-06-20 14:55:43 -参数 : []
2019-06-20 14:55:43 -耗时 : 1
2019-06-20 14:55:43 -返回值 : moneyList/moneyList
2019-06-20 14:55:46 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-06-20 14:55:46 -HTTP METHOD : GET
2019-06-20 14:55:46 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-06-20 14:55:46 -参数 : [ModelAndView: materialized View is [null]; model is null]
2019-06-20 14:55:46 -耗时 : 1
2019-06-20 14:55:46 -返回值 : system/dept/deptTree
2019-06-20 14:55:46 -请求地址 : http://localhost:8081/system/sysDept/getDeptId
2019-06-20 14:55:46 -HTTP METHOD : POST
2019-06-20 14:55:46 -CLASS_METHOD : com.bootdo.system.controller.DeptController.getDeptId
2019-06-20 14:55:46 -参数 : []
2019-06-20 14:55:46 -耗时 : 23
2019-06-20 14:55:46 -返回值 : 1
2019-06-20 14:55:53 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-06-20 14:55:53 -HTTP METHOD : GET
2019-06-20 14:55:53 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-06-20 14:55:53 -参数 : []
2019-06-20 14:55:53 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-06-20 14:55:53 -==> Parameters: 
2019-06-20 14:55:53 -<==      Total: 3
2019-06-20 14:55:53 -耗时 : 50
2019-06-20 14:55:53 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-06-20 15:10:09 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-06-20 15:10:09 -HTTP METHOD : GET
2019-06-20 15:10:09 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-06-20 15:10:09 -参数 : [ModelAndView: materialized View is [null]; model is null]
2019-06-20 15:10:09 -耗时 : 4
2019-06-20 15:10:09 -返回值 : system/dept/deptTree
2019-06-20 15:10:11 -请求地址 : http://localhost:8081/system/sysDept/getDeptId
2019-06-20 15:10:11 -HTTP METHOD : POST
2019-06-20 15:10:11 -CLASS_METHOD : com.bootdo.system.controller.DeptController.getDeptId
2019-06-20 15:10:11 -参数 : []
2019-06-20 15:10:11 -耗时 : 0
2019-06-20 15:10:11 -返回值 : 1
2019-06-20 15:10:11 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-06-20 15:10:11 -HTTP METHOD : GET
2019-06-20 15:10:11 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-06-20 15:10:11 -参数 : []
2019-06-20 15:10:11 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-06-20 15:10:11 -==> Parameters: 
2019-06-20 15:10:11 -<==      Total: 3
2019-06-20 15:10:11 -耗时 : 30
2019-06-20 15:10:11 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-06-20 15:18:38 -Starting BootdoApplication on PC-201905091110 with PID 3160 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-06-20 15:18:38 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-06-20 15:18:38 -The following profiles are active: dev
2019-06-20 15:18:39 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@435871cb: startup date [Thu Jun 20 15:18:39 CST 2019]; root of context hierarchy
2019-06-20 15:18:53 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-06-20 15:18:59 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$19bba939] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-20 15:18:59 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$c14d7e0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-20 15:19:01 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-20 15:19:02 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-20 15:19:02 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-20 15:19:02 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-06-20 15:19:02 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-06-20 15:19:02 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-20 15:19:02 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-20 15:19:02 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-20 15:19:03 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-20 15:19:05 -Tomcat initialized with port(s): 8081 (http)
2019-06-20 15:19:05 -Initializing ProtocolHandler ["http-nio-8081"]
2019-06-20 15:19:05 -Starting service [Tomcat]
2019-06-20 15:19:05 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-06-20 15:19:05 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:\Java\JDK\jdk1.8.0_102\jre\bin;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-06-20 15:19:05 -Initializing Spring embedded WebApplicationContext
2019-06-20 15:19:05 -Root WebApplicationContext: initialization completed in 26324 ms
2019-06-20 15:19:07 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-06-20 15:19:07 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-06-20 15:19:07 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-06-20 15:19:07 -Mapping filter: 'requestContextFilter' to: [/*]
2019-06-20 15:19:07 -Filter xssFilter was not registered (disabled)
2019-06-20 15:19:07 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-06-20 15:19:07 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-06-20 15:19:07 -Servlet statViewServlet mapped to [/druid/*]
2019-06-20 15:19:07 -Servlet dispatcherServlet mapped to [/]
2019-06-20 15:19:23 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@435871cb: startup date [Thu Jun 20 15:18:39 CST 2019]; root of context hierarchy
2019-06-20 15:19:26 -Using default implementation for ThreadExecutor
2019-06-20 15:19:26 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-06-20 15:19:26 -Quartz Scheduler v.2.3.0 created.
2019-06-20 15:19:26 -RAMJobStore initialized.
2019-06-20 15:19:26 -Scheduler meta-data: Quartz Scheduler (v2.3.0) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-06-20 15:19:26 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-06-20 15:19:26 -Quartz scheduler version: 2.3.0
2019-06-20 15:19:26 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@6bfbab1c
2019-06-20 15:19:29 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-06-20 15:19:30 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-06-20 15:19:40 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-20 15:19:40 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-06-20 15:19:40 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-20 15:19:40 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-06-20 15:19:40 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-20 15:19:40 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-20 15:19:40 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countOweController.getCountOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-06-20 15:19:40 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-06-20 15:19:40 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-06-20 15:19:40 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-20 15:19:40 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-06-20 15:19:40 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-20 15:19:40 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-20 15:19:40 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-06-20 15:19:40 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-20 15:19:40 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-06-20 15:19:40 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-20 15:19:40 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-20 15:19:40 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-06-20 15:19:40 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-06-20 15:19:40 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-06-20 15:19:40 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-06-20 15:19:40 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-06-20 15:19:40 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-06-20 15:19:40 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-20 15:19:40 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-06-20 15:19:40 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-06-20 15:19:40 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-20 15:19:40 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-06-20 15:19:40 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-06-20 15:19:40 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-20 15:19:40 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-06-20 15:19:40 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-06-20 15:19:40 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Integer> com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-06-20 15:19:40 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-06-20 15:19:40 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-20 15:19:40 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-06-20 15:19:40 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-06-20 15:19:40 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-06-20 15:19:40 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-06-20 15:19:40 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 15:19:40 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-06-20 15:19:40 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-06-20 15:19:40 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-06-20 15:19:40 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 15:19:40 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-06-20 15:19:40 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-06-20 15:19:40 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-06-20 15:19:40 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-06-20 15:19:40 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-06-20 15:19:40 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-06-20 15:19:40 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 15:19:40 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-06-20 15:19:40 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-06-20 15:19:40 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-06-20 15:19:40 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 15:19:40 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-06-20 15:19:40 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 15:19:40 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-06-20 15:19:40 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-06-20 15:19:40 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-06-20 15:19:40 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-06-20 15:19:40 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-06-20 15:19:40 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-06-20 15:19:40 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-06-20 15:19:40 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-06-20 15:19:40 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-06-20 15:19:40 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 15:19:40 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-06-20 15:19:40 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-06-20 15:19:40 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 15:19:40 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-06-20 15:19:40 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-06-20 15:19:40 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-06-20 15:19:40 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-06-20 15:19:40 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 15:19:40 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-06-20 15:19:40 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-06-20 15:19:40 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-06-20 15:19:40 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-20 15:19:40 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-20 15:19:40 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-06-20 15:19:40 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-06-20 15:19:40 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-06-20 15:19:40 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-06-20 15:19:40 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-06-20 15:19:40 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-06-20 15:19:40 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 15:19:40 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-06-20 15:19:40 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-06-20 15:19:40 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-06-20 15:19:40 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-06-20 15:19:40 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-06-20 15:19:40 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-06-20 15:19:40 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-06-20 15:19:40 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-06-20 15:19:40 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-06-20 15:19:40 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 15:19:40 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-06-20 15:19:40 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 15:19:40 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-06-20 15:19:40 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-06-20 15:19:40 -Mapped "{[/elec/elecUpLoad/importElecUser]}" onto public java.lang.String com.bootdo.elec.controller.ElecUpLoadController.importElecUser(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-20 15:19:40 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-06-20 15:19:40 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-06-20 15:19:40 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-06-20 15:19:40 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-06-20 15:19:40 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-06-20 15:19:40 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-06-20 15:19:40 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 15:19:40 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-06-20 15:19:40 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-06-20 15:19:40 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-06-20 15:19:40 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-06-20 15:19:40 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-06-20 15:19:40 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-06-20 15:19:40 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-06-20 15:19:40 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-06-20 15:19:40 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-06-20 15:19:40 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-06-20 15:19:40 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-06-20 15:19:40 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 15:19:40 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-06-20 15:19:40 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-06-20 15:19:40 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 15:19:40 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-06-20 15:19:40 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-20 15:19:40 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-06-20 15:19:40 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-06-20 15:19:40 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-06-20 15:19:40 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-06-20 15:19:40 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 15:19:40 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-06-20 15:19:40 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-06-20 15:19:40 -Mapped "{[/moneyList/moneyWZ/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.add()
2019-06-20 15:19:40 -Mapped "{[/moneyList/moneyWZ/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long)
2019-06-20 15:19:40 -Mapped "{[/moneyList/moneyWZ/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long[])
2019-06-20 15:19:40 -Mapped "{[/moneyList/moneyWZ/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.update(com.bootdo.elec.domain.ElecDO)
2019-06-20 15:19:40 -Mapped "{[/moneyList/moneyWZ/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyList.controller.MoneyListWZController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-06-20 15:19:40 -Mapped "{[/moneyList/moneyWZ],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
2019-06-20 15:19:40 -Mapped "{[/moneyList/moneyWZ/batchMoney],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.batchMoney(java.lang.Long[])
2019-06-20 15:19:40 -Mapped "{[/moneyList/moneyWZ/exprotWZ],methods=[GET]}" onto public void com.bootdo.moneyList.controller.MoneyListWZController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-06-20 15:19:40 -Mapped "{[/moneyList/moneyWZ/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 15:19:40 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-06-20 15:19:40 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-06-20 15:19:40 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-06-20 15:19:40 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-06-20 15:19:40 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 15:19:40 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-06-20 15:19:40 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-06-20 15:19:40 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-20 15:19:40 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 15:19:40 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-06-20 15:19:40 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-06-20 15:19:40 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-06-20 15:19:40 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-06-20 15:19:40 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 15:19:40 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-06-20 15:19:40 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-06-20 15:19:40 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-20 15:19:40 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 15:19:40 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-06-20 15:19:40 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-06-20 15:19:40 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-06-20 15:19:40 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-06-20 15:19:40 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 15:19:40 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-06-20 15:19:40 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-06-20 15:19:40 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-20 15:19:40 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 15:19:40 -Mapped "{[/moneyUpLoad/ElecLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.ElecLogUpLoad()
2019-06-20 15:19:40 -Mapped "{[/moneyUpLoad/ElecLogUpLoad/importElecLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.importElecLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-20 15:19:40 -Mapped "{[/moneyUpLoad/ElecLogUpLoad/exprotElecLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.exprotElecLogExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-20 15:19:40 -Mapped "{[/moneyUpLoad/HeatLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.HeatLogUpLoad()
2019-06-20 15:19:40 -Mapped "{[/moneyUpLoad/HeatLogUpLoad/importHeatLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.importHeatLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-20 15:19:40 -Mapped "{[/moneyUpLoad/HeatLogUpLoad/exprotHeatLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.exprotHeatLogExcel(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-20 15:19:40 -Mapped "{[/moneyUpLoad/WaterLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.WaterLogLogUpLoad()
2019-06-20 15:19:40 -Mapped "{[/moneyUpLoad/WaterLogUpLoad/importWaterLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.importWaterLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-20 15:19:40 -Mapped "{[/moneyUpLoad/WaterLogUpLoad/exprotWaterLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.exprotWaterLogExcel(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-20 15:19:40 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-06-20 15:19:40 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-06-20 15:19:40 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-06-20 15:19:40 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-06-20 15:19:40 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-06-20 15:19:40 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 15:19:40 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-06-20 15:19:40 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-06-20 15:19:40 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-06-20 15:19:40 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 15:19:40 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-06-20 15:19:40 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 15:19:40 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-06-20 15:19:40 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-06-20 15:19:40 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-06-20 15:19:40 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 15:19:41 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-06-20 15:19:41 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.batchRemove(java.lang.Long[])
2019-06-20 15:19:41 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 15:19:41 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-06-20 15:19:41 -Mapped "{[/print/print/batchPrint],methods=[POST]}" onto public java.util.List<com.bootdo.print.vo.PrintVo> com.bootdo.print.controller.PrintController.batchPrint(java.lang.Long[])
2019-06-20 15:19:41 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-06-20 15:19:41 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-06-20 15:19:41 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 15:19:41 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-06-20 15:19:41 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-06-20 15:19:41 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-06-20 15:19:41 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-06-20 15:19:41 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-06-20 15:19:41 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-06-20 15:19:41 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-06-20 15:19:41 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-06-20 15:19:41 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView(org.springframework.web.servlet.ModelAndView)
2019-06-20 15:19:41 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 15:19:41 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-06-20 15:19:41 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-06-20 15:19:41 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-06-20 15:19:41 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-06-20 15:19:41 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-06-20 15:19:41 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-20 15:19:41 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-06-20 15:19:41 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-06-20 15:19:41 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-06-20 15:19:41 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-06-20 15:19:41 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 15:19:41 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-06-20 15:19:41 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-06-20 15:19:41 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-06-20 15:19:41 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-06-20 15:19:41 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-06-20 15:19:41 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-06-20 15:19:41 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-06-20 15:19:41 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-06-20 15:19:41 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-06-20 15:19:41 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-06-20 15:19:41 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-06-20 15:19:41 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 15:19:41 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-06-20 15:19:41 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-06-20 15:19:41 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-06-20 15:19:41 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-06-20 15:19:41 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-06-20 15:19:41 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 15:19:41 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-06-20 15:19:41 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-06-20 15:19:41 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-06-20 15:19:41 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 15:19:41 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-06-20 15:19:41 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-06-20 15:19:41 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-06-20 15:19:41 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-06-20 15:19:41 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-06-20 15:19:41 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-06-20 15:19:41 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-06-20 15:19:41 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-06-20 15:19:41 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-06-20 15:19:41 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-06-20 15:19:41 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-06-20 15:19:41 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-06-20 15:19:41 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-06-20 15:19:41 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-06-20 15:19:41 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-06-20 15:19:41 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-06-20 15:19:41 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-06-20 15:19:41 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 15:19:41 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-06-20 15:19:41 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-06-20 15:19:41 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 15:19:41 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-06-20 15:19:41 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-06-20 15:19:41 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-06-20 15:19:41 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-06-20 15:19:41 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-06-20 15:19:41 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-06-20 15:19:41 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-06-20 15:19:41 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-06-20 15:19:41 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 15:19:41 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-06-20 15:19:41 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-06-20 15:19:41 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 15:19:41 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-06-20 15:19:41 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-06-20 15:19:41 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-20 15:19:41 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-06-20 15:19:41 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-06-20 15:19:41 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-06-20 15:19:41 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-06-20 15:19:41 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-06-20 15:19:43 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-06-20 15:19:43 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-06-20 15:19:43 -Initializing ExecutorService  'brokerChannelExecutor'
2019-06-20 15:19:45 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-20 15:19:46 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@435871cb: startup date [Thu Jun 20 15:18:39 CST 2019]; root of context hierarchy
2019-06-20 15:19:46 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-20 15:19:46 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-20 15:19:46 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-06-20 15:19:47 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-06-20 15:19:55 -Registering beans for JMX exposure on startup
2019-06-20 15:19:55 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-06-20 15:19:55 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-06-20 15:19:55 -Starting beans in phase 2147483647
2019-06-20 15:19:55 -Context refreshed
2019-06-20 15:19:55 -Found 1 custom documentation plugin(s)
2019-06-20 15:19:55 -Scanning for api listing references
2019-06-20 15:19:57 -Generating unique operation named: removeUsingPOST_1
2019-06-20 15:19:57 -Generating unique operation named: addUsingGET_1
2019-06-20 15:19:58 -Generating unique operation named: editUsingGET_1
2019-06-20 15:19:58 -Generating unique operation named: listUsingGET_1
2019-06-20 15:19:58 -Generating unique operation named: removeUsingPOST_2
2019-06-20 15:19:58 -Generating unique operation named: removeUsingPOST_3
2019-06-20 15:19:58 -Generating unique operation named: saveUsingPOST_1
2019-06-20 15:19:58 -Generating unique operation named: updateUsingGET_1
2019-06-20 15:19:58 -Generating unique operation named: updateUsingHEAD_1
2019-06-20 15:19:58 -Generating unique operation named: updateUsingPOST_1
2019-06-20 15:19:58 -Generating unique operation named: updateUsingPUT_1
2019-06-20 15:19:58 -Generating unique operation named: updateUsingPATCH_1
2019-06-20 15:19:58 -Generating unique operation named: updateUsingDELETE_1
2019-06-20 15:19:58 -Generating unique operation named: updateUsingOPTIONS_1
2019-06-20 15:19:58 -Generating unique operation named: updateUsingTRACE_1
2019-06-20 15:19:58 -Generating unique operation named: addUsingGET_2
2019-06-20 15:19:58 -Generating unique operation named: editUsingGET_2
2019-06-20 15:19:59 -Generating unique operation named: listUsingGET_2
2019-06-20 15:19:59 -Generating unique operation named: removeUsingPOST_4
2019-06-20 15:19:59 -Generating unique operation named: removeUsingPOST_5
2019-06-20 15:19:59 -Generating unique operation named: saveUsingPOST_2
2019-06-20 15:19:59 -Generating unique operation named: updateUsingPOST_2
2019-06-20 15:19:59 -Generating unique operation named: exprotExcelUsingGET_1
2019-06-20 15:19:59 -Generating unique operation named: addUsingGET_3
2019-06-20 15:19:59 -Generating unique operation named: editUsingGET_3
2019-06-20 15:19:59 -Generating unique operation named: listUsingGET_3
2019-06-20 15:19:59 -Generating unique operation named: removeUsingPOST_6
2019-06-20 15:19:59 -Generating unique operation named: removeUsingPOST_7
2019-06-20 15:19:59 -Generating unique operation named: saveUsingPOST_3
2019-06-20 15:19:59 -Generating unique operation named: updateUsingGET_2
2019-06-20 15:19:59 -Generating unique operation named: updateUsingHEAD_2
2019-06-20 15:19:59 -Generating unique operation named: updateUsingPOST_3
2019-06-20 15:19:59 -Generating unique operation named: updateUsingPUT_2
2019-06-20 15:19:59 -Generating unique operation named: updateUsingPATCH_2
2019-06-20 15:19:59 -Generating unique operation named: updateUsingDELETE_2
2019-06-20 15:19:59 -Generating unique operation named: updateUsingOPTIONS_2
2019-06-20 15:19:59 -Generating unique operation named: updateUsingTRACE_2
2019-06-20 15:19:59 -Generating unique operation named: addUsingGET_4
2019-06-20 15:20:00 -Generating unique operation named: editUsingGET_4
2019-06-20 15:20:00 -Generating unique operation named: listUsingGET_4
2019-06-20 15:20:00 -Generating unique operation named: removeUsingPOST_8
2019-06-20 15:20:00 -Generating unique operation named: removeUsingPOST_9
2019-06-20 15:20:00 -Generating unique operation named: saveUsingPOST_4
2019-06-20 15:20:00 -Generating unique operation named: updateUsingGET_3
2019-06-20 15:20:00 -Generating unique operation named: updateUsingHEAD_3
2019-06-20 15:20:00 -Generating unique operation named: updateUsingPOST_4
2019-06-20 15:20:00 -Generating unique operation named: updateUsingPUT_3
2019-06-20 15:20:00 -Generating unique operation named: updateUsingPATCH_3
2019-06-20 15:20:00 -Generating unique operation named: updateUsingDELETE_3
2019-06-20 15:20:00 -Generating unique operation named: updateUsingOPTIONS_3
2019-06-20 15:20:00 -Generating unique operation named: updateUsingTRACE_3
2019-06-20 15:20:00 -Generating unique operation named: ElecUsingGET_1
2019-06-20 15:20:00 -Generating unique operation named: addUsingGET_5
2019-06-20 15:20:00 -Generating unique operation named: editUsingGET_5
2019-06-20 15:20:00 -Generating unique operation named: listUsingGET_5
2019-06-20 15:20:00 -Generating unique operation named: removeUsingPOST_10
2019-06-20 15:20:00 -Generating unique operation named: removeUsingPOST_11
2019-06-20 15:20:00 -Generating unique operation named: saveUsingPOST_5
2019-06-20 15:20:01 -Generating unique operation named: updateUsingGET_4
2019-06-20 15:20:01 -Generating unique operation named: updateUsingHEAD_4
2019-06-20 15:20:01 -Generating unique operation named: updateUsingPOST_5
2019-06-20 15:20:01 -Generating unique operation named: updateUsingPUT_4
2019-06-20 15:20:01 -Generating unique operation named: updateUsingPATCH_4
2019-06-20 15:20:01 -Generating unique operation named: updateUsingDELETE_4
2019-06-20 15:20:01 -Generating unique operation named: updateUsingOPTIONS_4
2019-06-20 15:20:01 -Generating unique operation named: updateUsingTRACE_4
2019-06-20 15:20:01 -Generating unique operation named: editUsingGET_6
2019-06-20 15:20:01 -Generating unique operation named: listUsingGET_6
2019-06-20 15:20:01 -Generating unique operation named: updateUsingPOST_6
2019-06-20 15:20:01 -Generating unique operation named: addUsingGET_6
2019-06-20 15:20:01 -Generating unique operation named: editUsingGET_7
2019-06-20 15:20:01 -Generating unique operation named: exprotExcelUsingGET_2
2019-06-20 15:20:01 -Generating unique operation named: listUsingGET_7
2019-06-20 15:20:01 -Generating unique operation named: removeUsingPOST_12
2019-06-20 15:20:01 -Generating unique operation named: removeUsingPOST_13
2019-06-20 15:20:01 -Generating unique operation named: saveUsingPOST_6
2019-06-20 15:20:01 -Generating unique operation named: updateUsingGET_5
2019-06-20 15:20:01 -Generating unique operation named: updateUsingHEAD_5
2019-06-20 15:20:01 -Generating unique operation named: updateUsingPOST_7
2019-06-20 15:20:01 -Generating unique operation named: updateUsingPUT_5
2019-06-20 15:20:01 -Generating unique operation named: updateUsingPATCH_5
2019-06-20 15:20:01 -Generating unique operation named: updateUsingDELETE_5
2019-06-20 15:20:01 -Generating unique operation named: updateUsingOPTIONS_5
2019-06-20 15:20:02 -Generating unique operation named: updateUsingTRACE_5
2019-06-20 15:20:02 -Generating unique operation named: exprotExcelUsingGET_3
2019-06-20 15:20:02 -Generating unique operation named: addUsingGET_7
2019-06-20 15:20:02 -Generating unique operation named: editUsingGET_8
2019-06-20 15:20:02 -Generating unique operation named: listUsingGET_8
2019-06-20 15:20:02 -Generating unique operation named: removeUsingPOST_14
2019-06-20 15:20:02 -Generating unique operation named: removeUsingPOST_15
2019-06-20 15:20:02 -Generating unique operation named: saveUsingPOST_7
2019-06-20 15:20:02 -Generating unique operation named: updateUsingGET_6
2019-06-20 15:20:02 -Generating unique operation named: updateUsingHEAD_6
2019-06-20 15:20:02 -Generating unique operation named: updateUsingPOST_8
2019-06-20 15:20:02 -Generating unique operation named: updateUsingPUT_6
2019-06-20 15:20:02 -Generating unique operation named: updateUsingPATCH_6
2019-06-20 15:20:02 -Generating unique operation named: updateUsingDELETE_6
2019-06-20 15:20:02 -Generating unique operation named: updateUsingOPTIONS_6
2019-06-20 15:20:02 -Generating unique operation named: updateUsingTRACE_6
2019-06-20 15:20:02 -Generating unique operation named: addUsingGET_8
2019-06-20 15:20:02 -Generating unique operation named: editUsingGET_9
2019-06-20 15:20:02 -Generating unique operation named: listUsingGET_9
2019-06-20 15:20:02 -Generating unique operation named: removeUsingPOST_16
2019-06-20 15:20:02 -Generating unique operation named: removeUsingPOST_17
2019-06-20 15:20:02 -Generating unique operation named: saveUsingPOST_8
2019-06-20 15:20:02 -Generating unique operation named: updateUsingGET_7
2019-06-20 15:20:02 -Generating unique operation named: updateUsingHEAD_7
2019-06-20 15:20:02 -Generating unique operation named: updateUsingPOST_9
2019-06-20 15:20:02 -Generating unique operation named: updateUsingPUT_7
2019-06-20 15:20:02 -Generating unique operation named: updateUsingPATCH_7
2019-06-20 15:20:02 -Generating unique operation named: updateUsingDELETE_7
2019-06-20 15:20:02 -Generating unique operation named: updateUsingOPTIONS_7
2019-06-20 15:20:02 -Generating unique operation named: updateUsingTRACE_7
2019-06-20 15:20:02 -Generating unique operation named: addUsingGET_9
2019-06-20 15:20:02 -Generating unique operation named: editUsingGET_10
2019-06-20 15:20:02 -Generating unique operation named: infoUsingGET_1
2019-06-20 15:20:02 -Generating unique operation named: infoUsingHEAD_1
2019-06-20 15:20:02 -Generating unique operation named: infoUsingPOST_1
2019-06-20 15:20:02 -Generating unique operation named: infoUsingPUT_1
2019-06-20 15:20:02 -Generating unique operation named: infoUsingPATCH_1
2019-06-20 15:20:02 -Generating unique operation named: infoUsingDELETE_1
2019-06-20 15:20:02 -Generating unique operation named: infoUsingOPTIONS_1
2019-06-20 15:20:02 -Generating unique operation named: infoUsingTRACE_1
2019-06-20 15:20:02 -Generating unique operation named: listUsingGET_10
2019-06-20 15:20:02 -Generating unique operation named: removeUsingPOST_18
2019-06-20 15:20:03 -Generating unique operation named: removeUsingPOST_19
2019-06-20 15:20:03 -Generating unique operation named: saveUsingPOST_9
2019-06-20 15:20:03 -Generating unique operation named: updateUsingPOST_10
2019-06-20 15:20:03 -Generating unique operation named: listUsingGET_11
2019-06-20 15:20:03 -Generating unique operation named: removeUsingPOST_20
2019-06-20 15:20:03 -Generating unique operation named: welcomeUsingGET_1
2019-06-20 15:20:03 -Generating unique operation named: addUsingGET_10
2019-06-20 15:20:03 -Generating unique operation named: editUsingGET_11
2019-06-20 15:20:03 -Generating unique operation named: listUsingGET_12
2019-06-20 15:20:03 -Generating unique operation named: removeUsingPOST_21
2019-06-20 15:20:03 -Generating unique operation named: saveUsingPOST_10
2019-06-20 15:20:03 -Generating unique operation named: treeUsingGET_1
2019-06-20 15:20:03 -Generating unique operation named: treeUsingGET_2
2019-06-20 15:20:03 -Generating unique operation named: updateUsingPOST_11
2019-06-20 15:20:03 -Generating unique operation named: addUsingGET_11
2019-06-20 15:20:03 -Generating unique operation named: editUsingGET_12
2019-06-20 15:20:03 -Generating unique operation named: listUsingGET_13
2019-06-20 15:20:03 -Generating unique operation named: removeUsingPOST_22
2019-06-20 15:20:03 -Generating unique operation named: removeUsingPOST_23
2019-06-20 15:20:03 -Generating unique operation named: updateUsingPOST_12
2019-06-20 15:20:03 -Generating unique operation named: addUsingGET_12
2019-06-20 15:20:03 -Generating unique operation named: editUsingGET_13
2019-06-20 15:20:03 -Generating unique operation named: listUsingGET_14
2019-06-20 15:20:03 -Generating unique operation named: removeUsingPOST_24
2019-06-20 15:20:03 -Generating unique operation named: removeUsingPOST_25
2019-06-20 15:20:03 -Generating unique operation named: saveUsingPOST_11
2019-06-20 15:20:03 -Generating unique operation named: updateUsingGET_8
2019-06-20 15:20:03 -Generating unique operation named: updateUsingHEAD_8
2019-06-20 15:20:03 -Generating unique operation named: updateUsingPOST_13
2019-06-20 15:20:03 -Generating unique operation named: updateUsingPUT_8
2019-06-20 15:20:04 -Generating unique operation named: updateUsingPATCH_8
2019-06-20 15:20:04 -Generating unique operation named: updateUsingDELETE_8
2019-06-20 15:20:04 -Generating unique operation named: updateUsingOPTIONS_8
2019-06-20 15:20:04 -Generating unique operation named: updateUsingTRACE_8
2019-06-20 15:20:04 -Generating unique operation named: addUsingGET_13
2019-06-20 15:20:04 -Generating unique operation named: batchRemoveUsingPOST_1
2019-06-20 15:20:04 -Generating unique operation named: editUsingGET_14
2019-06-20 15:20:04 -Generating unique operation named: listUsingGET_15
2019-06-20 15:20:04 -Generating unique operation named: printEditUsingGET_1
2019-06-20 15:20:04 -Generating unique operation named: removeUsingPOST_26
2019-06-20 15:20:04 -Generating unique operation named: saveUsingPOST_12
2019-06-20 15:20:04 -Generating unique operation named: updateUsingGET_9
2019-06-20 15:20:04 -Generating unique operation named: updateUsingHEAD_9
2019-06-20 15:20:04 -Generating unique operation named: updateUsingPOST_14
2019-06-20 15:20:04 -Generating unique operation named: updateUsingPUT_9
2019-06-20 15:20:04 -Generating unique operation named: updateUsingPATCH_9
2019-06-20 15:20:04 -Generating unique operation named: updateUsingDELETE_9
2019-06-20 15:20:04 -Generating unique operation named: updateUsingOPTIONS_9
2019-06-20 15:20:04 -Generating unique operation named: updateUsingTRACE_9
2019-06-20 15:20:04 -Generating unique operation named: addUsingGET_14
2019-06-20 15:20:04 -Generating unique operation named: batchRemoveUsingPOST_2
2019-06-20 15:20:04 -Generating unique operation named: editUsingGET_15
2019-06-20 15:20:04 -Generating unique operation named: listUsingGET_16
2019-06-20 15:20:04 -Generating unique operation named: saveUsingPOST_13
2019-06-20 15:20:04 -Generating unique operation named: saveUsingPOST_14
2019-06-20 15:20:04 -Generating unique operation named: updateUsingPOST_15
2019-06-20 15:20:04 -Generating unique operation named: listUsingGET_17
2019-06-20 15:20:04 -Generating unique operation named: listUsingHEAD_1
2019-06-20 15:20:04 -Generating unique operation named: listUsingPOST_1
2019-06-20 15:20:04 -Generating unique operation named: listUsingPUT_1
2019-06-20 15:20:04 -Generating unique operation named: listUsingPATCH_1
2019-06-20 15:20:04 -Generating unique operation named: listUsingDELETE_1
2019-06-20 15:20:04 -Generating unique operation named: listUsingOPTIONS_1
2019-06-20 15:20:04 -Generating unique operation named: listUsingTRACE_1
2019-06-20 15:20:04 -Generating unique operation named: countDDUsingGET_1
2019-06-20 15:20:04 -Generating unique operation named: exportDDUsingGET_1
2019-06-20 15:20:04 -Generating unique operation named: exportElecYYUsingGET_1
2019-06-20 15:20:05 -Generating unique operation named: addUsingGET_15
2019-06-20 15:20:05 -Generating unique operation named: batchRemoveUsingPOST_3
2019-06-20 15:20:05 -Generating unique operation named: editUsingGET_16
2019-06-20 15:20:05 -Generating unique operation named: listUsingGET_18
2019-06-20 15:20:05 -Generating unique operation named: removeUsingPOST_27
2019-06-20 15:20:05 -Generating unique operation named: saveUsingPOST_15
2019-06-20 15:20:05 -Generating unique operation named: treeUsingGET_3
2019-06-20 15:20:05 -Generating unique operation named: treeViewUsingGET_1
2019-06-20 15:20:05 -Generating unique operation named: updateUsingPOST_16
2019-06-20 15:20:05 -Generating unique operation named: addUsingGET_16
2019-06-20 15:20:05 -Generating unique operation named: editUsingGET_17
2019-06-20 15:20:05 -Generating unique operation named: exprotExcelUsingGET_4
2019-06-20 15:20:05 -Generating unique operation named: listUsingGET_19
2019-06-20 15:20:05 -Generating unique operation named: removeUsingPOST_28
2019-06-20 15:20:05 -Generating unique operation named: removeUsingPOST_29
2019-06-20 15:20:05 -Generating unique operation named: saveUsingPOST_16
2019-06-20 15:20:05 -Generating unique operation named: updateUsingGET_10
2019-06-20 15:20:05 -Generating unique operation named: updateUsingHEAD_10
2019-06-20 15:20:05 -Generating unique operation named: updateUsingPOST_17
2019-06-20 15:20:05 -Generating unique operation named: updateUsingPUT_10
2019-06-20 15:20:05 -Generating unique operation named: updateUsingPATCH_10
2019-06-20 15:20:05 -Generating unique operation named: updateUsingDELETE_10
2019-06-20 15:20:05 -Generating unique operation named: updateUsingOPTIONS_10
2019-06-20 15:20:05 -Generating unique operation named: updateUsingTRACE_10
2019-06-20 15:20:05 -Generating unique operation named: exprotExcelUsingGET_5
2019-06-20 15:20:05 -Generating unique operation named: addUsingGET_17
2019-06-20 15:20:05 -Generating unique operation named: editUsingGET_18
2019-06-20 15:20:05 -Generating unique operation named: listUsingGET_20
2019-06-20 15:20:05 -Generating unique operation named: removeUsingPOST_30
2019-06-20 15:20:05 -Generating unique operation named: removeUsingPOST_31
2019-06-20 15:20:05 -Generating unique operation named: saveUsingPOST_17
2019-06-20 15:20:05 -Generating unique operation named: updateUsingGET_11
2019-06-20 15:20:06 -Generating unique operation named: updateUsingHEAD_11
2019-06-20 15:20:06 -Generating unique operation named: updateUsingPOST_18
2019-06-20 15:20:06 -Generating unique operation named: updateUsingPUT_11
2019-06-20 15:20:06 -Generating unique operation named: updateUsingPATCH_11
2019-06-20 15:20:06 -Generating unique operation named: updateUsingDELETE_11
2019-06-20 15:20:06 -Generating unique operation named: updateUsingOPTIONS_11
2019-06-20 15:20:06 -Generating unique operation named: updateUsingTRACE_11
2019-06-20 15:20:06 -Generating unique operation named: addUsingGET_18
2019-06-20 15:20:06 -Generating unique operation named: editUsingGET_19
2019-06-20 15:20:06 -Generating unique operation named: listUsingGET_21
2019-06-20 15:20:06 -Generating unique operation named: removeUsingPOST_32
2019-06-20 15:20:06 -Generating unique operation named: removeUsingPOST_33
2019-06-20 15:20:06 -Generating unique operation named: saveUsingPOST_18
2019-06-20 15:20:06 -Generating unique operation named: updateUsingGET_12
2019-06-20 15:20:06 -Generating unique operation named: updateUsingHEAD_12
2019-06-20 15:20:06 -Generating unique operation named: updateUsingPOST_19
2019-06-20 15:20:06 -Generating unique operation named: updateUsingPUT_12
2019-06-20 15:20:06 -Generating unique operation named: updateUsingPATCH_12
2019-06-20 15:20:06 -Generating unique operation named: updateUsingDELETE_12
2019-06-20 15:20:06 -Generating unique operation named: updateUsingOPTIONS_12
2019-06-20 15:20:06 -Generating unique operation named: updateUsingTRACE_12
2019-06-20 15:20:06 -Starting Quartz Scheduler now
2019-06-20 15:20:06 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-06-20 15:20:06 -Starting...
2019-06-20 15:20:06 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-06-20 15:20:06 -Started.
2019-06-20 15:20:06 -Starting ProtocolHandler ["http-nio-8081"]
2019-06-20 15:20:06 -Using a shared selector for servlet write/read
2019-06-20 15:20:06 -Tomcat started on port(s): 8081 (http) with context path ''
2019-06-20 15:20:06 -Started BootdoApplication in 92.729 seconds (JVM running for 94.921)
2019-06-20 15:20:07 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-06-20 15:20:07 -==> Parameters: 
2019-06-20 15:20:07 -<==      Total: 1
2019-06-20 15:20:43 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-06-20 15:22:58 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-06-20 15:22:58 -FrameworkServlet 'dispatcherServlet': initialization started
2019-06-20 15:22:58 -FrameworkServlet 'dispatcherServlet': initialization completed in 86 ms
2019-06-20 15:22:58 -Enabling session validation scheduler...
2019-06-20 15:22:59 -请求地址 : http://localhost:8081/
2019-06-20 15:22:59 -HTTP METHOD : GET
2019-06-20 15:22:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2019-06-20 15:22:59 -参数 : [{}]
2019-06-20 15:22:59 -耗时 : 6
2019-06-20 15:22:59 -返回值 : redirect:/index
2019-06-20 15:22:59 -请求地址 : http://localhost:8081/login;JSESSIONID=233205cf-d050-4379-8a7b-04a51ce514cc
2019-06-20 15:22:59 -HTTP METHOD : GET
2019-06-20 15:22:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-06-20 15:22:59 -参数 : [{}]
2019-06-20 15:22:59 -耗时 : 2
2019-06-20 15:22:59 -返回值 : login
2019-06-20 15:23:02 -请求地址 : http://localhost:8081/getVerify
2019-06-20 15:23:02 -HTTP METHOD : GET
2019-06-20 15:23:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-06-20 15:23:02 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@a29b26e, org.apache.shiro.web.servlet.ShiroHttpServletResponse@4ee5d5b]
2019-06-20 15:23:10 -3057
2019-06-20 15:23:10 -耗时 : 7494
2019-06-20 15:23:10 -返回值 : null
2019-06-20 15:23:23 -请求地址 : http://localhost:8081/login
2019-06-20 15:23:23 -HTTP METHOD : POST
2019-06-20 15:23:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-06-20 15:23:23 -参数 : [王楠, 111111, 3057, org.apache.shiro.web.servlet.ShiroHttpServletRequest@132b7141]
2019-06-20 15:23:23 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-06-20 15:23:23 -==> Parameters: 王楠(String)
2019-06-20 15:23:23 -<==      Total: 1
2019-06-20 15:23:23 -耗时 : 586
2019-06-20 15:23:23 -返回值 : {msg=操作成功, code=0}
2019-06-20 15:23:24 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-06-20 15:23:24 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-20 15:23:24 -==> Parameters: 3(Long), 王楠(String), 登录(String), 586(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-06-20 15:23:23.997(Timestamp)
2019-06-20 15:23:24 -请求地址 : http://localhost:8081/index
2019-06-20 15:23:24 -HTTP METHOD : GET
2019-06-20 15:23:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-20 15:23:24 -参数 : [{}]
2019-06-20 15:23:24 -<==    Updates: 1
2019-06-20 15:23:24 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-20 15:23:24 -==> Parameters: 3(Long)
2019-06-20 15:23:24 -<==      Total: 32
2019-06-20 15:23:24 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-20 15:23:24 -==> Parameters: null
2019-06-20 15:23:24 -<==      Total: 0
2019-06-20 15:23:24 -耗时 : 492
2019-06-20 15:23:24 -返回值 : index_v1
2019-06-20 15:23:24 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-20 15:23:24 -==> Parameters: 3(Long), 王楠(String), 请求访问主页(String), 493(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-gear","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-calculator","url":"common/job"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"72","parentId":"77","text":"计算器"},{"at(String), 127.0.0.1(String), 2019-06-20 15:23:24.897(Timestamp)
2019-06-20 15:23:25 -<==    Updates: 1
2019-06-20 15:23:25 -请求地址 : http://localhost:8081/main
2019-06-20 15:23:25 -HTTP METHOD : GET
2019-06-20 15:23:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-20 15:23:25 -参数 : []
2019-06-20 15:23:25 -耗时 : 1
2019-06-20 15:23:25 -返回值 : main
2019-06-20 15:23:26 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-20 15:23:26 -HTTP METHOD : GET
2019-06-20 15:23:26 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-20 15:23:26 -参数 : []
2019-06-20 15:23:26 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-20 15:23:26 -==> Parameters: 0(String), 3(Long), 0(Integer), 3(Integer)
2019-06-20 15:23:26 -请求地址 : http://localhost:8081/main
2019-06-20 15:23:26 -HTTP METHOD : GET
2019-06-20 15:23:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-20 15:23:26 -参数 : []
2019-06-20 15:23:26 -耗时 : 1
2019-06-20 15:23:26 -返回值 : main
2019-06-20 15:23:27 -<==      Total: 0
2019-06-20 15:23:27 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-20 15:23:27 -==> Parameters: 3(Long), 0(String)
2019-06-20 15:23:27 -<==      Total: 1
2019-06-20 15:23:27 -耗时 : 529
2019-06-20 15:23:27 -返回值 : com.bootdo.common.utils.PageUtils@37b87cf2
2019-06-20 15:23:52 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-06-20 15:23:52 -==> Parameters: 3(Long)
2019-06-20 15:23:52 -<==      Total: 54
2019-06-20 15:23:52 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-06-20 15:23:52 -HTTP METHOD : GET
2019-06-20 15:23:52 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-06-20 15:23:52 -参数 : []
2019-06-20 15:23:52 -耗时 : 1
2019-06-20 15:23:52 -返回值 : moneyList/moneyList
2019-06-20 15:23:54 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-06-20 15:23:54 -HTTP METHOD : GET
2019-06-20 15:23:54 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-06-20 15:23:54 -参数 : [ModelAndView: materialized View is [null]; model is null]
2019-06-20 15:23:54 -耗时 : 0
2019-06-20 15:23:54 -返回值 : system/dept/deptTree
2019-06-20 15:23:55 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-06-20 15:23:55 -HTTP METHOD : GET
2019-06-20 15:23:55 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-06-20 15:23:55 -参数 : []
2019-06-20 15:23:55 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-06-20 15:23:55 -==> Parameters: 
2019-06-20 15:23:55 -<==      Total: 3
2019-06-20 15:23:55 -耗时 : 81
2019-06-20 15:23:55 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"disabled":true,"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"disabled":true,"opened":true},"text":"总公司"}
2019-06-20 15:24:02 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-06-20 15:24:02 -HTTP METHOD : GET
2019-06-20 15:24:02 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-06-20 15:24:02 -参数 : [ModelAndView: materialized View is [null]; model is null]
2019-06-20 15:24:02 -耗时 : 1
2019-06-20 15:24:02 -返回值 : system/dept/deptTree
2019-06-20 15:24:03 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-06-20 15:24:03 -HTTP METHOD : GET
2019-06-20 15:24:03 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-06-20 15:24:03 -参数 : []
2019-06-20 15:24:03 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-06-20 15:24:03 -==> Parameters: 
2019-06-20 15:24:03 -<==      Total: 3
2019-06-20 15:24:03 -耗时 : 9
2019-06-20 15:24:03 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"disabled":true,"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"disabled":true,"opened":true},"text":"总公司"}
2019-06-20 15:26:15 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-06-20 15:26:15 -HTTP METHOD : GET
2019-06-20 15:26:15 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-06-20 15:26:15 -参数 : [ModelAndView: materialized View is [null]; model is null]
2019-06-20 15:26:15 -耗时 : 16
2019-06-20 15:26:15 -返回值 : system/dept/deptTree
2019-06-20 15:26:16 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-06-20 15:26:16 -HTTP METHOD : GET
2019-06-20 15:26:16 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-06-20 15:26:16 -参数 : []
2019-06-20 15:26:16 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-06-20 15:26:16 -==> Parameters: 
2019-06-20 15:26:16 -<==      Total: 3
2019-06-20 15:26:16 -耗时 : 9
2019-06-20 15:26:16 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"disabled":true,"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"disabled":true,"opened":true},"text":"总公司"}
2019-06-20 15:27:21 -请求地址 : http://localhost:8081/
2019-06-20 15:27:21 -HTTP METHOD : GET
2019-06-20 15:27:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2019-06-20 15:27:21 -参数 : [{}]
2019-06-20 15:27:21 -耗时 : 1
2019-06-20 15:27:21 -返回值 : redirect:/index
2019-06-20 15:27:21 -请求地址 : http://localhost:8081/login;JSESSIONID=074d0cbd-1771-428e-8671-1aa968d9c253
2019-06-20 15:27:21 -HTTP METHOD : GET
2019-06-20 15:27:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-06-20 15:27:21 -参数 : [{}]
2019-06-20 15:27:21 -耗时 : 1
2019-06-20 15:27:21 -返回值 : login
2019-06-20 15:27:21 -请求地址 : http://localhost:8081/getVerify
2019-06-20 15:27:21 -HTTP METHOD : GET
2019-06-20 15:27:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-06-20 15:27:21 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@4110e829, org.apache.shiro.web.servlet.ShiroHttpServletResponse@1f499241]
2019-06-20 15:27:21 -4284
2019-06-20 15:27:21 -耗时 : 30
2019-06-20 15:27:21 -返回值 : null
2019-06-20 15:27:30 -请求地址 : http://localhost:8081/login
2019-06-20 15:27:30 -HTTP METHOD : POST
2019-06-20 15:27:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-06-20 15:27:30 -参数 : [admin, 111111, 4284, org.apache.shiro.web.servlet.ShiroHttpServletRequest@27344942]
2019-06-20 15:27:30 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-06-20 15:27:30 -==> Parameters: admin(String)
2019-06-20 15:27:30 -<==      Total: 1
2019-06-20 15:27:30 -耗时 : 20
2019-06-20 15:27:30 -返回值 : {msg=操作成功, code=0}
2019-06-20 15:27:30 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-20 15:27:30 -==> Parameters: 1(Long), admin(String), 登录(String), 21(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-06-20 15:27:30.171(Timestamp)
2019-06-20 15:27:30 -请求地址 : http://localhost:8081/index
2019-06-20 15:27:30 -HTTP METHOD : GET
2019-06-20 15:27:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-20 15:27:30 -<==    Updates: 1
2019-06-20 15:27:30 -参数 : [{}]
2019-06-20 15:27:30 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-20 15:27:30 -==> Parameters: 1(Long)
2019-06-20 15:27:30 -<==      Total: 51
2019-06-20 15:27:30 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-20 15:27:30 -==> Parameters: 138(Long)
2019-06-20 15:27:30 -<==      Total: 1
2019-06-20 15:27:30 -耗时 : 409
2019-06-20 15:27:30 -返回值 : index_v1
2019-06-20 15:27:30 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-20 15:27:30 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 409(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-bullseye","url":"/moneyUpLoad/ElecLogUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"165","parentId":"106","text":"缴费上传"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":tru(String), 127.0.0.1(String), 2019-06-20 15:27:30.644(Timestamp)
2019-06-20 15:27:30 -<==    Updates: 1
2019-06-20 15:27:31 -请求地址 : http://localhost:8081/main
2019-06-20 15:27:31 -HTTP METHOD : GET
2019-06-20 15:27:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-20 15:27:31 -参数 : []
2019-06-20 15:27:31 -耗时 : 1
2019-06-20 15:27:31 -返回值 : main
2019-06-20 15:27:31 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-20 15:27:31 -HTTP METHOD : GET
2019-06-20 15:27:31 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-20 15:27:31 -参数 : []
2019-06-20 15:27:31 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-20 15:27:31 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-20 15:27:31 -<==      Total: 0
2019-06-20 15:27:31 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-20 15:27:31 -==> Parameters: 1(Long), 0(String)
2019-06-20 15:27:31 -<==      Total: 1
2019-06-20 15:27:31 -耗时 : 20
2019-06-20 15:27:31 -返回值 : com.bootdo.common.utils.PageUtils@2a7fed0
2019-06-20 15:27:31 -请求地址 : http://localhost:8081/main
2019-06-20 15:27:31 -HTTP METHOD : GET
2019-06-20 15:27:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-20 15:27:31 -参数 : []
2019-06-20 15:27:31 -耗时 : 1
2019-06-20 15:27:31 -返回值 : main
2019-06-20 15:27:33 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-06-20 15:27:33 -==> Parameters: 1(Long)
2019-06-20 15:27:33 -<==      Total: 95
2019-06-20 15:27:33 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-06-20 15:27:33 -HTTP METHOD : GET
2019-06-20 15:27:33 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-06-20 15:27:33 -参数 : []
2019-06-20 15:27:33 -耗时 : 1
2019-06-20 15:27:33 -返回值 : moneyList/moneyList
2019-06-20 15:27:38 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-06-20 15:27:38 -HTTP METHOD : GET
2019-06-20 15:27:38 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-06-20 15:27:38 -参数 : [ModelAndView: materialized View is [null]; model is null]
2019-06-20 15:27:38 -耗时 : 0
2019-06-20 15:27:38 -返回值 : system/dept/deptTree
2019-06-20 15:27:39 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-06-20 15:27:39 -HTTP METHOD : GET
2019-06-20 15:27:39 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-06-20 15:27:39 -参数 : []
2019-06-20 15:27:39 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-06-20 15:27:39 -==> Parameters: 
2019-06-20 15:27:39 -<==      Total: 3
2019-06-20 15:27:39 -耗时 : 4
2019-06-20 15:27:39 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-06-20 15:27:40 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-06-20 15:27:40 -HTTP METHOD : GET
2019-06-20 15:27:40 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-06-20 15:27:40 -参数 : [ModelAndView: materialized View is [null]; model is null]
2019-06-20 15:27:40 -耗时 : 0
2019-06-20 15:27:40 -返回值 : system/dept/deptTree
2019-06-20 15:27:41 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-06-20 15:27:41 -HTTP METHOD : GET
2019-06-20 15:27:41 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-06-20 15:27:41 -参数 : []
2019-06-20 15:27:41 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-06-20 15:27:41 -==> Parameters: 
2019-06-20 15:27:41 -<==      Total: 3
2019-06-20 15:27:41 -耗时 : 10
2019-06-20 15:27:41 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-06-20 15:27:43 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-06-20 15:27:43 -HTTP METHOD : GET
2019-06-20 15:27:43 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-06-20 15:27:43 -参数 : [ModelAndView: materialized View is [null]; model is null]
2019-06-20 15:27:43 -耗时 : 1
2019-06-20 15:27:43 -返回值 : system/dept/deptTree
2019-06-20 15:27:43 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-06-20 15:27:43 -HTTP METHOD : GET
2019-06-20 15:27:43 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-06-20 15:27:43 -参数 : []
2019-06-20 15:27:43 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-06-20 15:27:43 -==> Parameters: 
2019-06-20 15:27:43 -<==      Total: 3
2019-06-20 15:27:43 -耗时 : 12
2019-06-20 15:27:43 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-06-20 15:27:47 -请求地址 : http://localhost:8081/
2019-06-20 15:27:47 -HTTP METHOD : GET
2019-06-20 15:27:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2019-06-20 15:27:47 -参数 : [{}]
2019-06-20 15:27:47 -耗时 : 0
2019-06-20 15:27:47 -返回值 : redirect:/index
2019-06-20 15:27:47 -请求地址 : http://localhost:8081/login;JSESSIONID=613cf275-dae4-457f-8031-f53514a240b2
2019-06-20 15:27:47 -HTTP METHOD : GET
2019-06-20 15:27:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-06-20 15:27:47 -参数 : [{}]
2019-06-20 15:27:47 -耗时 : 1
2019-06-20 15:27:47 -返回值 : login
2019-06-20 15:27:48 -请求地址 : http://localhost:8081/getVerify
2019-06-20 15:27:48 -HTTP METHOD : GET
2019-06-20 15:27:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-06-20 15:27:48 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@3a425b26, org.apache.shiro.web.servlet.ShiroHttpServletResponse@4c7fdb56]
2019-06-20 15:27:48 -7898
2019-06-20 15:27:48 -耗时 : 11
2019-06-20 15:27:48 -返回值 : null
2019-06-20 15:27:57 -请求地址 : http://localhost:8081/login
2019-06-20 15:27:57 -HTTP METHOD : POST
2019-06-20 15:27:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-06-20 15:27:57 -参数 : [王楠, 111111, 7898, org.apache.shiro.web.servlet.ShiroHttpServletRequest@173843c9]
2019-06-20 15:27:57 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-06-20 15:27:57 -==> Parameters: 王楠(String)
2019-06-20 15:27:57 -<==      Total: 1
2019-06-20 15:27:58 -耗时 : 24
2019-06-20 15:27:58 -返回值 : {msg=操作成功, code=0}
2019-06-20 15:27:58 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-20 15:27:58 -==> Parameters: 3(Long), 王楠(String), 登录(String), 24(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-06-20 15:27:58.001(Timestamp)
2019-06-20 15:27:58 -请求地址 : http://localhost:8081/index
2019-06-20 15:27:58 -HTTP METHOD : GET
2019-06-20 15:27:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-20 15:27:58 -参数 : [{}]
2019-06-20 15:27:58 -<==    Updates: 1
2019-06-20 15:27:58 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-20 15:27:58 -==> Parameters: 3(Long)
2019-06-20 15:27:58 -<==      Total: 32
2019-06-20 15:27:58 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-20 15:27:58 -==> Parameters: null
2019-06-20 15:27:58 -<==      Total: 0
2019-06-20 15:27:58 -耗时 : 293
2019-06-20 15:27:58 -返回值 : index_v1
2019-06-20 15:27:58 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-20 15:27:58 -==> Parameters: 3(Long), 王楠(String), 请求访问主页(String), 294(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-gear","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-calculator","url":"common/job"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"72","parentId":"77","text":"计算器"},{"at(String), 127.0.0.1(String), 2019-06-20 15:27:58.328(Timestamp)
2019-06-20 15:27:58 -请求地址 : http://localhost:8081/main
2019-06-20 15:27:58 -HTTP METHOD : GET
2019-06-20 15:27:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-20 15:27:58 -参数 : []
2019-06-20 15:27:58 -耗时 : 1
2019-06-20 15:27:58 -返回值 : main
2019-06-20 15:27:58 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-20 15:27:58 -HTTP METHOD : GET
2019-06-20 15:27:58 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-20 15:27:58 -参数 : []
2019-06-20 15:27:58 -请求地址 : http://localhost:8081/main
2019-06-20 15:27:58 -HTTP METHOD : GET
2019-06-20 15:27:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-20 15:27:58 -参数 : []
2019-06-20 15:27:58 -耗时 : 1
2019-06-20 15:27:58 -返回值 : main
2019-06-20 15:27:58 -<==    Updates: 1
2019-06-20 15:27:58 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-20 15:27:58 -==> Parameters: 0(String), 3(Long), 0(Integer), 3(Integer)
2019-06-20 15:27:58 -<==      Total: 0
2019-06-20 15:27:58 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-20 15:27:58 -==> Parameters: 3(Long), 0(String)
2019-06-20 15:27:58 -<==      Total: 1
2019-06-20 15:27:58 -耗时 : 183
2019-06-20 15:27:58 -返回值 : com.bootdo.common.utils.PageUtils@494dfaee
2019-06-20 15:28:00 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-06-20 15:28:00 -==> Parameters: 3(Long)
2019-06-20 15:28:00 -<==      Total: 54
2019-06-20 15:28:00 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-06-20 15:28:00 -HTTP METHOD : GET
2019-06-20 15:28:00 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-06-20 15:28:00 -参数 : []
2019-06-20 15:28:00 -耗时 : 1
2019-06-20 15:28:00 -返回值 : moneyList/moneyList
2019-06-20 15:28:03 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-06-20 15:28:03 -HTTP METHOD : GET
2019-06-20 15:28:03 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-06-20 15:28:03 -参数 : [ModelAndView: materialized View is [null]; model is null]
2019-06-20 15:28:03 -耗时 : 0
2019-06-20 15:28:03 -返回值 : system/dept/deptTree
2019-06-20 15:28:03 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-06-20 15:28:03 -HTTP METHOD : GET
2019-06-20 15:28:03 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-06-20 15:28:03 -参数 : []
2019-06-20 15:28:03 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-06-20 15:28:03 -==> Parameters: 
2019-06-20 15:28:03 -<==      Total: 3
2019-06-20 15:28:03 -耗时 : 14
2019-06-20 15:28:03 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"disabled":true,"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"disabled":true,"opened":true},"text":"总公司"}
2019-06-20 15:28:04 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:20)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:23)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:73)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:424)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:232)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-06-20 15:28:05 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-06-20 15:28:05 -HTTP METHOD : GET
2019-06-20 15:28:05 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-06-20 15:28:05 -参数 : [ModelAndView: materialized View is [null]; model is null]
2019-06-20 15:28:05 -耗时 : 1
2019-06-20 15:28:05 -返回值 : system/dept/deptTree
2019-06-20 15:28:06 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-06-20 15:28:06 -HTTP METHOD : GET
2019-06-20 15:28:06 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-06-20 15:28:06 -参数 : []
2019-06-20 15:28:06 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-06-20 15:28:06 -==> Parameters: 
2019-06-20 15:28:06 -<==      Total: 3
2019-06-20 15:28:06 -耗时 : 8
2019-06-20 15:28:06 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"disabled":true,"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"disabled":true,"opened":true},"text":"总公司"}
2019-06-20 15:28:12 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-06-20 15:28:12 -HTTP METHOD : GET
2019-06-20 15:28:12 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-06-20 15:28:12 -参数 : [ModelAndView: materialized View is [null]; model is null]
2019-06-20 15:28:12 -耗时 : 1
2019-06-20 15:28:12 -返回值 : system/dept/deptTree
2019-06-20 15:28:12 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-06-20 15:28:12 -HTTP METHOD : GET
2019-06-20 15:28:12 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-06-20 15:28:12 -参数 : []
2019-06-20 15:28:12 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-06-20 15:28:12 -==> Parameters: 
2019-06-20 15:28:12 -<==      Total: 3
2019-06-20 15:28:12 -耗时 : 18
2019-06-20 15:28:12 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"disabled":true,"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"disabled":true,"opened":true},"text":"总公司"}
2019-06-20 15:28:14 -请求地址 : http://localhost:8081/
2019-06-20 15:28:14 -HTTP METHOD : GET
2019-06-20 15:28:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2019-06-20 15:28:14 -参数 : [{}]
2019-06-20 15:28:14 -耗时 : 1
2019-06-20 15:28:14 -返回值 : redirect:/index
2019-06-20 15:28:14 -请求地址 : http://localhost:8081/login;JSESSIONID=e0344a9c-56ff-431d-8787-93b98e12a68b
2019-06-20 15:28:14 -HTTP METHOD : GET
2019-06-20 15:28:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-06-20 15:28:14 -参数 : [{}]
2019-06-20 15:28:14 -耗时 : 1
2019-06-20 15:28:14 -返回值 : login
2019-06-20 15:28:15 -请求地址 : http://localhost:8081/getVerify
2019-06-20 15:28:15 -HTTP METHOD : GET
2019-06-20 15:28:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-06-20 15:28:15 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@393f0a5f, org.apache.shiro.web.servlet.ShiroHttpServletResponse@2ecf989]
2019-06-20 15:28:15 -6963
2019-06-20 15:28:15 -耗时 : 16
2019-06-20 15:28:15 -返回值 : null
2019-06-20 15:29:29 -请求地址 : http://localhost:8081/login
2019-06-20 15:29:29 -HTTP METHOD : POST
2019-06-20 15:29:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-06-20 15:29:29 -参数 : [齐中民, 111111, 6963, org.apache.shiro.web.servlet.ShiroHttpServletRequest@4bc414b0]
2019-06-20 15:29:29 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-06-20 15:29:29 -==> Parameters: 齐中民(String)
2019-06-20 15:29:29 -<==      Total: 0
2019-06-20 15:29:29 -Authentication failed for token submission [org.apache.shiro.authc.UsernamePasswordToken - 齐中民, rememberMe=false].  Possible unexpected error? (Typical or expected login exceptions should extend from AuthenticationException).
java.lang.IndexOutOfBoundsException: Index: 0, Size: 0
	at java.util.ArrayList.rangeCheck(ArrayList.java:653)
	at java.util.ArrayList.get(ArrayList.java:429)
	at com.bootdo.system.shiro.UserRealm.doGetAuthenticationInfo(UserRealm.java:50)
	at org.apache.shiro.realm.AuthenticatingRealm.getAuthenticationInfo(AuthenticatingRealm.java:568)
	at org.apache.shiro.authc.pam.ModularRealmAuthenticator.doSingleRealmAuthentication(ModularRealmAuthenticator.java:180)
	at org.apache.shiro.authc.pam.ModularRealmAuthenticator.doAuthenticate(ModularRealmAuthenticator.java:267)
	at org.apache.shiro.authc.AbstractAuthenticator.authenticate(AbstractAuthenticator.java:198)
	at org.apache.shiro.mgt.AuthenticatingSecurityManager.authenticate(AuthenticatingSecurityManager.java:106)
	at org.apache.shiro.mgt.DefaultSecurityManager.login(DefaultSecurityManager.java:270)
	at org.apache.shiro.subject.support.DelegatingSubject.login(DelegatingSubject.java:256)
	at com.bootdo.system.controller.LoginController.ajaxLogin(LoginController.java:102)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:58)
	at sun.reflect.GeneratedMethodAccessor124.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.LogAspect.around(LogAspect.java:41)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:174)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.system.controller.LoginController$$EnhancerBySpringCGLIB$$c007aa66.ajaxLogin(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-06-20 15:29:29 -耗时 : 97
2019-06-20 15:29:29 -返回值 : {msg=用户或密码错误, code=500}
2019-06-20 15:29:29 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-20 15:29:29 -==> Parameters: -1(Long), 获取用户信息为空(String), 登录(String), 97(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-06-20 15:29:29.766(Timestamp)
2019-06-20 15:29:29 -<==    Updates: 1
2019-06-20 15:30:33 -请求地址 : http://localhost:8081/login
2019-06-20 15:30:33 -HTTP METHOD : POST
2019-06-20 15:30:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-06-20 15:30:33 -参数 : [齐忠民, 111111, 6963, org.apache.shiro.web.servlet.ShiroHttpServletRequest@16345fd6]
2019-06-20 15:30:33 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-06-20 15:30:33 -==> Parameters: 齐忠民(String)
2019-06-20 15:30:33 -<==      Total: 1
2019-06-20 15:30:33 -耗时 : 10
2019-06-20 15:30:33 -返回值 : {msg=用户或密码错误, code=500}
2019-06-20 15:30:33 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-20 15:30:33 -==> Parameters: -1(Long), 获取用户信息为空(String), 登录(String), 10(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-06-20 15:30:33.208(Timestamp)
2019-06-20 15:30:33 -<==    Updates: 1
2019-06-20 15:30:40 -请求地址 : http://localhost:8081/login
2019-06-20 15:30:40 -HTTP METHOD : POST
2019-06-20 15:30:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-06-20 15:30:40 -参数 : [齐忠民, 111111, 6963, org.apache.shiro.web.servlet.ShiroHttpServletRequest@719726fc]
2019-06-20 15:30:40 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-06-20 15:30:40 -==> Parameters: 齐忠民(String)
2019-06-20 15:30:40 -<==      Total: 1
2019-06-20 15:30:40 -耗时 : 5
2019-06-20 15:30:40 -返回值 : {msg=用户或密码错误, code=500}
2019-06-20 15:30:40 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-20 15:30:40 -==> Parameters: -1(Long), 获取用户信息为空(String), 登录(String), 5(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-06-20 15:30:40.411(Timestamp)
2019-06-20 15:30:40 -<==    Updates: 1
2019-06-20 15:50:43 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 4 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(3)-CONNECTED(3)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 39], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 7], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 1, completed tasks = 340]
2019-06-20 16:09:09 -请求地址 : http://localhost:8081/login
2019-06-20 16:09:09 -HTTP METHOD : POST
2019-06-20 16:09:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-06-20 16:09:09 -参数 : [admin, 111111, 6963, org.apache.shiro.web.servlet.ShiroHttpServletRequest@5c37fed9]
2019-06-20 16:09:09 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-06-20 16:09:09 -==> Parameters: admin(String)
2019-06-20 16:09:09 -<==      Total: 1
2019-06-20 16:09:09 -耗时 : 10
2019-06-20 16:09:09 -返回值 : {msg=操作成功, code=0}
2019-06-20 16:09:09 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-20 16:09:09 -==> Parameters: 1(Long), admin(String), 登录(String), 11(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-06-20 16:09:09.488(Timestamp)
2019-06-20 16:09:09 -请求地址 : http://localhost:8081/index
2019-06-20 16:09:09 -HTTP METHOD : GET
2019-06-20 16:09:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-20 16:09:09 -参数 : [{}]
2019-06-20 16:09:09 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-20 16:09:09 -==> Parameters: 1(Long)
2019-06-20 16:09:09 -<==      Total: 51
2019-06-20 16:09:09 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-20 16:09:09 -==> Parameters: 138(Long)
2019-06-20 16:09:09 -<==      Total: 1
2019-06-20 16:09:09 -耗时 : 26
2019-06-20 16:09:09 -返回值 : index_v1
2019-06-20 16:09:09 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-20 16:09:09 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 26(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-bullseye","url":"/moneyUpLoad/ElecLogUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"165","parentId":"106","text":"缴费上传"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":tru(String), 127.0.0.1(String), 2019-06-20 16:09:09.54(Timestamp)
2019-06-20 16:09:09 -<==    Updates: 1
2019-06-20 16:09:09 -<==    Updates: 1
2019-06-20 16:09:09 -请求地址 : http://localhost:8081/main
2019-06-20 16:09:09 -HTTP METHOD : GET
2019-06-20 16:09:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-20 16:09:09 -参数 : []
2019-06-20 16:09:09 -耗时 : 0
2019-06-20 16:09:09 -返回值 : main
2019-06-20 16:09:09 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-20 16:09:09 -HTTP METHOD : GET
2019-06-20 16:09:09 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-20 16:09:09 -参数 : []
2019-06-20 16:09:09 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-20 16:09:09 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-20 16:09:09 -请求地址 : http://localhost:8081/main
2019-06-20 16:09:09 -HTTP METHOD : GET
2019-06-20 16:09:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-20 16:09:09 -参数 : []
2019-06-20 16:09:09 -耗时 : 2
2019-06-20 16:09:09 -返回值 : main
2019-06-20 16:09:09 -<==      Total: 0
2019-06-20 16:09:09 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-20 16:09:09 -==> Parameters: 1(Long), 0(String)
2019-06-20 16:09:09 -<==      Total: 1
2019-06-20 16:09:09 -耗时 : 119
2019-06-20 16:09:09 -返回值 : com.bootdo.common.utils.PageUtils@63f862a5
2019-06-20 16:09:11 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-06-20 16:09:11 -==> Parameters: 1(Long)
2019-06-20 16:09:11 -<==      Total: 95
2019-06-20 16:09:11 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-06-20 16:09:11 -HTTP METHOD : GET
2019-06-20 16:09:11 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-06-20 16:09:11 -参数 : []
2019-06-20 16:09:11 -耗时 : 1
2019-06-20 16:09:11 -返回值 : moneyList/moneyList
2019-06-20 16:09:12 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-06-20 16:09:12 -HTTP METHOD : GET
2019-06-20 16:09:12 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-06-20 16:09:12 -参数 : [ModelAndView: materialized View is [null]; model is null]
2019-06-20 16:09:12 -耗时 : 0
2019-06-20 16:09:12 -返回值 : system/dept/deptTree
2019-06-20 16:09:13 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-06-20 16:09:13 -HTTP METHOD : GET
2019-06-20 16:09:13 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-06-20 16:09:13 -参数 : []
2019-06-20 16:09:13 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-06-20 16:09:13 -==> Parameters: 
2019-06-20 16:09:13 -<==      Total: 3
2019-06-20 16:09:13 -耗时 : 6
2019-06-20 16:09:13 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-06-20 16:09:14 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-06-20 16:09:14 -HTTP METHOD : GET
2019-06-20 16:09:14 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-06-20 16:09:14 -参数 : [ModelAndView: materialized View is [null]; model is null]
2019-06-20 16:09:14 -耗时 : 1
2019-06-20 16:09:14 -返回值 : system/dept/deptTree
2019-06-20 16:09:14 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-06-20 16:09:14 -HTTP METHOD : GET
2019-06-20 16:09:14 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-06-20 16:09:14 -参数 : []
2019-06-20 16:09:14 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-06-20 16:09:14 -==> Parameters: 
2019-06-20 16:09:14 -<==      Total: 3
2019-06-20 16:09:14 -耗时 : 3
2019-06-20 16:09:14 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-06-20 16:09:21 -请求地址 : http://localhost:8081/charts/countMM
2019-06-20 16:09:21 -HTTP METHOD : GET
2019-06-20 16:09:21 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-06-20 16:09:21 -参数 : []
2019-06-20 16:09:21 -耗时 : 37
2019-06-20 16:09:21 -返回值 : charts/countMM
2019-06-20 16:09:21 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-20 16:09:21 -HTTP METHOD : GET
2019-06-20 16:09:21 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 16:09:21 -参数 : [userType]
2019-06-20 16:09:21 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 16:09:21 -==> Parameters: userType(String)
2019-06-20 16:09:21 -<==      Total: 4
2019-06-20 16:09:21 -耗时 : 81
2019-06-20 16:09:21 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 16:09:23 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-06-20 16:09:23 -HTTP METHOD : GET
2019-06-20 16:09:23 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-06-20 16:09:23 -参数 : []
2019-06-20 16:09:23 -耗时 : 29
2019-06-20 16:09:23 -返回值 : charts/tableElecMM
2019-06-20 16:09:24 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-20 16:09:24 -HTTP METHOD : GET
2019-06-20 16:09:24 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 16:09:24 -参数 : [userType]
2019-06-20 16:09:24 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 16:09:24 -==> Parameters: userType(String)
2019-06-20 16:09:24 -<==      Total: 4
2019-06-20 16:09:24 -耗时 : 22
2019-06-20 16:09:24 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 16:09:24 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-06-20 16:09:24 -HTTP METHOD : GET
2019-06-20 16:09:24 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 16:09:24 -参数 : [elecType]
2019-06-20 16:09:24 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 16:09:24 -==> Parameters: elecType(String)
2019-06-20 16:09:24 -<==      Total: 11
2019-06-20 16:09:24 -耗时 : 11
2019-06-20 16:09:24 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 16:09:26 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-06-20 16:09:26 -HTTP METHOD : GET
2019-06-20 16:09:26 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-06-20 16:09:26 -参数 : []
2019-06-20 16:09:26 -耗时 : 14
2019-06-20 16:09:26 -返回值 : charts/tableHeatMM
2019-06-20 16:09:26 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-20 16:09:26 -HTTP METHOD : GET
2019-06-20 16:09:26 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 16:09:26 -参数 : [userType]
2019-06-20 16:09:26 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 16:09:26 -==> Parameters: userType(String)
2019-06-20 16:09:26 -<==      Total: 4
2019-06-20 16:09:26 -耗时 : 6
2019-06-20 16:09:26 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 16:09:26 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-06-20 16:09:26 -HTTP METHOD : GET
2019-06-20 16:09:26 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 16:09:26 -参数 : [heatType]
2019-06-20 16:09:26 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 16:09:26 -==> Parameters: heatType(String)
2019-06-20 16:09:26 -<==      Total: 4
2019-06-20 16:09:26 -耗时 : 6
2019-06-20 16:09:26 -返回值 : [DictDO{id=184, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=183, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=182, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=181, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 16:09:33 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-06-20 16:09:33 -HTTP METHOD : GET
2019-06-20 16:09:33 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-06-20 16:09:33 -参数 : [ModelAndView: materialized View is [null]; model is null]
2019-06-20 16:09:33 -耗时 : 0
2019-06-20 16:09:33 -返回值 : system/dept/deptTree
2019-06-20 16:09:33 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-06-20 16:09:33 -HTTP METHOD : GET
2019-06-20 16:09:33 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-06-20 16:09:33 -参数 : []
2019-06-20 16:09:33 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-06-20 16:09:33 -==> Parameters: 
2019-06-20 16:09:33 -<==      Total: 3
2019-06-20 16:09:33 -耗时 : 5
2019-06-20 16:09:33 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-06-20 16:09:35 -请求地址 : http://localhost:8081/charts/tableHeatMM/tableHeatMM
2019-06-20 16:09:35 -HTTP METHOD : POST
2019-06-20 16:09:35 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-06-20 16:09:35 -参数 : [com.bootdo.heat.vo.HeatVo@5db0eacb, com.bootdo.moneyLog.vo.HeatLogVo@5b82ee04]
2019-06-20 16:09:35 -==>  Preparing: select COUNT(*) from heat WHERE `heat_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and heat_type = ? and user_org = ? 
2019-06-20 16:09:35 -==> Parameters: 2019-05(String), 1(String), 2(String)
2019-06-20 16:09:36 -<==      Total: 1
2019-06-20 16:09:36 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and heat_type = ? and user_org = ? 
2019-06-20 16:09:36 -==> Parameters: 2019-05(String), 1(String), 2(String)
2019-06-20 16:09:36 -<==      Total: 1
2019-06-20 16:09:36 -==>  Preparing: select COUNT(*) from heat WHERE heat_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and heat_type = ? and user_org = ? 
2019-06-20 16:09:36 -==> Parameters: 2019-05(String), 1(String), 2(String)
2019-06-20 16:09:36 -<==      Total: 1
2019-06-20 16:09:36 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and heat_type = ? and user_org = ? 
2019-06-20 16:09:36 -==> Parameters: 2019-05(String), 1(String), 2(String)
2019-06-20 16:09:36 -<==      Total: 1
2019-06-20 16:09:36 -==>  Preparing: select ifnull(SUM(heat_area),0) from heat WHERE `create_time` = ? and heat_type = ? and user_org = ? 
2019-06-20 16:09:36 -==> Parameters: 2019-05(String), 1(String), 2(String)
2019-06-20 16:09:36 -<==      Total: 1
2019-06-20 16:09:36 -==>  Preparing: select COUNT(ID) from heat WHERE `create_time` = ? and heat_type = ? and user_org = ? 
2019-06-20 16:09:36 -==> Parameters: 2019-05(String), 1(String), 2(String)
2019-06-20 16:09:36 -<==      Total: 1
2019-06-20 16:09:36 -==>  Preparing: select ifnull(SUM(heat_cost),0) from heat WHERE `create_time` = ? and heat_type = ? and user_org = ? 
2019-06-20 16:09:36 -==> Parameters: 2019-05(String), 1(String), 2(String)
2019-06-20 16:09:36 -<==      Total: 1
2019-06-20 16:09:36 -==>  Preparing: select COUNT(ID) from heat_log WHERE `create_time` = ? and heat_type = ? and user_org = ? 
2019-06-20 16:09:36 -==> Parameters: 2019-05(String), 1(String), 2(String)
2019-06-20 16:09:36 -<==      Total: 1
2019-06-20 16:09:36 -==>  Preparing: select ifnull(SUM(heat_money),0) from heat_log WHERE `create_time` = ? and heat_type = ? and user_org = ? 
2019-06-20 16:09:36 -==> Parameters: 2019-05(String), 1(String), 2(String)
2019-06-20 16:09:36 -<==      Total: 1
2019-06-20 16:09:36 -==>  Preparing: select COUNT(ID) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-06-20 16:09:36 -==> Parameters: 2019-05(String), 1(String), 2(String)
2019-06-20 16:09:36 -<==      Total: 1
2019-06-20 16:09:36 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-06-20 16:09:36 -==> Parameters: 2019-05(String), 1(String), 2(String)
2019-06-20 16:09:36 -<==      Total: 1
2019-06-20 16:09:36 -==>  Preparing: select COUNT(ID) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-06-20 16:09:36 -==> Parameters: 2019-05(String), 1(String), 2(String)
2019-06-20 16:09:36 -<==      Total: 1
2019-06-20 16:09:36 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-06-20 16:09:36 -==> Parameters: 2019-05(String), 1(String), 2(String)
2019-06-20 16:09:36 -<==      Total: 1
2019-06-20 16:09:36 -==>  Preparing: select COUNT(*) from heat WHERE `heat_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and heat_type = ? and user_org = ? 
2019-06-20 16:09:36 -==> Parameters: 2019-05(String), 2(String), 2(String)
2019-06-20 16:09:36 -<==      Total: 1
2019-06-20 16:09:36 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and heat_type = ? and user_org = ? 
2019-06-20 16:09:36 -==> Parameters: 2019-05(String), 2(String), 2(String)
2019-06-20 16:09:36 -<==      Total: 1
2019-06-20 16:09:36 -==>  Preparing: select COUNT(*) from heat WHERE heat_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and heat_type = ? and user_org = ? 
2019-06-20 16:09:36 -==> Parameters: 2019-05(String), 2(String), 2(String)
2019-06-20 16:09:36 -<==      Total: 1
2019-06-20 16:09:36 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and heat_type = ? and user_org = ? 
2019-06-20 16:09:36 -==> Parameters: 2019-05(String), 2(String), 2(String)
2019-06-20 16:09:36 -<==      Total: 1
2019-06-20 16:09:36 -==>  Preparing: select ifnull(SUM(heat_area),0) from heat WHERE `create_time` = ? and heat_type = ? and user_org = ? 
2019-06-20 16:09:36 -==> Parameters: 2019-05(String), 2(String), 2(String)
2019-06-20 16:09:36 -<==      Total: 1
2019-06-20 16:09:36 -==>  Preparing: select COUNT(ID) from heat WHERE `create_time` = ? and heat_type = ? and user_org = ? 
2019-06-20 16:09:36 -==> Parameters: 2019-05(String), 2(String), 2(String)
2019-06-20 16:09:36 -<==      Total: 1
2019-06-20 16:09:36 -==>  Preparing: select ifnull(SUM(heat_cost),0) from heat WHERE `create_time` = ? and heat_type = ? and user_org = ? 
2019-06-20 16:09:36 -==> Parameters: 2019-05(String), 2(String), 2(String)
2019-06-20 16:09:36 -<==      Total: 1
2019-06-20 16:09:36 -==>  Preparing: select COUNT(ID) from heat_log WHERE `create_time` = ? and heat_type = ? and user_org = ? 
2019-06-20 16:09:36 -==> Parameters: 2019-05(String), 2(String), 2(String)
2019-06-20 16:09:36 -<==      Total: 1
2019-06-20 16:09:36 -==>  Preparing: select ifnull(SUM(heat_money),0) from heat_log WHERE `create_time` = ? and heat_type = ? and user_org = ? 
2019-06-20 16:09:36 -==> Parameters: 2019-05(String), 2(String), 2(String)
2019-06-20 16:09:36 -<==      Total: 1
2019-06-20 16:09:36 -==>  Preparing: select COUNT(ID) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-06-20 16:09:36 -==> Parameters: 2019-05(String), 2(String), 2(String)
2019-06-20 16:09:36 -<==      Total: 1
2019-06-20 16:09:36 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-06-20 16:09:36 -==> Parameters: 2019-05(String), 2(String), 2(String)
2019-06-20 16:09:36 -<==      Total: 1
2019-06-20 16:09:36 -==>  Preparing: select COUNT(ID) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-06-20 16:09:36 -==> Parameters: 2019-05(String), 2(String), 2(String)
2019-06-20 16:09:36 -<==      Total: 1
2019-06-20 16:09:36 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-06-20 16:09:36 -==> Parameters: 2019-05(String), 2(String), 2(String)
2019-06-20 16:09:36 -<==      Total: 1
2019-06-20 16:09:36 -==>  Preparing: select COUNT(*) from heat WHERE `heat_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and heat_type = ? and user_org = ? 
2019-06-20 16:09:36 -==> Parameters: 2019-05(String), 3(String), 2(String)
2019-06-20 16:09:36 -<==      Total: 1
2019-06-20 16:09:36 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and heat_type = ? and user_org = ? 
2019-06-20 16:09:36 -==> Parameters: 2019-05(String), 3(String), 2(String)
2019-06-20 16:09:36 -<==      Total: 1
2019-06-20 16:09:36 -==>  Preparing: select COUNT(*) from heat WHERE heat_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and heat_type = ? and user_org = ? 
2019-06-20 16:09:36 -==> Parameters: 2019-05(String), 3(String), 2(String)
2019-06-20 16:09:36 -<==      Total: 1
2019-06-20 16:09:36 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and heat_type = ? and user_org = ? 
2019-06-20 16:09:36 -==> Parameters: 2019-05(String), 3(String), 2(String)
2019-06-20 16:09:36 -<==      Total: 1
2019-06-20 16:09:36 -==>  Preparing: select ifnull(SUM(heat_area),0) from heat WHERE `create_time` = ? and heat_type = ? and user_org = ? 
2019-06-20 16:09:36 -==> Parameters: 2019-05(String), 3(String), 2(String)
2019-06-20 16:09:36 -<==      Total: 1
2019-06-20 16:09:36 -==>  Preparing: select COUNT(ID) from heat WHERE `create_time` = ? and heat_type = ? and user_org = ? 
2019-06-20 16:09:36 -==> Parameters: 2019-05(String), 3(String), 2(String)
2019-06-20 16:09:36 -<==      Total: 1
2019-06-20 16:09:36 -==>  Preparing: select ifnull(SUM(heat_cost),0) from heat WHERE `create_time` = ? and heat_type = ? and user_org = ? 
2019-06-20 16:09:36 -==> Parameters: 2019-05(String), 3(String), 2(String)
2019-06-20 16:09:36 -<==      Total: 1
2019-06-20 16:09:36 -==>  Preparing: select COUNT(ID) from heat_log WHERE `create_time` = ? and heat_type = ? and user_org = ? 
2019-06-20 16:09:36 -==> Parameters: 2019-05(String), 3(String), 2(String)
2019-06-20 16:09:36 -<==      Total: 1
2019-06-20 16:09:36 -==>  Preparing: select ifnull(SUM(heat_money),0) from heat_log WHERE `create_time` = ? and heat_type = ? and user_org = ? 
2019-06-20 16:09:36 -==> Parameters: 2019-05(String), 3(String), 2(String)
2019-06-20 16:09:36 -<==      Total: 1
2019-06-20 16:09:36 -==>  Preparing: select COUNT(ID) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-06-20 16:09:36 -==> Parameters: 2019-05(String), 3(String), 2(String)
2019-06-20 16:09:36 -<==      Total: 1
2019-06-20 16:09:36 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-06-20 16:09:36 -==> Parameters: 2019-05(String), 3(String), 2(String)
2019-06-20 16:09:36 -<==      Total: 1
2019-06-20 16:09:36 -==>  Preparing: select COUNT(ID) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-06-20 16:09:36 -==> Parameters: 2019-05(String), 3(String), 2(String)
2019-06-20 16:09:36 -<==      Total: 1
2019-06-20 16:09:36 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-06-20 16:09:36 -==> Parameters: 2019-05(String), 3(String), 2(String)
2019-06-20 16:09:36 -<==      Total: 1
2019-06-20 16:09:36 -==>  Preparing: select COUNT(*) from heat WHERE `heat_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and heat_type = ? and user_org = ? 
2019-06-20 16:09:36 -==> Parameters: 2019-05(String), 4(String), 2(String)
2019-06-20 16:09:36 -<==      Total: 1
2019-06-20 16:09:36 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and heat_type = ? and user_org = ? 
2019-06-20 16:09:36 -==> Parameters: 2019-05(String), 4(String), 2(String)
2019-06-20 16:09:36 -<==      Total: 1
2019-06-20 16:09:36 -==>  Preparing: select COUNT(*) from heat WHERE heat_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and heat_type = ? and user_org = ? 
2019-06-20 16:09:36 -==> Parameters: 2019-05(String), 4(String), 2(String)
2019-06-20 16:09:36 -<==      Total: 1
2019-06-20 16:09:36 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and heat_type = ? and user_org = ? 
2019-06-20 16:09:36 -==> Parameters: 2019-05(String), 4(String), 2(String)
2019-06-20 16:09:36 -<==      Total: 1
2019-06-20 16:09:36 -==>  Preparing: select ifnull(SUM(heat_area),0) from heat WHERE `create_time` = ? and heat_type = ? and user_org = ? 
2019-06-20 16:09:36 -==> Parameters: 2019-05(String), 4(String), 2(String)
2019-06-20 16:09:36 -<==      Total: 1
2019-06-20 16:09:36 -==>  Preparing: select COUNT(ID) from heat WHERE `create_time` = ? and heat_type = ? and user_org = ? 
2019-06-20 16:09:36 -==> Parameters: 2019-05(String), 4(String), 2(String)
2019-06-20 16:09:36 -<==      Total: 1
2019-06-20 16:09:36 -==>  Preparing: select ifnull(SUM(heat_cost),0) from heat WHERE `create_time` = ? and heat_type = ? and user_org = ? 
2019-06-20 16:09:36 -==> Parameters: 2019-05(String), 4(String), 2(String)
2019-06-20 16:09:36 -<==      Total: 1
2019-06-20 16:09:36 -==>  Preparing: select COUNT(ID) from heat_log WHERE `create_time` = ? and heat_type = ? and user_org = ? 
2019-06-20 16:09:36 -==> Parameters: 2019-05(String), 4(String), 2(String)
2019-06-20 16:09:36 -<==      Total: 1
2019-06-20 16:09:36 -==>  Preparing: select ifnull(SUM(heat_money),0) from heat_log WHERE `create_time` = ? and heat_type = ? and user_org = ? 
2019-06-20 16:09:36 -==> Parameters: 2019-05(String), 4(String), 2(String)
2019-06-20 16:09:36 -<==      Total: 1
2019-06-20 16:09:36 -==>  Preparing: select COUNT(ID) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-06-20 16:09:36 -==> Parameters: 2019-05(String), 4(String), 2(String)
2019-06-20 16:09:36 -<==      Total: 1
2019-06-20 16:09:36 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-06-20 16:09:36 -==> Parameters: 2019-05(String), 4(String), 2(String)
2019-06-20 16:09:36 -<==      Total: 1
2019-06-20 16:09:36 -==>  Preparing: select COUNT(ID) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-06-20 16:09:36 -==> Parameters: 2019-05(String), 4(String), 2(String)
2019-06-20 16:09:36 -<==      Total: 1
2019-06-20 16:09:36 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-06-20 16:09:36 -==> Parameters: 2019-05(String), 4(String), 2(String)
2019-06-20 16:09:36 -<==      Total: 1
2019-06-20 16:09:36 -==>  Preparing: select m_heat,s_heat,gm_heat,gs_heat,heat_org from heat_price 
2019-06-20 16:09:36 -==> Parameters: 
2019-06-20 16:09:36 -<==      Total: 2
2019-06-20 16:09:36 -耗时 : 975
2019-06-20 16:09:36 -返回值 : {STotalyuOld=0.00, SPreHeatSumMMNew=45.80, GSHeatCostMMCount=2, GSPreHeatCountMMNew=2, MHeatLogMMSum=22159.00, GSPreHeatCountMMOld=0, SPreHeatSumMMOld=0.00, STotalyuNew=-7527.77, SHeatLogMMCount=1, type=2, GSHeatLogMMCount=0, TotalPreyuNew=6398.05, GSHeatAreaMM=323.50, GSTotalhuOld=0, TotalCostyu=356921.40, MHeatPrice=3.50, MOweHeatSumMMNew=-143628.02, SHeatPrice=4.80, GMHeatPrice=3.50, GSOweHeatSumMMOld=0.00, SHeatLogMMSum=275.00, GMHeatLogMMSum=0.00, TotalPreyuOld=0.00, GSOweHeatSumMMNew=0.00, TotalOwehuNew=109, MOweHeatSumMMOld=0.00, TotalCosthu=1679, SOweHeatSumMMNew=-7573.57, GMOweHeatCountMMOld=0, STotalhuOld=0, SOweHeatCountMMNew=9, GMPreHeatSumMMNew=0.00, TotalLogyu=22434.00, GMOweHeatCountMMNew=1, SHeatCostMMSum=26982.86, STotalhuNew=102, MTotalyuOld=0.00, GSTotalhuNew=2, GSTotalyuOld=0.00, GSPreHeatSumMMNew=0.20, GMPreHeatSumMMOld=0.00, GSHeatCostMMSum=1552.80, GMPreHeatCountMMNew=4, MPreHeatSumMMNew=6352.05, GMHeatCostMMSum=11135.19, MTotalhuNew=1570, MTotalyuNew=-137275.97, GMHeatLogMMCount=0, GSTotalyuNew=0.20, GSHeatPrice=4.80, GSHeatLogMMSum=0.00, TotalLoghu=19, SOweHeatSumMMOld=0.00, GMHeatAreaMM=3181.48, SOweHeatCountMMOld=0, SPreHeatCountMMOld=0, TotalOweyuOld=0.00, GMOweHeatSumMMNew=-15850.01, GMTotalhuNew=5, SPreHeatCountMMNew=93, GMPreHeatCountMMOld=0, MPreHeatSumMMOld=0.00, MTotalhuOld=0, GMTotalhuOld=0, GSPreHeatSumMMOld=0.00, TotalPrehuNew=1570, GMHeatCostMMCount=5, MHeatLogMMCount=18, SHeatCostMMCount=102, TotalOweyuNew=-167051.60, MHeatAreaMM=90642.39, TotalPrehuOld=0, MHeatCostMMSum=317250.55, SHeatAreaMM=5621.42, MOweHeatCountMMOld=0, GMTotalyuNew=-15850.01, TotalOwehuOld=0, PriceTotal=16.60, AreaTotalMM=99768.79, MOweHeatCountMMNew=99, GMTotalyuOld=0.00, MPreHeatCountMMOld=0, GSOweHeatCountMMOld=0, TotalAllhuNew=1679, TotalAllyuNew=-160653.55, GSOweHeatCountMMNew=0, MHeatCostMMCount=1570, MPreHeatCountMMNew=1471, GMOweHeatSumMMOld=0.00, TotalAllhuOld=0, TotalAllyuOld=0.00}
2019-06-20 16:11:47 -请求地址 : http://localhost:8081/index
2019-06-20 16:11:47 -HTTP METHOD : GET
2019-06-20 16:11:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-20 16:11:47 -参数 : [{}]
2019-06-20 16:11:47 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-20 16:11:47 -==> Parameters: 1(Long)
2019-06-20 16:11:47 -<==      Total: 51
2019-06-20 16:11:47 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-20 16:11:47 -==> Parameters: 138(Long)
2019-06-20 16:11:47 -<==      Total: 1
2019-06-20 16:11:47 -耗时 : 219
2019-06-20 16:11:47 -返回值 : index_v1
2019-06-20 16:11:47 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-20 16:11:47 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 220(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-bullseye","url":"/moneyUpLoad/ElecLogUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"165","parentId":"106","text":"缴费上传"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":tru(String), 127.0.0.1(String), 2019-06-20 16:11:47.745(Timestamp)
2019-06-20 16:11:47 -<==    Updates: 1
2019-06-20 16:11:47 -请求地址 : http://localhost:8081/main
2019-06-20 16:11:47 -HTTP METHOD : GET
2019-06-20 16:11:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-20 16:11:47 -参数 : []
2019-06-20 16:11:47 -耗时 : 0
2019-06-20 16:11:47 -返回值 : main
2019-06-20 16:11:48 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-20 16:11:48 -HTTP METHOD : GET
2019-06-20 16:11:48 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-20 16:11:48 -参数 : []
2019-06-20 16:11:48 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-20 16:11:48 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-20 16:11:48 -<==      Total: 0
2019-06-20 16:11:48 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-20 16:11:48 -==> Parameters: 1(Long), 0(String)
2019-06-20 16:11:48 -<==      Total: 1
2019-06-20 16:11:48 -耗时 : 22
2019-06-20 16:11:48 -返回值 : com.bootdo.common.utils.PageUtils@4d9c47a7
2019-06-20 16:11:48 -请求地址 : http://localhost:8081/main
2019-06-20 16:11:48 -HTTP METHOD : GET
2019-06-20 16:11:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-20 16:11:48 -参数 : []
2019-06-20 16:11:48 -耗时 : 1
2019-06-20 16:11:48 -返回值 : main
2019-06-20 16:11:54 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-06-20 16:11:54 -HTTP METHOD : GET
2019-06-20 16:11:54 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-06-20 16:11:54 -参数 : []
2019-06-20 16:11:54 -耗时 : 0
2019-06-20 16:11:54 -返回值 : charts/tableElecMM
2019-06-20 16:11:54 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-20 16:11:54 -HTTP METHOD : GET
2019-06-20 16:11:54 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 16:11:54 -参数 : [userType]
2019-06-20 16:11:54 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 16:11:54 -==> Parameters: userType(String)
2019-06-20 16:11:54 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-06-20 16:11:54 -HTTP METHOD : GET
2019-06-20 16:11:54 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 16:11:54 -参数 : [elecType]
2019-06-20 16:11:54 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 16:11:54 -==> Parameters: elecType(String)
2019-06-20 16:11:54 -<==      Total: 4
2019-06-20 16:11:54 -耗时 : 6
2019-06-20 16:11:54 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 16:11:54 -<==      Total: 11
2019-06-20 16:11:54 -耗时 : 52
2019-06-20 16:11:54 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 16:11:56 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-06-20 16:11:56 -HTTP METHOD : GET
2019-06-20 16:11:56 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-06-20 16:11:56 -参数 : []
2019-06-20 16:11:56 -耗时 : 0
2019-06-20 16:11:56 -返回值 : charts/tableHeatMM
2019-06-20 16:11:57 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-06-20 16:11:57 -HTTP METHOD : GET
2019-06-20 16:11:57 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 16:11:57 -参数 : [heatType]
2019-06-20 16:11:57 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 16:11:57 -==> Parameters: heatType(String)
2019-06-20 16:11:57 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-20 16:11:57 -HTTP METHOD : GET
2019-06-20 16:11:57 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 16:11:57 -参数 : [userType]
2019-06-20 16:11:57 -<==      Total: 4
2019-06-20 16:11:57 -耗时 : 4
2019-06-20 16:11:57 -返回值 : [DictDO{id=184, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=183, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=182, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=181, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 16:11:57 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 16:11:57 -==> Parameters: userType(String)
2019-06-20 16:11:57 -<==      Total: 4
2019-06-20 16:11:57 -耗时 : 5
2019-06-20 16:11:57 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 16:12:04 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-06-20 16:12:04 -HTTP METHOD : GET
2019-06-20 16:12:04 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-06-20 16:12:04 -参数 : [ModelAndView: materialized View is [null]; model is null]
2019-06-20 16:12:04 -耗时 : 1
2019-06-20 16:12:04 -返回值 : system/dept/deptTree
2019-06-20 16:12:04 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-06-20 16:12:04 -HTTP METHOD : GET
2019-06-20 16:12:04 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-06-20 16:12:04 -参数 : []
2019-06-20 16:12:04 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-06-20 16:12:04 -==> Parameters: 
2019-06-20 16:12:04 -<==      Total: 3
2019-06-20 16:12:04 -耗时 : 3
2019-06-20 16:12:04 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-06-20 16:12:06 -请求地址 : http://localhost:8081/charts/tableHeatMM/tableHeatMM
2019-06-20 16:12:06 -HTTP METHOD : POST
2019-06-20 16:12:06 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-06-20 16:12:06 -参数 : [com.bootdo.heat.vo.HeatVo@77a8aaf1, com.bootdo.moneyLog.vo.HeatLogVo@4e86b7a1]
2019-06-20 16:12:06 -==>  Preparing: select COUNT(*) from heat WHERE `heat_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and heat_type = ? and user_org = ? 
2019-06-20 16:12:06 -==> Parameters: 2019-05(String), 1(String), 2(String)
2019-06-20 16:12:06 -<==      Total: 1
2019-06-20 16:12:06 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and heat_type = ? and user_org = ? 
2019-06-20 16:12:06 -==> Parameters: 2019-05(String), 1(String), 2(String)
2019-06-20 16:12:06 -<==      Total: 1
2019-06-20 16:12:06 -==>  Preparing: select COUNT(*) from heat WHERE heat_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and heat_type = ? and user_org = ? 
2019-06-20 16:12:06 -==> Parameters: 2019-05(String), 1(String), 2(String)
2019-06-20 16:12:06 -<==      Total: 1
2019-06-20 16:12:06 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and heat_type = ? and user_org = ? 
2019-06-20 16:12:06 -==> Parameters: 2019-05(String), 1(String), 2(String)
2019-06-20 16:12:06 -<==      Total: 1
2019-06-20 16:12:06 -==>  Preparing: select ifnull(SUM(heat_area),0) from heat WHERE `create_time` = ? and heat_type = ? and user_org = ? 
2019-06-20 16:12:06 -==> Parameters: 2019-05(String), 1(String), 2(String)
2019-06-20 16:12:06 -<==      Total: 1
2019-06-20 16:12:06 -==>  Preparing: select COUNT(ID) from heat WHERE `create_time` = ? and heat_type = ? and user_org = ? 
2019-06-20 16:12:06 -==> Parameters: 2019-05(String), 1(String), 2(String)
2019-06-20 16:12:06 -<==      Total: 1
2019-06-20 16:12:06 -==>  Preparing: select ifnull(SUM(heat_cost),0) from heat WHERE `create_time` = ? and heat_type = ? and user_org = ? 
2019-06-20 16:12:06 -==> Parameters: 2019-05(String), 1(String), 2(String)
2019-06-20 16:12:06 -<==      Total: 1
2019-06-20 16:12:06 -==>  Preparing: select COUNT(ID) from heat_log WHERE `create_time` = ? and heat_type = ? and user_org = ? 
2019-06-20 16:12:06 -==> Parameters: 2019-05(String), 1(String), 2(String)
2019-06-20 16:12:06 -<==      Total: 1
2019-06-20 16:12:06 -==>  Preparing: select ifnull(SUM(heat_money),0) from heat_log WHERE `create_time` = ? and heat_type = ? and user_org = ? 
2019-06-20 16:12:06 -==> Parameters: 2019-05(String), 1(String), 2(String)
2019-06-20 16:12:06 -<==      Total: 1
2019-06-20 16:12:06 -==>  Preparing: select COUNT(ID) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-06-20 16:12:06 -==> Parameters: 2019-05(String), 1(String), 2(String)
2019-06-20 16:12:06 -<==      Total: 1
2019-06-20 16:12:06 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-06-20 16:12:06 -==> Parameters: 2019-05(String), 1(String), 2(String)
2019-06-20 16:12:06 -<==      Total: 1
2019-06-20 16:12:06 -==>  Preparing: select COUNT(ID) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-06-20 16:12:06 -==> Parameters: 2019-05(String), 1(String), 2(String)
2019-06-20 16:12:06 -<==      Total: 1
2019-06-20 16:12:06 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-06-20 16:12:06 -==> Parameters: 2019-05(String), 1(String), 2(String)
2019-06-20 16:12:06 -<==      Total: 1
2019-06-20 16:12:06 -==>  Preparing: select COUNT(*) from heat WHERE `heat_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and heat_type = ? and user_org = ? 
2019-06-20 16:12:06 -==> Parameters: 2019-05(String), 2(String), 2(String)
2019-06-20 16:12:06 -<==      Total: 1
2019-06-20 16:12:06 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and heat_type = ? and user_org = ? 
2019-06-20 16:12:06 -==> Parameters: 2019-05(String), 2(String), 2(String)
2019-06-20 16:12:06 -<==      Total: 1
2019-06-20 16:12:06 -==>  Preparing: select COUNT(*) from heat WHERE heat_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and heat_type = ? and user_org = ? 
2019-06-20 16:12:06 -==> Parameters: 2019-05(String), 2(String), 2(String)
2019-06-20 16:12:06 -<==      Total: 1
2019-06-20 16:12:06 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and heat_type = ? and user_org = ? 
2019-06-20 16:12:06 -==> Parameters: 2019-05(String), 2(String), 2(String)
2019-06-20 16:12:06 -<==      Total: 1
2019-06-20 16:12:06 -==>  Preparing: select ifnull(SUM(heat_area),0) from heat WHERE `create_time` = ? and heat_type = ? and user_org = ? 
2019-06-20 16:12:06 -==> Parameters: 2019-05(String), 2(String), 2(String)
2019-06-20 16:12:06 -<==      Total: 1
2019-06-20 16:12:06 -==>  Preparing: select COUNT(ID) from heat WHERE `create_time` = ? and heat_type = ? and user_org = ? 
2019-06-20 16:12:06 -==> Parameters: 2019-05(String), 2(String), 2(String)
2019-06-20 16:12:06 -<==      Total: 1
2019-06-20 16:12:06 -==>  Preparing: select ifnull(SUM(heat_cost),0) from heat WHERE `create_time` = ? and heat_type = ? and user_org = ? 
2019-06-20 16:12:06 -==> Parameters: 2019-05(String), 2(String), 2(String)
2019-06-20 16:12:06 -<==      Total: 1
2019-06-20 16:12:06 -==>  Preparing: select COUNT(ID) from heat_log WHERE `create_time` = ? and heat_type = ? and user_org = ? 
2019-06-20 16:12:06 -==> Parameters: 2019-05(String), 2(String), 2(String)
2019-06-20 16:12:06 -<==      Total: 1
2019-06-20 16:12:06 -==>  Preparing: select ifnull(SUM(heat_money),0) from heat_log WHERE `create_time` = ? and heat_type = ? and user_org = ? 
2019-06-20 16:12:06 -==> Parameters: 2019-05(String), 2(String), 2(String)
2019-06-20 16:12:06 -<==      Total: 1
2019-06-20 16:12:06 -==>  Preparing: select COUNT(ID) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-06-20 16:12:06 -==> Parameters: 2019-05(String), 2(String), 2(String)
2019-06-20 16:12:06 -<==      Total: 1
2019-06-20 16:12:06 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-06-20 16:12:06 -==> Parameters: 2019-05(String), 2(String), 2(String)
2019-06-20 16:12:06 -<==      Total: 1
2019-06-20 16:12:06 -==>  Preparing: select COUNT(ID) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-06-20 16:12:06 -==> Parameters: 2019-05(String), 2(String), 2(String)
2019-06-20 16:12:06 -<==      Total: 1
2019-06-20 16:12:06 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-06-20 16:12:06 -==> Parameters: 2019-05(String), 2(String), 2(String)
2019-06-20 16:12:06 -<==      Total: 1
2019-06-20 16:12:06 -==>  Preparing: select COUNT(*) from heat WHERE `heat_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and heat_type = ? and user_org = ? 
2019-06-20 16:12:06 -==> Parameters: 2019-05(String), 3(String), 2(String)
2019-06-20 16:12:06 -<==      Total: 1
2019-06-20 16:12:06 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and heat_type = ? and user_org = ? 
2019-06-20 16:12:06 -==> Parameters: 2019-05(String), 3(String), 2(String)
2019-06-20 16:12:06 -<==      Total: 1
2019-06-20 16:12:06 -==>  Preparing: select COUNT(*) from heat WHERE heat_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and heat_type = ? and user_org = ? 
2019-06-20 16:12:06 -==> Parameters: 2019-05(String), 3(String), 2(String)
2019-06-20 16:12:06 -<==      Total: 1
2019-06-20 16:12:06 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and heat_type = ? and user_org = ? 
2019-06-20 16:12:06 -==> Parameters: 2019-05(String), 3(String), 2(String)
2019-06-20 16:12:06 -<==      Total: 1
2019-06-20 16:12:06 -==>  Preparing: select ifnull(SUM(heat_area),0) from heat WHERE `create_time` = ? and heat_type = ? and user_org = ? 
2019-06-20 16:12:06 -==> Parameters: 2019-05(String), 3(String), 2(String)
2019-06-20 16:12:06 -<==      Total: 1
2019-06-20 16:12:06 -==>  Preparing: select COUNT(ID) from heat WHERE `create_time` = ? and heat_type = ? and user_org = ? 
2019-06-20 16:12:06 -==> Parameters: 2019-05(String), 3(String), 2(String)
2019-06-20 16:12:06 -<==      Total: 1
2019-06-20 16:12:06 -==>  Preparing: select ifnull(SUM(heat_cost),0) from heat WHERE `create_time` = ? and heat_type = ? and user_org = ? 
2019-06-20 16:12:06 -==> Parameters: 2019-05(String), 3(String), 2(String)
2019-06-20 16:12:06 -<==      Total: 1
2019-06-20 16:12:06 -==>  Preparing: select COUNT(ID) from heat_log WHERE `create_time` = ? and heat_type = ? and user_org = ? 
2019-06-20 16:12:06 -==> Parameters: 2019-05(String), 3(String), 2(String)
2019-06-20 16:12:06 -<==      Total: 1
2019-06-20 16:12:06 -==>  Preparing: select ifnull(SUM(heat_money),0) from heat_log WHERE `create_time` = ? and heat_type = ? and user_org = ? 
2019-06-20 16:12:06 -==> Parameters: 2019-05(String), 3(String), 2(String)
2019-06-20 16:12:06 -<==      Total: 1
2019-06-20 16:12:06 -==>  Preparing: select COUNT(ID) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-06-20 16:12:06 -==> Parameters: 2019-05(String), 3(String), 2(String)
2019-06-20 16:12:06 -<==      Total: 1
2019-06-20 16:12:06 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-06-20 16:12:06 -==> Parameters: 2019-05(String), 3(String), 2(String)
2019-06-20 16:12:06 -<==      Total: 1
2019-06-20 16:12:06 -==>  Preparing: select COUNT(ID) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-06-20 16:12:06 -==> Parameters: 2019-05(String), 3(String), 2(String)
2019-06-20 16:12:06 -<==      Total: 1
2019-06-20 16:12:06 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-06-20 16:12:06 -==> Parameters: 2019-05(String), 3(String), 2(String)
2019-06-20 16:12:06 -<==      Total: 1
2019-06-20 16:12:06 -==>  Preparing: select COUNT(*) from heat WHERE `heat_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and heat_type = ? and user_org = ? 
2019-06-20 16:12:06 -==> Parameters: 2019-05(String), 4(String), 2(String)
2019-06-20 16:12:06 -<==      Total: 1
2019-06-20 16:12:06 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and heat_type = ? and user_org = ? 
2019-06-20 16:12:06 -==> Parameters: 2019-05(String), 4(String), 2(String)
2019-06-20 16:12:06 -<==      Total: 1
2019-06-20 16:12:06 -==>  Preparing: select COUNT(*) from heat WHERE heat_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and heat_type = ? and user_org = ? 
2019-06-20 16:12:06 -==> Parameters: 2019-05(String), 4(String), 2(String)
2019-06-20 16:12:06 -<==      Total: 1
2019-06-20 16:12:06 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and heat_type = ? and user_org = ? 
2019-06-20 16:12:06 -==> Parameters: 2019-05(String), 4(String), 2(String)
2019-06-20 16:12:06 -<==      Total: 1
2019-06-20 16:12:06 -==>  Preparing: select ifnull(SUM(heat_area),0) from heat WHERE `create_time` = ? and heat_type = ? and user_org = ? 
2019-06-20 16:12:06 -==> Parameters: 2019-05(String), 4(String), 2(String)
2019-06-20 16:12:06 -<==      Total: 1
2019-06-20 16:12:06 -==>  Preparing: select COUNT(ID) from heat WHERE `create_time` = ? and heat_type = ? and user_org = ? 
2019-06-20 16:12:06 -==> Parameters: 2019-05(String), 4(String), 2(String)
2019-06-20 16:12:06 -<==      Total: 1
2019-06-20 16:12:06 -==>  Preparing: select ifnull(SUM(heat_cost),0) from heat WHERE `create_time` = ? and heat_type = ? and user_org = ? 
2019-06-20 16:12:06 -==> Parameters: 2019-05(String), 4(String), 2(String)
2019-06-20 16:12:06 -<==      Total: 1
2019-06-20 16:12:06 -==>  Preparing: select COUNT(ID) from heat_log WHERE `create_time` = ? and heat_type = ? and user_org = ? 
2019-06-20 16:12:06 -==> Parameters: 2019-05(String), 4(String), 2(String)
2019-06-20 16:12:06 -<==      Total: 1
2019-06-20 16:12:06 -==>  Preparing: select ifnull(SUM(heat_money),0) from heat_log WHERE `create_time` = ? and heat_type = ? and user_org = ? 
2019-06-20 16:12:06 -==> Parameters: 2019-05(String), 4(String), 2(String)
2019-06-20 16:12:06 -<==      Total: 1
2019-06-20 16:12:06 -==>  Preparing: select COUNT(ID) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-06-20 16:12:06 -==> Parameters: 2019-05(String), 4(String), 2(String)
2019-06-20 16:12:06 -<==      Total: 1
2019-06-20 16:12:06 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-06-20 16:12:06 -==> Parameters: 2019-05(String), 4(String), 2(String)
2019-06-20 16:12:06 -<==      Total: 1
2019-06-20 16:12:06 -==>  Preparing: select COUNT(ID) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-06-20 16:12:06 -==> Parameters: 2019-05(String), 4(String), 2(String)
2019-06-20 16:12:06 -<==      Total: 1
2019-06-20 16:12:06 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-06-20 16:12:06 -==> Parameters: 2019-05(String), 4(String), 2(String)
2019-06-20 16:12:06 -<==      Total: 1
2019-06-20 16:12:06 -==>  Preparing: select m_heat,s_heat,gm_heat,gs_heat,heat_org from heat_price 
2019-06-20 16:12:06 -==> Parameters: 
2019-06-20 16:12:06 -<==      Total: 2
2019-06-20 16:12:06 -耗时 : 223
2019-06-20 16:12:06 -返回值 : {STotalyuOld=0.00, SPreHeatSumMMNew=45.80, GSHeatCostMMCount=2, GSPreHeatCountMMNew=2, MHeatLogMMSum=22159.00, GSPreHeatCountMMOld=0, SPreHeatSumMMOld=0.00, STotalyuNew=-7527.77, SHeatLogMMCount=1, type=2, GSHeatLogMMCount=0, TotalPreyuNew=6398.05, GSHeatAreaMM=323.50, GSTotalhuOld=0, TotalCostyu=356921.40, MHeatPrice=3.50, MOweHeatSumMMNew=-143628.02, SHeatPrice=4.80, GMHeatPrice=3.50, GSOweHeatSumMMOld=0.00, SHeatLogMMSum=275.00, GMHeatLogMMSum=0.00, TotalPreyuOld=0.00, GSOweHeatSumMMNew=0.00, TotalOwehuNew=109, MOweHeatSumMMOld=0.00, TotalCosthu=1679, SOweHeatSumMMNew=-7573.57, GMOweHeatCountMMOld=0, STotalhuOld=0, SOweHeatCountMMNew=9, GMPreHeatSumMMNew=0.00, TotalLogyu=22434.00, GMOweHeatCountMMNew=1, SHeatCostMMSum=26982.86, STotalhuNew=102, MTotalyuOld=0.00, GSTotalhuNew=2, GSTotalyuOld=0.00, GSPreHeatSumMMNew=0.20, GMPreHeatSumMMOld=0.00, GSHeatCostMMSum=1552.80, GMPreHeatCountMMNew=4, MPreHeatSumMMNew=6352.05, GMHeatCostMMSum=11135.19, MTotalhuNew=1570, MTotalyuNew=-137275.97, GMHeatLogMMCount=0, GSTotalyuNew=0.20, GSHeatPrice=4.80, GSHeatLogMMSum=0.00, TotalLoghu=19, SOweHeatSumMMOld=0.00, GMHeatAreaMM=3181.48, SOweHeatCountMMOld=0, SPreHeatCountMMOld=0, TotalOweyuOld=0.00, GMOweHeatSumMMNew=-15850.01, GMTotalhuNew=5, SPreHeatCountMMNew=93, GMPreHeatCountMMOld=0, MPreHeatSumMMOld=0.00, MTotalhuOld=0, GMTotalhuOld=0, GSPreHeatSumMMOld=0.00, TotalPrehuNew=1570, GMHeatCostMMCount=5, MHeatLogMMCount=18, SHeatCostMMCount=102, TotalOweyuNew=-167051.60, MHeatAreaMM=90642.39, TotalPrehuOld=0, MHeatCostMMSum=317250.55, SHeatAreaMM=5621.42, MOweHeatCountMMOld=0, GMTotalyuNew=-15850.01, TotalOwehuOld=0, PriceTotal=16.60, AreaTotalMM=99768.79, MOweHeatCountMMNew=99, GMTotalyuOld=0.00, MPreHeatCountMMOld=0, GSOweHeatCountMMOld=0, TotalAllhuNew=1679, TotalAllyuNew=-160653.55, GSOweHeatCountMMNew=0, MHeatCostMMCount=1570, MPreHeatCountMMNew=1471, GMOweHeatSumMMOld=0.00, TotalAllhuOld=0, TotalAllyuOld=0.00}
2019-06-20 16:12:19 -请求地址 : http://localhost:8081/index
2019-06-20 16:12:19 -HTTP METHOD : GET
2019-06-20 16:12:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-20 16:12:19 -参数 : [{}]
2019-06-20 16:12:19 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-20 16:12:19 -==> Parameters: 1(Long)
2019-06-20 16:12:19 -<==      Total: 51
2019-06-20 16:12:19 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-20 16:12:19 -==> Parameters: 138(Long)
2019-06-20 16:12:19 -<==      Total: 1
2019-06-20 16:12:19 -耗时 : 34
2019-06-20 16:12:19 -返回值 : index_v1
2019-06-20 16:12:19 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-20 16:12:19 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 35(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-bullseye","url":"/moneyUpLoad/ElecLogUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"165","parentId":"106","text":"缴费上传"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":tru(String), 127.0.0.1(String), 2019-06-20 16:12:19.582(Timestamp)
2019-06-20 16:12:19 -<==    Updates: 1
2019-06-20 16:12:19 -请求地址 : http://localhost:8081/main
2019-06-20 16:12:19 -HTTP METHOD : GET
2019-06-20 16:12:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-20 16:12:19 -参数 : []
2019-06-20 16:12:19 -耗时 : 0
2019-06-20 16:12:19 -返回值 : main
2019-06-20 16:12:20 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-20 16:12:20 -HTTP METHOD : GET
2019-06-20 16:12:20 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-20 16:12:20 -参数 : []
2019-06-20 16:12:20 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-20 16:12:20 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-20 16:12:20 -<==      Total: 0
2019-06-20 16:12:20 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-20 16:12:20 -==> Parameters: 1(Long), 0(String)
2019-06-20 16:12:20 -<==      Total: 1
2019-06-20 16:12:20 -耗时 : 9
2019-06-20 16:12:20 -返回值 : com.bootdo.common.utils.PageUtils@1f537c52
2019-06-20 16:12:20 -请求地址 : http://localhost:8081/main
2019-06-20 16:12:20 -HTTP METHOD : GET
2019-06-20 16:12:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-20 16:12:20 -参数 : []
2019-06-20 16:12:20 -耗时 : 1
2019-06-20 16:12:20 -返回值 : main
2019-06-20 18:18:01 -Starting BootdoApplication on PC-201905091110 with PID 8060 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-06-20 18:18:01 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-06-20 18:18:01 -The following profiles are active: dev
2019-06-20 18:18:01 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3276732: startup date [Thu Jun 20 18:18:01 CST 2019]; root of context hierarchy
2019-06-20 18:18:10 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-06-20 18:18:13 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$dd1f8764] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-20 18:18:14 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$cf78b60b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-20 18:18:15 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-20 18:18:15 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-20 18:18:15 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-20 18:18:15 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-06-20 18:18:15 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-06-20 18:18:15 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-20 18:18:16 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-20 18:18:16 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-20 18:18:16 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-20 18:18:17 -Tomcat initialized with port(s): 8081 (http)
2019-06-20 18:18:17 -Initializing ProtocolHandler ["http-nio-8081"]
2019-06-20 18:18:17 -Starting service [Tomcat]
2019-06-20 18:18:17 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-06-20 18:18:17 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:\Java\JDK\jdk1.8.0_102\jre\bin;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-06-20 18:18:18 -Initializing Spring embedded WebApplicationContext
2019-06-20 18:18:18 -Root WebApplicationContext: initialization completed in 16800 ms
2019-06-20 18:18:19 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-06-20 18:18:19 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-06-20 18:18:19 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-06-20 18:18:19 -Mapping filter: 'requestContextFilter' to: [/*]
2019-06-20 18:18:19 -Filter xssFilter was not registered (disabled)
2019-06-20 18:18:19 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-06-20 18:18:19 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-06-20 18:18:19 -Servlet statViewServlet mapped to [/druid/*]
2019-06-20 18:18:19 -Servlet dispatcherServlet mapped to [/]
2019-06-20 18:18:21 -Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'countDDController': Unsatisfied dependency expressed through field 'elecLogService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogServiceImpl': Unsatisfied dependency expressed through field 'elecLogDao'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogDao' defined in file [D:\eclipse2018-work\bootdo\target\classes\com\bootdo\moneyLog\dao\ElecLogDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/bootdo/common/config/DruidDBConfig.class]: Invocation of init method failed; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
2019-06-20 18:18:21 -Stopping service [Tomcat]
2019-06-20 18:18:21 -

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2019-06-20 18:18:21 -Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'countDDController': Unsatisfied dependency expressed through field 'elecLogService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogServiceImpl': Unsatisfied dependency expressed through field 'elecLogDao'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogDao' defined in file [D:\eclipse2018-work\bootdo\target\classes\com\bootdo\moneyLog\dao\ElecLogDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/bootdo/common/config/DruidDBConfig.class]: Invocation of init method failed; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:587)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:91)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:373)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1350)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:580)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:760)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:869)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.bootdo.BootdoApplication.main(BootdoApplication.java:22)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogServiceImpl': Unsatisfied dependency expressed through field 'elecLogDao'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogDao' defined in file [D:\eclipse2018-work\bootdo\target\classes\com\bootdo\moneyLog\dao\ElecLogDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/bootdo/common/config/DruidDBConfig.class]: Invocation of init method failed; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:587)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:91)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:373)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1350)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:580)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:251)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1065)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:584)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogDao' defined in file [D:\eclipse2018-work\bootdo\target\classes\com\bootdo\moneyLog\dao\ElecLogDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/bootdo/common/config/DruidDBConfig.class]: Invocation of init method failed; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1445)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1332)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:580)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:251)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1065)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:584)
	... 32 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/bootdo/common/config/DruidDBConfig.class]: Invocation of init method failed; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:732)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:474)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1256)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1105)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:251)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1065)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1430)
	... 43 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/bootdo/common/config/DruidDBConfig.class]: Invocation of init method failed; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1708)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:581)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:251)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1065)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:818)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:724)
	... 56 common frames omitted
Caused by: java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:871)
	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1714)
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1224)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2190)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2221)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2016)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:776)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:386)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:330)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:148)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:785)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_connect(FilterEventAdapter.java:38)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:785)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.filter.stat.StatFilter.connection_connect(StatFilter.java:211)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1454)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1516)
	at com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:734)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.java:1833)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1776)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1704)
	... 67 common frames omitted
2019-06-20 18:22:59 -Starting BootdoApplication on PC-201905091110 with PID 13236 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-06-20 18:22:59 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-06-20 18:22:59 -The following profiles are active: dev
2019-06-20 18:23:00 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@435871cb: startup date [Thu Jun 20 18:23:00 CST 2019]; root of context hierarchy
2019-06-20 18:23:04 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-06-20 18:23:06 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$54a7ae] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-20 18:23:06 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$f2add655] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-20 18:23:07 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-20 18:23:07 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-20 18:23:07 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-20 18:23:07 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-06-20 18:23:07 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-06-20 18:23:07 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-20 18:23:07 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-20 18:23:07 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-20 18:23:08 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-20 18:23:08 -Tomcat initialized with port(s): 8081 (http)
2019-06-20 18:23:08 -Initializing ProtocolHandler ["http-nio-8081"]
2019-06-20 18:23:08 -Starting service [Tomcat]
2019-06-20 18:23:08 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-06-20 18:23:09 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:\Java\JDK\jdk1.8.0_102\jre\bin;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-06-20 18:23:09 -Initializing Spring embedded WebApplicationContext
2019-06-20 18:23:09 -Root WebApplicationContext: initialization completed in 9091 ms
2019-06-20 18:23:09 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-06-20 18:23:09 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-06-20 18:23:09 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-06-20 18:23:09 -Mapping filter: 'requestContextFilter' to: [/*]
2019-06-20 18:23:09 -Filter xssFilter was not registered (disabled)
2019-06-20 18:23:09 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-06-20 18:23:09 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-06-20 18:23:09 -Servlet statViewServlet mapped to [/druid/*]
2019-06-20 18:23:09 -Servlet dispatcherServlet mapped to [/]
2019-06-20 18:23:13 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@435871cb: startup date [Thu Jun 20 18:23:00 CST 2019]; root of context hierarchy
2019-06-20 18:23:13 -Using default implementation for ThreadExecutor
2019-06-20 18:23:14 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-06-20 18:23:14 -Quartz Scheduler v.2.3.0 created.
2019-06-20 18:23:14 -RAMJobStore initialized.
2019-06-20 18:23:14 -Scheduler meta-data: Quartz Scheduler (v2.3.0) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-06-20 18:23:14 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-06-20 18:23:14 -Quartz scheduler version: 2.3.0
2019-06-20 18:23:14 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@7f5e9949
2019-06-20 18:23:14 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-06-20 18:23:14 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-06-20 18:23:17 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-20 18:23:17 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-06-20 18:23:17 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-20 18:23:17 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-20 18:23:17 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-06-20 18:23:17 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-20 18:23:17 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-06-20 18:23:17 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-06-20 18:23:17 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countOweController.getCountOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-06-20 18:23:17 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-20 18:23:17 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-20 18:23:17 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-06-20 18:23:17 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-06-20 18:23:17 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-20 18:23:17 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-20 18:23:17 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-06-20 18:23:17 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-20 18:23:17 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-20 18:23:17 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-06-20 18:23:17 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-06-20 18:23:17 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-06-20 18:23:17 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-06-20 18:23:17 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-06-20 18:23:17 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-06-20 18:23:17 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-20 18:23:17 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-06-20 18:23:17 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-06-20 18:23:17 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-20 18:23:17 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-06-20 18:23:17 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-06-20 18:23:17 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-06-20 18:23:17 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-06-20 18:23:17 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-20 18:23:17 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Integer> com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-06-20 18:23:17 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-06-20 18:23:17 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-20 18:23:17 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-06-20 18:23:17 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-06-20 18:23:17 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-06-20 18:23:17 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-06-20 18:23:17 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 18:23:17 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-06-20 18:23:17 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-06-20 18:23:17 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 18:23:17 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-06-20 18:23:17 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-06-20 18:23:17 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-06-20 18:23:17 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-06-20 18:23:17 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-06-20 18:23:17 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-06-20 18:23:17 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-06-20 18:23:17 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 18:23:17 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-06-20 18:23:17 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-06-20 18:23:17 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-06-20 18:23:17 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 18:23:17 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-06-20 18:23:17 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 18:23:17 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-06-20 18:23:17 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-06-20 18:23:17 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-06-20 18:23:17 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-06-20 18:23:17 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-06-20 18:23:17 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-06-20 18:23:17 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-06-20 18:23:17 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-06-20 18:23:17 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-06-20 18:23:17 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 18:23:18 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-06-20 18:23:18 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-06-20 18:23:18 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 18:23:18 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-06-20 18:23:18 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-06-20 18:23:18 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-06-20 18:23:18 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-06-20 18:23:18 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 18:23:18 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-06-20 18:23:18 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-06-20 18:23:18 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-06-20 18:23:18 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-20 18:23:18 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-20 18:23:18 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-06-20 18:23:18 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-06-20 18:23:18 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-06-20 18:23:18 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-06-20 18:23:18 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-06-20 18:23:18 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-06-20 18:23:18 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 18:23:18 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-06-20 18:23:18 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-06-20 18:23:18 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-06-20 18:23:18 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-06-20 18:23:18 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-06-20 18:23:18 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-06-20 18:23:18 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-06-20 18:23:18 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-06-20 18:23:18 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-06-20 18:23:18 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 18:23:18 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-06-20 18:23:18 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 18:23:18 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-06-20 18:23:18 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-06-20 18:23:18 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-06-20 18:23:18 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-06-20 18:23:18 -Mapped "{[/elec/elecUpLoad/importElecUser]}" onto public java.lang.String com.bootdo.elec.controller.ElecUpLoadController.importElecUser(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-20 18:23:18 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-06-20 18:23:18 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-06-20 18:23:18 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-06-20 18:23:18 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-06-20 18:23:18 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 18:23:18 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-06-20 18:23:18 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-06-20 18:23:18 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-06-20 18:23:18 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-06-20 18:23:18 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-06-20 18:23:18 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-06-20 18:23:18 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-06-20 18:23:18 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-06-20 18:23:18 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-06-20 18:23:18 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-06-20 18:23:18 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-06-20 18:23:18 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 18:23:18 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-06-20 18:23:18 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 18:23:18 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-06-20 18:23:18 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-06-20 18:23:18 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-20 18:23:18 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-06-20 18:23:18 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-06-20 18:23:18 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-06-20 18:23:18 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-06-20 18:23:18 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-06-20 18:23:18 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-06-20 18:23:18 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 18:23:18 -Mapped "{[/moneyList/moneyWZ/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.add()
2019-06-20 18:23:18 -Mapped "{[/moneyList/moneyWZ/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long)
2019-06-20 18:23:18 -Mapped "{[/moneyList/moneyWZ/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long[])
2019-06-20 18:23:18 -Mapped "{[/moneyList/moneyWZ/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.update(com.bootdo.elec.domain.ElecDO)
2019-06-20 18:23:18 -Mapped "{[/moneyList/moneyWZ/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyList.controller.MoneyListWZController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-06-20 18:23:18 -Mapped "{[/moneyList/moneyWZ/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 18:23:18 -Mapped "{[/moneyList/moneyWZ/exprotWZ],methods=[GET]}" onto public void com.bootdo.moneyList.controller.MoneyListWZController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-06-20 18:23:18 -Mapped "{[/moneyList/moneyWZ/batchMoney],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.batchMoney(java.lang.Long[])
2019-06-20 18:23:18 -Mapped "{[/moneyList/moneyWZ],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
2019-06-20 18:23:18 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-06-20 18:23:18 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-06-20 18:23:18 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-06-20 18:23:18 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-06-20 18:23:18 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 18:23:18 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-06-20 18:23:18 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 18:23:18 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-20 18:23:18 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-06-20 18:23:18 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-06-20 18:23:18 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-06-20 18:23:18 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-06-20 18:23:18 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-06-20 18:23:18 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 18:23:18 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-06-20 18:23:18 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 18:23:18 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-06-20 18:23:18 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-20 18:23:18 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-06-20 18:23:18 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-06-20 18:23:18 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-06-20 18:23:18 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-06-20 18:23:18 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 18:23:18 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-06-20 18:23:18 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 18:23:18 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-20 18:23:18 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-06-20 18:23:18 -Mapped "{[/moneyUpLoad/ElecLogUpLoad/exprotElecLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.exprotElecLogExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-20 18:23:18 -Mapped "{[/moneyUpLoad/ElecLogUpLoad/importElecLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.importElecLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-20 18:23:18 -Mapped "{[/moneyUpLoad/ElecLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.ElecLogUpLoad()
2019-06-20 18:23:18 -Mapped "{[/moneyUpLoad/HeatLogUpLoad/exprotHeatLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.exprotHeatLogExcel(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-20 18:23:18 -Mapped "{[/moneyUpLoad/HeatLogUpLoad/importHeatLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.importHeatLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-20 18:23:18 -Mapped "{[/moneyUpLoad/HeatLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.HeatLogUpLoad()
2019-06-20 18:23:18 -Mapped "{[/moneyUpLoad/WaterLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.WaterLogLogUpLoad()
2019-06-20 18:23:18 -Mapped "{[/moneyUpLoad/WaterLogUpLoad/importWaterLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.importWaterLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-20 18:23:18 -Mapped "{[/moneyUpLoad/WaterLogUpLoad/exprotWaterLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.exprotWaterLogExcel(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-20 18:23:18 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-06-20 18:23:18 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-06-20 18:23:18 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-06-20 18:23:18 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-06-20 18:23:18 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-06-20 18:23:18 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 18:23:18 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-06-20 18:23:18 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-06-20 18:23:18 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 18:23:18 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 18:23:18 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-06-20 18:23:18 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-06-20 18:23:18 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-06-20 18:23:18 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-06-20 18:23:18 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-06-20 18:23:18 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 18:23:18 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-06-20 18:23:18 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.batchRemove(java.lang.Long[])
2019-06-20 18:23:18 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 18:23:18 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 18:23:18 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-06-20 18:23:18 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-06-20 18:23:18 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-06-20 18:23:18 -Mapped "{[/print/print/batchPrint],methods=[POST]}" onto public java.util.List<com.bootdo.print.vo.PrintVo> com.bootdo.print.controller.PrintController.batchPrint(java.lang.Long[])
2019-06-20 18:23:18 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-06-20 18:23:18 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-06-20 18:23:18 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-06-20 18:23:18 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-06-20 18:23:18 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-06-20 18:23:18 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-06-20 18:23:18 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-06-20 18:23:18 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 18:23:18 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView(org.springframework.web.servlet.ModelAndView)
2019-06-20 18:23:18 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-06-20 18:23:18 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-06-20 18:23:18 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-06-20 18:23:18 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-06-20 18:23:18 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-06-20 18:23:18 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-06-20 18:23:18 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-06-20 18:23:18 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-20 18:23:18 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-06-20 18:23:18 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-06-20 18:23:18 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-06-20 18:23:18 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 18:23:18 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-06-20 18:23:18 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-06-20 18:23:18 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-06-20 18:23:18 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-06-20 18:23:18 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-06-20 18:23:18 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-06-20 18:23:18 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-06-20 18:23:18 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-06-20 18:23:18 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-06-20 18:23:18 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-06-20 18:23:18 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-06-20 18:23:18 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-06-20 18:23:18 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 18:23:18 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-06-20 18:23:18 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-06-20 18:23:18 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-06-20 18:23:18 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-06-20 18:23:18 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 18:23:18 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-06-20 18:23:18 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-06-20 18:23:18 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-06-20 18:23:18 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 18:23:18 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-06-20 18:23:18 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-06-20 18:23:18 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-06-20 18:23:18 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-06-20 18:23:18 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-06-20 18:23:18 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-06-20 18:23:18 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-06-20 18:23:18 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-06-20 18:23:18 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-06-20 18:23:18 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-06-20 18:23:18 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-06-20 18:23:18 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-06-20 18:23:18 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-06-20 18:23:18 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-06-20 18:23:18 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-06-20 18:23:18 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-06-20 18:23:18 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-06-20 18:23:18 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 18:23:18 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-06-20 18:23:18 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 18:23:18 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-06-20 18:23:18 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-06-20 18:23:18 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-06-20 18:23:18 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-06-20 18:23:18 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-06-20 18:23:18 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-06-20 18:23:18 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-06-20 18:23:18 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-06-20 18:23:18 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-06-20 18:23:18 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 18:23:18 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-06-20 18:23:18 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 18:23:18 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-06-20 18:23:18 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-06-20 18:23:18 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-20 18:23:18 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-06-20 18:23:18 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-06-20 18:23:18 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-06-20 18:23:18 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-06-20 18:23:18 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-06-20 18:23:18 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-06-20 18:23:19 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-06-20 18:23:19 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-06-20 18:23:19 -Initializing ExecutorService  'brokerChannelExecutor'
2019-06-20 18:23:19 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-20 18:23:20 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@435871cb: startup date [Thu Jun 20 18:23:00 CST 2019]; root of context hierarchy
2019-06-20 18:23:20 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-20 18:23:20 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-20 18:23:20 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-06-20 18:23:20 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-06-20 18:23:22 -Registering beans for JMX exposure on startup
2019-06-20 18:23:22 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-06-20 18:23:22 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-06-20 18:23:22 -Starting beans in phase 2147483647
2019-06-20 18:23:22 -Context refreshed
2019-06-20 18:23:22 -Found 1 custom documentation plugin(s)
2019-06-20 18:23:22 -Scanning for api listing references
2019-06-20 18:23:23 -Generating unique operation named: removeUsingPOST_1
2019-06-20 18:23:23 -Generating unique operation named: addUsingGET_1
2019-06-20 18:23:23 -Generating unique operation named: editUsingGET_1
2019-06-20 18:23:23 -Generating unique operation named: listUsingGET_1
2019-06-20 18:23:23 -Generating unique operation named: removeUsingPOST_2
2019-06-20 18:23:23 -Generating unique operation named: removeUsingPOST_3
2019-06-20 18:23:23 -Generating unique operation named: saveUsingPOST_1
2019-06-20 18:23:23 -Generating unique operation named: updateUsingGET_1
2019-06-20 18:23:23 -Generating unique operation named: updateUsingHEAD_1
2019-06-20 18:23:23 -Generating unique operation named: updateUsingPOST_1
2019-06-20 18:23:23 -Generating unique operation named: updateUsingPUT_1
2019-06-20 18:23:23 -Generating unique operation named: updateUsingPATCH_1
2019-06-20 18:23:23 -Generating unique operation named: updateUsingDELETE_1
2019-06-20 18:23:23 -Generating unique operation named: updateUsingOPTIONS_1
2019-06-20 18:23:23 -Generating unique operation named: updateUsingTRACE_1
2019-06-20 18:23:23 -Generating unique operation named: addUsingGET_2
2019-06-20 18:23:23 -Generating unique operation named: editUsingGET_2
2019-06-20 18:23:23 -Generating unique operation named: listUsingGET_2
2019-06-20 18:23:23 -Generating unique operation named: removeUsingPOST_4
2019-06-20 18:23:23 -Generating unique operation named: removeUsingPOST_5
2019-06-20 18:23:23 -Generating unique operation named: saveUsingPOST_2
2019-06-20 18:23:23 -Generating unique operation named: updateUsingPOST_2
2019-06-20 18:23:23 -Generating unique operation named: exprotExcelUsingGET_1
2019-06-20 18:23:23 -Generating unique operation named: addUsingGET_3
2019-06-20 18:23:23 -Generating unique operation named: editUsingGET_3
2019-06-20 18:23:23 -Generating unique operation named: listUsingGET_3
2019-06-20 18:23:23 -Generating unique operation named: removeUsingPOST_6
2019-06-20 18:23:23 -Generating unique operation named: removeUsingPOST_7
2019-06-20 18:23:23 -Generating unique operation named: saveUsingPOST_3
2019-06-20 18:23:23 -Generating unique operation named: updateUsingGET_2
2019-06-20 18:23:23 -Generating unique operation named: updateUsingHEAD_2
2019-06-20 18:23:23 -Generating unique operation named: updateUsingPOST_3
2019-06-20 18:23:23 -Generating unique operation named: updateUsingPUT_2
2019-06-20 18:23:23 -Generating unique operation named: updateUsingPATCH_2
2019-06-20 18:23:23 -Generating unique operation named: updateUsingDELETE_2
2019-06-20 18:23:23 -Generating unique operation named: updateUsingOPTIONS_2
2019-06-20 18:23:23 -Generating unique operation named: updateUsingTRACE_2
2019-06-20 18:23:23 -Generating unique operation named: addUsingGET_4
2019-06-20 18:23:24 -Generating unique operation named: editUsingGET_4
2019-06-20 18:23:24 -Generating unique operation named: listUsingGET_4
2019-06-20 18:23:24 -Generating unique operation named: removeUsingPOST_8
2019-06-20 18:23:24 -Generating unique operation named: removeUsingPOST_9
2019-06-20 18:23:24 -Generating unique operation named: saveUsingPOST_4
2019-06-20 18:23:24 -Generating unique operation named: updateUsingGET_3
2019-06-20 18:23:24 -Generating unique operation named: updateUsingHEAD_3
2019-06-20 18:23:24 -Generating unique operation named: updateUsingPOST_4
2019-06-20 18:23:24 -Generating unique operation named: updateUsingPUT_3
2019-06-20 18:23:24 -Generating unique operation named: updateUsingPATCH_3
2019-06-20 18:23:24 -Generating unique operation named: updateUsingDELETE_3
2019-06-20 18:23:24 -Generating unique operation named: updateUsingOPTIONS_3
2019-06-20 18:23:24 -Generating unique operation named: updateUsingTRACE_3
2019-06-20 18:23:24 -Generating unique operation named: ElecUsingGET_1
2019-06-20 18:23:24 -Generating unique operation named: addUsingGET_5
2019-06-20 18:23:24 -Generating unique operation named: editUsingGET_5
2019-06-20 18:23:24 -Generating unique operation named: listUsingGET_5
2019-06-20 18:23:24 -Generating unique operation named: removeUsingPOST_10
2019-06-20 18:23:24 -Generating unique operation named: removeUsingPOST_11
2019-06-20 18:23:24 -Generating unique operation named: saveUsingPOST_5
2019-06-20 18:23:24 -Generating unique operation named: updateUsingGET_4
2019-06-20 18:23:24 -Generating unique operation named: updateUsingHEAD_4
2019-06-20 18:23:24 -Generating unique operation named: updateUsingPOST_5
2019-06-20 18:23:24 -Generating unique operation named: updateUsingPUT_4
2019-06-20 18:23:24 -Generating unique operation named: updateUsingPATCH_4
2019-06-20 18:23:24 -Generating unique operation named: updateUsingDELETE_4
2019-06-20 18:23:24 -Generating unique operation named: updateUsingOPTIONS_4
2019-06-20 18:23:24 -Generating unique operation named: updateUsingTRACE_4
2019-06-20 18:23:24 -Generating unique operation named: editUsingGET_6
2019-06-20 18:23:24 -Generating unique operation named: listUsingGET_6
2019-06-20 18:23:24 -Generating unique operation named: updateUsingPOST_6
2019-06-20 18:23:24 -Generating unique operation named: addUsingGET_6
2019-06-20 18:23:24 -Generating unique operation named: editUsingGET_7
2019-06-20 18:23:24 -Generating unique operation named: exprotExcelUsingGET_2
2019-06-20 18:23:24 -Generating unique operation named: listUsingGET_7
2019-06-20 18:23:24 -Generating unique operation named: removeUsingPOST_12
2019-06-20 18:23:24 -Generating unique operation named: removeUsingPOST_13
2019-06-20 18:23:24 -Generating unique operation named: saveUsingPOST_6
2019-06-20 18:23:24 -Generating unique operation named: updateUsingGET_5
2019-06-20 18:23:24 -Generating unique operation named: updateUsingHEAD_5
2019-06-20 18:23:24 -Generating unique operation named: updateUsingPOST_7
2019-06-20 18:23:24 -Generating unique operation named: updateUsingPUT_5
2019-06-20 18:23:24 -Generating unique operation named: updateUsingPATCH_5
2019-06-20 18:23:24 -Generating unique operation named: updateUsingDELETE_5
2019-06-20 18:23:24 -Generating unique operation named: updateUsingOPTIONS_5
2019-06-20 18:23:24 -Generating unique operation named: updateUsingTRACE_5
2019-06-20 18:23:24 -Generating unique operation named: exprotExcelUsingGET_3
2019-06-20 18:23:24 -Generating unique operation named: addUsingGET_7
2019-06-20 18:23:24 -Generating unique operation named: editUsingGET_8
2019-06-20 18:23:24 -Generating unique operation named: listUsingGET_8
2019-06-20 18:23:24 -Generating unique operation named: removeUsingPOST_14
2019-06-20 18:23:24 -Generating unique operation named: removeUsingPOST_15
2019-06-20 18:23:24 -Generating unique operation named: saveUsingPOST_7
2019-06-20 18:23:24 -Generating unique operation named: updateUsingGET_6
2019-06-20 18:23:24 -Generating unique operation named: updateUsingHEAD_6
2019-06-20 18:23:24 -Generating unique operation named: updateUsingPOST_8
2019-06-20 18:23:24 -Generating unique operation named: updateUsingPUT_6
2019-06-20 18:23:24 -Generating unique operation named: updateUsingPATCH_6
2019-06-20 18:23:24 -Generating unique operation named: updateUsingDELETE_6
2019-06-20 18:23:24 -Generating unique operation named: updateUsingOPTIONS_6
2019-06-20 18:23:24 -Generating unique operation named: updateUsingTRACE_6
2019-06-20 18:23:24 -Generating unique operation named: addUsingGET_8
2019-06-20 18:23:24 -Generating unique operation named: editUsingGET_9
2019-06-20 18:23:24 -Generating unique operation named: listUsingGET_9
2019-06-20 18:23:24 -Generating unique operation named: removeUsingPOST_16
2019-06-20 18:23:24 -Generating unique operation named: removeUsingPOST_17
2019-06-20 18:23:24 -Generating unique operation named: saveUsingPOST_8
2019-06-20 18:23:24 -Generating unique operation named: updateUsingGET_7
2019-06-20 18:23:24 -Generating unique operation named: updateUsingHEAD_7
2019-06-20 18:23:24 -Generating unique operation named: updateUsingPOST_9
2019-06-20 18:23:24 -Generating unique operation named: updateUsingPUT_7
2019-06-20 18:23:24 -Generating unique operation named: updateUsingPATCH_7
2019-06-20 18:23:24 -Generating unique operation named: updateUsingDELETE_7
2019-06-20 18:23:24 -Generating unique operation named: updateUsingOPTIONS_7
2019-06-20 18:23:24 -Generating unique operation named: updateUsingTRACE_7
2019-06-20 18:23:24 -Generating unique operation named: addUsingGET_9
2019-06-20 18:23:24 -Generating unique operation named: editUsingGET_10
2019-06-20 18:23:24 -Generating unique operation named: infoUsingGET_1
2019-06-20 18:23:24 -Generating unique operation named: infoUsingHEAD_1
2019-06-20 18:23:24 -Generating unique operation named: infoUsingPOST_1
2019-06-20 18:23:24 -Generating unique operation named: infoUsingPUT_1
2019-06-20 18:23:24 -Generating unique operation named: infoUsingPATCH_1
2019-06-20 18:23:24 -Generating unique operation named: infoUsingDELETE_1
2019-06-20 18:23:24 -Generating unique operation named: infoUsingOPTIONS_1
2019-06-20 18:23:24 -Generating unique operation named: infoUsingTRACE_1
2019-06-20 18:23:24 -Generating unique operation named: listUsingGET_10
2019-06-20 18:23:24 -Generating unique operation named: removeUsingPOST_18
2019-06-20 18:23:24 -Generating unique operation named: removeUsingPOST_19
2019-06-20 18:23:24 -Generating unique operation named: saveUsingPOST_9
2019-06-20 18:23:24 -Generating unique operation named: updateUsingPOST_10
2019-06-20 18:23:24 -Generating unique operation named: listUsingGET_11
2019-06-20 18:23:24 -Generating unique operation named: removeUsingPOST_20
2019-06-20 18:23:24 -Generating unique operation named: welcomeUsingGET_1
2019-06-20 18:23:24 -Generating unique operation named: addUsingGET_10
2019-06-20 18:23:24 -Generating unique operation named: editUsingGET_11
2019-06-20 18:23:24 -Generating unique operation named: listUsingGET_12
2019-06-20 18:23:24 -Generating unique operation named: removeUsingPOST_21
2019-06-20 18:23:24 -Generating unique operation named: saveUsingPOST_10
2019-06-20 18:23:24 -Generating unique operation named: treeUsingGET_1
2019-06-20 18:23:25 -Generating unique operation named: treeUsingGET_2
2019-06-20 18:23:25 -Generating unique operation named: updateUsingPOST_11
2019-06-20 18:23:25 -Generating unique operation named: addUsingGET_11
2019-06-20 18:23:25 -Generating unique operation named: editUsingGET_12
2019-06-20 18:23:25 -Generating unique operation named: listUsingGET_13
2019-06-20 18:23:25 -Generating unique operation named: removeUsingPOST_22
2019-06-20 18:23:25 -Generating unique operation named: removeUsingPOST_23
2019-06-20 18:23:25 -Generating unique operation named: updateUsingPOST_12
2019-06-20 18:23:25 -Generating unique operation named: addUsingGET_12
2019-06-20 18:23:25 -Generating unique operation named: editUsingGET_13
2019-06-20 18:23:25 -Generating unique operation named: listUsingGET_14
2019-06-20 18:23:25 -Generating unique operation named: removeUsingPOST_24
2019-06-20 18:23:25 -Generating unique operation named: removeUsingPOST_25
2019-06-20 18:23:25 -Generating unique operation named: saveUsingPOST_11
2019-06-20 18:23:25 -Generating unique operation named: updateUsingGET_8
2019-06-20 18:23:25 -Generating unique operation named: updateUsingHEAD_8
2019-06-20 18:23:25 -Generating unique operation named: updateUsingPOST_13
2019-06-20 18:23:25 -Generating unique operation named: updateUsingPUT_8
2019-06-20 18:23:25 -Generating unique operation named: updateUsingPATCH_8
2019-06-20 18:23:25 -Generating unique operation named: updateUsingDELETE_8
2019-06-20 18:23:25 -Generating unique operation named: updateUsingOPTIONS_8
2019-06-20 18:23:25 -Generating unique operation named: updateUsingTRACE_8
2019-06-20 18:23:25 -Generating unique operation named: addUsingGET_13
2019-06-20 18:23:25 -Generating unique operation named: batchRemoveUsingPOST_1
2019-06-20 18:23:25 -Generating unique operation named: editUsingGET_14
2019-06-20 18:23:25 -Generating unique operation named: listUsingGET_15
2019-06-20 18:23:25 -Generating unique operation named: printEditUsingGET_1
2019-06-20 18:23:25 -Generating unique operation named: removeUsingPOST_26
2019-06-20 18:23:25 -Generating unique operation named: saveUsingPOST_12
2019-06-20 18:23:25 -Generating unique operation named: updateUsingGET_9
2019-06-20 18:23:25 -Generating unique operation named: updateUsingHEAD_9
2019-06-20 18:23:25 -Generating unique operation named: updateUsingPOST_14
2019-06-20 18:23:25 -Generating unique operation named: updateUsingPUT_9
2019-06-20 18:23:25 -Generating unique operation named: updateUsingPATCH_9
2019-06-20 18:23:25 -Generating unique operation named: updateUsingDELETE_9
2019-06-20 18:23:25 -Generating unique operation named: updateUsingOPTIONS_9
2019-06-20 18:23:25 -Generating unique operation named: updateUsingTRACE_9
2019-06-20 18:23:25 -Generating unique operation named: addUsingGET_14
2019-06-20 18:23:25 -Generating unique operation named: batchRemoveUsingPOST_2
2019-06-20 18:23:25 -Generating unique operation named: editUsingGET_15
2019-06-20 18:23:25 -Generating unique operation named: listUsingGET_16
2019-06-20 18:23:25 -Generating unique operation named: saveUsingPOST_13
2019-06-20 18:23:25 -Generating unique operation named: saveUsingPOST_14
2019-06-20 18:23:25 -Generating unique operation named: updateUsingPOST_15
2019-06-20 18:23:25 -Generating unique operation named: listUsingGET_17
2019-06-20 18:23:25 -Generating unique operation named: listUsingHEAD_1
2019-06-20 18:23:25 -Generating unique operation named: listUsingPOST_1
2019-06-20 18:23:25 -Generating unique operation named: listUsingPUT_1
2019-06-20 18:23:25 -Generating unique operation named: listUsingPATCH_1
2019-06-20 18:23:25 -Generating unique operation named: listUsingDELETE_1
2019-06-20 18:23:25 -Generating unique operation named: listUsingOPTIONS_1
2019-06-20 18:23:25 -Generating unique operation named: listUsingTRACE_1
2019-06-20 18:23:25 -Generating unique operation named: countDDUsingGET_1
2019-06-20 18:23:25 -Generating unique operation named: exportDDUsingGET_1
2019-06-20 18:23:25 -Generating unique operation named: exportElecYYUsingGET_1
2019-06-20 18:23:25 -Generating unique operation named: addUsingGET_15
2019-06-20 18:23:25 -Generating unique operation named: batchRemoveUsingPOST_3
2019-06-20 18:23:25 -Generating unique operation named: editUsingGET_16
2019-06-20 18:23:25 -Generating unique operation named: listUsingGET_18
2019-06-20 18:23:25 -Generating unique operation named: removeUsingPOST_27
2019-06-20 18:23:25 -Generating unique operation named: saveUsingPOST_15
2019-06-20 18:23:25 -Generating unique operation named: treeUsingGET_3
2019-06-20 18:23:25 -Generating unique operation named: treeViewUsingGET_1
2019-06-20 18:23:25 -Generating unique operation named: updateUsingPOST_16
2019-06-20 18:23:25 -Generating unique operation named: addUsingGET_16
2019-06-20 18:23:25 -Generating unique operation named: editUsingGET_17
2019-06-20 18:23:25 -Generating unique operation named: exprotExcelUsingGET_4
2019-06-20 18:23:25 -Generating unique operation named: listUsingGET_19
2019-06-20 18:23:25 -Generating unique operation named: removeUsingPOST_28
2019-06-20 18:23:25 -Generating unique operation named: removeUsingPOST_29
2019-06-20 18:23:25 -Generating unique operation named: saveUsingPOST_16
2019-06-20 18:23:25 -Generating unique operation named: updateUsingGET_10
2019-06-20 18:23:25 -Generating unique operation named: updateUsingHEAD_10
2019-06-20 18:23:25 -Generating unique operation named: updateUsingPOST_17
2019-06-20 18:23:25 -Generating unique operation named: updateUsingPUT_10
2019-06-20 18:23:25 -Generating unique operation named: updateUsingPATCH_10
2019-06-20 18:23:25 -Generating unique operation named: updateUsingDELETE_10
2019-06-20 18:23:25 -Generating unique operation named: updateUsingOPTIONS_10
2019-06-20 18:23:25 -Generating unique operation named: updateUsingTRACE_10
2019-06-20 18:23:25 -Generating unique operation named: exprotExcelUsingGET_5
2019-06-20 18:23:25 -Generating unique operation named: addUsingGET_17
2019-06-20 18:23:25 -Generating unique operation named: editUsingGET_18
2019-06-20 18:23:25 -Generating unique operation named: listUsingGET_20
2019-06-20 18:23:25 -Generating unique operation named: removeUsingPOST_30
2019-06-20 18:23:25 -Generating unique operation named: removeUsingPOST_31
2019-06-20 18:23:25 -Generating unique operation named: saveUsingPOST_17
2019-06-20 18:23:25 -Generating unique operation named: updateUsingGET_11
2019-06-20 18:23:25 -Generating unique operation named: updateUsingHEAD_11
2019-06-20 18:23:25 -Generating unique operation named: updateUsingPOST_18
2019-06-20 18:23:25 -Generating unique operation named: updateUsingPUT_11
2019-06-20 18:23:25 -Generating unique operation named: updateUsingPATCH_11
2019-06-20 18:23:25 -Generating unique operation named: updateUsingDELETE_11
2019-06-20 18:23:25 -Generating unique operation named: updateUsingOPTIONS_11
2019-06-20 18:23:25 -Generating unique operation named: updateUsingTRACE_11
2019-06-20 18:23:25 -Generating unique operation named: addUsingGET_18
2019-06-20 18:23:25 -Generating unique operation named: editUsingGET_19
2019-06-20 18:23:25 -Generating unique operation named: listUsingGET_21
2019-06-20 18:23:25 -Generating unique operation named: removeUsingPOST_32
2019-06-20 18:23:25 -Generating unique operation named: removeUsingPOST_33
2019-06-20 18:23:25 -Generating unique operation named: saveUsingPOST_18
2019-06-20 18:23:25 -Generating unique operation named: updateUsingGET_12
2019-06-20 18:23:25 -Generating unique operation named: updateUsingHEAD_12
2019-06-20 18:23:25 -Generating unique operation named: updateUsingPOST_19
2019-06-20 18:23:25 -Generating unique operation named: updateUsingPUT_12
2019-06-20 18:23:25 -Generating unique operation named: updateUsingPATCH_12
2019-06-20 18:23:25 -Generating unique operation named: updateUsingDELETE_12
2019-06-20 18:23:25 -Generating unique operation named: updateUsingOPTIONS_12
2019-06-20 18:23:25 -Generating unique operation named: updateUsingTRACE_12
2019-06-20 18:23:26 -Starting Quartz Scheduler now
2019-06-20 18:23:26 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-06-20 18:23:26 -Starting...
2019-06-20 18:23:26 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-06-20 18:23:26 -Started.
2019-06-20 18:23:26 -Starting ProtocolHandler ["http-nio-8081"]
2019-06-20 18:23:26 -Using a shared selector for servlet write/read
2019-06-20 18:23:26 -Tomcat started on port(s): 8081 (http) with context path ''
2019-06-20 18:23:26 -Started BootdoApplication in 28.132 seconds (JVM running for 29.543)
2019-06-20 18:23:26 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-06-20 18:23:26 -==> Parameters: 
2019-06-20 18:23:26 -<==      Total: 1
2019-06-20 18:24:19 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-06-20 18:31:24 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-06-20 18:31:24 -FrameworkServlet 'dispatcherServlet': initialization started
2019-06-20 18:31:24 -FrameworkServlet 'dispatcherServlet': initialization completed in 69 ms
2019-06-20 18:31:24 -Enabling session validation scheduler...
2019-06-20 18:31:24 -请求地址 : http://localhost:8081/login;JSESSIONID=e34a06b1-b9db-495b-a9f8-20e96e8bcd43
2019-06-20 18:31:24 -HTTP METHOD : GET
2019-06-20 18:31:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-06-20 18:31:24 -参数 : [{}]
2019-06-20 18:31:24 -耗时 : 4
2019-06-20 18:31:24 -返回值 : login
2019-06-20 18:31:28 -请求地址 : http://localhost:8081/getVerify
2019-06-20 18:31:28 -HTTP METHOD : GET
2019-06-20 18:31:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-06-20 18:31:28 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@c462387, org.apache.shiro.web.servlet.ShiroHttpServletResponse@66839c0e]
2019-06-20 18:31:32 -0487
2019-06-20 18:31:32 -耗时 : 4057
2019-06-20 18:31:32 -返回值 : null
2019-06-20 18:32:38 -请求地址 : http://localhost:8081/login
2019-06-20 18:32:38 -HTTP METHOD : POST
2019-06-20 18:32:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-06-20 18:32:38 -参数 : [admin, 111111, 0487, org.apache.shiro.web.servlet.ShiroHttpServletRequest@77bac741]
2019-06-20 18:32:38 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-06-20 18:32:38 -==> Parameters: admin(String)
2019-06-20 18:32:38 -<==      Total: 1
2019-06-20 18:32:38 -耗时 : 121
2019-06-20 18:32:38 -返回值 : {msg=操作成功, code=0}
2019-06-20 18:32:38 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-06-20 18:32:38 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-20 18:32:38 -==> Parameters: 1(Long), admin(String), 登录(String), 121(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-06-20 18:32:38.526(Timestamp)
2019-06-20 18:32:38 -<==    Updates: 1
2019-06-20 18:32:38 -请求地址 : http://localhost:8081/index
2019-06-20 18:32:38 -HTTP METHOD : GET
2019-06-20 18:32:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-20 18:32:38 -参数 : [{}]
2019-06-20 18:32:38 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-20 18:32:38 -==> Parameters: 1(Long)
2019-06-20 18:32:38 -<==      Total: 51
2019-06-20 18:32:38 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-20 18:32:38 -==> Parameters: 138(Long)
2019-06-20 18:32:38 -<==      Total: 1
2019-06-20 18:32:38 -耗时 : 230
2019-06-20 18:32:38 -返回值 : index_v1
2019-06-20 18:32:38 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-20 18:32:38 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 230(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-bullseye","url":"/moneyUpLoad/ElecLogUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"165","parentId":"106","text":"缴费上传"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":tru(String), 127.0.0.1(String), 2019-06-20 18:32:38.97(Timestamp)
2019-06-20 18:32:39 -<==    Updates: 1
2019-06-20 18:32:39 -请求地址 : http://localhost:8081/main
2019-06-20 18:32:39 -HTTP METHOD : GET
2019-06-20 18:32:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-20 18:32:39 -参数 : []
2019-06-20 18:32:39 -耗时 : 1
2019-06-20 18:32:39 -返回值 : main
2019-06-20 18:32:43 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-20 18:32:43 -HTTP METHOD : GET
2019-06-20 18:32:43 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-20 18:32:43 -参数 : []
2019-06-20 18:32:43 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-20 18:32:43 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-20 18:32:43 -<==      Total: 0
2019-06-20 18:32:43 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-20 18:32:43 -==> Parameters: 1(Long), 0(String)
2019-06-20 18:32:43 -<==      Total: 1
2019-06-20 18:32:43 -耗时 : 85
2019-06-20 18:32:43 -返回值 : com.bootdo.common.utils.PageUtils@40ddca63
2019-06-20 18:32:43 -请求地址 : http://localhost:8081/main
2019-06-20 18:32:43 -HTTP METHOD : GET
2019-06-20 18:32:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-20 18:32:43 -参数 : []
2019-06-20 18:32:43 -耗时 : 1
2019-06-20 18:32:43 -返回值 : main
2019-06-20 18:33:22 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-06-20 18:33:22 -==> Parameters: 1(Long)
2019-06-20 18:33:23 -<==      Total: 95
2019-06-20 18:33:23 -请求地址 : http://localhost:8081/elec/elecInto
2019-06-20 18:33:23 -HTTP METHOD : GET
2019-06-20 18:33:23 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.ElecInto
2019-06-20 18:33:23 -参数 : []
2019-06-20 18:33:23 -耗时 : 0
2019-06-20 18:33:23 -返回值 : elec/elecInto/elecInto
2019-06-20 18:38:35 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-06-20 18:38:35 -HTTP METHOD : GET
2019-06-20 18:38:35 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-06-20 18:38:35 -参数 : [ModelAndView: materialized View is [null]; model is null]
2019-06-20 18:38:35 -耗时 : 1
2019-06-20 18:38:35 -返回值 : system/dept/deptTree
2019-06-20 18:38:35 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-06-20 18:38:35 -HTTP METHOD : GET
2019-06-20 18:38:35 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-06-20 18:38:35 -参数 : []
2019-06-20 18:38:35 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-06-20 18:38:35 -==> Parameters: 
2019-06-20 18:38:35 -<==      Total: 3
2019-06-20 18:38:35 -耗时 : 29
2019-06-20 18:38:35 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-06-20 18:38:37 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-06-20 18:38:37 -HTTP METHOD : GET
2019-06-20 18:38:37 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-06-20 18:38:37 -参数 : [ModelAndView: materialized View is [null]; model is null]
2019-06-20 18:38:37 -耗时 : 0
2019-06-20 18:38:37 -返回值 : system/dept/deptTree
2019-06-20 18:38:38 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-06-20 18:38:38 -HTTP METHOD : GET
2019-06-20 18:38:38 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-06-20 18:38:38 -参数 : []
2019-06-20 18:38:38 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-06-20 18:38:38 -==> Parameters: 
2019-06-20 18:38:38 -<==      Total: 3
2019-06-20 18:38:38 -耗时 : 4
2019-06-20 18:38:38 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-06-20 18:38:39 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-06-20 18:38:39 -HTTP METHOD : GET
2019-06-20 18:38:39 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-06-20 18:38:39 -参数 : [ModelAndView: materialized View is [null]; model is null]
2019-06-20 18:38:39 -耗时 : 0
2019-06-20 18:38:39 -返回值 : system/dept/deptTree
2019-06-20 18:38:39 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-06-20 18:38:39 -HTTP METHOD : GET
2019-06-20 18:38:39 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-06-20 18:38:39 -参数 : []
2019-06-20 18:38:39 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-06-20 18:38:39 -==> Parameters: 
2019-06-20 18:38:39 -<==      Total: 3
2019-06-20 18:38:39 -耗时 : 3
2019-06-20 18:38:39 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-06-20 18:39:45 -请求地址 : http://localhost:8081/elec/elecInto/importElecIntoExcel
2019-06-20 18:39:45 -HTTP METHOD : POST
2019-06-20 18:39:45 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel
2019-06-20 18:39:45 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@2866fce9, com.bootdo.elec.vo.ElecVo@25340a41, org.apache.shiro.web.servlet.ShiroHttpServletResponse@114f321c]
2019-06-20 18:39:45 -==>  Preparing: select * from elec WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-06-20 18:39:45 -==> Parameters: 2019-05(String), 2(String), 1-0001(String), 李文英(String)
2019-06-20 18:39:45 -<==      Total: 1
2019-06-20 18:39:45 -==>  Preparing: UPDATE ELEC SET ELEC_SUM = ELEC_SUM + ? WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-06-20 18:39:45 -==> Parameters: -25.02(BigDecimal), 2019-05(String), 2(String), 1-0001(String), 李文英(String)
2019-06-20 18:39:45 -<==    Updates: 1
2019-06-20 18:39:46 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-20 18:39:46 -==> Parameters: 1-0001(String), 李文英(String), B(String), 2(String), 1(String), 10(BigDecimal), 2019-06-20 18:39:46.032(Timestamp), 2019-05(String), admin(String), 2019-06-20 18:39:46.032(Timestamp), admin(String), null
2019-06-20 18:39:46 -<==    Updates: 1
2019-06-20 18:39:46 -==>  Preparing: insert into print ( `user_id`, `user_name`, `user_type`, `user_org`, `start`, `end`, `hu`, `elec_price`, `elec_amount`, `elec_cost`, `elec_sum`, `elec_money`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `heat_money`, `water_price`, `water_cost`, `water_sum`, `water_money`, `print_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-20 18:39:46 -==> Parameters: 1-0001(String), 李文英(String), null, 2(String), 10300(Integer), 10370(Integer), 1(Integer), 0.465(BigDecimal), 0.00(BigDecimal), 32.55(BigDecimal), -25.02(BigDecimal), 10(BigDecimal), null, null, null, null, null, null, null, null, null, null, 2019-05(String), admin(String), 2019-06-20 18:39:46.096(Timestamp), admin(String), null
2019-06-20 18:39:46 -{conn-10001, pstmt-20012} execute error. insert into print
		(
			`user_id`, 
			`user_name`, 
			`user_type`, 
			`user_org`, 
			`start`, 
			`end`, 
			`hu`, 
			`elec_price`, 
			`elec_amount`, 
			`elec_cost`, 
			`elec_sum`, 
			`elec_money`, 
			`heat_price`, 
			`heat_area`, 
			`heat_cost`, 
			`heat_sum`, 
			`heat_money`, 
			`water_price`, 
			`water_cost`, 
			`water_sum`, 
			`water_money`, 
			`print_date`, 
			`create_time`, 
			`create_by`, 
			`update_time`, 
			`update_by`, 
			`remark`
		)
		values
		(
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?
		)
com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'user_type' cannot be null
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:936)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy172.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy101.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy123.save(Unknown Source)
	at com.bootdo.print.service.impl.PrintServiceImpl.save(PrintServiceImpl.java:45)
	at com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(ElecIntoController.java:150)
	at com.bootdo.elec.controller.ElecIntoController$$FastClassBySpringCGLIB$$3f35846e.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:58)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.elec.controller.ElecIntoController$$EnhancerBySpringCGLIB$$2a6fdabe.importElecIntoExcel(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-06-20 18:39:46 -Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]
2019-06-20 18:39:46 -SQLErrorCodes loaded: [DB2, Derby, H2, HDB, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase]
2019-06-20 18:39:46 -耗时 : 1113
2019-06-20 18:39:46 -返回值 : fail
2019-06-20 18:52:13 -请求地址 : http://localhost:8081/index
2019-06-20 18:52:13 -HTTP METHOD : GET
2019-06-20 18:52:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-20 18:52:13 -参数 : [{}]
2019-06-20 18:52:13 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-20 18:52:13 -==> Parameters: 1(Long)
2019-06-20 18:52:13 -<==      Total: 51
2019-06-20 18:52:13 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-20 18:52:13 -==> Parameters: 138(Long)
2019-06-20 18:52:13 -<==      Total: 1
2019-06-20 18:52:13 -耗时 : 26
2019-06-20 18:52:13 -返回值 : index_v1
2019-06-20 18:52:13 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-20 18:52:13 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 30(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-bullseye","url":"/moneyUpLoad/ElecLogUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"165","parentId":"106","text":"缴费上传"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":tru(String), 127.0.0.1(String), 2019-06-20 18:52:13.965(Timestamp)
2019-06-20 18:52:14 -<==    Updates: 1
2019-06-20 18:52:14 -请求地址 : http://localhost:8081/main
2019-06-20 18:52:14 -HTTP METHOD : GET
2019-06-20 18:52:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-20 18:52:14 -参数 : []
2019-06-20 18:52:14 -耗时 : 0
2019-06-20 18:52:14 -返回值 : main
2019-06-20 18:52:14 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-20 18:52:14 -HTTP METHOD : GET
2019-06-20 18:52:14 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-20 18:52:14 -参数 : []
2019-06-20 18:52:14 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-20 18:52:14 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-20 18:52:14 -<==      Total: 0
2019-06-20 18:52:14 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-20 18:52:14 -==> Parameters: 1(Long), 0(String)
2019-06-20 18:52:14 -<==      Total: 1
2019-06-20 18:52:14 -耗时 : 8
2019-06-20 18:52:14 -返回值 : com.bootdo.common.utils.PageUtils@6e5787c8
2019-06-20 18:52:14 -请求地址 : http://localhost:8081/main
2019-06-20 18:52:14 -HTTP METHOD : GET
2019-06-20 18:52:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-20 18:52:14 -参数 : []
2019-06-20 18:52:14 -耗时 : 0
2019-06-20 18:52:14 -返回值 : main
2019-06-20 18:52:17 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-06-20 18:52:17 -==> Parameters: 1(Long)
2019-06-20 18:52:17 -<==      Total: 95
2019-06-20 18:52:17 -请求地址 : http://localhost:8081/elec/elecInto
2019-06-20 18:52:17 -HTTP METHOD : GET
2019-06-20 18:52:17 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.ElecInto
2019-06-20 18:52:17 -参数 : []
2019-06-20 18:52:17 -耗时 : 1
2019-06-20 18:52:17 -返回值 : elec/elecInto/elecInto
2019-06-20 18:52:27 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-06-20 18:52:27 -HTTP METHOD : GET
2019-06-20 18:52:27 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-06-20 18:52:27 -参数 : [ModelAndView: materialized View is [null]; model is null]
2019-06-20 18:52:27 -耗时 : 1
2019-06-20 18:52:27 -返回值 : system/dept/deptTree
2019-06-20 18:52:27 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-06-20 18:52:27 -HTTP METHOD : GET
2019-06-20 18:52:27 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-06-20 18:52:27 -参数 : []
2019-06-20 18:52:27 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-06-20 18:52:27 -==> Parameters: 
2019-06-20 18:52:27 -<==      Total: 3
2019-06-20 18:52:27 -耗时 : 6
2019-06-20 18:52:27 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-06-20 18:52:29 -请求地址 : http://localhost:8081/elec/elecInto/importElecIntoExcel
2019-06-20 18:52:29 -HTTP METHOD : POST
2019-06-20 18:52:29 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel
2019-06-20 18:52:29 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@219db5ee, com.bootdo.elec.vo.ElecVo@38781bea, org.apache.shiro.web.servlet.ShiroHttpServletResponse@393c0fe1]
2019-06-20 18:52:29 -==>  Preparing: select * from elec WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-06-20 18:52:29 -==> Parameters: 2019-05(String), 2(String), 1-0001(String), 李文英(String)
2019-06-20 18:52:29 -<==      Total: 1
2019-06-20 18:52:29 -==>  Preparing: UPDATE ELEC SET ELEC_SUM = ELEC_SUM + ? WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-06-20 18:52:29 -==> Parameters: -50.04(BigDecimal), 2019-05(String), 2(String), 1-0001(String), 李文英(String)
2019-06-20 18:52:29 -<==    Updates: 1
2019-06-20 18:53:52 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-20 18:53:52 -==> Parameters: 1-0001(String), 李文英(String), B(String), 2(String), 1(String), 10(BigDecimal), 2019-06-20 18:53:35.38(Timestamp), 2019-05(String), admin(String), 2019-06-20 18:53:51.348(Timestamp), admin(String), null
2019-06-20 18:53:53 -<==    Updates: 1
2019-06-20 18:54:19 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 21], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 3], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 311]
2019-06-20 18:54:46 -==>  Preparing: insert into print ( `user_id`, `user_name`, `user_type`, `user_org`, `start`, `end`, `hu`, `elec_price`, `elec_amount`, `elec_cost`, `elec_sum`, `elec_money`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `heat_money`, `water_price`, `water_cost`, `water_sum`, `water_money`, `print_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-20 18:54:47 -==> Parameters: 1-0001(String), 李文英(String), null, 2(String), 10300(Integer), 10370(Integer), 1(Integer), 0.465(BigDecimal), 0.00(BigDecimal), 32.55(BigDecimal), -50.04(BigDecimal), 10(BigDecimal), null, null, null, null, null, null, null, null, null, null, 2019-05(String), admin(String), 2019-06-20 18:54:46.932(Timestamp), admin(String), null
2019-06-20 18:54:47 -{conn-10001, pstmt-20013} execute error. insert into print
		(
			`user_id`, 
			`user_name`, 
			`user_type`, 
			`user_org`, 
			`start`, 
			`end`, 
			`hu`, 
			`elec_price`, 
			`elec_amount`, 
			`elec_cost`, 
			`elec_sum`, 
			`elec_money`, 
			`heat_price`, 
			`heat_area`, 
			`heat_cost`, 
			`heat_sum`, 
			`heat_money`, 
			`water_price`, 
			`water_cost`, 
			`water_sum`, 
			`water_money`, 
			`print_date`, 
			`create_time`, 
			`create_by`, 
			`update_time`, 
			`update_by`, 
			`remark`
		)
		values
		(
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?
		)
com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'user_type' cannot be null
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:936)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor125.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy172.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy101.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy123.save(Unknown Source)
	at com.bootdo.print.service.impl.PrintServiceImpl.save(PrintServiceImpl.java:45)
	at com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(ElecIntoController.java:147)
	at com.bootdo.elec.controller.ElecIntoController$$FastClassBySpringCGLIB$$3f35846e.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:58)
	at sun.reflect.GeneratedMethodAccessor127.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.elec.controller.ElecIntoController$$EnhancerBySpringCGLIB$$2a6fdabe.importElecIntoExcel(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-06-20 18:54:50 -耗时 : 141611
2019-06-20 18:54:50 -返回值 : fail
2019-06-20 18:57:07 -Starting BootdoApplication on PC-201905091110 with PID 1504 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-06-20 18:57:07 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-06-20 18:57:07 -The following profiles are active: dev
2019-06-20 18:57:07 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@16f7b4af: startup date [Thu Jun 20 18:57:07 CST 2019]; root of context hierarchy
2019-06-20 18:57:12 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-06-20 18:57:15 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$13e3a94f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-20 18:57:15 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$63cd7f6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-20 18:57:16 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-20 18:57:16 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-20 18:57:17 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-20 18:57:17 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-06-20 18:57:17 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-06-20 18:57:17 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-20 18:57:17 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-20 18:57:17 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-20 18:57:17 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-20 18:57:18 -Tomcat initialized with port(s): 8081 (http)
2019-06-20 18:57:18 -Initializing ProtocolHandler ["http-nio-8081"]
2019-06-20 18:57:18 -Starting service [Tomcat]
2019-06-20 18:57:18 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-06-20 18:57:18 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:\Java\JDK\jdk1.8.0_102\jre\bin;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-06-20 18:57:18 -Initializing Spring embedded WebApplicationContext
2019-06-20 18:57:18 -Root WebApplicationContext: initialization completed in 11127 ms
2019-06-20 18:57:19 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-06-20 18:57:19 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-06-20 18:57:19 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-06-20 18:57:19 -Mapping filter: 'requestContextFilter' to: [/*]
2019-06-20 18:57:19 -Filter xssFilter was not registered (disabled)
2019-06-20 18:57:19 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-06-20 18:57:19 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-06-20 18:57:19 -Servlet statViewServlet mapped to [/druid/*]
2019-06-20 18:57:19 -Servlet dispatcherServlet mapped to [/]
2019-06-20 18:57:23 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@16f7b4af: startup date [Thu Jun 20 18:57:07 CST 2019]; root of context hierarchy
2019-06-20 18:57:24 -Using default implementation for ThreadExecutor
2019-06-20 18:57:24 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-06-20 18:57:24 -Quartz Scheduler v.2.3.0 created.
2019-06-20 18:57:24 -RAMJobStore initialized.
2019-06-20 18:57:24 -Scheduler meta-data: Quartz Scheduler (v2.3.0) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-06-20 18:57:24 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-06-20 18:57:24 -Quartz scheduler version: 2.3.0
2019-06-20 18:57:24 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@4be7acd9
2019-06-20 18:57:24 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-06-20 18:57:25 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-06-20 18:57:27 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-06-20 18:57:27 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-20 18:57:27 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-20 18:57:27 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-20 18:57:27 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-06-20 18:57:27 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-20 18:57:27 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-06-20 18:57:27 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-06-20 18:57:27 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countOweController.getCountOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-06-20 18:57:27 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-20 18:57:27 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-06-20 18:57:27 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-20 18:57:27 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-20 18:57:27 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-06-20 18:57:27 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-20 18:57:27 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-20 18:57:27 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-06-20 18:57:27 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-20 18:57:27 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-06-20 18:57:27 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-06-20 18:57:27 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-06-20 18:57:28 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-06-20 18:57:28 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-06-20 18:57:28 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-06-20 18:57:28 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-20 18:57:28 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-06-20 18:57:28 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-06-20 18:57:28 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-06-20 18:57:28 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-06-20 18:57:28 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-20 18:57:28 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-06-20 18:57:28 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-06-20 18:57:28 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-20 18:57:28 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-20 18:57:28 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-06-20 18:57:28 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Integer> com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-06-20 18:57:28 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-06-20 18:57:28 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-06-20 18:57:28 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-06-20 18:57:28 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-06-20 18:57:28 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 18:57:28 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-06-20 18:57:28 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-06-20 18:57:28 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 18:57:28 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-06-20 18:57:28 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-06-20 18:57:28 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-06-20 18:57:28 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-06-20 18:57:28 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-06-20 18:57:28 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-06-20 18:57:28 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-06-20 18:57:28 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 18:57:28 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-06-20 18:57:28 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-06-20 18:57:28 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 18:57:28 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-06-20 18:57:28 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-06-20 18:57:28 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 18:57:28 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-06-20 18:57:28 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-06-20 18:57:28 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-06-20 18:57:28 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-06-20 18:57:28 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-06-20 18:57:28 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-06-20 18:57:28 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-06-20 18:57:28 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-06-20 18:57:28 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-06-20 18:57:28 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 18:57:28 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-06-20 18:57:28 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-06-20 18:57:28 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 18:57:28 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-06-20 18:57:28 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-06-20 18:57:28 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-06-20 18:57:28 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-06-20 18:57:28 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 18:57:28 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-06-20 18:57:28 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-06-20 18:57:28 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-06-20 18:57:28 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-20 18:57:28 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-20 18:57:28 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-06-20 18:57:28 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-06-20 18:57:28 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-06-20 18:57:28 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-06-20 18:57:28 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-06-20 18:57:28 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-06-20 18:57:28 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 18:57:28 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-06-20 18:57:28 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-06-20 18:57:28 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-06-20 18:57:28 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-06-20 18:57:28 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-06-20 18:57:28 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-06-20 18:57:28 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-06-20 18:57:28 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-06-20 18:57:28 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-06-20 18:57:28 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 18:57:28 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-06-20 18:57:28 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-06-20 18:57:28 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 18:57:28 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-06-20 18:57:28 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-06-20 18:57:28 -Mapped "{[/elec/elecUpLoad/importElecUser]}" onto public java.lang.String com.bootdo.elec.controller.ElecUpLoadController.importElecUser(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-20 18:57:28 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-06-20 18:57:28 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-06-20 18:57:28 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-06-20 18:57:28 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-06-20 18:57:28 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-06-20 18:57:28 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 18:57:28 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-06-20 18:57:28 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-06-20 18:57:28 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-06-20 18:57:28 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-06-20 18:57:28 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-06-20 18:57:28 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-06-20 18:57:28 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-06-20 18:57:28 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-06-20 18:57:28 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-06-20 18:57:28 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-06-20 18:57:28 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-06-20 18:57:28 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 18:57:28 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-06-20 18:57:28 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-06-20 18:57:28 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 18:57:28 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-06-20 18:57:28 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-06-20 18:57:28 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-20 18:57:28 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-06-20 18:57:28 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-06-20 18:57:28 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-06-20 18:57:28 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-06-20 18:57:28 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-06-20 18:57:28 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 18:57:28 -Mapped "{[/moneyList/moneyWZ/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.add()
2019-06-20 18:57:28 -Mapped "{[/moneyList/moneyWZ/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long)
2019-06-20 18:57:28 -Mapped "{[/moneyList/moneyWZ/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long[])
2019-06-20 18:57:28 -Mapped "{[/moneyList/moneyWZ/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.update(com.bootdo.elec.domain.ElecDO)
2019-06-20 18:57:28 -Mapped "{[/moneyList/moneyWZ/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyList.controller.MoneyListWZController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-06-20 18:57:28 -Mapped "{[/moneyList/moneyWZ/exprotWZ],methods=[GET]}" onto public void com.bootdo.moneyList.controller.MoneyListWZController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-06-20 18:57:28 -Mapped "{[/moneyList/moneyWZ/batchMoney],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.batchMoney(java.lang.Long[])
2019-06-20 18:57:28 -Mapped "{[/moneyList/moneyWZ],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
2019-06-20 18:57:28 -Mapped "{[/moneyList/moneyWZ/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 18:57:28 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-06-20 18:57:28 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-06-20 18:57:28 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-06-20 18:57:28 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-06-20 18:57:28 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 18:57:28 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-06-20 18:57:28 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-20 18:57:28 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-06-20 18:57:28 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 18:57:28 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-06-20 18:57:28 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-06-20 18:57:28 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-06-20 18:57:28 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-06-20 18:57:28 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 18:57:28 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-06-20 18:57:28 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-06-20 18:57:28 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-20 18:57:28 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 18:57:28 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-06-20 18:57:28 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-06-20 18:57:28 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-06-20 18:57:28 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-06-20 18:57:28 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 18:57:28 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-06-20 18:57:28 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-06-20 18:57:28 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-20 18:57:28 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 18:57:28 -Mapped "{[/moneyUpLoad/ElecLogUpLoad/importElecLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.importElecLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-20 18:57:28 -Mapped "{[/moneyUpLoad/ElecLogUpLoad/exprotElecLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.exprotElecLogExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-20 18:57:28 -Mapped "{[/moneyUpLoad/ElecLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.ElecLogUpLoad()
2019-06-20 18:57:28 -Mapped "{[/moneyUpLoad/HeatLogUpLoad/exprotHeatLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.exprotHeatLogExcel(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-20 18:57:28 -Mapped "{[/moneyUpLoad/HeatLogUpLoad/importHeatLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.importHeatLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-20 18:57:28 -Mapped "{[/moneyUpLoad/HeatLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.HeatLogUpLoad()
2019-06-20 18:57:28 -Mapped "{[/moneyUpLoad/WaterLogUpLoad/exprotWaterLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.exprotWaterLogExcel(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-20 18:57:28 -Mapped "{[/moneyUpLoad/WaterLogUpLoad/importWaterLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.importWaterLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-20 18:57:28 -Mapped "{[/moneyUpLoad/WaterLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.WaterLogLogUpLoad()
2019-06-20 18:57:28 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-06-20 18:57:28 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-06-20 18:57:28 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-06-20 18:57:28 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-06-20 18:57:28 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-06-20 18:57:28 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 18:57:28 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-06-20 18:57:28 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-06-20 18:57:28 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-06-20 18:57:28 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-06-20 18:57:28 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 18:57:28 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 18:57:28 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-06-20 18:57:28 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-06-20 18:57:28 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-06-20 18:57:28 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 18:57:28 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-06-20 18:57:28 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.batchRemove(java.lang.Long[])
2019-06-20 18:57:28 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 18:57:28 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-06-20 18:57:28 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-06-20 18:57:28 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-06-20 18:57:28 -Mapped "{[/print/print/batchPrint],methods=[POST]}" onto public java.util.List<com.bootdo.print.vo.PrintVo> com.bootdo.print.controller.PrintController.batchPrint(java.lang.Long[])
2019-06-20 18:57:28 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 18:57:28 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-06-20 18:57:28 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-06-20 18:57:28 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-06-20 18:57:28 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-06-20 18:57:28 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-06-20 18:57:28 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-06-20 18:57:28 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-06-20 18:57:28 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-06-20 18:57:28 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView(org.springframework.web.servlet.ModelAndView)
2019-06-20 18:57:28 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 18:57:28 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-06-20 18:57:28 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-06-20 18:57:28 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-06-20 18:57:28 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-06-20 18:57:28 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-06-20 18:57:28 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-20 18:57:28 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-06-20 18:57:28 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-06-20 18:57:28 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-06-20 18:57:28 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-06-20 18:57:28 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 18:57:28 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-06-20 18:57:28 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-06-20 18:57:28 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-06-20 18:57:28 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-06-20 18:57:28 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-06-20 18:57:28 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-06-20 18:57:28 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-06-20 18:57:28 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-06-20 18:57:28 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-06-20 18:57:28 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-06-20 18:57:28 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-06-20 18:57:28 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-06-20 18:57:28 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 18:57:28 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-06-20 18:57:28 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-06-20 18:57:28 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-06-20 18:57:28 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-06-20 18:57:28 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 18:57:28 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-06-20 18:57:28 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-06-20 18:57:28 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-06-20 18:57:28 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 18:57:28 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-06-20 18:57:28 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-06-20 18:57:28 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-06-20 18:57:28 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-06-20 18:57:28 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-06-20 18:57:28 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-06-20 18:57:28 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-06-20 18:57:28 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-06-20 18:57:28 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-06-20 18:57:28 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-06-20 18:57:28 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-06-20 18:57:28 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-06-20 18:57:28 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-06-20 18:57:28 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-06-20 18:57:28 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-06-20 18:57:28 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-06-20 18:57:28 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-06-20 18:57:28 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 18:57:28 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-06-20 18:57:28 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-06-20 18:57:28 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 18:57:28 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-06-20 18:57:28 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-06-20 18:57:28 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-06-20 18:57:28 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-06-20 18:57:28 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-06-20 18:57:28 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-06-20 18:57:28 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-06-20 18:57:28 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-06-20 18:57:28 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 18:57:28 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-06-20 18:57:28 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-06-20 18:57:28 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 18:57:28 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-06-20 18:57:28 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-06-20 18:57:28 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-20 18:57:28 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-06-20 18:57:28 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-06-20 18:57:28 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-06-20 18:57:28 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-06-20 18:57:28 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-06-20 18:57:28 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-06-20 18:57:29 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-06-20 18:57:29 -Initializing ExecutorService  'brokerChannelExecutor'
2019-06-20 18:57:29 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-20 18:57:30 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@16f7b4af: startup date [Thu Jun 20 18:57:07 CST 2019]; root of context hierarchy
2019-06-20 18:57:30 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-20 18:57:30 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-20 18:57:30 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-06-20 18:57:30 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-06-20 18:57:33 -Registering beans for JMX exposure on startup
2019-06-20 18:57:33 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-06-20 18:57:33 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-06-20 18:57:33 -Starting beans in phase 2147483647
2019-06-20 18:57:33 -Context refreshed
2019-06-20 18:57:33 -Found 1 custom documentation plugin(s)
2019-06-20 18:57:33 -Scanning for api listing references
2019-06-20 18:57:33 -Generating unique operation named: removeUsingPOST_1
2019-06-20 18:57:34 -Generating unique operation named: addUsingGET_1
2019-06-20 18:57:34 -Generating unique operation named: editUsingGET_1
2019-06-20 18:57:34 -Generating unique operation named: listUsingGET_1
2019-06-20 18:57:34 -Generating unique operation named: removeUsingPOST_2
2019-06-20 18:57:34 -Generating unique operation named: removeUsingPOST_3
2019-06-20 18:57:34 -Generating unique operation named: saveUsingPOST_1
2019-06-20 18:57:34 -Generating unique operation named: updateUsingGET_1
2019-06-20 18:57:34 -Generating unique operation named: updateUsingHEAD_1
2019-06-20 18:57:34 -Generating unique operation named: updateUsingPOST_1
2019-06-20 18:57:34 -Generating unique operation named: updateUsingPUT_1
2019-06-20 18:57:34 -Generating unique operation named: updateUsingPATCH_1
2019-06-20 18:57:34 -Generating unique operation named: updateUsingDELETE_1
2019-06-20 18:57:34 -Generating unique operation named: updateUsingOPTIONS_1
2019-06-20 18:57:34 -Generating unique operation named: updateUsingTRACE_1
2019-06-20 18:57:34 -Generating unique operation named: addUsingGET_2
2019-06-20 18:57:34 -Generating unique operation named: editUsingGET_2
2019-06-20 18:57:34 -Generating unique operation named: listUsingGET_2
2019-06-20 18:57:34 -Generating unique operation named: removeUsingPOST_4
2019-06-20 18:57:34 -Generating unique operation named: removeUsingPOST_5
2019-06-20 18:57:34 -Generating unique operation named: saveUsingPOST_2
2019-06-20 18:57:34 -Generating unique operation named: updateUsingPOST_2
2019-06-20 18:57:34 -Generating unique operation named: exprotExcelUsingGET_1
2019-06-20 18:57:34 -Generating unique operation named: addUsingGET_3
2019-06-20 18:57:34 -Generating unique operation named: editUsingGET_3
2019-06-20 18:57:34 -Generating unique operation named: listUsingGET_3
2019-06-20 18:57:34 -Generating unique operation named: removeUsingPOST_6
2019-06-20 18:57:34 -Generating unique operation named: removeUsingPOST_7
2019-06-20 18:57:34 -Generating unique operation named: saveUsingPOST_3
2019-06-20 18:57:34 -Generating unique operation named: updateUsingGET_2
2019-06-20 18:57:34 -Generating unique operation named: updateUsingHEAD_2
2019-06-20 18:57:34 -Generating unique operation named: updateUsingPOST_3
2019-06-20 18:57:34 -Generating unique operation named: updateUsingPUT_2
2019-06-20 18:57:34 -Generating unique operation named: updateUsingPATCH_2
2019-06-20 18:57:34 -Generating unique operation named: updateUsingDELETE_2
2019-06-20 18:57:34 -Generating unique operation named: updateUsingOPTIONS_2
2019-06-20 18:57:34 -Generating unique operation named: updateUsingTRACE_2
2019-06-20 18:57:34 -Generating unique operation named: addUsingGET_4
2019-06-20 18:57:34 -Generating unique operation named: editUsingGET_4
2019-06-20 18:57:34 -Generating unique operation named: listUsingGET_4
2019-06-20 18:57:34 -Generating unique operation named: removeUsingPOST_8
2019-06-20 18:57:34 -Generating unique operation named: removeUsingPOST_9
2019-06-20 18:57:34 -Generating unique operation named: saveUsingPOST_4
2019-06-20 18:57:34 -Generating unique operation named: updateUsingGET_3
2019-06-20 18:57:34 -Generating unique operation named: updateUsingHEAD_3
2019-06-20 18:57:34 -Generating unique operation named: updateUsingPOST_4
2019-06-20 18:57:34 -Generating unique operation named: updateUsingPUT_3
2019-06-20 18:57:34 -Generating unique operation named: updateUsingPATCH_3
2019-06-20 18:57:34 -Generating unique operation named: updateUsingDELETE_3
2019-06-20 18:57:34 -Generating unique operation named: updateUsingOPTIONS_3
2019-06-20 18:57:34 -Generating unique operation named: updateUsingTRACE_3
2019-06-20 18:57:34 -Generating unique operation named: ElecUsingGET_1
2019-06-20 18:57:34 -Generating unique operation named: addUsingGET_5
2019-06-20 18:57:34 -Generating unique operation named: editUsingGET_5
2019-06-20 18:57:34 -Generating unique operation named: listUsingGET_5
2019-06-20 18:57:34 -Generating unique operation named: removeUsingPOST_10
2019-06-20 18:57:34 -Generating unique operation named: removeUsingPOST_11
2019-06-20 18:57:35 -Generating unique operation named: saveUsingPOST_5
2019-06-20 18:57:35 -Generating unique operation named: updateUsingGET_4
2019-06-20 18:57:35 -Generating unique operation named: updateUsingHEAD_4
2019-06-20 18:57:35 -Generating unique operation named: updateUsingPOST_5
2019-06-20 18:57:35 -Generating unique operation named: updateUsingPUT_4
2019-06-20 18:57:35 -Generating unique operation named: updateUsingPATCH_4
2019-06-20 18:57:35 -Generating unique operation named: updateUsingDELETE_4
2019-06-20 18:57:35 -Generating unique operation named: updateUsingOPTIONS_4
2019-06-20 18:57:35 -Generating unique operation named: updateUsingTRACE_4
2019-06-20 18:57:35 -Generating unique operation named: editUsingGET_6
2019-06-20 18:57:35 -Generating unique operation named: listUsingGET_6
2019-06-20 18:57:35 -Generating unique operation named: updateUsingPOST_6
2019-06-20 18:57:35 -Generating unique operation named: addUsingGET_6
2019-06-20 18:57:35 -Generating unique operation named: editUsingGET_7
2019-06-20 18:57:35 -Generating unique operation named: exprotExcelUsingGET_2
2019-06-20 18:57:35 -Generating unique operation named: listUsingGET_7
2019-06-20 18:57:35 -Generating unique operation named: removeUsingPOST_12
2019-06-20 18:57:35 -Generating unique operation named: removeUsingPOST_13
2019-06-20 18:57:35 -Generating unique operation named: saveUsingPOST_6
2019-06-20 18:57:35 -Generating unique operation named: updateUsingGET_5
2019-06-20 18:57:35 -Generating unique operation named: updateUsingHEAD_5
2019-06-20 18:57:35 -Generating unique operation named: updateUsingPOST_7
2019-06-20 18:57:35 -Generating unique operation named: updateUsingPUT_5
2019-06-20 18:57:35 -Generating unique operation named: updateUsingPATCH_5
2019-06-20 18:57:35 -Generating unique operation named: updateUsingDELETE_5
2019-06-20 18:57:35 -Generating unique operation named: updateUsingOPTIONS_5
2019-06-20 18:57:35 -Generating unique operation named: updateUsingTRACE_5
2019-06-20 18:57:35 -Generating unique operation named: exprotExcelUsingGET_3
2019-06-20 18:57:35 -Generating unique operation named: addUsingGET_7
2019-06-20 18:57:35 -Generating unique operation named: editUsingGET_8
2019-06-20 18:57:35 -Generating unique operation named: listUsingGET_8
2019-06-20 18:57:35 -Generating unique operation named: removeUsingPOST_14
2019-06-20 18:57:35 -Generating unique operation named: removeUsingPOST_15
2019-06-20 18:57:35 -Generating unique operation named: saveUsingPOST_7
2019-06-20 18:57:35 -Generating unique operation named: updateUsingGET_6
2019-06-20 18:57:35 -Generating unique operation named: updateUsingHEAD_6
2019-06-20 18:57:35 -Generating unique operation named: updateUsingPOST_8
2019-06-20 18:57:35 -Generating unique operation named: updateUsingPUT_6
2019-06-20 18:57:35 -Generating unique operation named: updateUsingPATCH_6
2019-06-20 18:57:35 -Generating unique operation named: updateUsingDELETE_6
2019-06-20 18:57:35 -Generating unique operation named: updateUsingOPTIONS_6
2019-06-20 18:57:35 -Generating unique operation named: updateUsingTRACE_6
2019-06-20 18:57:35 -Generating unique operation named: addUsingGET_8
2019-06-20 18:57:35 -Generating unique operation named: editUsingGET_9
2019-06-20 18:57:35 -Generating unique operation named: listUsingGET_9
2019-06-20 18:57:35 -Generating unique operation named: removeUsingPOST_16
2019-06-20 18:57:35 -Generating unique operation named: removeUsingPOST_17
2019-06-20 18:57:35 -Generating unique operation named: saveUsingPOST_8
2019-06-20 18:57:35 -Generating unique operation named: updateUsingGET_7
2019-06-20 18:57:35 -Generating unique operation named: updateUsingHEAD_7
2019-06-20 18:57:35 -Generating unique operation named: updateUsingPOST_9
2019-06-20 18:57:35 -Generating unique operation named: updateUsingPUT_7
2019-06-20 18:57:35 -Generating unique operation named: updateUsingPATCH_7
2019-06-20 18:57:35 -Generating unique operation named: updateUsingDELETE_7
2019-06-20 18:57:35 -Generating unique operation named: updateUsingOPTIONS_7
2019-06-20 18:57:35 -Generating unique operation named: updateUsingTRACE_7
2019-06-20 18:57:35 -Generating unique operation named: addUsingGET_9
2019-06-20 18:57:35 -Generating unique operation named: editUsingGET_10
2019-06-20 18:57:35 -Generating unique operation named: infoUsingGET_1
2019-06-20 18:57:35 -Generating unique operation named: infoUsingHEAD_1
2019-06-20 18:57:35 -Generating unique operation named: infoUsingPOST_1
2019-06-20 18:57:35 -Generating unique operation named: infoUsingPUT_1
2019-06-20 18:57:35 -Generating unique operation named: infoUsingPATCH_1
2019-06-20 18:57:35 -Generating unique operation named: infoUsingDELETE_1
2019-06-20 18:57:35 -Generating unique operation named: infoUsingOPTIONS_1
2019-06-20 18:57:35 -Generating unique operation named: infoUsingTRACE_1
2019-06-20 18:57:35 -Generating unique operation named: listUsingGET_10
2019-06-20 18:57:35 -Generating unique operation named: removeUsingPOST_18
2019-06-20 18:57:35 -Generating unique operation named: removeUsingPOST_19
2019-06-20 18:57:35 -Generating unique operation named: saveUsingPOST_9
2019-06-20 18:57:35 -Generating unique operation named: updateUsingPOST_10
2019-06-20 18:57:35 -Generating unique operation named: listUsingGET_11
2019-06-20 18:57:35 -Generating unique operation named: removeUsingPOST_20
2019-06-20 18:57:35 -Generating unique operation named: welcomeUsingGET_1
2019-06-20 18:57:35 -Generating unique operation named: addUsingGET_10
2019-06-20 18:57:35 -Generating unique operation named: editUsingGET_11
2019-06-20 18:57:35 -Generating unique operation named: listUsingGET_12
2019-06-20 18:57:35 -Generating unique operation named: removeUsingPOST_21
2019-06-20 18:57:35 -Generating unique operation named: saveUsingPOST_10
2019-06-20 18:57:35 -Generating unique operation named: treeUsingGET_1
2019-06-20 18:57:35 -Generating unique operation named: treeUsingGET_2
2019-06-20 18:57:36 -Generating unique operation named: updateUsingPOST_11
2019-06-20 18:57:36 -Generating unique operation named: addUsingGET_11
2019-06-20 18:57:36 -Generating unique operation named: editUsingGET_12
2019-06-20 18:57:36 -Generating unique operation named: listUsingGET_13
2019-06-20 18:57:36 -Generating unique operation named: removeUsingPOST_22
2019-06-20 18:57:36 -Generating unique operation named: removeUsingPOST_23
2019-06-20 18:57:36 -Generating unique operation named: updateUsingPOST_12
2019-06-20 18:57:36 -Generating unique operation named: addUsingGET_12
2019-06-20 18:57:36 -Generating unique operation named: editUsingGET_13
2019-06-20 18:57:36 -Generating unique operation named: listUsingGET_14
2019-06-20 18:57:36 -Generating unique operation named: removeUsingPOST_24
2019-06-20 18:57:36 -Generating unique operation named: removeUsingPOST_25
2019-06-20 18:57:36 -Generating unique operation named: saveUsingPOST_11
2019-06-20 18:57:36 -Generating unique operation named: updateUsingGET_8
2019-06-20 18:57:36 -Generating unique operation named: updateUsingHEAD_8
2019-06-20 18:57:36 -Generating unique operation named: updateUsingPOST_13
2019-06-20 18:57:36 -Generating unique operation named: updateUsingPUT_8
2019-06-20 18:57:36 -Generating unique operation named: updateUsingPATCH_8
2019-06-20 18:57:36 -Generating unique operation named: updateUsingDELETE_8
2019-06-20 18:57:36 -Generating unique operation named: updateUsingOPTIONS_8
2019-06-20 18:57:36 -Generating unique operation named: updateUsingTRACE_8
2019-06-20 18:57:36 -Generating unique operation named: addUsingGET_13
2019-06-20 18:57:36 -Generating unique operation named: batchRemoveUsingPOST_1
2019-06-20 18:57:36 -Generating unique operation named: editUsingGET_14
2019-06-20 18:57:36 -Generating unique operation named: listUsingGET_15
2019-06-20 18:57:36 -Generating unique operation named: printEditUsingGET_1
2019-06-20 18:57:36 -Generating unique operation named: removeUsingPOST_26
2019-06-20 18:57:36 -Generating unique operation named: saveUsingPOST_12
2019-06-20 18:57:36 -Generating unique operation named: updateUsingGET_9
2019-06-20 18:57:36 -Generating unique operation named: updateUsingHEAD_9
2019-06-20 18:57:36 -Generating unique operation named: updateUsingPOST_14
2019-06-20 18:57:36 -Generating unique operation named: updateUsingPUT_9
2019-06-20 18:57:36 -Generating unique operation named: updateUsingPATCH_9
2019-06-20 18:57:36 -Generating unique operation named: updateUsingDELETE_9
2019-06-20 18:57:36 -Generating unique operation named: updateUsingOPTIONS_9
2019-06-20 18:57:36 -Generating unique operation named: updateUsingTRACE_9
2019-06-20 18:57:36 -Generating unique operation named: addUsingGET_14
2019-06-20 18:57:36 -Generating unique operation named: batchRemoveUsingPOST_2
2019-06-20 18:57:36 -Generating unique operation named: editUsingGET_15
2019-06-20 18:57:36 -Generating unique operation named: listUsingGET_16
2019-06-20 18:57:36 -Generating unique operation named: saveUsingPOST_13
2019-06-20 18:57:36 -Generating unique operation named: saveUsingPOST_14
2019-06-20 18:57:36 -Generating unique operation named: updateUsingPOST_15
2019-06-20 18:57:36 -Generating unique operation named: listUsingGET_17
2019-06-20 18:57:36 -Generating unique operation named: listUsingHEAD_1
2019-06-20 18:57:36 -Generating unique operation named: listUsingPOST_1
2019-06-20 18:57:36 -Generating unique operation named: listUsingPUT_1
2019-06-20 18:57:36 -Generating unique operation named: listUsingPATCH_1
2019-06-20 18:57:36 -Generating unique operation named: listUsingDELETE_1
2019-06-20 18:57:36 -Generating unique operation named: listUsingOPTIONS_1
2019-06-20 18:57:36 -Generating unique operation named: listUsingTRACE_1
2019-06-20 18:57:36 -Generating unique operation named: countDDUsingGET_1
2019-06-20 18:57:36 -Generating unique operation named: exportDDUsingGET_1
2019-06-20 18:57:36 -Generating unique operation named: exportElecYYUsingGET_1
2019-06-20 18:57:36 -Generating unique operation named: addUsingGET_15
2019-06-20 18:57:36 -Generating unique operation named: batchRemoveUsingPOST_3
2019-06-20 18:57:36 -Generating unique operation named: editUsingGET_16
2019-06-20 18:57:36 -Generating unique operation named: listUsingGET_18
2019-06-20 18:57:36 -Generating unique operation named: removeUsingPOST_27
2019-06-20 18:57:36 -Generating unique operation named: saveUsingPOST_15
2019-06-20 18:57:36 -Generating unique operation named: treeUsingGET_3
2019-06-20 18:57:36 -Generating unique operation named: treeViewUsingGET_1
2019-06-20 18:57:36 -Generating unique operation named: updateUsingPOST_16
2019-06-20 18:57:37 -Generating unique operation named: addUsingGET_16
2019-06-20 18:57:37 -Generating unique operation named: editUsingGET_17
2019-06-20 18:57:37 -Generating unique operation named: exprotExcelUsingGET_4
2019-06-20 18:57:37 -Generating unique operation named: listUsingGET_19
2019-06-20 18:57:37 -Generating unique operation named: removeUsingPOST_28
2019-06-20 18:57:37 -Generating unique operation named: removeUsingPOST_29
2019-06-20 18:57:37 -Generating unique operation named: saveUsingPOST_16
2019-06-20 18:57:37 -Generating unique operation named: updateUsingGET_10
2019-06-20 18:57:37 -Generating unique operation named: updateUsingHEAD_10
2019-06-20 18:57:37 -Generating unique operation named: updateUsingPOST_17
2019-06-20 18:57:37 -Generating unique operation named: updateUsingPUT_10
2019-06-20 18:57:37 -Generating unique operation named: updateUsingPATCH_10
2019-06-20 18:57:37 -Generating unique operation named: updateUsingDELETE_10
2019-06-20 18:57:37 -Generating unique operation named: updateUsingOPTIONS_10
2019-06-20 18:57:37 -Generating unique operation named: updateUsingTRACE_10
2019-06-20 18:57:37 -Generating unique operation named: exprotExcelUsingGET_5
2019-06-20 18:57:37 -Generating unique operation named: addUsingGET_17
2019-06-20 18:57:37 -Generating unique operation named: editUsingGET_18
2019-06-20 18:57:37 -Generating unique operation named: listUsingGET_20
2019-06-20 18:57:37 -Generating unique operation named: removeUsingPOST_30
2019-06-20 18:57:37 -Generating unique operation named: removeUsingPOST_31
2019-06-20 18:57:37 -Generating unique operation named: saveUsingPOST_17
2019-06-20 18:57:37 -Generating unique operation named: updateUsingGET_11
2019-06-20 18:57:37 -Generating unique operation named: updateUsingHEAD_11
2019-06-20 18:57:37 -Generating unique operation named: updateUsingPOST_18
2019-06-20 18:57:37 -Generating unique operation named: updateUsingPUT_11
2019-06-20 18:57:37 -Generating unique operation named: updateUsingPATCH_11
2019-06-20 18:57:37 -Generating unique operation named: updateUsingDELETE_11
2019-06-20 18:57:37 -Generating unique operation named: updateUsingOPTIONS_11
2019-06-20 18:57:37 -Generating unique operation named: updateUsingTRACE_11
2019-06-20 18:57:37 -Generating unique operation named: addUsingGET_18
2019-06-20 18:57:37 -Generating unique operation named: editUsingGET_19
2019-06-20 18:57:37 -Generating unique operation named: listUsingGET_21
2019-06-20 18:57:37 -Generating unique operation named: removeUsingPOST_32
2019-06-20 18:57:37 -Generating unique operation named: removeUsingPOST_33
2019-06-20 18:57:37 -Generating unique operation named: saveUsingPOST_18
2019-06-20 18:57:37 -Generating unique operation named: updateUsingGET_12
2019-06-20 18:57:37 -Generating unique operation named: updateUsingHEAD_12
2019-06-20 18:57:37 -Generating unique operation named: updateUsingPOST_19
2019-06-20 18:57:37 -Generating unique operation named: updateUsingPUT_12
2019-06-20 18:57:37 -Generating unique operation named: updateUsingPATCH_12
2019-06-20 18:57:37 -Generating unique operation named: updateUsingDELETE_12
2019-06-20 18:57:37 -Generating unique operation named: updateUsingOPTIONS_12
2019-06-20 18:57:37 -Generating unique operation named: updateUsingTRACE_12
2019-06-20 18:57:37 -Starting Quartz Scheduler now
2019-06-20 18:57:37 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-06-20 18:57:37 -Starting...
2019-06-20 18:57:37 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-06-20 18:57:37 -Started.
2019-06-20 18:57:37 -Starting ProtocolHandler ["http-nio-8081"]
2019-06-20 18:57:37 -Using a shared selector for servlet write/read
2019-06-20 18:57:37 -Tomcat started on port(s): 8081 (http) with context path ''
2019-06-20 18:57:37 -Started BootdoApplication in 32.539 seconds (JVM running for 34.106)
2019-06-20 18:57:37 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-06-20 18:57:37 -==> Parameters: 
2019-06-20 18:57:38 -<==      Total: 1
2019-06-20 18:57:47 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-06-20 18:57:47 -FrameworkServlet 'dispatcherServlet': initialization started
2019-06-20 18:57:47 -FrameworkServlet 'dispatcherServlet': initialization completed in 84 ms
2019-06-20 18:57:47 -Enabling session validation scheduler...
2019-06-20 18:57:47 -请求地址 : http://localhost:8081/login;JSESSIONID=89d085c3-5d32-4650-a377-671145f7fba3
2019-06-20 18:57:47 -HTTP METHOD : GET
2019-06-20 18:57:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-06-20 18:57:47 -参数 : [{}]
2019-06-20 18:57:47 -耗时 : 3
2019-06-20 18:57:47 -返回值 : login
2019-06-20 18:57:48 -请求地址 : http://localhost:8081/getVerify
2019-06-20 18:57:48 -HTTP METHOD : GET
2019-06-20 18:57:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-06-20 18:57:48 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@377c63cf, org.apache.shiro.web.servlet.ShiroHttpServletResponse@39bb8b50]
2019-06-20 18:57:48 -4549
2019-06-20 18:57:48 -耗时 : 512
2019-06-20 18:57:48 -返回值 : null
2019-06-20 18:57:54 -请求地址 : http://localhost:8081/login
2019-06-20 18:57:54 -HTTP METHOD : POST
2019-06-20 18:57:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-06-20 18:57:54 -参数 : [admin, 111111, 4549, org.apache.shiro.web.servlet.ShiroHttpServletRequest@29e2e628]
2019-06-20 18:57:54 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-06-20 18:57:54 -==> Parameters: admin(String)
2019-06-20 18:57:54 -<==      Total: 1
2019-06-20 18:57:54 -耗时 : 89
2019-06-20 18:57:54 -返回值 : {msg=操作成功, code=0}
2019-06-20 18:57:54 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-06-20 18:57:54 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-20 18:57:54 -==> Parameters: 1(Long), admin(String), 登录(String), 89(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-06-20 18:57:54.86(Timestamp)
2019-06-20 18:57:54 -请求地址 : http://localhost:8081/index
2019-06-20 18:57:54 -HTTP METHOD : GET
2019-06-20 18:57:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-20 18:57:54 -参数 : [{}]
2019-06-20 18:57:55 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-20 18:57:55 -<==    Updates: 1
2019-06-20 18:57:55 -==> Parameters: 1(Long)
2019-06-20 18:57:55 -<==      Total: 51
2019-06-20 18:57:55 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-20 18:57:55 -==> Parameters: 138(Long)
2019-06-20 18:57:55 -<==      Total: 1
2019-06-20 18:57:55 -耗时 : 187
2019-06-20 18:57:55 -返回值 : index_v1
2019-06-20 18:57:55 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-20 18:57:55 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 187(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-bullseye","url":"/moneyUpLoad/ElecLogUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"165","parentId":"106","text":"缴费上传"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":tru(String), 127.0.0.1(String), 2019-06-20 18:57:55.161(Timestamp)
2019-06-20 18:57:55 -<==    Updates: 1
2019-06-20 18:57:55 -请求地址 : http://localhost:8081/main
2019-06-20 18:57:55 -HTTP METHOD : GET
2019-06-20 18:57:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-20 18:57:55 -参数 : []
2019-06-20 18:57:55 -耗时 : 0
2019-06-20 18:57:55 -返回值 : main
2019-06-20 18:57:55 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-20 18:57:55 -HTTP METHOD : GET
2019-06-20 18:57:55 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-20 18:57:55 -参数 : []
2019-06-20 18:57:55 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-20 18:57:55 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-20 18:57:55 -<==      Total: 0
2019-06-20 18:57:55 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-20 18:57:55 -==> Parameters: 1(Long), 0(String)
2019-06-20 18:57:55 -<==      Total: 1
2019-06-20 18:57:55 -耗时 : 35
2019-06-20 18:57:55 -返回值 : com.bootdo.common.utils.PageUtils@120df9b7
2019-06-20 18:57:55 -请求地址 : http://localhost:8081/main
2019-06-20 18:57:55 -HTTP METHOD : GET
2019-06-20 18:57:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-20 18:57:55 -参数 : []
2019-06-20 18:57:55 -耗时 : 0
2019-06-20 18:57:55 -返回值 : main
2019-06-20 18:58:03 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-06-20 18:58:03 -==> Parameters: 1(Long)
2019-06-20 18:58:03 -<==      Total: 95
2019-06-20 18:58:03 -请求地址 : http://localhost:8081/elec/elecInto
2019-06-20 18:58:03 -HTTP METHOD : GET
2019-06-20 18:58:03 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.ElecInto
2019-06-20 18:58:03 -参数 : []
2019-06-20 18:58:03 -耗时 : 0
2019-06-20 18:58:03 -返回值 : elec/elecInto/elecInto
2019-06-20 18:58:24 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-06-20 18:58:24 -HTTP METHOD : GET
2019-06-20 18:58:24 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-06-20 18:58:24 -参数 : [ModelAndView: materialized View is [null]; model is null]
2019-06-20 18:58:24 -耗时 : 0
2019-06-20 18:58:24 -返回值 : system/dept/deptTree
2019-06-20 18:58:24 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-06-20 18:58:24 -HTTP METHOD : GET
2019-06-20 18:58:24 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-06-20 18:58:24 -参数 : []
2019-06-20 18:58:24 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-06-20 18:58:24 -==> Parameters: 
2019-06-20 18:58:24 -<==      Total: 3
2019-06-20 18:58:24 -耗时 : 40
2019-06-20 18:58:24 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-06-20 18:58:26 -请求地址 : http://localhost:8081/elec/elecInto/importElecIntoExcel
2019-06-20 18:58:26 -HTTP METHOD : POST
2019-06-20 18:58:26 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel
2019-06-20 18:58:26 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@12a41b34, com.bootdo.elec.vo.ElecVo@3f5046c5, org.apache.shiro.web.servlet.ShiroHttpServletResponse@7e2db168]
2019-06-20 18:58:27 -==>  Preparing: select * from elec WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-06-20 18:58:27 -==> Parameters: 2019-05(String), 2(String), 1-0001(String), 李文英(String)
2019-06-20 18:58:27 -<==      Total: 1
2019-06-20 18:58:27 -==>  Preparing: UPDATE ELEC SET ELEC_SUM = ELEC_SUM + ? WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-06-20 18:58:27 -==> Parameters: -100.08(BigDecimal), 2019-05(String), 2(String), 1-0001(String), 李文英(String)
2019-06-20 18:58:27 -<==    Updates: 1
2019-06-20 18:58:29 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 8]
2019-06-20 18:58:32 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-20 18:58:32 -==> Parameters: 1-0001(String), 李文英(String), B(String), 2(String), 1(String), 10(BigDecimal), 2019-06-20 18:58:32.977(Timestamp), 2019-05(String), admin(String), 2019-06-20 18:58:32.977(Timestamp), admin(String), null
2019-06-20 18:58:33 -<==    Updates: 1
2019-06-20 18:58:33 -==>  Preparing: insert into print ( `user_id`, `user_name`, `user_type`, `user_org`, `start`, `end`, `hu`, `elec_price`, `elec_amount`, `elec_cost`, `elec_sum`, `elec_money`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `heat_money`, `water_price`, `water_cost`, `water_sum`, `water_money`, `print_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-20 18:58:33 -==> Parameters: 1-0001(String), 李文英(String), B(String), 2(String), 10300(Integer), 10370(Integer), 1(Integer), 0.465(BigDecimal), 0.00(BigDecimal), 32.55(BigDecimal), -100.08(BigDecimal), 10(BigDecimal), null, null, null, null, null, null, null, null, null, null, 2019-05(String), admin(String), 2019-06-20 18:58:33.099(Timestamp), admin(String), null
2019-06-20 18:58:33 -{conn-10002, pstmt-20013} execute error. insert into print
		(
			`user_id`, 
			`user_name`, 
			`user_type`, 
			`user_org`, 
			`start`, 
			`end`, 
			`hu`, 
			`elec_price`, 
			`elec_amount`, 
			`elec_cost`, 
			`elec_sum`, 
			`elec_money`, 
			`heat_price`, 
			`heat_area`, 
			`heat_cost`, 
			`heat_sum`, 
			`heat_money`, 
			`water_price`, 
			`water_cost`, 
			`water_sum`, 
			`water_money`, 
			`print_date`, 
			`create_time`, 
			`create_by`, 
			`update_time`, 
			`update_by`, 
			`remark`
		)
		values
		(
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?
		)
com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'print_date' cannot be null
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:936)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy172.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy101.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy123.save(Unknown Source)
	at com.bootdo.print.service.impl.PrintServiceImpl.save(PrintServiceImpl.java:45)
	at com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(ElecIntoController.java:147)
	at com.bootdo.elec.controller.ElecIntoController$$FastClassBySpringCGLIB$$3f35846e.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:58)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.elec.controller.ElecIntoController$$EnhancerBySpringCGLIB$$36c56bdf.importElecIntoExcel(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-06-20 18:58:33 -Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]
2019-06-20 18:58:33 -SQLErrorCodes loaded: [DB2, Derby, H2, HDB, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase]
2019-06-20 18:58:33 -耗时 : 6377
2019-06-20 18:58:33 -返回值 : fail
2019-06-20 19:01:12 -Starting BootdoApplication on PC-201905091110 with PID 13164 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-06-20 19:01:12 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-06-20 19:01:12 -The following profiles are active: dev
2019-06-20 19:01:12 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@27953a83: startup date [Thu Jun 20 19:01:12 CST 2019]; root of context hierarchy
2019-06-20 19:01:16 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-06-20 19:01:19 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$bb290822] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-20 19:01:19 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$ad8236c9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-20 19:01:20 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-20 19:01:20 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-20 19:01:20 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-20 19:01:20 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-06-20 19:01:20 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-06-20 19:01:20 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-20 19:01:20 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-20 19:01:20 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-20 19:01:21 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-20 19:01:21 -Tomcat initialized with port(s): 8081 (http)
2019-06-20 19:01:22 -Initializing ProtocolHandler ["http-nio-8081"]
2019-06-20 19:01:22 -Starting service [Tomcat]
2019-06-20 19:01:22 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-06-20 19:01:22 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:\Java\JDK\jdk1.8.0_102\jre\bin;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-06-20 19:01:22 -Initializing Spring embedded WebApplicationContext
2019-06-20 19:01:22 -Root WebApplicationContext: initialization completed in 9885 ms
2019-06-20 19:01:23 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-06-20 19:01:23 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-06-20 19:01:23 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-06-20 19:01:23 -Mapping filter: 'requestContextFilter' to: [/*]
2019-06-20 19:01:23 -Filter xssFilter was not registered (disabled)
2019-06-20 19:01:23 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-06-20 19:01:23 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-06-20 19:01:23 -Servlet statViewServlet mapped to [/druid/*]
2019-06-20 19:01:23 -Servlet dispatcherServlet mapped to [/]
2019-06-20 19:01:26 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@27953a83: startup date [Thu Jun 20 19:01:12 CST 2019]; root of context hierarchy
2019-06-20 19:01:27 -Using default implementation for ThreadExecutor
2019-06-20 19:01:27 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-06-20 19:01:27 -Quartz Scheduler v.2.3.0 created.
2019-06-20 19:01:27 -RAMJobStore initialized.
2019-06-20 19:01:27 -Scheduler meta-data: Quartz Scheduler (v2.3.0) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-06-20 19:01:27 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-06-20 19:01:27 -Quartz scheduler version: 2.3.0
2019-06-20 19:01:27 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@75063bd0
2019-06-20 19:01:28 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-06-20 19:01:28 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-06-20 19:01:32 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-06-20 19:01:32 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-20 19:01:32 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-20 19:01:32 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-20 19:01:32 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-06-20 19:01:32 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-20 19:01:32 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-06-20 19:01:32 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countOweController.getCountOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-06-20 19:01:32 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-06-20 19:01:32 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-06-20 19:01:32 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-20 19:01:32 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-20 19:01:32 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-20 19:01:32 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-20 19:01:32 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-06-20 19:01:32 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-06-20 19:01:32 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-20 19:01:32 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-20 19:01:32 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-06-20 19:01:32 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-06-20 19:01:32 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-06-20 19:01:32 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-06-20 19:01:32 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-06-20 19:01:32 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-06-20 19:01:32 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-20 19:01:32 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-06-20 19:01:32 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-06-20 19:01:32 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-20 19:01:32 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-06-20 19:01:32 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-06-20 19:01:32 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-20 19:01:32 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-06-20 19:01:32 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-06-20 19:01:32 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Integer> com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-06-20 19:01:32 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-06-20 19:01:32 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-20 19:01:32 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-06-20 19:01:32 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-06-20 19:01:32 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-06-20 19:01:32 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-06-20 19:01:32 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 19:01:32 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-06-20 19:01:32 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-06-20 19:01:32 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-06-20 19:01:32 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-06-20 19:01:32 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-06-20 19:01:32 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 19:01:32 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-06-20 19:01:32 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-06-20 19:01:32 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-06-20 19:01:32 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-06-20 19:01:32 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 19:01:32 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-06-20 19:01:32 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-06-20 19:01:32 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-06-20 19:01:32 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-06-20 19:01:32 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 19:01:32 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 19:01:32 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-06-20 19:01:32 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-06-20 19:01:32 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-06-20 19:01:32 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-06-20 19:01:32 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-06-20 19:01:32 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-06-20 19:01:32 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-06-20 19:01:32 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-06-20 19:01:32 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-06-20 19:01:32 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 19:01:32 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-06-20 19:01:32 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-06-20 19:01:32 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 19:01:32 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-06-20 19:01:32 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-06-20 19:01:32 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-06-20 19:01:32 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-06-20 19:01:32 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 19:01:32 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-06-20 19:01:32 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-06-20 19:01:32 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-06-20 19:01:32 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-20 19:01:32 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-20 19:01:32 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-06-20 19:01:32 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-06-20 19:01:32 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-06-20 19:01:32 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-06-20 19:01:32 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-06-20 19:01:32 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-06-20 19:01:32 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 19:01:32 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-06-20 19:01:32 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-06-20 19:01:32 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-06-20 19:01:32 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-06-20 19:01:32 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-06-20 19:01:32 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-06-20 19:01:32 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-06-20 19:01:32 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-06-20 19:01:32 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-06-20 19:01:32 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 19:01:32 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-06-20 19:01:32 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-06-20 19:01:32 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 19:01:32 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-06-20 19:01:32 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-06-20 19:01:32 -Mapped "{[/elec/elecUpLoad/importElecUser]}" onto public java.lang.String com.bootdo.elec.controller.ElecUpLoadController.importElecUser(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-20 19:01:32 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-06-20 19:01:32 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-06-20 19:01:32 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-06-20 19:01:32 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-06-20 19:01:32 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-06-20 19:01:32 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 19:01:32 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-06-20 19:01:32 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-06-20 19:01:32 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-06-20 19:01:32 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-06-20 19:01:32 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-06-20 19:01:32 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-06-20 19:01:32 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-06-20 19:01:32 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-06-20 19:01:32 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-06-20 19:01:32 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-06-20 19:01:32 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-06-20 19:01:32 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 19:01:32 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-06-20 19:01:32 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-06-20 19:01:32 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 19:01:32 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-20 19:01:32 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-06-20 19:01:32 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-06-20 19:01:32 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-06-20 19:01:32 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-06-20 19:01:32 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-06-20 19:01:32 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-06-20 19:01:32 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 19:01:32 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-06-20 19:01:32 -Mapped "{[/moneyList/moneyWZ/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.add()
2019-06-20 19:01:32 -Mapped "{[/moneyList/moneyWZ/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long)
2019-06-20 19:01:32 -Mapped "{[/moneyList/moneyWZ/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long[])
2019-06-20 19:01:32 -Mapped "{[/moneyList/moneyWZ/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.update(com.bootdo.elec.domain.ElecDO)
2019-06-20 19:01:32 -Mapped "{[/moneyList/moneyWZ/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyList.controller.MoneyListWZController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-06-20 19:01:32 -Mapped "{[/moneyList/moneyWZ/exprotWZ],methods=[GET]}" onto public void com.bootdo.moneyList.controller.MoneyListWZController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-06-20 19:01:32 -Mapped "{[/moneyList/moneyWZ/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 19:01:32 -Mapped "{[/moneyList/moneyWZ],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
2019-06-20 19:01:32 -Mapped "{[/moneyList/moneyWZ/batchMoney],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.batchMoney(java.lang.Long[])
2019-06-20 19:01:32 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-06-20 19:01:32 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-06-20 19:01:32 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-06-20 19:01:32 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-06-20 19:01:32 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 19:01:32 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-06-20 19:01:32 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 19:01:32 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-20 19:01:32 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-06-20 19:01:32 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-06-20 19:01:32 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-06-20 19:01:32 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-06-20 19:01:32 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-06-20 19:01:32 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 19:01:32 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-06-20 19:01:32 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 19:01:32 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-20 19:01:32 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-06-20 19:01:32 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-06-20 19:01:32 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-06-20 19:01:32 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-06-20 19:01:32 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-06-20 19:01:32 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 19:01:32 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-06-20 19:01:32 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 19:01:32 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-06-20 19:01:32 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-20 19:01:32 -Mapped "{[/moneyUpLoad/ElecLogUpLoad/exprotElecLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.exprotElecLogExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-20 19:01:32 -Mapped "{[/moneyUpLoad/ElecLogUpLoad/importElecLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.importElecLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-20 19:01:32 -Mapped "{[/moneyUpLoad/ElecLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.ElecLogUpLoad()
2019-06-20 19:01:32 -Mapped "{[/moneyUpLoad/HeatLogUpLoad/exprotHeatLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.exprotHeatLogExcel(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-20 19:01:32 -Mapped "{[/moneyUpLoad/HeatLogUpLoad/importHeatLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.importHeatLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-20 19:01:32 -Mapped "{[/moneyUpLoad/HeatLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.HeatLogUpLoad()
2019-06-20 19:01:32 -Mapped "{[/moneyUpLoad/WaterLogUpLoad/exprotWaterLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.exprotWaterLogExcel(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-20 19:01:32 -Mapped "{[/moneyUpLoad/WaterLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.WaterLogLogUpLoad()
2019-06-20 19:01:32 -Mapped "{[/moneyUpLoad/WaterLogUpLoad/importWaterLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.importWaterLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-20 19:01:32 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-06-20 19:01:32 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-06-20 19:01:32 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-06-20 19:01:32 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-06-20 19:01:32 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-06-20 19:01:32 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 19:01:32 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-06-20 19:01:32 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-06-20 19:01:32 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 19:01:32 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-06-20 19:01:32 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-06-20 19:01:32 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 19:01:32 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-06-20 19:01:32 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-06-20 19:01:32 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-06-20 19:01:32 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 19:01:32 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-06-20 19:01:32 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.batchRemove(java.lang.Long[])
2019-06-20 19:01:32 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 19:01:32 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 19:01:32 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-06-20 19:01:32 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-06-20 19:01:32 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-06-20 19:01:32 -Mapped "{[/print/print/batchPrint],methods=[POST]}" onto public java.util.List<com.bootdo.print.vo.PrintVo> com.bootdo.print.controller.PrintController.batchPrint(java.lang.Long[])
2019-06-20 19:01:32 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-06-20 19:01:32 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-06-20 19:01:32 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-06-20 19:01:32 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-06-20 19:01:32 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-06-20 19:01:32 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-06-20 19:01:32 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-06-20 19:01:32 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 19:01:32 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-06-20 19:01:32 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView(org.springframework.web.servlet.ModelAndView)
2019-06-20 19:01:32 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-06-20 19:01:32 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-06-20 19:01:32 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-06-20 19:01:32 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-06-20 19:01:32 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-20 19:01:32 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-06-20 19:01:32 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-06-20 19:01:32 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-06-20 19:01:32 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-06-20 19:01:32 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-06-20 19:01:32 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 19:01:32 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-06-20 19:01:32 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-06-20 19:01:32 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-06-20 19:01:32 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-06-20 19:01:32 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-06-20 19:01:32 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-06-20 19:01:32 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-06-20 19:01:32 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-06-20 19:01:32 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-06-20 19:01:32 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-06-20 19:01:32 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-06-20 19:01:32 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-06-20 19:01:32 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 19:01:32 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-06-20 19:01:32 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-06-20 19:01:32 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-06-20 19:01:32 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-06-20 19:01:32 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 19:01:32 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-06-20 19:01:32 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-06-20 19:01:32 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-06-20 19:01:32 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 19:01:32 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-06-20 19:01:32 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-06-20 19:01:32 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-06-20 19:01:32 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-06-20 19:01:32 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-06-20 19:01:32 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-06-20 19:01:32 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-06-20 19:01:32 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-06-20 19:01:32 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-06-20 19:01:32 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-06-20 19:01:32 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-06-20 19:01:32 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-06-20 19:01:32 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-06-20 19:01:32 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-06-20 19:01:32 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-06-20 19:01:32 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-06-20 19:01:32 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-06-20 19:01:32 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 19:01:32 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-06-20 19:01:32 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 19:01:32 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-06-20 19:01:32 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-06-20 19:01:32 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-06-20 19:01:32 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-06-20 19:01:32 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-06-20 19:01:32 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-06-20 19:01:32 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-06-20 19:01:32 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-06-20 19:01:32 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-06-20 19:01:32 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 19:01:32 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-06-20 19:01:32 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-06-20 19:01:32 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 19:01:32 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-06-20 19:01:32 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-06-20 19:01:32 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-06-20 19:01:32 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-20 19:01:32 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-06-20 19:01:32 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-06-20 19:01:32 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-06-20 19:01:32 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-06-20 19:01:33 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-06-20 19:01:33 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-06-20 19:01:33 -Initializing ExecutorService  'brokerChannelExecutor'
2019-06-20 19:01:34 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-20 19:01:34 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@27953a83: startup date [Thu Jun 20 19:01:12 CST 2019]; root of context hierarchy
2019-06-20 19:01:34 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-20 19:01:34 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-20 19:01:34 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-06-20 19:01:35 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-06-20 19:01:37 -Registering beans for JMX exposure on startup
2019-06-20 19:01:37 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-06-20 19:01:37 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-06-20 19:01:37 -Starting beans in phase 2147483647
2019-06-20 19:01:37 -Context refreshed
2019-06-20 19:01:37 -Found 1 custom documentation plugin(s)
2019-06-20 19:01:37 -Scanning for api listing references
2019-06-20 19:01:38 -Generating unique operation named: removeUsingPOST_1
2019-06-20 19:01:38 -Generating unique operation named: addUsingGET_1
2019-06-20 19:01:38 -Generating unique operation named: editUsingGET_1
2019-06-20 19:01:38 -Generating unique operation named: listUsingGET_1
2019-06-20 19:01:38 -Generating unique operation named: removeUsingPOST_2
2019-06-20 19:01:38 -Generating unique operation named: removeUsingPOST_3
2019-06-20 19:01:38 -Generating unique operation named: saveUsingPOST_1
2019-06-20 19:01:38 -Generating unique operation named: updateUsingGET_1
2019-06-20 19:01:38 -Generating unique operation named: updateUsingHEAD_1
2019-06-20 19:01:38 -Generating unique operation named: updateUsingPOST_1
2019-06-20 19:01:38 -Generating unique operation named: updateUsingPUT_1
2019-06-20 19:01:38 -Generating unique operation named: updateUsingPATCH_1
2019-06-20 19:01:38 -Generating unique operation named: updateUsingDELETE_1
2019-06-20 19:01:38 -Generating unique operation named: updateUsingOPTIONS_1
2019-06-20 19:01:38 -Generating unique operation named: updateUsingTRACE_1
2019-06-20 19:01:38 -Generating unique operation named: addUsingGET_2
2019-06-20 19:01:38 -Generating unique operation named: editUsingGET_2
2019-06-20 19:01:38 -Generating unique operation named: listUsingGET_2
2019-06-20 19:01:38 -Generating unique operation named: removeUsingPOST_4
2019-06-20 19:01:38 -Generating unique operation named: removeUsingPOST_5
2019-06-20 19:01:38 -Generating unique operation named: saveUsingPOST_2
2019-06-20 19:01:38 -Generating unique operation named: updateUsingPOST_2
2019-06-20 19:01:38 -Generating unique operation named: exprotExcelUsingGET_1
2019-06-20 19:01:38 -Generating unique operation named: addUsingGET_3
2019-06-20 19:01:38 -Generating unique operation named: editUsingGET_3
2019-06-20 19:01:39 -Generating unique operation named: listUsingGET_3
2019-06-20 19:01:39 -Generating unique operation named: removeUsingPOST_6
2019-06-20 19:01:39 -Generating unique operation named: removeUsingPOST_7
2019-06-20 19:01:39 -Generating unique operation named: saveUsingPOST_3
2019-06-20 19:01:39 -Generating unique operation named: updateUsingGET_2
2019-06-20 19:01:39 -Generating unique operation named: updateUsingHEAD_2
2019-06-20 19:01:39 -Generating unique operation named: updateUsingPOST_3
2019-06-20 19:01:39 -Generating unique operation named: updateUsingPUT_2
2019-06-20 19:01:39 -Generating unique operation named: updateUsingPATCH_2
2019-06-20 19:01:39 -Generating unique operation named: updateUsingDELETE_2
2019-06-20 19:01:39 -Generating unique operation named: updateUsingOPTIONS_2
2019-06-20 19:01:39 -Generating unique operation named: updateUsingTRACE_2
2019-06-20 19:01:39 -Generating unique operation named: addUsingGET_4
2019-06-20 19:01:39 -Generating unique operation named: editUsingGET_4
2019-06-20 19:01:39 -Generating unique operation named: listUsingGET_4
2019-06-20 19:01:39 -Generating unique operation named: removeUsingPOST_8
2019-06-20 19:01:39 -Generating unique operation named: removeUsingPOST_9
2019-06-20 19:01:39 -Generating unique operation named: saveUsingPOST_4
2019-06-20 19:01:39 -Generating unique operation named: updateUsingGET_3
2019-06-20 19:01:39 -Generating unique operation named: updateUsingHEAD_3
2019-06-20 19:01:39 -Generating unique operation named: updateUsingPOST_4
2019-06-20 19:01:39 -Generating unique operation named: updateUsingPUT_3
2019-06-20 19:01:39 -Generating unique operation named: updateUsingPATCH_3
2019-06-20 19:01:39 -Generating unique operation named: updateUsingDELETE_3
2019-06-20 19:01:39 -Generating unique operation named: updateUsingOPTIONS_3
2019-06-20 19:01:39 -Generating unique operation named: updateUsingTRACE_3
2019-06-20 19:01:39 -Generating unique operation named: ElecUsingGET_1
2019-06-20 19:01:39 -Generating unique operation named: addUsingGET_5
2019-06-20 19:01:39 -Generating unique operation named: editUsingGET_5
2019-06-20 19:01:39 -Generating unique operation named: listUsingGET_5
2019-06-20 19:01:39 -Generating unique operation named: removeUsingPOST_10
2019-06-20 19:01:39 -Generating unique operation named: removeUsingPOST_11
2019-06-20 19:01:39 -Generating unique operation named: saveUsingPOST_5
2019-06-20 19:01:39 -Generating unique operation named: updateUsingGET_4
2019-06-20 19:01:39 -Generating unique operation named: updateUsingHEAD_4
2019-06-20 19:01:39 -Generating unique operation named: updateUsingPOST_5
2019-06-20 19:01:39 -Generating unique operation named: updateUsingPUT_4
2019-06-20 19:01:39 -Generating unique operation named: updateUsingPATCH_4
2019-06-20 19:01:39 -Generating unique operation named: updateUsingDELETE_4
2019-06-20 19:01:39 -Generating unique operation named: updateUsingOPTIONS_4
2019-06-20 19:01:39 -Generating unique operation named: updateUsingTRACE_4
2019-06-20 19:01:39 -Generating unique operation named: editUsingGET_6
2019-06-20 19:01:39 -Generating unique operation named: listUsingGET_6
2019-06-20 19:01:39 -Generating unique operation named: updateUsingPOST_6
2019-06-20 19:01:39 -Generating unique operation named: addUsingGET_6
2019-06-20 19:01:39 -Generating unique operation named: editUsingGET_7
2019-06-20 19:01:39 -Generating unique operation named: exprotExcelUsingGET_2
2019-06-20 19:01:39 -Generating unique operation named: listUsingGET_7
2019-06-20 19:01:39 -Generating unique operation named: removeUsingPOST_12
2019-06-20 19:01:39 -Generating unique operation named: removeUsingPOST_13
2019-06-20 19:01:39 -Generating unique operation named: saveUsingPOST_6
2019-06-20 19:01:39 -Generating unique operation named: updateUsingGET_5
2019-06-20 19:01:39 -Generating unique operation named: updateUsingHEAD_5
2019-06-20 19:01:39 -Generating unique operation named: updateUsingPOST_7
2019-06-20 19:01:39 -Generating unique operation named: updateUsingPUT_5
2019-06-20 19:01:39 -Generating unique operation named: updateUsingPATCH_5
2019-06-20 19:01:39 -Generating unique operation named: updateUsingDELETE_5
2019-06-20 19:01:39 -Generating unique operation named: updateUsingOPTIONS_5
2019-06-20 19:01:39 -Generating unique operation named: updateUsingTRACE_5
2019-06-20 19:01:39 -Generating unique operation named: exprotExcelUsingGET_3
2019-06-20 19:01:39 -Generating unique operation named: addUsingGET_7
2019-06-20 19:01:39 -Generating unique operation named: editUsingGET_8
2019-06-20 19:01:39 -Generating unique operation named: listUsingGET_8
2019-06-20 19:01:39 -Generating unique operation named: removeUsingPOST_14
2019-06-20 19:01:39 -Generating unique operation named: removeUsingPOST_15
2019-06-20 19:01:39 -Generating unique operation named: saveUsingPOST_7
2019-06-20 19:01:39 -Generating unique operation named: updateUsingGET_6
2019-06-20 19:01:39 -Generating unique operation named: updateUsingHEAD_6
2019-06-20 19:01:39 -Generating unique operation named: updateUsingPOST_8
2019-06-20 19:01:39 -Generating unique operation named: updateUsingPUT_6
2019-06-20 19:01:39 -Generating unique operation named: updateUsingPATCH_6
2019-06-20 19:01:39 -Generating unique operation named: updateUsingDELETE_6
2019-06-20 19:01:39 -Generating unique operation named: updateUsingOPTIONS_6
2019-06-20 19:01:39 -Generating unique operation named: updateUsingTRACE_6
2019-06-20 19:01:39 -Generating unique operation named: addUsingGET_8
2019-06-20 19:01:39 -Generating unique operation named: editUsingGET_9
2019-06-20 19:01:39 -Generating unique operation named: listUsingGET_9
2019-06-20 19:01:39 -Generating unique operation named: removeUsingPOST_16
2019-06-20 19:01:39 -Generating unique operation named: removeUsingPOST_17
2019-06-20 19:01:39 -Generating unique operation named: saveUsingPOST_8
2019-06-20 19:01:40 -Generating unique operation named: updateUsingGET_7
2019-06-20 19:01:40 -Generating unique operation named: updateUsingHEAD_7
2019-06-20 19:01:40 -Generating unique operation named: updateUsingPOST_9
2019-06-20 19:01:40 -Generating unique operation named: updateUsingPUT_7
2019-06-20 19:01:40 -Generating unique operation named: updateUsingPATCH_7
2019-06-20 19:01:40 -Generating unique operation named: updateUsingDELETE_7
2019-06-20 19:01:40 -Generating unique operation named: updateUsingOPTIONS_7
2019-06-20 19:01:40 -Generating unique operation named: updateUsingTRACE_7
2019-06-20 19:01:40 -Generating unique operation named: addUsingGET_9
2019-06-20 19:01:40 -Generating unique operation named: editUsingGET_10
2019-06-20 19:01:40 -Generating unique operation named: infoUsingGET_1
2019-06-20 19:01:40 -Generating unique operation named: infoUsingHEAD_1
2019-06-20 19:01:40 -Generating unique operation named: infoUsingPOST_1
2019-06-20 19:01:40 -Generating unique operation named: infoUsingPUT_1
2019-06-20 19:01:40 -Generating unique operation named: infoUsingPATCH_1
2019-06-20 19:01:40 -Generating unique operation named: infoUsingDELETE_1
2019-06-20 19:01:40 -Generating unique operation named: infoUsingOPTIONS_1
2019-06-20 19:01:40 -Generating unique operation named: infoUsingTRACE_1
2019-06-20 19:01:40 -Generating unique operation named: listUsingGET_10
2019-06-20 19:01:40 -Generating unique operation named: removeUsingPOST_18
2019-06-20 19:01:40 -Generating unique operation named: removeUsingPOST_19
2019-06-20 19:01:40 -Generating unique operation named: saveUsingPOST_9
2019-06-20 19:01:40 -Generating unique operation named: updateUsingPOST_10
2019-06-20 19:01:40 -Generating unique operation named: listUsingGET_11
2019-06-20 19:01:40 -Generating unique operation named: removeUsingPOST_20
2019-06-20 19:01:40 -Generating unique operation named: welcomeUsingGET_1
2019-06-20 19:01:40 -Generating unique operation named: addUsingGET_10
2019-06-20 19:01:40 -Generating unique operation named: editUsingGET_11
2019-06-20 19:01:40 -Generating unique operation named: listUsingGET_12
2019-06-20 19:01:40 -Generating unique operation named: removeUsingPOST_21
2019-06-20 19:01:40 -Generating unique operation named: saveUsingPOST_10
2019-06-20 19:01:40 -Generating unique operation named: treeUsingGET_1
2019-06-20 19:01:40 -Generating unique operation named: treeUsingGET_2
2019-06-20 19:01:40 -Generating unique operation named: updateUsingPOST_11
2019-06-20 19:01:40 -Generating unique operation named: addUsingGET_11
2019-06-20 19:01:40 -Generating unique operation named: editUsingGET_12
2019-06-20 19:01:40 -Generating unique operation named: listUsingGET_13
2019-06-20 19:01:40 -Generating unique operation named: removeUsingPOST_22
2019-06-20 19:01:40 -Generating unique operation named: removeUsingPOST_23
2019-06-20 19:01:40 -Generating unique operation named: updateUsingPOST_12
2019-06-20 19:01:40 -Generating unique operation named: addUsingGET_12
2019-06-20 19:01:40 -Generating unique operation named: editUsingGET_13
2019-06-20 19:01:40 -Generating unique operation named: listUsingGET_14
2019-06-20 19:01:40 -Generating unique operation named: removeUsingPOST_24
2019-06-20 19:01:40 -Generating unique operation named: removeUsingPOST_25
2019-06-20 19:01:40 -Generating unique operation named: saveUsingPOST_11
2019-06-20 19:01:40 -Generating unique operation named: updateUsingGET_8
2019-06-20 19:01:40 -Generating unique operation named: updateUsingHEAD_8
2019-06-20 19:01:40 -Generating unique operation named: updateUsingPOST_13
2019-06-20 19:01:40 -Generating unique operation named: updateUsingPUT_8
2019-06-20 19:01:40 -Generating unique operation named: updateUsingPATCH_8
2019-06-20 19:01:40 -Generating unique operation named: updateUsingDELETE_8
2019-06-20 19:01:40 -Generating unique operation named: updateUsingOPTIONS_8
2019-06-20 19:01:40 -Generating unique operation named: updateUsingTRACE_8
2019-06-20 19:01:40 -Generating unique operation named: addUsingGET_13
2019-06-20 19:01:40 -Generating unique operation named: batchRemoveUsingPOST_1
2019-06-20 19:01:40 -Generating unique operation named: editUsingGET_14
2019-06-20 19:01:40 -Generating unique operation named: listUsingGET_15
2019-06-20 19:01:40 -Generating unique operation named: printEditUsingGET_1
2019-06-20 19:01:40 -Generating unique operation named: removeUsingPOST_26
2019-06-20 19:01:40 -Generating unique operation named: saveUsingPOST_12
2019-06-20 19:01:40 -Generating unique operation named: updateUsingGET_9
2019-06-20 19:01:40 -Generating unique operation named: updateUsingHEAD_9
2019-06-20 19:01:40 -Generating unique operation named: updateUsingPOST_14
2019-06-20 19:01:40 -Generating unique operation named: updateUsingPUT_9
2019-06-20 19:01:40 -Generating unique operation named: updateUsingPATCH_9
2019-06-20 19:01:40 -Generating unique operation named: updateUsingDELETE_9
2019-06-20 19:01:41 -Generating unique operation named: updateUsingOPTIONS_9
2019-06-20 19:01:41 -Generating unique operation named: updateUsingTRACE_9
2019-06-20 19:01:41 -Generating unique operation named: addUsingGET_14
2019-06-20 19:01:41 -Generating unique operation named: batchRemoveUsingPOST_2
2019-06-20 19:01:41 -Generating unique operation named: editUsingGET_15
2019-06-20 19:01:41 -Generating unique operation named: listUsingGET_16
2019-06-20 19:01:41 -Generating unique operation named: saveUsingPOST_13
2019-06-20 19:01:41 -Generating unique operation named: saveUsingPOST_14
2019-06-20 19:01:41 -Generating unique operation named: updateUsingPOST_15
2019-06-20 19:01:41 -Generating unique operation named: listUsingGET_17
2019-06-20 19:01:41 -Generating unique operation named: listUsingHEAD_1
2019-06-20 19:01:41 -Generating unique operation named: listUsingPOST_1
2019-06-20 19:01:41 -Generating unique operation named: listUsingPUT_1
2019-06-20 19:01:41 -Generating unique operation named: listUsingPATCH_1
2019-06-20 19:01:41 -Generating unique operation named: listUsingDELETE_1
2019-06-20 19:01:41 -Generating unique operation named: listUsingOPTIONS_1
2019-06-20 19:01:41 -Generating unique operation named: listUsingTRACE_1
2019-06-20 19:01:41 -Generating unique operation named: countDDUsingGET_1
2019-06-20 19:01:41 -Generating unique operation named: exportDDUsingGET_1
2019-06-20 19:01:41 -Generating unique operation named: exportElecYYUsingGET_1
2019-06-20 19:01:41 -Generating unique operation named: addUsingGET_15
2019-06-20 19:01:41 -Generating unique operation named: batchRemoveUsingPOST_3
2019-06-20 19:01:41 -Generating unique operation named: editUsingGET_16
2019-06-20 19:01:41 -Generating unique operation named: listUsingGET_18
2019-06-20 19:01:41 -Generating unique operation named: removeUsingPOST_27
2019-06-20 19:01:41 -Generating unique operation named: saveUsingPOST_15
2019-06-20 19:01:41 -Generating unique operation named: treeUsingGET_3
2019-06-20 19:01:41 -Generating unique operation named: treeViewUsingGET_1
2019-06-20 19:01:41 -Generating unique operation named: updateUsingPOST_16
2019-06-20 19:01:41 -Generating unique operation named: addUsingGET_16
2019-06-20 19:01:41 -Generating unique operation named: editUsingGET_17
2019-06-20 19:01:41 -Generating unique operation named: exprotExcelUsingGET_4
2019-06-20 19:01:41 -Generating unique operation named: listUsingGET_19
2019-06-20 19:01:41 -Generating unique operation named: removeUsingPOST_28
2019-06-20 19:01:41 -Generating unique operation named: removeUsingPOST_29
2019-06-20 19:01:41 -Generating unique operation named: saveUsingPOST_16
2019-06-20 19:01:41 -Generating unique operation named: updateUsingGET_10
2019-06-20 19:01:41 -Generating unique operation named: updateUsingHEAD_10
2019-06-20 19:01:41 -Generating unique operation named: updateUsingPOST_17
2019-06-20 19:01:41 -Generating unique operation named: updateUsingPUT_10
2019-06-20 19:01:41 -Generating unique operation named: updateUsingPATCH_10
2019-06-20 19:01:41 -Generating unique operation named: updateUsingDELETE_10
2019-06-20 19:01:41 -Generating unique operation named: updateUsingOPTIONS_10
2019-06-20 19:01:41 -Generating unique operation named: updateUsingTRACE_10
2019-06-20 19:01:41 -Generating unique operation named: exprotExcelUsingGET_5
2019-06-20 19:01:41 -Generating unique operation named: addUsingGET_17
2019-06-20 19:01:41 -Generating unique operation named: editUsingGET_18
2019-06-20 19:01:41 -Generating unique operation named: listUsingGET_20
2019-06-20 19:01:41 -Generating unique operation named: removeUsingPOST_30
2019-06-20 19:01:41 -Generating unique operation named: removeUsingPOST_31
2019-06-20 19:01:41 -Generating unique operation named: saveUsingPOST_17
2019-06-20 19:01:41 -Generating unique operation named: updateUsingGET_11
2019-06-20 19:01:41 -Generating unique operation named: updateUsingHEAD_11
2019-06-20 19:01:41 -Generating unique operation named: updateUsingPOST_18
2019-06-20 19:01:41 -Generating unique operation named: updateUsingPUT_11
2019-06-20 19:01:41 -Generating unique operation named: updateUsingPATCH_11
2019-06-20 19:01:41 -Generating unique operation named: updateUsingDELETE_11
2019-06-20 19:01:41 -Generating unique operation named: updateUsingOPTIONS_11
2019-06-20 19:01:41 -Generating unique operation named: updateUsingTRACE_11
2019-06-20 19:01:41 -Generating unique operation named: addUsingGET_18
2019-06-20 19:01:41 -Generating unique operation named: editUsingGET_19
2019-06-20 19:01:41 -Generating unique operation named: listUsingGET_21
2019-06-20 19:01:41 -Generating unique operation named: removeUsingPOST_32
2019-06-20 19:01:41 -Generating unique operation named: removeUsingPOST_33
2019-06-20 19:01:41 -Generating unique operation named: saveUsingPOST_18
2019-06-20 19:01:41 -Generating unique operation named: updateUsingGET_12
2019-06-20 19:01:41 -Generating unique operation named: updateUsingHEAD_12
2019-06-20 19:01:41 -Generating unique operation named: updateUsingPOST_19
2019-06-20 19:01:41 -Generating unique operation named: updateUsingPUT_12
2019-06-20 19:01:41 -Generating unique operation named: updateUsingPATCH_12
2019-06-20 19:01:41 -Generating unique operation named: updateUsingDELETE_12
2019-06-20 19:01:41 -Generating unique operation named: updateUsingOPTIONS_12
2019-06-20 19:01:41 -Generating unique operation named: updateUsingTRACE_12
2019-06-20 19:01:42 -Starting Quartz Scheduler now
2019-06-20 19:01:42 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-06-20 19:01:42 -Starting...
2019-06-20 19:01:42 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-06-20 19:01:42 -Started.
2019-06-20 19:01:42 -Starting ProtocolHandler ["http-nio-8081"]
2019-06-20 19:01:42 -Using a shared selector for servlet write/read
2019-06-20 19:01:42 -Tomcat started on port(s): 8081 (http) with context path ''
2019-06-20 19:01:42 -Started BootdoApplication in 32.042 seconds (JVM running for 33.531)
2019-06-20 19:01:42 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-06-20 19:01:42 -==> Parameters: 
2019-06-20 19:01:42 -<==      Total: 1
2019-06-20 19:02:33 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-06-20 19:02:51 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-06-20 19:02:51 -FrameworkServlet 'dispatcherServlet': initialization started
2019-06-20 19:02:51 -FrameworkServlet 'dispatcherServlet': initialization completed in 59 ms
2019-06-20 19:02:51 -Enabling session validation scheduler...
2019-06-20 19:02:51 -请求地址 : http://localhost:8081/login;JSESSIONID=f12bc74a-7f8e-40ac-af78-d7243c2b7d0e
2019-06-20 19:02:51 -HTTP METHOD : GET
2019-06-20 19:02:51 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-06-20 19:02:51 -参数 : [{}]
2019-06-20 19:02:51 -耗时 : 7
2019-06-20 19:02:51 -返回值 : login
2019-06-20 19:02:52 -请求地址 : http://localhost:8081/getVerify
2019-06-20 19:02:52 -HTTP METHOD : GET
2019-06-20 19:02:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-06-20 19:02:52 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@34cf174e, org.apache.shiro.web.servlet.ShiroHttpServletResponse@3a08efa7]
2019-06-20 19:02:53 -8099
2019-06-20 19:02:53 -耗时 : 438
2019-06-20 19:02:53 -返回值 : null
2019-06-20 19:02:56 -请求地址 : http://localhost:8081/login
2019-06-20 19:02:56 -HTTP METHOD : POST
2019-06-20 19:02:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-06-20 19:02:56 -参数 : [admin, 111111, 8099, org.apache.shiro.web.servlet.ShiroHttpServletRequest@15e0929f]
2019-06-20 19:02:56 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-06-20 19:02:56 -==> Parameters: admin(String)
2019-06-20 19:02:56 -<==      Total: 1
2019-06-20 19:02:56 -耗时 : 71
2019-06-20 19:02:56 -返回值 : {msg=操作成功, code=0}
2019-06-20 19:02:57 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-06-20 19:02:57 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-20 19:02:57 -==> Parameters: 1(Long), admin(String), 登录(String), 71(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-06-20 19:02:57.045(Timestamp)
2019-06-20 19:02:57 -请求地址 : http://localhost:8081/index
2019-06-20 19:02:57 -HTTP METHOD : GET
2019-06-20 19:02:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-20 19:02:57 -参数 : [{}]
2019-06-20 19:02:57 -<==    Updates: 1
2019-06-20 19:02:57 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-20 19:02:57 -==> Parameters: 1(Long)
2019-06-20 19:02:57 -<==      Total: 51
2019-06-20 19:02:57 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-20 19:02:57 -==> Parameters: 138(Long)
2019-06-20 19:02:57 -<==      Total: 1
2019-06-20 19:02:57 -耗时 : 113
2019-06-20 19:02:57 -返回值 : index_v1
2019-06-20 19:02:57 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-20 19:02:57 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 113(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-bullseye","url":"/moneyUpLoad/ElecLogUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"165","parentId":"106","text":"缴费上传"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":tru(String), 127.0.0.1(String), 2019-06-20 19:02:57.275(Timestamp)
2019-06-20 19:02:57 -<==    Updates: 1
2019-06-20 19:02:57 -请求地址 : http://localhost:8081/main
2019-06-20 19:02:57 -HTTP METHOD : GET
2019-06-20 19:02:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-20 19:02:57 -参数 : []
2019-06-20 19:02:57 -耗时 : 0
2019-06-20 19:02:57 -返回值 : main
2019-06-20 19:02:57 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-20 19:02:57 -HTTP METHOD : GET
2019-06-20 19:02:57 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-20 19:02:57 -参数 : []
2019-06-20 19:02:57 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-20 19:02:57 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-20 19:02:57 -<==      Total: 0
2019-06-20 19:02:57 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-20 19:02:57 -==> Parameters: 1(Long), 0(String)
2019-06-20 19:02:57 -<==      Total: 1
2019-06-20 19:02:57 -耗时 : 56
2019-06-20 19:02:57 -返回值 : com.bootdo.common.utils.PageUtils@20d4346a
2019-06-20 19:02:57 -请求地址 : http://localhost:8081/main
2019-06-20 19:02:57 -HTTP METHOD : GET
2019-06-20 19:02:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-20 19:02:57 -参数 : []
2019-06-20 19:02:57 -耗时 : 0
2019-06-20 19:02:57 -返回值 : main
2019-06-20 19:03:08 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-06-20 19:03:08 -==> Parameters: 1(Long)
2019-06-20 19:03:08 -<==      Total: 95
2019-06-20 19:03:08 -请求地址 : http://localhost:8081/elec/elecInto
2019-06-20 19:03:08 -HTTP METHOD : GET
2019-06-20 19:03:08 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.ElecInto
2019-06-20 19:03:08 -参数 : []
2019-06-20 19:03:08 -耗时 : 0
2019-06-20 19:03:08 -返回值 : elec/elecInto/elecInto
2019-06-20 19:03:15 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-06-20 19:03:15 -HTTP METHOD : GET
2019-06-20 19:03:15 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-06-20 19:03:15 -参数 : [ModelAndView: materialized View is [null]; model is null]
2019-06-20 19:03:15 -耗时 : 1
2019-06-20 19:03:15 -返回值 : system/dept/deptTree
2019-06-20 19:03:15 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-06-20 19:03:15 -HTTP METHOD : GET
2019-06-20 19:03:15 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-06-20 19:03:15 -参数 : []
2019-06-20 19:03:15 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-06-20 19:03:15 -==> Parameters: 
2019-06-20 19:03:15 -<==      Total: 3
2019-06-20 19:03:15 -耗时 : 46
2019-06-20 19:03:15 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-06-20 19:03:17 -请求地址 : http://localhost:8081/elec/elecInto/importElecIntoExcel
2019-06-20 19:03:17 -HTTP METHOD : POST
2019-06-20 19:03:17 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel
2019-06-20 19:03:17 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@1fe4fd12, com.bootdo.elec.vo.ElecVo@8dd10be, org.apache.shiro.web.servlet.ShiroHttpServletResponse@43cfb31]
2019-06-20 19:03:18 -==>  Preparing: select * from elec WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-06-20 19:03:18 -==> Parameters: 2019-05(String), 2(String), 1-0001(String), 李文英(String)
2019-06-20 19:03:18 -<==      Total: 1
2019-06-20 19:03:18 -==>  Preparing: UPDATE ELEC SET ELEC_SUM = ELEC_SUM + ? WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-06-20 19:03:18 -==> Parameters: -200.16(BigDecimal), 2019-05(String), 2(String), 1-0001(String), 李文英(String)
2019-06-20 19:03:18 -<==    Updates: 1
2019-06-20 19:03:22 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-20 19:03:22 -==> Parameters: 1-0001(String), 李文英(String), B(String), 2(String), 1(String), 10(BigDecimal), 2019-06-20 19:03:22.017(Timestamp), 2019-05(String), admin(String), 2019-06-20 19:03:22.017(Timestamp), admin(String), null
2019-06-20 19:03:22 -<==    Updates: 1
2019-06-20 19:03:22 -==>  Preparing: insert into print ( `user_id`, `user_name`, `user_type`, `user_org`, `start`, `end`, `hu`, `elec_price`, `elec_amount`, `elec_cost`, `elec_sum`, `elec_money`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `heat_money`, `water_price`, `water_cost`, `water_sum`, `water_money`, `print_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-20 19:03:22 -==> Parameters: 1-0001(String), 李文英(String), B(String), 2(String), 10300(Integer), 10370(Integer), 1(Integer), 0.465(BigDecimal), 0.00(BigDecimal), 32.55(BigDecimal), -200.16(BigDecimal), 10(BigDecimal), null, null, null, null, null, null, null, null, null, 2019-06-20 19:03:22.092(Timestamp), 2019-05(String), admin(String), 2019-06-20 19:03:22.092(Timestamp), admin(String), null
2019-06-20 19:03:22 -<==    Updates: 1
2019-06-20 19:03:22 -==>  Preparing: select * from elec WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-06-20 19:03:22 -==> Parameters: 2019-05(String), 2(String), 1-0004(String), 姜海龙(String)
2019-06-20 19:03:22 -<==      Total: 1
2019-06-20 19:03:22 -==>  Preparing: UPDATE ELEC SET ELEC_SUM = ELEC_SUM + ? WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-06-20 19:03:22 -==> Parameters: -106.02(BigDecimal), 2019-05(String), 2(String), 1-0004(String), 姜海龙(String)
2019-06-20 19:03:22 -<==    Updates: 1
2019-06-20 19:03:25 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-20 19:03:25 -==> Parameters: 1-0004(String), 姜海龙(String), B(String), 2(String), 1(String), 20(BigDecimal), 2019-06-20 19:03:25.154(Timestamp), 2019-05(String), admin(String), 2019-06-20 19:03:25.154(Timestamp), admin(String), null
2019-06-20 19:03:25 -<==    Updates: 1
2019-06-20 19:03:25 -==>  Preparing: insert into print ( `user_id`, `user_name`, `user_type`, `user_org`, `start`, `end`, `hu`, `elec_price`, `elec_amount`, `elec_cost`, `elec_sum`, `elec_money`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `heat_money`, `water_price`, `water_cost`, `water_sum`, `water_money`, `print_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-20 19:03:25 -==> Parameters: 1-0004(String), 姜海龙(String), B(String), 2(String), 1553(Integer), 1689(Integer), 1(Integer), 0.465(BigDecimal), 0.00(BigDecimal), 63.24(BigDecimal), -106.02(BigDecimal), 20(BigDecimal), null, null, null, null, null, null, null, null, null, 2019-06-20 19:03:25.244(Timestamp), 2019-05(String), admin(String), 2019-06-20 19:03:25.244(Timestamp), admin(String), null
2019-06-20 19:03:25 -<==    Updates: 1
2019-06-20 19:03:25 -耗时 : 7758
2019-06-20 19:03:25 -返回值 : success
2019-06-20 19:13:11 -请求地址 : http://localhost:8081/elec/elecInto/importElecIntoExcel
2019-06-20 19:13:11 -HTTP METHOD : POST
2019-06-20 19:13:11 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel
2019-06-20 19:13:11 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@733501c5, com.bootdo.elec.vo.ElecVo@30290afe, org.apache.shiro.web.servlet.ShiroHttpServletResponse@428cb0fe]
2019-06-20 19:13:11 -==>  Preparing: select * from elec WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-06-20 19:13:11 -==> Parameters: 2019-05(String), 2(String), 1-0001(String), 李文英(String)
2019-06-20 19:13:11 -<==      Total: 1
2019-06-20 19:13:11 -==>  Preparing: UPDATE ELEC SET ELEC_SUM = ELEC_SUM + ? WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-06-20 19:13:11 -==> Parameters: 0.00(BigDecimal), 2019-05(String), 2(String), 1-0001(String), 李文英(String)
2019-06-20 19:13:11 -<==    Updates: 1
2019-06-20 19:13:14 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-20 19:13:14 -==> Parameters: 1-0001(String), 李文英(String), B(String), 2(String), 1(String), 10(BigDecimal), 2019-06-20 19:13:14.042(Timestamp), 2019-05(String), admin(String), 2019-06-20 19:13:14.042(Timestamp), admin(String), null
2019-06-20 19:13:14 -<==    Updates: 1
2019-06-20 19:13:14 -==>  Preparing: insert into print ( `user_id`, `user_name`, `user_type`, `user_org`, `start`, `end`, `hu`, `elec_price`, `elec_amount`, `elec_cost`, `elec_sum`, `elec_money`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `heat_money`, `water_price`, `water_cost`, `water_sum`, `water_money`, `print_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-20 19:13:14 -==> Parameters: 1-0001(String), 李文英(String), B(String), 2(String), 10300(Integer), 10370(Integer), 1(Integer), 0.465(BigDecimal), 0.00(BigDecimal), 32.55(BigDecimal), 0.00(BigDecimal), 10(BigDecimal), null, null, null, null, null, null, null, null, null, 2019-06-20 19:13:14.095(Timestamp), 2019-05(String), admin(String), 2019-06-20 19:13:14.095(Timestamp), admin(String), null
2019-06-20 19:13:14 -<==    Updates: 1
2019-06-20 19:13:14 -==>  Preparing: select * from elec WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-06-20 19:13:14 -==> Parameters: 2019-05(String), 2(String), 1-0004(String), 姜海龙(String)
2019-06-20 19:13:14 -<==      Total: 1
2019-06-20 19:13:14 -==>  Preparing: UPDATE ELEC SET ELEC_SUM = ELEC_SUM + ? WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-06-20 19:13:14 -==> Parameters: 0.00(BigDecimal), 2019-05(String), 2(String), 1-0004(String), 姜海龙(String)
2019-06-20 19:13:14 -<==    Updates: 1
2019-06-20 19:13:16 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-20 19:13:16 -==> Parameters: 1-0004(String), 姜海龙(String), B(String), 2(String), 1(String), 20(BigDecimal), 2019-06-20 19:13:16.365(Timestamp), 2019-05(String), admin(String), 2019-06-20 19:13:16.365(Timestamp), admin(String), null
2019-06-20 19:13:16 -<==    Updates: 1
2019-06-20 19:13:16 -==>  Preparing: insert into print ( `user_id`, `user_name`, `user_type`, `user_org`, `start`, `end`, `hu`, `elec_price`, `elec_amount`, `elec_cost`, `elec_sum`, `elec_money`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `heat_money`, `water_price`, `water_cost`, `water_sum`, `water_money`, `print_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-20 19:13:16 -==> Parameters: 1-0004(String), 姜海龙(String), B(String), 2(String), 1553(Integer), 1689(Integer), 1(Integer), 0.465(BigDecimal), 0.00(BigDecimal), 63.24(BigDecimal), 0.00(BigDecimal), 20(BigDecimal), null, null, null, null, null, null, null, null, null, 2019-06-20 19:13:16.412(Timestamp), 2019-05(String), admin(String), 2019-06-20 19:13:16.413(Timestamp), admin(String), null
2019-06-20 19:13:16 -<==    Updates: 1
2019-06-20 19:13:16 -耗时 : 4785
2019-06-20 19:13:16 -返回值 : success
2019-06-20 19:25:34 -Starting BootdoApplication on PC-201905091110 with PID 7812 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-06-20 19:25:34 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-06-20 19:25:34 -The following profiles are active: dev
2019-06-20 19:25:34 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4bef0fe3: startup date [Thu Jun 20 19:25:34 CST 2019]; root of context hierarchy
2019-06-20 19:25:41 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-06-20 19:25:44 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d27ca5f7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-20 19:25:44 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$c4d5d49e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-20 19:25:45 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-20 19:25:46 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-20 19:25:46 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-20 19:25:46 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-06-20 19:25:46 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-06-20 19:25:46 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-20 19:25:46 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-20 19:25:46 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-20 19:25:46 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-20 19:25:47 -Tomcat initialized with port(s): 8081 (http)
2019-06-20 19:25:47 -Initializing ProtocolHandler ["http-nio-8081"]
2019-06-20 19:25:47 -Starting service [Tomcat]
2019-06-20 19:25:47 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-06-20 19:25:47 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:\Java\JDK\jdk1.8.0_102\jre\bin;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-06-20 19:25:48 -Initializing Spring embedded WebApplicationContext
2019-06-20 19:25:48 -Root WebApplicationContext: initialization completed in 13650 ms
2019-06-20 19:25:49 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-06-20 19:25:49 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-06-20 19:25:49 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-06-20 19:25:49 -Mapping filter: 'requestContextFilter' to: [/*]
2019-06-20 19:25:49 -Filter xssFilter was not registered (disabled)
2019-06-20 19:25:49 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-06-20 19:25:49 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-06-20 19:25:49 -Servlet statViewServlet mapped to [/druid/*]
2019-06-20 19:25:49 -Servlet dispatcherServlet mapped to [/]
2019-06-20 19:25:53 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4bef0fe3: startup date [Thu Jun 20 19:25:34 CST 2019]; root of context hierarchy
2019-06-20 19:25:54 -Using default implementation for ThreadExecutor
2019-06-20 19:25:54 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-06-20 19:25:54 -Quartz Scheduler v.2.3.0 created.
2019-06-20 19:25:54 -RAMJobStore initialized.
2019-06-20 19:25:54 -Scheduler meta-data: Quartz Scheduler (v2.3.0) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-06-20 19:25:54 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-06-20 19:25:54 -Quartz scheduler version: 2.3.0
2019-06-20 19:25:54 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@2a5efbb9
2019-06-20 19:25:55 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-06-20 19:25:55 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-06-20 19:25:58 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-06-20 19:25:58 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-20 19:25:58 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-20 19:25:58 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-06-20 19:25:58 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-20 19:25:58 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-20 19:25:58 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-06-20 19:25:58 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countOweController.getCountOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-06-20 19:25:58 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-06-20 19:25:58 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-20 19:25:58 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-06-20 19:25:58 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-20 19:25:58 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-06-20 19:25:58 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-20 19:25:58 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-20 19:25:58 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-06-20 19:25:58 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-20 19:25:58 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-20 19:25:58 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-06-20 19:25:58 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-06-20 19:25:58 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-06-20 19:25:58 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-06-20 19:25:58 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-06-20 19:25:58 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-06-20 19:25:58 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-20 19:25:58 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-06-20 19:25:58 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-06-20 19:25:58 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-20 19:25:58 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-06-20 19:25:58 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-06-20 19:25:58 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-20 19:25:58 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-06-20 19:25:58 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-06-20 19:25:58 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Integer> com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-06-20 19:25:58 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-06-20 19:25:58 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-20 19:25:58 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-06-20 19:25:58 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-06-20 19:25:58 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-06-20 19:25:58 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-06-20 19:25:58 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 19:25:58 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-06-20 19:25:58 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-06-20 19:25:58 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-06-20 19:25:58 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-06-20 19:25:58 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-06-20 19:25:58 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 19:25:58 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-06-20 19:25:58 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-06-20 19:25:58 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-06-20 19:25:58 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-06-20 19:25:58 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 19:25:58 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-06-20 19:25:58 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-06-20 19:25:58 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-06-20 19:25:58 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-06-20 19:25:58 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 19:25:58 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 19:25:58 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-06-20 19:25:58 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-06-20 19:25:58 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-06-20 19:25:58 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-06-20 19:25:58 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-06-20 19:25:58 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-06-20 19:25:58 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-06-20 19:25:58 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-06-20 19:25:58 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-06-20 19:25:58 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 19:25:58 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-06-20 19:25:58 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-06-20 19:25:58 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 19:25:58 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-06-20 19:25:58 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-06-20 19:25:58 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-06-20 19:25:58 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-06-20 19:25:58 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 19:25:58 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-06-20 19:25:58 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-06-20 19:25:58 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-06-20 19:25:58 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-20 19:25:58 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-20 19:25:58 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-06-20 19:25:58 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-06-20 19:25:58 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-06-20 19:25:58 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-06-20 19:25:58 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-06-20 19:25:58 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-06-20 19:25:58 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 19:25:58 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-06-20 19:25:58 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-06-20 19:25:58 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-06-20 19:25:58 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-06-20 19:25:58 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-06-20 19:25:58 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-06-20 19:25:58 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-06-20 19:25:58 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-06-20 19:25:58 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-06-20 19:25:58 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 19:25:58 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-06-20 19:25:58 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-06-20 19:25:58 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 19:25:58 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-06-20 19:25:58 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-06-20 19:25:58 -Mapped "{[/elec/elecUpLoad/importElecUser]}" onto public java.lang.String com.bootdo.elec.controller.ElecUpLoadController.importElecUser(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-20 19:25:58 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-06-20 19:25:58 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-06-20 19:25:58 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-06-20 19:25:58 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-06-20 19:25:58 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-06-20 19:25:58 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 19:25:58 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-06-20 19:25:58 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-06-20 19:25:58 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-06-20 19:25:58 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-06-20 19:25:58 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-06-20 19:25:58 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-06-20 19:25:58 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-06-20 19:25:59 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-06-20 19:25:59 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-06-20 19:25:59 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-06-20 19:25:59 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-06-20 19:25:59 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 19:25:59 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-06-20 19:25:59 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-06-20 19:25:59 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 19:25:59 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-06-20 19:25:59 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-20 19:25:59 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-06-20 19:25:59 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-06-20 19:25:59 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 19:25:59 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-06-20 19:25:59 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-06-20 19:25:59 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-06-20 19:25:59 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-06-20 19:25:59 -Mapped "{[/moneyList/moneyWZ/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.add()
2019-06-20 19:25:59 -Mapped "{[/moneyList/moneyWZ/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long)
2019-06-20 19:25:59 -Mapped "{[/moneyList/moneyWZ/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long[])
2019-06-20 19:25:59 -Mapped "{[/moneyList/moneyWZ/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.update(com.bootdo.elec.domain.ElecDO)
2019-06-20 19:25:59 -Mapped "{[/moneyList/moneyWZ/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyList.controller.MoneyListWZController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-06-20 19:25:59 -Mapped "{[/moneyList/moneyWZ],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
2019-06-20 19:25:59 -Mapped "{[/moneyList/moneyWZ/batchMoney],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.batchMoney(java.lang.Long[])
2019-06-20 19:25:59 -Mapped "{[/moneyList/moneyWZ/exprotWZ],methods=[GET]}" onto public void com.bootdo.moneyList.controller.MoneyListWZController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-06-20 19:25:59 -Mapped "{[/moneyList/moneyWZ/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 19:25:59 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-06-20 19:25:59 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-06-20 19:25:59 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-06-20 19:25:59 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-06-20 19:25:59 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 19:25:59 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-06-20 19:25:59 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-06-20 19:25:59 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-20 19:25:59 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 19:25:59 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-06-20 19:25:59 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-06-20 19:25:59 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-06-20 19:25:59 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-06-20 19:25:59 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 19:25:59 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-06-20 19:25:59 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-06-20 19:25:59 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-20 19:25:59 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 19:25:59 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-06-20 19:25:59 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-06-20 19:25:59 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-06-20 19:25:59 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-06-20 19:25:59 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 19:25:59 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-06-20 19:25:59 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-20 19:25:59 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-06-20 19:25:59 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 19:25:59 -Mapped "{[/moneyUpLoad/ElecLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.ElecLogUpLoad()
2019-06-20 19:25:59 -Mapped "{[/moneyUpLoad/ElecLogUpLoad/importElecLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.importElecLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-20 19:25:59 -Mapped "{[/moneyUpLoad/ElecLogUpLoad/exprotElecLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.exprotElecLogExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-20 19:25:59 -Mapped "{[/moneyUpLoad/HeatLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.HeatLogUpLoad()
2019-06-20 19:25:59 -Mapped "{[/moneyUpLoad/HeatLogUpLoad/importHeatLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.importHeatLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-20 19:25:59 -Mapped "{[/moneyUpLoad/HeatLogUpLoad/exprotHeatLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.exprotHeatLogExcel(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-20 19:25:59 -Mapped "{[/moneyUpLoad/WaterLogUpLoad/importWaterLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.importWaterLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-20 19:25:59 -Mapped "{[/moneyUpLoad/WaterLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.WaterLogLogUpLoad()
2019-06-20 19:25:59 -Mapped "{[/moneyUpLoad/WaterLogUpLoad/exprotWaterLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.exprotWaterLogExcel(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-20 19:25:59 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-06-20 19:25:59 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-06-20 19:25:59 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-06-20 19:25:59 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-06-20 19:25:59 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-06-20 19:25:59 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 19:25:59 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-06-20 19:25:59 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-06-20 19:25:59 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 19:25:59 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-06-20 19:25:59 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-06-20 19:25:59 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 19:25:59 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-06-20 19:25:59 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-06-20 19:25:59 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-06-20 19:25:59 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 19:25:59 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-06-20 19:25:59 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.batchRemove(java.lang.Long[])
2019-06-20 19:25:59 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 19:25:59 -Mapped "{[/print/print/batchPrint],methods=[POST]}" onto public java.util.List<com.bootdo.print.vo.PrintVo> com.bootdo.print.controller.PrintController.batchPrint(java.lang.Long[])
2019-06-20 19:25:59 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-06-20 19:25:59 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-06-20 19:25:59 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-06-20 19:25:59 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 19:25:59 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-06-20 19:25:59 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-06-20 19:25:59 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-06-20 19:25:59 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-06-20 19:25:59 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-06-20 19:25:59 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-06-20 19:25:59 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-06-20 19:25:59 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-06-20 19:25:59 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 19:25:59 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView(org.springframework.web.servlet.ModelAndView)
2019-06-20 19:25:59 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-06-20 19:25:59 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-06-20 19:25:59 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-06-20 19:25:59 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-06-20 19:25:59 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-06-20 19:25:59 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-20 19:25:59 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-06-20 19:25:59 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-06-20 19:25:59 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-06-20 19:25:59 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-06-20 19:25:59 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 19:25:59 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-06-20 19:25:59 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-06-20 19:25:59 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-06-20 19:25:59 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-06-20 19:25:59 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-06-20 19:25:59 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-06-20 19:25:59 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-06-20 19:25:59 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-06-20 19:25:59 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-06-20 19:25:59 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-06-20 19:25:59 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-06-20 19:25:59 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-06-20 19:25:59 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 19:25:59 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-06-20 19:25:59 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-06-20 19:25:59 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-06-20 19:25:59 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-06-20 19:25:59 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 19:25:59 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-06-20 19:25:59 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-06-20 19:25:59 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-06-20 19:25:59 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 19:25:59 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-06-20 19:25:59 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-06-20 19:25:59 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-06-20 19:25:59 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-06-20 19:25:59 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-06-20 19:25:59 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-06-20 19:25:59 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-06-20 19:25:59 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-06-20 19:25:59 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-06-20 19:25:59 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-06-20 19:25:59 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-06-20 19:25:59 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-06-20 19:25:59 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-06-20 19:25:59 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-06-20 19:25:59 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-06-20 19:25:59 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-06-20 19:25:59 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-06-20 19:25:59 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 19:25:59 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-06-20 19:25:59 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 19:25:59 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-06-20 19:25:59 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-06-20 19:25:59 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-06-20 19:25:59 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-06-20 19:25:59 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-06-20 19:25:59 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-06-20 19:25:59 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-06-20 19:25:59 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-06-20 19:25:59 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-06-20 19:25:59 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 19:25:59 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-06-20 19:25:59 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-06-20 19:25:59 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 19:25:59 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-06-20 19:25:59 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-20 19:25:59 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-06-20 19:25:59 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-06-20 19:25:59 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-06-20 19:25:59 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-06-20 19:25:59 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-06-20 19:25:59 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-06-20 19:25:59 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-06-20 19:26:00 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-06-20 19:26:00 -Initializing ExecutorService  'brokerChannelExecutor'
2019-06-20 19:26:00 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-20 19:26:01 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4bef0fe3: startup date [Thu Jun 20 19:25:34 CST 2019]; root of context hierarchy
2019-06-20 19:26:01 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-20 19:26:01 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-20 19:26:01 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-06-20 19:26:01 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-06-20 19:26:04 -Registering beans for JMX exposure on startup
2019-06-20 19:26:04 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-06-20 19:26:04 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-06-20 19:26:04 -Starting beans in phase 2147483647
2019-06-20 19:26:04 -Context refreshed
2019-06-20 19:26:04 -Found 1 custom documentation plugin(s)
2019-06-20 19:26:04 -Scanning for api listing references
2019-06-20 19:26:05 -Generating unique operation named: removeUsingPOST_1
2019-06-20 19:26:05 -Generating unique operation named: addUsingGET_1
2019-06-20 19:26:05 -Generating unique operation named: editUsingGET_1
2019-06-20 19:26:05 -Generating unique operation named: listUsingGET_1
2019-06-20 19:26:05 -Generating unique operation named: removeUsingPOST_2
2019-06-20 19:26:05 -Generating unique operation named: removeUsingPOST_3
2019-06-20 19:26:05 -Generating unique operation named: saveUsingPOST_1
2019-06-20 19:26:05 -Generating unique operation named: updateUsingGET_1
2019-06-20 19:26:05 -Generating unique operation named: updateUsingHEAD_1
2019-06-20 19:26:05 -Generating unique operation named: updateUsingPOST_1
2019-06-20 19:26:05 -Generating unique operation named: updateUsingPUT_1
2019-06-20 19:26:05 -Generating unique operation named: updateUsingPATCH_1
2019-06-20 19:26:05 -Generating unique operation named: updateUsingDELETE_1
2019-06-20 19:26:05 -Generating unique operation named: updateUsingOPTIONS_1
2019-06-20 19:26:05 -Generating unique operation named: updateUsingTRACE_1
2019-06-20 19:26:05 -Generating unique operation named: addUsingGET_2
2019-06-20 19:26:05 -Generating unique operation named: editUsingGET_2
2019-06-20 19:26:05 -Generating unique operation named: listUsingGET_2
2019-06-20 19:26:05 -Generating unique operation named: removeUsingPOST_4
2019-06-20 19:26:05 -Generating unique operation named: removeUsingPOST_5
2019-06-20 19:26:05 -Generating unique operation named: saveUsingPOST_2
2019-06-20 19:26:05 -Generating unique operation named: updateUsingPOST_2
2019-06-20 19:26:05 -Generating unique operation named: exprotExcelUsingGET_1
2019-06-20 19:26:05 -Generating unique operation named: addUsingGET_3
2019-06-20 19:26:05 -Generating unique operation named: editUsingGET_3
2019-06-20 19:26:05 -Generating unique operation named: listUsingGET_3
2019-06-20 19:26:05 -Generating unique operation named: removeUsingPOST_6
2019-06-20 19:26:05 -Generating unique operation named: removeUsingPOST_7
2019-06-20 19:26:05 -Generating unique operation named: saveUsingPOST_3
2019-06-20 19:26:05 -Generating unique operation named: updateUsingGET_2
2019-06-20 19:26:05 -Generating unique operation named: updateUsingHEAD_2
2019-06-20 19:26:05 -Generating unique operation named: updateUsingPOST_3
2019-06-20 19:26:05 -Generating unique operation named: updateUsingPUT_2
2019-06-20 19:26:05 -Generating unique operation named: updateUsingPATCH_2
2019-06-20 19:26:05 -Generating unique operation named: updateUsingDELETE_2
2019-06-20 19:26:05 -Generating unique operation named: updateUsingOPTIONS_2
2019-06-20 19:26:05 -Generating unique operation named: updateUsingTRACE_2
2019-06-20 19:26:05 -Generating unique operation named: addUsingGET_4
2019-06-20 19:26:05 -Generating unique operation named: editUsingGET_4
2019-06-20 19:26:05 -Generating unique operation named: listUsingGET_4
2019-06-20 19:26:05 -Generating unique operation named: removeUsingPOST_8
2019-06-20 19:26:05 -Generating unique operation named: removeUsingPOST_9
2019-06-20 19:26:05 -Generating unique operation named: saveUsingPOST_4
2019-06-20 19:26:05 -Generating unique operation named: updateUsingGET_3
2019-06-20 19:26:05 -Generating unique operation named: updateUsingHEAD_3
2019-06-20 19:26:05 -Generating unique operation named: updateUsingPOST_4
2019-06-20 19:26:05 -Generating unique operation named: updateUsingPUT_3
2019-06-20 19:26:05 -Generating unique operation named: updateUsingPATCH_3
2019-06-20 19:26:05 -Generating unique operation named: updateUsingDELETE_3
2019-06-20 19:26:06 -Generating unique operation named: updateUsingOPTIONS_3
2019-06-20 19:26:06 -Generating unique operation named: updateUsingTRACE_3
2019-06-20 19:26:06 -Generating unique operation named: ElecUsingGET_1
2019-06-20 19:26:06 -Generating unique operation named: addUsingGET_5
2019-06-20 19:26:06 -Generating unique operation named: editUsingGET_5
2019-06-20 19:26:06 -Generating unique operation named: listUsingGET_5
2019-06-20 19:26:06 -Generating unique operation named: removeUsingPOST_10
2019-06-20 19:26:06 -Generating unique operation named: removeUsingPOST_11
2019-06-20 19:26:06 -Generating unique operation named: saveUsingPOST_5
2019-06-20 19:26:06 -Generating unique operation named: updateUsingGET_4
2019-06-20 19:26:06 -Generating unique operation named: updateUsingHEAD_4
2019-06-20 19:26:06 -Generating unique operation named: updateUsingPOST_5
2019-06-20 19:26:06 -Generating unique operation named: updateUsingPUT_4
2019-06-20 19:26:06 -Generating unique operation named: updateUsingPATCH_4
2019-06-20 19:26:06 -Generating unique operation named: updateUsingDELETE_4
2019-06-20 19:26:06 -Generating unique operation named: updateUsingOPTIONS_4
2019-06-20 19:26:06 -Generating unique operation named: updateUsingTRACE_4
2019-06-20 19:26:06 -Generating unique operation named: editUsingGET_6
2019-06-20 19:26:06 -Generating unique operation named: listUsingGET_6
2019-06-20 19:26:06 -Generating unique operation named: updateUsingPOST_6
2019-06-20 19:26:06 -Generating unique operation named: addUsingGET_6
2019-06-20 19:26:06 -Generating unique operation named: editUsingGET_7
2019-06-20 19:26:06 -Generating unique operation named: exprotExcelUsingGET_2
2019-06-20 19:26:06 -Generating unique operation named: listUsingGET_7
2019-06-20 19:26:06 -Generating unique operation named: removeUsingPOST_12
2019-06-20 19:26:06 -Generating unique operation named: removeUsingPOST_13
2019-06-20 19:26:06 -Generating unique operation named: saveUsingPOST_6
2019-06-20 19:26:06 -Generating unique operation named: updateUsingGET_5
2019-06-20 19:26:06 -Generating unique operation named: updateUsingHEAD_5
2019-06-20 19:26:06 -Generating unique operation named: updateUsingPOST_7
2019-06-20 19:26:06 -Generating unique operation named: updateUsingPUT_5
2019-06-20 19:26:06 -Generating unique operation named: updateUsingPATCH_5
2019-06-20 19:26:06 -Generating unique operation named: updateUsingDELETE_5
2019-06-20 19:26:06 -Generating unique operation named: updateUsingOPTIONS_5
2019-06-20 19:26:06 -Generating unique operation named: updateUsingTRACE_5
2019-06-20 19:26:06 -Generating unique operation named: exprotExcelUsingGET_3
2019-06-20 19:26:06 -Generating unique operation named: addUsingGET_7
2019-06-20 19:26:06 -Generating unique operation named: editUsingGET_8
2019-06-20 19:26:06 -Generating unique operation named: listUsingGET_8
2019-06-20 19:26:06 -Generating unique operation named: removeUsingPOST_14
2019-06-20 19:26:06 -Generating unique operation named: removeUsingPOST_15
2019-06-20 19:26:06 -Generating unique operation named: saveUsingPOST_7
2019-06-20 19:26:06 -Generating unique operation named: updateUsingGET_6
2019-06-20 19:26:06 -Generating unique operation named: updateUsingHEAD_6
2019-06-20 19:26:06 -Generating unique operation named: updateUsingPOST_8
2019-06-20 19:26:06 -Generating unique operation named: updateUsingPUT_6
2019-06-20 19:26:06 -Generating unique operation named: updateUsingPATCH_6
2019-06-20 19:26:06 -Generating unique operation named: updateUsingDELETE_6
2019-06-20 19:26:06 -Generating unique operation named: updateUsingOPTIONS_6
2019-06-20 19:26:06 -Generating unique operation named: updateUsingTRACE_6
2019-06-20 19:26:06 -Generating unique operation named: addUsingGET_8
2019-06-20 19:26:06 -Generating unique operation named: editUsingGET_9
2019-06-20 19:26:06 -Generating unique operation named: listUsingGET_9
2019-06-20 19:26:06 -Generating unique operation named: removeUsingPOST_16
2019-06-20 19:26:06 -Generating unique operation named: removeUsingPOST_17
2019-06-20 19:26:06 -Generating unique operation named: saveUsingPOST_8
2019-06-20 19:26:06 -Generating unique operation named: updateUsingGET_7
2019-06-20 19:26:06 -Generating unique operation named: updateUsingHEAD_7
2019-06-20 19:26:06 -Generating unique operation named: updateUsingPOST_9
2019-06-20 19:26:06 -Generating unique operation named: updateUsingPUT_7
2019-06-20 19:26:06 -Generating unique operation named: updateUsingPATCH_7
2019-06-20 19:26:06 -Generating unique operation named: updateUsingDELETE_7
2019-06-20 19:26:06 -Generating unique operation named: updateUsingOPTIONS_7
2019-06-20 19:26:06 -Generating unique operation named: updateUsingTRACE_7
2019-06-20 19:26:06 -Generating unique operation named: addUsingGET_9
2019-06-20 19:26:06 -Generating unique operation named: editUsingGET_10
2019-06-20 19:26:06 -Generating unique operation named: infoUsingGET_1
2019-06-20 19:26:06 -Generating unique operation named: infoUsingHEAD_1
2019-06-20 19:26:06 -Generating unique operation named: infoUsingPOST_1
2019-06-20 19:26:06 -Generating unique operation named: infoUsingPUT_1
2019-06-20 19:26:06 -Generating unique operation named: infoUsingPATCH_1
2019-06-20 19:26:06 -Generating unique operation named: infoUsingDELETE_1
2019-06-20 19:26:06 -Generating unique operation named: infoUsingOPTIONS_1
2019-06-20 19:26:06 -Generating unique operation named: infoUsingTRACE_1
2019-06-20 19:26:06 -Generating unique operation named: listUsingGET_10
2019-06-20 19:26:06 -Generating unique operation named: removeUsingPOST_18
2019-06-20 19:26:06 -Generating unique operation named: removeUsingPOST_19
2019-06-20 19:26:06 -Generating unique operation named: saveUsingPOST_9
2019-06-20 19:26:06 -Generating unique operation named: updateUsingPOST_10
2019-06-20 19:26:06 -Generating unique operation named: listUsingGET_11
2019-06-20 19:26:07 -Generating unique operation named: removeUsingPOST_20
2019-06-20 19:26:07 -Generating unique operation named: welcomeUsingGET_1
2019-06-20 19:26:07 -Generating unique operation named: addUsingGET_10
2019-06-20 19:26:07 -Generating unique operation named: editUsingGET_11
2019-06-20 19:26:07 -Generating unique operation named: listUsingGET_12
2019-06-20 19:26:07 -Generating unique operation named: removeUsingPOST_21
2019-06-20 19:26:07 -Generating unique operation named: saveUsingPOST_10
2019-06-20 19:26:07 -Generating unique operation named: treeUsingGET_1
2019-06-20 19:26:07 -Generating unique operation named: treeUsingGET_2
2019-06-20 19:26:07 -Generating unique operation named: updateUsingPOST_11
2019-06-20 19:26:07 -Generating unique operation named: addUsingGET_11
2019-06-20 19:26:07 -Generating unique operation named: editUsingGET_12
2019-06-20 19:26:07 -Generating unique operation named: listUsingGET_13
2019-06-20 19:26:07 -Generating unique operation named: removeUsingPOST_22
2019-06-20 19:26:07 -Generating unique operation named: removeUsingPOST_23
2019-06-20 19:26:07 -Generating unique operation named: updateUsingPOST_12
2019-06-20 19:26:07 -Generating unique operation named: addUsingGET_12
2019-06-20 19:26:07 -Generating unique operation named: editUsingGET_13
2019-06-20 19:26:07 -Generating unique operation named: listUsingGET_14
2019-06-20 19:26:07 -Generating unique operation named: removeUsingPOST_24
2019-06-20 19:26:07 -Generating unique operation named: removeUsingPOST_25
2019-06-20 19:26:07 -Generating unique operation named: saveUsingPOST_11
2019-06-20 19:26:07 -Generating unique operation named: updateUsingGET_8
2019-06-20 19:26:07 -Generating unique operation named: updateUsingHEAD_8
2019-06-20 19:26:07 -Generating unique operation named: updateUsingPOST_13
2019-06-20 19:26:07 -Generating unique operation named: updateUsingPUT_8
2019-06-20 19:26:07 -Generating unique operation named: updateUsingPATCH_8
2019-06-20 19:26:07 -Generating unique operation named: updateUsingDELETE_8
2019-06-20 19:26:07 -Generating unique operation named: updateUsingOPTIONS_8
2019-06-20 19:26:07 -Generating unique operation named: updateUsingTRACE_8
2019-06-20 19:26:07 -Generating unique operation named: addUsingGET_13
2019-06-20 19:26:07 -Generating unique operation named: batchRemoveUsingPOST_1
2019-06-20 19:26:07 -Generating unique operation named: editUsingGET_14
2019-06-20 19:26:07 -Generating unique operation named: listUsingGET_15
2019-06-20 19:26:07 -Generating unique operation named: printEditUsingGET_1
2019-06-20 19:26:07 -Generating unique operation named: removeUsingPOST_26
2019-06-20 19:26:07 -Generating unique operation named: saveUsingPOST_12
2019-06-20 19:26:07 -Generating unique operation named: updateUsingGET_9
2019-06-20 19:26:07 -Generating unique operation named: updateUsingHEAD_9
2019-06-20 19:26:07 -Generating unique operation named: updateUsingPOST_14
2019-06-20 19:26:07 -Generating unique operation named: updateUsingPUT_9
2019-06-20 19:26:07 -Generating unique operation named: updateUsingPATCH_9
2019-06-20 19:26:07 -Generating unique operation named: updateUsingDELETE_9
2019-06-20 19:26:07 -Generating unique operation named: updateUsingOPTIONS_9
2019-06-20 19:26:07 -Generating unique operation named: updateUsingTRACE_9
2019-06-20 19:26:07 -Generating unique operation named: addUsingGET_14
2019-06-20 19:26:07 -Generating unique operation named: batchRemoveUsingPOST_2
2019-06-20 19:26:07 -Generating unique operation named: editUsingGET_15
2019-06-20 19:26:07 -Generating unique operation named: listUsingGET_16
2019-06-20 19:26:07 -Generating unique operation named: saveUsingPOST_13
2019-06-20 19:26:07 -Generating unique operation named: saveUsingPOST_14
2019-06-20 19:26:07 -Generating unique operation named: updateUsingPOST_15
2019-06-20 19:26:07 -Generating unique operation named: listUsingGET_17
2019-06-20 19:26:07 -Generating unique operation named: listUsingHEAD_1
2019-06-20 19:26:07 -Generating unique operation named: listUsingPOST_1
2019-06-20 19:26:07 -Generating unique operation named: listUsingPUT_1
2019-06-20 19:26:07 -Generating unique operation named: listUsingPATCH_1
2019-06-20 19:26:07 -Generating unique operation named: listUsingDELETE_1
2019-06-20 19:26:07 -Generating unique operation named: listUsingOPTIONS_1
2019-06-20 19:26:07 -Generating unique operation named: listUsingTRACE_1
2019-06-20 19:26:07 -Generating unique operation named: countDDUsingGET_1
2019-06-20 19:26:07 -Generating unique operation named: exportDDUsingGET_1
2019-06-20 19:26:08 -Generating unique operation named: exportElecYYUsingGET_1
2019-06-20 19:26:08 -Generating unique operation named: addUsingGET_15
2019-06-20 19:26:08 -Generating unique operation named: batchRemoveUsingPOST_3
2019-06-20 19:26:08 -Generating unique operation named: editUsingGET_16
2019-06-20 19:26:08 -Generating unique operation named: listUsingGET_18
2019-06-20 19:26:08 -Generating unique operation named: removeUsingPOST_27
2019-06-20 19:26:08 -Generating unique operation named: saveUsingPOST_15
2019-06-20 19:26:08 -Generating unique operation named: treeUsingGET_3
2019-06-20 19:26:08 -Generating unique operation named: treeViewUsingGET_1
2019-06-20 19:26:08 -Generating unique operation named: updateUsingPOST_16
2019-06-20 19:26:08 -Generating unique operation named: addUsingGET_16
2019-06-20 19:26:08 -Generating unique operation named: editUsingGET_17
2019-06-20 19:26:08 -Generating unique operation named: exprotExcelUsingGET_4
2019-06-20 19:26:08 -Generating unique operation named: listUsingGET_19
2019-06-20 19:26:08 -Generating unique operation named: removeUsingPOST_28
2019-06-20 19:26:08 -Generating unique operation named: removeUsingPOST_29
2019-06-20 19:26:08 -Generating unique operation named: saveUsingPOST_16
2019-06-20 19:26:08 -Generating unique operation named: updateUsingGET_10
2019-06-20 19:26:08 -Generating unique operation named: updateUsingHEAD_10
2019-06-20 19:26:08 -Generating unique operation named: updateUsingPOST_17
2019-06-20 19:26:08 -Generating unique operation named: updateUsingPUT_10
2019-06-20 19:26:08 -Generating unique operation named: updateUsingPATCH_10
2019-06-20 19:26:08 -Generating unique operation named: updateUsingDELETE_10
2019-06-20 19:26:08 -Generating unique operation named: updateUsingOPTIONS_10
2019-06-20 19:26:08 -Generating unique operation named: updateUsingTRACE_10
2019-06-20 19:26:08 -Generating unique operation named: exprotExcelUsingGET_5
2019-06-20 19:26:08 -Generating unique operation named: addUsingGET_17
2019-06-20 19:26:08 -Generating unique operation named: editUsingGET_18
2019-06-20 19:26:08 -Generating unique operation named: listUsingGET_20
2019-06-20 19:26:08 -Generating unique operation named: removeUsingPOST_30
2019-06-20 19:26:08 -Generating unique operation named: removeUsingPOST_31
2019-06-20 19:26:08 -Generating unique operation named: saveUsingPOST_17
2019-06-20 19:26:08 -Generating unique operation named: updateUsingGET_11
2019-06-20 19:26:08 -Generating unique operation named: updateUsingHEAD_11
2019-06-20 19:26:08 -Generating unique operation named: updateUsingPOST_18
2019-06-20 19:26:08 -Generating unique operation named: updateUsingPUT_11
2019-06-20 19:26:08 -Generating unique operation named: updateUsingPATCH_11
2019-06-20 19:26:08 -Generating unique operation named: updateUsingDELETE_11
2019-06-20 19:26:08 -Generating unique operation named: updateUsingOPTIONS_11
2019-06-20 19:26:08 -Generating unique operation named: updateUsingTRACE_11
2019-06-20 19:26:08 -Generating unique operation named: addUsingGET_18
2019-06-20 19:26:08 -Generating unique operation named: editUsingGET_19
2019-06-20 19:26:08 -Generating unique operation named: listUsingGET_21
2019-06-20 19:26:08 -Generating unique operation named: removeUsingPOST_32
2019-06-20 19:26:08 -Generating unique operation named: removeUsingPOST_33
2019-06-20 19:26:08 -Generating unique operation named: saveUsingPOST_18
2019-06-20 19:26:08 -Generating unique operation named: updateUsingGET_12
2019-06-20 19:26:08 -Generating unique operation named: updateUsingHEAD_12
2019-06-20 19:26:08 -Generating unique operation named: updateUsingPOST_19
2019-06-20 19:26:08 -Generating unique operation named: updateUsingPUT_12
2019-06-20 19:26:08 -Generating unique operation named: updateUsingPATCH_12
2019-06-20 19:26:08 -Generating unique operation named: updateUsingDELETE_12
2019-06-20 19:26:08 -Generating unique operation named: updateUsingOPTIONS_12
2019-06-20 19:26:08 -Generating unique operation named: updateUsingTRACE_12
2019-06-20 19:26:08 -Starting Quartz Scheduler now
2019-06-20 19:26:08 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-06-20 19:26:08 -Starting...
2019-06-20 19:26:08 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-06-20 19:26:08 -Started.
2019-06-20 19:26:08 -Starting ProtocolHandler ["http-nio-8081"]
2019-06-20 19:26:08 -Using a shared selector for servlet write/read
2019-06-20 19:26:08 -Tomcat started on port(s): 8081 (http) with context path ''
2019-06-20 19:26:08 -Started BootdoApplication in 36.938 seconds (JVM running for 38.729)
2019-06-20 19:26:09 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-06-20 19:26:09 -==> Parameters: 
2019-06-20 19:26:09 -<==      Total: 1
2019-06-20 19:26:20 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-06-20 19:26:20 -FrameworkServlet 'dispatcherServlet': initialization started
2019-06-20 19:26:20 -FrameworkServlet 'dispatcherServlet': initialization completed in 93 ms
2019-06-20 19:26:20 -Enabling session validation scheduler...
2019-06-20 19:26:20 -请求地址 : http://localhost:8081/login;JSESSIONID=9f410512-66f9-49bd-bc47-34c6756393b3
2019-06-20 19:26:20 -HTTP METHOD : GET
2019-06-20 19:26:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-06-20 19:26:20 -参数 : [{}]
2019-06-20 19:26:20 -耗时 : 4
2019-06-20 19:26:20 -返回值 : login
2019-06-20 19:26:22 -请求地址 : http://localhost:8081/getVerify
2019-06-20 19:26:22 -HTTP METHOD : GET
2019-06-20 19:26:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-06-20 19:26:22 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@160740e5, org.apache.shiro.web.servlet.ShiroHttpServletResponse@8536f00]
2019-06-20 19:26:26 -7160
2019-06-20 19:26:26 -耗时 : 3950
2019-06-20 19:26:26 -返回值 : null
2019-06-20 19:26:26 -请求地址 : http://localhost:8081/login
2019-06-20 19:26:26 -HTTP METHOD : GET
2019-06-20 19:26:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-06-20 19:26:26 -参数 : [{}]
2019-06-20 19:26:26 -耗时 : 0
2019-06-20 19:26:26 -返回值 : login
2019-06-20 19:26:36 -请求地址 : http://localhost:8081/login
2019-06-20 19:26:36 -HTTP METHOD : POST
2019-06-20 19:26:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-06-20 19:26:36 -参数 : [admin, 111111, 7160, org.apache.shiro.web.servlet.ShiroHttpServletRequest@403478dc]
2019-06-20 19:26:36 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-06-20 19:26:36 -==> Parameters: admin(String)
2019-06-20 19:26:37 -<==      Total: 1
2019-06-20 19:26:37 -耗时 : 144
2019-06-20 19:26:37 -返回值 : {msg=操作成功, code=0}
2019-06-20 19:26:37 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-06-20 19:26:37 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-20 19:26:37 -==> Parameters: 1(Long), admin(String), 登录(String), 144(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-06-20 19:26:37.094(Timestamp)
2019-06-20 19:26:37 -请求地址 : http://localhost:8081/index
2019-06-20 19:26:37 -HTTP METHOD : GET
2019-06-20 19:26:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-20 19:26:37 -参数 : [{}]
2019-06-20 19:26:37 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-20 19:26:37 -<==    Updates: 1
2019-06-20 19:26:37 -==> Parameters: 1(Long)
2019-06-20 19:26:37 -<==      Total: 51
2019-06-20 19:26:37 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-20 19:26:37 -==> Parameters: 138(Long)
2019-06-20 19:26:37 -<==      Total: 1
2019-06-20 19:26:37 -耗时 : 519
2019-06-20 19:26:37 -返回值 : index_v1
2019-06-20 19:26:37 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-20 19:26:37 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 519(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-bullseye","url":"/moneyUpLoad/ElecLogUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"165","parentId":"106","text":"缴费上传"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":tru(String), 127.0.0.1(String), 2019-06-20 19:26:37.802(Timestamp)
2019-06-20 19:26:37 -请求地址 : http://localhost:8081/main
2019-06-20 19:26:37 -HTTP METHOD : GET
2019-06-20 19:26:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-20 19:26:37 -参数 : []
2019-06-20 19:26:37 -耗时 : 0
2019-06-20 19:26:37 -返回值 : main
2019-06-20 19:26:38 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-20 19:26:38 -HTTP METHOD : GET
2019-06-20 19:26:38 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-20 19:26:38 -参数 : []
2019-06-20 19:26:38 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-20 19:26:38 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-20 19:26:38 -请求地址 : http://localhost:8081/main
2019-06-20 19:26:38 -HTTP METHOD : GET
2019-06-20 19:26:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-20 19:26:38 -参数 : []
2019-06-20 19:26:38 -耗时 : 0
2019-06-20 19:26:38 -返回值 : main
2019-06-20 19:26:38 -<==    Updates: 1
2019-06-20 19:26:38 -<==      Total: 0
2019-06-20 19:26:38 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-20 19:26:38 -==> Parameters: 1(Long), 0(String)
2019-06-20 19:26:38 -<==      Total: 1
2019-06-20 19:26:38 -耗时 : 483
2019-06-20 19:26:38 -返回值 : com.bootdo.common.utils.PageUtils@606566fc
2019-06-20 19:26:51 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-06-20 19:26:51 -==> Parameters: 1(Long)
2019-06-20 19:26:51 -<==      Total: 95
2019-06-20 19:26:51 -请求地址 : http://localhost:8081/elec/elec
2019-06-20 19:26:51 -HTTP METHOD : GET
2019-06-20 19:26:51 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-06-20 19:26:51 -参数 : []
2019-06-20 19:26:51 -耗时 : 0
2019-06-20 19:26:51 -返回值 : elec/elec/elec
2019-06-20 19:26:52 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-20 19:26:52 -HTTP METHOD : GET
2019-06-20 19:26:52 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 19:26:52 -参数 : [userType]
2019-06-20 19:26:52 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-06-20 19:26:52 -HTTP METHOD : GET
2019-06-20 19:26:52 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 19:26:52 -参数 : [elecType]
2019-06-20 19:26:53 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 19:26:53 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 19:26:53 -==> Parameters: elecType(String)
2019-06-20 19:26:53 -==> Parameters: userType(String)
2019-06-20 19:26:53 -<==      Total: 11
2019-06-20 19:26:53 -耗时 : 164
2019-06-20 19:26:53 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 19:26:53 -<==      Total: 4
2019-06-20 19:26:53 -耗时 : 201
2019-06-20 19:26:53 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 19:26:53 -请求地址 : http://localhost:8081/elec/elec/list
2019-06-20 19:26:53 -HTTP METHOD : GET
2019-06-20 19:26:53 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-06-20 19:26:53 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@1b2ca9bf]
2019-06-20 19:26:53 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-06-20 19:26:53 -==> Parameters: 0(Integer), 10(Integer)
2019-06-20 19:26:53 -<==      Total: 10
2019-06-20 19:26:53 -==>  Preparing: select count(*) from elec 
2019-06-20 19:26:53 -==> Parameters: 
2019-06-20 19:26:53 -<==      Total: 1
2019-06-20 19:26:53 -耗时 : 205
2019-06-20 19:26:53 -返回值 : com.bootdo.common.utils.PageUtils@7bf89b1
2019-06-20 19:26:57 -请求地址 : http://localhost:8081/elec/elecInto
2019-06-20 19:26:57 -HTTP METHOD : GET
2019-06-20 19:26:57 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.ElecInto
2019-06-20 19:26:57 -参数 : []
2019-06-20 19:26:57 -耗时 : 0
2019-06-20 19:26:57 -返回值 : elec/elecInto/elecInto
2019-06-20 19:27:00 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 5]
2019-06-20 19:27:04 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-06-20 19:27:04 -HTTP METHOD : GET
2019-06-20 19:27:04 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-06-20 19:27:04 -参数 : [ModelAndView: materialized View is [null]; model is null]
2019-06-20 19:27:04 -耗时 : 0
2019-06-20 19:27:04 -返回值 : system/dept/deptTree
2019-06-20 19:27:04 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-06-20 19:27:04 -HTTP METHOD : GET
2019-06-20 19:27:04 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-06-20 19:27:04 -参数 : []
2019-06-20 19:27:04 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-06-20 19:27:04 -==> Parameters: 
2019-06-20 19:27:04 -<==      Total: 3
2019-06-20 19:27:04 -耗时 : 16
2019-06-20 19:27:04 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-06-20 19:27:06 -请求地址 : http://localhost:8081/elec/elecInto/importElecIntoExcel
2019-06-20 19:27:06 -HTTP METHOD : POST
2019-06-20 19:27:06 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel
2019-06-20 19:27:06 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@7145d7c8, com.bootdo.elec.vo.ElecVo@2dc7ab2f, org.apache.shiro.web.servlet.ShiroHttpServletResponse@1747353]
2019-06-20 19:27:07 -==>  Preparing: UPDATE ELEC SET ELEC_SUM = ELEC_SUM + ? WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-06-20 19:27:07 -==> Parameters: 10(BigDecimal), 2019-05(String), 2(String), 1-0001(String), 李文英(String)
2019-06-20 19:27:07 -<==    Updates: 1
2019-06-20 19:27:07 -==>  Preparing: select * from elec WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-06-20 19:27:07 -==> Parameters: 2019-05(String), 2(String), 1-0001(String), 李文英(String)
2019-06-20 19:27:07 -<==      Total: 1
2019-06-20 19:27:10 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-20 19:27:10 -==> Parameters: 1-0001(String), 李文英(String), B(String), 2(String), 1(String), 10(BigDecimal), 2019-06-20 19:27:10.944(Timestamp), 2019-05(String), admin(String), 2019-06-20 19:27:10.944(Timestamp), admin(String), null
2019-06-20 19:27:11 -<==    Updates: 1
2019-06-20 19:27:11 -==>  Preparing: insert into print ( `user_id`, `user_name`, `user_type`, `user_org`, `start`, `end`, `hu`, `elec_price`, `elec_amount`, `elec_cost`, `elec_sum`, `elec_money`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `heat_money`, `water_price`, `water_cost`, `water_sum`, `water_money`, `print_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-20 19:27:11 -==> Parameters: 1-0001(String), 李文英(String), B(String), 2(String), 10300(Integer), 10370(Integer), 1(Integer), 0.465(BigDecimal), 0.00(BigDecimal), 32.55(BigDecimal), 10.00(BigDecimal), 10(BigDecimal), null, null, null, null, null, null, null, null, null, 2019-06-20 19:27:11.102(Timestamp), 2019-05(String), admin(String), 2019-06-20 19:27:11.102(Timestamp), admin(String), null
2019-06-20 19:27:11 -<==    Updates: 1
2019-06-20 19:27:11 -==>  Preparing: UPDATE ELEC SET ELEC_SUM = ELEC_SUM + ? WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-06-20 19:27:11 -==> Parameters: 20(BigDecimal), 2019-05(String), 2(String), 1-0004(String), 姜海龙(String)
2019-06-20 19:27:11 -<==    Updates: 1
2019-06-20 19:27:11 -==>  Preparing: select * from elec WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-06-20 19:27:11 -==> Parameters: 2019-05(String), 2(String), 1-0004(String), 姜海龙(String)
2019-06-20 19:27:11 -<==      Total: 1
2019-06-20 19:27:12 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-20 19:27:12 -==> Parameters: 1-0004(String), 姜海龙(String), B(String), 2(String), 1(String), 20(BigDecimal), 2019-06-20 19:27:12.733(Timestamp), 2019-05(String), admin(String), 2019-06-20 19:27:12.733(Timestamp), admin(String), null
2019-06-20 19:27:12 -<==    Updates: 1
2019-06-20 19:27:12 -==>  Preparing: insert into print ( `user_id`, `user_name`, `user_type`, `user_org`, `start`, `end`, `hu`, `elec_price`, `elec_amount`, `elec_cost`, `elec_sum`, `elec_money`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `heat_money`, `water_price`, `water_cost`, `water_sum`, `water_money`, `print_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-20 19:27:12 -==> Parameters: 1-0004(String), 姜海龙(String), B(String), 2(String), 1553(Integer), 1689(Integer), 1(Integer), 0.465(BigDecimal), 0.00(BigDecimal), 63.24(BigDecimal), 20.00(BigDecimal), 20(BigDecimal), null, null, null, null, null, null, null, null, null, 2019-06-20 19:27:12.903(Timestamp), 2019-05(String), admin(String), 2019-06-20 19:27:12.903(Timestamp), admin(String), null
2019-06-20 19:27:13 -<==    Updates: 1
2019-06-20 19:27:13 -耗时 : 6826
2019-06-20 19:27:13 -返回值 : success
2019-06-20 19:57:00 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 438]
2019-06-20 20:26:20 -Validating all active sessions...
2019-06-20 20:26:20 -Finished session validation.  No sessions were stopped.
2019-06-20 20:27:00 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 871]
2019-06-20 20:28:24 -Starting BootdoApplication on PC-201905091110 with PID 8528 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-06-20 20:28:24 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-06-20 20:28:24 -The following profiles are active: dev
2019-06-20 20:28:24 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4c4d27c8: startup date [Thu Jun 20 20:28:24 CST 2019]; root of context hierarchy
2019-06-20 20:28:30 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-06-20 20:28:33 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$93b316d9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-20 20:28:33 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$860c4580] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-20 20:28:35 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-20 20:28:35 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-20 20:28:35 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-20 20:28:35 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-06-20 20:28:35 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-06-20 20:28:35 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-20 20:28:35 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-20 20:28:35 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-20 20:28:35 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-20 20:28:37 -Tomcat initialized with port(s): 8081 (http)
2019-06-20 20:28:37 -Initializing ProtocolHandler ["http-nio-8081"]
2019-06-20 20:28:37 -Starting service [Tomcat]
2019-06-20 20:28:37 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-06-20 20:28:37 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:\Java\JDK\jdk1.8.0_102\jre\bin;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-06-20 20:28:37 -Initializing Spring embedded WebApplicationContext
2019-06-20 20:28:37 -Root WebApplicationContext: initialization completed in 13003 ms
2019-06-20 20:28:38 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-06-20 20:28:38 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-06-20 20:28:38 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-06-20 20:28:38 -Mapping filter: 'requestContextFilter' to: [/*]
2019-06-20 20:28:38 -Filter xssFilter was not registered (disabled)
2019-06-20 20:28:38 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-06-20 20:28:38 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-06-20 20:28:38 -Servlet statViewServlet mapped to [/druid/*]
2019-06-20 20:28:38 -Servlet dispatcherServlet mapped to [/]
2019-06-20 20:28:43 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4c4d27c8: startup date [Thu Jun 20 20:28:24 CST 2019]; root of context hierarchy
2019-06-20 20:28:44 -Using default implementation for ThreadExecutor
2019-06-20 20:28:44 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-06-20 20:28:44 -Quartz Scheduler v.2.3.0 created.
2019-06-20 20:28:44 -RAMJobStore initialized.
2019-06-20 20:28:44 -Scheduler meta-data: Quartz Scheduler (v2.3.0) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-06-20 20:28:44 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-06-20 20:28:44 -Quartz scheduler version: 2.3.0
2019-06-20 20:28:44 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@3d2b13b1
2019-06-20 20:28:45 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-06-20 20:28:45 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-06-20 20:28:48 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-20 20:28:48 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-20 20:28:48 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-06-20 20:28:48 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-20 20:28:48 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-06-20 20:28:48 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-20 20:28:48 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-06-20 20:28:48 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countOweController.getCountOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-06-20 20:28:48 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-06-20 20:28:48 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-20 20:28:48 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-06-20 20:28:48 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-20 20:28:48 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-06-20 20:28:48 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-20 20:28:48 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-20 20:28:48 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-20 20:28:48 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-06-20 20:28:48 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-20 20:28:48 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-06-20 20:28:48 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-06-20 20:28:48 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-06-20 20:28:48 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-06-20 20:28:48 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-06-20 20:28:48 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-06-20 20:28:48 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-20 20:28:48 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-06-20 20:28:48 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-06-20 20:28:48 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-20 20:28:48 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-06-20 20:28:48 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-06-20 20:28:48 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-06-20 20:28:48 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-06-20 20:28:48 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-20 20:28:48 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Integer> com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-06-20 20:28:48 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-06-20 20:28:48 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-20 20:28:48 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-06-20 20:28:48 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-06-20 20:28:48 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-06-20 20:28:48 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-06-20 20:28:48 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 20:28:48 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-06-20 20:28:48 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-06-20 20:28:48 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 20:28:48 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-06-20 20:28:48 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-06-20 20:28:48 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-06-20 20:28:48 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-06-20 20:28:48 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-06-20 20:28:48 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-06-20 20:28:48 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-06-20 20:28:48 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 20:28:48 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-06-20 20:28:48 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-06-20 20:28:48 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-06-20 20:28:48 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 20:28:48 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-06-20 20:28:48 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 20:28:48 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-06-20 20:28:48 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-06-20 20:28:48 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-06-20 20:28:48 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-06-20 20:28:48 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-06-20 20:28:48 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-06-20 20:28:48 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-06-20 20:28:48 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-06-20 20:28:48 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-06-20 20:28:48 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 20:28:48 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-06-20 20:28:48 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-06-20 20:28:48 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 20:28:48 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-06-20 20:28:48 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-06-20 20:28:48 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-06-20 20:28:48 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-06-20 20:28:48 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 20:28:48 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-06-20 20:28:48 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-06-20 20:28:48 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-06-20 20:28:48 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-20 20:28:48 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-20 20:28:48 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-06-20 20:28:48 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-06-20 20:28:48 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-06-20 20:28:48 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-06-20 20:28:48 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-06-20 20:28:48 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-06-20 20:28:48 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 20:28:48 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-06-20 20:28:48 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-06-20 20:28:48 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-06-20 20:28:48 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-06-20 20:28:48 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-06-20 20:28:48 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-06-20 20:28:48 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-06-20 20:28:48 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-06-20 20:28:48 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-06-20 20:28:48 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 20:28:48 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-06-20 20:28:48 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-06-20 20:28:48 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 20:28:48 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-06-20 20:28:48 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-06-20 20:28:48 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-06-20 20:28:48 -Mapped "{[/elec/elecUpLoad/importElecUser]}" onto public java.lang.String com.bootdo.elec.controller.ElecUpLoadController.importElecUser(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-20 20:28:48 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-06-20 20:28:48 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-06-20 20:28:48 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-06-20 20:28:48 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-06-20 20:28:48 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 20:28:48 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-06-20 20:28:48 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-06-20 20:28:48 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-06-20 20:28:48 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-06-20 20:28:48 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-06-20 20:28:48 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-06-20 20:28:48 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-06-20 20:28:48 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-06-20 20:28:48 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-06-20 20:28:48 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-06-20 20:28:48 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-06-20 20:28:48 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 20:28:48 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-06-20 20:28:48 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-06-20 20:28:48 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 20:28:48 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-20 20:28:48 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-06-20 20:28:48 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-06-20 20:28:48 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-06-20 20:28:48 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-06-20 20:28:48 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-06-20 20:28:48 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-06-20 20:28:48 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-06-20 20:28:48 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 20:28:48 -Mapped "{[/moneyList/moneyWZ/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.add()
2019-06-20 20:28:48 -Mapped "{[/moneyList/moneyWZ/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long)
2019-06-20 20:28:48 -Mapped "{[/moneyList/moneyWZ/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long[])
2019-06-20 20:28:48 -Mapped "{[/moneyList/moneyWZ/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.update(com.bootdo.elec.domain.ElecDO)
2019-06-20 20:28:48 -Mapped "{[/moneyList/moneyWZ/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyList.controller.MoneyListWZController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-06-20 20:28:48 -Mapped "{[/moneyList/moneyWZ/exprotWZ],methods=[GET]}" onto public void com.bootdo.moneyList.controller.MoneyListWZController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-06-20 20:28:48 -Mapped "{[/moneyList/moneyWZ/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 20:28:48 -Mapped "{[/moneyList/moneyWZ],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
2019-06-20 20:28:48 -Mapped "{[/moneyList/moneyWZ/batchMoney],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.batchMoney(java.lang.Long[])
2019-06-20 20:28:48 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-06-20 20:28:48 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-06-20 20:28:48 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-06-20 20:28:48 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-06-20 20:28:48 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 20:28:48 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-06-20 20:28:48 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 20:28:48 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-06-20 20:28:48 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-20 20:28:48 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-06-20 20:28:48 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-06-20 20:28:48 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-06-20 20:28:48 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-06-20 20:28:48 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 20:28:48 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-06-20 20:28:48 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 20:28:48 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-20 20:28:48 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-06-20 20:28:48 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-06-20 20:28:48 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-06-20 20:28:48 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-06-20 20:28:48 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-06-20 20:28:48 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 20:28:48 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-06-20 20:28:48 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 20:28:48 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-20 20:28:48 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-06-20 20:28:48 -Mapped "{[/moneyUpLoad/ElecLogUpLoad/exprotElecLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.exprotElecLogExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-20 20:28:48 -Mapped "{[/moneyUpLoad/ElecLogUpLoad/importElecLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.importElecLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-20 20:28:48 -Mapped "{[/moneyUpLoad/ElecLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.ElecLogUpLoad()
2019-06-20 20:28:48 -Mapped "{[/moneyUpLoad/HeatLogUpLoad/importHeatLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.importHeatLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-20 20:28:48 -Mapped "{[/moneyUpLoad/HeatLogUpLoad/exprotHeatLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.exprotHeatLogExcel(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-20 20:28:48 -Mapped "{[/moneyUpLoad/HeatLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.HeatLogUpLoad()
2019-06-20 20:28:48 -Mapped "{[/moneyUpLoad/WaterLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.WaterLogLogUpLoad()
2019-06-20 20:28:48 -Mapped "{[/moneyUpLoad/WaterLogUpLoad/importWaterLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.importWaterLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-20 20:28:48 -Mapped "{[/moneyUpLoad/WaterLogUpLoad/exprotWaterLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.exprotWaterLogExcel(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-20 20:28:48 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-06-20 20:28:48 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-06-20 20:28:48 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-06-20 20:28:48 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-06-20 20:28:48 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-06-20 20:28:48 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 20:28:48 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-06-20 20:28:48 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-06-20 20:28:48 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 20:28:48 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 20:28:48 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-06-20 20:28:48 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-06-20 20:28:48 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-06-20 20:28:48 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-06-20 20:28:48 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-06-20 20:28:48 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 20:28:48 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-06-20 20:28:48 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.batchRemove(java.lang.Long[])
2019-06-20 20:28:48 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 20:28:48 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 20:28:48 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-06-20 20:28:48 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-06-20 20:28:48 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-06-20 20:28:48 -Mapped "{[/print/print/batchPrint],methods=[POST]}" onto public java.util.List<com.bootdo.print.vo.PrintVo> com.bootdo.print.controller.PrintController.batchPrint(java.lang.Long[])
2019-06-20 20:28:48 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-06-20 20:28:48 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-06-20 20:28:48 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-06-20 20:28:48 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-06-20 20:28:48 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-06-20 20:28:48 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-06-20 20:28:48 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-06-20 20:28:48 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 20:28:48 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-06-20 20:28:48 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView(org.springframework.web.servlet.ModelAndView)
2019-06-20 20:28:48 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-06-20 20:28:48 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-06-20 20:28:48 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-06-20 20:28:48 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-06-20 20:28:48 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-06-20 20:28:48 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-06-20 20:28:48 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-20 20:28:48 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-06-20 20:28:48 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-06-20 20:28:48 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-06-20 20:28:48 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 20:28:48 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-06-20 20:28:48 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-06-20 20:28:48 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-06-20 20:28:48 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-06-20 20:28:48 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-06-20 20:28:48 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-06-20 20:28:48 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-06-20 20:28:48 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-06-20 20:28:48 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-06-20 20:28:48 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-06-20 20:28:48 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-06-20 20:28:48 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 20:28:48 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-06-20 20:28:48 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-06-20 20:28:48 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-06-20 20:28:48 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-06-20 20:28:48 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-06-20 20:28:48 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 20:28:48 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-06-20 20:28:48 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-06-20 20:28:48 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-06-20 20:28:48 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 20:28:48 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-06-20 20:28:48 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-06-20 20:28:48 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-06-20 20:28:48 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-06-20 20:28:48 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-06-20 20:28:48 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-06-20 20:28:48 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-06-20 20:28:48 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-06-20 20:28:48 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-06-20 20:28:48 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-06-20 20:28:48 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-06-20 20:28:48 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-06-20 20:28:48 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-06-20 20:28:48 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-06-20 20:28:48 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-06-20 20:28:48 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-06-20 20:28:48 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-06-20 20:28:48 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 20:28:48 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-06-20 20:28:48 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-06-20 20:28:48 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 20:28:48 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-06-20 20:28:48 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-06-20 20:28:48 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-06-20 20:28:48 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-06-20 20:28:48 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-06-20 20:28:48 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-06-20 20:28:48 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-06-20 20:28:48 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-06-20 20:28:48 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-20 20:28:48 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-06-20 20:28:48 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-06-20 20:28:48 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-20 20:28:48 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-06-20 20:28:48 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-06-20 20:28:48 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-20 20:28:48 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-06-20 20:28:48 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-06-20 20:28:49 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-06-20 20:28:49 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-06-20 20:28:49 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-06-20 20:28:49 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-06-20 20:28:50 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-06-20 20:28:50 -Initializing ExecutorService  'brokerChannelExecutor'
2019-06-20 20:28:50 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-20 20:28:51 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4c4d27c8: startup date [Thu Jun 20 20:28:24 CST 2019]; root of context hierarchy
2019-06-20 20:28:51 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-20 20:28:51 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-20 20:28:51 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-06-20 20:28:51 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-06-20 20:28:54 -Registering beans for JMX exposure on startup
2019-06-20 20:28:54 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-06-20 20:28:54 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-06-20 20:28:54 -Starting beans in phase 2147483647
2019-06-20 20:28:54 -Context refreshed
2019-06-20 20:28:54 -Found 1 custom documentation plugin(s)
2019-06-20 20:28:54 -Scanning for api listing references
2019-06-20 20:28:55 -Generating unique operation named: removeUsingPOST_1
2019-06-20 20:28:55 -Generating unique operation named: addUsingGET_1
2019-06-20 20:28:55 -Generating unique operation named: editUsingGET_1
2019-06-20 20:28:55 -Generating unique operation named: listUsingGET_1
2019-06-20 20:28:56 -Generating unique operation named: removeUsingPOST_2
2019-06-20 20:28:56 -Generating unique operation named: removeUsingPOST_3
2019-06-20 20:28:56 -Generating unique operation named: saveUsingPOST_1
2019-06-20 20:28:56 -Generating unique operation named: updateUsingGET_1
2019-06-20 20:28:56 -Generating unique operation named: updateUsingHEAD_1
2019-06-20 20:28:56 -Generating unique operation named: updateUsingPOST_1
2019-06-20 20:28:56 -Generating unique operation named: updateUsingPUT_1
2019-06-20 20:28:56 -Generating unique operation named: updateUsingPATCH_1
2019-06-20 20:28:56 -Generating unique operation named: updateUsingDELETE_1
2019-06-20 20:28:56 -Generating unique operation named: updateUsingOPTIONS_1
2019-06-20 20:28:56 -Generating unique operation named: updateUsingTRACE_1
2019-06-20 20:28:56 -Generating unique operation named: addUsingGET_2
2019-06-20 20:28:56 -Generating unique operation named: editUsingGET_2
2019-06-20 20:28:56 -Generating unique operation named: listUsingGET_2
2019-06-20 20:28:56 -Generating unique operation named: removeUsingPOST_4
2019-06-20 20:28:56 -Generating unique operation named: removeUsingPOST_5
2019-06-20 20:28:56 -Generating unique operation named: saveUsingPOST_2
2019-06-20 20:28:56 -Generating unique operation named: updateUsingPOST_2
2019-06-20 20:28:56 -Generating unique operation named: exprotExcelUsingGET_1
2019-06-20 20:28:56 -Generating unique operation named: addUsingGET_3
2019-06-20 20:28:56 -Generating unique operation named: editUsingGET_3
2019-06-20 20:28:56 -Generating unique operation named: listUsingGET_3
2019-06-20 20:28:56 -Generating unique operation named: removeUsingPOST_6
2019-06-20 20:28:56 -Generating unique operation named: removeUsingPOST_7
2019-06-20 20:28:56 -Generating unique operation named: saveUsingPOST_3
2019-06-20 20:28:56 -Generating unique operation named: updateUsingGET_2
2019-06-20 20:28:56 -Generating unique operation named: updateUsingHEAD_2
2019-06-20 20:28:56 -Generating unique operation named: updateUsingPOST_3
2019-06-20 20:28:56 -Generating unique operation named: updateUsingPUT_2
2019-06-20 20:28:56 -Generating unique operation named: updateUsingPATCH_2
2019-06-20 20:28:56 -Generating unique operation named: updateUsingDELETE_2
2019-06-20 20:28:56 -Generating unique operation named: updateUsingOPTIONS_2
2019-06-20 20:28:56 -Generating unique operation named: updateUsingTRACE_2
2019-06-20 20:28:56 -Generating unique operation named: addUsingGET_4
2019-06-20 20:28:56 -Generating unique operation named: editUsingGET_4
2019-06-20 20:28:56 -Generating unique operation named: listUsingGET_4
2019-06-20 20:28:56 -Generating unique operation named: removeUsingPOST_8
2019-06-20 20:28:56 -Generating unique operation named: removeUsingPOST_9
2019-06-20 20:28:56 -Generating unique operation named: saveUsingPOST_4
2019-06-20 20:28:56 -Generating unique operation named: updateUsingGET_3
2019-06-20 20:28:56 -Generating unique operation named: updateUsingHEAD_3
2019-06-20 20:28:56 -Generating unique operation named: updateUsingPOST_4
2019-06-20 20:28:56 -Generating unique operation named: updateUsingPUT_3
2019-06-20 20:28:56 -Generating unique operation named: updateUsingPATCH_3
2019-06-20 20:28:56 -Generating unique operation named: updateUsingDELETE_3
2019-06-20 20:28:56 -Generating unique operation named: updateUsingOPTIONS_3
2019-06-20 20:28:56 -Generating unique operation named: updateUsingTRACE_3
2019-06-20 20:28:56 -Generating unique operation named: ElecUsingGET_1
2019-06-20 20:28:56 -Generating unique operation named: addUsingGET_5
2019-06-20 20:28:56 -Generating unique operation named: editUsingGET_5
2019-06-20 20:28:56 -Generating unique operation named: listUsingGET_5
2019-06-20 20:28:56 -Generating unique operation named: removeUsingPOST_10
2019-06-20 20:28:56 -Generating unique operation named: removeUsingPOST_11
2019-06-20 20:28:56 -Generating unique operation named: saveUsingPOST_5
2019-06-20 20:28:56 -Generating unique operation named: updateUsingGET_4
2019-06-20 20:28:56 -Generating unique operation named: updateUsingHEAD_4
2019-06-20 20:28:56 -Generating unique operation named: updateUsingPOST_5
2019-06-20 20:28:56 -Generating unique operation named: updateUsingPUT_4
2019-06-20 20:28:56 -Generating unique operation named: updateUsingPATCH_4
2019-06-20 20:28:56 -Generating unique operation named: updateUsingDELETE_4
2019-06-20 20:28:56 -Generating unique operation named: updateUsingOPTIONS_4
2019-06-20 20:28:56 -Generating unique operation named: updateUsingTRACE_4
2019-06-20 20:28:56 -Generating unique operation named: editUsingGET_6
2019-06-20 20:28:56 -Generating unique operation named: listUsingGET_6
2019-06-20 20:28:56 -Generating unique operation named: updateUsingPOST_6
2019-06-20 20:28:56 -Generating unique operation named: addUsingGET_6
2019-06-20 20:28:56 -Generating unique operation named: editUsingGET_7
2019-06-20 20:28:56 -Generating unique operation named: exprotExcelUsingGET_2
2019-06-20 20:28:56 -Generating unique operation named: listUsingGET_7
2019-06-20 20:28:56 -Generating unique operation named: removeUsingPOST_12
2019-06-20 20:28:56 -Generating unique operation named: removeUsingPOST_13
2019-06-20 20:28:56 -Generating unique operation named: saveUsingPOST_6
2019-06-20 20:28:56 -Generating unique operation named: updateUsingGET_5
2019-06-20 20:28:56 -Generating unique operation named: updateUsingHEAD_5
2019-06-20 20:28:56 -Generating unique operation named: updateUsingPOST_7
2019-06-20 20:28:56 -Generating unique operation named: updateUsingPUT_5
2019-06-20 20:28:56 -Generating unique operation named: updateUsingPATCH_5
2019-06-20 20:28:56 -Generating unique operation named: updateUsingDELETE_5
2019-06-20 20:28:56 -Generating unique operation named: updateUsingOPTIONS_5
2019-06-20 20:28:57 -Generating unique operation named: updateUsingTRACE_5
2019-06-20 20:28:57 -Generating unique operation named: exprotExcelUsingGET_3
2019-06-20 20:28:57 -Generating unique operation named: addUsingGET_7
2019-06-20 20:28:57 -Generating unique operation named: editUsingGET_8
2019-06-20 20:28:57 -Generating unique operation named: listUsingGET_8
2019-06-20 20:28:57 -Generating unique operation named: removeUsingPOST_14
2019-06-20 20:28:57 -Generating unique operation named: removeUsingPOST_15
2019-06-20 20:28:57 -Generating unique operation named: saveUsingPOST_7
2019-06-20 20:28:57 -Generating unique operation named: updateUsingGET_6
2019-06-20 20:28:57 -Generating unique operation named: updateUsingHEAD_6
2019-06-20 20:28:57 -Generating unique operation named: updateUsingPOST_8
2019-06-20 20:28:57 -Generating unique operation named: updateUsingPUT_6
2019-06-20 20:28:57 -Generating unique operation named: updateUsingPATCH_6
2019-06-20 20:28:57 -Generating unique operation named: updateUsingDELETE_6
2019-06-20 20:28:57 -Generating unique operation named: updateUsingOPTIONS_6
2019-06-20 20:28:57 -Generating unique operation named: updateUsingTRACE_6
2019-06-20 20:28:57 -Generating unique operation named: addUsingGET_8
2019-06-20 20:28:57 -Generating unique operation named: editUsingGET_9
2019-06-20 20:28:57 -Generating unique operation named: listUsingGET_9
2019-06-20 20:28:57 -Generating unique operation named: removeUsingPOST_16
2019-06-20 20:28:57 -Generating unique operation named: removeUsingPOST_17
2019-06-20 20:28:57 -Generating unique operation named: saveUsingPOST_8
2019-06-20 20:28:57 -Generating unique operation named: updateUsingGET_7
2019-06-20 20:28:57 -Generating unique operation named: updateUsingHEAD_7
2019-06-20 20:28:57 -Generating unique operation named: updateUsingPOST_9
2019-06-20 20:28:57 -Generating unique operation named: updateUsingPUT_7
2019-06-20 20:28:57 -Generating unique operation named: updateUsingPATCH_7
2019-06-20 20:28:57 -Generating unique operation named: updateUsingDELETE_7
2019-06-20 20:28:57 -Generating unique operation named: updateUsingOPTIONS_7
2019-06-20 20:28:57 -Generating unique operation named: updateUsingTRACE_7
2019-06-20 20:28:57 -Generating unique operation named: addUsingGET_9
2019-06-20 20:28:57 -Generating unique operation named: editUsingGET_10
2019-06-20 20:28:57 -Generating unique operation named: infoUsingGET_1
2019-06-20 20:28:57 -Generating unique operation named: infoUsingHEAD_1
2019-06-20 20:28:57 -Generating unique operation named: infoUsingPOST_1
2019-06-20 20:28:57 -Generating unique operation named: infoUsingPUT_1
2019-06-20 20:28:57 -Generating unique operation named: infoUsingPATCH_1
2019-06-20 20:28:57 -Generating unique operation named: infoUsingDELETE_1
2019-06-20 20:28:57 -Generating unique operation named: infoUsingOPTIONS_1
2019-06-20 20:28:57 -Generating unique operation named: infoUsingTRACE_1
2019-06-20 20:28:57 -Generating unique operation named: listUsingGET_10
2019-06-20 20:28:57 -Generating unique operation named: removeUsingPOST_18
2019-06-20 20:28:57 -Generating unique operation named: removeUsingPOST_19
2019-06-20 20:28:57 -Generating unique operation named: saveUsingPOST_9
2019-06-20 20:28:57 -Generating unique operation named: updateUsingPOST_10
2019-06-20 20:28:57 -Generating unique operation named: listUsingGET_11
2019-06-20 20:28:57 -Generating unique operation named: removeUsingPOST_20
2019-06-20 20:28:57 -Generating unique operation named: welcomeUsingGET_1
2019-06-20 20:28:57 -Generating unique operation named: addUsingGET_10
2019-06-20 20:28:57 -Generating unique operation named: editUsingGET_11
2019-06-20 20:28:57 -Generating unique operation named: listUsingGET_12
2019-06-20 20:28:57 -Generating unique operation named: removeUsingPOST_21
2019-06-20 20:28:57 -Generating unique operation named: saveUsingPOST_10
2019-06-20 20:28:57 -Generating unique operation named: treeUsingGET_1
2019-06-20 20:28:57 -Generating unique operation named: treeUsingGET_2
2019-06-20 20:28:57 -Generating unique operation named: updateUsingPOST_11
2019-06-20 20:28:57 -Generating unique operation named: addUsingGET_11
2019-06-20 20:28:57 -Generating unique operation named: editUsingGET_12
2019-06-20 20:28:57 -Generating unique operation named: listUsingGET_13
2019-06-20 20:28:57 -Generating unique operation named: removeUsingPOST_22
2019-06-20 20:28:57 -Generating unique operation named: removeUsingPOST_23
2019-06-20 20:28:57 -Generating unique operation named: updateUsingPOST_12
2019-06-20 20:28:57 -Generating unique operation named: addUsingGET_12
2019-06-20 20:28:57 -Generating unique operation named: editUsingGET_13
2019-06-20 20:28:57 -Generating unique operation named: listUsingGET_14
2019-06-20 20:28:58 -Generating unique operation named: removeUsingPOST_24
2019-06-20 20:28:58 -Generating unique operation named: removeUsingPOST_25
2019-06-20 20:28:58 -Generating unique operation named: saveUsingPOST_11
2019-06-20 20:28:58 -Generating unique operation named: updateUsingGET_8
2019-06-20 20:28:58 -Generating unique operation named: updateUsingHEAD_8
2019-06-20 20:28:58 -Generating unique operation named: updateUsingPOST_13
2019-06-20 20:28:58 -Generating unique operation named: updateUsingPUT_8
2019-06-20 20:28:58 -Generating unique operation named: updateUsingPATCH_8
2019-06-20 20:28:58 -Generating unique operation named: updateUsingDELETE_8
2019-06-20 20:28:58 -Generating unique operation named: updateUsingOPTIONS_8
2019-06-20 20:28:58 -Generating unique operation named: updateUsingTRACE_8
2019-06-20 20:28:58 -Generating unique operation named: addUsingGET_13
2019-06-20 20:28:58 -Generating unique operation named: batchRemoveUsingPOST_1
2019-06-20 20:28:58 -Generating unique operation named: editUsingGET_14
2019-06-20 20:28:58 -Generating unique operation named: listUsingGET_15
2019-06-20 20:28:58 -Generating unique operation named: printEditUsingGET_1
2019-06-20 20:28:58 -Generating unique operation named: removeUsingPOST_26
2019-06-20 20:28:58 -Generating unique operation named: saveUsingPOST_12
2019-06-20 20:28:58 -Generating unique operation named: updateUsingGET_9
2019-06-20 20:28:58 -Generating unique operation named: updateUsingHEAD_9
2019-06-20 20:28:58 -Generating unique operation named: updateUsingPOST_14
2019-06-20 20:28:58 -Generating unique operation named: updateUsingPUT_9
2019-06-20 20:28:58 -Generating unique operation named: updateUsingPATCH_9
2019-06-20 20:28:58 -Generating unique operation named: updateUsingDELETE_9
2019-06-20 20:28:58 -Generating unique operation named: updateUsingOPTIONS_9
2019-06-20 20:28:58 -Generating unique operation named: updateUsingTRACE_9
2019-06-20 20:28:58 -Generating unique operation named: addUsingGET_14
2019-06-20 20:28:58 -Generating unique operation named: batchRemoveUsingPOST_2
2019-06-20 20:28:58 -Generating unique operation named: editUsingGET_15
2019-06-20 20:28:58 -Generating unique operation named: listUsingGET_16
2019-06-20 20:28:58 -Generating unique operation named: saveUsingPOST_13
2019-06-20 20:28:58 -Generating unique operation named: saveUsingPOST_14
2019-06-20 20:28:58 -Generating unique operation named: updateUsingPOST_15
2019-06-20 20:28:58 -Generating unique operation named: listUsingGET_17
2019-06-20 20:28:58 -Generating unique operation named: listUsingHEAD_1
2019-06-20 20:28:58 -Generating unique operation named: listUsingPOST_1
2019-06-20 20:28:58 -Generating unique operation named: listUsingPUT_1
2019-06-20 20:28:58 -Generating unique operation named: listUsingPATCH_1
2019-06-20 20:28:58 -Generating unique operation named: listUsingDELETE_1
2019-06-20 20:28:58 -Generating unique operation named: listUsingOPTIONS_1
2019-06-20 20:28:58 -Generating unique operation named: listUsingTRACE_1
2019-06-20 20:28:58 -Generating unique operation named: countDDUsingGET_1
2019-06-20 20:28:58 -Generating unique operation named: exportDDUsingGET_1
2019-06-20 20:28:58 -Generating unique operation named: exportElecYYUsingGET_1
2019-06-20 20:28:58 -Generating unique operation named: addUsingGET_15
2019-06-20 20:28:58 -Generating unique operation named: batchRemoveUsingPOST_3
2019-06-20 20:28:58 -Generating unique operation named: editUsingGET_16
2019-06-20 20:28:58 -Generating unique operation named: listUsingGET_18
2019-06-20 20:28:58 -Generating unique operation named: removeUsingPOST_27
2019-06-20 20:28:58 -Generating unique operation named: saveUsingPOST_15
2019-06-20 20:28:58 -Generating unique operation named: treeUsingGET_3
2019-06-20 20:28:58 -Generating unique operation named: treeViewUsingGET_1
2019-06-20 20:28:58 -Generating unique operation named: updateUsingPOST_16
2019-06-20 20:28:58 -Generating unique operation named: addUsingGET_16
2019-06-20 20:28:58 -Generating unique operation named: editUsingGET_17
2019-06-20 20:28:58 -Generating unique operation named: exprotExcelUsingGET_4
2019-06-20 20:28:58 -Generating unique operation named: listUsingGET_19
2019-06-20 20:28:58 -Generating unique operation named: removeUsingPOST_28
2019-06-20 20:28:58 -Generating unique operation named: removeUsingPOST_29
2019-06-20 20:28:58 -Generating unique operation named: saveUsingPOST_16
2019-06-20 20:28:58 -Generating unique operation named: updateUsingGET_10
2019-06-20 20:28:58 -Generating unique operation named: updateUsingHEAD_10
2019-06-20 20:28:58 -Generating unique operation named: updateUsingPOST_17
2019-06-20 20:28:58 -Generating unique operation named: updateUsingPUT_10
2019-06-20 20:28:58 -Generating unique operation named: updateUsingPATCH_10
2019-06-20 20:28:58 -Generating unique operation named: updateUsingDELETE_10
2019-06-20 20:28:58 -Generating unique operation named: updateUsingOPTIONS_10
2019-06-20 20:28:58 -Generating unique operation named: updateUsingTRACE_10
2019-06-20 20:28:58 -Generating unique operation named: exprotExcelUsingGET_5
2019-06-20 20:28:58 -Generating unique operation named: addUsingGET_17
2019-06-20 20:28:58 -Generating unique operation named: editUsingGET_18
2019-06-20 20:28:58 -Generating unique operation named: listUsingGET_20
2019-06-20 20:28:58 -Generating unique operation named: removeUsingPOST_30
2019-06-20 20:28:58 -Generating unique operation named: removeUsingPOST_31
2019-06-20 20:28:58 -Generating unique operation named: saveUsingPOST_17
2019-06-20 20:28:58 -Generating unique operation named: updateUsingGET_11
2019-06-20 20:28:58 -Generating unique operation named: updateUsingHEAD_11
2019-06-20 20:28:58 -Generating unique operation named: updateUsingPOST_18
2019-06-20 20:28:58 -Generating unique operation named: updateUsingPUT_11
2019-06-20 20:28:58 -Generating unique operation named: updateUsingPATCH_11
2019-06-20 20:28:58 -Generating unique operation named: updateUsingDELETE_11
2019-06-20 20:28:58 -Generating unique operation named: updateUsingOPTIONS_11
2019-06-20 20:28:58 -Generating unique operation named: updateUsingTRACE_11
2019-06-20 20:28:58 -Generating unique operation named: addUsingGET_18
2019-06-20 20:28:58 -Generating unique operation named: editUsingGET_19
2019-06-20 20:28:58 -Generating unique operation named: listUsingGET_21
2019-06-20 20:28:58 -Generating unique operation named: removeUsingPOST_32
2019-06-20 20:28:58 -Generating unique operation named: removeUsingPOST_33
2019-06-20 20:28:58 -Generating unique operation named: saveUsingPOST_18
2019-06-20 20:28:58 -Generating unique operation named: updateUsingGET_12
2019-06-20 20:28:58 -Generating unique operation named: updateUsingHEAD_12
2019-06-20 20:28:58 -Generating unique operation named: updateUsingPOST_19
2019-06-20 20:28:58 -Generating unique operation named: updateUsingPUT_12
2019-06-20 20:28:58 -Generating unique operation named: updateUsingPATCH_12
2019-06-20 20:28:58 -Generating unique operation named: updateUsingDELETE_12
2019-06-20 20:28:58 -Generating unique operation named: updateUsingOPTIONS_12
2019-06-20 20:28:58 -Generating unique operation named: updateUsingTRACE_12
2019-06-20 20:28:58 -Starting Quartz Scheduler now
2019-06-20 20:28:58 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-06-20 20:28:58 -Starting...
2019-06-20 20:28:58 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-06-20 20:28:58 -Started.
2019-06-20 20:28:59 -Starting ProtocolHandler ["http-nio-8081"]
2019-06-20 20:28:59 -Using a shared selector for servlet write/read
2019-06-20 20:28:59 -Tomcat started on port(s): 8081 (http) with context path ''
2019-06-20 20:28:59 -Started BootdoApplication in 37.175 seconds (JVM running for 38.918)
2019-06-20 20:28:59 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-06-20 20:28:59 -==> Parameters: 
2019-06-20 20:28:59 -<==      Total: 1
2019-06-20 20:29:50 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-06-20 20:38:14 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-06-20 20:38:14 -FrameworkServlet 'dispatcherServlet': initialization started
2019-06-20 20:38:14 -FrameworkServlet 'dispatcherServlet': initialization completed in 134 ms
2019-06-20 20:38:14 -Enabling session validation scheduler...
2019-06-20 20:38:15 -请求地址 : http://localhost:8081/login;JSESSIONID=9711b1f8-fab8-41a7-85cc-50e0521421f5
2019-06-20 20:38:15 -HTTP METHOD : GET
2019-06-20 20:38:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-06-20 20:38:15 -参数 : [{}]
2019-06-20 20:38:15 -耗时 : 4
2019-06-20 20:38:15 -返回值 : login
2019-06-20 20:38:21 -请求地址 : http://localhost:8081/getVerify
2019-06-20 20:38:21 -HTTP METHOD : GET
2019-06-20 20:38:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-06-20 20:38:21 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@3fb7907, org.apache.shiro.web.servlet.ShiroHttpServletResponse@d3c8708]
2019-06-20 20:38:40 -4011
2019-06-20 20:38:42 -耗时 : 20570
2019-06-20 20:38:42 -返回值 : null
2019-06-20 20:38:42 -请求地址 : http://localhost:8081/login
2019-06-20 20:38:42 -HTTP METHOD : GET
2019-06-20 20:38:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-06-20 20:38:42 -参数 : [{}]
2019-06-20 20:38:42 -耗时 : 1
2019-06-20 20:38:42 -返回值 : login
2019-06-20 20:39:07 -请求地址 : http://localhost:8081/login
2019-06-20 20:39:07 -HTTP METHOD : POST
2019-06-20 20:39:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-06-20 20:39:07 -参数 : [admin, 111111, 4011, org.apache.shiro.web.servlet.ShiroHttpServletRequest@476a40cd]
2019-06-20 20:39:08 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-06-20 20:39:08 -==> Parameters: admin(String)
2019-06-20 20:39:08 -<==      Total: 1
2019-06-20 20:39:08 -耗时 : 556
2019-06-20 20:39:08 -返回值 : {msg=操作成功, code=0}
2019-06-20 20:39:08 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-06-20 20:39:08 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-20 20:39:08 -==> Parameters: 1(Long), admin(String), 登录(String), 556(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-06-20 20:39:08.768(Timestamp)
2019-06-20 20:39:09 -<==    Updates: 1
2019-06-20 20:39:09 -请求地址 : http://localhost:8081/index
2019-06-20 20:39:09 -HTTP METHOD : GET
2019-06-20 20:39:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-20 20:39:09 -参数 : [{}]
2019-06-20 20:39:09 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-20 20:39:10 -==> Parameters: 1(Long)
2019-06-20 20:39:10 -<==      Total: 51
2019-06-20 20:39:10 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-20 20:39:10 -==> Parameters: 138(Long)
2019-06-20 20:39:10 -<==      Total: 1
2019-06-20 20:39:10 -耗时 : 591
2019-06-20 20:39:10 -返回值 : index_v1
2019-06-20 20:39:10 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-20 20:39:10 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 592(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-bullseye","url":"/moneyUpLoad/ElecLogUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"165","parentId":"106","text":"缴费上传"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":tru(String), 127.0.0.1(String), 2019-06-20 20:39:10.615(Timestamp)
2019-06-20 20:39:10 -<==    Updates: 1
2019-06-20 20:39:13 -请求地址 : http://localhost:8081/main
2019-06-20 20:39:13 -HTTP METHOD : GET
2019-06-20 20:39:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-20 20:39:13 -参数 : []
2019-06-20 20:39:13 -耗时 : 4
2019-06-20 20:39:13 -返回值 : main
2019-06-20 20:39:14 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-20 20:39:14 -HTTP METHOD : GET
2019-06-20 20:39:14 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-20 20:39:14 -参数 : []
2019-06-20 20:39:14 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-20 20:39:14 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-20 20:39:14 -<==      Total: 0
2019-06-20 20:39:14 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-20 20:39:15 -==> Parameters: 1(Long), 0(String)
2019-06-20 20:39:15 -<==      Total: 1
2019-06-20 20:39:15 -耗时 : 780
2019-06-20 20:39:15 -返回值 : com.bootdo.common.utils.PageUtils@14c945fd
2019-06-20 20:39:15 -请求地址 : http://localhost:8081/main
2019-06-20 20:39:15 -HTTP METHOD : GET
2019-06-20 20:39:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-20 20:39:15 -参数 : []
2019-06-20 20:39:15 -耗时 : 0
2019-06-20 20:39:15 -返回值 : main
2019-06-20 20:39:18 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-06-20 20:39:18 -==> Parameters: 1(Long)
2019-06-20 20:39:18 -<==      Total: 95
2019-06-20 20:39:18 -请求地址 : http://localhost:8081/elec/elecInto
2019-06-20 20:39:18 -HTTP METHOD : GET
2019-06-20 20:39:18 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.ElecInto
2019-06-20 20:39:18 -参数 : []
2019-06-20 20:39:18 -耗时 : 1
2019-06-20 20:39:18 -返回值 : elec/elecInto/elecInto
2019-06-20 20:39:25 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.web.socket.sockjs.SockJsException: Uncaught failure in SockJS request, uri=http://localhost:8081/endpointChat/029/p_vvpntp/xhr_streaming; nested exception is org.springframework.web.socket.sockjs.SockJsTransportFailureException: Failed to open session; nested exception is org.springframework.web.socket.sockjs.SockJsTransportFailureException: Failed to write SockJsFrame content='o'; nested exception is org.apache.catalina.connector.ClientAbortException: java.io.IOException: 你的主机中的软件中止了一个已建立的连接。] with root cause
java.io.IOException: 你的主机中的软件中止了一个已建立的连接。
	at sun.nio.ch.SocketDispatcher.write0(Native Method)
	at sun.nio.ch.SocketDispatcher.write(SocketDispatcher.java:51)
	at sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:93)
	at sun.nio.ch.IOUtil.write(IOUtil.java:65)
	at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:471)
	at org.apache.tomcat.util.net.NioChannel.write(NioChannel.java:134)
	at org.apache.tomcat.util.net.NioBlockingSelector.write(NioBlockingSelector.java:101)
	at org.apache.tomcat.util.net.NioSelectorPool.write(NioSelectorPool.java:157)
	at org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.doWrite(NioEndpoint.java:1276)
	at org.apache.tomcat.util.net.SocketWrapperBase.doWrite(SocketWrapperBase.java:670)
	at org.apache.tomcat.util.net.SocketWrapperBase.flushBlocking(SocketWrapperBase.java:607)
	at org.apache.tomcat.util.net.SocketWrapperBase.flush(SocketWrapperBase.java:597)
	at org.apache.coyote.http11.Http11OutputBuffer$SocketOutputBuffer.flush(Http11OutputBuffer.java:646)
	at org.apache.coyote.http11.filters.ChunkedOutputFilter.flush(ChunkedOutputFilter.java:169)
	at org.apache.coyote.http11.Http11OutputBuffer.flush(Http11OutputBuffer.java:252)
	at org.apache.coyote.http11.Http11Processor.flush(Http11Processor.java:1564)
	at org.apache.coyote.AbstractProcessor.action(AbstractProcessor.java:352)
	at org.apache.coyote.Response.action(Response.java:173)
	at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:317)
	at org.apache.catalina.connector.OutputBuffer.flush(OutputBuffer.java:284)
	at org.apache.catalina.connector.Response.flushBuffer(Response.java:541)
	at org.apache.catalina.connector.ResponseFacade.flushBuffer(ResponseFacade.java:312)
	at javax.servlet.ServletResponseWrapper.flushBuffer(ServletResponseWrapper.java:176)
	at javax.servlet.ServletResponseWrapper.flushBuffer(ServletResponseWrapper.java:176)
	at org.springframework.http.server.ServletServerHttpResponse.flush(ServletServerHttpResponse.java:90)
	at org.springframework.web.socket.sockjs.transport.session.AbstractHttpSockJsSession.writeFrameInternal(AbstractHttpSockJsSession.java:358)
	at org.springframework.web.socket.sockjs.transport.session.AbstractSockJsSession.writeFrame(AbstractSockJsSession.java:324)
	at org.springframework.web.socket.sockjs.transport.session.StreamingSockJsSession.handleRequestInternal(StreamingSockJsSession.java:64)
	at org.springframework.web.socket.sockjs.transport.session.AbstractHttpSockJsSession.handleInitialRequest(AbstractHttpSockJsSession.java:229)
	at org.springframework.web.socket.sockjs.transport.handler.AbstractHttpSendingTransportHandler.handleRequestInternal(AbstractHttpSendingTransportHandler.java:76)
	at org.springframework.web.socket.sockjs.transport.handler.AbstractHttpSendingTransportHandler.handleRequest(AbstractHttpSendingTransportHandler.java:66)
	at org.springframework.web.socket.sockjs.transport.TransportHandlingSockJsService.handleTransportRequest(TransportHandlingSockJsService.java:312)
	at org.springframework.web.socket.sockjs.support.AbstractSockJsService.handleRequest(AbstractSockJsService.java:432)
	at org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler.handleRequest(SockJsHttpRequestHandler.java:133)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:53)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-06-20 20:39:25 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:20)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:23)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:73)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:175)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-06-20 20:39:43 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-06-20 20:39:43 -HTTP METHOD : GET
2019-06-20 20:39:43 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-06-20 20:39:43 -参数 : [ModelAndView: materialized View is [null]; model is null]
2019-06-20 20:39:43 -耗时 : 2
2019-06-20 20:39:43 -返回值 : system/dept/deptTree
2019-06-20 20:39:43 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-06-20 20:39:43 -HTTP METHOD : GET
2019-06-20 20:39:43 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-06-20 20:39:43 -参数 : []
2019-06-20 20:39:43 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-06-20 20:39:43 -==> Parameters: 
2019-06-20 20:39:43 -<==      Total: 3
2019-06-20 20:39:43 -耗时 : 103
2019-06-20 20:39:43 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-06-20 20:39:46 -请求地址 : http://localhost:8081/elec/elecInto/importElecIntoExcel
2019-06-20 20:39:46 -HTTP METHOD : POST
2019-06-20 20:39:46 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel
2019-06-20 20:39:46 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@d920fd3, com.bootdo.elec.vo.ElecVo@16e80af7, org.apache.shiro.web.servlet.ShiroHttpServletResponse@115131e9]
2019-06-20 20:39:50 -==>  Preparing: UPDATE ELEC SET ELEC_SUM = ELEC_SUM + ? WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-06-20 20:39:50 -==> Parameters: 15(BigDecimal), 2019-05(String), 2(String), 1-0001(String), 李文英(String)
2019-06-20 20:39:50 -<==    Updates: 1
2019-06-20 20:39:50 -==>  Preparing: select * from elec WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-06-20 20:39:50 -==> Parameters: 2019-05(String), 2(String), 1-0001(String), 李文英(String)
2019-06-20 20:39:50 -<==      Total: 1
2019-06-20 20:39:50 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-20 20:39:50 -==> Parameters: 1-0001(String), 李文英(String), B(String), 2(String), 1(String), 15(BigDecimal), 2019-06-20 20:39:50.531(Timestamp), 2019-05(String), admin(String), 2019-06-20 20:39:50.531(Timestamp), admin(String), null
2019-06-20 20:39:50 -<==    Updates: 1
2019-06-20 20:39:50 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where user_id = ? and user_org = ? and create_time = ? 
2019-06-20 20:39:50 -==> Parameters: 1-0001(String), 2(String), 2019-05(String)
2019-06-20 20:39:50 -<==      Total: 2
2019-06-20 20:39:50 -耗时 : 4154
2019-06-20 20:39:50 -返回值 : fail
2019-06-20 20:42:09 -请求地址 : http://localhost:8081/elec/elecInto/importElecIntoExcel
2019-06-20 20:42:09 -HTTP METHOD : POST
2019-06-20 20:42:09 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel
2019-06-20 20:42:09 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@4f434f1e, com.bootdo.elec.vo.ElecVo@4f036f7b, org.apache.shiro.web.servlet.ShiroHttpServletResponse@4c05db4]
2019-06-20 20:42:09 -==>  Preparing: UPDATE ELEC SET ELEC_SUM = ELEC_SUM + ? WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-06-20 20:42:09 -==> Parameters: 15(BigDecimal), 2019-05(String), 2(String), 1-0001(String), 李文英(String)
2019-06-20 20:42:09 -<==    Updates: 1
2019-06-20 20:42:09 -==>  Preparing: select * from elec WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-06-20 20:42:09 -==> Parameters: 2019-05(String), 2(String), 1-0001(String), 李文英(String)
2019-06-20 20:42:09 -<==      Total: 1
2019-06-20 20:42:09 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-20 20:42:09 -==> Parameters: 1-0001(String), 李文英(String), B(String), 2(String), 1(String), 15(BigDecimal), 2019-06-20 20:42:09.755(Timestamp), 2019-05(String), admin(String), 2019-06-20 20:42:09.755(Timestamp), admin(String), null
2019-06-20 20:42:09 -<==    Updates: 1
2019-06-20 20:42:09 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where user_id = ? and user_org = ? and create_time = ? 
2019-06-20 20:42:09 -==> Parameters: 1-0001(String), 2(String), 2019-05(String)
2019-06-20 20:42:09 -<==      Total: 1
2019-06-20 20:42:09 -==>  Preparing: update print SET `user_id` = ?, `user_name` = ?, `user_type` = ?, `user_org` = ?, `start` = ?, `end` = ?, `hu` = ?, `elec_price` = ?, `elec_amount` = ?, `elec_cost` = ?, `elec_sum` = ?, `elec_money` = ?, `print_date` = ?, `create_time` = ?, `create_by` = ?, `update_time` = ?, `update_by` = ? where id = ? 
2019-06-20 20:42:09 -==> Parameters: 1-0001(String), 李文英(String), B(String), 2(String), 10300(Integer), 10370(Integer), 1(Integer), 0.465(BigDecimal), 0.00(BigDecimal), 32.55(BigDecimal), 40.00(BigDecimal), 15(BigDecimal), 2019-06-20 20:42:09.794(Timestamp), 2019-05(String), admin(String), 2019-06-20 20:42:09.794(Timestamp), admin(String), 14(Long)
2019-06-20 20:42:09 -<==    Updates: 1
2019-06-20 20:42:09 -==>  Preparing: UPDATE ELEC SET ELEC_SUM = ELEC_SUM + ? WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-06-20 20:42:09 -==> Parameters: 25(BigDecimal), 2019-05(String), 2(String), 1-0004(String), 姜海龙(String)
2019-06-20 20:42:09 -<==    Updates: 1
2019-06-20 20:42:09 -==>  Preparing: select * from elec WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-06-20 20:42:09 -==> Parameters: 2019-05(String), 2(String), 1-0004(String), 姜海龙(String)
2019-06-20 20:42:09 -<==      Total: 1
2019-06-20 20:42:09 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-20 20:42:09 -==> Parameters: 1-0004(String), 姜海龙(String), B(String), 2(String), 1(String), 25(BigDecimal), 2019-06-20 20:42:09.941(Timestamp), 2019-05(String), admin(String), 2019-06-20 20:42:09.941(Timestamp), admin(String), null
2019-06-20 20:42:09 -<==    Updates: 1
2019-06-20 20:42:09 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where user_id = ? and user_org = ? and create_time = ? 
2019-06-20 20:42:09 -==> Parameters: 1-0004(String), 2(String), 2019-05(String)
2019-06-20 20:42:09 -<==      Total: 1
2019-06-20 20:42:09 -==>  Preparing: update print SET `user_id` = ?, `user_name` = ?, `user_type` = ?, `user_org` = ?, `start` = ?, `end` = ?, `hu` = ?, `elec_price` = ?, `elec_amount` = ?, `elec_cost` = ?, `elec_sum` = ?, `elec_money` = ?, `print_date` = ?, `create_time` = ?, `create_by` = ?, `update_time` = ?, `update_by` = ? where id = ? 
2019-06-20 20:42:09 -==> Parameters: 1-0004(String), 姜海龙(String), B(String), 2(String), 1553(Integer), 1689(Integer), 1(Integer), 0.465(BigDecimal), 0.00(BigDecimal), 63.24(BigDecimal), 45.00(BigDecimal), 25(BigDecimal), 2019-06-20 20:42:09.993(Timestamp), 2019-05(String), admin(String), 2019-06-20 20:42:09.993(Timestamp), admin(String), 15(Long)
2019-06-20 20:42:10 -<==    Updates: 1
2019-06-20 20:42:10 -耗时 : 510
2019-06-20 20:42:10 -返回值 : success
2019-06-20 20:43:47 -请求地址 : http://localhost:8081/elec/elecInto/importElecIntoExcel
2019-06-20 20:43:47 -HTTP METHOD : POST
2019-06-20 20:43:47 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel
2019-06-20 20:43:47 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@a83829, com.bootdo.elec.vo.ElecVo@364b8292, org.apache.shiro.web.servlet.ShiroHttpServletResponse@33dd7d5a]
2019-06-20 20:43:47 -==>  Preparing: UPDATE ELEC SET ELEC_SUM = ELEC_SUM + ? WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-06-20 20:43:47 -==> Parameters: 15(BigDecimal), 2019-05(String), 2(String), 1-0001(String), 李文英(String)
2019-06-20 20:43:47 -<==    Updates: 1
2019-06-20 20:43:47 -==>  Preparing: select * from elec WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-06-20 20:43:47 -==> Parameters: 2019-05(String), 2(String), 1-0001(String), 李文英(String)
2019-06-20 20:43:47 -<==      Total: 1
2019-06-20 20:43:47 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-20 20:43:47 -==> Parameters: 1-0001(String), 李文英(String), B(String), 2(String), 1(String), 15(BigDecimal), 2019-06-20 20:43:47.55(Timestamp), 2019-05(String), admin(String), 2019-06-20 20:43:47.55(Timestamp), admin(String), null
2019-06-20 20:43:47 -<==    Updates: 1
2019-06-20 20:43:47 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where user_id = ? and user_org = ? and create_time = ? 
2019-06-20 20:43:47 -==> Parameters: 1-0001(String), 2(String), 2019-05(String)
2019-06-20 20:43:47 -<==      Total: 1
2019-06-20 20:43:47 -==>  Preparing: update print SET `user_id` = ?, `user_name` = ?, `user_type` = ?, `user_org` = ?, `start` = ?, `end` = ?, `hu` = ?, `elec_price` = ?, `elec_amount` = ?, `elec_cost` = ?, `elec_sum` = ?, `elec_money` = ?, `print_date` = ?, `create_time` = ?, `create_by` = ?, `update_time` = ?, `update_by` = ? where id = ? 
2019-06-20 20:43:47 -==> Parameters: 1-0001(String), 李文英(String), B(String), 2(String), 10300(Integer), 10370(Integer), 1(Integer), 0.465(BigDecimal), 0.00(BigDecimal), 32.55(BigDecimal), 15.00(BigDecimal), 15(BigDecimal), 2019-06-20 20:43:47.6(Timestamp), 2019-05(String), admin(String), 2019-06-20 20:43:47.6(Timestamp), admin(String), 14(Long)
2019-06-20 20:43:47 -<==    Updates: 1
2019-06-20 20:43:47 -==>  Preparing: UPDATE ELEC SET ELEC_SUM = ELEC_SUM + ? WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-06-20 20:43:47 -==> Parameters: 25(BigDecimal), 2019-05(String), 2(String), 1-0004(String), 姜海龙(String)
2019-06-20 20:43:47 -<==    Updates: 1
2019-06-20 20:43:47 -==>  Preparing: select * from elec WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-06-20 20:43:47 -==> Parameters: 2019-05(String), 2(String), 1-0004(String), 姜海龙(String)
2019-06-20 20:43:47 -<==      Total: 1
2019-06-20 20:43:47 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-20 20:43:47 -==> Parameters: 1-0004(String), 姜海龙(String), B(String), 2(String), 1(String), 25(BigDecimal), 2019-06-20 20:43:47.704(Timestamp), 2019-05(String), admin(String), 2019-06-20 20:43:47.704(Timestamp), admin(String), null
2019-06-20 20:43:47 -<==    Updates: 1
2019-06-20 20:43:47 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where user_id = ? and user_org = ? and create_time = ? 
2019-06-20 20:43:47 -==> Parameters: 1-0004(String), 2(String), 2019-05(String)
2019-06-20 20:43:47 -<==      Total: 1
2019-06-20 20:43:47 -==>  Preparing: update print SET `user_id` = ?, `user_name` = ?, `user_type` = ?, `user_org` = ?, `start` = ?, `end` = ?, `hu` = ?, `elec_price` = ?, `elec_amount` = ?, `elec_cost` = ?, `elec_sum` = ?, `elec_money` = ?, `print_date` = ?, `create_time` = ?, `create_by` = ?, `update_time` = ?, `update_by` = ? where id = ? 
2019-06-20 20:43:47 -==> Parameters: 1-0004(String), 姜海龙(String), B(String), 2(String), 1553(Integer), 1689(Integer), 1(Integer), 0.465(BigDecimal), 0.00(BigDecimal), 63.24(BigDecimal), 25.00(BigDecimal), 25(BigDecimal), 2019-06-20 20:43:47.778(Timestamp), 2019-05(String), admin(String), 2019-06-20 20:43:47.778(Timestamp), admin(String), 15(Long)
2019-06-20 20:43:47 -<==    Updates: 1
2019-06-20 20:43:47 -耗时 : 694
2019-06-20 20:43:47 -返回值 : success
2019-06-20 20:44:28 -请求地址 : http://localhost:8081/index
2019-06-20 20:44:28 -HTTP METHOD : GET
2019-06-20 20:44:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-20 20:44:28 -参数 : [{}]
2019-06-20 20:44:28 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-20 20:44:28 -==> Parameters: 1(Long)
2019-06-20 20:44:28 -<==      Total: 51
2019-06-20 20:44:28 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-20 20:44:28 -==> Parameters: 138(Long)
2019-06-20 20:44:28 -<==      Total: 1
2019-06-20 20:44:28 -耗时 : 32
2019-06-20 20:44:28 -返回值 : index_v1
2019-06-20 20:44:28 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-20 20:44:28 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 32(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-bullseye","url":"/moneyUpLoad/ElecLogUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"165","parentId":"106","text":"缴费上传"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":tru(String), 127.0.0.1(String), 2019-06-20 20:44:28.679(Timestamp)
2019-06-20 20:44:28 -<==    Updates: 1
2019-06-20 20:44:28 -请求地址 : http://localhost:8081/main
2019-06-20 20:44:28 -HTTP METHOD : GET
2019-06-20 20:44:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-20 20:44:28 -参数 : []
2019-06-20 20:44:28 -耗时 : 1
2019-06-20 20:44:28 -返回值 : main
2019-06-20 20:44:28 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-20 20:44:28 -HTTP METHOD : GET
2019-06-20 20:44:28 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-20 20:44:28 -参数 : []
2019-06-20 20:44:28 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-20 20:44:28 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-20 20:44:28 -<==      Total: 0
2019-06-20 20:44:28 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-20 20:44:28 -==> Parameters: 1(Long), 0(String)
2019-06-20 20:44:28 -<==      Total: 1
2019-06-20 20:44:28 -耗时 : 7
2019-06-20 20:44:28 -返回值 : com.bootdo.common.utils.PageUtils@5ef32d2f
2019-06-20 20:44:29 -请求地址 : http://localhost:8081/main
2019-06-20 20:44:29 -HTTP METHOD : GET
2019-06-20 20:44:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-20 20:44:29 -参数 : []
2019-06-20 20:44:29 -耗时 : 1
2019-06-20 20:44:29 -返回值 : main
2019-06-20 20:44:31 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-06-20 20:44:31 -HTTP METHOD : GET
2019-06-20 20:44:31 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-06-20 20:44:31 -参数 : []
2019-06-20 20:44:31 -耗时 : 0
2019-06-20 20:44:31 -返回值 : moneyList/moneyList
2019-06-20 20:44:33 -请求地址 : http://localhost:8081/elec/elec
2019-06-20 20:44:33 -HTTP METHOD : GET
2019-06-20 20:44:33 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-06-20 20:44:33 -参数 : []
2019-06-20 20:44:33 -耗时 : 0
2019-06-20 20:44:33 -返回值 : elec/elec/elec
2019-06-20 20:44:34 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-20 20:44:34 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-06-20 20:44:34 -HTTP METHOD : GET
2019-06-20 20:44:34 -HTTP METHOD : GET
2019-06-20 20:44:34 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 20:44:34 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-20 20:44:34 -参数 : [userType]
2019-06-20 20:44:34 -参数 : [elecType]
2019-06-20 20:44:34 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 20:44:34 -==> Parameters: userType(String)
2019-06-20 20:44:34 -请求地址 : http://localhost:8081/elec/elec/list
2019-06-20 20:44:34 -HTTP METHOD : GET
2019-06-20 20:44:34 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-06-20 20:44:34 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@1fc7d3c6]
2019-06-20 20:44:34 -<==      Total: 4
2019-06-20 20:44:34 -耗时 : 264
2019-06-20 20:44:34 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-20 20:44:34 -==> Parameters: elecType(String)
2019-06-20 20:44:34 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 20:44:34 -<==      Total: 11
2019-06-20 20:44:34 -耗时 : 298
2019-06-20 20:44:34 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-20 20:44:34 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-06-20 20:44:34 -==> Parameters: 0(Integer), 10(Integer)
2019-06-20 20:44:34 -<==      Total: 10
2019-06-20 20:44:34 -==>  Preparing: select count(*) from elec 
2019-06-20 20:44:34 -==> Parameters: 
2019-06-20 20:44:34 -<==      Total: 1
2019-06-20 20:44:34 -耗时 : 324
2019-06-20 20:44:34 -返回值 : com.bootdo.common.utils.PageUtils@56360d01
2019-06-20 20:44:36 -请求地址 : http://localhost:8081/elec/elecInto
2019-06-20 20:44:36 -HTTP METHOD : GET
2019-06-20 20:44:36 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.ElecInto
2019-06-20 20:44:36 -参数 : []
2019-06-20 20:44:36 -耗时 : 1
2019-06-20 20:44:36 -返回值 : elec/elecInto/elecInto
2019-06-20 20:44:42 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-06-20 20:44:42 -HTTP METHOD : GET
2019-06-20 20:44:42 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-06-20 20:44:42 -参数 : [ModelAndView: materialized View is [null]; model is null]
2019-06-20 20:44:42 -耗时 : 1
2019-06-20 20:44:42 -返回值 : system/dept/deptTree
2019-06-20 20:44:42 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-06-20 20:44:42 -HTTP METHOD : GET
2019-06-20 20:44:42 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-06-20 20:44:42 -参数 : []
2019-06-20 20:44:42 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-06-20 20:44:42 -==> Parameters: 
2019-06-20 20:44:42 -<==      Total: 3
2019-06-20 20:44:42 -耗时 : 52
2019-06-20 20:44:42 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-06-20 20:44:44 -请求地址 : http://localhost:8081/elec/elecInto/importElecIntoExcel
2019-06-20 20:44:44 -HTTP METHOD : POST
2019-06-20 20:44:44 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel
2019-06-20 20:44:44 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@716aa904, com.bootdo.elec.vo.ElecVo@61f0b1d2, org.apache.shiro.web.servlet.ShiroHttpServletResponse@4040417f]
2019-06-20 20:44:44 -==>  Preparing: UPDATE ELEC SET ELEC_SUM = ELEC_SUM + ? WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-06-20 20:44:44 -==> Parameters: 15(BigDecimal), 2019-05(String), 2(String), 1-0001(String), 李文英(String)
2019-06-20 20:44:44 -<==    Updates: 1
2019-06-20 20:44:44 -==>  Preparing: select * from elec WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-06-20 20:44:44 -==> Parameters: 2019-05(String), 2(String), 1-0001(String), 李文英(String)
2019-06-20 20:44:44 -<==      Total: 1
2019-06-20 20:44:44 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-20 20:44:44 -==> Parameters: 1-0001(String), 李文英(String), B(String), 2(String), 1(String), 15(BigDecimal), 2019-06-20 20:44:44.935(Timestamp), 2019-05(String), admin(String), 2019-06-20 20:44:44.935(Timestamp), admin(String), null
2019-06-20 20:44:45 -<==    Updates: 1
2019-06-20 20:44:45 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where user_id = ? and user_org = ? and create_time = ? 
2019-06-20 20:44:45 -==> Parameters: 1-0001(String), 2(String), 2019-05(String)
2019-06-20 20:44:45 -<==      Total: 0
2019-06-20 20:44:45 -==>  Preparing: insert into print ( `user_id`, `user_name`, `user_type`, `user_org`, `start`, `end`, `hu`, `elec_price`, `elec_amount`, `elec_cost`, `elec_sum`, `elec_money`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `heat_money`, `water_price`, `water_cost`, `water_sum`, `water_money`, `print_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-20 20:44:45 -==> Parameters: 1-0001(String), 李文英(String), B(String), 2(String), 10300(Integer), 10370(Integer), 1(Integer), 0.465(BigDecimal), 0.00(BigDecimal), 32.55(BigDecimal), 30.00(BigDecimal), 15(BigDecimal), null, null, null, null, null, null, null, null, null, 2019-06-20 20:44:45.269(Timestamp), 2019-05(String), admin(String), 2019-06-20 20:44:45.269(Timestamp), admin(String), null
2019-06-20 20:44:45 -<==    Updates: 1
2019-06-20 20:44:45 -==>  Preparing: UPDATE ELEC SET ELEC_SUM = ELEC_SUM + ? WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-06-20 20:44:45 -==> Parameters: 25(BigDecimal), 2019-05(String), 2(String), 1-0004(String), 姜海龙(String)
2019-06-20 20:44:45 -<==    Updates: 1
2019-06-20 20:44:45 -==>  Preparing: select * from elec WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-06-20 20:44:45 -==> Parameters: 2019-05(String), 2(String), 1-0004(String), 姜海龙(String)
2019-06-20 20:44:45 -<==      Total: 1
2019-06-20 20:44:45 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-20 20:44:45 -==> Parameters: 1-0004(String), 姜海龙(String), B(String), 2(String), 1(String), 25(BigDecimal), 2019-06-20 20:44:45.47(Timestamp), 2019-05(String), admin(String), 2019-06-20 20:44:45.47(Timestamp), admin(String), null
2019-06-20 20:44:45 -<==    Updates: 1
2019-06-20 20:44:45 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where user_id = ? and user_org = ? and create_time = ? 
2019-06-20 20:44:45 -==> Parameters: 1-0004(String), 2(String), 2019-05(String)
2019-06-20 20:44:45 -<==      Total: 0
2019-06-20 20:44:45 -==>  Preparing: insert into print ( `user_id`, `user_name`, `user_type`, `user_org`, `start`, `end`, `hu`, `elec_price`, `elec_amount`, `elec_cost`, `elec_sum`, `elec_money`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `heat_money`, `water_price`, `water_cost`, `water_sum`, `water_money`, `print_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-20 20:44:45 -==> Parameters: 1-0004(String), 姜海龙(String), B(String), 2(String), 1553(Integer), 1689(Integer), 1(Integer), 0.465(BigDecimal), 0.00(BigDecimal), 63.24(BigDecimal), 50.00(BigDecimal), 25(BigDecimal), null, null, null, null, null, null, null, null, null, 2019-06-20 20:44:45.572(Timestamp), 2019-05(String), admin(String), 2019-06-20 20:44:45.572(Timestamp), admin(String), null
2019-06-20 20:44:45 -<==    Updates: 1
2019-06-20 20:44:45 -耗时 : 936
2019-06-20 20:44:45 -返回值 : success
2019-06-20 20:46:25 -请求地址 : http://localhost:8081/index
2019-06-20 20:46:25 -HTTP METHOD : GET
2019-06-20 20:46:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-20 20:46:25 -参数 : [{}]
2019-06-20 20:46:25 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-20 20:46:25 -==> Parameters: 1(Long)
2019-06-20 20:46:25 -<==      Total: 51
2019-06-20 20:46:25 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-20 20:46:25 -==> Parameters: 138(Long)
2019-06-20 20:46:25 -<==      Total: 1
2019-06-20 20:46:25 -耗时 : 70
2019-06-20 20:46:25 -返回值 : index_v1
2019-06-20 20:46:25 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-20 20:46:25 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 71(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-bullseye","url":"/moneyUpLoad/ElecLogUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"165","parentId":"106","text":"缴费上传"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":tru(String), 127.0.0.1(String), 2019-06-20 20:46:25.383(Timestamp)
2019-06-20 20:46:25 -<==    Updates: 1
2019-06-20 20:46:25 -请求地址 : http://localhost:8081/main
2019-06-20 20:46:25 -HTTP METHOD : GET
2019-06-20 20:46:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-20 20:46:25 -参数 : []
2019-06-20 20:46:25 -耗时 : 0
2019-06-20 20:46:25 -返回值 : main
2019-06-20 20:46:25 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-20 20:46:25 -HTTP METHOD : GET
2019-06-20 20:46:25 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-20 20:46:25 -参数 : []
2019-06-20 20:46:25 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-20 20:46:25 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-20 20:46:25 -<==      Total: 0
2019-06-20 20:46:25 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-20 20:46:25 -==> Parameters: 1(Long), 0(String)
2019-06-20 20:46:25 -<==      Total: 1
2019-06-20 20:46:25 -耗时 : 34
2019-06-20 20:46:25 -返回值 : com.bootdo.common.utils.PageUtils@1dfe544f
2019-06-20 20:46:25 -请求地址 : http://localhost:8081/main
2019-06-20 20:46:25 -HTTP METHOD : GET
2019-06-20 20:46:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-20 20:46:25 -参数 : []
2019-06-20 20:46:25 -耗时 : 0
2019-06-20 20:46:25 -返回值 : main
2019-06-20 20:46:43 -请求地址 : http://localhost:8081/index
2019-06-20 20:46:43 -HTTP METHOD : GET
2019-06-20 20:46:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-20 20:46:43 -参数 : [{}]
2019-06-20 20:46:43 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-20 20:46:43 -==> Parameters: 1(Long)
2019-06-20 20:46:43 -<==      Total: 51
2019-06-20 20:46:43 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-20 20:46:43 -==> Parameters: 138(Long)
2019-06-20 20:46:43 -<==      Total: 1
2019-06-20 20:46:43 -耗时 : 40
2019-06-20 20:46:43 -返回值 : index_v1
2019-06-20 20:46:43 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-20 20:46:43 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 40(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-bullseye","url":"/moneyUpLoad/ElecLogUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"165","parentId":"106","text":"缴费上传"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":tru(String), 127.0.0.1(String), 2019-06-20 20:46:43.054(Timestamp)
2019-06-20 20:46:43 -<==    Updates: 1
2019-06-20 20:46:43 -请求地址 : http://localhost:8081/main
2019-06-20 20:46:43 -HTTP METHOD : GET
2019-06-20 20:46:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-20 20:46:43 -参数 : []
2019-06-20 20:46:43 -耗时 : 1
2019-06-20 20:46:43 -返回值 : main
2019-06-20 20:46:44 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-20 20:46:44 -HTTP METHOD : GET
2019-06-20 20:46:44 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-20 20:46:44 -参数 : []
2019-06-20 20:46:44 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-20 20:46:44 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-20 20:46:44 -<==      Total: 0
2019-06-20 20:46:44 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-20 20:46:44 -==> Parameters: 1(Long), 0(String)
2019-06-20 20:46:44 -<==      Total: 1
2019-06-20 20:46:44 -耗时 : 10
2019-06-20 20:46:44 -返回值 : com.bootdo.common.utils.PageUtils@1a640017
2019-06-20 20:46:44 -请求地址 : http://localhost:8081/main
2019-06-20 20:46:44 -HTTP METHOD : GET
2019-06-20 20:46:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-20 20:46:44 -参数 : []
2019-06-20 20:46:44 -耗时 : 2
2019-06-20 20:46:44 -返回值 : main
2019-06-20 20:46:51 -请求地址 : http://localhost:8081/elec/elecInto
2019-06-20 20:46:51 -HTTP METHOD : GET
2019-06-20 20:46:51 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.ElecInto
2019-06-20 20:46:51 -参数 : []
2019-06-20 20:46:51 -耗时 : 1
2019-06-20 20:46:51 -返回值 : elec/elecInto/elecInto
2019-06-20 20:46:58 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-06-20 20:46:58 -HTTP METHOD : GET
2019-06-20 20:46:58 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-06-20 20:46:58 -参数 : [ModelAndView: materialized View is [null]; model is null]
2019-06-20 20:46:58 -耗时 : 0
2019-06-20 20:46:58 -返回值 : system/dept/deptTree
2019-06-20 20:46:59 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-06-20 20:46:59 -HTTP METHOD : GET
2019-06-20 20:46:59 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-06-20 20:46:59 -参数 : []
2019-06-20 20:46:59 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-06-20 20:46:59 -==> Parameters: 
2019-06-20 20:46:59 -<==      Total: 3
2019-06-20 20:46:59 -耗时 : 3
2019-06-20 20:46:59 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-06-20 20:47:00 -请求地址 : http://localhost:8081/elec/elecInto/importElecIntoExcel
2019-06-20 20:47:00 -HTTP METHOD : POST
2019-06-20 20:47:00 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel
2019-06-20 20:47:00 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@67fd6e25, com.bootdo.elec.vo.ElecVo@41397e82, org.apache.shiro.web.servlet.ShiroHttpServletResponse@6e7005c7]
2019-06-20 20:47:00 -==>  Preparing: UPDATE ELEC SET ELEC_SUM = ELEC_SUM + ? WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-06-20 20:47:00 -==> Parameters: 15(BigDecimal), 2019-05(String), 2(String), 1-0001(String), 李文英(String)
2019-06-20 20:47:00 -<==    Updates: 1
2019-06-20 20:47:00 -==>  Preparing: select * from elec WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-06-20 20:47:00 -==> Parameters: 2019-05(String), 2(String), 1-0001(String), 李文英(String)
2019-06-20 20:47:00 -<==      Total: 1
2019-06-20 20:47:00 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-20 20:47:00 -==> Parameters: 1-0001(String), 李文英(String), B(String), 2(String), 1(String), 15(BigDecimal), 2019-06-20 20:47:00.556(Timestamp), 2019-05(String), admin(String), 2019-06-20 20:47:00.556(Timestamp), admin(String), null
2019-06-20 20:47:00 -<==    Updates: 1
2019-06-20 20:47:00 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where user_id = ? and user_org = ? and create_time = ? 
2019-06-20 20:47:00 -==> Parameters: 1-0001(String), 2(String), 2019-05(String)
2019-06-20 20:47:00 -<==      Total: 1
2019-06-20 20:47:00 -==>  Preparing: update print SET `user_id` = ?, `user_name` = ?, `user_type` = ?, `user_org` = ?, `start` = ?, `end` = ?, `hu` = ?, `elec_price` = ?, `elec_amount` = ?, `elec_cost` = ?, `elec_sum` = ?, `elec_money` = ?, `print_date` = ?, `create_time` = ?, `create_by` = ?, `update_time` = ?, `update_by` = ? where id = ? 
2019-06-20 20:47:00 -==> Parameters: 1-0001(String), 李文英(String), B(String), 2(String), 10300(Integer), 10370(Integer), 1(Integer), 0.465(BigDecimal), 0.00(BigDecimal), 32.55(BigDecimal), 45.00(BigDecimal), 15(BigDecimal), 2019-06-20 20:47:00.624(Timestamp), 2019-05(String), admin(String), 2019-06-20 20:47:00.624(Timestamp), admin(String), 16(Long)
2019-06-20 20:47:00 -<==    Updates: 1
2019-06-20 20:47:00 -==>  Preparing: UPDATE ELEC SET ELEC_SUM = ELEC_SUM + ? WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-06-20 20:47:00 -==> Parameters: 25(BigDecimal), 2019-05(String), 2(String), 1-0004(String), 姜海龙(String)
2019-06-20 20:47:00 -<==    Updates: 1
2019-06-20 20:47:00 -==>  Preparing: select * from elec WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-06-20 20:47:00 -==> Parameters: 2019-05(String), 2(String), 1-0004(String), 姜海龙(String)
2019-06-20 20:47:00 -<==      Total: 1
2019-06-20 20:47:00 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-20 20:47:00 -==> Parameters: 1-0004(String), 姜海龙(String), B(String), 2(String), 1(String), 25(BigDecimal), 2019-06-20 20:47:00.74(Timestamp), 2019-05(String), admin(String), 2019-06-20 20:47:00.74(Timestamp), admin(String), null
2019-06-20 20:47:00 -<==    Updates: 1
2019-06-20 20:47:00 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where user_id = ? and user_org = ? and create_time = ? 
2019-06-20 20:47:00 -==> Parameters: 1-0004(String), 2(String), 2019-05(String)
2019-06-20 20:47:00 -<==      Total: 1
2019-06-20 20:47:00 -==>  Preparing: update print SET `user_id` = ?, `user_name` = ?, `user_type` = ?, `user_org` = ?, `start` = ?, `end` = ?, `hu` = ?, `elec_price` = ?, `elec_amount` = ?, `elec_cost` = ?, `elec_sum` = ?, `elec_money` = ?, `print_date` = ?, `create_time` = ?, `create_by` = ?, `update_time` = ?, `update_by` = ? where id = ? 
2019-06-20 20:47:00 -==> Parameters: 1-0004(String), 姜海龙(String), B(String), 2(String), 1553(Integer), 1689(Integer), 1(Integer), 0.465(BigDecimal), 0.00(BigDecimal), 63.24(BigDecimal), 75.00(BigDecimal), 25(BigDecimal), 2019-06-20 20:47:00.774(Timestamp), 2019-05(String), admin(String), 2019-06-20 20:47:00.774(Timestamp), admin(String), 17(Long)
2019-06-20 20:47:00 -<==    Updates: 1
2019-06-20 20:47:00 -耗时 : 421
2019-06-20 20:47:00 -返回值 : success
2019-06-20 20:50:23 -请求地址 : http://localhost:8081/index
2019-06-20 20:50:23 -HTTP METHOD : GET
2019-06-20 20:50:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-20 20:50:23 -参数 : [{}]
2019-06-20 20:50:23 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-20 20:50:23 -==> Parameters: 1(Long)
2019-06-20 20:50:23 -<==      Total: 51
2019-06-20 20:50:23 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-20 20:50:23 -==> Parameters: 138(Long)
2019-06-20 20:50:23 -<==      Total: 1
2019-06-20 20:50:23 -耗时 : 23
2019-06-20 20:50:23 -返回值 : index_v1
2019-06-20 20:50:23 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-20 20:50:23 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 23(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-bullseye","url":"/moneyUpLoad/ElecLogUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"165","parentId":"106","text":"缴费上传"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":tru(String), 127.0.0.1(String), 2019-06-20 20:50:23.457(Timestamp)
2019-06-20 20:50:23 -<==    Updates: 1
2019-06-20 20:50:23 -请求地址 : http://localhost:8081/main
2019-06-20 20:50:23 -HTTP METHOD : GET
2019-06-20 20:50:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-20 20:50:23 -参数 : []
2019-06-20 20:50:23 -耗时 : 1
2019-06-20 20:50:23 -返回值 : main
2019-06-20 20:50:23 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-20 20:50:23 -HTTP METHOD : GET
2019-06-20 20:50:23 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-20 20:50:23 -参数 : []
2019-06-20 20:50:23 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-20 20:50:23 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-20 20:50:23 -<==      Total: 0
2019-06-20 20:50:23 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-20 20:50:23 -==> Parameters: 1(Long), 0(String)
2019-06-20 20:50:23 -<==      Total: 1
2019-06-20 20:50:23 -耗时 : 6
2019-06-20 20:50:23 -返回值 : com.bootdo.common.utils.PageUtils@5c995b88
2019-06-20 20:50:23 -请求地址 : http://localhost:8081/main
2019-06-20 20:50:23 -HTTP METHOD : GET
2019-06-20 20:50:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-20 20:50:23 -参数 : []
2019-06-20 20:50:23 -耗时 : 1
2019-06-20 20:50:23 -返回值 : main
2019-06-20 20:50:31 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-06-20 20:50:31 -==> Parameters: 1(Long)
2019-06-20 20:50:31 -<==      Total: 95
2019-06-20 20:50:31 -请求地址 : http://localhost:8081/elec/elecInto
2019-06-20 20:50:31 -HTTP METHOD : GET
2019-06-20 20:50:31 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.ElecInto
2019-06-20 20:50:31 -参数 : []
2019-06-20 20:50:31 -耗时 : 0
2019-06-20 20:50:31 -返回值 : elec/elecInto/elecInto
2019-06-20 20:50:40 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-06-20 20:50:40 -HTTP METHOD : GET
2019-06-20 20:50:40 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-06-20 20:50:40 -参数 : [ModelAndView: materialized View is [null]; model is null]
2019-06-20 20:50:40 -耗时 : 0
2019-06-20 20:50:40 -返回值 : system/dept/deptTree
2019-06-20 20:50:40 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-06-20 20:50:40 -HTTP METHOD : GET
2019-06-20 20:50:40 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-06-20 20:50:40 -参数 : []
2019-06-20 20:50:40 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-06-20 20:50:40 -==> Parameters: 
2019-06-20 20:50:40 -<==      Total: 3
2019-06-20 20:50:40 -耗时 : 3
2019-06-20 20:50:40 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-06-20 20:50:42 -请求地址 : http://localhost:8081/elec/elecInto/importElecIntoExcel
2019-06-20 20:50:42 -HTTP METHOD : POST
2019-06-20 20:50:42 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel
2019-06-20 20:50:42 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@3af32f49, com.bootdo.elec.vo.ElecVo@719b3a89, org.apache.shiro.web.servlet.ShiroHttpServletResponse@3e4c203b]
2019-06-20 20:50:42 -==>  Preparing: UPDATE ELEC SET ELEC_SUM = ELEC_SUM + ? WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-06-20 20:50:42 -==> Parameters: 15(BigDecimal), 2019-05(String), 2(String), 1-0001(String), 李文英(String)
2019-06-20 20:50:42 -<==    Updates: 1
2019-06-20 20:50:42 -==>  Preparing: select * from elec WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-06-20 20:50:42 -==> Parameters: 2019-05(String), 2(String), 1-0001(String), 李文英(String)
2019-06-20 20:50:42 -<==      Total: 1
2019-06-20 20:50:42 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-20 20:50:42 -==> Parameters: 1-0001(String), 李文英(String), B(String), 2(String), 1(String), 15(BigDecimal), 2019-06-20 20:50:42.564(Timestamp), 2019-05(String), admin(String), 2019-06-20 20:50:42.564(Timestamp), admin(String), null
2019-06-20 20:50:42 -<==    Updates: 1
2019-06-20 20:50:42 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where user_id = ? and user_org = ? and create_time = ? 
2019-06-20 20:50:42 -==> Parameters: 1-0001(String), 2(String), 2019-05(String)
2019-06-20 20:50:42 -<==      Total: 1
2019-06-20 20:50:42 -==>  Preparing: update print SET `user_id` = ?, `user_name` = ?, `user_type` = ?, `user_org` = ?, `start` = ?, `end` = ?, `hu` = ?, `elec_price` = ?, `elec_amount` = ?, `elec_cost` = ?, `elec_sum` = ?, `elec_money` = ?, `print_date` = ?, `create_time` = ?, `create_by` = ?, `update_time` = ?, `update_by` = ? where id = ? 
2019-06-20 20:50:42 -==> Parameters: 1-0001(String), 李文英(String), B(String), 2(String), 10300(Integer), 10370(Integer), 1(Integer), 0.465(BigDecimal), 0.00(BigDecimal), 32.55(BigDecimal), 60.00(BigDecimal), 15(BigDecimal), 2019-06-20 20:50:42.605(Timestamp), 2019-05(String), admin(String), 2019-06-20 20:50:42.605(Timestamp), admin(String), 16(Long)
2019-06-20 20:50:42 -<==    Updates: 1
2019-06-20 20:50:42 -==>  Preparing: UPDATE ELEC SET ELEC_SUM = ELEC_SUM + ? WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-06-20 20:50:42 -==> Parameters: 25(BigDecimal), 2019-05(String), 2(String), 1-0004(String), 姜海龙(String)
2019-06-20 20:50:42 -<==    Updates: 1
2019-06-20 20:50:42 -==>  Preparing: select * from elec WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-06-20 20:50:42 -==> Parameters: 2019-05(String), 2(String), 1-0004(String), 姜海龙(String)
2019-06-20 20:50:42 -<==      Total: 1
2019-06-20 20:50:42 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-20 20:50:42 -==> Parameters: 1-0004(String), 姜海龙(String), B(String), 2(String), 1(String), 25(BigDecimal), 2019-06-20 20:50:42.702(Timestamp), 2019-05(String), admin(String), 2019-06-20 20:50:42.702(Timestamp), admin(String), null
2019-06-20 20:50:42 -<==    Updates: 1
2019-06-20 20:50:42 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where user_id = ? and user_org = ? and create_time = ? 
2019-06-20 20:50:42 -==> Parameters: 1-0004(String), 2(String), 2019-05(String)
2019-06-20 20:50:42 -<==      Total: 1
2019-06-20 20:50:42 -==>  Preparing: update print SET `user_id` = ?, `user_name` = ?, `user_type` = ?, `user_org` = ?, `start` = ?, `end` = ?, `hu` = ?, `elec_price` = ?, `elec_amount` = ?, `elec_cost` = ?, `elec_sum` = ?, `elec_money` = ?, `print_date` = ?, `create_time` = ?, `create_by` = ?, `update_time` = ?, `update_by` = ? where id = ? 
2019-06-20 20:50:42 -==> Parameters: 1-0004(String), 姜海龙(String), B(String), 2(String), 1553(Integer), 1689(Integer), 1(Integer), 0.465(BigDecimal), 0.00(BigDecimal), 63.24(BigDecimal), 100.00(BigDecimal), 25(BigDecimal), 2019-06-20 20:50:42.752(Timestamp), 2019-05(String), admin(String), 2019-06-20 20:50:42.752(Timestamp), admin(String), 17(Long)
2019-06-20 20:50:42 -<==    Updates: 1
2019-06-20 20:50:42 -耗时 : 388
2019-06-20 20:50:42 -返回值 : success
2019-06-20 20:51:14 -请求地址 : http://localhost:8081/login;JSESSIONID=fc72ae4a-961c-4884-b190-82d4435582cc
2019-06-20 20:51:14 -HTTP METHOD : GET
2019-06-20 20:51:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-06-20 20:51:14 -参数 : [{}]
2019-06-20 20:51:14 -耗时 : 1
2019-06-20 20:51:14 -返回值 : login
2019-06-20 20:51:15 -请求地址 : http://localhost:8081/getVerify
2019-06-20 20:51:15 -HTTP METHOD : GET
2019-06-20 20:51:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-06-20 20:51:15 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@2448d21e, org.apache.shiro.web.servlet.ShiroHttpServletResponse@6b92cf1a]
2019-06-20 20:51:15 -7761
2019-06-20 20:51:15 -耗时 : 151
2019-06-20 20:51:15 -返回值 : null
2019-06-20 20:51:15 -请求地址 : http://localhost:8081/login
2019-06-20 20:51:15 -HTTP METHOD : GET
2019-06-20 20:51:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-06-20 20:51:15 -参数 : [{}]
2019-06-20 20:51:15 -耗时 : 0
2019-06-20 20:51:15 -返回值 : login
2019-06-20 20:51:23 -请求地址 : http://localhost:8081/login
2019-06-20 20:51:23 -HTTP METHOD : POST
2019-06-20 20:51:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-06-20 20:51:23 -参数 : [admin, 111111, 7761, org.apache.shiro.web.servlet.ShiroHttpServletRequest@3d96bdc]
2019-06-20 20:51:23 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-06-20 20:51:23 -==> Parameters: admin(String)
2019-06-20 20:51:23 -<==      Total: 1
2019-06-20 20:51:23 -耗时 : 122
2019-06-20 20:51:23 -返回值 : {msg=操作成功, code=0}
2019-06-20 20:51:23 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-20 20:51:23 -==> Parameters: 1(Long), admin(String), 登录(String), 122(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-06-20 20:51:23.953(Timestamp)
2019-06-20 20:51:23 -请求地址 : http://localhost:8081/index
2019-06-20 20:51:24 -HTTP METHOD : GET
2019-06-20 20:51:24 -<==    Updates: 1
2019-06-20 20:51:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-20 20:51:24 -参数 : [{}]
2019-06-20 20:51:24 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-20 20:51:24 -==> Parameters: 1(Long)
2019-06-20 20:51:24 -<==      Total: 51
2019-06-20 20:51:24 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-20 20:51:24 -==> Parameters: 138(Long)
2019-06-20 20:51:24 -<==      Total: 1
2019-06-20 20:51:24 -耗时 : 251
2019-06-20 20:51:24 -返回值 : index_v1
2019-06-20 20:51:24 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-20 20:51:24 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 251(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-bullseye","url":"/moneyUpLoad/ElecLogUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"165","parentId":"106","text":"缴费上传"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":tru(String), 127.0.0.1(String), 2019-06-20 20:51:24.234(Timestamp)
2019-06-20 20:51:24 -<==    Updates: 1
2019-06-20 20:51:24 -请求地址 : http://localhost:8081/main
2019-06-20 20:51:24 -HTTP METHOD : GET
2019-06-20 20:51:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-20 20:51:24 -参数 : []
2019-06-20 20:51:24 -耗时 : 0
2019-06-20 20:51:24 -返回值 : main
2019-06-20 20:51:25 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-20 20:51:25 -HTTP METHOD : GET
2019-06-20 20:51:25 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-20 20:51:25 -参数 : []
2019-06-20 20:51:25 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-20 20:51:25 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-20 20:51:25 -请求地址 : http://localhost:8081/main
2019-06-20 20:51:25 -HTTP METHOD : GET
2019-06-20 20:51:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-20 20:51:25 -参数 : []
2019-06-20 20:51:25 -耗时 : 2
2019-06-20 20:51:25 -返回值 : main
2019-06-20 20:51:25 -<==      Total: 0
2019-06-20 20:51:25 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-20 20:51:25 -==> Parameters: 1(Long), 0(String)
2019-06-20 20:51:25 -<==      Total: 1
2019-06-20 20:51:25 -耗时 : 318
2019-06-20 20:51:25 -返回值 : com.bootdo.common.utils.PageUtils@4d6a6c44
2019-06-20 20:51:31 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-06-20 20:51:31 -==> Parameters: 1(Long)
2019-06-20 20:51:31 -<==      Total: 95
2019-06-20 20:51:31 -请求地址 : http://localhost:8081/elec/elecInto
2019-06-20 20:51:31 -HTTP METHOD : GET
2019-06-20 20:51:31 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.ElecInto
2019-06-20 20:51:31 -参数 : []
2019-06-20 20:51:31 -耗时 : 1
2019-06-20 20:51:31 -返回值 : elec/elecInto/elecInto
2019-06-20 20:51:40 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-06-20 20:51:40 -HTTP METHOD : GET
2019-06-20 20:51:40 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-06-20 20:51:40 -参数 : [ModelAndView: materialized View is [null]; model is null]
2019-06-20 20:51:40 -耗时 : 0
2019-06-20 20:51:40 -返回值 : system/dept/deptTree
2019-06-20 20:51:40 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-06-20 20:51:40 -HTTP METHOD : GET
2019-06-20 20:51:40 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-06-20 20:51:40 -参数 : []
2019-06-20 20:51:40 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-06-20 20:51:40 -==> Parameters: 
2019-06-20 20:51:40 -<==      Total: 3
2019-06-20 20:51:40 -耗时 : 3
2019-06-20 20:51:40 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-06-20 20:51:42 -请求地址 : http://localhost:8081/elec/elecInto/importElecIntoExcel
2019-06-20 20:51:42 -HTTP METHOD : POST
2019-06-20 20:51:42 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel
2019-06-20 20:51:42 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@10e459b1, com.bootdo.elec.vo.ElecVo@71638449, org.apache.shiro.web.servlet.ShiroHttpServletResponse@15e2d56e]
2019-06-20 20:51:42 -==>  Preparing: UPDATE ELEC SET ELEC_SUM = ELEC_SUM + ? WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-06-20 20:51:42 -==> Parameters: 15(BigDecimal), 2019-05(String), 2(String), 1-0001(String), 李文英(String)
2019-06-20 20:51:42 -<==    Updates: 1
2019-06-20 20:51:42 -==>  Preparing: select * from elec WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-06-20 20:51:42 -==> Parameters: 2019-05(String), 2(String), 1-0001(String), 李文英(String)
2019-06-20 20:51:42 -<==      Total: 1
2019-06-20 20:51:42 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-20 20:51:42 -==> Parameters: 1-0001(String), 李文英(String), B(String), 2(String), 1(String), 15(BigDecimal), 2019-06-20 20:51:42.46(Timestamp), 2019-05(String), admin(String), 2019-06-20 20:51:42.46(Timestamp), admin(String), null
2019-06-20 20:51:42 -<==    Updates: 1
2019-06-20 20:51:42 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where user_id = ? and user_org = ? and create_time = ? 
2019-06-20 20:51:42 -==> Parameters: 1-0001(String), 2(String), 2019-05(String)
2019-06-20 20:51:42 -<==      Total: 1
2019-06-20 20:51:42 -==>  Preparing: update print SET `user_id` = ?, `user_name` = ?, `user_type` = ?, `user_org` = ?, `start` = ?, `end` = ?, `hu` = ?, `elec_price` = ?, `elec_amount` = ?, `elec_cost` = ?, `elec_sum` = ?, `elec_money` = ?, `print_date` = ?, `create_time` = ?, `create_by` = ?, `update_time` = ?, `update_by` = ? where id = ? 
2019-06-20 20:51:42 -==> Parameters: 1-0001(String), 李文英(String), B(String), 2(String), 10300(Integer), 10370(Integer), 1(Integer), 0.465(BigDecimal), 0.00(BigDecimal), 32.55(BigDecimal), 75.00(BigDecimal), 15(BigDecimal), 2019-06-20 20:51:42.511(Timestamp), 2019-05(String), admin(String), 2019-06-20 20:51:42.511(Timestamp), admin(String), 16(Long)
2019-06-20 20:51:42 -<==    Updates: 1
2019-06-20 20:51:42 -==>  Preparing: UPDATE ELEC SET ELEC_SUM = ELEC_SUM + ? WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-06-20 20:51:42 -==> Parameters: 25(BigDecimal), 2019-05(String), 2(String), 1-0004(String), 姜海龙(String)
2019-06-20 20:51:42 -<==    Updates: 1
2019-06-20 20:51:42 -==>  Preparing: select * from elec WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-06-20 20:51:42 -==> Parameters: 2019-05(String), 2(String), 1-0004(String), 姜海龙(String)
2019-06-20 20:51:42 -<==      Total: 1
2019-06-20 20:51:42 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-20 20:51:42 -==> Parameters: 1-0004(String), 姜海龙(String), B(String), 2(String), 1(String), 25(BigDecimal), 2019-06-20 20:51:42.711(Timestamp), 2019-05(String), admin(String), 2019-06-20 20:51:42.711(Timestamp), admin(String), null
2019-06-20 20:51:42 -<==    Updates: 1
2019-06-20 20:51:42 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where user_id = ? and user_org = ? and create_time = ? 
2019-06-20 20:51:42 -==> Parameters: 1-0004(String), 2(String), 2019-05(String)
2019-06-20 20:51:42 -<==      Total: 1
2019-06-20 20:51:42 -==>  Preparing: update print SET `user_id` = ?, `user_name` = ?, `user_type` = ?, `user_org` = ?, `start` = ?, `end` = ?, `hu` = ?, `elec_price` = ?, `elec_amount` = ?, `elec_cost` = ?, `elec_sum` = ?, `elec_money` = ?, `print_date` = ?, `create_time` = ?, `create_by` = ?, `update_time` = ?, `update_by` = ? where id = ? 
2019-06-20 20:51:42 -==> Parameters: 1-0004(String), 姜海龙(String), B(String), 2(String), 1553(Integer), 1689(Integer), 1(Integer), 0.465(BigDecimal), 0.00(BigDecimal), 63.24(BigDecimal), 125.00(BigDecimal), 25(BigDecimal), 2019-06-20 20:51:42.763(Timestamp), 2019-05(String), admin(String), 2019-06-20 20:51:42.763(Timestamp), admin(String), 17(Long)
2019-06-20 20:51:42 -<==    Updates: 1
2019-06-20 20:51:42 -耗时 : 694
2019-06-20 20:51:42 -返回值 : success
2019-06-20 20:51:46 -请求地址 : http://localhost:8081/elec/elecInto/importElecIntoExcel
2019-06-20 20:51:46 -HTTP METHOD : POST
2019-06-20 20:51:46 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel
2019-06-20 20:51:46 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@6a4347, com.bootdo.elec.vo.ElecVo@593ec8f7, org.apache.shiro.web.servlet.ShiroHttpServletResponse@11c302a5]
2019-06-20 20:51:46 -==>  Preparing: UPDATE ELEC SET ELEC_SUM = ELEC_SUM + ? WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-06-20 20:51:46 -==> Parameters: 15(BigDecimal), 2019-05(String), 2(String), 1-0001(String), 李文英(String)
2019-06-20 20:51:46 -<==    Updates: 1
2019-06-20 20:51:46 -==>  Preparing: select * from elec WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-06-20 20:51:46 -==> Parameters: 2019-05(String), 2(String), 1-0001(String), 李文英(String)
2019-06-20 20:51:46 -<==      Total: 1
2019-06-20 20:51:46 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-20 20:51:46 -==> Parameters: 1-0001(String), 李文英(String), B(String), 2(String), 1(String), 15(BigDecimal), 2019-06-20 20:51:46.618(Timestamp), 2019-05(String), admin(String), 2019-06-20 20:51:46.618(Timestamp), admin(String), null
2019-06-20 20:51:46 -<==    Updates: 1
2019-06-20 20:51:46 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where user_id = ? and user_org = ? and create_time = ? 
2019-06-20 20:51:46 -==> Parameters: 1-0001(String), 2(String), 2019-05(String)
2019-06-20 20:51:46 -<==      Total: 1
2019-06-20 20:51:46 -==>  Preparing: update print SET `user_id` = ?, `user_name` = ?, `user_type` = ?, `user_org` = ?, `start` = ?, `end` = ?, `hu` = ?, `elec_price` = ?, `elec_amount` = ?, `elec_cost` = ?, `elec_sum` = ?, `elec_money` = ?, `print_date` = ?, `create_time` = ?, `create_by` = ?, `update_time` = ?, `update_by` = ? where id = ? 
2019-06-20 20:51:46 -==> Parameters: 1-0001(String), 李文英(String), B(String), 2(String), 10300(Integer), 10370(Integer), 1(Integer), 0.465(BigDecimal), 0.00(BigDecimal), 32.55(BigDecimal), 90.00(BigDecimal), 15(BigDecimal), 2019-06-20 20:51:46.679(Timestamp), 2019-05(String), admin(String), 2019-06-20 20:51:46.679(Timestamp), admin(String), 16(Long)
2019-06-20 20:51:46 -<==    Updates: 1
2019-06-20 20:51:46 -==>  Preparing: UPDATE ELEC SET ELEC_SUM = ELEC_SUM + ? WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-06-20 20:51:46 -==> Parameters: 25(BigDecimal), 2019-05(String), 2(String), 1-0004(String), 姜海龙(String)
2019-06-20 20:51:46 -<==    Updates: 1
2019-06-20 20:51:46 -==>  Preparing: select * from elec WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-06-20 20:51:46 -==> Parameters: 2019-05(String), 2(String), 1-0004(String), 姜海龙(String)
2019-06-20 20:51:46 -<==      Total: 1
2019-06-20 20:51:46 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-20 20:51:46 -==> Parameters: 1-0004(String), 姜海龙(String), B(String), 2(String), 1(String), 25(BigDecimal), 2019-06-20 20:51:46.876(Timestamp), 2019-05(String), admin(String), 2019-06-20 20:51:46.876(Timestamp), admin(String), null
2019-06-20 20:51:46 -<==    Updates: 1
2019-06-20 20:51:46 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where user_id = ? and user_org = ? and create_time = ? 
2019-06-20 20:51:46 -==> Parameters: 1-0004(String), 2(String), 2019-05(String)
2019-06-20 20:51:46 -<==      Total: 1
2019-06-20 20:51:46 -==>  Preparing: update print SET `user_id` = ?, `user_name` = ?, `user_type` = ?, `user_org` = ?, `start` = ?, `end` = ?, `hu` = ?, `elec_price` = ?, `elec_amount` = ?, `elec_cost` = ?, `elec_sum` = ?, `elec_money` = ?, `print_date` = ?, `create_time` = ?, `create_by` = ?, `update_time` = ?, `update_by` = ? where id = ? 
2019-06-20 20:51:46 -==> Parameters: 1-0004(String), 姜海龙(String), B(String), 2(String), 1553(Integer), 1689(Integer), 1(Integer), 0.465(BigDecimal), 0.00(BigDecimal), 63.24(BigDecimal), 150.00(BigDecimal), 25(BigDecimal), 2019-06-20 20:51:46.895(Timestamp), 2019-05(String), admin(String), 2019-06-20 20:51:46.895(Timestamp), admin(String), 17(Long)
2019-06-20 20:51:46 -<==    Updates: 1
2019-06-20 20:51:46 -耗时 : 489
2019-06-20 20:51:46 -返回值 : success
2019-06-20 20:58:54 -请求地址 : http://localhost:8081/index
2019-06-20 20:58:54 -HTTP METHOD : GET
2019-06-20 20:58:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-20 20:58:54 -参数 : [{}]
2019-06-20 20:58:54 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-20 20:58:54 -==> Parameters: 1(Long)
2019-06-20 20:58:54 -<==      Total: 51
2019-06-20 20:58:54 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-20 20:58:54 -==> Parameters: 138(Long)
2019-06-20 20:58:54 -<==      Total: 1
2019-06-20 20:58:54 -耗时 : 36
2019-06-20 20:58:54 -返回值 : index_v1
2019-06-20 20:58:54 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-20 20:58:54 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 36(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-bullseye","url":"/moneyUpLoad/ElecLogUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"165","parentId":"106","text":"缴费上传"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":tru(String), 127.0.0.1(String), 2019-06-20 20:58:54.113(Timestamp)
2019-06-20 20:58:54 -<==    Updates: 1
2019-06-20 20:58:54 -请求地址 : http://localhost:8081/main
2019-06-20 20:58:54 -HTTP METHOD : GET
2019-06-20 20:58:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-20 20:58:54 -参数 : []
2019-06-20 20:58:54 -耗时 : 0
2019-06-20 20:58:54 -返回值 : main
2019-06-20 20:58:54 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-20 20:58:54 -HTTP METHOD : GET
2019-06-20 20:58:54 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-20 20:58:54 -参数 : []
2019-06-20 20:58:54 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-20 20:58:54 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-20 20:58:54 -<==      Total: 0
2019-06-20 20:58:54 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-20 20:58:54 -==> Parameters: 1(Long), 0(String)
2019-06-20 20:58:54 -<==      Total: 1
2019-06-20 20:58:54 -耗时 : 6
2019-06-20 20:58:54 -返回值 : com.bootdo.common.utils.PageUtils@18caba20
2019-06-20 20:58:54 -请求地址 : http://localhost:8081/main
2019-06-20 20:58:54 -HTTP METHOD : GET
2019-06-20 20:58:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-20 20:58:54 -参数 : []
2019-06-20 20:58:54 -耗时 : 0
2019-06-20 20:58:54 -返回值 : main
2019-06-20 20:58:56 -请求地址 : http://localhost:8081/elec/elecInto
2019-06-20 20:58:56 -HTTP METHOD : GET
2019-06-20 20:58:56 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.ElecInto
2019-06-20 20:58:56 -参数 : []
2019-06-20 20:58:56 -耗时 : 0
2019-06-20 20:58:56 -返回值 : elec/elecInto/elecInto
2019-06-20 20:59:03 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-06-20 20:59:03 -HTTP METHOD : GET
2019-06-20 20:59:03 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-06-20 20:59:03 -参数 : [ModelAndView: materialized View is [null]; model is null]
2019-06-20 20:59:03 -耗时 : 0
2019-06-20 20:59:03 -返回值 : system/dept/deptTree
2019-06-20 20:59:04 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-06-20 20:59:04 -HTTP METHOD : GET
2019-06-20 20:59:04 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-06-20 20:59:04 -参数 : []
2019-06-20 20:59:04 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-06-20 20:59:04 -==> Parameters: 
2019-06-20 20:59:04 -<==      Total: 3
2019-06-20 20:59:04 -耗时 : 41
2019-06-20 20:59:04 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-06-20 20:59:06 -请求地址 : http://localhost:8081/elec/elecInto/importElecIntoExcel
2019-06-20 20:59:06 -HTTP METHOD : POST
2019-06-20 20:59:06 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel
2019-06-20 20:59:06 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@28b241b7, com.bootdo.elec.vo.ElecVo@1e366102, org.apache.shiro.web.servlet.ShiroHttpServletResponse@694cc243]
2019-06-20 20:59:06 -==>  Preparing: UPDATE ELEC SET ELEC_SUM = ELEC_SUM + ? WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-06-20 20:59:06 -==> Parameters: 15(BigDecimal), 2019-05(String), 2(String), 1-0001(String), 李文英(String)
2019-06-20 20:59:06 -<==    Updates: 1
2019-06-20 20:59:06 -==>  Preparing: select * from elec WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-06-20 20:59:06 -==> Parameters: 2019-05(String), 2(String), 1-0001(String), 李文英(String)
2019-06-20 20:59:06 -<==      Total: 1
2019-06-20 20:59:06 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-20 20:59:06 -==> Parameters: 1-0001(String), 李文英(String), B(String), 2(String), 1(String), 15(BigDecimal), 2019-06-20 20:59:06.565(Timestamp), 2019-05(String), admin(String), 2019-06-20 20:59:06.565(Timestamp), admin(String), null
2019-06-20 20:59:06 -<==    Updates: 1
2019-06-20 20:59:06 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where user_id = ? and user_org = ? and create_time = ? 
2019-06-20 20:59:06 -==> Parameters: 1-0001(String), 2(String), 2019-05(String)
2019-06-20 20:59:06 -<==      Total: 1
2019-06-20 20:59:06 -==>  Preparing: update print SET `user_id` = ?, `user_name` = ?, `user_type` = ?, `user_org` = ?, `start` = ?, `end` = ?, `hu` = ?, `elec_price` = ?, `elec_amount` = ?, `elec_cost` = ?, `elec_sum` = ?, `elec_money` = ?, `print_date` = ?, `create_time` = ?, `create_by` = ?, `update_time` = ?, `update_by` = ? where id = ? 
2019-06-20 20:59:06 -==> Parameters: 1-0001(String), 李文英(String), B(String), 2(String), 10300(Integer), 10370(Integer), 1(Integer), 0.465(BigDecimal), 0.00(BigDecimal), 32.55(BigDecimal), 105.00(BigDecimal), 15(BigDecimal), 2019-06-20 20:59:06.633(Timestamp), 2019-05(String), admin(String), 2019-06-20 20:59:06.633(Timestamp), admin(String), 16(Long)
2019-06-20 20:59:06 -<==    Updates: 1
2019-06-20 20:59:06 -==>  Preparing: UPDATE ELEC SET ELEC_SUM = ELEC_SUM + ? WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-06-20 20:59:06 -==> Parameters: 25(BigDecimal), 2019-05(String), 2(String), 1-0004(String), 姜海(String)
2019-06-20 20:59:06 -<==    Updates: 0
2019-06-20 20:59:06 -==>  Preparing: select * from elec WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-06-20 20:59:06 -==> Parameters: 2019-05(String), 2(String), 1-0004(String), 姜海(String)
2019-06-20 20:59:06 -<==      Total: 0
2019-06-20 20:59:06 -耗时 : 350
2019-06-20 20:59:06 -返回值 : 第3行，数据出错请认真编写
2019-06-20 20:59:50 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 9 total, 0 closed abnormally (0 connect failure, 0 send limit, 4 transport error)], stompSubProtocol[processed CONNECT(7)-CONNECTED(7)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 87], outboundChannelpool size = 2, active threads = 0, queued tasks = 0, completed tasks = 15], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 293]
2019-06-20 21:07:08 -请求地址 : http://localhost:8081/index
2019-06-20 21:07:08 -HTTP METHOD : GET
2019-06-20 21:07:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-20 21:07:08 -参数 : [{}]
2019-06-20 21:07:08 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-20 21:07:08 -==> Parameters: 1(Long)
2019-06-20 21:07:08 -<==      Total: 51
2019-06-20 21:07:08 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-20 21:07:08 -==> Parameters: 138(Long)
2019-06-20 21:07:08 -<==      Total: 1
2019-06-20 21:07:08 -耗时 : 51
2019-06-20 21:07:08 -返回值 : index_v1
2019-06-20 21:07:08 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-20 21:07:08 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 51(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-bullseye","url":"/moneyUpLoad/ElecLogUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"165","parentId":"106","text":"缴费上传"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":tru(String), 127.0.0.1(String), 2019-06-20 21:07:08.819(Timestamp)
2019-06-20 21:07:08 -<==    Updates: 1
2019-06-20 21:07:09 -请求地址 : http://localhost:8081/main
2019-06-20 21:07:09 -HTTP METHOD : GET
2019-06-20 21:07:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-20 21:07:09 -参数 : []
2019-06-20 21:07:09 -耗时 : 0
2019-06-20 21:07:09 -返回值 : main
2019-06-20 21:07:09 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-20 21:07:09 -HTTP METHOD : GET
2019-06-20 21:07:09 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-20 21:07:09 -参数 : []
2019-06-20 21:07:09 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-20 21:07:09 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-20 21:07:09 -<==      Total: 0
2019-06-20 21:07:09 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-20 21:07:09 -==> Parameters: 1(Long), 0(String)
2019-06-20 21:07:09 -<==      Total: 1
2019-06-20 21:07:09 -耗时 : 34
2019-06-20 21:07:09 -返回值 : com.bootdo.common.utils.PageUtils@108239eb
2019-06-20 21:07:09 -请求地址 : http://localhost:8081/main
2019-06-20 21:07:09 -HTTP METHOD : GET
2019-06-20 21:07:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-20 21:07:09 -参数 : []
2019-06-20 21:07:09 -耗时 : 0
2019-06-20 21:07:09 -返回值 : main
2019-06-20 21:07:11 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-06-20 21:07:11 -==> Parameters: 1(Long)
2019-06-20 21:07:11 -<==      Total: 95
2019-06-20 21:07:11 -请求地址 : http://localhost:8081/elec/elecInto
2019-06-20 21:07:11 -HTTP METHOD : GET
2019-06-20 21:07:11 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.ElecInto
2019-06-20 21:07:11 -参数 : []
2019-06-20 21:07:11 -耗时 : 0
2019-06-20 21:07:11 -返回值 : elec/elecInto/elecInto
2019-06-20 21:07:18 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-06-20 21:07:18 -HTTP METHOD : GET
2019-06-20 21:07:18 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-06-20 21:07:18 -参数 : [ModelAndView: materialized View is [null]; model is null]
2019-06-20 21:07:18 -耗时 : 0
2019-06-20 21:07:18 -返回值 : system/dept/deptTree
2019-06-20 21:07:18 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-06-20 21:07:18 -HTTP METHOD : GET
2019-06-20 21:07:18 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-06-20 21:07:18 -参数 : []
2019-06-20 21:07:18 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-06-20 21:07:18 -==> Parameters: 
2019-06-20 21:07:18 -<==      Total: 3
2019-06-20 21:07:18 -耗时 : 4
2019-06-20 21:07:18 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-06-20 21:07:20 -请求地址 : http://localhost:8081/elec/elecInto/importElecIntoExcel
2019-06-20 21:07:20 -HTTP METHOD : POST
2019-06-20 21:07:20 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel
2019-06-20 21:07:20 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@31787621, com.bootdo.elec.vo.ElecVo@6753d10b, org.apache.shiro.web.servlet.ShiroHttpServletResponse@6ddd7ff5]
2019-06-20 21:07:20 -==>  Preparing: UPDATE ELEC SET ELEC_SUM = ELEC_SUM + ? WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-06-20 21:07:20 -==> Parameters: 15(BigDecimal), 2019-05(String), 2(String), 1-0001(String), 李文英(String)
2019-06-20 21:07:20 -<==    Updates: 1
2019-06-20 21:07:20 -==>  Preparing: select * from elec WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-06-20 21:07:20 -==> Parameters: 2019-05(String), 2(String), 1-0001(String), 李文英(String)
2019-06-20 21:07:20 -<==      Total: 1
2019-06-20 21:07:20 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-20 21:07:20 -==> Parameters: 1-0001(String), 李文英(String), B(String), 2(String), 1(String), 15(BigDecimal), 2019-06-20 21:07:20.519(Timestamp), 2019-05(String), admin(String), 2019-06-20 21:07:20.519(Timestamp), admin(String), null
2019-06-20 21:07:20 -<==    Updates: 1
2019-06-20 21:07:20 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where user_id = ? and user_org = ? and create_time = ? 
2019-06-20 21:07:20 -==> Parameters: 1-0001(String), 2(String), 2019-05(String)
2019-06-20 21:07:20 -<==      Total: 1
2019-06-20 21:07:20 -==>  Preparing: update print SET `user_id` = ?, `user_name` = ?, `user_type` = ?, `user_org` = ?, `start` = ?, `end` = ?, `hu` = ?, `elec_price` = ?, `elec_amount` = ?, `elec_cost` = ?, `elec_sum` = ?, `elec_money` = ?, `print_date` = ?, `create_time` = ?, `create_by` = ?, `update_time` = ?, `update_by` = ? where id = ? 
2019-06-20 21:07:20 -==> Parameters: 1-0001(String), 李文英(String), B(String), 2(String), 10300(Integer), 10370(Integer), 1(Integer), 0.465(BigDecimal), 0.00(BigDecimal), 32.55(BigDecimal), 120.00(BigDecimal), 15(BigDecimal), 2019-06-20 21:07:20.618(Timestamp), 2019-05(String), admin(String), 2019-06-20 21:07:20.618(Timestamp), admin(String), 16(Long)
2019-06-20 21:07:20 -<==    Updates: 1
2019-06-20 21:07:20 -耗时 : 457
2019-06-20 21:07:20 -返回值 : 第3行，用户编号为空请认真编写
2019-06-20 21:07:33 -请求地址 : http://localhost:8081/index
2019-06-20 21:07:33 -HTTP METHOD : GET
2019-06-20 21:07:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-20 21:07:33 -参数 : [{}]
2019-06-20 21:07:33 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-20 21:07:33 -==> Parameters: 1(Long)
2019-06-20 21:07:33 -<==      Total: 51
2019-06-20 21:07:33 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-20 21:07:33 -==> Parameters: 138(Long)
2019-06-20 21:07:33 -<==      Total: 1
2019-06-20 21:07:33 -耗时 : 82
2019-06-20 21:07:33 -返回值 : index_v1
2019-06-20 21:07:33 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-20 21:07:33 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 82(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-bullseye","url":"/moneyUpLoad/ElecLogUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"165","parentId":"106","text":"缴费上传"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":tru(String), 127.0.0.1(String), 2019-06-20 21:07:33.518(Timestamp)
2019-06-20 21:07:33 -<==    Updates: 1
2019-06-20 21:07:33 -请求地址 : http://localhost:8081/main
2019-06-20 21:07:33 -HTTP METHOD : GET
2019-06-20 21:07:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-20 21:07:33 -参数 : []
2019-06-20 21:07:33 -耗时 : 1
2019-06-20 21:07:33 -返回值 : main
2019-06-20 21:07:33 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-20 21:07:33 -HTTP METHOD : GET
2019-06-20 21:07:33 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-20 21:07:33 -参数 : []
2019-06-20 21:07:33 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-20 21:07:33 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-20 21:07:33 -<==      Total: 0
2019-06-20 21:07:33 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-20 21:07:33 -==> Parameters: 1(Long), 0(String)
2019-06-20 21:07:33 -<==      Total: 1
2019-06-20 21:07:33 -耗时 : 6
2019-06-20 21:07:33 -返回值 : com.bootdo.common.utils.PageUtils@4c39be0a
2019-06-20 21:07:33 -请求地址 : http://localhost:8081/main
2019-06-20 21:07:33 -HTTP METHOD : GET
2019-06-20 21:07:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-20 21:07:33 -参数 : []
2019-06-20 21:07:33 -耗时 : 0
2019-06-20 21:07:33 -返回值 : main
2019-06-20 21:29:50 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 11 total, 0 closed abnormally (0 connect failure, 0 send limit, 4 transport error)], stompSubProtocol[processed CONNECT(9)-CONNECTED(9)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 111], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 19], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 724]
2019-06-20 21:38:14 -Validating all active sessions...
2019-06-20 21:38:14 -Finished session validation.  No sessions were stopped.

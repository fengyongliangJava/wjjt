2019-03-27 08:47:33 -Starting BootdoApplication on ZJZL-20180906VX with PID 10060 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-27 08:47:33 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-27 08:47:33 -The following profiles are active: dev
2019-03-27 08:47:33 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3ce3db41: startup date [Wed Mar 27 08:47:33 CST 2019]; root of context hierarchy
2019-03-27 08:47:42 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-27 08:47:46 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$1aca03fe] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-27 08:47:46 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$d2332a5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-27 08:47:47 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-27 08:47:48 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-27 08:47:48 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-27 08:47:48 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-27 08:47:48 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-27 08:47:48 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-27 08:47:48 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-27 08:47:48 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-27 08:47:48 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-27 08:47:50 -Tomcat initialized with port(s): 8081 (http)
2019-03-27 08:47:50 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-27 08:47:50 -Starting service [Tomcat]
2019-03-27 08:47:50 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-27 08:47:50 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-27 08:47:50 -Initializing Spring embedded WebApplicationContext
2019-03-27 08:47:50 -Root WebApplicationContext: initialization completed in 17553 ms
2019-03-27 08:47:52 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-27 08:47:52 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-27 08:47:52 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-27 08:47:52 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-27 08:47:52 -Filter xssFilter was not registered (disabled)
2019-03-27 08:47:52 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-27 08:47:52 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-27 08:47:52 -Servlet statViewServlet mapped to [/druid/*]
2019-03-27 08:47:52 -Servlet dispatcherServlet mapped to [/]
2019-03-27 08:47:56 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3ce3db41: startup date [Wed Mar 27 08:47:33 CST 2019]; root of context hierarchy
2019-03-27 08:47:57 -Using default implementation for ThreadExecutor
2019-03-27 08:47:57 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-27 08:47:57 -Quartz Scheduler v.2.2.1 created.
2019-03-27 08:47:57 -RAMJobStore initialized.
2019-03-27 08:47:57 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-27 08:47:57 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-27 08:47:57 -Quartz scheduler version: 2.2.1
2019-03-27 08:47:57 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@fcd3a6f
2019-03-27 08:47:58 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-27 08:47:58 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-27 08:48:03 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-03-27 08:48:03 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-27 08:48:03 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-27 08:48:03 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-27 08:48:03 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-27 08:48:03 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-27 08:48:03 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-27 08:48:03 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-27 08:48:03 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-27 08:48:03 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-27 08:48:03 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-27 08:48:03 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 08:48:03 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-27 08:48:03 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-27 08:48:03 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-27 08:48:03 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-27 08:48:03 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-27 08:48:03 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 08:48:03 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-27 08:48:03 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-27 08:48:03 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-27 08:48:03 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-27 08:48:03 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 08:48:03 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-27 08:48:03 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-27 08:48:03 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-27 08:48:03 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 08:48:03 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-27 08:48:03 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 08:48:03 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-27 08:48:03 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-27 08:48:03 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-27 08:48:03 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-27 08:48:03 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-27 08:48:03 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-27 08:48:03 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-27 08:48:03 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-27 08:48:03 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-27 08:48:03 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 08:48:03 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-27 08:48:03 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-27 08:48:03 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 08:48:03 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-27 08:48:03 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-27 08:48:03 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-27 08:48:03 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-27 08:48:03 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 08:48:03 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-27 08:48:03 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-03-27 08:48:03 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-27 08:48:03 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-27 08:48:03 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-27 08:48:03 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-27 08:48:03 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-27 08:48:03 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-27 08:48:03 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-27 08:48:03 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-27 08:48:03 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-27 08:48:03 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-27 08:48:03 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 08:48:03 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-27 08:48:03 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-27 08:48:03 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-27 08:48:03 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-03-27 08:48:03 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-27 08:48:03 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-27 08:48:03 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-27 08:48:03 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-27 08:48:03 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 08:48:03 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-03-27 08:48:03 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 08:48:03 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-27 08:48:03 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-27 08:48:03 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-27 08:48:03 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-27 08:48:03 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-27 08:48:03 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-27 08:48:03 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-27 08:48:03 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 08:48:03 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-27 08:48:03 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-27 08:48:03 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-27 08:48:03 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-27 08:48:03 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-27 08:48:03 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-27 08:48:03 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-27 08:48:03 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-27 08:48:03 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-27 08:48:03 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-27 08:48:03 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 08:48:03 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-27 08:48:03 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 08:48:03 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-27 08:48:03 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-03-27 08:48:03 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-03-27 08:48:03 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-27 08:48:03 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-27 08:48:03 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-27 08:48:03 -Mapped "{[/moneyList/moneyList/LikeName],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.LikeName(org.springframework.ui.Model)
2019-03-27 08:48:03 -Mapped "{[/moneyList/moneyList/UserList],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-27 08:48:03 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-27 08:48:03 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-27 08:48:03 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-27 08:48:03 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-27 08:48:03 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 08:48:03 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-27 08:48:03 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 08:48:03 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-27 08:48:03 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-27 08:48:03 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-27 08:48:03 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-27 08:48:03 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-27 08:48:03 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-27 08:48:03 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 08:48:03 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-27 08:48:03 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 08:48:03 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-27 08:48:03 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-27 08:48:03 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-27 08:48:03 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-27 08:48:03 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-27 08:48:03 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-27 08:48:03 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 08:48:03 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-27 08:48:03 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 08:48:03 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-27 08:48:03 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-27 08:48:03 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-27 08:48:03 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-27 08:48:03 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-27 08:48:03 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-27 08:48:03 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-27 08:48:03 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 08:48:03 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-27 08:48:03 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-27 08:48:03 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 08:48:03 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-27 08:48:03 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-27 08:48:03 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 08:48:03 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-27 08:48:03 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-27 08:48:03 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-27 08:48:03 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-27 08:48:03 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 08:48:03 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-27 08:48:03 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 08:48:03 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-27 08:48:03 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-27 08:48:03 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 08:48:03 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-27 08:48:03 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-27 08:48:03 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-27 08:48:03 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-27 08:48:03 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-27 08:48:03 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-27 08:48:03 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-27 08:48:03 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 08:48:03 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-27 08:48:03 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-27 08:48:03 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-27 08:48:03 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-27 08:48:03 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-27 08:48:03 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-27 08:48:03 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-27 08:48:03 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-27 08:48:03 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-27 08:48:03 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-27 08:48:03 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-27 08:48:03 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-27 08:48:03 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 08:48:03 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-27 08:48:03 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-27 08:48:03 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-27 08:48:03 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-27 08:48:03 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-27 08:48:03 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-27 08:48:03 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-27 08:48:03 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-27 08:48:03 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-27 08:48:03 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-27 08:48:03 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-27 08:48:03 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-27 08:48:03 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 08:48:03 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-27 08:48:03 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-27 08:48:03 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-27 08:48:03 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-27 08:48:03 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 08:48:03 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-27 08:48:03 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-27 08:48:03 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-27 08:48:03 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 08:48:03 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-27 08:48:03 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-27 08:48:03 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-27 08:48:03 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-27 08:48:03 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-27 08:48:03 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-27 08:48:03 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-27 08:48:03 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-27 08:48:03 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-27 08:48:03 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-27 08:48:03 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-27 08:48:03 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-27 08:48:03 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-27 08:48:03 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-27 08:48:03 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-27 08:48:03 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-27 08:48:03 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-27 08:48:03 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 08:48:03 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-27 08:48:03 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-27 08:48:03 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 08:48:03 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-27 08:48:03 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 08:48:03 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-27 08:48:03 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-27 08:48:03 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-27 08:48:03 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-27 08:48:03 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-27 08:48:03 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-27 08:48:03 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 08:48:03 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-27 08:48:03 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 08:48:03 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-27 08:48:03 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-27 08:48:03 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-03-27 08:48:03 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-03-27 08:48:03 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-27 08:48:03 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-27 08:48:03 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-27 08:48:03 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-27 08:48:03 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-27 08:48:04 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-27 08:48:04 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-27 08:48:04 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-27 08:48:05 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-27 08:48:05 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3ce3db41: startup date [Wed Mar 27 08:47:33 CST 2019]; root of context hierarchy
2019-03-27 08:48:05 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-27 08:48:05 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-27 08:48:05 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-27 08:48:05 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-27 08:48:06 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-27 08:48:09 -Registering beans for JMX exposure on startup
2019-03-27 08:48:09 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-27 08:48:09 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-27 08:48:09 -Starting beans in phase 2147483647
2019-03-27 08:48:09 -Context refreshed
2019-03-27 08:48:09 -Found 1 custom documentation plugin(s)
2019-03-27 08:48:09 -Scanning for api listing references
2019-03-27 08:48:10 -Generating unique operation named: removeUsingPOST_1
2019-03-27 08:48:10 -Generating unique operation named: addUsingGET_1
2019-03-27 08:48:10 -Generating unique operation named: editUsingGET_1
2019-03-27 08:48:10 -Generating unique operation named: listUsingGET_1
2019-03-27 08:48:10 -Generating unique operation named: removeUsingPOST_2
2019-03-27 08:48:10 -Generating unique operation named: removeUsingPOST_3
2019-03-27 08:48:10 -Generating unique operation named: saveUsingPOST_1
2019-03-27 08:48:10 -Generating unique operation named: updateUsingGET_1
2019-03-27 08:48:10 -Generating unique operation named: updateUsingHEAD_1
2019-03-27 08:48:10 -Generating unique operation named: updateUsingPOST_1
2019-03-27 08:48:10 -Generating unique operation named: updateUsingPUT_1
2019-03-27 08:48:10 -Generating unique operation named: updateUsingPATCH_1
2019-03-27 08:48:10 -Generating unique operation named: updateUsingDELETE_1
2019-03-27 08:48:10 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-27 08:48:10 -Generating unique operation named: updateUsingTRACE_1
2019-03-27 08:48:10 -Generating unique operation named: addUsingGET_2
2019-03-27 08:48:10 -Generating unique operation named: editUsingGET_2
2019-03-27 08:48:10 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-27 08:48:10 -Generating unique operation named: listUsingGET_2
2019-03-27 08:48:10 -Generating unique operation named: removeUsingPOST_4
2019-03-27 08:48:10 -Generating unique operation named: removeUsingPOST_5
2019-03-27 08:48:10 -Generating unique operation named: saveUsingPOST_2
2019-03-27 08:48:10 -Generating unique operation named: updateUsingPOST_2
2019-03-27 08:48:10 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-27 08:48:10 -Generating unique operation named: addUsingGET_3
2019-03-27 08:48:10 -Generating unique operation named: editUsingGET_3
2019-03-27 08:48:10 -Generating unique operation named: listUsingGET_3
2019-03-27 08:48:10 -Generating unique operation named: removeUsingPOST_6
2019-03-27 08:48:10 -Generating unique operation named: removeUsingPOST_7
2019-03-27 08:48:10 -Generating unique operation named: saveUsingPOST_3
2019-03-27 08:48:10 -Generating unique operation named: updateUsingGET_2
2019-03-27 08:48:10 -Generating unique operation named: updateUsingHEAD_2
2019-03-27 08:48:10 -Generating unique operation named: updateUsingPOST_3
2019-03-27 08:48:10 -Generating unique operation named: updateUsingPUT_2
2019-03-27 08:48:10 -Generating unique operation named: updateUsingPATCH_2
2019-03-27 08:48:10 -Generating unique operation named: updateUsingDELETE_2
2019-03-27 08:48:10 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-27 08:48:10 -Generating unique operation named: updateUsingTRACE_2
2019-03-27 08:48:10 -Generating unique operation named: addUsingGET_4
2019-03-27 08:48:10 -Generating unique operation named: editUsingGET_4
2019-03-27 08:48:10 -Generating unique operation named: listUsingGET_4
2019-03-27 08:48:10 -Generating unique operation named: removeUsingPOST_8
2019-03-27 08:48:10 -Generating unique operation named: removeUsingPOST_9
2019-03-27 08:48:10 -Generating unique operation named: saveUsingPOST_4
2019-03-27 08:48:10 -Generating unique operation named: updateUsingGET_3
2019-03-27 08:48:10 -Generating unique operation named: updateUsingHEAD_3
2019-03-27 08:48:10 -Generating unique operation named: updateUsingPOST_4
2019-03-27 08:48:10 -Generating unique operation named: updateUsingPUT_3
2019-03-27 08:48:10 -Generating unique operation named: updateUsingPATCH_3
2019-03-27 08:48:10 -Generating unique operation named: updateUsingDELETE_3
2019-03-27 08:48:10 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-27 08:48:10 -Generating unique operation named: updateUsingTRACE_3
2019-03-27 08:48:10 -Generating unique operation named: ElecUsingGET_1
2019-03-27 08:48:10 -Generating unique operation named: addUsingGET_5
2019-03-27 08:48:10 -Generating unique operation named: editUsingGET_5
2019-03-27 08:48:11 -Generating unique operation named: listUsingGET_5
2019-03-27 08:48:11 -Generating unique operation named: removeUsingPOST_10
2019-03-27 08:48:11 -Generating unique operation named: removeUsingPOST_11
2019-03-27 08:48:11 -Generating unique operation named: saveUsingPOST_5
2019-03-27 08:48:11 -Generating unique operation named: updateUsingGET_4
2019-03-27 08:48:11 -Generating unique operation named: updateUsingHEAD_4
2019-03-27 08:48:11 -Generating unique operation named: updateUsingPOST_5
2019-03-27 08:48:11 -Generating unique operation named: updateUsingPUT_4
2019-03-27 08:48:11 -Generating unique operation named: updateUsingPATCH_4
2019-03-27 08:48:11 -Generating unique operation named: updateUsingDELETE_4
2019-03-27 08:48:11 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-27 08:48:11 -Generating unique operation named: updateUsingTRACE_4
2019-03-27 08:48:11 -Generating unique operation named: editUsingGET_6
2019-03-27 08:48:11 -Generating unique operation named: listUsingGET_6
2019-03-27 08:48:11 -Generating unique operation named: updateUsingPOST_6
2019-03-27 08:48:11 -Generating unique operation named: addUsingGET_6
2019-03-27 08:48:11 -Generating unique operation named: editUsingGET_7
2019-03-27 08:48:11 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-27 08:48:11 -Generating unique operation named: listUsingGET_7
2019-03-27 08:48:11 -Generating unique operation named: removeUsingPOST_12
2019-03-27 08:48:11 -Generating unique operation named: removeUsingPOST_13
2019-03-27 08:48:11 -Generating unique operation named: saveUsingPOST_6
2019-03-27 08:48:11 -Generating unique operation named: updateUsingGET_5
2019-03-27 08:48:11 -Generating unique operation named: updateUsingHEAD_5
2019-03-27 08:48:11 -Generating unique operation named: updateUsingPOST_7
2019-03-27 08:48:11 -Generating unique operation named: updateUsingPUT_5
2019-03-27 08:48:11 -Generating unique operation named: updateUsingPATCH_5
2019-03-27 08:48:11 -Generating unique operation named: updateUsingDELETE_5
2019-03-27 08:48:11 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-27 08:48:11 -Generating unique operation named: updateUsingTRACE_5
2019-03-27 08:48:11 -Generating unique operation named: exprotExcelUsingGET_4
2019-03-27 08:48:11 -Generating unique operation named: addUsingGET_7
2019-03-27 08:48:11 -Generating unique operation named: editUsingGET_8
2019-03-27 08:48:11 -Generating unique operation named: listUsingGET_8
2019-03-27 08:48:11 -Generating unique operation named: removeUsingPOST_14
2019-03-27 08:48:11 -Generating unique operation named: removeUsingPOST_15
2019-03-27 08:48:11 -Generating unique operation named: saveUsingPOST_7
2019-03-27 08:48:11 -Generating unique operation named: updateUsingGET_6
2019-03-27 08:48:11 -Generating unique operation named: updateUsingHEAD_6
2019-03-27 08:48:11 -Generating unique operation named: updateUsingPOST_8
2019-03-27 08:48:11 -Generating unique operation named: updateUsingPUT_6
2019-03-27 08:48:11 -Generating unique operation named: updateUsingPATCH_6
2019-03-27 08:48:11 -Generating unique operation named: updateUsingDELETE_6
2019-03-27 08:48:11 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-27 08:48:11 -Generating unique operation named: updateUsingTRACE_6
2019-03-27 08:48:11 -Generating unique operation named: addUsingGET_8
2019-03-27 08:48:11 -Generating unique operation named: editUsingGET_9
2019-03-27 08:48:11 -Generating unique operation named: listUsingGET_9
2019-03-27 08:48:11 -Generating unique operation named: removeUsingPOST_16
2019-03-27 08:48:11 -Generating unique operation named: removeUsingPOST_17
2019-03-27 08:48:11 -Generating unique operation named: saveUsingPOST_8
2019-03-27 08:48:11 -Generating unique operation named: updateUsingGET_7
2019-03-27 08:48:11 -Generating unique operation named: updateUsingHEAD_7
2019-03-27 08:48:11 -Generating unique operation named: updateUsingPOST_9
2019-03-27 08:48:11 -Generating unique operation named: updateUsingPUT_7
2019-03-27 08:48:11 -Generating unique operation named: updateUsingPATCH_7
2019-03-27 08:48:11 -Generating unique operation named: updateUsingDELETE_7
2019-03-27 08:48:11 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-27 08:48:11 -Generating unique operation named: updateUsingTRACE_7
2019-03-27 08:48:11 -Generating unique operation named: addUsingGET_9
2019-03-27 08:48:11 -Generating unique operation named: editUsingGET_10
2019-03-27 08:48:11 -Generating unique operation named: infoUsingGET_1
2019-03-27 08:48:11 -Generating unique operation named: infoUsingHEAD_1
2019-03-27 08:48:11 -Generating unique operation named: infoUsingPOST_1
2019-03-27 08:48:11 -Generating unique operation named: infoUsingPUT_1
2019-03-27 08:48:11 -Generating unique operation named: infoUsingPATCH_1
2019-03-27 08:48:11 -Generating unique operation named: infoUsingDELETE_1
2019-03-27 08:48:11 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-27 08:48:11 -Generating unique operation named: infoUsingTRACE_1
2019-03-27 08:48:11 -Generating unique operation named: listUsingGET_10
2019-03-27 08:48:11 -Generating unique operation named: removeUsingPOST_18
2019-03-27 08:48:11 -Generating unique operation named: removeUsingPOST_19
2019-03-27 08:48:11 -Generating unique operation named: saveUsingPOST_9
2019-03-27 08:48:11 -Generating unique operation named: updateUsingPOST_10
2019-03-27 08:48:11 -Generating unique operation named: listUsingGET_11
2019-03-27 08:48:11 -Generating unique operation named: removeUsingPOST_20
2019-03-27 08:48:11 -Generating unique operation named: welcomeUsingGET_1
2019-03-27 08:48:11 -Generating unique operation named: addUsingGET_10
2019-03-27 08:48:11 -Generating unique operation named: editUsingGET_11
2019-03-27 08:48:11 -Generating unique operation named: listUsingGET_12
2019-03-27 08:48:12 -Generating unique operation named: removeUsingPOST_21
2019-03-27 08:48:12 -Generating unique operation named: saveUsingPOST_10
2019-03-27 08:48:12 -Generating unique operation named: treeUsingGET_1
2019-03-27 08:48:12 -Generating unique operation named: treeUsingGET_2
2019-03-27 08:48:12 -Generating unique operation named: updateUsingPOST_11
2019-03-27 08:48:12 -Generating unique operation named: addUsingGET_11
2019-03-27 08:48:12 -Generating unique operation named: editUsingGET_12
2019-03-27 08:48:12 -Generating unique operation named: listUsingGET_13
2019-03-27 08:48:12 -Generating unique operation named: removeUsingPOST_22
2019-03-27 08:48:12 -Generating unique operation named: removeUsingPOST_23
2019-03-27 08:48:12 -Generating unique operation named: saveUsingPOST_11
2019-03-27 08:48:12 -Generating unique operation named: updateUsingGET_8
2019-03-27 08:48:12 -Generating unique operation named: updateUsingHEAD_8
2019-03-27 08:48:12 -Generating unique operation named: updateUsingPOST_12
2019-03-27 08:48:12 -Generating unique operation named: updateUsingPUT_8
2019-03-27 08:48:12 -Generating unique operation named: updateUsingPATCH_8
2019-03-27 08:48:12 -Generating unique operation named: updateUsingDELETE_8
2019-03-27 08:48:12 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-27 08:48:12 -Generating unique operation named: updateUsingTRACE_8
2019-03-27 08:48:12 -Generating unique operation named: addUsingGET_12
2019-03-27 08:48:12 -Generating unique operation named: editUsingGET_13
2019-03-27 08:48:12 -Generating unique operation named: listUsingGET_14
2019-03-27 08:48:12 -Generating unique operation named: removeUsingPOST_24
2019-03-27 08:48:12 -Generating unique operation named: removeUsingPOST_25
2019-03-27 08:48:12 -Generating unique operation named: saveUsingPOST_12
2019-03-27 08:48:12 -Generating unique operation named: updateUsingGET_9
2019-03-27 08:48:12 -Generating unique operation named: updateUsingHEAD_9
2019-03-27 08:48:12 -Generating unique operation named: updateUsingPOST_13
2019-03-27 08:48:12 -Generating unique operation named: updateUsingPUT_9
2019-03-27 08:48:12 -Generating unique operation named: updateUsingPATCH_9
2019-03-27 08:48:12 -Generating unique operation named: updateUsingDELETE_9
2019-03-27 08:48:12 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-27 08:48:12 -Generating unique operation named: updateUsingTRACE_9
2019-03-27 08:48:12 -Generating unique operation named: addUsingGET_13
2019-03-27 08:48:12 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-27 08:48:12 -Generating unique operation named: editUsingGET_14
2019-03-27 08:48:12 -Generating unique operation named: listUsingGET_15
2019-03-27 08:48:12 -Generating unique operation named: saveUsingPOST_13
2019-03-27 08:48:12 -Generating unique operation named: saveUsingPOST_14
2019-03-27 08:48:12 -Generating unique operation named: updateUsingPOST_14
2019-03-27 08:48:12 -Generating unique operation named: listUsingGET_16
2019-03-27 08:48:12 -Generating unique operation named: listUsingHEAD_1
2019-03-27 08:48:12 -Generating unique operation named: listUsingPOST_1
2019-03-27 08:48:12 -Generating unique operation named: listUsingPUT_1
2019-03-27 08:48:12 -Generating unique operation named: listUsingPATCH_1
2019-03-27 08:48:12 -Generating unique operation named: listUsingDELETE_1
2019-03-27 08:48:12 -Generating unique operation named: listUsingOPTIONS_1
2019-03-27 08:48:12 -Generating unique operation named: listUsingTRACE_1
2019-03-27 08:48:12 -Generating unique operation named: addUsingGET_14
2019-03-27 08:48:12 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-27 08:48:12 -Generating unique operation named: editUsingGET_15
2019-03-27 08:48:12 -Generating unique operation named: listUsingGET_17
2019-03-27 08:48:12 -Generating unique operation named: removeUsingPOST_26
2019-03-27 08:48:13 -Generating unique operation named: saveUsingPOST_15
2019-03-27 08:48:13 -Generating unique operation named: treeUsingGET_3
2019-03-27 08:48:13 -Generating unique operation named: treeViewUsingGET_1
2019-03-27 08:48:13 -Generating unique operation named: updateUsingPOST_15
2019-03-27 08:48:13 -Generating unique operation named: addUsingGET_15
2019-03-27 08:48:13 -Generating unique operation named: editUsingGET_16
2019-03-27 08:48:13 -Generating unique operation named: exprotExcelUsingGET_5
2019-03-27 08:48:13 -Generating unique operation named: listUsingGET_18
2019-03-27 08:48:13 -Generating unique operation named: removeUsingPOST_27
2019-03-27 08:48:13 -Generating unique operation named: removeUsingPOST_28
2019-03-27 08:48:13 -Generating unique operation named: saveUsingPOST_16
2019-03-27 08:48:13 -Generating unique operation named: updateUsingGET_10
2019-03-27 08:48:13 -Generating unique operation named: updateUsingHEAD_10
2019-03-27 08:48:13 -Generating unique operation named: updateUsingPOST_16
2019-03-27 08:48:13 -Generating unique operation named: updateUsingPUT_10
2019-03-27 08:48:13 -Generating unique operation named: updateUsingPATCH_10
2019-03-27 08:48:13 -Generating unique operation named: updateUsingDELETE_10
2019-03-27 08:48:13 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-27 08:48:13 -Generating unique operation named: updateUsingTRACE_10
2019-03-27 08:48:13 -Generating unique operation named: exprotExcelUsingGET_6
2019-03-27 08:48:13 -Generating unique operation named: addUsingGET_16
2019-03-27 08:48:13 -Generating unique operation named: editUsingGET_17
2019-03-27 08:48:13 -Generating unique operation named: listUsingGET_19
2019-03-27 08:48:13 -Generating unique operation named: removeUsingPOST_29
2019-03-27 08:48:13 -Generating unique operation named: removeUsingPOST_30
2019-03-27 08:48:13 -Generating unique operation named: saveUsingPOST_17
2019-03-27 08:48:13 -Generating unique operation named: updateUsingGET_11
2019-03-27 08:48:13 -Generating unique operation named: updateUsingHEAD_11
2019-03-27 08:48:13 -Generating unique operation named: updateUsingPOST_17
2019-03-27 08:48:13 -Generating unique operation named: updateUsingPUT_11
2019-03-27 08:48:13 -Generating unique operation named: updateUsingPATCH_11
2019-03-27 08:48:13 -Generating unique operation named: updateUsingDELETE_11
2019-03-27 08:48:13 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-27 08:48:13 -Generating unique operation named: updateUsingTRACE_11
2019-03-27 08:48:13 -Generating unique operation named: addUsingGET_17
2019-03-27 08:48:13 -Generating unique operation named: editUsingGET_18
2019-03-27 08:48:13 -Generating unique operation named: listUsingGET_20
2019-03-27 08:48:13 -Generating unique operation named: removeUsingPOST_31
2019-03-27 08:48:13 -Generating unique operation named: removeUsingPOST_32
2019-03-27 08:48:13 -Generating unique operation named: saveUsingPOST_18
2019-03-27 08:48:13 -Generating unique operation named: updateUsingGET_12
2019-03-27 08:48:13 -Generating unique operation named: updateUsingHEAD_12
2019-03-27 08:48:13 -Generating unique operation named: updateUsingPOST_18
2019-03-27 08:48:13 -Generating unique operation named: updateUsingPUT_12
2019-03-27 08:48:13 -Generating unique operation named: updateUsingPATCH_12
2019-03-27 08:48:13 -Generating unique operation named: updateUsingDELETE_12
2019-03-27 08:48:13 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-27 08:48:13 -Generating unique operation named: updateUsingTRACE_12
2019-03-27 08:48:13 -Starting Quartz Scheduler now
2019-03-27 08:48:13 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-27 08:48:13 -Starting...
2019-03-27 08:48:13 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-27 08:48:13 -Started.
2019-03-27 08:48:13 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-27 08:48:13 -Using a shared selector for servlet write/read
2019-03-27 08:48:13 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-27 08:48:13 -Started BootdoApplication in 42.987 seconds (JVM running for 45.286)
2019-03-27 08:48:13 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-27 08:48:14 -==> Parameters: 
2019-03-27 08:48:14 -<==      Total: 1
2019-03-27 08:48:51 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-27 08:48:51 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-27 08:48:51 -FrameworkServlet 'dispatcherServlet': initialization completed in 72 ms
2019-03-27 08:48:51 -Enabling session validation scheduler...
2019-03-27 08:48:52 -请求地址 : http://localhost:8081/login;JSESSIONID=3370a632-3967-4fb2-9a1b-96e19195cdbd
2019-03-27 08:48:52 -HTTP METHOD : GET
2019-03-27 08:48:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-27 08:48:52 -参数 : [{}]
2019-03-27 08:48:52 -耗时 : 4
2019-03-27 08:48:52 -返回值 : login
2019-03-27 08:48:54 -请求地址 : http://localhost:8081/getVerify
2019-03-27 08:48:54 -HTTP METHOD : GET
2019-03-27 08:48:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-27 08:48:54 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@489120ee, org.apache.shiro.web.servlet.ShiroHttpServletResponse@d93a798]
2019-03-27 08:48:58 -6137
2019-03-27 08:48:59 -耗时 : 4313
2019-03-27 08:48:59 -返回值 : null
2019-03-27 08:49:04 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-03-27 08:49:20 -请求地址 : http://localhost:8081/login
2019-03-27 08:49:20 -HTTP METHOD : POST
2019-03-27 08:49:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-27 08:49:20 -参数 : [admin, 111111, 6137, org.apache.shiro.web.servlet.ShiroHttpServletRequest@35d5ccf6]
2019-03-27 08:49:20 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-27 08:49:20 -==> Parameters: admin(String)
2019-03-27 08:49:20 -<==      Total: 1
2019-03-27 08:49:20 -耗时 : 149
2019-03-27 08:49:20 -返回值 : {msg=操作成功, code=0}
2019-03-27 08:49:20 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-03-27 08:49:20 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-27 08:49:20 -==> Parameters: 1(Long), admin(String), 登录(String), 149(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-27 08:49:20.546(Timestamp)
2019-03-27 08:49:20 -<==    Updates: 1
2019-03-27 08:49:20 -请求地址 : http://localhost:8081/index
2019-03-27 08:49:20 -HTTP METHOD : GET
2019-03-27 08:49:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-27 08:49:20 -参数 : [{}]
2019-03-27 08:49:21 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-27 08:49:21 -==> Parameters: 1(Long)
2019-03-27 08:49:21 -<==      Total: 46
2019-03-27 08:49:21 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-27 08:49:21 -==> Parameters: 138(Long)
2019-03-27 08:49:21 -<==      Total: 1
2019-03-27 08:49:21 -耗时 : 382
2019-03-27 08:49:21 -返回值 : index_v1
2019-03-27 08:49:21 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-27 08:49:21 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 382(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-27 08:49:21.277(Timestamp)
2019-03-27 08:49:21 -<==    Updates: 1
2019-03-27 08:49:21 -请求地址 : http://localhost:8081/main
2019-03-27 08:49:21 -HTTP METHOD : GET
2019-03-27 08:49:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-27 08:49:21 -参数 : []
2019-03-27 08:49:21 -耗时 : 1
2019-03-27 08:49:21 -返回值 : main
2019-03-27 08:49:22 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-27 08:49:22 -HTTP METHOD : GET
2019-03-27 08:49:22 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-27 08:49:22 -参数 : []
2019-03-27 08:49:22 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-27 08:49:22 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-27 08:49:22 -请求地址 : http://localhost:8081/main
2019-03-27 08:49:22 -HTTP METHOD : GET
2019-03-27 08:49:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-27 08:49:22 -参数 : []
2019-03-27 08:49:22 -耗时 : 0
2019-03-27 08:49:22 -返回值 : main
2019-03-27 08:49:22 -<==      Total: 0
2019-03-27 08:49:22 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-27 08:49:22 -==> Parameters: 1(Long), 0(String)
2019-03-27 08:49:22 -<==      Total: 1
2019-03-27 08:49:22 -耗时 : 130
2019-03-27 08:49:22 -返回值 : com.bootdo.common.utils.PageUtils@54c32c01
2019-03-27 08:49:32 -请求地址 : http://localhost:8081/
2019-03-27 08:49:32 -HTTP METHOD : GET
2019-03-27 08:49:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2019-03-27 08:49:32 -参数 : [{}]
2019-03-27 08:49:32 -耗时 : 1
2019-03-27 08:49:32 -返回值 : redirect:/index
2019-03-27 08:49:32 -请求地址 : http://localhost:8081/login;JSESSIONID=f5f69742-e51a-4857-9824-989900f6cfe7
2019-03-27 08:49:32 -HTTP METHOD : GET
2019-03-27 08:49:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-27 08:49:32 -参数 : [{}]
2019-03-27 08:49:32 -耗时 : 0
2019-03-27 08:49:32 -返回值 : login
2019-03-27 08:49:33 -请求地址 : http://localhost:8081/getVerify
2019-03-27 08:49:33 -HTTP METHOD : GET
2019-03-27 08:49:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-27 08:49:33 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@1ff62f6c, org.apache.shiro.web.servlet.ShiroHttpServletResponse@36520fcb]
2019-03-27 08:49:33 -6330
2019-03-27 08:49:33 -耗时 : 20
2019-03-27 08:49:33 -返回值 : null
2019-03-27 09:06:05 -请求地址 : http://localhost:8081/login
2019-03-27 09:06:05 -HTTP METHOD : POST
2019-03-27 09:06:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-27 09:06:05 -参数 : [admin, 111111, 6330, org.apache.shiro.web.servlet.ShiroHttpServletRequest@630b8dca]
2019-03-27 09:06:05 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-27 09:06:05 -==> Parameters: admin(String)
2019-03-27 09:06:05 -<==      Total: 1
2019-03-27 09:06:05 -耗时 : 19
2019-03-27 09:06:05 -返回值 : {msg=操作成功, code=0}
2019-03-27 09:06:05 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-27 09:06:05 -==> Parameters: 1(Long), admin(String), 登录(String), 19(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-27 09:06:05.651(Timestamp)
2019-03-27 09:06:05 -请求地址 : http://localhost:8081/index
2019-03-27 09:06:05 -HTTP METHOD : GET
2019-03-27 09:06:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-27 09:06:05 -参数 : [{}]
2019-03-27 09:06:05 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-27 09:06:05 -==> Parameters: 1(Long)
2019-03-27 09:06:05 -<==    Updates: 1
2019-03-27 09:06:05 -<==      Total: 46
2019-03-27 09:06:05 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-27 09:06:05 -==> Parameters: 138(Long)
2019-03-27 09:06:05 -<==      Total: 1
2019-03-27 09:06:05 -耗时 : 225
2019-03-27 09:06:05 -返回值 : index_v1
2019-03-27 09:06:05 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-27 09:06:05 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 226(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-27 09:06:05.936(Timestamp)
2019-03-27 09:06:06 -<==    Updates: 1
2019-03-27 09:06:06 -请求地址 : http://localhost:8081/main
2019-03-27 09:06:06 -HTTP METHOD : GET
2019-03-27 09:06:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-27 09:06:06 -参数 : []
2019-03-27 09:06:06 -耗时 : 1
2019-03-27 09:06:06 -返回值 : main
2019-03-27 09:06:06 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-27 09:06:06 -HTTP METHOD : GET
2019-03-27 09:06:06 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-27 09:06:06 -参数 : []
2019-03-27 09:06:06 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-27 09:06:06 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-27 09:06:06 -<==      Total: 0
2019-03-27 09:06:06 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-27 09:06:06 -==> Parameters: 1(Long), 0(String)
2019-03-27 09:06:06 -<==      Total: 1
2019-03-27 09:06:06 -耗时 : 21
2019-03-27 09:06:06 -返回值 : com.bootdo.common.utils.PageUtils@a5cd402
2019-03-27 09:06:06 -请求地址 : http://localhost:8081/main
2019-03-27 09:06:06 -HTTP METHOD : GET
2019-03-27 09:06:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-27 09:06:06 -参数 : []
2019-03-27 09:06:06 -耗时 : 1
2019-03-27 09:06:06 -返回值 : main
2019-03-27 09:06:15 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-27 09:06:15 -==> Parameters: 1(Long)
2019-03-27 09:06:15 -<==      Total: 90
2019-03-27 09:06:15 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-03-27 09:06:15 -HTTP METHOD : GET
2019-03-27 09:06:15 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-03-27 09:06:15 -参数 : []
2019-03-27 09:06:15 -耗时 : 0
2019-03-27 09:06:15 -返回值 : /moneyList/moneyList
2019-03-27 09:06:48 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-27 09:06:48 -HTTP METHOD : GET
2019-03-27 09:06:48 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-27 09:06:48 -参数 : []
2019-03-27 09:06:48 -耗时 : 0
2019-03-27 09:06:48 -返回值 : system/dept/deptTree
2019-03-27 09:06:49 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-27 09:06:49 -HTTP METHOD : GET
2019-03-27 09:06:49 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-27 09:06:49 -参数 : []
2019-03-27 09:06:49 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-27 09:06:49 -==> Parameters: 
2019-03-27 09:06:49 -<==      Total: 3
2019-03-27 09:06:49 -耗时 : 30
2019-03-27 09:06:49 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-27 09:09:33 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-27 09:09:33 -HTTP METHOD : GET
2019-03-27 09:09:33 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-27 09:09:33 -参数 : []
2019-03-27 09:09:33 -耗时 : 1
2019-03-27 09:09:33 -返回值 : /moneyLog/elecLog/elecLog
2019-03-27 09:09:33 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-27 09:09:33 -HTTP METHOD : GET
2019-03-27 09:09:33 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 09:09:33 -参数 : [userType]
2019-03-27 09:09:33 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 09:09:33 -==> Parameters: userType(String)
2019-03-27 09:09:33 -<==      Total: 2
2019-03-27 09:09:33 -耗时 : 29
2019-03-27 09:09:33 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 09:09:33 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-27 09:09:33 -HTTP METHOD : GET
2019-03-27 09:09:33 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-27 09:09:33 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-27 09:09:33 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-27 09:09:33 -==> Parameters: 0(Integer), 10(Integer)
2019-03-27 09:09:33 -<==      Total: 6
2019-03-27 09:09:33 -==>  Preparing: select count(*) from elec_log 
2019-03-27 09:09:33 -==> Parameters: 
2019-03-27 09:09:33 -<==      Total: 1
2019-03-27 09:09:33 -耗时 : 60
2019-03-27 09:09:33 -返回值 : com.bootdo.common.utils.PageUtils@13c5632
2019-03-27 09:09:52 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-27 09:09:52 -HTTP METHOD : GET
2019-03-27 09:09:52 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-27 09:09:52 -参数 : [{limit=10, offset=0, userType=B, userOrg=, userId=, elecDate=, type=B}]
2019-03-27 09:09:52 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? order by id asc limit ?, ? 
2019-03-27 09:09:52 -==> Parameters: B(String), 0(Integer), 10(Integer)
2019-03-27 09:09:52 -<==      Total: 1
2019-03-27 09:09:52 -==>  Preparing: select count(*) from elec_log WHERE user_type = ? 
2019-03-27 09:09:52 -==> Parameters: B(String)
2019-03-27 09:09:52 -<==      Total: 1
2019-03-27 09:09:52 -耗时 : 34
2019-03-27 09:09:52 -返回值 : com.bootdo.common.utils.PageUtils@28c5ca64
2019-03-27 09:09:55 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-27 09:09:55 -HTTP METHOD : GET
2019-03-27 09:09:55 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-27 09:09:55 -参数 : [{limit=10, offset=0, userType=A, userOrg=, userId=, elecDate=, type=A}]
2019-03-27 09:09:55 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? order by id asc limit ?, ? 
2019-03-27 09:09:55 -==> Parameters: A(String), 0(Integer), 10(Integer)
2019-03-27 09:09:55 -<==      Total: 5
2019-03-27 09:09:55 -==>  Preparing: select count(*) from elec_log WHERE user_type = ? 
2019-03-27 09:09:55 -==> Parameters: A(String)
2019-03-27 09:09:55 -<==      Total: 1
2019-03-27 09:09:55 -耗时 : 10
2019-03-27 09:09:55 -返回值 : com.bootdo.common.utils.PageUtils@58e2779b
2019-03-27 09:09:56 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-27 09:09:56 -HTTP METHOD : GET
2019-03-27 09:09:56 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-27 09:09:56 -参数 : []
2019-03-27 09:09:56 -耗时 : 0
2019-03-27 09:09:56 -返回值 : system/dept/deptTree
2019-03-27 09:09:57 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-27 09:09:57 -HTTP METHOD : GET
2019-03-27 09:09:57 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-27 09:09:57 -参数 : []
2019-03-27 09:09:57 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-27 09:09:57 -==> Parameters: 
2019-03-27 09:09:57 -<==      Total: 3
2019-03-27 09:09:57 -耗时 : 5
2019-03-27 09:09:57 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-27 09:10:19 -请求地址 : http://localhost:8081/moneyLog/elecLog/add
2019-03-27 09:10:19 -HTTP METHOD : GET
2019-03-27 09:10:19 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.add
2019-03-27 09:10:19 -参数 : []
2019-03-27 09:10:19 -耗时 : 1
2019-03-27 09:10:19 -返回值 : moneyLog/elecLog/add
2019-03-27 09:10:19 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-27 09:10:19 -HTTP METHOD : GET
2019-03-27 09:10:19 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 09:10:19 -参数 : [userType]
2019-03-27 09:10:19 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 09:10:19 -==> Parameters: userType(String)
2019-03-27 09:10:19 -<==      Total: 2
2019-03-27 09:10:19 -耗时 : 22
2019-03-27 09:10:19 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 09:10:25 -请求地址 : http://localhost:8081/moneyLog/elecLog/edit/1
2019-03-27 09:10:25 -HTTP METHOD : GET
2019-03-27 09:10:25 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.edit
2019-03-27 09:10:25 -参数 : [1, {}]
2019-03-27 09:10:25 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log where id = ? 
2019-03-27 09:10:25 -==> Parameters: 1(Long)
2019-03-27 09:10:25 -<==      Total: 1
2019-03-27 09:10:25 -耗时 : 8
2019-03-27 09:10:25 -返回值 : moneyLog/elecLog/edit
2019-03-27 09:10:25 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-27 09:10:25 -HTTP METHOD : GET
2019-03-27 09:10:25 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 09:10:25 -参数 : [userType]
2019-03-27 09:10:25 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 09:10:25 -==> Parameters: userType(String)
2019-03-27 09:10:25 -请求地址 : http://localhost:8081/common/dict/list/userOrg
2019-03-27 09:10:25 -HTTP METHOD : GET
2019-03-27 09:10:25 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 09:10:25 -参数 : [userOrg]
2019-03-27 09:10:25 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 09:10:25 -==> Parameters: userOrg(String)
2019-03-27 09:10:25 -<==      Total: 2
2019-03-27 09:10:25 -<==      Total: 0
2019-03-27 09:10:25 -耗时 : 6
2019-03-27 09:10:25 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 09:10:25 -耗时 : 4
2019-03-27 09:10:25 -返回值 : []
2019-03-27 09:11:33 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-27 09:11:33 -HTTP METHOD : GET
2019-03-27 09:11:33 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-27 09:11:33 -参数 : []
2019-03-27 09:11:33 -耗时 : 1
2019-03-27 09:11:33 -返回值 : system/dept/deptTree
2019-03-27 09:11:34 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-27 09:11:34 -HTTP METHOD : GET
2019-03-27 09:11:34 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-27 09:11:34 -参数 : []
2019-03-27 09:11:34 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-27 09:11:34 -==> Parameters: 
2019-03-27 09:11:34 -<==      Total: 3
2019-03-27 09:11:34 -耗时 : 18
2019-03-27 09:11:34 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-27 09:11:35 -请求地址 : http://localhost:8081/moneyLog/elecLog/exprotElecLog
2019-03-27 09:11:35 -HTTP METHOD : GET
2019-03-27 09:11:35 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog
2019-03-27 09:11:35 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@400db5c4, org.apache.shiro.web.servlet.ShiroHttpServletResponse@5c6b9cff, org.apache.shiro.web.servlet.ShiroHttpServletRequest@6e3758c3]
2019-03-27 09:11:35 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? and user_org = ? and `elec_date` >= ? and `elec_date` <= ? 
2019-03-27 09:11:35 -==> Parameters: A(String), 2(String), 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String)
2019-03-27 09:11:35 -<==      Total: 3
2019-03-27 09:11:36 -耗时 : 1101
2019-03-27 09:11:36 -返回值 : null
2019-03-27 09:12:45 -请求地址 : http://localhost:8081/charts/countMM
2019-03-27 09:12:45 -HTTP METHOD : GET
2019-03-27 09:12:45 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-03-27 09:12:45 -参数 : []
2019-03-27 09:12:45 -耗时 : 0
2019-03-27 09:12:45 -返回值 : charts/countMM
2019-03-27 09:14:02 -请求地址 : http://localhost:8081/charts/countDD
2019-03-27 09:14:02 -HTTP METHOD : GET
2019-03-27 09:14:02 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-03-27 09:14:02 -参数 : []
2019-03-27 09:14:02 -耗时 : 1
2019-03-27 09:14:02 -返回值 : charts/countDD
2019-03-27 09:14:02 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-27 09:14:02 -HTTP METHOD : GET
2019-03-27 09:14:02 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 09:14:02 -参数 : [userType]
2019-03-27 09:14:02 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 09:14:02 -==> Parameters: userType(String)
2019-03-27 09:14:02 -<==      Total: 2
2019-03-27 09:14:02 -耗时 : 6
2019-03-27 09:14:02 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 09:14:08 -请求地址 : http://localhost:8081/charts/countOwe
2019-03-27 09:14:08 -HTTP METHOD : GET
2019-03-27 09:14:08 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.countOwe
2019-03-27 09:14:08 -参数 : []
2019-03-27 09:14:08 -耗时 : 0
2019-03-27 09:14:08 -返回值 : charts/countOwe
2019-03-27 09:14:08 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-27 09:14:08 -HTTP METHOD : GET
2019-03-27 09:14:08 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 09:14:08 -参数 : [userType]
2019-03-27 09:14:08 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 09:14:08 -==> Parameters: userType(String)
2019-03-27 09:14:08 -<==      Total: 2
2019-03-27 09:14:08 -耗时 : 4
2019-03-27 09:14:08 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 09:14:10 -请求地址 : http://localhost:8081/charts/countYY
2019-03-27 09:14:10 -HTTP METHOD : GET
2019-03-27 09:14:10 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.countYY
2019-03-27 09:14:10 -参数 : []
2019-03-27 09:14:10 -耗时 : 1
2019-03-27 09:14:10 -返回值 : charts/countYY
2019-03-27 09:14:22 -请求地址 : http://localhost:8081/charts/countRun
2019-03-27 09:14:22 -HTTP METHOD : GET
2019-03-27 09:14:22 -CLASS_METHOD : com.bootdo.charts.controller.countRunController.countRun
2019-03-27 09:14:22 -参数 : []
2019-03-27 09:14:22 -耗时 : 1
2019-03-27 09:14:22 -返回值 : charts/countRun
2019-03-27 09:14:51 -请求地址 : http://localhost:8081/elec/elec
2019-03-27 09:14:51 -HTTP METHOD : GET
2019-03-27 09:14:51 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-27 09:14:51 -参数 : []
2019-03-27 09:14:51 -耗时 : 1
2019-03-27 09:14:51 -返回值 : elec/elec/elec
2019-03-27 09:14:51 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-27 09:14:51 -HTTP METHOD : GET
2019-03-27 09:14:51 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 09:14:51 -参数 : [userType]
2019-03-27 09:14:51 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 09:14:51 -==> Parameters: userType(String)
2019-03-27 09:14:51 -<==      Total: 2
2019-03-27 09:14:51 -耗时 : 5
2019-03-27 09:14:51 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 09:14:51 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-27 09:14:51 -HTTP METHOD : GET
2019-03-27 09:14:51 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-27 09:14:51 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@2c733787]
2019-03-27 09:14:51 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-27 09:14:51 -==> Parameters: 0(Integer), 10(Integer)
2019-03-27 09:14:51 -<==      Total: 10
2019-03-27 09:14:51 -==>  Preparing: select count(*) from elec 
2019-03-27 09:14:51 -==> Parameters: 
2019-03-27 09:14:51 -<==      Total: 1
2019-03-27 09:14:51 -耗时 : 87
2019-03-27 09:14:51 -返回值 : com.bootdo.common.utils.PageUtils@6a14c40
2019-03-27 09:16:32 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-27 09:16:32 -==> Parameters: 1(Long)
2019-03-27 09:16:32 -<==      Total: 90
2019-03-27 09:16:32 -请求地址 : http://localhost:8081/elec/elec/edit/1
2019-03-27 09:16:32 -HTTP METHOD : GET
2019-03-27 09:16:32 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.edit
2019-03-27 09:16:32 -参数 : [1, {}]
2019-03-27 09:16:32 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec where id = ? 
2019-03-27 09:16:32 -==> Parameters: 1(Long)
2019-03-27 09:16:32 -<==      Total: 1
2019-03-27 09:16:32 -耗时 : 10
2019-03-27 09:16:32 -返回值 : elec/elec/edit
2019-03-27 09:16:32 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-27 09:16:32 -HTTP METHOD : GET
2019-03-27 09:16:32 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 09:16:32 -参数 : [userType]
2019-03-27 09:16:32 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 09:16:32 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-03-27 09:16:32 -HTTP METHOD : GET
2019-03-27 09:16:32 -==> Parameters: userType(String)
2019-03-27 09:16:32 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 09:16:32 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-03-27 09:16:32 -HTTP METHOD : GET
2019-03-27 09:16:32 -参数 : [userState]
2019-03-27 09:16:32 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 09:16:32 -参数 : [elecType]
2019-03-27 09:16:32 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 09:16:32 -==> Parameters: elecType(String)
2019-03-27 09:16:32 -<==      Total: 2
2019-03-27 09:16:32 -耗时 : 7
2019-03-27 09:16:32 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 09:16:32 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 09:16:32 -==> Parameters: userState(String)
2019-03-27 09:16:32 -<==      Total: 2
2019-03-27 09:16:32 -<==      Total: 2
2019-03-27 09:16:32 -耗时 : 11
2019-03-27 09:16:32 -耗时 : 12
2019-03-27 09:16:32 -返回值 : [DictDO{id=139, name='民用电', value='1', type='elecType', description='电量性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='商业电', value='0', type='elecType', description='电量类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 09:16:32 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 09:16:49 -请求地址 : http://localhost:8081/sys/role
2019-03-27 09:16:49 -HTTP METHOD : GET
2019-03-27 09:16:49 -CLASS_METHOD : com.bootdo.system.controller.RoleController.role
2019-03-27 09:16:49 -参数 : []
2019-03-27 09:16:49 -耗时 : 1
2019-03-27 09:16:49 -返回值 : system/role/role
2019-03-27 09:16:49 -请求地址 : http://localhost:8081/sys/role/list
2019-03-27 09:16:49 -HTTP METHOD : GET
2019-03-27 09:16:49 -CLASS_METHOD : com.bootdo.system.controller.RoleController.list
2019-03-27 09:16:49 -参数 : []
2019-03-27 09:16:49 -==>  Preparing: select `role_id`,`role_name`,`role_sign`,`remark`,`user_id_create`,`gmt_create`,`gmt_modified` from sys_role order by role_id desc 
2019-03-27 09:16:49 -==> Parameters: 
2019-03-27 09:16:49 -<==      Total: 10
2019-03-27 09:16:49 -耗时 : 25
2019-03-27 09:16:49 -返回值 : [RoleDO{roleId=10, roleName='录入人员(牙星)', roleSign='null', remark='牙星电表上传权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=9, roleName='录入人员(五九)', roleSign='null', remark='五九电表上传权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=8, roleName='HR人员(牙星)', roleSign='null', remark='牙星工资代扣权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=7, roleName='HR人员(五九)', roleSign='null', remark='五九工资代扣权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=6, roleName='收费人员(牙星)', roleSign='null', remark='五九收费权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=5, roleName='收费人员(五九)', roleSign='null', remark='五九收费权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=4, roleName='收费主管(牙星)', roleSign='null', remark='牙星缴费所有权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=3, roleName='收费主管(五九)', roleSign='null', remark='五九缴费所有权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=2, roleName='总公司领导', roleSign='null', remark='总公司领导', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=1, roleName='超级用户角色', roleSign='admin', remark='拥有最高权限', userIdCreate=2, gmtCreate=2017-08-12 00:43:52.0, gmtModified=2017-08-12 19:14:59.0, menuIds=null}]
2019-03-27 09:17:14 -请求地址 : http://localhost:8081/sys/role/edit/10
2019-03-27 09:17:14 -HTTP METHOD : GET
2019-03-27 09:17:14 -CLASS_METHOD : com.bootdo.system.controller.RoleController.edit
2019-03-27 09:17:14 -参数 : [10, {}]
2019-03-27 09:17:14 -==>  Preparing: select `role_id`,`role_name`,`role_sign`,`remark`,`user_id_create`,`gmt_create`,`gmt_modified` from sys_role where role_id = ? 
2019-03-27 09:17:14 -==> Parameters: 10(Long)
2019-03-27 09:17:14 -<==      Total: 1
2019-03-27 09:17:14 -耗时 : 9
2019-03-27 09:17:14 -返回值 : system/role/edit
2019-03-27 09:17:14 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-27 09:17:14 -==> Parameters: 1(Long), admin(String), 编辑角色(String), 9(Integer), com.bootdo.system.controller.RoleController.edit()(String), null, 127.0.0.1(String), 2019-03-27 09:17:14.096(Timestamp)
2019-03-27 09:17:14 -<==    Updates: 1
2019-03-27 09:17:14 -请求地址 : http://localhost:8081/sys/menu/tree/10
2019-03-27 09:17:14 -HTTP METHOD : GET
2019-03-27 09:17:14 -CLASS_METHOD : com.bootdo.system.controller.MenuController.tree
2019-03-27 09:17:14 -参数 : [10]
2019-03-27 09:17:14 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu order by menu_id desc 
2019-03-27 09:17:14 -==> Parameters: 
2019-03-27 09:17:14 -<==      Total: 106
2019-03-27 09:17:14 -==>  Preparing: select menu_id from sys_role_menu WHERE role_id = ? 
2019-03-27 09:17:14 -==> Parameters: 10(Long)
2019-03-27 09:17:14 -<==      Total: 3
2019-03-27 09:17:14 -耗时 : 45
2019-03-27 09:17:14 -返回值 : {"checked":true,"children":[{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"153","parentId":"149","state":{"selected":false},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"152","parentId":"149","state":{"selected":false},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"151","parentId":"149","state":{"selected":false},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"150","parentId":"149","state":{"selected":false},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"149","parentId":"108","state":{"selected":false},"text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","state":{"selected":false},"text":"票据管理"},{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"159","parentId":"107","state":{"selected":false},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"158","parentId":"107","state":{"selected":false},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"157","parentId":"107","state":{"selected":false},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"156","parentId":"107","state":{"selected":false},"text":"添加"}],"hasChildren":true,"hasParent":true,"id":"107","parentId":"106","state":{"selected":false},"text":"缴费记录"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","state":{"selected":false},"text":"现金缴费"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","state":{"selected":false},"text":"收费管理"},{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"141","parentId":"120","state":{"selected":false},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"140","parentId":"120","state":{"selected":false},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"139","parentId":"120","state":{"selected":false},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"138","parentId":"120","state":{"selected":false},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"120","parentId":"105","state":{"selected":false},"text":"水价管理"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","state":{"selected":false},"text":"水费生成"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","state":{"selected":false},"text":"工资代扣"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"145","parentId":"117","state":{"selected":false},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"144","parentId":"117","state":{"selected":false},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"143","parentId":"117","state":{"selected":false},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"142","parentId":"117","state":{"selected":false},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"117","parentId":"105","state":{"selected":false},"text":"水费用户"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","state":{"selected":false},"text":"水费管理"},{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"136","parentId":"116","state":{"selected":false},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"135","parentId":"116","state":{"selected":false},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"134","parentId":"116","state":{"selected":false},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"133","parentId":"116","state":{"selected":false},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"116","parentId":"104","state":{"selected":false},"text":"暖价管理"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","state":{"selected":false},"text":"暖费生成"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","state":{"selected":false},"text":"工资代扣"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"148","parentId":"113","state":{"selected":false},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"147","parentId":"113","state":{"selected":false},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"146","parentId":"113","state":{"selected":false},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"137","parentId":"113","state":{"selected":false},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"113","parentId":"104","state":{"selected":false},"text":"暖费用户"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","state":{"selected":false},"text":"暖费管理"},{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"128","parentId":"124","state":{"selected":false},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"127","parentId":"124","state":{"selected":false},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"126","parentId":"124","state":{"selected":false},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"125","parentId":"124","state":{"selected":false},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"124","parentId":"103","state":{"selected":false},"text":"电价管理"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","state":{"selected":true},"text":"电表上传"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","state":{"selected":false},"text":"工资代扣"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"132","parentId":"121","state":{"selected":false},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"131","parentId":"121","state":{"selected":false},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"130","parentId":"121","state":{"selected":false},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"129","parentId":"121","state":{"selected":false},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"121","parentId":"103","state":{"selected":false},"text":"电费用户"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","state":{"selected":false},"text":"电费管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","state":{"selected":false},"text":"欠费报表图"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","state":{"selected":false},"text":"走势图报表"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","state":{"selected":false},"text":"年统计报表"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","state":{"selected":false},"text":"月统计报表"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","state":{"selected":false},"text":"日统计报表"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","state":{"selected":false},"text":"百度chart"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","state":{"selected":false},"text":"统计管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"92","parentId":"91","state":{"selected":false},"text":"在线用户"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"57","parentId":"91","state":{"selected":false},"text":"运行监控"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"30","parentId":"27","state":{"selected":false},"text":"清空"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"29","parentId":"27","state":{"selected":false},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"28","parentId":"27","state":{"selected":false},"text":"刷新"}],"hasChildren":true,"hasParent":true,"id":"27","parentId":"91","state":{"selected":false},"text":"系统日志"}],"hasChildren":true,"hasParent":false,"id":"91","parentId":"0","state":{"selected":false},"text":"系统监控"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"90","parentId":"84","state":{"selected":false},"text":"我的通知"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"89","parentId":"85","state":{"selected":false},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"88","parentId":"85","state":{"selected":false},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"87","parentId":"85","state":{"selected":false},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"86","parentId":"85","state":{"selected":false},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"85","parentId":"84","state":{"selected":false},"text":"通知公告"}],"hasChildren":true,"hasParent":false,"id":"84","parentId":"0","state":{"selected":false},"text":"办公管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"160","parentId":"77","state":{"selected":false},"text":"3D龙卷风"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"154","parentId":"77","state":{"selected":false},"text":"时钟"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"72","parentId":"77","state":{"selected":false},"text":"计算器"}],"hasChildren":true,"hasParent":false,"id":"77","parentId":"0","state":{"selected":false},"text":"系统工具"},{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"76","parentId":"73","state":{"selected":false},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"75","parentId":"73","state":{"selected":false},"text":"刪除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"74","parentId":"73","state":{"selected":false},"text":"增加"}],"hasChildren":true,"hasParent":true,"id":"73","parentId":"3","state":{"selected":false},"text":"组织管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"62","parentId":"7","state":{"selected":false},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"56","parentId":"7","state":{"selected":false},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"55","parentId":"7","state":{"selected":false},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"15","parentId":"7","state":{"selected":false},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"7","parentId":"3","state":{"selected":false},"text":"角色管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"26","parentId":"6","state":{"selected":false},"text":"重置密码"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"25","parentId":"6","state":{"selected":false},"text":"停用"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"24","parentId":"6","state":{"selected":false},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"14","parentId":"6","state":{"selected":false},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"13","parentId":"6","state":{"selected":false},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"12","parentId":"6","state":{"selected":false},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"6","parentId":"3","state":{"selected":false},"text":"用户管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"61","parentId":"2","state":{"selected":false},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"22","parentId":"2","state":{"selected":false},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"21","parentId":"2","state":{"selected":false},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"20","parentId":"2","state":{"selected":false},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"2","parentId":"3","state":{"selected":false},"text":"系统菜单"}],"hasChildren":true,"hasParent":false,"id":"3","parentId":"0","state":{"selected":false},"text":"系统管理"},{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"83","parentId":"78","state":{"selected":false},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"81","parentId":"78","state":{"selected":false},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"80","parentId":"78","state":{"selected":false},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"79","parentId":"78","state":{"selected":false},"text":"增加"}],"hasChildren":true,"hasParent":true,"id":"78","parentId":"1","state":{"selected":false},"text":"数据字典"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","state":{"selected":false},"text":"文件管理"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"selected":false},"text":"基础管理"}],"hasChildren":true,"hasParent":false,"id":"-1","parentId":"","state":{"opened":true},"text":"顶级节点"}
2019-03-27 09:17:28 -请求地址 : http://localhost:8081/sys/role/edit/8
2019-03-27 09:17:28 -HTTP METHOD : GET
2019-03-27 09:17:28 -CLASS_METHOD : com.bootdo.system.controller.RoleController.edit
2019-03-27 09:17:28 -参数 : [8, {}]
2019-03-27 09:17:28 -==>  Preparing: select `role_id`,`role_name`,`role_sign`,`remark`,`user_id_create`,`gmt_create`,`gmt_modified` from sys_role where role_id = ? 
2019-03-27 09:17:28 -==> Parameters: 8(Long)
2019-03-27 09:17:28 -<==      Total: 1
2019-03-27 09:17:28 -耗时 : 4
2019-03-27 09:17:28 -返回值 : system/role/edit
2019-03-27 09:17:28 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-27 09:17:28 -==> Parameters: 1(Long), admin(String), 编辑角色(String), 4(Integer), com.bootdo.system.controller.RoleController.edit()(String), null, 127.0.0.1(String), 2019-03-27 09:17:28.115(Timestamp)
2019-03-27 09:17:28 -<==    Updates: 1
2019-03-27 09:17:28 -请求地址 : http://localhost:8081/sys/menu/tree/8
2019-03-27 09:17:28 -HTTP METHOD : GET
2019-03-27 09:17:28 -CLASS_METHOD : com.bootdo.system.controller.MenuController.tree
2019-03-27 09:17:28 -参数 : [8]
2019-03-27 09:17:28 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu order by menu_id desc 
2019-03-27 09:17:28 -==> Parameters: 
2019-03-27 09:17:28 -<==      Total: 106
2019-03-27 09:17:28 -==>  Preparing: select menu_id from sys_role_menu WHERE role_id = ? 
2019-03-27 09:17:28 -==> Parameters: 8(Long)
2019-03-27 09:17:28 -<==      Total: 10
2019-03-27 09:17:28 -耗时 : 31
2019-03-27 09:17:28 -返回值 : {"checked":true,"children":[{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"153","parentId":"149","state":{"selected":false},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"152","parentId":"149","state":{"selected":false},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"151","parentId":"149","state":{"selected":false},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"150","parentId":"149","state":{"selected":false},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"149","parentId":"108","state":{"selected":false},"text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","state":{"selected":false},"text":"票据管理"},{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"159","parentId":"107","state":{"selected":false},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"158","parentId":"107","state":{"selected":false},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"157","parentId":"107","state":{"selected":false},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"156","parentId":"107","state":{"selected":false},"text":"添加"}],"hasChildren":true,"hasParent":true,"id":"107","parentId":"106","state":{"selected":false},"text":"缴费记录"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","state":{"selected":false},"text":"现金缴费"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","state":{"selected":false},"text":"收费管理"},{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"141","parentId":"120","state":{"selected":false},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"140","parentId":"120","state":{"selected":false},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"139","parentId":"120","state":{"selected":false},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"138","parentId":"120","state":{"selected":false},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"120","parentId":"105","state":{"selected":false},"text":"水价管理"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","state":{"selected":false},"text":"水费生成"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","state":{"selected":true},"text":"工资代扣"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"145","parentId":"117","state":{"selected":false},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"144","parentId":"117","state":{"selected":false},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"143","parentId":"117","state":{"selected":false},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"142","parentId":"117","state":{"selected":false},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"117","parentId":"105","state":{"selected":false},"text":"水费用户"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","state":{"selected":false},"text":"水费管理"},{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"136","parentId":"116","state":{"selected":false},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"135","parentId":"116","state":{"selected":false},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"134","parentId":"116","state":{"selected":false},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"133","parentId":"116","state":{"selected":false},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"116","parentId":"104","state":{"selected":false},"text":"暖价管理"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","state":{"selected":false},"text":"暖费生成"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","state":{"selected":true},"text":"工资代扣"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"148","parentId":"113","state":{"selected":false},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"147","parentId":"113","state":{"selected":false},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"146","parentId":"113","state":{"selected":false},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"137","parentId":"113","state":{"selected":false},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"113","parentId":"104","state":{"selected":false},"text":"暖费用户"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","state":{"selected":false},"text":"暖费管理"},{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"128","parentId":"124","state":{"selected":false},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"127","parentId":"124","state":{"selected":false},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"126","parentId":"124","state":{"selected":false},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"125","parentId":"124","state":{"selected":false},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"124","parentId":"103","state":{"selected":false},"text":"电价管理"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","state":{"selected":false},"text":"电表上传"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","state":{"selected":true},"text":"工资代扣"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"132","parentId":"121","state":{"selected":false},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"131","parentId":"121","state":{"selected":false},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"130","parentId":"121","state":{"selected":false},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"129","parentId":"121","state":{"selected":false},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"121","parentId":"103","state":{"selected":false},"text":"电费用户"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","state":{"selected":false},"text":"电费管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","state":{"selected":false},"text":"欠费报表图"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","state":{"selected":false},"text":"走势图报表"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","state":{"selected":false},"text":"年统计报表"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","state":{"selected":false},"text":"月统计报表"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","state":{"selected":false},"text":"日统计报表"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","state":{"selected":false},"text":"百度chart"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","state":{"selected":false},"text":"统计管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"92","parentId":"91","state":{"selected":false},"text":"在线用户"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"57","parentId":"91","state":{"selected":false},"text":"运行监控"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"30","parentId":"27","state":{"selected":false},"text":"清空"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"29","parentId":"27","state":{"selected":false},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"28","parentId":"27","state":{"selected":false},"text":"刷新"}],"hasChildren":true,"hasParent":true,"id":"27","parentId":"91","state":{"selected":false},"text":"系统日志"}],"hasChildren":true,"hasParent":false,"id":"91","parentId":"0","state":{"selected":false},"text":"系统监控"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"90","parentId":"84","state":{"selected":false},"text":"我的通知"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"89","parentId":"85","state":{"selected":false},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"88","parentId":"85","state":{"selected":false},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"87","parentId":"85","state":{"selected":false},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"86","parentId":"85","state":{"selected":false},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"85","parentId":"84","state":{"selected":false},"text":"通知公告"}],"hasChildren":true,"hasParent":false,"id":"84","parentId":"0","state":{"selected":false},"text":"办公管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"160","parentId":"77","state":{"selected":false},"text":"3D龙卷风"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"154","parentId":"77","state":{"selected":true},"text":"时钟"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"72","parentId":"77","state":{"selected":true},"text":"计算器"}],"hasChildren":true,"hasParent":false,"id":"77","parentId":"0","state":{"selected":false},"text":"系统工具"},{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"76","parentId":"73","state":{"selected":false},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"75","parentId":"73","state":{"selected":false},"text":"刪除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"74","parentId":"73","state":{"selected":false},"text":"增加"}],"hasChildren":true,"hasParent":true,"id":"73","parentId":"3","state":{"selected":false},"text":"组织管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"62","parentId":"7","state":{"selected":false},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"56","parentId":"7","state":{"selected":false},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"55","parentId":"7","state":{"selected":false},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"15","parentId":"7","state":{"selected":false},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"7","parentId":"3","state":{"selected":false},"text":"角色管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"26","parentId":"6","state":{"selected":false},"text":"重置密码"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"25","parentId":"6","state":{"selected":false},"text":"停用"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"24","parentId":"6","state":{"selected":false},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"14","parentId":"6","state":{"selected":false},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"13","parentId":"6","state":{"selected":false},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"12","parentId":"6","state":{"selected":false},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"6","parentId":"3","state":{"selected":false},"text":"用户管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"61","parentId":"2","state":{"selected":false},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"22","parentId":"2","state":{"selected":false},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"21","parentId":"2","state":{"selected":false},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"20","parentId":"2","state":{"selected":false},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"2","parentId":"3","state":{"selected":false},"text":"系统菜单"}],"hasChildren":true,"hasParent":false,"id":"3","parentId":"0","state":{"selected":false},"text":"系统管理"},{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"83","parentId":"78","state":{"selected":false},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"81","parentId":"78","state":{"selected":false},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"80","parentId":"78","state":{"selected":false},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"79","parentId":"78","state":{"selected":false},"text":"增加"}],"hasChildren":true,"hasParent":true,"id":"78","parentId":"1","state":{"selected":false},"text":"数据字典"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","state":{"selected":false},"text":"文件管理"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"selected":false},"text":"基础管理"}],"hasChildren":true,"hasParent":false,"id":"-1","parentId":"","state":{"opened":true},"text":"顶级节点"}
2019-03-27 09:18:01 -请求地址 : http://localhost:8081/elec/elecInto
2019-03-27 09:18:01 -HTTP METHOD : GET
2019-03-27 09:18:01 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.ElecInto
2019-03-27 09:18:01 -参数 : []
2019-03-27 09:18:01 -耗时 : 1
2019-03-27 09:18:01 -返回值 : elec/elecInto/elecInto
2019-03-27 09:18:08 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-27 09:18:08 -HTTP METHOD : GET
2019-03-27 09:18:08 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-27 09:18:08 -参数 : []
2019-03-27 09:18:08 -耗时 : 1
2019-03-27 09:18:08 -返回值 : system/dept/deptTree
2019-03-27 09:18:08 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-27 09:18:08 -HTTP METHOD : GET
2019-03-27 09:18:08 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-27 09:18:08 -参数 : []
2019-03-27 09:18:08 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-27 09:18:08 -==> Parameters: 
2019-03-27 09:18:08 -<==      Total: 3
2019-03-27 09:18:08 -耗时 : 7
2019-03-27 09:18:08 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-27 09:18:36 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-27 09:18:36 -HTTP METHOD : GET
2019-03-27 09:18:36 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-27 09:18:36 -参数 : []
2019-03-27 09:18:36 -耗时 : 1
2019-03-27 09:18:36 -返回值 : system/dept/deptTree
2019-03-27 09:18:36 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-27 09:18:36 -HTTP METHOD : GET
2019-03-27 09:18:36 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-27 09:18:36 -参数 : []
2019-03-27 09:18:36 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-27 09:18:36 -==> Parameters: 
2019-03-27 09:18:36 -<==      Total: 3
2019-03-27 09:18:36 -耗时 : 5
2019-03-27 09:18:36 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-27 09:18:42 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-27 09:18:42 -HTTP METHOD : GET
2019-03-27 09:18:42 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-27 09:18:42 -参数 : []
2019-03-27 09:18:42 -耗时 : 0
2019-03-27 09:18:42 -返回值 : system/dept/deptTree
2019-03-27 09:18:42 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-27 09:18:42 -HTTP METHOD : GET
2019-03-27 09:18:42 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-27 09:18:42 -参数 : []
2019-03-27 09:18:42 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-27 09:18:42 -==> Parameters: 
2019-03-27 09:18:42 -<==      Total: 3
2019-03-27 09:18:42 -耗时 : 13
2019-03-27 09:18:42 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-27 09:18:45 -请求地址 : http://localhost:8081/elec/elecInto/exprotElecIntoExcel
2019-03-27 09:18:45 -HTTP METHOD : GET
2019-03-27 09:18:45 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.exprotExcel
2019-03-27 09:18:45 -参数 : [com.bootdo.elec.vo.ElecVo@56bd03f, org.apache.shiro.web.servlet.ShiroHttpServletResponse@5cd45b0f]
2019-03-27 09:18:45 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? 
2019-03-27 09:18:45 -==> Parameters: 2019-03(String), 2(String)
2019-03-27 09:18:45 -<==      Total: 0
2019-03-27 09:18:45 -耗时 : 58
2019-03-27 09:18:45 -返回值 : null
2019-03-27 09:19:04 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 21], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 3], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 389]
2019-03-27 09:19:25 -请求地址 : http://localhost:8081/file/downImport/userInto
2019-03-27 09:19:25 -HTTP METHOD : GET
2019-03-27 09:19:25 -CLASS_METHOD : com.bootdo.temple.controller.TempletController.downImport
2019-03-27 09:19:25 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletResponse@2f7e38a8, userInto]
2019-03-27 09:19:25 -耗时 : 79
2019-03-27 09:19:25 -返回值 : null
2019-03-27 09:20:32 -请求地址 : http://localhost:8081/file/downImport/userInto
2019-03-27 09:20:32 -HTTP METHOD : GET
2019-03-27 09:20:32 -CLASS_METHOD : com.bootdo.temple.controller.TempletController.downImport
2019-03-27 09:20:32 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletResponse@265fa0e0, userInto]
2019-03-27 09:20:32 -耗时 : 4
2019-03-27 09:20:32 -返回值 : null
2019-03-27 09:21:55 -请求地址 : http://localhost:8081/elec/elecUpLoad
2019-03-27 09:21:55 -HTTP METHOD : GET
2019-03-27 09:21:55 -CLASS_METHOD : com.bootdo.elec.controller.ElecUpLoadController.Elec
2019-03-27 09:21:55 -参数 : []
2019-03-27 09:21:55 -耗时 : 1
2019-03-27 09:21:55 -返回值 : elec/elecUpLoad/elecUpLoad
2019-03-27 09:22:43 -请求地址 : http://localhost:8081/file/downImport/elecUpload
2019-03-27 09:22:43 -HTTP METHOD : GET
2019-03-27 09:22:43 -CLASS_METHOD : com.bootdo.temple.controller.TempletController.downImport
2019-03-27 09:22:43 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletResponse@27287dad, elecUpload]
2019-03-27 09:22:43 -耗时 : 83
2019-03-27 09:22:43 -返回值 : null
2019-03-27 09:23:00 -请求地址 : http://localhost:8081/file/downImport/elecUser
2019-03-27 09:23:00 -HTTP METHOD : GET
2019-03-27 09:23:00 -CLASS_METHOD : com.bootdo.temple.controller.TempletController.downImport
2019-03-27 09:23:00 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletResponse@18201cd2, elecUser]
2019-03-27 09:23:00 -耗时 : 22
2019-03-27 09:23:00 -返回值 : null
2019-03-27 09:24:01 -请求地址 : http://localhost:8081/elec/elecPrice
2019-03-27 09:24:01 -HTTP METHOD : GET
2019-03-27 09:24:01 -CLASS_METHOD : com.bootdo.elec.controller.ElecPriceController.ElecPrice
2019-03-27 09:24:01 -参数 : []
2019-03-27 09:24:01 -耗时 : 1
2019-03-27 09:24:01 -返回值 : elec/elecPrice/elecPrice
2019-03-27 09:24:01 -请求地址 : http://localhost:8081/elec/elecPrice/list
2019-03-27 09:24:01 -HTTP METHOD : GET
2019-03-27 09:24:01 -CLASS_METHOD : com.bootdo.elec.controller.ElecPriceController.list
2019-03-27 09:24:01 -参数 : [{limit=10, offset=0}]
2019-03-27 09:24:01 -==>  Preparing: select `id`,`elec_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `elec_org`) AS elecOrgName,`business_elec`,`civil_elec`,`noindustry_elec`,`industry_elec`,`special_1`,`special_2`,`special_3`,`special_4`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_price order by id desc limit ?, ? 
2019-03-27 09:24:01 -==> Parameters: 0(Integer), 10(Integer)
2019-03-27 09:24:01 -<==      Total: 2
2019-03-27 09:24:01 -==>  Preparing: select count(*) from elec_price 
2019-03-27 09:24:01 -==> Parameters: 
2019-03-27 09:24:01 -<==      Total: 1
2019-03-27 09:24:01 -耗时 : 41
2019-03-27 09:24:01 -返回值 : com.bootdo.common.utils.PageUtils@2318cdd3
2019-03-27 09:24:22 -请求地址 : http://localhost:8081/elec/elecPrice/edit/2
2019-03-27 09:24:22 -HTTP METHOD : GET
2019-03-27 09:24:22 -CLASS_METHOD : com.bootdo.elec.controller.ElecPriceController.edit
2019-03-27 09:24:22 -参数 : [2, {}]
2019-03-27 09:24:22 -==>  Preparing: select `id`,`elec_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `elec_org`) AS elecOrgName,`business_elec`,`civil_elec`,`noindustry_elec`,`industry_elec`,`special_1`,`special_2`,`special_3`,`special_4`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_price where id = ? 
2019-03-27 09:24:22 -==> Parameters: 2(Long)
2019-03-27 09:24:22 -<==      Total: 1
2019-03-27 09:24:22 -耗时 : 8
2019-03-27 09:24:22 -返回值 : elec/elecPrice/edit
2019-03-27 09:24:28 -请求地址 : http://localhost:8081/elec/elecPrice/update
2019-03-27 09:24:28 -HTTP METHOD : POST
2019-03-27 09:24:28 -CLASS_METHOD : com.bootdo.elec.controller.ElecPriceController.update
2019-03-27 09:24:28 -参数 : [com.bootdo.elec.domain.ElecPriceDO@ed86346]
2019-03-27 09:24:28 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-27 09:24:28 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/elec/elecPrice/update(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error updating database.  Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
### Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String(String), null, 2019-03-27 09:24:28.634(Timestamp)
2019-03-27 09:24:28 -nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error updating database.  Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
### Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error updating database.  Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
### Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:295)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy121.update(Unknown Source)
	at com.bootdo.elec.service.impl.ElecPriceServiceImpl.update(ElecPriceServiceImpl.java:39)
	at com.bootdo.elec.controller.ElecPriceController.update(ElecPriceController.java:91)
	at com.bootdo.elec.controller.ElecPriceController$$FastClassBySpringCGLIB$$65d01db3.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor129.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.elec.controller.ElecPriceController$$EnhancerBySpringCGLIB$$cedd5a6b.update(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.ibatis.exceptions.PersistenceException: 
### Error updating database.  Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
### Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
	at org.apache.ibatis.exceptions.ExceptionFactory.wrapException(ExceptionFactory.java:30)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:200)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 103 common frames omitted
Caused by: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
	at org.apache.ibatis.ognl.OgnlOps.compareWithConversion(OgnlOps.java:93)
	at org.apache.ibatis.ognl.OgnlOps.isEqual(OgnlOps.java:143)
	at org.apache.ibatis.ognl.OgnlOps.equal(OgnlOps.java:802)
	at org.apache.ibatis.ognl.ASTNotEq.getValueBody(ASTNotEq.java:53)
	at org.apache.ibatis.ognl.SimpleNode.evaluateGetValueBody(SimpleNode.java:212)
	at org.apache.ibatis.ognl.SimpleNode.getValue(SimpleNode.java:258)
	at org.apache.ibatis.ognl.ASTAnd.getValueBody(ASTAnd.java:61)
	at org.apache.ibatis.ognl.SimpleNode.evaluateGetValueBody(SimpleNode.java:212)
	at org.apache.ibatis.ognl.SimpleNode.getValue(SimpleNode.java:258)
	at org.apache.ibatis.ognl.Ognl.getValue(Ognl.java:470)
	at org.apache.ibatis.ognl.Ognl.getValue(Ognl.java:434)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:44)
	at org.apache.ibatis.scripting.xmltags.ExpressionEvaluator.evaluateBoolean(ExpressionEvaluator.java:32)
	at org.apache.ibatis.scripting.xmltags.IfSqlNode.apply(IfSqlNode.java:34)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.TrimSqlNode.apply(TrimSqlNode.java:55)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.DynamicSqlSource.getBoundSql(DynamicSqlSource.java:41)
	at org.apache.ibatis.mapping.MappedStatement.getBoundSql(MappedStatement.java:292)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.<init>(BaseStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.<init>(PreparedStatementHandler.java:40)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.<init>(RoutingStatementHandler.java:46)
	at org.apache.ibatis.session.Configuration.newStatementHandler(Configuration.java:545)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:48)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	... 108 common frames omitted
2019-03-27 09:24:28 -<==    Updates: 1
2019-03-27 09:26:39 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-27 09:26:39 -==> Parameters: 1(Long)
2019-03-27 09:26:39 -<==      Total: 90
2019-03-27 09:26:39 -请求地址 : http://localhost:8081/print/print
2019-03-27 09:26:39 -HTTP METHOD : GET
2019-03-27 09:26:39 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-03-27 09:26:39 -参数 : []
2019-03-27 09:26:39 -耗时 : 1
2019-03-27 09:26:39 -返回值 : print/print/print
2019-03-27 09:26:39 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-27 09:26:39 -HTTP METHOD : GET
2019-03-27 09:26:39 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 09:26:39 -参数 : [userType]
2019-03-27 09:26:39 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 09:26:39 -==> Parameters: userType(String)
2019-03-27 09:26:39 -<==      Total: 2
2019-03-27 09:26:39 -耗时 : 5
2019-03-27 09:26:39 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 09:26:39 -请求地址 : http://localhost:8081/print/print/list
2019-03-27 09:26:39 -HTTP METHOD : GET
2019-03-27 09:26:39 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-27 09:26:39 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-27 09:27:15 -请求地址 : http://localhost:8081/heat/heat
2019-03-27 09:27:15 -HTTP METHOD : GET
2019-03-27 09:27:15 -CLASS_METHOD : com.bootdo.heat.controller.HeatController.Heat
2019-03-27 09:27:15 -参数 : []
2019-03-27 09:27:15 -耗时 : 1
2019-03-27 09:27:15 -返回值 : heat/heat/heat
2019-03-27 09:27:15 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-27 09:27:15 -HTTP METHOD : GET
2019-03-27 09:27:15 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 09:27:15 -参数 : [userType]
2019-03-27 09:27:15 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 09:27:15 -==> Parameters: userType(String)
2019-03-27 09:27:15 -<==      Total: 2
2019-03-27 09:27:15 -耗时 : 5
2019-03-27 09:27:15 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 09:27:15 -请求地址 : http://localhost:8081/heat/heat/list
2019-03-27 09:27:15 -HTTP METHOD : GET
2019-03-27 09:27:15 -CLASS_METHOD : com.bootdo.heat.controller.HeatController.list
2019-03-27 09:27:15 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}]
2019-03-27 09:27:15 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`heat_type`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat order by id asc limit ?, ? 
2019-03-27 09:27:15 -==> Parameters: 0(Integer), 3(Integer)
2019-03-27 09:27:15 -<==      Total: 3
2019-03-27 09:27:15 -==>  Preparing: select count(*) from heat 
2019-03-27 09:27:15 -==> Parameters: 
2019-03-27 09:27:15 -<==      Total: 1
2019-03-27 09:27:15 -耗时 : 82
2019-03-27 09:27:15 -返回值 : com.bootdo.common.utils.PageUtils@7e9d9650
2019-03-27 09:27:16 -请求地址 : http://localhost:8081/heat/heatInto
2019-03-27 09:27:16 -HTTP METHOD : GET
2019-03-27 09:27:16 -CLASS_METHOD : com.bootdo.heat.controller.HeatIntoController.HeatInto
2019-03-27 09:27:16 -参数 : []
2019-03-27 09:27:16 -耗时 : 1
2019-03-27 09:27:16 -返回值 : heat/heatInto/heatInto
2019-03-27 09:27:16 -请求地址 : http://localhost:8081/heat/heatUpLoad
2019-03-27 09:27:16 -HTTP METHOD : GET
2019-03-27 09:27:16 -CLASS_METHOD : com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad
2019-03-27 09:27:16 -参数 : []
2019-03-27 09:27:16 -耗时 : 1
2019-03-27 09:27:16 -返回值 : heat/heatUpLoad/heatUpLoad
2019-03-27 09:27:17 -请求地址 : http://localhost:8081/heat/heatPrice
2019-03-27 09:27:17 -HTTP METHOD : GET
2019-03-27 09:27:17 -CLASS_METHOD : com.bootdo.heat.controller.HeatPriceController.HeatPrice
2019-03-27 09:27:17 -参数 : []
2019-03-27 09:27:17 -耗时 : 1
2019-03-27 09:27:17 -返回值 : heat/heatPrice/heatPrice
2019-03-27 09:27:17 -请求地址 : http://localhost:8081/heat/heatPrice/list
2019-03-27 09:27:17 -HTTP METHOD : GET
2019-03-27 09:27:17 -CLASS_METHOD : com.bootdo.heat.controller.HeatPriceController.list
2019-03-27 09:27:17 -参数 : [{limit=10, offset=0}]
2019-03-27 09:27:17 -==>  Preparing: select `id`,`heat_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `heat_org`) AS heatOrgName,`business_heat`,`civil_heat`,`special_1`,`special_2`,`special_3`,`special_4`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_price order by id desc limit ?, ? 
2019-03-27 09:27:17 -==> Parameters: 0(Integer), 10(Integer)
2019-03-27 09:27:17 -<==      Total: 2
2019-03-27 09:27:17 -==>  Preparing: select count(*) from heat_price 
2019-03-27 09:27:17 -==> Parameters: 
2019-03-27 09:27:17 -<==      Total: 1
2019-03-27 09:27:17 -耗时 : 87
2019-03-27 09:27:17 -返回值 : com.bootdo.common.utils.PageUtils@58dd877e
2019-03-27 09:31:20 -请求地址 : http://localhost:8081/sys/online
2019-03-27 09:31:20 -HTTP METHOD : GET
2019-03-27 09:31:20 -CLASS_METHOD : com.bootdo.system.controller.SessionController.online
2019-03-27 09:31:20 -参数 : []
2019-03-27 09:31:20 -耗时 : 18
2019-03-27 09:31:20 -返回值 : system/online/online
2019-03-27 09:31:20 -请求地址 : http://localhost:8081/sys/online/list
2019-03-27 09:31:20 -HTTP METHOD : GET
2019-03-27 09:31:20 -CLASS_METHOD : com.bootdo.system.controller.SessionController.list
2019-03-27 09:31:20 -参数 : []
2019-03-27 09:31:20 -耗时 : 0
2019-03-27 09:31:20 -返回值 : [com.bootdo.system.domain.UserOnline@68b2ea27]
2019-03-27 09:31:45 -请求地址 : http://localhost:8081/common/log
2019-03-27 09:31:45 -HTTP METHOD : GET
2019-03-27 09:31:45 -CLASS_METHOD : com.bootdo.common.controller.LogController.log
2019-03-27 09:31:45 -参数 : []
2019-03-27 09:31:45 -耗时 : 1
2019-03-27 09:31:45 -返回值 : common/log/log
2019-03-27 09:31:46 -请求地址 : http://localhost:8081/common/log/list
2019-03-27 09:31:46 -HTTP METHOD : GET
2019-03-27 09:31:46 -CLASS_METHOD : com.bootdo.common.controller.LogController.list
2019-03-27 09:31:46 -参数 : [{limit=10, offset=0, sort=gmt_create, order=desc, operation=, username=}]
2019-03-27 09:31:46 -==>  Preparing: select count(*) from sys_log 
2019-03-27 09:31:46 -==> Parameters: 
2019-03-27 09:31:46 -<==      Total: 1
2019-03-27 09:31:46 -==>  Preparing: select `id`,`user_id`,`username`,`operation`,`time`,`method`,`params`,`ip`,`gmt_create` from sys_log order by gmt_create desc limit ?, ? 
2019-03-27 09:31:46 -==> Parameters: 0(Integer), 10(Integer)
2019-03-27 09:31:46 -<==      Total: 10
2019-03-27 09:31:46 -耗时 : 300
2019-03-27 09:31:46 -返回值 : PageDO{offset=0, limit=10, total=780, params={}, param='', rows=[LogDO{id=2694, userId=1, username='admin', operation='error', time=null, method='http://localhost:8081/elec/elecPrice/update', params='org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error updating database.  Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
### Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String', ip='null', gmtCreate=Wed Mar 27 09:24:29 CST 2019}, LogDO{id=2693, userId=1, username='admin', operation='编辑角色', time=4, method='com.bootdo.system.controller.RoleController.edit()', params='null', ip='127.0.0.1', gmtCreate=Wed Mar 27 09:17:28 CST 2019}, LogDO{id=2692, userId=1, username='admin', operation='编辑角色', time=9, method='com.bootdo.system.controller.RoleController.edit()', params='null', ip='127.0.0.1', gmtCreate=Wed Mar 27 09:17:14 CST 2019}, LogDO{id=2690, userId=1, username='admin', operation='登录', time=19, method='com.bootdo.system.controller.LoginController.ajaxLogin()', params='null', ip='127.0.0.1', gmtCreate=Wed Mar 27 09:06:06 CST 2019}, LogDO{id=2691, userId=1, username='admin', operation='请求访问主页', time=226, method='com.bootdo.system.controller.LoginController.index()', params='{"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h', ip='127.0.0.1', gmtCreate=Wed Mar 27 09:06:06 CST 2019}, LogDO{id=2688, userId=1, username='admin', operation='登录', time=149, method='com.bootdo.system.controller.LoginController.ajaxLogin()', params='null', ip='127.0.0.1', gmtCreate=Wed Mar 27 08:49:21 CST 2019}, LogDO{id=2689, userId=1, username='admin', operation='请求访问主页', time=382, method='com.bootdo.system.controller.LoginController.index()', params='{"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h', ip='127.0.0.1', gmtCreate=Wed Mar 27 08:49:21 CST 2019}, LogDO{id=2687, userId=1, username='admin', operation='请求访问主页', time=1402, method='com.bootdo.system.controller.LoginController.index()', params='{"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h', ip='127.0.0.1', gmtCreate=Tue Mar 26 22:26:44 CST 2019}, LogDO{id=2686, userId=1, username='admin', operation='登录', time=630, method='com.bootdo.system.controller.LoginController.ajaxLogin()', params='null', ip='127.0.0.1', gmtCreate=Tue Mar 26 22:26:43 CST 2019}, LogDO{id=2685, userId=1, username='admin', operation='error', time=null, method='http://localhost:8081/elec/elec/update', params='org.springframework.jdbc.UncategorizedSQLException: 
### Error updating database.  Cause: java.sql.SQLException: sql injection violation, syntax error: ERROR. token : AND, pos : 23 : update elec 
		 SET and id = ? 
	   and user_id = ? 
	   and user_name = ? 
	   and user_type = ? 
	   and user_org = ? 
	   and user_tell = ? 
	   and user_state = ? 
	   and wages_id = ? 
	   and elec_type = ? 
	  
	   and start = ?
	   and end = ? 
	   and hu = ?
	   and elec_amount = ? 
	   and elec_cost = ? 
	   and elec_sum = ? 
	   and CREATE_TIME = ?  
	   and create_by = ? 
	   and update_time = ? 
	   and update_by = ? 
		where id = ?
### SQL: update elec     SET and id = ?      and user_id = ?      and user_name = ?      and user_type = ?      and user_org = ?      and user_tell = ?      and user_state = ?      and wages_id = ?      and elec_type = ?          and start = ?     and end = ?      and hu = ?     and elec_amount = ?      and elec_cost = ?      and elec_sum = ?      and CREATE_TIME = ?       and create_by = ?      and update_time = ?      and update_by = ?    where id = ?
### Cause: java.sql.SQLException: sql injection violation, syntax error: ERROR. token : AND, pos : 23 : update elec 
		 SET and id = ? 
	   and user_id = ? 
	   and user_name = ? 
	   and user_type = ? 
	   and user_org = ? 
	   and user_tell = ? 
	   and user_state = ? 
	   and wages_id = ? 
	   and elec_type = ? 
	  
	   and start = ?
	   and end = ? 
	   and hu = ?
	   and elec_amount = ? 
	   and elec_cost = ? 
	   and elec_sum = ? 
	   and CREATE_TIME = ?  
	   and create_by = ? 
	   and update_time = ? 
	   and update_by = ? 
		where id = ?
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, syntax error: ERROR. token : AND, pos : 23 : update elec 
		 SET and id = ? 
	   and user_id = ? 
	   and user_name = ? 
	   and user_type = ? 
	   and user_org = ? 
	   and user_tell = ? 
	   and user_state = ? 
	   and wages_id = ? 
	   and elec_type = ? 
	  
	   and start = ?
	   and end = ? 
	   and hu = ?
	   and elec_amount = ? 
	   and elec_cost = ? 
	   and elec_sum = ? 
	   and CREATE_TIME = ?  
	   and create_by = ? 
	   and update_time = ? 
	   and update_by = ? 
		where id = ?; nested exception is java.sql.SQLException: sql injection violation, syntax error: ERROR. token : AND, pos : 23 : update elec 
		 SET and id = ? 
	   and user_id = ? 
	   and user_name = ? 
	   and user_type = ? 
	   and user_org = ? 
	   and user_tell = ? 
	   and user_state = ? 
	   and wages_id = ? 
	   and elec_type = ? 
	  
	   and start = ?
	   and end = ? 
	   and hu = ?
	   and elec_amount = ? 
	   and elec_cost = ? 
	   and elec_sum = ? 
	   and CREATE_TIME = ?  
	   and create_by = ? 
	   and update_time = ? 
	   and update_by = ? 
		where id = ?', ip='null', gmtCreate=Tue Mar 26 22:18:08 CST 2019}]}
2019-03-27 09:32:45 -请求地址 : http://localhost:8081/common/job
2019-03-27 09:32:45 -HTTP METHOD : GET
2019-03-27 09:32:45 -CLASS_METHOD : com.bootdo.common.controller.JobController.taskScheduleJob
2019-03-27 09:32:45 -参数 : []
2019-03-27 09:32:45 -耗时 : 1
2019-03-27 09:32:45 -返回值 : common/job/job
2019-03-27 09:33:25 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-27 09:33:25 -HTTP METHOD : GET
2019-03-27 09:33:25 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-27 09:33:25 -参数 : []
2019-03-27 09:33:25 -耗时 : 1
2019-03-27 09:33:25 -返回值 : /moneyLog/heatLog/heatLog
2019-03-27 09:33:26 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-27 09:33:26 -HTTP METHOD : GET
2019-03-27 09:33:26 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 09:33:26 -参数 : [userType]
2019-03-27 09:33:26 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 09:33:26 -==> Parameters: userType(String)
2019-03-27 09:33:26 -<==      Total: 2
2019-03-27 09:33:26 -耗时 : 5
2019-03-27 09:33:26 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 09:33:26 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-27 09:33:26 -HTTP METHOD : GET
2019-03-27 09:33:26 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-27 09:33:26 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-03-27 09:33:26 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-27 09:33:26 -==> Parameters: 0(Integer), 10(Integer)
2019-03-27 09:33:26 -<==      Total: 4
2019-03-27 09:33:26 -==>  Preparing: select count(*) from heat_log 
2019-03-27 09:33:26 -==> Parameters: 
2019-03-27 09:33:26 -<==      Total: 1
2019-03-27 09:33:26 -耗时 : 54
2019-03-27 09:33:26 -返回值 : com.bootdo.common.utils.PageUtils@213172f8
2019-03-27 09:33:26 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-27 09:33:26 -HTTP METHOD : GET
2019-03-27 09:33:26 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-27 09:33:26 -参数 : []
2019-03-27 09:33:26 -耗时 : 0
2019-03-27 09:33:26 -返回值 : /moneyLog/waterLog/waterLog
2019-03-27 09:33:27 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-27 09:33:27 -HTTP METHOD : GET
2019-03-27 09:33:27 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 09:33:27 -参数 : [userType]
2019-03-27 09:33:27 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 09:33:27 -==> Parameters: userType(String)
2019-03-27 09:33:27 -<==      Total: 2
2019-03-27 09:33:27 -耗时 : 4
2019-03-27 09:33:27 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 09:33:27 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-27 09:33:27 -HTTP METHOD : GET
2019-03-27 09:33:27 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-27 09:33:27 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-03-27 09:33:27 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-27 09:33:27 -==> Parameters: 0(Integer), 10(Integer)
2019-03-27 09:33:27 -<==      Total: 4
2019-03-27 09:33:27 -==>  Preparing: select count(*) from water_log 
2019-03-27 09:33:27 -==> Parameters: 
2019-03-27 09:33:27 -<==      Total: 1
2019-03-27 09:33:27 -耗时 : 35
2019-03-27 09:33:27 -返回值 : com.bootdo.common.utils.PageUtils@3ab3ddca
2019-03-27 09:33:27 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-27 09:33:27 -HTTP METHOD : GET
2019-03-27 09:33:27 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-27 09:33:27 -参数 : []
2019-03-27 09:33:27 -耗时 : 0
2019-03-27 09:33:27 -返回值 : /moneyLog/heatLog/heatLog
2019-03-27 09:33:27 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-27 09:33:27 -HTTP METHOD : GET
2019-03-27 09:33:27 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 09:33:27 -参数 : [userType]
2019-03-27 09:33:27 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 09:33:27 -==> Parameters: userType(String)
2019-03-27 09:33:27 -<==      Total: 2
2019-03-27 09:33:27 -耗时 : 4
2019-03-27 09:33:27 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 09:33:27 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-27 09:33:27 -HTTP METHOD : GET
2019-03-27 09:33:27 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-27 09:33:27 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-03-27 09:33:27 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-27 09:33:27 -==> Parameters: 0(Integer), 10(Integer)
2019-03-27 09:33:27 -<==      Total: 4
2019-03-27 09:33:27 -==>  Preparing: select count(*) from heat_log 
2019-03-27 09:33:27 -==> Parameters: 
2019-03-27 09:33:27 -<==      Total: 1
2019-03-27 09:33:27 -耗时 : 7
2019-03-27 09:33:27 -返回值 : com.bootdo.common.utils.PageUtils@6692db1c
2019-03-27 09:33:29 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-27 09:33:29 -HTTP METHOD : GET
2019-03-27 09:33:29 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-27 09:33:29 -参数 : []
2019-03-27 09:33:29 -耗时 : 1
2019-03-27 09:33:29 -返回值 : /moneyLog/elecLog/elecLog
2019-03-27 09:33:29 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-27 09:33:29 -HTTP METHOD : GET
2019-03-27 09:33:29 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 09:33:29 -参数 : [userType]
2019-03-27 09:33:29 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 09:33:29 -==> Parameters: userType(String)
2019-03-27 09:33:29 -<==      Total: 2
2019-03-27 09:33:29 -耗时 : 6
2019-03-27 09:33:29 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 09:33:29 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-27 09:33:29 -HTTP METHOD : GET
2019-03-27 09:33:29 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-27 09:33:29 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-27 09:33:29 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-27 09:33:29 -==> Parameters: 0(Integer), 10(Integer)
2019-03-27 09:33:29 -<==      Total: 6
2019-03-27 09:33:29 -==>  Preparing: select count(*) from elec_log 
2019-03-27 09:33:29 -==> Parameters: 
2019-03-27 09:33:29 -<==      Total: 1
2019-03-27 09:33:29 -耗时 : 48
2019-03-27 09:33:29 -返回值 : com.bootdo.common.utils.PageUtils@7bd9d1dd
2019-03-27 09:33:32 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-27 09:33:32 -HTTP METHOD : GET
2019-03-27 09:33:32 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-27 09:33:32 -参数 : []
2019-03-27 09:33:32 -耗时 : 1
2019-03-27 09:33:32 -返回值 : /moneyLog/heatLog/heatLog
2019-03-27 09:33:32 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-27 09:33:32 -HTTP METHOD : GET
2019-03-27 09:33:32 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 09:33:32 -参数 : [userType]
2019-03-27 09:33:32 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 09:33:32 -==> Parameters: userType(String)
2019-03-27 09:33:32 -<==      Total: 2
2019-03-27 09:33:32 -耗时 : 4
2019-03-27 09:33:32 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 09:33:32 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-27 09:33:32 -HTTP METHOD : GET
2019-03-27 09:33:32 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-27 09:33:32 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-03-27 09:33:32 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-27 09:33:32 -==> Parameters: 0(Integer), 10(Integer)
2019-03-27 09:33:32 -<==      Total: 4
2019-03-27 09:33:32 -==>  Preparing: select count(*) from heat_log 
2019-03-27 09:33:32 -==> Parameters: 
2019-03-27 09:33:32 -<==      Total: 1
2019-03-27 09:33:32 -耗时 : 9
2019-03-27 09:33:32 -返回值 : com.bootdo.common.utils.PageUtils@5a394d31
2019-03-27 09:33:32 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-27 09:33:32 -HTTP METHOD : GET
2019-03-27 09:33:32 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-27 09:33:32 -参数 : []
2019-03-27 09:33:32 -耗时 : 1
2019-03-27 09:33:32 -返回值 : /moneyLog/waterLog/waterLog
2019-03-27 09:33:33 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-27 09:33:33 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-27 09:33:33 -HTTP METHOD : GET
2019-03-27 09:33:33 -HTTP METHOD : GET
2019-03-27 09:33:33 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 09:33:33 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-27 09:33:33 -参数 : [userType]
2019-03-27 09:33:33 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-03-27 09:33:33 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-27 09:33:33 -==> Parameters: 0(Integer), 10(Integer)
2019-03-27 09:33:33 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 09:33:33 -==> Parameters: userType(String)
2019-03-27 09:33:33 -<==      Total: 4
2019-03-27 09:33:33 -==>  Preparing: select count(*) from water_log 
2019-03-27 09:33:33 -==> Parameters: 
2019-03-27 09:33:33 -<==      Total: 2
2019-03-27 09:33:33 -<==      Total: 1
2019-03-27 09:33:33 -耗时 : 14
2019-03-27 09:33:33 -耗时 : 14
2019-03-27 09:33:33 -返回值 : com.bootdo.common.utils.PageUtils@5929478e
2019-03-27 09:33:33 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 09:33:33 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-27 09:33:33 -HTTP METHOD : GET
2019-03-27 09:33:33 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-27 09:33:33 -参数 : []
2019-03-27 09:33:33 -耗时 : 0
2019-03-27 09:33:33 -返回值 : /moneyLog/heatLog/heatLog
2019-03-27 09:33:34 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-27 09:33:34 -HTTP METHOD : GET
2019-03-27 09:33:34 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 09:33:34 -参数 : [userType]
2019-03-27 09:33:34 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 09:33:34 -==> Parameters: userType(String)
2019-03-27 09:33:34 -<==      Total: 2
2019-03-27 09:33:34 -耗时 : 6
2019-03-27 09:33:34 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 09:33:34 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-27 09:33:34 -HTTP METHOD : GET
2019-03-27 09:33:34 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-27 09:33:34 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-03-27 09:33:34 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-27 09:33:34 -==> Parameters: 0(Integer), 10(Integer)
2019-03-27 09:33:34 -<==      Total: 4
2019-03-27 09:33:34 -==>  Preparing: select count(*) from heat_log 
2019-03-27 09:33:34 -==> Parameters: 
2019-03-27 09:33:34 -<==      Total: 1
2019-03-27 09:33:34 -耗时 : 15
2019-03-27 09:33:34 -返回值 : com.bootdo.common.utils.PageUtils@266cd59a
2019-03-27 09:33:44 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-27 09:33:44 -HTTP METHOD : GET
2019-03-27 09:33:44 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-27 09:33:44 -参数 : []
2019-03-27 09:33:44 -耗时 : 0
2019-03-27 09:33:44 -返回值 : /moneyLog/elecLog/elecLog
2019-03-27 09:33:44 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-27 09:33:44 -HTTP METHOD : GET
2019-03-27 09:33:44 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 09:33:44 -参数 : [userType]
2019-03-27 09:33:44 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 09:33:44 -==> Parameters: userType(String)
2019-03-27 09:33:44 -<==      Total: 2
2019-03-27 09:33:44 -耗时 : 4
2019-03-27 09:33:44 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 09:33:44 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-27 09:33:44 -HTTP METHOD : GET
2019-03-27 09:33:44 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-27 09:33:44 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-27 09:33:44 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-27 09:33:44 -==> Parameters: 0(Integer), 10(Integer)
2019-03-27 09:33:44 -<==      Total: 6
2019-03-27 09:33:44 -==>  Preparing: select count(*) from elec_log 
2019-03-27 09:33:44 -==> Parameters: 
2019-03-27 09:33:44 -<==      Total: 1
2019-03-27 09:33:44 -耗时 : 7
2019-03-27 09:33:44 -返回值 : com.bootdo.common.utils.PageUtils@7462f3d8
2019-03-27 09:33:54 -请求地址 : http://localhost:8081/moneyLog/elecLog/add
2019-03-27 09:33:54 -HTTP METHOD : GET
2019-03-27 09:33:54 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.add
2019-03-27 09:33:54 -参数 : []
2019-03-27 09:33:54 -耗时 : 0
2019-03-27 09:33:54 -返回值 : moneyLog/elecLog/add
2019-03-27 09:33:54 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-27 09:33:54 -HTTP METHOD : GET
2019-03-27 09:33:54 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 09:33:54 -参数 : [userType]
2019-03-27 09:33:54 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 09:33:54 -==> Parameters: userType(String)
2019-03-27 09:33:54 -<==      Total: 2
2019-03-27 09:33:54 -耗时 : 4
2019-03-27 09:33:54 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 09:35:06 -请求地址 : http://localhost:8081/oa/notify/selfNotify
2019-03-27 09:35:06 -HTTP METHOD : GET
2019-03-27 09:35:06 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.selefNotify
2019-03-27 09:35:06 -参数 : []
2019-03-27 09:35:06 -耗时 : 0
2019-03-27 09:35:06 -返回值 : oa/notify/selfNotify
2019-03-27 09:35:06 -请求地址 : http://localhost:8081/oa/notify/selfList
2019-03-27 09:35:06 -HTTP METHOD : GET
2019-03-27 09:35:06 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.selfList
2019-03-27 09:35:06 -参数 : [{limit=10, offset=0}]
2019-03-27 09:35:06 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-27 09:35:06 -==> Parameters: 1(Long), 0(Integer), 10(Integer)
2019-03-27 09:35:06 -<==      Total: 5
2019-03-27 09:35:06 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user where user_id = ? 
2019-03-27 09:35:06 -==> Parameters: 1(Long)
2019-03-27 09:35:06 -<==      Total: 1
2019-03-27 09:35:06 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user where user_id = ? 
2019-03-27 09:35:06 -==> Parameters: 1(Long)
2019-03-27 09:35:06 -<==      Total: 1
2019-03-27 09:35:07 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user where user_id = ? 
2019-03-27 09:35:07 -==> Parameters: 1(Long)
2019-03-27 09:35:07 -<==      Total: 1
2019-03-27 09:35:07 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user where user_id = ? 
2019-03-27 09:35:07 -==> Parameters: 1(Long)
2019-03-27 09:35:07 -<==      Total: 1
2019-03-27 09:35:07 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user where user_id = ? 
2019-03-27 09:35:07 -==> Parameters: 1(Long)
2019-03-27 09:35:07 -<==      Total: 1
2019-03-27 09:35:07 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-27 09:35:07 -==> Parameters: 1(Long), null
2019-03-27 09:35:07 -<==      Total: 1
2019-03-27 09:35:07 -耗时 : 81
2019-03-27 09:35:07 -返回值 : com.bootdo.common.utils.PageUtils@1cee268a
2019-03-27 09:35:13 -请求地址 : http://localhost:8081/oa/notify
2019-03-27 09:35:13 -HTTP METHOD : GET
2019-03-27 09:35:13 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.oaNotify
2019-03-27 09:35:13 -参数 : []
2019-03-27 09:35:13 -耗时 : 1
2019-03-27 09:35:13 -返回值 : oa/notify/notify
2019-03-27 09:35:14 -请求地址 : http://localhost:8081/oa/notify/list
2019-03-27 09:35:14 -HTTP METHOD : GET
2019-03-27 09:35:14 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.list
2019-03-27 09:35:14 -参数 : [{limit=10, offset=0}]
2019-03-27 09:35:14 -==>  Preparing: select `id`,`type`,`title`,`content`,`files`,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify order by id desc limit ?, ? 
2019-03-27 09:35:14 -==> Parameters: 0(Integer), 10(Integer)
2019-03-27 09:35:14 -<==      Total: 5
2019-03-27 09:35:14 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE value = ? and type = ? order by id desc 
2019-03-27 09:35:14 -==> Parameters: 3(String), oa_notify_type(String)
2019-03-27 09:35:14 -<==      Total: 1
2019-03-27 09:35:14 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE value = ? and type = ? order by id desc 
2019-03-27 09:35:14 -==> Parameters: 3(String), oa_notify_type(String)
2019-03-27 09:35:14 -<==      Total: 1
2019-03-27 09:35:14 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE value = ? and type = ? order by id desc 
2019-03-27 09:35:14 -==> Parameters: 3(String), oa_notify_type(String)
2019-03-27 09:35:14 -<==      Total: 1
2019-03-27 09:35:14 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE value = ? and type = ? order by id desc 
2019-03-27 09:35:14 -==> Parameters: 3(String), oa_notify_type(String)
2019-03-27 09:35:14 -<==      Total: 1
2019-03-27 09:35:14 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE value = ? and type = ? order by id desc 
2019-03-27 09:35:14 -==> Parameters: 3(String), oa_notify_type(String)
2019-03-27 09:35:14 -<==      Total: 1
2019-03-27 09:35:14 -==>  Preparing: select count(*) from oa_notify 
2019-03-27 09:35:14 -==> Parameters: 
2019-03-27 09:35:14 -<==      Total: 1
2019-03-27 09:35:14 -耗时 : 147
2019-03-27 09:35:14 -返回值 : com.bootdo.common.utils.PageUtils@791002b4
2019-03-27 09:35:23 -请求地址 : http://localhost:8081/system/sysDept
2019-03-27 09:35:23 -HTTP METHOD : GET
2019-03-27 09:35:23 -CLASS_METHOD : com.bootdo.system.controller.DeptController.dept
2019-03-27 09:35:23 -参数 : []
2019-03-27 09:35:23 -耗时 : 1
2019-03-27 09:35:23 -返回值 : system/dept/dept
2019-03-27 09:35:23 -请求地址 : http://localhost:8081/system/sysDept/list
2019-03-27 09:35:23 -HTTP METHOD : GET
2019-03-27 09:35:23 -CLASS_METHOD : com.bootdo.system.controller.DeptController.list
2019-03-27 09:35:23 -参数 : []
2019-03-27 09:35:23 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-27 09:35:23 -==> Parameters: 
2019-03-27 09:35:23 -<==      Total: 3
2019-03-27 09:35:23 -耗时 : 5
2019-03-27 09:35:23 -返回值 : [DeptDO{deptId=3, parentId=1, name='牙星', orderNum=2, delFlag=1}, DeptDO{deptId=2, parentId=1, name='五九', orderNum=1, delFlag=1}, DeptDO{deptId=1, parentId=0, name='总公司', orderNum=0, delFlag=1}]
2019-03-27 09:38:44 -请求地址 : http://localhost:8081/sys/user/personal
2019-03-27 09:38:44 -HTTP METHOD : GET
2019-03-27 09:38:44 -CLASS_METHOD : com.bootdo.system.controller.UserController.personal
2019-03-27 09:38:44 -参数 : [{}]
2019-03-27 09:38:44 -==>  Preparing: select role_id from sys_user_role where user_id=? 
2019-03-27 09:38:44 -==> Parameters: 1(Long)
2019-03-27 09:38:44 -<==      Total: 1
2019-03-27 09:38:44 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user where user_id = ? 
2019-03-27 09:38:44 -==> Parameters: 1(Long)
2019-03-27 09:38:44 -<==      Total: 1
2019-03-27 09:38:44 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept where dept_id = ? 
2019-03-27 09:38:44 -==> Parameters: 1(Long)
2019-03-27 09:38:44 -<==      Total: 1
2019-03-27 09:38:44 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 09:38:44 -==> Parameters: hobby(String)
2019-03-27 09:38:44 -<==      Total: 2
2019-03-27 09:38:44 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 09:38:44 -==> Parameters: sex(String)
2019-03-27 09:38:44 -<==      Total: 2
2019-03-27 09:38:44 -耗时 : 65
2019-03-27 09:38:44 -返回值 : system/user/personal
2019-03-27 09:44:44 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-27 09:44:44 -==> Parameters: 1(Long)
2019-03-27 09:44:44 -<==      Total: 90
2019-03-27 09:44:44 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-27 09:44:44 -HTTP METHOD : GET
2019-03-27 09:44:44 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-27 09:44:44 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=2}, com.bootdo.elec.domain.ElecDO@326c6e12]
2019-03-27 09:44:44 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `elec_sum` < 0 order by id asc limit ?, ? 
2019-03-27 09:44:44 -==> Parameters: 0(Integer), 10(Integer)
2019-03-27 09:44:44 -<==      Total: 2
2019-03-27 09:44:44 -==>  Preparing: select count(*) from elec WHERE `elec_sum` < 0 
2019-03-27 09:44:44 -==> Parameters: 
2019-03-27 09:44:44 -<==      Total: 1
2019-03-27 09:44:44 -耗时 : 12
2019-03-27 09:44:44 -返回值 : com.bootdo.common.utils.PageUtils@1976cc69
2019-03-27 09:48:29 -请求地址 : http://localhost:8081/
2019-03-27 09:48:29 -HTTP METHOD : GET
2019-03-27 09:48:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2019-03-27 09:48:29 -参数 : [{}]
2019-03-27 09:48:29 -耗时 : 0
2019-03-27 09:48:29 -返回值 : redirect:/index
2019-03-27 09:48:29 -请求地址 : http://localhost:8081/login;JSESSIONID=d8842de7-d95d-4d4d-9baa-e84934f3cbac
2019-03-27 09:48:29 -HTTP METHOD : GET
2019-03-27 09:48:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-27 09:48:29 -参数 : [{}]
2019-03-27 09:48:29 -耗时 : 0
2019-03-27 09:48:29 -返回值 : login
2019-03-27 09:48:30 -请求地址 : http://localhost:8081/getVerify
2019-03-27 09:48:30 -HTTP METHOD : GET
2019-03-27 09:48:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-27 09:48:30 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@68d1abeb, org.apache.shiro.web.servlet.ShiroHttpServletResponse@3137e7db]
2019-03-27 09:48:30 -0577
2019-03-27 09:48:30 -耗时 : 48
2019-03-27 09:48:30 -返回值 : null
2019-03-27 09:48:51 -Validating all active sessions...
2019-03-27 09:48:51 -Finished session validation.  No sessions were stopped.
2019-03-27 09:49:04 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 3, active threads = 0, queued tasks = 0, completed tasks = 24], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 4], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 1, completed tasks = 820]
2019-03-27 09:49:12 -请求地址 : http://localhost:8081/login
2019-03-27 09:49:12 -HTTP METHOD : POST
2019-03-27 09:49:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-27 09:49:12 -参数 : [admin, 111111, 0677, org.apache.shiro.web.servlet.ShiroHttpServletRequest@4768519d]
2019-03-27 09:49:12 -耗时 : 0
2019-03-27 09:49:12 -返回值 : {msg=请输入正确的验证码, code=500}
2019-03-27 09:49:12 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-27 09:49:12 -==> Parameters: -1(Long), 获取用户信息为空(String), 登录(String), 4(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-27 09:49:12.513(Timestamp)
2019-03-27 09:49:12 -<==    Updates: 1
2019-03-27 09:49:14 -请求地址 : http://localhost:8081/getVerify
2019-03-27 09:49:14 -HTTP METHOD : GET
2019-03-27 09:49:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-27 09:49:14 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@46c69ca, org.apache.shiro.web.servlet.ShiroHttpServletResponse@2864ce54]
2019-03-27 09:49:14 -3684
2019-03-27 09:49:14 -耗时 : 14
2019-03-27 09:49:14 -返回值 : null
2019-03-27 09:49:20 -请求地址 : http://localhost:8081/login
2019-03-27 09:49:20 -HTTP METHOD : POST
2019-03-27 09:49:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-27 09:49:21 -参数 : [admin, 111111, 3684, org.apache.shiro.web.servlet.ShiroHttpServletRequest@1cf41af7]
2019-03-27 09:49:21 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-27 09:49:21 -==> Parameters: admin(String)
2019-03-27 09:49:21 -<==      Total: 1
2019-03-27 09:49:21 -耗时 : 20
2019-03-27 09:49:21 -返回值 : {msg=操作成功, code=0}
2019-03-27 09:49:21 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-27 09:49:21 -==> Parameters: 1(Long), admin(String), 登录(String), 20(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-27 09:49:21.018(Timestamp)
2019-03-27 09:49:21 -请求地址 : http://localhost:8081/index
2019-03-27 09:49:21 -HTTP METHOD : GET
2019-03-27 09:49:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-27 09:49:21 -参数 : [{}]
2019-03-27 09:49:21 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-27 09:49:21 -==> Parameters: 1(Long)
2019-03-27 09:49:21 -<==    Updates: 1
2019-03-27 09:49:21 -<==      Total: 46
2019-03-27 09:49:21 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-27 09:49:21 -==> Parameters: 138(Long)
2019-03-27 09:49:21 -<==      Total: 1
2019-03-27 09:49:21 -耗时 : 347
2019-03-27 09:49:21 -返回值 : index_v1
2019-03-27 09:49:21 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-27 09:49:21 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 351(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-27 09:49:21.397(Timestamp)
2019-03-27 09:49:21 -<==    Updates: 1
2019-03-27 09:49:21 -请求地址 : http://localhost:8081/main
2019-03-27 09:49:21 -HTTP METHOD : GET
2019-03-27 09:49:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-27 09:49:21 -参数 : []
2019-03-27 09:49:21 -耗时 : 0
2019-03-27 09:49:21 -返回值 : main
2019-03-27 09:49:21 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-27 09:49:21 -HTTP METHOD : GET
2019-03-27 09:49:21 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-27 09:49:21 -参数 : []
2019-03-27 09:49:21 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-27 09:49:21 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-27 09:49:21 -请求地址 : http://localhost:8081/main
2019-03-27 09:49:21 -HTTP METHOD : GET
2019-03-27 09:49:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-27 09:49:21 -参数 : []
2019-03-27 09:49:21 -耗时 : 0
2019-03-27 09:49:21 -返回值 : main
2019-03-27 09:49:21 -<==      Total: 0
2019-03-27 09:49:21 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-27 09:49:21 -==> Parameters: 1(Long), 0(String)
2019-03-27 09:49:21 -<==      Total: 1
2019-03-27 09:49:21 -耗时 : 60
2019-03-27 09:49:21 -返回值 : com.bootdo.common.utils.PageUtils@cea1dd1
2019-03-27 09:49:31 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-27 09:49:31 -==> Parameters: 1(Long)
2019-03-27 09:49:31 -<==      Total: 90
2019-03-27 09:49:31 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-03-27 09:49:31 -HTTP METHOD : GET
2019-03-27 09:49:31 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-03-27 09:49:31 -参数 : []
2019-03-27 09:49:31 -耗时 : 0
2019-03-27 09:49:31 -返回值 : /moneyList/moneyList
2019-03-27 09:49:31 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-27 09:49:31 -HTTP METHOD : GET
2019-03-27 09:49:31 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-27 09:49:31 -参数 : []
2019-03-27 09:49:31 -耗时 : 0
2019-03-27 09:49:31 -返回值 : /moneyLog/elecLog/elecLog
2019-03-27 09:49:32 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-27 09:49:32 -HTTP METHOD : GET
2019-03-27 09:49:32 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 09:49:32 -参数 : [userType]
2019-03-27 09:49:32 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 09:49:32 -==> Parameters: userType(String)
2019-03-27 09:49:32 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-27 09:49:32 -HTTP METHOD : GET
2019-03-27 09:49:32 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-27 09:49:32 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-27 09:49:32 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-27 09:49:32 -==> Parameters: 0(Integer), 10(Integer)
2019-03-27 09:49:32 -<==      Total: 2
2019-03-27 09:49:32 -耗时 : 28
2019-03-27 09:49:32 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 09:49:32 -<==      Total: 6
2019-03-27 09:49:32 -==>  Preparing: select count(*) from elec_log 
2019-03-27 09:49:32 -==> Parameters: 
2019-03-27 09:49:32 -<==      Total: 1
2019-03-27 09:49:32 -耗时 : 56
2019-03-27 09:49:32 -返回值 : com.bootdo.common.utils.PageUtils@70d5e5dd
2019-03-27 09:49:51 -请求地址 : http://localhost:8081/charts/countDD
2019-03-27 09:49:51 -HTTP METHOD : GET
2019-03-27 09:49:51 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-03-27 09:49:51 -参数 : []
2019-03-27 09:49:51 -耗时 : 0
2019-03-27 09:49:51 -返回值 : charts/countDD
2019-03-27 09:49:51 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-27 09:49:51 -HTTP METHOD : GET
2019-03-27 09:49:51 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 09:49:51 -参数 : [userType]
2019-03-27 09:49:51 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 09:49:51 -==> Parameters: userType(String)
2019-03-27 09:49:51 -<==      Total: 2
2019-03-27 09:49:51 -耗时 : 4
2019-03-27 09:49:51 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 09:49:53 -请求地址 : http://localhost:8081/charts/countMM
2019-03-27 09:49:53 -HTTP METHOD : GET
2019-03-27 09:49:53 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-03-27 09:49:53 -参数 : []
2019-03-27 09:49:53 -耗时 : 4
2019-03-27 09:49:53 -返回值 : charts/countMM
2019-03-27 09:49:57 -请求地址 : http://localhost:8081/charts/countYY
2019-03-27 09:49:57 -HTTP METHOD : GET
2019-03-27 09:49:57 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.countYY
2019-03-27 09:49:57 -参数 : []
2019-03-27 09:49:57 -耗时 : 3
2019-03-27 09:49:57 -返回值 : charts/countYY
2019-03-27 09:49:58 -请求地址 : http://localhost:8081/charts/countOwe
2019-03-27 09:49:58 -HTTP METHOD : GET
2019-03-27 09:49:58 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.countOwe
2019-03-27 09:49:58 -参数 : []
2019-03-27 09:49:58 -耗时 : 6
2019-03-27 09:49:58 -返回值 : charts/countOwe
2019-03-27 09:49:58 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-27 09:49:58 -HTTP METHOD : GET
2019-03-27 09:49:58 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 09:49:58 -参数 : [userType]
2019-03-27 09:49:58 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 09:49:58 -==> Parameters: userType(String)
2019-03-27 09:49:58 -<==      Total: 2
2019-03-27 09:49:58 -耗时 : 4
2019-03-27 09:49:58 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 09:50:29 -请求地址 : http://localhost:8081/sys/role
2019-03-27 09:50:29 -HTTP METHOD : GET
2019-03-27 09:50:29 -CLASS_METHOD : com.bootdo.system.controller.RoleController.role
2019-03-27 09:50:29 -参数 : []
2019-03-27 09:50:29 -耗时 : 4
2019-03-27 09:50:29 -返回值 : system/role/role
2019-03-27 09:50:30 -请求地址 : http://localhost:8081/sys/role/list
2019-03-27 09:50:30 -HTTP METHOD : GET
2019-03-27 09:50:30 -CLASS_METHOD : com.bootdo.system.controller.RoleController.list
2019-03-27 09:50:30 -参数 : []
2019-03-27 09:50:30 -==>  Preparing: select `role_id`,`role_name`,`role_sign`,`remark`,`user_id_create`,`gmt_create`,`gmt_modified` from sys_role order by role_id desc 
2019-03-27 09:50:30 -==> Parameters: 
2019-03-27 09:50:30 -<==      Total: 10
2019-03-27 09:50:30 -耗时 : 20
2019-03-27 09:50:30 -返回值 : [RoleDO{roleId=10, roleName='录入人员(牙星)', roleSign='null', remark='牙星电表上传权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=9, roleName='录入人员(五九)', roleSign='null', remark='五九电表上传权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=8, roleName='HR人员(牙星)', roleSign='null', remark='牙星工资代扣权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=7, roleName='HR人员(五九)', roleSign='null', remark='五九工资代扣权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=6, roleName='收费人员(牙星)', roleSign='null', remark='五九收费权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=5, roleName='收费人员(五九)', roleSign='null', remark='五九收费权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=4, roleName='收费主管(牙星)', roleSign='null', remark='牙星缴费所有权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=3, roleName='收费主管(五九)', roleSign='null', remark='五九缴费所有权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=2, roleName='总公司领导', roleSign='null', remark='总公司领导', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=1, roleName='超级用户角色', roleSign='admin', remark='拥有最高权限', userIdCreate=2, gmtCreate=2017-08-12 00:43:52.0, gmtModified=2017-08-12 19:14:59.0, menuIds=null}]
2019-03-27 09:50:42 -请求地址 : http://localhost:8081/charts/countRun
2019-03-27 09:50:42 -HTTP METHOD : GET
2019-03-27 09:50:42 -CLASS_METHOD : com.bootdo.charts.controller.countRunController.countRun
2019-03-27 09:50:42 -参数 : []
2019-03-27 09:50:42 -耗时 : 4
2019-03-27 09:50:42 -返回值 : charts/countRun
2019-03-27 10:19:04 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 3 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(3)-CONNECTED(3)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 33], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 5], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 1220]
2019-03-27 10:49:04 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 3 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(3)-CONNECTED(3)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 33], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 5], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 1653]
2019-03-27 11:02:20 -Validating all active sessions...
2019-03-27 11:02:20 -Finished session validation.  [1] sessions were stopped.
2019-03-27 11:19:04 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 3 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(3)-CONNECTED(3)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 36], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 6], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 1, completed tasks = 2061]
2019-03-27 11:38:48 -Starting BootdoApplication on ZJZL-20180906VX with PID 12120 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-27 11:38:48 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-27 11:38:48 -The following profiles are active: dev
2019-03-27 11:38:48 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Wed Mar 27 11:38:48 CST 2019]; root of context hierarchy
2019-03-27 11:38:51 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-27 11:38:54 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$daf57eb1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-27 11:38:54 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$cd4ead58] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-27 11:38:58 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-27 11:38:58 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-27 11:38:58 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-27 11:38:58 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-27 11:38:58 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-27 11:38:58 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-27 11:38:58 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-27 11:38:58 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-27 11:38:58 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-27 11:39:00 -Tomcat initialized with port(s): 8081 (http)
2019-03-27 11:39:00 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-27 11:39:00 -Starting service [Tomcat]
2019-03-27 11:39:00 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-27 11:39:00 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-27 11:39:00 -Initializing Spring embedded WebApplicationContext
2019-03-27 11:39:00 -Root WebApplicationContext: initialization completed in 11738 ms
2019-03-27 11:39:01 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-27 11:39:01 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-27 11:39:01 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-27 11:39:01 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-27 11:39:01 -Filter xssFilter was not registered (disabled)
2019-03-27 11:39:01 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-27 11:39:01 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-27 11:39:01 -Servlet statViewServlet mapped to [/druid/*]
2019-03-27 11:39:01 -Servlet dispatcherServlet mapped to [/]
2019-03-27 11:39:05 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Wed Mar 27 11:38:48 CST 2019]; root of context hierarchy
2019-03-27 11:39:06 -Using default implementation for ThreadExecutor
2019-03-27 11:39:06 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-27 11:39:06 -Quartz Scheduler v.2.2.1 created.
2019-03-27 11:39:06 -RAMJobStore initialized.
2019-03-27 11:39:06 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-27 11:39:06 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-27 11:39:06 -Quartz scheduler version: 2.2.1
2019-03-27 11:39:06 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@19ae36f4
2019-03-27 11:39:07 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-27 11:39:07 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-27 11:39:10 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-27 11:39:10 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-03-27 11:39:10 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-27 11:39:10 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-27 11:39:10 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-27 11:39:10 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-27 11:39:10 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-27 11:39:10 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-27 11:39:10 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-27 11:39:10 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-27 11:39:10 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-27 11:39:10 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 11:39:10 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-27 11:39:10 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-27 11:39:10 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 11:39:10 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-27 11:39:10 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-27 11:39:10 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-27 11:39:10 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-27 11:39:10 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-27 11:39:10 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-27 11:39:10 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-27 11:39:10 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 11:39:10 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-27 11:39:10 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-27 11:39:10 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 11:39:10 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-27 11:39:10 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-27 11:39:10 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 11:39:10 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-27 11:39:10 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-27 11:39:10 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-27 11:39:10 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-27 11:39:10 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-27 11:39:10 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-27 11:39:10 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-27 11:39:10 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-27 11:39:10 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-27 11:39:10 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 11:39:10 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-27 11:39:10 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-27 11:39:10 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 11:39:10 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-27 11:39:10 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-27 11:39:11 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-27 11:39:11 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-27 11:39:11 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 11:39:11 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-27 11:39:11 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-03-27 11:39:11 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-27 11:39:11 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-27 11:39:11 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-27 11:39:11 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-27 11:39:11 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-27 11:39:11 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-27 11:39:11 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-27 11:39:11 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-27 11:39:11 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-27 11:39:11 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-27 11:39:11 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-27 11:39:11 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 11:39:11 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-27 11:39:11 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-03-27 11:39:11 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-27 11:39:11 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-27 11:39:11 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-27 11:39:11 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-27 11:39:11 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-27 11:39:11 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 11:39:11 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-03-27 11:39:11 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-27 11:39:11 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 11:39:11 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-27 11:39:11 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-27 11:39:11 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-27 11:39:11 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-27 11:39:11 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-27 11:39:11 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-27 11:39:11 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 11:39:11 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-27 11:39:11 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-27 11:39:11 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-27 11:39:11 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-27 11:39:11 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-27 11:39:11 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-27 11:39:11 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-27 11:39:11 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-27 11:39:11 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-27 11:39:11 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-27 11:39:11 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 11:39:11 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-27 11:39:11 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-27 11:39:11 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 11:39:11 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-27 11:39:11 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-03-27 11:39:11 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-03-27 11:39:11 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-27 11:39:11 -Mapped "{[/moneyList/moneyList/UserList],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-27 11:39:11 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-27 11:39:11 -Mapped "{[/moneyList/moneyList/LikeName],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.LikeName(org.springframework.ui.Model)
2019-03-27 11:39:11 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-27 11:39:11 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-27 11:39:11 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-27 11:39:11 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-27 11:39:11 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 11:39:11 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-27 11:39:11 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-27 11:39:11 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-27 11:39:11 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 11:39:11 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-27 11:39:11 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-27 11:39:11 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-27 11:39:11 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-27 11:39:11 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 11:39:11 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-27 11:39:11 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-27 11:39:11 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-27 11:39:11 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 11:39:11 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-27 11:39:11 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-27 11:39:11 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-27 11:39:11 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-27 11:39:11 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 11:39:11 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-27 11:39:11 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-27 11:39:11 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-27 11:39:11 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 11:39:11 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-27 11:39:11 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-27 11:39:11 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-27 11:39:11 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-27 11:39:11 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-27 11:39:11 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 11:39:11 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-27 11:39:11 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-27 11:39:11 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-27 11:39:11 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 11:39:11 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-27 11:39:11 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 11:39:11 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-27 11:39:11 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-27 11:39:11 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-27 11:39:11 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-27 11:39:11 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 11:39:11 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-27 11:39:11 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-27 11:39:11 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-27 11:39:11 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 11:39:11 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 11:39:11 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-27 11:39:11 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-27 11:39:11 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-27 11:39:11 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-27 11:39:11 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-27 11:39:11 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-27 11:39:11 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-27 11:39:11 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-27 11:39:11 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-27 11:39:11 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 11:39:11 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-27 11:39:11 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-27 11:39:11 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-27 11:39:11 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-27 11:39:11 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-27 11:39:11 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-27 11:39:11 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-27 11:39:11 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-27 11:39:11 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-27 11:39:11 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-27 11:39:11 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 11:39:11 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-27 11:39:11 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-27 11:39:11 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-27 11:39:11 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-27 11:39:11 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-27 11:39:11 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-27 11:39:11 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-27 11:39:11 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-27 11:39:11 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-27 11:39:11 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-27 11:39:11 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-27 11:39:11 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-27 11:39:11 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 11:39:11 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-27 11:39:11 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-27 11:39:11 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-27 11:39:11 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-27 11:39:11 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 11:39:11 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-27 11:39:11 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-27 11:39:11 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-27 11:39:11 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 11:39:11 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-27 11:39:11 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-27 11:39:11 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-27 11:39:11 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-27 11:39:11 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-27 11:39:11 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-27 11:39:11 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-27 11:39:11 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-27 11:39:11 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-27 11:39:11 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-27 11:39:11 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-27 11:39:11 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-27 11:39:11 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-27 11:39:11 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-27 11:39:11 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-27 11:39:11 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-27 11:39:11 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-27 11:39:11 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 11:39:11 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-27 11:39:11 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-27 11:39:11 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 11:39:11 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-27 11:39:11 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 11:39:11 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-27 11:39:11 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-27 11:39:11 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-27 11:39:11 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-27 11:39:11 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-27 11:39:11 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-27 11:39:11 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 11:39:11 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-27 11:39:11 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-27 11:39:11 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 11:39:11 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-03-27 11:39:11 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-27 11:39:11 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-03-27 11:39:11 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-27 11:39:11 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-27 11:39:11 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-27 11:39:11 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-27 11:39:11 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-27 11:39:12 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-27 11:39:12 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-27 11:39:12 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-27 11:39:13 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-27 11:39:13 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Wed Mar 27 11:38:48 CST 2019]; root of context hierarchy
2019-03-27 11:39:14 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-27 11:39:14 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-27 11:39:14 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-27 11:39:14 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-27 11:39:14 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-27 11:39:18 -Registering beans for JMX exposure on startup
2019-03-27 11:39:18 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-27 11:39:18 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-27 11:39:18 -Starting beans in phase 2147483647
2019-03-27 11:39:18 -Context refreshed
2019-03-27 11:39:18 -Found 1 custom documentation plugin(s)
2019-03-27 11:39:18 -Scanning for api listing references
2019-03-27 11:39:19 -Generating unique operation named: removeUsingPOST_1
2019-03-27 11:39:19 -Generating unique operation named: addUsingGET_1
2019-03-27 11:39:19 -Generating unique operation named: editUsingGET_1
2019-03-27 11:39:19 -Generating unique operation named: listUsingGET_1
2019-03-27 11:39:19 -Generating unique operation named: removeUsingPOST_2
2019-03-27 11:39:19 -Generating unique operation named: removeUsingPOST_3
2019-03-27 11:39:19 -Generating unique operation named: saveUsingPOST_1
2019-03-27 11:39:19 -Generating unique operation named: updateUsingGET_1
2019-03-27 11:39:19 -Generating unique operation named: updateUsingHEAD_1
2019-03-27 11:39:19 -Generating unique operation named: updateUsingPOST_1
2019-03-27 11:39:19 -Generating unique operation named: updateUsingPUT_1
2019-03-27 11:39:19 -Generating unique operation named: updateUsingPATCH_1
2019-03-27 11:39:19 -Generating unique operation named: updateUsingDELETE_1
2019-03-27 11:39:19 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-27 11:39:19 -Generating unique operation named: updateUsingTRACE_1
2019-03-27 11:39:19 -Generating unique operation named: addUsingGET_2
2019-03-27 11:39:19 -Generating unique operation named: editUsingGET_2
2019-03-27 11:39:19 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-27 11:39:19 -Generating unique operation named: listUsingGET_2
2019-03-27 11:39:19 -Generating unique operation named: removeUsingPOST_4
2019-03-27 11:39:19 -Generating unique operation named: removeUsingPOST_5
2019-03-27 11:39:19 -Generating unique operation named: saveUsingPOST_2
2019-03-27 11:39:19 -Generating unique operation named: updateUsingPOST_2
2019-03-27 11:39:19 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-27 11:39:19 -Generating unique operation named: addUsingGET_3
2019-03-27 11:39:19 -Generating unique operation named: editUsingGET_3
2019-03-27 11:39:19 -Generating unique operation named: listUsingGET_3
2019-03-27 11:39:19 -Generating unique operation named: removeUsingPOST_6
2019-03-27 11:39:19 -Generating unique operation named: removeUsingPOST_7
2019-03-27 11:39:19 -Generating unique operation named: saveUsingPOST_3
2019-03-27 11:39:19 -Generating unique operation named: updateUsingGET_2
2019-03-27 11:39:19 -Generating unique operation named: updateUsingHEAD_2
2019-03-27 11:39:19 -Generating unique operation named: updateUsingPOST_3
2019-03-27 11:39:19 -Generating unique operation named: updateUsingPUT_2
2019-03-27 11:39:19 -Generating unique operation named: updateUsingPATCH_2
2019-03-27 11:39:19 -Generating unique operation named: updateUsingDELETE_2
2019-03-27 11:39:19 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-27 11:39:19 -Generating unique operation named: updateUsingTRACE_2
2019-03-27 11:39:19 -Generating unique operation named: addUsingGET_4
2019-03-27 11:39:19 -Generating unique operation named: editUsingGET_4
2019-03-27 11:39:19 -Generating unique operation named: listUsingGET_4
2019-03-27 11:39:19 -Generating unique operation named: removeUsingPOST_8
2019-03-27 11:39:19 -Generating unique operation named: removeUsingPOST_9
2019-03-27 11:39:19 -Generating unique operation named: saveUsingPOST_4
2019-03-27 11:39:19 -Generating unique operation named: updateUsingGET_3
2019-03-27 11:39:19 -Generating unique operation named: updateUsingHEAD_3
2019-03-27 11:39:19 -Generating unique operation named: updateUsingPOST_4
2019-03-27 11:39:19 -Generating unique operation named: updateUsingPUT_3
2019-03-27 11:39:19 -Generating unique operation named: updateUsingPATCH_3
2019-03-27 11:39:19 -Generating unique operation named: updateUsingDELETE_3
2019-03-27 11:39:19 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-27 11:39:19 -Generating unique operation named: updateUsingTRACE_3
2019-03-27 11:39:19 -Generating unique operation named: ElecUsingGET_1
2019-03-27 11:39:19 -Generating unique operation named: addUsingGET_5
2019-03-27 11:39:19 -Generating unique operation named: editUsingGET_5
2019-03-27 11:39:19 -Generating unique operation named: listUsingGET_5
2019-03-27 11:39:19 -Generating unique operation named: removeUsingPOST_10
2019-03-27 11:39:19 -Generating unique operation named: removeUsingPOST_11
2019-03-27 11:39:19 -Generating unique operation named: saveUsingPOST_5
2019-03-27 11:39:19 -Generating unique operation named: updateUsingGET_4
2019-03-27 11:39:19 -Generating unique operation named: updateUsingHEAD_4
2019-03-27 11:39:19 -Generating unique operation named: updateUsingPOST_5
2019-03-27 11:39:19 -Generating unique operation named: updateUsingPUT_4
2019-03-27 11:39:19 -Generating unique operation named: updateUsingPATCH_4
2019-03-27 11:39:19 -Generating unique operation named: updateUsingDELETE_4
2019-03-27 11:39:19 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-27 11:39:19 -Generating unique operation named: updateUsingTRACE_4
2019-03-27 11:39:19 -Generating unique operation named: editUsingGET_6
2019-03-27 11:39:19 -Generating unique operation named: listUsingGET_6
2019-03-27 11:39:19 -Generating unique operation named: updateUsingPOST_6
2019-03-27 11:39:19 -Generating unique operation named: addUsingGET_6
2019-03-27 11:39:19 -Generating unique operation named: editUsingGET_7
2019-03-27 11:39:19 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-27 11:39:19 -Generating unique operation named: listUsingGET_7
2019-03-27 11:39:19 -Generating unique operation named: removeUsingPOST_12
2019-03-27 11:39:19 -Generating unique operation named: removeUsingPOST_13
2019-03-27 11:39:19 -Generating unique operation named: saveUsingPOST_6
2019-03-27 11:39:19 -Generating unique operation named: updateUsingGET_5
2019-03-27 11:39:19 -Generating unique operation named: updateUsingHEAD_5
2019-03-27 11:39:19 -Generating unique operation named: updateUsingPOST_7
2019-03-27 11:39:19 -Generating unique operation named: updateUsingPUT_5
2019-03-27 11:39:19 -Generating unique operation named: updateUsingPATCH_5
2019-03-27 11:39:19 -Generating unique operation named: updateUsingDELETE_5
2019-03-27 11:39:19 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-27 11:39:19 -Generating unique operation named: updateUsingTRACE_5
2019-03-27 11:39:19 -Generating unique operation named: exprotExcelUsingGET_4
2019-03-27 11:39:19 -Generating unique operation named: addUsingGET_7
2019-03-27 11:39:19 -Generating unique operation named: editUsingGET_8
2019-03-27 11:39:19 -Generating unique operation named: listUsingGET_8
2019-03-27 11:39:19 -Generating unique operation named: removeUsingPOST_14
2019-03-27 11:39:19 -Generating unique operation named: removeUsingPOST_15
2019-03-27 11:39:20 -Generating unique operation named: saveUsingPOST_7
2019-03-27 11:39:20 -Generating unique operation named: updateUsingGET_6
2019-03-27 11:39:20 -Generating unique operation named: updateUsingHEAD_6
2019-03-27 11:39:20 -Generating unique operation named: updateUsingPOST_8
2019-03-27 11:39:20 -Generating unique operation named: updateUsingPUT_6
2019-03-27 11:39:20 -Generating unique operation named: updateUsingPATCH_6
2019-03-27 11:39:20 -Generating unique operation named: updateUsingDELETE_6
2019-03-27 11:39:20 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-27 11:39:20 -Generating unique operation named: updateUsingTRACE_6
2019-03-27 11:39:20 -Generating unique operation named: addUsingGET_8
2019-03-27 11:39:20 -Generating unique operation named: editUsingGET_9
2019-03-27 11:39:20 -Generating unique operation named: listUsingGET_9
2019-03-27 11:39:20 -Generating unique operation named: removeUsingPOST_16
2019-03-27 11:39:20 -Generating unique operation named: removeUsingPOST_17
2019-03-27 11:39:20 -Generating unique operation named: saveUsingPOST_8
2019-03-27 11:39:20 -Generating unique operation named: updateUsingGET_7
2019-03-27 11:39:20 -Generating unique operation named: updateUsingHEAD_7
2019-03-27 11:39:20 -Generating unique operation named: updateUsingPOST_9
2019-03-27 11:39:20 -Generating unique operation named: updateUsingPUT_7
2019-03-27 11:39:20 -Generating unique operation named: updateUsingPATCH_7
2019-03-27 11:39:20 -Generating unique operation named: updateUsingDELETE_7
2019-03-27 11:39:20 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-27 11:39:20 -Generating unique operation named: updateUsingTRACE_7
2019-03-27 11:39:20 -Generating unique operation named: addUsingGET_9
2019-03-27 11:39:20 -Generating unique operation named: editUsingGET_10
2019-03-27 11:39:20 -Generating unique operation named: infoUsingGET_1
2019-03-27 11:39:20 -Generating unique operation named: infoUsingHEAD_1
2019-03-27 11:39:20 -Generating unique operation named: infoUsingPOST_1
2019-03-27 11:39:20 -Generating unique operation named: infoUsingPUT_1
2019-03-27 11:39:20 -Generating unique operation named: infoUsingPATCH_1
2019-03-27 11:39:20 -Generating unique operation named: infoUsingDELETE_1
2019-03-27 11:39:20 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-27 11:39:20 -Generating unique operation named: infoUsingTRACE_1
2019-03-27 11:39:20 -Generating unique operation named: listUsingGET_10
2019-03-27 11:39:20 -Generating unique operation named: removeUsingPOST_18
2019-03-27 11:39:20 -Generating unique operation named: removeUsingPOST_19
2019-03-27 11:39:20 -Generating unique operation named: saveUsingPOST_9
2019-03-27 11:39:20 -Generating unique operation named: updateUsingPOST_10
2019-03-27 11:39:20 -Generating unique operation named: listUsingGET_11
2019-03-27 11:39:20 -Generating unique operation named: removeUsingPOST_20
2019-03-27 11:39:20 -Generating unique operation named: welcomeUsingGET_1
2019-03-27 11:39:20 -Generating unique operation named: addUsingGET_10
2019-03-27 11:39:20 -Generating unique operation named: editUsingGET_11
2019-03-27 11:39:20 -Generating unique operation named: listUsingGET_12
2019-03-27 11:39:20 -Generating unique operation named: removeUsingPOST_21
2019-03-27 11:39:20 -Generating unique operation named: saveUsingPOST_10
2019-03-27 11:39:20 -Generating unique operation named: treeUsingGET_1
2019-03-27 11:39:20 -Generating unique operation named: treeUsingGET_2
2019-03-27 11:39:20 -Generating unique operation named: updateUsingPOST_11
2019-03-27 11:39:20 -Generating unique operation named: addUsingGET_11
2019-03-27 11:39:20 -Generating unique operation named: editUsingGET_12
2019-03-27 11:39:20 -Generating unique operation named: listUsingGET_13
2019-03-27 11:39:20 -Generating unique operation named: removeUsingPOST_22
2019-03-27 11:39:20 -Generating unique operation named: removeUsingPOST_23
2019-03-27 11:39:20 -Generating unique operation named: saveUsingPOST_11
2019-03-27 11:39:20 -Generating unique operation named: updateUsingGET_8
2019-03-27 11:39:20 -Generating unique operation named: updateUsingHEAD_8
2019-03-27 11:39:20 -Generating unique operation named: updateUsingPOST_12
2019-03-27 11:39:20 -Generating unique operation named: updateUsingPUT_8
2019-03-27 11:39:20 -Generating unique operation named: updateUsingPATCH_8
2019-03-27 11:39:20 -Generating unique operation named: updateUsingDELETE_8
2019-03-27 11:39:20 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-27 11:39:20 -Generating unique operation named: updateUsingTRACE_8
2019-03-27 11:39:20 -Generating unique operation named: addUsingGET_12
2019-03-27 11:39:20 -Generating unique operation named: editUsingGET_13
2019-03-27 11:39:20 -Generating unique operation named: listUsingGET_14
2019-03-27 11:39:20 -Generating unique operation named: removeUsingPOST_24
2019-03-27 11:39:20 -Generating unique operation named: removeUsingPOST_25
2019-03-27 11:39:20 -Generating unique operation named: saveUsingPOST_12
2019-03-27 11:39:20 -Generating unique operation named: updateUsingGET_9
2019-03-27 11:39:20 -Generating unique operation named: updateUsingHEAD_9
2019-03-27 11:39:20 -Generating unique operation named: updateUsingPOST_13
2019-03-27 11:39:20 -Generating unique operation named: updateUsingPUT_9
2019-03-27 11:39:20 -Generating unique operation named: updateUsingPATCH_9
2019-03-27 11:39:20 -Generating unique operation named: updateUsingDELETE_9
2019-03-27 11:39:20 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-27 11:39:20 -Generating unique operation named: updateUsingTRACE_9
2019-03-27 11:39:20 -Generating unique operation named: addUsingGET_13
2019-03-27 11:39:20 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-27 11:39:20 -Generating unique operation named: editUsingGET_14
2019-03-27 11:39:20 -Generating unique operation named: listUsingGET_15
2019-03-27 11:39:20 -Generating unique operation named: saveUsingPOST_13
2019-03-27 11:39:20 -Generating unique operation named: saveUsingPOST_14
2019-03-27 11:39:20 -Generating unique operation named: updateUsingPOST_14
2019-03-27 11:39:20 -Generating unique operation named: listUsingGET_16
2019-03-27 11:39:20 -Generating unique operation named: listUsingHEAD_1
2019-03-27 11:39:20 -Generating unique operation named: listUsingPOST_1
2019-03-27 11:39:20 -Generating unique operation named: listUsingPUT_1
2019-03-27 11:39:20 -Generating unique operation named: listUsingPATCH_1
2019-03-27 11:39:20 -Generating unique operation named: listUsingDELETE_1
2019-03-27 11:39:20 -Generating unique operation named: listUsingOPTIONS_1
2019-03-27 11:39:20 -Generating unique operation named: listUsingTRACE_1
2019-03-27 11:39:20 -Generating unique operation named: addUsingGET_14
2019-03-27 11:39:20 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-27 11:39:20 -Generating unique operation named: editUsingGET_15
2019-03-27 11:39:21 -Generating unique operation named: listUsingGET_17
2019-03-27 11:39:21 -Generating unique operation named: removeUsingPOST_26
2019-03-27 11:39:21 -Generating unique operation named: saveUsingPOST_15
2019-03-27 11:39:21 -Generating unique operation named: treeUsingGET_3
2019-03-27 11:39:21 -Generating unique operation named: treeViewUsingGET_1
2019-03-27 11:39:21 -Generating unique operation named: updateUsingPOST_15
2019-03-27 11:39:21 -Generating unique operation named: addUsingGET_15
2019-03-27 11:39:21 -Generating unique operation named: editUsingGET_16
2019-03-27 11:39:21 -Generating unique operation named: exprotExcelUsingGET_5
2019-03-27 11:39:21 -Generating unique operation named: listUsingGET_18
2019-03-27 11:39:21 -Generating unique operation named: removeUsingPOST_27
2019-03-27 11:39:21 -Generating unique operation named: removeUsingPOST_28
2019-03-27 11:39:21 -Generating unique operation named: saveUsingPOST_16
2019-03-27 11:39:21 -Generating unique operation named: updateUsingGET_10
2019-03-27 11:39:21 -Generating unique operation named: updateUsingHEAD_10
2019-03-27 11:39:21 -Generating unique operation named: updateUsingPOST_16
2019-03-27 11:39:21 -Generating unique operation named: updateUsingPUT_10
2019-03-27 11:39:21 -Generating unique operation named: updateUsingPATCH_10
2019-03-27 11:39:21 -Generating unique operation named: updateUsingDELETE_10
2019-03-27 11:39:21 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-27 11:39:21 -Generating unique operation named: updateUsingTRACE_10
2019-03-27 11:39:21 -Generating unique operation named: exprotExcelUsingGET_6
2019-03-27 11:39:21 -Generating unique operation named: addUsingGET_16
2019-03-27 11:39:21 -Generating unique operation named: editUsingGET_17
2019-03-27 11:39:21 -Generating unique operation named: listUsingGET_19
2019-03-27 11:39:21 -Generating unique operation named: removeUsingPOST_29
2019-03-27 11:39:21 -Generating unique operation named: removeUsingPOST_30
2019-03-27 11:39:21 -Generating unique operation named: saveUsingPOST_17
2019-03-27 11:39:21 -Generating unique operation named: updateUsingGET_11
2019-03-27 11:39:21 -Generating unique operation named: updateUsingHEAD_11
2019-03-27 11:39:21 -Generating unique operation named: updateUsingPOST_17
2019-03-27 11:39:21 -Generating unique operation named: updateUsingPUT_11
2019-03-27 11:39:21 -Generating unique operation named: updateUsingPATCH_11
2019-03-27 11:39:21 -Generating unique operation named: updateUsingDELETE_11
2019-03-27 11:39:21 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-27 11:39:21 -Generating unique operation named: updateUsingTRACE_11
2019-03-27 11:39:21 -Generating unique operation named: addUsingGET_17
2019-03-27 11:39:21 -Generating unique operation named: editUsingGET_18
2019-03-27 11:39:21 -Generating unique operation named: listUsingGET_20
2019-03-27 11:39:21 -Generating unique operation named: removeUsingPOST_31
2019-03-27 11:39:21 -Generating unique operation named: removeUsingPOST_32
2019-03-27 11:39:21 -Generating unique operation named: saveUsingPOST_18
2019-03-27 11:39:21 -Generating unique operation named: updateUsingGET_12
2019-03-27 11:39:21 -Generating unique operation named: updateUsingHEAD_12
2019-03-27 11:39:21 -Generating unique operation named: updateUsingPOST_18
2019-03-27 11:39:21 -Generating unique operation named: updateUsingPUT_12
2019-03-27 11:39:21 -Generating unique operation named: updateUsingPATCH_12
2019-03-27 11:39:21 -Generating unique operation named: updateUsingDELETE_12
2019-03-27 11:39:21 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-27 11:39:21 -Generating unique operation named: updateUsingTRACE_12
2019-03-27 11:39:21 -Starting Quartz Scheduler now
2019-03-27 11:39:21 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-27 11:39:21 -Starting...
2019-03-27 11:39:21 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-27 11:39:21 -Started.
2019-03-27 11:39:21 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-27 11:39:21 -Using a shared selector for servlet write/read
2019-03-27 11:39:21 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-27 11:39:21 -Started BootdoApplication in 34.515 seconds (JVM running for 35.413)
2019-03-27 11:39:22 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-27 11:39:22 -==> Parameters: 
2019-03-27 11:39:22 -<==      Total: 1
2019-03-27 11:39:58 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-27 11:39:58 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-27 11:39:58 -FrameworkServlet 'dispatcherServlet': initialization completed in 173 ms
2019-03-27 11:39:59 -Enabling session validation scheduler...
2019-03-27 11:39:59 -请求地址 : http://localhost:8081/login;JSESSIONID=c00de7af-65ce-4370-b82f-788adc4e4fe3
2019-03-27 11:39:59 -HTTP METHOD : GET
2019-03-27 11:39:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-27 11:39:59 -参数 : [{}]
2019-03-27 11:39:59 -耗时 : 20
2019-03-27 11:39:59 -返回值 : login
2019-03-27 11:40:02 -请求地址 : http://localhost:8081/getVerify
2019-03-27 11:40:02 -HTTP METHOD : GET
2019-03-27 11:40:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-27 11:40:02 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@1bc79c42, org.apache.shiro.web.servlet.ShiroHttpServletResponse@1500614a]
2019-03-27 11:40:06 -7534
2019-03-27 11:40:06 -耗时 : 3999
2019-03-27 11:40:06 -返回值 : null
2019-03-27 11:40:12 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-03-27 11:40:13 -请求地址 : http://localhost:8081/login
2019-03-27 11:40:13 -HTTP METHOD : POST
2019-03-27 11:40:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-27 11:40:13 -参数 : [admin, 111111, 7534, org.apache.shiro.web.servlet.ShiroHttpServletRequest@566ed48c]
2019-03-27 11:40:13 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-27 11:40:13 -==> Parameters: admin(String)
2019-03-27 11:40:13 -<==      Total: 1
2019-03-27 11:40:13 -耗时 : 189
2019-03-27 11:40:13 -返回值 : {msg=操作成功, code=0}
2019-03-27 11:40:13 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-03-27 11:40:13 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-27 11:40:13 -==> Parameters: 1(Long), admin(String), 登录(String), 189(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-27 11:40:13.638(Timestamp)
2019-03-27 11:40:13 -<==    Updates: 1
2019-03-27 11:40:13 -请求地址 : http://localhost:8081/index
2019-03-27 11:40:13 -HTTP METHOD : GET
2019-03-27 11:40:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-27 11:40:13 -参数 : [{}]
2019-03-27 11:40:14 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-27 11:40:14 -==> Parameters: 1(Long)
2019-03-27 11:40:14 -<==      Total: 46
2019-03-27 11:40:14 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-27 11:40:14 -==> Parameters: 138(Long)
2019-03-27 11:40:14 -<==      Total: 1
2019-03-27 11:40:14 -耗时 : 408
2019-03-27 11:40:14 -返回值 : index_v1
2019-03-27 11:40:14 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-27 11:40:14 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 409(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-27 11:40:14.365(Timestamp)
2019-03-27 11:40:14 -<==    Updates: 1
2019-03-27 11:40:14 -请求地址 : http://localhost:8081/main
2019-03-27 11:40:14 -HTTP METHOD : GET
2019-03-27 11:40:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-27 11:40:14 -参数 : []
2019-03-27 11:40:14 -耗时 : 1
2019-03-27 11:40:14 -返回值 : main
2019-03-27 11:40:17 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-27 11:40:17 -HTTP METHOD : GET
2019-03-27 11:40:17 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-27 11:40:17 -参数 : []
2019-03-27 11:40:17 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-27 11:40:17 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-27 11:40:17 -<==      Total: 0
2019-03-27 11:40:17 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-27 11:40:17 -==> Parameters: 1(Long), 0(String)
2019-03-27 11:40:17 -<==      Total: 1
2019-03-27 11:40:17 -耗时 : 111
2019-03-27 11:40:17 -返回值 : com.bootdo.common.utils.PageUtils@710a70dd
2019-03-27 11:40:17 -请求地址 : http://localhost:8081/main
2019-03-27 11:40:17 -HTTP METHOD : GET
2019-03-27 11:40:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-27 11:40:17 -参数 : []
2019-03-27 11:40:17 -耗时 : 0
2019-03-27 11:40:17 -返回值 : main
2019-03-27 11:40:24 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-27 11:40:24 -==> Parameters: 1(Long)
2019-03-27 11:40:24 -<==      Total: 90
2019-03-27 11:40:24 -请求地址 : http://localhost:8081/elec/elec
2019-03-27 11:40:24 -HTTP METHOD : GET
2019-03-27 11:40:24 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-27 11:40:24 -参数 : []
2019-03-27 11:40:24 -耗时 : 0
2019-03-27 11:40:24 -返回值 : elec/elec/elec
2019-03-27 11:40:26 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-27 11:40:26 -HTTP METHOD : GET
2019-03-27 11:40:26 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 11:40:26 -参数 : [userType]
2019-03-27 11:40:26 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 11:40:26 -==> Parameters: userType(String)
2019-03-27 11:40:26 -<==      Total: 2
2019-03-27 11:40:26 -耗时 : 38
2019-03-27 11:40:26 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 11:40:26 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-27 11:40:26 -HTTP METHOD : GET
2019-03-27 11:40:26 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-27 11:40:26 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@10d5484b]
2019-03-27 11:40:26 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-27 11:40:26 -==> Parameters: 0(Integer), 10(Integer)
2019-03-27 11:40:26 -<==      Total: 10
2019-03-27 11:40:26 -==>  Preparing: select count(*) from elec 
2019-03-27 11:40:26 -==> Parameters: 
2019-03-27 11:40:26 -<==      Total: 1
2019-03-27 11:40:26 -耗时 : 127
2019-03-27 11:40:26 -返回值 : com.bootdo.common.utils.PageUtils@6a705b92
2019-03-27 11:40:31 -请求地址 : http://localhost:8081/elec/elec/edit/1
2019-03-27 11:40:31 -HTTP METHOD : GET
2019-03-27 11:40:31 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.edit
2019-03-27 11:40:31 -参数 : [1, {}]
2019-03-27 11:40:31 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec where id = ? 
2019-03-27 11:40:31 -==> Parameters: 1(Long)
2019-03-27 11:40:31 -<==      Total: 1
2019-03-27 11:40:31 -耗时 : 14
2019-03-27 11:40:31 -返回值 : elec/elec/edit
2019-03-27 11:40:32 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-27 11:40:32 -HTTP METHOD : GET
2019-03-27 11:40:32 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 11:40:32 -参数 : [userType]
2019-03-27 11:40:32 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 11:40:32 -==> Parameters: userType(String)
2019-03-27 11:40:32 -<==      Total: 2
2019-03-27 11:40:32 -耗时 : 8
2019-03-27 11:40:32 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 11:40:32 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-03-27 11:40:32 -HTTP METHOD : GET
2019-03-27 11:40:32 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 11:40:32 -参数 : [elecType]
2019-03-27 11:40:32 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-03-27 11:40:32 -HTTP METHOD : GET
2019-03-27 11:40:32 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 11:40:32 -参数 : [userState]
2019-03-27 11:40:32 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 11:40:32 -==> Parameters: userState(String)
2019-03-27 11:40:32 -<==      Total: 2
2019-03-27 11:40:32 -耗时 : 8
2019-03-27 11:40:32 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 11:40:32 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 11:40:32 -==> Parameters: elecType(String)
2019-03-27 11:40:32 -<==      Total: 2
2019-03-27 11:40:32 -耗时 : 29
2019-03-27 11:40:32 -返回值 : [DictDO{id=139, name='民用电', value='1', type='elecType', description='电量性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='商业电', value='0', type='elecType', description='电量类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 11:40:38 -请求地址 : http://localhost:8081/elec/elec/update
2019-03-27 11:40:38 -HTTP METHOD : POST
2019-03-27 11:40:38 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.update
2019-03-27 11:40:38 -参数 : [com.bootdo.elec.domain.ElecDO@51371774]
2019-03-27 11:40:38 -==>  Preparing: update elec SET `user_id` = ?, `user_name` = ?, `user_type` = ?, `user_org` = ?, `user_tell` = ?, `user_state` = ?, `wages_id` = ?, `elec_type` = ?, `start` = ?, `end` = ?, `hu` = ?, `elec_amount` = ?, `elec_cost` = ?, `elec_sum` = ?, `create_time` = ?, `create_by` = ?, `update_time` = ?, `update_by` = ?, `remark` = ? where id = ? 
2019-03-27 11:40:38 -==> Parameters: 1-0001(String), 李文英(String), B(String), 3(String), 15815564567(String), 0(String), 1001(String), 1(String), 100(String), 250(String), 1(Integer), 100.00(BigDecimal), 100.00(BigDecimal), -100.00(BigDecimal), 2019-02(String), 1(Long), 2019-03-27 11:40:38.544(Timestamp), 1(Long), (String), 1(Long)
2019-03-27 11:40:38 -<==    Updates: 1
2019-03-27 11:40:38 -耗时 : 323
2019-03-27 11:40:38 -返回值 : {msg=操作成功, code=0}
2019-03-27 11:40:38 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-27 11:40:38 -HTTP METHOD : GET
2019-03-27 11:40:38 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-27 11:40:38 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=2}, com.bootdo.elec.domain.ElecDO@3094a92d]
2019-03-27 11:40:38 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `elec_sum` < 0 order by id asc limit ?, ? 
2019-03-27 11:40:38 -==> Parameters: 0(Integer), 10(Integer)
2019-03-27 11:40:38 -<==      Total: 2
2019-03-27 11:40:38 -==>  Preparing: select count(*) from elec WHERE `elec_sum` < 0 
2019-03-27 11:40:38 -==> Parameters: 
2019-03-27 11:40:38 -<==      Total: 1
2019-03-27 11:40:38 -耗时 : 61
2019-03-27 11:40:38 -返回值 : com.bootdo.common.utils.PageUtils@55f7229c
2019-03-27 11:40:52 -请求地址 : http://localhost:8081/index
2019-03-27 11:40:52 -HTTP METHOD : GET
2019-03-27 11:40:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-27 11:40:52 -参数 : [{}]
2019-03-27 11:40:52 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-27 11:40:52 -==> Parameters: 1(Long)
2019-03-27 11:40:52 -<==      Total: 46
2019-03-27 11:40:52 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-27 11:40:52 -==> Parameters: 138(Long)
2019-03-27 11:40:52 -<==      Total: 1
2019-03-27 11:40:52 -耗时 : 216
2019-03-27 11:40:52 -返回值 : index_v1
2019-03-27 11:40:52 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-27 11:40:52 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 217(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-27 11:40:52.831(Timestamp)
2019-03-27 11:40:52 -请求地址 : http://localhost:8081/main
2019-03-27 11:40:52 -HTTP METHOD : GET
2019-03-27 11:40:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-27 11:40:52 -参数 : []
2019-03-27 11:40:52 -耗时 : 0
2019-03-27 11:40:52 -返回值 : main
2019-03-27 11:40:52 -<==    Updates: 1
2019-03-27 11:40:53 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-27 11:40:53 -HTTP METHOD : GET
2019-03-27 11:40:53 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-27 11:40:53 -参数 : []
2019-03-27 11:40:53 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-27 11:40:53 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-27 11:40:53 -<==      Total: 0
2019-03-27 11:40:53 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-27 11:40:53 -==> Parameters: 1(Long), 0(String)
2019-03-27 11:40:53 -<==      Total: 1
2019-03-27 11:40:53 -耗时 : 11
2019-03-27 11:40:53 -返回值 : com.bootdo.common.utils.PageUtils@2e61137a
2019-03-27 11:40:53 -请求地址 : http://localhost:8081/main
2019-03-27 11:40:53 -HTTP METHOD : GET
2019-03-27 11:40:53 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-27 11:40:53 -参数 : []
2019-03-27 11:40:53 -耗时 : 0
2019-03-27 11:40:53 -返回值 : main
2019-03-27 11:40:55 -请求地址 : http://localhost:8081/elec/elec
2019-03-27 11:40:55 -HTTP METHOD : GET
2019-03-27 11:40:55 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-27 11:40:55 -参数 : []
2019-03-27 11:40:55 -耗时 : 1
2019-03-27 11:40:55 -返回值 : elec/elec/elec
2019-03-27 11:40:55 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-27 11:40:55 -HTTP METHOD : GET
2019-03-27 11:40:55 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 11:40:55 -参数 : [userType]
2019-03-27 11:40:55 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 11:40:55 -==> Parameters: userType(String)
2019-03-27 11:40:55 -<==      Total: 2
2019-03-27 11:40:55 -耗时 : 5
2019-03-27 11:40:55 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 11:40:55 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-27 11:40:55 -HTTP METHOD : GET
2019-03-27 11:40:55 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-27 11:40:55 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@389c2ab8]
2019-03-27 11:40:55 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-27 11:40:55 -==> Parameters: 0(Integer), 10(Integer)
2019-03-27 11:40:55 -<==      Total: 10
2019-03-27 11:40:55 -==>  Preparing: select count(*) from elec 
2019-03-27 11:40:55 -==> Parameters: 
2019-03-27 11:40:55 -<==      Total: 1
2019-03-27 11:40:55 -耗时 : 21
2019-03-27 11:40:55 -返回值 : com.bootdo.common.utils.PageUtils@59e03169
2019-03-27 11:41:03 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-27 11:41:03 -HTTP METHOD : GET
2019-03-27 11:41:03 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-27 11:41:03 -参数 : [{limit=10, offset=0, userType=A, userOrg=, userId=, createTime=2019-03, queryType=1, type=A}, com.bootdo.elec.domain.ElecDO@79a5f13d]
2019-03-27 11:41:03 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE user_type = ? and CREATE_TIME = ? order by id asc limit ?, ? 
2019-03-27 11:41:03 -==> Parameters: A(String), 2019-03(String), 0(Integer), 10(Integer)
2019-03-27 11:41:03 -<==      Total: 6
2019-03-27 11:41:03 -==>  Preparing: select count(*) from elec WHERE user_type = ? and CREATE_TIME = ? 
2019-03-27 11:41:03 -==> Parameters: A(String), 2019-03(String)
2019-03-27 11:41:03 -<==      Total: 1
2019-03-27 11:41:03 -耗时 : 14
2019-03-27 11:41:03 -返回值 : com.bootdo.common.utils.PageUtils@646d3732
2019-03-27 11:41:06 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-27 11:41:06 -HTTP METHOD : GET
2019-03-27 11:41:06 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-27 11:41:06 -参数 : []
2019-03-27 11:41:06 -耗时 : 0
2019-03-27 11:41:06 -返回值 : system/dept/deptTree
2019-03-27 11:41:06 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-27 11:41:06 -HTTP METHOD : GET
2019-03-27 11:41:06 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-27 11:41:06 -参数 : []
2019-03-27 11:41:06 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-27 11:41:06 -==> Parameters: 
2019-03-27 11:41:06 -<==      Total: 3
2019-03-27 11:41:06 -耗时 : 137
2019-03-27 11:41:06 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-27 11:41:08 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-27 11:41:08 -HTTP METHOD : GET
2019-03-27 11:41:08 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-27 11:41:08 -参数 : [{limit=10, offset=0, userType=A, userOrg=2, userId=, createTime=2019-03, queryType=1}, com.bootdo.elec.domain.ElecDO@5bd81e64]
2019-03-27 11:41:08 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE user_type = ? and user_org = ? and CREATE_TIME = ? order by id asc limit ?, ? 
2019-03-27 11:41:08 -==> Parameters: A(String), 2(String), 2019-03(String), 0(Integer), 10(Integer)
2019-03-27 11:41:08 -<==      Total: 6
2019-03-27 11:41:08 -==>  Preparing: select count(*) from elec WHERE user_type = ? and user_org = ? and CREATE_TIME = ? 
2019-03-27 11:41:08 -==> Parameters: A(String), 2(String), 2019-03(String)
2019-03-27 11:41:08 -<==      Total: 1
2019-03-27 11:41:08 -耗时 : 13
2019-03-27 11:41:08 -返回值 : com.bootdo.common.utils.PageUtils@8d22c9f
2019-03-27 11:41:09 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-27 11:41:09 -HTTP METHOD : GET
2019-03-27 11:41:09 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-27 11:41:09 -参数 : [{limit=10, offset=0, userType=A, userOrg=2, userId=, createTime=2019-03, queryType=1}, com.bootdo.elec.domain.ElecDO@7db74d11]
2019-03-27 11:41:09 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE user_type = ? and user_org = ? and CREATE_TIME = ? order by id asc limit ?, ? 
2019-03-27 11:41:09 -==> Parameters: A(String), 2(String), 2019-03(String), 0(Integer), 10(Integer)
2019-03-27 11:41:09 -<==      Total: 6
2019-03-27 11:41:09 -==>  Preparing: select count(*) from elec WHERE user_type = ? and user_org = ? and CREATE_TIME = ? 
2019-03-27 11:41:09 -==> Parameters: A(String), 2(String), 2019-03(String)
2019-03-27 11:41:09 -<==      Total: 1
2019-03-27 11:41:09 -耗时 : 12
2019-03-27 11:41:09 -返回值 : com.bootdo.common.utils.PageUtils@2509493d
2019-03-27 11:41:17 -请求地址 : http://localhost:8081/elec/elec/exprotElec
2019-03-27 11:41:17 -HTTP METHOD : GET
2019-03-27 11:41:17 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.exprotExcel
2019-03-27 11:41:17 -参数 : [com.bootdo.elec.vo.ElecVo@2b9ea67a, org.apache.shiro.web.servlet.ShiroHttpServletResponse@7e856fa1]
2019-03-27 11:41:17 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE user_type = ? and user_org = ? and CREATE_TIME = ? 
2019-03-27 11:41:17 -==> Parameters: A(String), 2(String), 2019-03(String)
2019-03-27 11:41:17 -<==      Total: 6
2019-03-27 11:41:18 -耗时 : 921
2019-03-27 11:41:18 -返回值 : null
2019-03-27 12:10:12 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 21], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 3], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 431]
2019-03-27 12:31:09 -请求地址 : http://localhost:8081/login;JSESSIONID=4da08c7d-9ecd-4a0c-82a7-43075a03f76d
2019-03-27 12:31:09 -HTTP METHOD : GET
2019-03-27 12:31:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-27 12:31:09 -参数 : [{}]
2019-03-27 12:31:09 -耗时 : 1
2019-03-27 12:31:09 -返回值 : login
2019-03-27 12:31:09 -请求地址 : http://localhost:8081/login;JSESSIONID=4da08c7d-9ecd-4a0c-82a7-43075a03f76d
2019-03-27 12:31:09 -HTTP METHOD : GET
2019-03-27 12:31:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-27 12:31:09 -参数 : [{}]
2019-03-27 12:31:09 -耗时 : 1
2019-03-27 12:31:09 -返回值 : login
2019-03-27 12:31:09 -请求地址 : http://localhost:8081/getVerify
2019-03-27 12:31:09 -HTTP METHOD : GET
2019-03-27 12:31:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-27 12:31:09 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@1c4286a6, org.apache.shiro.web.servlet.ShiroHttpServletResponse@50c3c41b]
2019-03-27 12:31:09 -4301
2019-03-27 12:31:09 -耗时 : 15
2019-03-27 12:31:09 -返回值 : null
2019-03-27 12:31:10 -请求地址 : http://localhost:8081/getVerify
2019-03-27 12:31:10 -HTTP METHOD : GET
2019-03-27 12:31:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-27 12:31:10 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@62114748, org.apache.shiro.web.servlet.ShiroHttpServletResponse@48f410ad]
2019-03-27 12:31:10 -2163
2019-03-27 12:31:10 -耗时 : 13
2019-03-27 12:31:10 -返回值 : null
2019-03-27 12:31:15 -请求地址 : http://localhost:8081/login
2019-03-27 12:31:15 -HTTP METHOD : POST
2019-03-27 12:31:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-27 12:31:15 -参数 : [admin, 111111, 2163, org.apache.shiro.web.servlet.ShiroHttpServletRequest@31dcbab3]
2019-03-27 12:31:15 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-27 12:31:15 -==> Parameters: admin(String)
2019-03-27 12:31:15 -<==      Total: 1
2019-03-27 12:31:15 -耗时 : 216
2019-03-27 12:31:15 -返回值 : {msg=操作成功, code=0}
2019-03-27 12:31:15 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-27 12:31:15 -==> Parameters: 1(Long), admin(String), 登录(String), 216(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-27 12:31:15.61(Timestamp)
2019-03-27 12:31:15 -请求地址 : http://localhost:8081/index
2019-03-27 12:31:15 -HTTP METHOD : GET
2019-03-27 12:31:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-27 12:31:15 -参数 : [{}]
2019-03-27 12:31:15 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-27 12:31:15 -==> Parameters: 1(Long)
2019-03-27 12:31:15 -<==      Total: 46
2019-03-27 12:31:15 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-27 12:31:15 -==> Parameters: 138(Long)
2019-03-27 12:31:15 -<==      Total: 1
2019-03-27 12:31:15 -耗时 : 80
2019-03-27 12:31:15 -返回值 : index_v1
2019-03-27 12:31:15 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-27 12:31:15 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 80(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-27 12:31:15.71(Timestamp)
2019-03-27 12:31:15 -请求地址 : http://localhost:8081/main
2019-03-27 12:31:15 -HTTP METHOD : GET
2019-03-27 12:31:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-27 12:31:15 -参数 : []
2019-03-27 12:31:15 -耗时 : 0
2019-03-27 12:31:15 -返回值 : main
2019-03-27 12:31:15 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-27 12:31:15 -HTTP METHOD : GET
2019-03-27 12:31:15 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-27 12:31:15 -参数 : []
2019-03-27 12:31:16 -请求地址 : http://localhost:8081/main
2019-03-27 12:31:16 -HTTP METHOD : GET
2019-03-27 12:31:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-27 12:31:16 -参数 : []
2019-03-27 12:31:16 -耗时 : 1
2019-03-27 12:31:16 -返回值 : main
2019-03-27 12:31:16 -<==    Updates: 1
2019-03-27 12:31:16 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-27 12:31:16 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-27 12:31:16 -<==      Total: 0
2019-03-27 12:31:16 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-27 12:31:16 -==> Parameters: 1(Long), 0(String)
2019-03-27 12:31:16 -<==      Total: 1
2019-03-27 12:31:16 -耗时 : 245
2019-03-27 12:31:16 -返回值 : com.bootdo.common.utils.PageUtils@42e2c4ec
2019-03-27 12:31:16 -<==    Updates: 1
2019-03-27 12:31:51 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-27 12:31:51 -==> Parameters: 1(Long)
2019-03-27 12:31:51 -<==      Total: 90
2019-03-27 12:31:51 -请求地址 : http://localhost:8081/water/water
2019-03-27 12:31:51 -HTTP METHOD : GET
2019-03-27 12:31:51 -CLASS_METHOD : com.bootdo.water.controller.WaterController.Water
2019-03-27 12:31:51 -参数 : []
2019-03-27 12:31:51 -耗时 : 0
2019-03-27 12:31:51 -返回值 : water/water/water
2019-03-27 12:31:52 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-27 12:31:52 -HTTP METHOD : GET
2019-03-27 12:31:52 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 12:31:52 -参数 : [userType]
2019-03-27 12:31:52 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 12:31:52 -==> Parameters: userType(String)
2019-03-27 12:31:52 -<==      Total: 2
2019-03-27 12:31:52 -耗时 : 4
2019-03-27 12:31:52 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 12:31:52 -请求地址 : http://localhost:8081/water/water/list
2019-03-27 12:31:52 -HTTP METHOD : GET
2019-03-27 12:31:52 -CLASS_METHOD : com.bootdo.water.controller.WaterController.list
2019-03-27 12:31:52 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}]
2019-03-27 12:31:52 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_cost`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water order by id asc limit ?, ? 
2019-03-27 12:31:52 -==> Parameters: 0(Integer), 3(Integer)
2019-03-27 12:31:52 -<==      Total: 3
2019-03-27 12:31:52 -==>  Preparing: select count(*) from water 
2019-03-27 12:31:52 -==> Parameters: 
2019-03-27 12:31:52 -<==      Total: 1
2019-03-27 12:31:52 -耗时 : 92
2019-03-27 12:31:52 -返回值 : com.bootdo.common.utils.PageUtils@66404f59
2019-03-27 12:31:55 -请求地址 : http://localhost:8081/water/water/edit/1
2019-03-27 12:31:55 -HTTP METHOD : GET
2019-03-27 12:31:55 -CLASS_METHOD : com.bootdo.water.controller.WaterController.edit
2019-03-27 12:31:55 -参数 : [1, {}]
2019-03-27 12:31:55 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_cost`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water where id = ? 
2019-03-27 12:31:55 -==> Parameters: 1(Long)
2019-03-27 12:31:55 -<==      Total: 1
2019-03-27 12:31:55 -耗时 : 9
2019-03-27 12:31:55 -返回值 : water/water/edit
2019-03-27 12:31:55 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-27 12:31:55 -HTTP METHOD : GET
2019-03-27 12:31:55 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 12:31:55 -参数 : [userType]
2019-03-27 12:31:55 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 12:31:55 -==> Parameters: userType(String)
2019-03-27 12:31:55 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-03-27 12:31:55 -HTTP METHOD : GET
2019-03-27 12:31:55 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 12:31:55 -参数 : [userState]
2019-03-27 12:31:55 -<==      Total: 2
2019-03-27 12:31:55 -耗时 : 8
2019-03-27 12:31:55 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 12:31:55 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 12:31:55 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-03-27 12:31:55 -HTTP METHOD : GET
2019-03-27 12:31:55 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 12:31:55 -参数 : [waterType]
2019-03-27 12:31:55 -==> Parameters: userState(String)
2019-03-27 12:31:55 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 12:31:55 -==> Parameters: waterType(String)
2019-03-27 12:31:55 -<==      Total: 6
2019-03-27 12:31:55 -耗时 : 13
2019-03-27 12:31:55 -返回值 : [DictDO{id=132, name='特殊水费4', value='5', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=131, name='特殊水费3', value='4', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=130, name='特殊水费2', value='3', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=129, name='特殊水费1', value='2', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=128, name='民用水', value='1', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=127, name='商业水', value='0', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 12:31:55 -<==      Total: 2
2019-03-27 12:31:55 -耗时 : 103
2019-03-27 12:31:55 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 12:32:05 -请求地址 : http://localhost:8081/water/water/update
2019-03-27 12:32:05 -HTTP METHOD : POST
2019-03-27 12:32:05 -CLASS_METHOD : com.bootdo.water.controller.WaterController.update
2019-03-27 12:32:05 -参数 : [com.bootdo.water.domain.WaterDO@13604bce]
2019-03-27 12:32:05 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-27 12:32:05 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/water/water/update(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error updating database.  Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
### Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String(String), null, 2019-03-27 12:32:05.973(Timestamp)
2019-03-27 12:32:06 -nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error updating database.  Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
### Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error updating database.  Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
### Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:295)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy127.update(Unknown Source)
	at com.bootdo.water.service.impl.WaterServiceImpl.update(WaterServiceImpl.java:44)
	at com.bootdo.water.controller.WaterController.update(WaterController.java:221)
	at com.bootdo.water.controller.WaterController$$FastClassBySpringCGLIB$$55e6da3c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor129.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.water.controller.WaterController$$EnhancerBySpringCGLIB$$1bfa2ccb.update(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.ibatis.exceptions.PersistenceException: 
### Error updating database.  Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
### Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
	at org.apache.ibatis.exceptions.ExceptionFactory.wrapException(ExceptionFactory.java:30)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:200)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 103 common frames omitted
Caused by: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
	at org.apache.ibatis.ognl.OgnlOps.compareWithConversion(OgnlOps.java:93)
	at org.apache.ibatis.ognl.OgnlOps.isEqual(OgnlOps.java:143)
	at org.apache.ibatis.ognl.OgnlOps.equal(OgnlOps.java:802)
	at org.apache.ibatis.ognl.ASTNotEq.getValueBody(ASTNotEq.java:53)
	at org.apache.ibatis.ognl.SimpleNode.evaluateGetValueBody(SimpleNode.java:212)
	at org.apache.ibatis.ognl.SimpleNode.getValue(SimpleNode.java:258)
	at org.apache.ibatis.ognl.ASTAnd.getValueBody(ASTAnd.java:61)
	at org.apache.ibatis.ognl.SimpleNode.evaluateGetValueBody(SimpleNode.java:212)
	at org.apache.ibatis.ognl.SimpleNode.getValue(SimpleNode.java:258)
	at org.apache.ibatis.ognl.Ognl.getValue(Ognl.java:470)
	at org.apache.ibatis.ognl.Ognl.getValue(Ognl.java:434)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:44)
	at org.apache.ibatis.scripting.xmltags.ExpressionEvaluator.evaluateBoolean(ExpressionEvaluator.java:32)
	at org.apache.ibatis.scripting.xmltags.IfSqlNode.apply(IfSqlNode.java:34)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.TrimSqlNode.apply(TrimSqlNode.java:55)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.DynamicSqlSource.getBoundSql(DynamicSqlSource.java:41)
	at org.apache.ibatis.mapping.MappedStatement.getBoundSql(MappedStatement.java:292)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.<init>(BaseStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.<init>(PreparedStatementHandler.java:40)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.<init>(RoutingStatementHandler.java:46)
	at org.apache.ibatis.session.Configuration.newStatementHandler(Configuration.java:545)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:48)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	... 108 common frames omitted
2019-03-27 12:32:06 -<==    Updates: 1
2019-03-27 12:37:32 -请求地址 : http://localhost:8081/water/water/update
2019-03-27 12:37:32 -HTTP METHOD : POST
2019-03-27 12:37:32 -CLASS_METHOD : com.bootdo.water.controller.WaterController.update
2019-03-27 12:37:32 -参数 : [com.bootdo.water.domain.WaterDO@73c36846]
2019-03-27 12:37:32 -nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error updating database.  Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
### Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error updating database.  Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
### Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:295)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy127.update(Unknown Source)
	at com.bootdo.water.service.impl.WaterServiceImpl.update(WaterServiceImpl.java:44)
	at com.bootdo.water.controller.WaterController.update(WaterController.java:221)
	at com.bootdo.water.controller.WaterController$$FastClassBySpringCGLIB$$55e6da3c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor129.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.water.controller.WaterController$$EnhancerBySpringCGLIB$$1bfa2ccb.update(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.ibatis.exceptions.PersistenceException: 
### Error updating database.  Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
### Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
	at org.apache.ibatis.exceptions.ExceptionFactory.wrapException(ExceptionFactory.java:30)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:200)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 103 common frames omitted
Caused by: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
	at org.apache.ibatis.ognl.OgnlOps.compareWithConversion(OgnlOps.java:93)
	at org.apache.ibatis.ognl.OgnlOps.isEqual(OgnlOps.java:143)
	at org.apache.ibatis.ognl.OgnlOps.equal(OgnlOps.java:802)
	at org.apache.ibatis.ognl.ASTNotEq.getValueBody(ASTNotEq.java:53)
	at org.apache.ibatis.ognl.SimpleNode.evaluateGetValueBody(SimpleNode.java:212)
	at org.apache.ibatis.ognl.SimpleNode.getValue(SimpleNode.java:258)
	at org.apache.ibatis.ognl.ASTAnd.getValueBody(ASTAnd.java:61)
	at org.apache.ibatis.ognl.SimpleNode.evaluateGetValueBody(SimpleNode.java:212)
	at org.apache.ibatis.ognl.SimpleNode.getValue(SimpleNode.java:258)
	at org.apache.ibatis.ognl.Ognl.getValue(Ognl.java:470)
	at org.apache.ibatis.ognl.Ognl.getValue(Ognl.java:434)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:44)
	at org.apache.ibatis.scripting.xmltags.ExpressionEvaluator.evaluateBoolean(ExpressionEvaluator.java:32)
	at org.apache.ibatis.scripting.xmltags.IfSqlNode.apply(IfSqlNode.java:34)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.TrimSqlNode.apply(TrimSqlNode.java:55)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.DynamicSqlSource.getBoundSql(DynamicSqlSource.java:41)
	at org.apache.ibatis.mapping.MappedStatement.getBoundSql(MappedStatement.java:292)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.<init>(BaseStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.<init>(PreparedStatementHandler.java:40)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.<init>(RoutingStatementHandler.java:46)
	at org.apache.ibatis.session.Configuration.newStatementHandler(Configuration.java:545)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:48)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	... 108 common frames omitted
2019-03-27 12:37:32 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-27 12:37:32 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/water/water/update(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error updating database.  Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
### Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String(String), null, 2019-03-27 12:37:32.859(Timestamp)
2019-03-27 12:37:32 -<==    Updates: 1
2019-03-27 12:38:07 -Starting BootdoApplication on ZJZL-20180906VX with PID 5360 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-27 12:38:07 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-27 12:38:07 -The following profiles are active: dev
2019-03-27 12:38:07 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1643d68f: startup date [Wed Mar 27 12:38:07 CST 2019]; root of context hierarchy
2019-03-27 12:38:12 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-27 12:38:15 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$e8021070] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-27 12:38:15 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$da5b3f17] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-27 12:38:16 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-27 12:38:16 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-27 12:38:17 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-27 12:38:17 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-27 12:38:17 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-27 12:38:17 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-27 12:38:17 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-27 12:38:17 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-27 12:38:17 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-27 12:38:19 -Tomcat initialized with port(s): 8081 (http)
2019-03-27 12:38:19 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-27 12:38:19 -Starting service [Tomcat]
2019-03-27 12:38:19 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-27 12:38:19 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-27 12:38:20 -Initializing Spring embedded WebApplicationContext
2019-03-27 12:38:20 -Root WebApplicationContext: initialization completed in 12484 ms
2019-03-27 12:38:21 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-27 12:38:21 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-27 12:38:21 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-27 12:38:21 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-27 12:38:21 -Filter xssFilter was not registered (disabled)
2019-03-27 12:38:21 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-27 12:38:21 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-27 12:38:21 -Servlet statViewServlet mapped to [/druid/*]
2019-03-27 12:38:21 -Servlet dispatcherServlet mapped to [/]
2019-03-27 12:38:24 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1643d68f: startup date [Wed Mar 27 12:38:07 CST 2019]; root of context hierarchy
2019-03-27 12:38:25 -Using default implementation for ThreadExecutor
2019-03-27 12:38:25 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-27 12:38:25 -Quartz Scheduler v.2.2.1 created.
2019-03-27 12:38:25 -RAMJobStore initialized.
2019-03-27 12:38:25 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-27 12:38:25 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-27 12:38:25 -Quartz scheduler version: 2.2.1
2019-03-27 12:38:25 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@281ca256
2019-03-27 12:38:26 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-27 12:38:26 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-27 12:38:30 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-27 12:38:30 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-03-27 12:38:30 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-27 12:38:30 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-27 12:38:30 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-27 12:38:30 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-27 12:38:30 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-27 12:38:30 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-27 12:38:30 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-27 12:38:30 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-27 12:38:30 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-27 12:38:30 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 12:38:30 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-27 12:38:30 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-27 12:38:30 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-27 12:38:30 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 12:38:30 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-27 12:38:30 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-27 12:38:30 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-27 12:38:30 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-27 12:38:30 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-27 12:38:30 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-27 12:38:30 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 12:38:30 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-27 12:38:30 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-27 12:38:30 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-27 12:38:30 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 12:38:30 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-27 12:38:30 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 12:38:30 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-27 12:38:30 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-27 12:38:30 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-27 12:38:30 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-27 12:38:30 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-27 12:38:30 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-27 12:38:30 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-27 12:38:30 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-27 12:38:30 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-27 12:38:30 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 12:38:30 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-27 12:38:30 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-27 12:38:30 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 12:38:30 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-27 12:38:30 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-27 12:38:30 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-27 12:38:30 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-27 12:38:30 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 12:38:30 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-27 12:38:30 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-03-27 12:38:30 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-27 12:38:30 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-27 12:38:30 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-27 12:38:30 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-27 12:38:30 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-27 12:38:30 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-27 12:38:30 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-27 12:38:30 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-27 12:38:30 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-27 12:38:30 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-27 12:38:30 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 12:38:30 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-27 12:38:30 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-27 12:38:30 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-27 12:38:30 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-03-27 12:38:30 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-27 12:38:30 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-27 12:38:30 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-27 12:38:30 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-27 12:38:30 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 12:38:30 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-03-27 12:38:30 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-27 12:38:30 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 12:38:30 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-27 12:38:30 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-27 12:38:30 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-27 12:38:30 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-27 12:38:30 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-27 12:38:30 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-27 12:38:30 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 12:38:30 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-27 12:38:30 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-27 12:38:30 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-27 12:38:30 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-27 12:38:30 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-27 12:38:30 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-27 12:38:30 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-27 12:38:30 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-27 12:38:30 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-27 12:38:30 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-27 12:38:30 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 12:38:30 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-27 12:38:30 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-27 12:38:30 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 12:38:30 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-03-27 12:38:30 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-27 12:38:30 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-03-27 12:38:30 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-27 12:38:30 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-27 12:38:30 -Mapped "{[/moneyList/moneyList/LikeName],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.LikeName(org.springframework.ui.Model)
2019-03-27 12:38:30 -Mapped "{[/moneyList/moneyList/UserList],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-27 12:38:30 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-27 12:38:30 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-27 12:38:30 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-27 12:38:30 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-27 12:38:30 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 12:38:30 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-27 12:38:30 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-27 12:38:30 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-27 12:38:30 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 12:38:30 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-27 12:38:30 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-27 12:38:30 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-27 12:38:30 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-27 12:38:30 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 12:38:30 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-27 12:38:30 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-27 12:38:30 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-27 12:38:30 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 12:38:30 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-27 12:38:30 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-27 12:38:30 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-27 12:38:30 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-27 12:38:30 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 12:38:30 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-27 12:38:30 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-27 12:38:30 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-27 12:38:30 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 12:38:30 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-27 12:38:30 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-27 12:38:30 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-27 12:38:30 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-27 12:38:30 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-27 12:38:30 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 12:38:30 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-27 12:38:30 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-27 12:38:30 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-27 12:38:30 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 12:38:30 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-27 12:38:30 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 12:38:30 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-27 12:38:30 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-27 12:38:30 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-27 12:38:30 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-27 12:38:30 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 12:38:30 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-27 12:38:30 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-27 12:38:30 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-27 12:38:30 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 12:38:30 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 12:38:30 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-27 12:38:30 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-27 12:38:30 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-27 12:38:30 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-27 12:38:30 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-27 12:38:30 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-27 12:38:30 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-27 12:38:30 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 12:38:30 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-27 12:38:30 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-27 12:38:30 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-27 12:38:30 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-27 12:38:30 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-27 12:38:30 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-27 12:38:30 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-27 12:38:30 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-27 12:38:30 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-27 12:38:30 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-27 12:38:30 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-27 12:38:30 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-27 12:38:30 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 12:38:30 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-27 12:38:30 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-27 12:38:30 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-27 12:38:30 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-27 12:38:30 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-27 12:38:30 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-27 12:38:30 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-27 12:38:30 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-27 12:38:30 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-27 12:38:30 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-27 12:38:30 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-27 12:38:30 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-27 12:38:30 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 12:38:30 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-27 12:38:30 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-27 12:38:30 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-27 12:38:30 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-27 12:38:30 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 12:38:30 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-27 12:38:30 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-27 12:38:30 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-27 12:38:30 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 12:38:30 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-27 12:38:30 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-27 12:38:30 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-27 12:38:30 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-27 12:38:30 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-27 12:38:30 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-27 12:38:30 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-27 12:38:30 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-27 12:38:30 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-27 12:38:30 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-27 12:38:30 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-27 12:38:30 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-27 12:38:30 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-27 12:38:30 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-27 12:38:30 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-27 12:38:30 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-27 12:38:30 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-27 12:38:30 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 12:38:30 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-27 12:38:30 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-27 12:38:30 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 12:38:30 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-27 12:38:30 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 12:38:30 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-27 12:38:30 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-27 12:38:30 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-27 12:38:30 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-27 12:38:30 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-27 12:38:30 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-27 12:38:30 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 12:38:30 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-27 12:38:30 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-27 12:38:30 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 12:38:30 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-27 12:38:30 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-27 12:38:30 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-03-27 12:38:30 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-03-27 12:38:30 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-27 12:38:30 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-27 12:38:30 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-27 12:38:30 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-27 12:38:31 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-27 12:38:31 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-27 12:38:31 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-27 12:38:32 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-27 12:38:32 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1643d68f: startup date [Wed Mar 27 12:38:07 CST 2019]; root of context hierarchy
2019-03-27 12:38:32 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-27 12:38:32 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-27 12:38:32 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-27 12:38:33 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-27 12:38:33 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-27 12:38:35 -Registering beans for JMX exposure on startup
2019-03-27 12:38:35 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-27 12:38:35 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-27 12:38:35 -Starting beans in phase 2147483647
2019-03-27 12:38:35 -Context refreshed
2019-03-27 12:38:36 -Found 1 custom documentation plugin(s)
2019-03-27 12:38:36 -Scanning for api listing references
2019-03-27 12:38:36 -Generating unique operation named: removeUsingPOST_1
2019-03-27 12:38:36 -Generating unique operation named: addUsingGET_1
2019-03-27 12:38:36 -Generating unique operation named: editUsingGET_1
2019-03-27 12:38:36 -Generating unique operation named: listUsingGET_1
2019-03-27 12:38:36 -Generating unique operation named: removeUsingPOST_2
2019-03-27 12:38:37 -Generating unique operation named: removeUsingPOST_3
2019-03-27 12:38:37 -Generating unique operation named: saveUsingPOST_1
2019-03-27 12:38:37 -Generating unique operation named: updateUsingGET_1
2019-03-27 12:38:37 -Generating unique operation named: updateUsingHEAD_1
2019-03-27 12:38:37 -Generating unique operation named: updateUsingPOST_1
2019-03-27 12:38:37 -Generating unique operation named: updateUsingPUT_1
2019-03-27 12:38:37 -Generating unique operation named: updateUsingPATCH_1
2019-03-27 12:38:37 -Generating unique operation named: updateUsingDELETE_1
2019-03-27 12:38:37 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-27 12:38:37 -Generating unique operation named: updateUsingTRACE_1
2019-03-27 12:38:37 -Generating unique operation named: addUsingGET_2
2019-03-27 12:38:37 -Generating unique operation named: editUsingGET_2
2019-03-27 12:38:37 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-27 12:38:37 -Generating unique operation named: listUsingGET_2
2019-03-27 12:38:37 -Generating unique operation named: removeUsingPOST_4
2019-03-27 12:38:37 -Generating unique operation named: removeUsingPOST_5
2019-03-27 12:38:37 -Generating unique operation named: saveUsingPOST_2
2019-03-27 12:38:37 -Generating unique operation named: updateUsingPOST_2
2019-03-27 12:38:37 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-27 12:38:37 -Generating unique operation named: addUsingGET_3
2019-03-27 12:38:37 -Generating unique operation named: editUsingGET_3
2019-03-27 12:38:37 -Generating unique operation named: listUsingGET_3
2019-03-27 12:38:37 -Generating unique operation named: removeUsingPOST_6
2019-03-27 12:38:37 -Generating unique operation named: removeUsingPOST_7
2019-03-27 12:38:37 -Generating unique operation named: saveUsingPOST_3
2019-03-27 12:38:37 -Generating unique operation named: updateUsingGET_2
2019-03-27 12:38:37 -Generating unique operation named: updateUsingHEAD_2
2019-03-27 12:38:37 -Generating unique operation named: updateUsingPOST_3
2019-03-27 12:38:37 -Generating unique operation named: updateUsingPUT_2
2019-03-27 12:38:37 -Generating unique operation named: updateUsingPATCH_2
2019-03-27 12:38:37 -Generating unique operation named: updateUsingDELETE_2
2019-03-27 12:38:37 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-27 12:38:37 -Generating unique operation named: updateUsingTRACE_2
2019-03-27 12:38:37 -Generating unique operation named: addUsingGET_4
2019-03-27 12:38:37 -Generating unique operation named: editUsingGET_4
2019-03-27 12:38:37 -Generating unique operation named: listUsingGET_4
2019-03-27 12:38:37 -Generating unique operation named: removeUsingPOST_8
2019-03-27 12:38:37 -Generating unique operation named: removeUsingPOST_9
2019-03-27 12:38:37 -Generating unique operation named: saveUsingPOST_4
2019-03-27 12:38:37 -Generating unique operation named: updateUsingGET_3
2019-03-27 12:38:37 -Generating unique operation named: updateUsingHEAD_3
2019-03-27 12:38:37 -Generating unique operation named: updateUsingPOST_4
2019-03-27 12:38:37 -Generating unique operation named: updateUsingPUT_3
2019-03-27 12:38:37 -Generating unique operation named: updateUsingPATCH_3
2019-03-27 12:38:37 -Generating unique operation named: updateUsingDELETE_3
2019-03-27 12:38:37 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-27 12:38:37 -Generating unique operation named: updateUsingTRACE_3
2019-03-27 12:38:37 -Generating unique operation named: ElecUsingGET_1
2019-03-27 12:38:37 -Generating unique operation named: addUsingGET_5
2019-03-27 12:38:37 -Generating unique operation named: editUsingGET_5
2019-03-27 12:38:37 -Generating unique operation named: listUsingGET_5
2019-03-27 12:38:37 -Generating unique operation named: removeUsingPOST_10
2019-03-27 12:38:37 -Generating unique operation named: removeUsingPOST_11
2019-03-27 12:38:37 -Generating unique operation named: saveUsingPOST_5
2019-03-27 12:38:37 -Generating unique operation named: updateUsingGET_4
2019-03-27 12:38:37 -Generating unique operation named: updateUsingHEAD_4
2019-03-27 12:38:37 -Generating unique operation named: updateUsingPOST_5
2019-03-27 12:38:37 -Generating unique operation named: updateUsingPUT_4
2019-03-27 12:38:37 -Generating unique operation named: updateUsingPATCH_4
2019-03-27 12:38:37 -Generating unique operation named: updateUsingDELETE_4
2019-03-27 12:38:37 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-27 12:38:37 -Generating unique operation named: updateUsingTRACE_4
2019-03-27 12:38:37 -Generating unique operation named: editUsingGET_6
2019-03-27 12:38:37 -Generating unique operation named: listUsingGET_6
2019-03-27 12:38:37 -Generating unique operation named: updateUsingPOST_6
2019-03-27 12:38:37 -Generating unique operation named: addUsingGET_6
2019-03-27 12:38:37 -Generating unique operation named: editUsingGET_7
2019-03-27 12:38:37 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-27 12:38:37 -Generating unique operation named: listUsingGET_7
2019-03-27 12:38:37 -Generating unique operation named: removeUsingPOST_12
2019-03-27 12:38:37 -Generating unique operation named: removeUsingPOST_13
2019-03-27 12:38:37 -Generating unique operation named: saveUsingPOST_6
2019-03-27 12:38:37 -Generating unique operation named: updateUsingGET_5
2019-03-27 12:38:37 -Generating unique operation named: updateUsingHEAD_5
2019-03-27 12:38:37 -Generating unique operation named: updateUsingPOST_7
2019-03-27 12:38:37 -Generating unique operation named: updateUsingPUT_5
2019-03-27 12:38:37 -Generating unique operation named: updateUsingPATCH_5
2019-03-27 12:38:37 -Generating unique operation named: updateUsingDELETE_5
2019-03-27 12:38:37 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-27 12:38:37 -Generating unique operation named: updateUsingTRACE_5
2019-03-27 12:38:37 -Generating unique operation named: exprotExcelUsingGET_4
2019-03-27 12:38:37 -Generating unique operation named: addUsingGET_7
2019-03-27 12:38:37 -Generating unique operation named: editUsingGET_8
2019-03-27 12:38:38 -Generating unique operation named: listUsingGET_8
2019-03-27 12:38:38 -Generating unique operation named: removeUsingPOST_14
2019-03-27 12:38:38 -Generating unique operation named: removeUsingPOST_15
2019-03-27 12:38:38 -Generating unique operation named: saveUsingPOST_7
2019-03-27 12:38:38 -Generating unique operation named: updateUsingGET_6
2019-03-27 12:38:38 -Generating unique operation named: updateUsingHEAD_6
2019-03-27 12:38:38 -Generating unique operation named: updateUsingPOST_8
2019-03-27 12:38:38 -Generating unique operation named: updateUsingPUT_6
2019-03-27 12:38:38 -Generating unique operation named: updateUsingPATCH_6
2019-03-27 12:38:38 -Generating unique operation named: updateUsingDELETE_6
2019-03-27 12:38:38 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-27 12:38:38 -Generating unique operation named: updateUsingTRACE_6
2019-03-27 12:38:38 -Generating unique operation named: addUsingGET_8
2019-03-27 12:38:38 -Generating unique operation named: editUsingGET_9
2019-03-27 12:38:38 -Generating unique operation named: listUsingGET_9
2019-03-27 12:38:38 -Generating unique operation named: removeUsingPOST_16
2019-03-27 12:38:38 -Generating unique operation named: removeUsingPOST_17
2019-03-27 12:38:38 -Generating unique operation named: saveUsingPOST_8
2019-03-27 12:38:38 -Generating unique operation named: updateUsingGET_7
2019-03-27 12:38:38 -Generating unique operation named: updateUsingHEAD_7
2019-03-27 12:38:38 -Generating unique operation named: updateUsingPOST_9
2019-03-27 12:38:38 -Generating unique operation named: updateUsingPUT_7
2019-03-27 12:38:38 -Generating unique operation named: updateUsingPATCH_7
2019-03-27 12:38:38 -Generating unique operation named: updateUsingDELETE_7
2019-03-27 12:38:38 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-27 12:38:38 -Generating unique operation named: updateUsingTRACE_7
2019-03-27 12:38:38 -Generating unique operation named: addUsingGET_9
2019-03-27 12:38:38 -Generating unique operation named: editUsingGET_10
2019-03-27 12:38:38 -Generating unique operation named: infoUsingGET_1
2019-03-27 12:38:38 -Generating unique operation named: infoUsingHEAD_1
2019-03-27 12:38:38 -Generating unique operation named: infoUsingPOST_1
2019-03-27 12:38:38 -Generating unique operation named: infoUsingPUT_1
2019-03-27 12:38:38 -Generating unique operation named: infoUsingPATCH_1
2019-03-27 12:38:38 -Generating unique operation named: infoUsingDELETE_1
2019-03-27 12:38:38 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-27 12:38:38 -Generating unique operation named: infoUsingTRACE_1
2019-03-27 12:38:38 -Generating unique operation named: listUsingGET_10
2019-03-27 12:38:38 -Generating unique operation named: removeUsingPOST_18
2019-03-27 12:38:38 -Generating unique operation named: removeUsingPOST_19
2019-03-27 12:38:38 -Generating unique operation named: saveUsingPOST_9
2019-03-27 12:38:38 -Generating unique operation named: updateUsingPOST_10
2019-03-27 12:38:38 -Generating unique operation named: listUsingGET_11
2019-03-27 12:38:38 -Generating unique operation named: removeUsingPOST_20
2019-03-27 12:38:38 -Generating unique operation named: welcomeUsingGET_1
2019-03-27 12:38:38 -Generating unique operation named: addUsingGET_10
2019-03-27 12:38:38 -Generating unique operation named: editUsingGET_11
2019-03-27 12:38:38 -Generating unique operation named: listUsingGET_12
2019-03-27 12:38:38 -Generating unique operation named: removeUsingPOST_21
2019-03-27 12:38:38 -Generating unique operation named: saveUsingPOST_10
2019-03-27 12:38:38 -Generating unique operation named: treeUsingGET_1
2019-03-27 12:38:38 -Generating unique operation named: treeUsingGET_2
2019-03-27 12:38:38 -Generating unique operation named: updateUsingPOST_11
2019-03-27 12:38:38 -Generating unique operation named: addUsingGET_11
2019-03-27 12:38:38 -Generating unique operation named: editUsingGET_12
2019-03-27 12:38:38 -Generating unique operation named: listUsingGET_13
2019-03-27 12:38:38 -Generating unique operation named: removeUsingPOST_22
2019-03-27 12:38:38 -Generating unique operation named: removeUsingPOST_23
2019-03-27 12:38:38 -Generating unique operation named: saveUsingPOST_11
2019-03-27 12:38:38 -Generating unique operation named: updateUsingGET_8
2019-03-27 12:38:38 -Generating unique operation named: updateUsingHEAD_8
2019-03-27 12:38:38 -Generating unique operation named: updateUsingPOST_12
2019-03-27 12:38:38 -Generating unique operation named: updateUsingPUT_8
2019-03-27 12:38:38 -Generating unique operation named: updateUsingPATCH_8
2019-03-27 12:38:38 -Generating unique operation named: updateUsingDELETE_8
2019-03-27 12:38:38 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-27 12:38:38 -Generating unique operation named: updateUsingTRACE_8
2019-03-27 12:38:38 -Generating unique operation named: addUsingGET_12
2019-03-27 12:38:38 -Generating unique operation named: editUsingGET_13
2019-03-27 12:38:38 -Generating unique operation named: listUsingGET_14
2019-03-27 12:38:38 -Generating unique operation named: removeUsingPOST_24
2019-03-27 12:38:38 -Generating unique operation named: removeUsingPOST_25
2019-03-27 12:38:38 -Generating unique operation named: saveUsingPOST_12
2019-03-27 12:38:38 -Generating unique operation named: updateUsingGET_9
2019-03-27 12:38:39 -Generating unique operation named: updateUsingHEAD_9
2019-03-27 12:38:39 -Generating unique operation named: updateUsingPOST_13
2019-03-27 12:38:39 -Generating unique operation named: updateUsingPUT_9
2019-03-27 12:38:39 -Generating unique operation named: updateUsingPATCH_9
2019-03-27 12:38:39 -Generating unique operation named: updateUsingDELETE_9
2019-03-27 12:38:39 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-27 12:38:39 -Generating unique operation named: updateUsingTRACE_9
2019-03-27 12:38:39 -Generating unique operation named: addUsingGET_13
2019-03-27 12:38:39 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-27 12:38:39 -Generating unique operation named: editUsingGET_14
2019-03-27 12:38:39 -Generating unique operation named: listUsingGET_15
2019-03-27 12:38:39 -Generating unique operation named: saveUsingPOST_13
2019-03-27 12:38:39 -Generating unique operation named: saveUsingPOST_14
2019-03-27 12:38:39 -Generating unique operation named: updateUsingPOST_14
2019-03-27 12:38:39 -Generating unique operation named: listUsingGET_16
2019-03-27 12:38:39 -Generating unique operation named: listUsingHEAD_1
2019-03-27 12:38:39 -Generating unique operation named: listUsingPOST_1
2019-03-27 12:38:39 -Generating unique operation named: listUsingPUT_1
2019-03-27 12:38:39 -Generating unique operation named: listUsingPATCH_1
2019-03-27 12:38:39 -Generating unique operation named: listUsingDELETE_1
2019-03-27 12:38:39 -Generating unique operation named: listUsingOPTIONS_1
2019-03-27 12:38:39 -Generating unique operation named: listUsingTRACE_1
2019-03-27 12:38:39 -Generating unique operation named: addUsingGET_14
2019-03-27 12:38:39 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-27 12:38:39 -Generating unique operation named: editUsingGET_15
2019-03-27 12:38:39 -Generating unique operation named: listUsingGET_17
2019-03-27 12:38:39 -Generating unique operation named: removeUsingPOST_26
2019-03-27 12:38:39 -Generating unique operation named: saveUsingPOST_15
2019-03-27 12:38:39 -Generating unique operation named: treeUsingGET_3
2019-03-27 12:38:39 -Generating unique operation named: treeViewUsingGET_1
2019-03-27 12:38:39 -Generating unique operation named: updateUsingPOST_15
2019-03-27 12:38:39 -Generating unique operation named: addUsingGET_15
2019-03-27 12:38:39 -Generating unique operation named: editUsingGET_16
2019-03-27 12:38:39 -Generating unique operation named: exprotExcelUsingGET_5
2019-03-27 12:38:39 -Generating unique operation named: listUsingGET_18
2019-03-27 12:38:39 -Generating unique operation named: removeUsingPOST_27
2019-03-27 12:38:39 -Generating unique operation named: removeUsingPOST_28
2019-03-27 12:38:39 -Generating unique operation named: saveUsingPOST_16
2019-03-27 12:38:39 -Generating unique operation named: updateUsingGET_10
2019-03-27 12:38:39 -Generating unique operation named: updateUsingHEAD_10
2019-03-27 12:38:39 -Generating unique operation named: updateUsingPOST_16
2019-03-27 12:38:39 -Generating unique operation named: updateUsingPUT_10
2019-03-27 12:38:39 -Generating unique operation named: updateUsingPATCH_10
2019-03-27 12:38:39 -Generating unique operation named: updateUsingDELETE_10
2019-03-27 12:38:39 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-27 12:38:39 -Generating unique operation named: updateUsingTRACE_10
2019-03-27 12:38:39 -Generating unique operation named: exprotExcelUsingGET_6
2019-03-27 12:38:39 -Generating unique operation named: addUsingGET_16
2019-03-27 12:38:39 -Generating unique operation named: editUsingGET_17
2019-03-27 12:38:39 -Generating unique operation named: listUsingGET_19
2019-03-27 12:38:39 -Generating unique operation named: removeUsingPOST_29
2019-03-27 12:38:39 -Generating unique operation named: removeUsingPOST_30
2019-03-27 12:38:39 -Generating unique operation named: saveUsingPOST_17
2019-03-27 12:38:39 -Generating unique operation named: updateUsingGET_11
2019-03-27 12:38:39 -Generating unique operation named: updateUsingHEAD_11
2019-03-27 12:38:39 -Generating unique operation named: updateUsingPOST_17
2019-03-27 12:38:39 -Generating unique operation named: updateUsingPUT_11
2019-03-27 12:38:39 -Generating unique operation named: updateUsingPATCH_11
2019-03-27 12:38:39 -Generating unique operation named: updateUsingDELETE_11
2019-03-27 12:38:39 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-27 12:38:39 -Generating unique operation named: updateUsingTRACE_11
2019-03-27 12:38:39 -Generating unique operation named: addUsingGET_17
2019-03-27 12:38:39 -Generating unique operation named: editUsingGET_18
2019-03-27 12:38:39 -Generating unique operation named: listUsingGET_20
2019-03-27 12:38:39 -Generating unique operation named: removeUsingPOST_31
2019-03-27 12:38:39 -Generating unique operation named: removeUsingPOST_32
2019-03-27 12:38:39 -Generating unique operation named: saveUsingPOST_18
2019-03-27 12:38:39 -Generating unique operation named: updateUsingGET_12
2019-03-27 12:38:39 -Generating unique operation named: updateUsingHEAD_12
2019-03-27 12:38:39 -Generating unique operation named: updateUsingPOST_18
2019-03-27 12:38:39 -Generating unique operation named: updateUsingPUT_12
2019-03-27 12:38:39 -Generating unique operation named: updateUsingPATCH_12
2019-03-27 12:38:39 -Generating unique operation named: updateUsingDELETE_12
2019-03-27 12:38:39 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-27 12:38:39 -Generating unique operation named: updateUsingTRACE_12
2019-03-27 12:38:39 -Starting Quartz Scheduler now
2019-03-27 12:38:39 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-27 12:38:39 -Starting...
2019-03-27 12:38:39 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-27 12:38:39 -Started.
2019-03-27 12:38:39 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-27 12:38:40 -Using a shared selector for servlet write/read
2019-03-27 12:38:40 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-27 12:38:40 -Started BootdoApplication in 34.924 seconds (JVM running for 36.614)
2019-03-27 12:38:40 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-27 12:38:40 -==> Parameters: 
2019-03-27 12:38:40 -<==      Total: 1
2019-03-27 12:38:57 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-27 12:38:57 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-27 12:38:57 -FrameworkServlet 'dispatcherServlet': initialization completed in 66 ms
2019-03-27 12:38:57 -Enabling session validation scheduler...
2019-03-27 12:38:57 -请求地址 : http://localhost:8081/login;JSESSIONID=74b55bf8-110e-452b-a298-a2de9ba456dd
2019-03-27 12:38:57 -HTTP METHOD : GET
2019-03-27 12:38:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-27 12:38:57 -参数 : [{}]
2019-03-27 12:38:57 -耗时 : 6
2019-03-27 12:38:57 -返回值 : login
2019-03-27 12:38:59 -请求地址 : http://localhost:8081/getVerify
2019-03-27 12:38:59 -HTTP METHOD : GET
2019-03-27 12:38:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-27 12:38:59 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@ec59419, org.apache.shiro.web.servlet.ShiroHttpServletResponse@3f864e95]
2019-03-27 12:39:01 -4320
2019-03-27 12:39:01 -耗时 : 2059
2019-03-27 12:39:01 -返回值 : null
2019-03-27 12:39:06 -请求地址 : http://localhost:8081/login
2019-03-27 12:39:06 -HTTP METHOD : POST
2019-03-27 12:39:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-27 12:39:06 -参数 : [admin, 111111, 4320, org.apache.shiro.web.servlet.ShiroHttpServletRequest@3faf94b9]
2019-03-27 12:39:06 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-27 12:39:06 -==> Parameters: admin(String)
2019-03-27 12:39:06 -<==      Total: 1
2019-03-27 12:39:06 -耗时 : 168
2019-03-27 12:39:06 -返回值 : {msg=操作成功, code=0}
2019-03-27 12:39:06 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-03-27 12:39:06 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-27 12:39:06 -==> Parameters: 1(Long), admin(String), 登录(String), 168(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-27 12:39:06.842(Timestamp)
2019-03-27 12:39:06 -<==    Updates: 1
2019-03-27 12:39:06 -请求地址 : http://localhost:8081/index
2019-03-27 12:39:06 -HTTP METHOD : GET
2019-03-27 12:39:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-27 12:39:06 -参数 : [{}]
2019-03-27 12:39:07 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-27 12:39:07 -==> Parameters: 1(Long)
2019-03-27 12:39:07 -<==      Total: 46
2019-03-27 12:39:07 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-27 12:39:07 -==> Parameters: 138(Long)
2019-03-27 12:39:07 -<==      Total: 1
2019-03-27 12:39:07 -耗时 : 331
2019-03-27 12:39:07 -返回值 : index_v1
2019-03-27 12:39:07 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-27 12:39:07 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 331(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-27 12:39:07.344(Timestamp)
2019-03-27 12:39:07 -<==    Updates: 1
2019-03-27 12:39:07 -请求地址 : http://localhost:8081/main
2019-03-27 12:39:07 -HTTP METHOD : GET
2019-03-27 12:39:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-27 12:39:07 -参数 : []
2019-03-27 12:39:07 -耗时 : 1
2019-03-27 12:39:07 -返回值 : main
2019-03-27 12:39:07 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-27 12:39:07 -HTTP METHOD : GET
2019-03-27 12:39:07 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-27 12:39:07 -参数 : []
2019-03-27 12:39:07 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-27 12:39:07 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-27 12:39:07 -<==      Total: 0
2019-03-27 12:39:07 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-27 12:39:07 -==> Parameters: 1(Long), 0(String)
2019-03-27 12:39:07 -<==      Total: 1
2019-03-27 12:39:07 -耗时 : 78
2019-03-27 12:39:07 -返回值 : com.bootdo.common.utils.PageUtils@22fd741
2019-03-27 12:39:07 -请求地址 : http://localhost:8081/main
2019-03-27 12:39:07 -HTTP METHOD : GET
2019-03-27 12:39:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-27 12:39:07 -参数 : []
2019-03-27 12:39:07 -耗时 : 0
2019-03-27 12:39:07 -返回值 : main
2019-03-27 12:39:18 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-27 12:39:18 -==> Parameters: 1(Long)
2019-03-27 12:39:19 -<==      Total: 90
2019-03-27 12:39:19 -请求地址 : http://localhost:8081/water/water
2019-03-27 12:39:19 -HTTP METHOD : GET
2019-03-27 12:39:19 -CLASS_METHOD : com.bootdo.water.controller.WaterController.Water
2019-03-27 12:39:19 -参数 : []
2019-03-27 12:39:19 -耗时 : 1
2019-03-27 12:39:19 -返回值 : water/water/water
2019-03-27 12:39:19 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-27 12:39:19 -HTTP METHOD : GET
2019-03-27 12:39:19 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 12:39:19 -参数 : [userType]
2019-03-27 12:39:19 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 12:39:19 -==> Parameters: userType(String)
2019-03-27 12:39:19 -<==      Total: 2
2019-03-27 12:39:19 -耗时 : 27
2019-03-27 12:39:19 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 12:39:19 -请求地址 : http://localhost:8081/water/water/list
2019-03-27 12:39:19 -HTTP METHOD : GET
2019-03-27 12:39:19 -CLASS_METHOD : com.bootdo.water.controller.WaterController.list
2019-03-27 12:39:19 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}]
2019-03-27 12:39:19 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_cost`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water order by id asc limit ?, ? 
2019-03-27 12:39:19 -==> Parameters: 0(Integer), 3(Integer)
2019-03-27 12:39:19 -<==      Total: 3
2019-03-27 12:39:19 -==>  Preparing: select count(*) from water 
2019-03-27 12:39:19 -==> Parameters: 
2019-03-27 12:39:19 -<==      Total: 1
2019-03-27 12:39:19 -耗时 : 68
2019-03-27 12:39:19 -返回值 : com.bootdo.common.utils.PageUtils@588bf807
2019-03-27 12:39:22 -请求地址 : http://localhost:8081/water/water/edit/1
2019-03-27 12:39:22 -HTTP METHOD : GET
2019-03-27 12:39:22 -CLASS_METHOD : com.bootdo.water.controller.WaterController.edit
2019-03-27 12:39:22 -参数 : [1, {}]
2019-03-27 12:39:22 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_cost`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water where id = ? 
2019-03-27 12:39:22 -==> Parameters: 1(Long)
2019-03-27 12:39:22 -<==      Total: 1
2019-03-27 12:39:22 -耗时 : 13
2019-03-27 12:39:22 -返回值 : water/water/edit
2019-03-27 12:39:22 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-27 12:39:22 -HTTP METHOD : GET
2019-03-27 12:39:22 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 12:39:22 -参数 : [userType]
2019-03-27 12:39:22 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 12:39:22 -==> Parameters: userType(String)
2019-03-27 12:39:22 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-03-27 12:39:22 -HTTP METHOD : GET
2019-03-27 12:39:22 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 12:39:22 -参数 : [waterType]
2019-03-27 12:39:22 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-03-27 12:39:22 -HTTP METHOD : GET
2019-03-27 12:39:22 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 12:39:22 -参数 : [userState]
2019-03-27 12:39:22 -<==      Total: 2
2019-03-27 12:39:22 -耗时 : 7
2019-03-27 12:39:22 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 12:39:22 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 12:39:22 -==> Parameters: waterType(String)
2019-03-27 12:39:22 -<==      Total: 6
2019-03-27 12:39:22 -耗时 : 11
2019-03-27 12:39:22 -返回值 : [DictDO{id=132, name='特殊水费4', value='5', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=131, name='特殊水费3', value='4', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=130, name='特殊水费2', value='3', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=129, name='特殊水费1', value='2', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=128, name='民用水', value='1', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=127, name='商业水', value='0', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 12:39:22 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 12:39:22 -==> Parameters: userState(String)
2019-03-27 12:39:22 -<==      Total: 2
2019-03-27 12:39:22 -耗时 : 17
2019-03-27 12:39:22 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 12:39:27 -请求地址 : http://localhost:8081/water/water/update
2019-03-27 12:39:27 -HTTP METHOD : POST
2019-03-27 12:39:27 -CLASS_METHOD : com.bootdo.water.controller.WaterController.update
2019-03-27 12:39:27 -参数 : [com.bootdo.water.domain.WaterDO@13f44654]
2019-03-27 12:39:27 -==>  Preparing: update water SET `user_id` = ?, `user_name` = ?, `user_type` = ?, `user_org` = ?, `user_tell` = ?, `user_state` = ?, `wages_id` = ?, `water_type` = ?, `water_price` = ?, `water_cost` = ?, `water_sum` = ?, `create_by` = ?, `update_time` = ?, `update_by` = ?, `remark` = ? where id = ? 
2019-03-27 12:39:27 -==> Parameters: 1-001(String), 姜海龙(String), A(String), 2(String), 16716675678(String), 1(String), 10005(String), 1(String), 15.00(BigDecimal), 15.00(BigDecimal), 100.00(BigDecimal), 1(Long), 2019-03-27 12:39:27.219(Timestamp), 1(Long), (String), 1(Long)
2019-03-27 12:39:27 -<==    Updates: 1
2019-03-27 12:39:27 -耗时 : 129
2019-03-27 12:39:27 -返回值 : {msg=操作成功, code=0}
2019-03-27 12:39:27 -请求地址 : http://localhost:8081/water/water/list
2019-03-27 12:39:27 -HTTP METHOD : GET
2019-03-27 12:39:27 -CLASS_METHOD : com.bootdo.water.controller.WaterController.list
2019-03-27 12:39:27 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=, queryType=2}]
2019-03-27 12:39:27 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_cost`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water WHERE `water_sum` < 0 order by id asc limit ?, ? 
2019-03-27 12:39:27 -==> Parameters: 0(Integer), 3(Integer)
2019-03-27 12:39:27 -<==      Total: 2
2019-03-27 12:39:27 -==>  Preparing: select count(*) from water WHERE `water_sum` < 0 
2019-03-27 12:39:27 -==> Parameters: 
2019-03-27 12:39:27 -<==      Total: 1
2019-03-27 12:39:27 -耗时 : 27
2019-03-27 12:39:27 -返回值 : com.bootdo.common.utils.PageUtils@e5cf809
2019-03-27 12:39:31 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 5]
2019-03-27 12:39:34 -请求地址 : http://localhost:8081/water/water/edit/3
2019-03-27 12:39:34 -HTTP METHOD : GET
2019-03-27 12:39:34 -CLASS_METHOD : com.bootdo.water.controller.WaterController.edit
2019-03-27 12:39:34 -参数 : [3, {}]
2019-03-27 12:39:34 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_cost`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water where id = ? 
2019-03-27 12:39:34 -==> Parameters: 3(Long)
2019-03-27 12:39:34 -<==      Total: 1
2019-03-27 12:39:34 -耗时 : 10
2019-03-27 12:39:34 -返回值 : water/water/edit
2019-03-27 12:39:35 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-27 12:39:35 -HTTP METHOD : GET
2019-03-27 12:39:35 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 12:39:35 -参数 : [userType]
2019-03-27 12:39:35 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 12:39:35 -==> Parameters: userType(String)
2019-03-27 12:39:35 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-03-27 12:39:35 -HTTP METHOD : GET
2019-03-27 12:39:35 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 12:39:35 -参数 : [userState]
2019-03-27 12:39:35 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 12:39:35 -==> Parameters: userState(String)
2019-03-27 12:39:35 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-03-27 12:39:35 -HTTP METHOD : GET
2019-03-27 12:39:35 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 12:39:35 -参数 : [waterType]
2019-03-27 12:39:35 -<==      Total: 2
2019-03-27 12:39:35 -耗时 : 6
2019-03-27 12:39:35 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 12:39:35 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 12:39:35 -<==      Total: 2
2019-03-27 12:39:35 -耗时 : 10
2019-03-27 12:39:35 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 12:39:35 -==> Parameters: waterType(String)
2019-03-27 12:39:35 -<==      Total: 6
2019-03-27 12:39:35 -耗时 : 28
2019-03-27 12:39:35 -返回值 : [DictDO{id=132, name='特殊水费4', value='5', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=131, name='特殊水费3', value='4', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=130, name='特殊水费2', value='3', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=129, name='特殊水费1', value='2', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=128, name='民用水', value='1', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=127, name='商业水', value='0', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 12:39:39 -请求地址 : http://localhost:8081/water/water/edit/3
2019-03-27 12:39:39 -HTTP METHOD : GET
2019-03-27 12:39:39 -CLASS_METHOD : com.bootdo.water.controller.WaterController.edit
2019-03-27 12:39:39 -参数 : [3, {}]
2019-03-27 12:39:39 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_cost`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water where id = ? 
2019-03-27 12:39:39 -==> Parameters: 3(Long)
2019-03-27 12:39:39 -<==      Total: 1
2019-03-27 12:39:39 -耗时 : 8
2019-03-27 12:39:39 -返回值 : water/water/edit
2019-03-27 12:39:40 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-27 12:39:40 -HTTP METHOD : GET
2019-03-27 12:39:40 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 12:39:40 -参数 : [userType]
2019-03-27 12:39:40 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-03-27 12:39:40 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-03-27 12:39:40 -HTTP METHOD : GET
2019-03-27 12:39:40 -HTTP METHOD : GET
2019-03-27 12:39:40 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 12:39:40 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 12:39:40 -参数 : [userState]
2019-03-27 12:39:40 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 12:39:40 -参数 : [waterType]
2019-03-27 12:39:40 -==> Parameters: userType(String)
2019-03-27 12:39:40 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 12:39:40 -==> Parameters: waterType(String)
2019-03-27 12:39:40 -<==      Total: 2
2019-03-27 12:39:40 -耗时 : 4
2019-03-27 12:39:40 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 12:39:40 -<==      Total: 6
2019-03-27 12:39:40 -耗时 : 8
2019-03-27 12:39:40 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 12:39:40 -返回值 : [DictDO{id=132, name='特殊水费4', value='5', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=131, name='特殊水费3', value='4', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=130, name='特殊水费2', value='3', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=129, name='特殊水费1', value='2', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=128, name='民用水', value='1', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=127, name='商业水', value='0', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 12:39:40 -==> Parameters: userState(String)
2019-03-27 12:39:40 -<==      Total: 2
2019-03-27 12:39:40 -耗时 : 20
2019-03-27 12:39:40 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 12:39:42 -请求地址 : http://localhost:8081/water/water/update
2019-03-27 12:39:42 -HTTP METHOD : POST
2019-03-27 12:39:42 -CLASS_METHOD : com.bootdo.water.controller.WaterController.update
2019-03-27 12:39:42 -参数 : [com.bootdo.water.domain.WaterDO@af88b57]
2019-03-27 12:39:42 -==>  Preparing: update water SET `user_id` = ?, `user_name` = ?, `user_type` = ?, `user_org` = ?, `user_tell` = ?, `user_state` = ?, `wages_id` = ?, `water_type` = ?, `water_price` = ?, `water_cost` = ?, `water_sum` = ?, `create_by` = ?, `update_time` = ?, `update_by` = ?, `remark` = ? where id = ? 
2019-03-27 12:39:42 -==> Parameters: 1-0005(String), 阿士大(String), A(String), 2(String), (String), 1(String), 10005(String), 1(String), 1.00(BigDecimal), 1.00(BigDecimal), -5.00(BigDecimal), 1(Long), 2019-03-27 12:39:42.459(Timestamp), 1(Long), (String), 3(Long)
2019-03-27 12:39:42 -<==    Updates: 1
2019-03-27 12:39:42 -耗时 : 132
2019-03-27 12:39:42 -返回值 : {msg=操作成功, code=0}
2019-03-27 12:39:42 -请求地址 : http://localhost:8081/water/water/list
2019-03-27 12:39:42 -HTTP METHOD : GET
2019-03-27 12:39:42 -CLASS_METHOD : com.bootdo.water.controller.WaterController.list
2019-03-27 12:39:42 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=, queryType=2}]
2019-03-27 12:39:42 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_cost`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water WHERE `water_sum` < 0 order by id asc limit ?, ? 
2019-03-27 12:39:42 -==> Parameters: 0(Integer), 3(Integer)
2019-03-27 12:39:42 -<==      Total: 2
2019-03-27 12:39:42 -==>  Preparing: select count(*) from water WHERE `water_sum` < 0 
2019-03-27 12:39:42 -==> Parameters: 
2019-03-27 12:39:42 -<==      Total: 1
2019-03-27 12:39:42 -耗时 : 17
2019-03-27 12:39:42 -返回值 : com.bootdo.common.utils.PageUtils@1cb52f3f
2019-03-27 12:39:46 -请求地址 : http://localhost:8081/index
2019-03-27 12:39:46 -HTTP METHOD : GET
2019-03-27 12:39:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-27 12:39:46 -参数 : [{}]
2019-03-27 12:39:46 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-27 12:39:46 -==> Parameters: 1(Long)
2019-03-27 12:39:47 -<==      Total: 46
2019-03-27 12:39:47 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-27 12:39:47 -==> Parameters: 138(Long)
2019-03-27 12:39:47 -<==      Total: 1
2019-03-27 12:39:47 -耗时 : 149
2019-03-27 12:39:47 -返回值 : index_v1
2019-03-27 12:39:47 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-27 12:39:47 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 149(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-27 12:39:47.088(Timestamp)
2019-03-27 12:39:47 -<==    Updates: 1
2019-03-27 12:39:47 -请求地址 : http://localhost:8081/main
2019-03-27 12:39:47 -HTTP METHOD : GET
2019-03-27 12:39:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-27 12:39:47 -参数 : []
2019-03-27 12:39:47 -耗时 : 1
2019-03-27 12:39:47 -返回值 : main
2019-03-27 12:39:47 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-27 12:39:47 -HTTP METHOD : GET
2019-03-27 12:39:47 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-27 12:39:47 -参数 : []
2019-03-27 12:39:47 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-27 12:39:47 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-27 12:39:47 -<==      Total: 0
2019-03-27 12:39:47 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-27 12:39:47 -==> Parameters: 1(Long), 0(String)
2019-03-27 12:39:47 -<==      Total: 1
2019-03-27 12:39:47 -耗时 : 10
2019-03-27 12:39:47 -返回值 : com.bootdo.common.utils.PageUtils@799a9d3c
2019-03-27 12:39:47 -请求地址 : http://localhost:8081/main
2019-03-27 12:39:47 -HTTP METHOD : GET
2019-03-27 12:39:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-27 12:39:47 -参数 : []
2019-03-27 12:39:47 -耗时 : 0
2019-03-27 12:39:47 -返回值 : main
2019-03-27 12:39:49 -请求地址 : http://localhost:8081/water/water
2019-03-27 12:39:49 -HTTP METHOD : GET
2019-03-27 12:39:49 -CLASS_METHOD : com.bootdo.water.controller.WaterController.Water
2019-03-27 12:39:49 -参数 : []
2019-03-27 12:39:49 -耗时 : 1
2019-03-27 12:39:49 -返回值 : water/water/water
2019-03-27 12:39:49 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-27 12:39:49 -HTTP METHOD : GET
2019-03-27 12:39:49 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 12:39:49 -参数 : [userType]
2019-03-27 12:39:49 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 12:39:49 -==> Parameters: userType(String)
2019-03-27 12:39:49 -<==      Total: 2
2019-03-27 12:39:49 -耗时 : 5
2019-03-27 12:39:49 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 12:39:49 -请求地址 : http://localhost:8081/water/water/list
2019-03-27 12:39:49 -HTTP METHOD : GET
2019-03-27 12:39:49 -CLASS_METHOD : com.bootdo.water.controller.WaterController.list
2019-03-27 12:39:49 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}]
2019-03-27 12:39:49 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_cost`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water order by id asc limit ?, ? 
2019-03-27 12:39:49 -==> Parameters: 0(Integer), 3(Integer)
2019-03-27 12:39:49 -<==      Total: 3
2019-03-27 12:39:49 -==>  Preparing: select count(*) from water 
2019-03-27 12:39:49 -==> Parameters: 
2019-03-27 12:39:49 -<==      Total: 1
2019-03-27 12:39:49 -耗时 : 12
2019-03-27 12:39:49 -返回值 : com.bootdo.common.utils.PageUtils@62ac37ec
2019-03-27 12:39:59 -请求地址 : http://localhost:8081/water/water/edit/2
2019-03-27 12:39:59 -HTTP METHOD : GET
2019-03-27 12:39:59 -CLASS_METHOD : com.bootdo.water.controller.WaterController.edit
2019-03-27 12:39:59 -参数 : [2, {}]
2019-03-27 12:39:59 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_cost`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water where id = ? 
2019-03-27 12:39:59 -==> Parameters: 2(Long)
2019-03-27 12:39:59 -<==      Total: 1
2019-03-27 12:39:59 -耗时 : 11
2019-03-27 12:39:59 -返回值 : water/water/edit
2019-03-27 12:39:59 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-27 12:39:59 -HTTP METHOD : GET
2019-03-27 12:39:59 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 12:39:59 -参数 : [userType]
2019-03-27 12:39:59 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 12:39:59 -==> Parameters: userType(String)
2019-03-27 12:39:59 -<==      Total: 2
2019-03-27 12:39:59 -耗时 : 5
2019-03-27 12:39:59 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 12:39:59 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-03-27 12:39:59 -HTTP METHOD : GET
2019-03-27 12:39:59 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 12:39:59 -参数 : [waterType]
2019-03-27 12:39:59 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-03-27 12:39:59 -HTTP METHOD : GET
2019-03-27 12:39:59 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 12:39:59 -参数 : [userState]
2019-03-27 12:39:59 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 12:39:59 -==> Parameters: userState(String)
2019-03-27 12:39:59 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 12:39:59 -<==      Total: 2
2019-03-27 12:39:59 -耗时 : 4
2019-03-27 12:39:59 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 12:40:00 -==> Parameters: waterType(String)
2019-03-27 12:40:00 -<==      Total: 6
2019-03-27 12:40:00 -耗时 : 58
2019-03-27 12:40:00 -返回值 : [DictDO{id=132, name='特殊水费4', value='5', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=131, name='特殊水费3', value='4', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=130, name='特殊水费2', value='3', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=129, name='特殊水费1', value='2', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=128, name='民用水', value='1', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=127, name='商业水', value='0', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 12:40:03 -请求地址 : http://localhost:8081/water/water/update
2019-03-27 12:40:03 -HTTP METHOD : POST
2019-03-27 12:40:03 -CLASS_METHOD : com.bootdo.water.controller.WaterController.update
2019-03-27 12:40:03 -参数 : [com.bootdo.water.domain.WaterDO@578e5547]
2019-03-27 12:40:03 -==>  Preparing: update water SET `user_id` = ?, `user_name` = ?, `user_type` = ?, `user_org` = ?, `user_tell` = ?, `user_state` = ?, `wages_id` = ?, `water_type` = ?, `water_price` = ?, `water_cost` = ?, `water_sum` = ?, `create_by` = ?, `update_time` = ?, `update_by` = ?, `remark` = ? where id = ? 
2019-03-27 12:40:03 -==> Parameters: 1-0003(String), 阿萨德·(String), B(String), 3(String), (String), 1(String), 10005(String), 1(String), 1.00(BigDecimal), 1.00(BigDecimal), 1.00(BigDecimal), 1(Long), 2019-03-27 12:40:03.406(Timestamp), 1(Long), (String), 2(Long)
2019-03-27 12:40:03 -<==    Updates: 1
2019-03-27 12:40:03 -耗时 : 167
2019-03-27 12:40:03 -返回值 : {msg=操作成功, code=0}
2019-03-27 12:40:03 -请求地址 : http://localhost:8081/water/water/list
2019-03-27 12:40:03 -HTTP METHOD : GET
2019-03-27 12:40:03 -CLASS_METHOD : com.bootdo.water.controller.WaterController.list
2019-03-27 12:40:03 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=, queryType=2}]
2019-03-27 12:40:03 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_cost`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water WHERE `water_sum` < 0 order by id asc limit ?, ? 
2019-03-27 12:40:03 -==> Parameters: 0(Integer), 3(Integer)
2019-03-27 12:40:03 -<==      Total: 2
2019-03-27 12:40:03 -==>  Preparing: select count(*) from water WHERE `water_sum` < 0 
2019-03-27 12:40:03 -==> Parameters: 
2019-03-27 12:40:03 -<==      Total: 1
2019-03-27 12:40:03 -耗时 : 20
2019-03-27 12:40:03 -返回值 : com.bootdo.common.utils.PageUtils@2c6f7233
2019-03-27 12:40:23 -请求地址 : http://localhost:8081/index
2019-03-27 12:40:23 -HTTP METHOD : GET
2019-03-27 12:40:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-27 12:40:23 -参数 : [{}]
2019-03-27 12:40:23 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-27 12:40:23 -==> Parameters: 1(Long)
2019-03-27 12:40:23 -<==      Total: 46
2019-03-27 12:40:23 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-27 12:40:23 -==> Parameters: 138(Long)
2019-03-27 12:40:23 -<==      Total: 1
2019-03-27 12:40:23 -耗时 : 94
2019-03-27 12:40:23 -返回值 : index_v1
2019-03-27 12:40:23 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-27 12:40:23 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 94(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-27 12:40:23.298(Timestamp)
2019-03-27 12:40:23 -<==    Updates: 1
2019-03-27 12:40:23 -请求地址 : http://localhost:8081/main
2019-03-27 12:40:23 -HTTP METHOD : GET
2019-03-27 12:40:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-27 12:40:23 -参数 : []
2019-03-27 12:40:23 -耗时 : 1
2019-03-27 12:40:23 -返回值 : main
2019-03-27 12:40:23 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-27 12:40:23 -HTTP METHOD : GET
2019-03-27 12:40:23 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-27 12:40:23 -参数 : []
2019-03-27 12:40:23 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-27 12:40:23 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-27 12:40:23 -<==      Total: 0
2019-03-27 12:40:23 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-27 12:40:23 -==> Parameters: 1(Long), 0(String)
2019-03-27 12:40:23 -<==      Total: 1
2019-03-27 12:40:23 -耗时 : 6
2019-03-27 12:40:23 -返回值 : com.bootdo.common.utils.PageUtils@344b3f9e
2019-03-27 12:40:23 -请求地址 : http://localhost:8081/main
2019-03-27 12:40:23 -HTTP METHOD : GET
2019-03-27 12:40:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-27 12:40:23 -参数 : []
2019-03-27 12:40:23 -耗时 : 0
2019-03-27 12:40:23 -返回值 : main
2019-03-27 12:40:25 -请求地址 : http://localhost:8081/water/water
2019-03-27 12:40:25 -HTTP METHOD : GET
2019-03-27 12:40:25 -CLASS_METHOD : com.bootdo.water.controller.WaterController.Water
2019-03-27 12:40:25 -参数 : []
2019-03-27 12:40:25 -耗时 : 1
2019-03-27 12:40:25 -返回值 : water/water/water
2019-03-27 12:40:25 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-27 12:40:25 -HTTP METHOD : GET
2019-03-27 12:40:25 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 12:40:25 -参数 : [userType]
2019-03-27 12:40:25 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 12:40:25 -==> Parameters: userType(String)
2019-03-27 12:40:25 -<==      Total: 2
2019-03-27 12:40:25 -耗时 : 4
2019-03-27 12:40:25 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 12:40:25 -请求地址 : http://localhost:8081/water/water/list
2019-03-27 12:40:25 -HTTP METHOD : GET
2019-03-27 12:40:25 -CLASS_METHOD : com.bootdo.water.controller.WaterController.list
2019-03-27 12:40:25 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}]
2019-03-27 12:40:25 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_cost`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water order by id asc limit ?, ? 
2019-03-27 12:40:25 -==> Parameters: 0(Integer), 3(Integer)
2019-03-27 12:40:25 -<==      Total: 3
2019-03-27 12:40:25 -==>  Preparing: select count(*) from water 
2019-03-27 12:40:25 -==> Parameters: 
2019-03-27 12:40:25 -<==      Total: 1
2019-03-27 12:40:25 -耗时 : 10
2019-03-27 12:40:25 -返回值 : com.bootdo.common.utils.PageUtils@5ea47ee1
2019-03-27 12:40:59 -请求地址 : http://localhost:8081/heat/heat
2019-03-27 12:40:59 -HTTP METHOD : GET
2019-03-27 12:40:59 -CLASS_METHOD : com.bootdo.heat.controller.HeatController.Heat
2019-03-27 12:40:59 -参数 : []
2019-03-27 12:40:59 -耗时 : 1
2019-03-27 12:40:59 -返回值 : heat/heat/heat
2019-03-27 12:40:59 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-27 12:40:59 -HTTP METHOD : GET
2019-03-27 12:40:59 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 12:40:59 -参数 : [userType]
2019-03-27 12:40:59 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 12:40:59 -==> Parameters: userType(String)
2019-03-27 12:40:59 -<==      Total: 2
2019-03-27 12:40:59 -耗时 : 5
2019-03-27 12:40:59 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 12:40:59 -请求地址 : http://localhost:8081/heat/heat/list
2019-03-27 12:40:59 -HTTP METHOD : GET
2019-03-27 12:40:59 -CLASS_METHOD : com.bootdo.heat.controller.HeatController.list
2019-03-27 12:40:59 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}]
2019-03-27 12:40:59 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`heat_type`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat order by id asc limit ?, ? 
2019-03-27 12:40:59 -==> Parameters: 0(Integer), 3(Integer)
2019-03-27 12:40:59 -<==      Total: 3
2019-03-27 12:40:59 -==>  Preparing: select count(*) from heat 
2019-03-27 12:40:59 -==> Parameters: 
2019-03-27 12:40:59 -<==      Total: 1
2019-03-27 12:40:59 -耗时 : 52
2019-03-27 12:40:59 -返回值 : com.bootdo.common.utils.PageUtils@31984762
2019-03-27 12:41:02 -请求地址 : http://localhost:8081/heat/heat/edit/1
2019-03-27 12:41:02 -HTTP METHOD : GET
2019-03-27 12:41:02 -CLASS_METHOD : com.bootdo.heat.controller.HeatController.edit
2019-03-27 12:41:02 -参数 : [1, {}]
2019-03-27 12:41:02 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`heat_type`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat where id = ? 
2019-03-27 12:41:02 -==> Parameters: 1(Integer)
2019-03-27 12:41:02 -<==      Total: 1
2019-03-27 12:41:02 -耗时 : 6
2019-03-27 12:41:02 -返回值 : heat/heat/edit
2019-03-27 12:41:02 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-27 12:41:02 -HTTP METHOD : GET
2019-03-27 12:41:02 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 12:41:02 -参数 : [userType]
2019-03-27 12:41:02 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 12:41:02 -==> Parameters: userType(String)
2019-03-27 12:41:02 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-03-27 12:41:02 -HTTP METHOD : GET
2019-03-27 12:41:02 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 12:41:02 -参数 : [heatType]
2019-03-27 12:41:02 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 12:41:02 -==> Parameters: heatType(String)
2019-03-27 12:41:02 -<==      Total: 2
2019-03-27 12:41:02 -耗时 : 10
2019-03-27 12:41:02 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 12:41:02 -<==      Total: 5
2019-03-27 12:41:02 -耗时 : 6
2019-03-27 12:41:02 -返回值 : [DictDO{id=137, name='特殊暖费1', value='4', type='heatType', description='暖气类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=136, name='工业非盈利', value='3', type='heatType', description='暖气类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=135, name='工业盈利', value='2', type='heatType', description='暖气类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=134, name='民用暖', value='1', type='heatType', description='暖气类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=133, name='商业暖', value='0', type='heatType', description='暖气类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 12:41:02 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-03-27 12:41:02 -HTTP METHOD : GET
2019-03-27 12:41:02 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 12:41:02 -参数 : [userState]
2019-03-27 12:41:02 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 12:41:02 -==> Parameters: userState(String)
2019-03-27 12:41:02 -<==      Total: 2
2019-03-27 12:41:02 -耗时 : 6
2019-03-27 12:41:02 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 12:45:39 -Starting BootdoApplication on ZJZL-20180906VX with PID 9568 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-27 12:45:39 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-27 12:45:39 -The following profiles are active: dev
2019-03-27 12:45:39 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@53812a9b: startup date [Wed Mar 27 12:45:39 CST 2019]; root of context hierarchy
2019-03-27 12:45:43 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-27 12:45:46 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d479268c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-27 12:45:46 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$c6d25533] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-27 12:45:47 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-27 12:45:48 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-27 12:45:48 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-27 12:45:48 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-27 12:45:48 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-27 12:45:48 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-27 12:45:48 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-27 12:45:48 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-27 12:45:48 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-27 12:45:49 -Tomcat initialized with port(s): 8081 (http)
2019-03-27 12:45:49 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-27 12:45:49 -Starting service [Tomcat]
2019-03-27 12:45:49 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-27 12:45:49 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-27 12:45:50 -Initializing Spring embedded WebApplicationContext
2019-03-27 12:45:50 -Root WebApplicationContext: initialization completed in 10351 ms
2019-03-27 12:45:51 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-27 12:45:51 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-27 12:45:51 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-27 12:45:51 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-27 12:45:51 -Filter xssFilter was not registered (disabled)
2019-03-27 12:45:51 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-27 12:45:51 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-27 12:45:51 -Servlet statViewServlet mapped to [/druid/*]
2019-03-27 12:45:51 -Servlet dispatcherServlet mapped to [/]
2019-03-27 12:45:54 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@53812a9b: startup date [Wed Mar 27 12:45:39 CST 2019]; root of context hierarchy
2019-03-27 12:45:55 -Using default implementation for ThreadExecutor
2019-03-27 12:45:55 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-27 12:45:55 -Quartz Scheduler v.2.2.1 created.
2019-03-27 12:45:55 -RAMJobStore initialized.
2019-03-27 12:45:55 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-27 12:45:55 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-27 12:45:55 -Quartz scheduler version: 2.2.1
2019-03-27 12:45:55 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@5030997b
2019-03-27 12:45:56 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-27 12:45:56 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-27 12:46:00 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-03-27 12:46:00 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-27 12:46:00 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-27 12:46:00 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-27 12:46:00 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-27 12:46:00 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-27 12:46:00 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-27 12:46:00 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-27 12:46:00 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-27 12:46:00 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-27 12:46:00 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-27 12:46:00 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 12:46:00 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-27 12:46:00 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-27 12:46:00 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 12:46:00 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-27 12:46:00 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-27 12:46:00 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-27 12:46:00 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-27 12:46:00 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-27 12:46:00 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-27 12:46:00 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-27 12:46:00 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 12:46:00 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-27 12:46:00 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-27 12:46:00 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 12:46:00 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-27 12:46:00 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-27 12:46:00 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 12:46:00 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-27 12:46:00 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-27 12:46:00 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-27 12:46:00 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-27 12:46:00 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-27 12:46:00 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-27 12:46:00 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-27 12:46:00 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-27 12:46:00 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-27 12:46:00 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 12:46:00 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-27 12:46:00 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-27 12:46:00 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 12:46:00 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-27 12:46:00 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-27 12:46:00 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-27 12:46:00 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-27 12:46:00 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 12:46:00 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-27 12:46:00 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-03-27 12:46:00 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-27 12:46:00 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-27 12:46:00 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-27 12:46:00 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-27 12:46:00 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-27 12:46:00 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-27 12:46:00 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-27 12:46:00 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-27 12:46:00 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-27 12:46:00 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-27 12:46:00 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 12:46:00 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-27 12:46:00 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-03-27 12:46:00 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-27 12:46:00 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-27 12:46:00 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-27 12:46:00 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-27 12:46:00 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-27 12:46:00 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-27 12:46:00 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 12:46:00 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-03-27 12:46:00 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 12:46:00 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-27 12:46:00 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-27 12:46:00 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-27 12:46:00 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-27 12:46:00 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-27 12:46:00 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-27 12:46:00 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-27 12:46:00 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 12:46:00 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-27 12:46:00 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-27 12:46:00 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-27 12:46:00 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-27 12:46:00 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-27 12:46:00 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-27 12:46:00 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-27 12:46:00 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-27 12:46:00 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-27 12:46:00 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-27 12:46:00 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 12:46:00 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-27 12:46:00 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-27 12:46:00 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 12:46:00 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-03-27 12:46:00 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-27 12:46:00 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-03-27 12:46:00 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-27 12:46:00 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-27 12:46:00 -Mapped "{[/moneyList/moneyList/LikeName],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.LikeName(org.springframework.ui.Model)
2019-03-27 12:46:00 -Mapped "{[/moneyList/moneyList/UserList],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-27 12:46:00 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-27 12:46:00 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-27 12:46:00 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-27 12:46:00 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-27 12:46:00 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 12:46:00 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-27 12:46:00 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 12:46:00 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-27 12:46:00 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-27 12:46:00 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-27 12:46:00 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-27 12:46:00 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-27 12:46:00 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-27 12:46:00 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 12:46:00 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-27 12:46:00 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 12:46:00 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-27 12:46:00 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-27 12:46:00 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-27 12:46:00 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-27 12:46:00 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-27 12:46:00 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-27 12:46:00 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 12:46:00 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-27 12:46:00 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 12:46:00 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-27 12:46:00 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-27 12:46:00 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-27 12:46:00 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-27 12:46:00 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-27 12:46:00 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-27 12:46:00 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-27 12:46:00 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 12:46:00 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-27 12:46:00 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-27 12:46:00 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 12:46:00 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-27 12:46:00 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-27 12:46:00 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 12:46:00 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-27 12:46:00 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-27 12:46:00 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-27 12:46:00 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-27 12:46:00 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 12:46:00 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-27 12:46:00 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 12:46:00 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-27 12:46:00 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 12:46:00 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-27 12:46:00 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-27 12:46:00 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-27 12:46:00 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-27 12:46:00 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-27 12:46:00 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-27 12:46:00 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-27 12:46:00 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-27 12:46:00 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 12:46:00 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-27 12:46:00 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-27 12:46:00 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-27 12:46:00 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-27 12:46:00 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-27 12:46:00 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-27 12:46:00 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-27 12:46:00 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-27 12:46:00 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-27 12:46:00 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-27 12:46:00 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-27 12:46:00 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-27 12:46:00 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 12:46:00 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-27 12:46:00 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-27 12:46:00 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-27 12:46:00 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-27 12:46:00 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-27 12:46:00 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-27 12:46:00 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-27 12:46:00 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-27 12:46:00 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-27 12:46:00 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-27 12:46:00 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-27 12:46:00 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-27 12:46:00 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 12:46:00 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-27 12:46:00 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-27 12:46:00 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-27 12:46:00 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-27 12:46:00 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 12:46:00 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-27 12:46:00 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-27 12:46:00 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-27 12:46:00 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 12:46:00 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-27 12:46:00 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-27 12:46:00 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-27 12:46:00 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-27 12:46:00 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-27 12:46:00 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-27 12:46:00 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-27 12:46:00 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-27 12:46:00 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-27 12:46:00 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-27 12:46:00 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-27 12:46:00 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-27 12:46:00 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-27 12:46:00 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-27 12:46:00 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-27 12:46:00 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-27 12:46:00 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-27 12:46:00 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 12:46:00 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-27 12:46:00 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-27 12:46:00 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 12:46:00 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 12:46:00 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-27 12:46:00 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-27 12:46:00 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-27 12:46:00 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-27 12:46:00 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-27 12:46:00 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-27 12:46:00 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-27 12:46:00 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 12:46:00 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-27 12:46:00 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 12:46:00 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-27 12:46:00 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-03-27 12:46:00 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-27 12:46:00 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-27 12:46:00 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-03-27 12:46:00 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-27 12:46:00 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-27 12:46:00 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-27 12:46:00 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-27 12:46:00 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-27 12:46:01 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-27 12:46:01 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-27 12:46:01 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-27 12:46:02 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@53812a9b: startup date [Wed Mar 27 12:45:39 CST 2019]; root of context hierarchy
2019-03-27 12:46:02 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-27 12:46:02 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-27 12:46:02 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-27 12:46:02 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-27 12:46:02 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-27 12:46:05 -Registering beans for JMX exposure on startup
2019-03-27 12:46:05 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-27 12:46:05 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-27 12:46:05 -Starting beans in phase 2147483647
2019-03-27 12:46:05 -Context refreshed
2019-03-27 12:46:05 -Found 1 custom documentation plugin(s)
2019-03-27 12:46:05 -Scanning for api listing references
2019-03-27 12:46:05 -Generating unique operation named: removeUsingPOST_1
2019-03-27 12:46:06 -Generating unique operation named: addUsingGET_1
2019-03-27 12:46:06 -Generating unique operation named: editUsingGET_1
2019-03-27 12:46:06 -Generating unique operation named: listUsingGET_1
2019-03-27 12:46:06 -Generating unique operation named: removeUsingPOST_2
2019-03-27 12:46:06 -Generating unique operation named: removeUsingPOST_3
2019-03-27 12:46:06 -Generating unique operation named: saveUsingPOST_1
2019-03-27 12:46:06 -Generating unique operation named: updateUsingGET_1
2019-03-27 12:46:06 -Generating unique operation named: updateUsingHEAD_1
2019-03-27 12:46:06 -Generating unique operation named: updateUsingPOST_1
2019-03-27 12:46:06 -Generating unique operation named: updateUsingPUT_1
2019-03-27 12:46:06 -Generating unique operation named: updateUsingPATCH_1
2019-03-27 12:46:06 -Generating unique operation named: updateUsingDELETE_1
2019-03-27 12:46:06 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-27 12:46:06 -Generating unique operation named: updateUsingTRACE_1
2019-03-27 12:46:06 -Generating unique operation named: addUsingGET_2
2019-03-27 12:46:06 -Generating unique operation named: editUsingGET_2
2019-03-27 12:46:06 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-27 12:46:06 -Generating unique operation named: listUsingGET_2
2019-03-27 12:46:06 -Generating unique operation named: removeUsingPOST_4
2019-03-27 12:46:06 -Generating unique operation named: removeUsingPOST_5
2019-03-27 12:46:06 -Generating unique operation named: saveUsingPOST_2
2019-03-27 12:46:06 -Generating unique operation named: updateUsingPOST_2
2019-03-27 12:46:06 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-27 12:46:06 -Generating unique operation named: addUsingGET_3
2019-03-27 12:46:06 -Generating unique operation named: editUsingGET_3
2019-03-27 12:46:06 -Generating unique operation named: listUsingGET_3
2019-03-27 12:46:06 -Generating unique operation named: removeUsingPOST_6
2019-03-27 12:46:06 -Generating unique operation named: removeUsingPOST_7
2019-03-27 12:46:06 -Generating unique operation named: saveUsingPOST_3
2019-03-27 12:46:06 -Generating unique operation named: updateUsingGET_2
2019-03-27 12:46:06 -Generating unique operation named: updateUsingHEAD_2
2019-03-27 12:46:06 -Generating unique operation named: updateUsingPOST_3
2019-03-27 12:46:06 -Generating unique operation named: updateUsingPUT_2
2019-03-27 12:46:06 -Generating unique operation named: updateUsingPATCH_2
2019-03-27 12:46:06 -Generating unique operation named: updateUsingDELETE_2
2019-03-27 12:46:06 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-27 12:46:06 -Generating unique operation named: updateUsingTRACE_2
2019-03-27 12:46:06 -Generating unique operation named: addUsingGET_4
2019-03-27 12:46:06 -Generating unique operation named: editUsingGET_4
2019-03-27 12:46:06 -Generating unique operation named: listUsingGET_4
2019-03-27 12:46:06 -Generating unique operation named: removeUsingPOST_8
2019-03-27 12:46:06 -Generating unique operation named: removeUsingPOST_9
2019-03-27 12:46:06 -Generating unique operation named: saveUsingPOST_4
2019-03-27 12:46:06 -Generating unique operation named: updateUsingGET_3
2019-03-27 12:46:06 -Generating unique operation named: updateUsingHEAD_3
2019-03-27 12:46:06 -Generating unique operation named: updateUsingPOST_4
2019-03-27 12:46:06 -Generating unique operation named: updateUsingPUT_3
2019-03-27 12:46:06 -Generating unique operation named: updateUsingPATCH_3
2019-03-27 12:46:06 -Generating unique operation named: updateUsingDELETE_3
2019-03-27 12:46:06 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-27 12:46:06 -Generating unique operation named: updateUsingTRACE_3
2019-03-27 12:46:06 -Generating unique operation named: ElecUsingGET_1
2019-03-27 12:46:06 -Generating unique operation named: addUsingGET_5
2019-03-27 12:46:06 -Generating unique operation named: editUsingGET_5
2019-03-27 12:46:06 -Generating unique operation named: listUsingGET_5
2019-03-27 12:46:06 -Generating unique operation named: removeUsingPOST_10
2019-03-27 12:46:06 -Generating unique operation named: removeUsingPOST_11
2019-03-27 12:46:06 -Generating unique operation named: saveUsingPOST_5
2019-03-27 12:46:06 -Generating unique operation named: updateUsingGET_4
2019-03-27 12:46:06 -Generating unique operation named: updateUsingHEAD_4
2019-03-27 12:46:06 -Generating unique operation named: updateUsingPOST_5
2019-03-27 12:46:06 -Generating unique operation named: updateUsingPUT_4
2019-03-27 12:46:06 -Generating unique operation named: updateUsingPATCH_4
2019-03-27 12:46:06 -Generating unique operation named: updateUsingDELETE_4
2019-03-27 12:46:06 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-27 12:46:06 -Generating unique operation named: updateUsingTRACE_4
2019-03-27 12:46:07 -Generating unique operation named: editUsingGET_6
2019-03-27 12:46:07 -Generating unique operation named: listUsingGET_6
2019-03-27 12:46:07 -Generating unique operation named: updateUsingPOST_6
2019-03-27 12:46:07 -Generating unique operation named: addUsingGET_6
2019-03-27 12:46:07 -Generating unique operation named: editUsingGET_7
2019-03-27 12:46:07 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-27 12:46:07 -Generating unique operation named: listUsingGET_7
2019-03-27 12:46:07 -Generating unique operation named: removeUsingPOST_12
2019-03-27 12:46:07 -Generating unique operation named: removeUsingPOST_13
2019-03-27 12:46:07 -Generating unique operation named: saveUsingPOST_6
2019-03-27 12:46:07 -Generating unique operation named: updateUsingGET_5
2019-03-27 12:46:07 -Generating unique operation named: updateUsingHEAD_5
2019-03-27 12:46:07 -Generating unique operation named: updateUsingPOST_7
2019-03-27 12:46:07 -Generating unique operation named: updateUsingPUT_5
2019-03-27 12:46:07 -Generating unique operation named: updateUsingPATCH_5
2019-03-27 12:46:07 -Generating unique operation named: updateUsingDELETE_5
2019-03-27 12:46:07 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-27 12:46:07 -Generating unique operation named: updateUsingTRACE_5
2019-03-27 12:46:07 -Generating unique operation named: exprotExcelUsingGET_4
2019-03-27 12:46:07 -Generating unique operation named: addUsingGET_7
2019-03-27 12:46:07 -Generating unique operation named: editUsingGET_8
2019-03-27 12:46:07 -Generating unique operation named: listUsingGET_8
2019-03-27 12:46:07 -Generating unique operation named: removeUsingPOST_14
2019-03-27 12:46:07 -Generating unique operation named: removeUsingPOST_15
2019-03-27 12:46:07 -Generating unique operation named: saveUsingPOST_7
2019-03-27 12:46:07 -Generating unique operation named: updateUsingGET_6
2019-03-27 12:46:07 -Generating unique operation named: updateUsingHEAD_6
2019-03-27 12:46:07 -Generating unique operation named: updateUsingPOST_8
2019-03-27 12:46:07 -Generating unique operation named: updateUsingPUT_6
2019-03-27 12:46:07 -Generating unique operation named: updateUsingPATCH_6
2019-03-27 12:46:07 -Generating unique operation named: updateUsingDELETE_6
2019-03-27 12:46:07 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-27 12:46:07 -Generating unique operation named: updateUsingTRACE_6
2019-03-27 12:46:07 -Generating unique operation named: addUsingGET_8
2019-03-27 12:46:07 -Generating unique operation named: editUsingGET_9
2019-03-27 12:46:07 -Generating unique operation named: listUsingGET_9
2019-03-27 12:46:07 -Generating unique operation named: removeUsingPOST_16
2019-03-27 12:46:07 -Generating unique operation named: removeUsingPOST_17
2019-03-27 12:46:07 -Generating unique operation named: saveUsingPOST_8
2019-03-27 12:46:07 -Generating unique operation named: updateUsingGET_7
2019-03-27 12:46:07 -Generating unique operation named: updateUsingHEAD_7
2019-03-27 12:46:07 -Generating unique operation named: updateUsingPOST_9
2019-03-27 12:46:07 -Generating unique operation named: updateUsingPUT_7
2019-03-27 12:46:07 -Generating unique operation named: updateUsingPATCH_7
2019-03-27 12:46:07 -Generating unique operation named: updateUsingDELETE_7
2019-03-27 12:46:07 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-27 12:46:07 -Generating unique operation named: updateUsingTRACE_7
2019-03-27 12:46:07 -Generating unique operation named: addUsingGET_9
2019-03-27 12:46:07 -Generating unique operation named: editUsingGET_10
2019-03-27 12:46:07 -Generating unique operation named: infoUsingGET_1
2019-03-27 12:46:07 -Generating unique operation named: infoUsingHEAD_1
2019-03-27 12:46:07 -Generating unique operation named: infoUsingPOST_1
2019-03-27 12:46:07 -Generating unique operation named: infoUsingPUT_1
2019-03-27 12:46:07 -Generating unique operation named: infoUsingPATCH_1
2019-03-27 12:46:07 -Generating unique operation named: infoUsingDELETE_1
2019-03-27 12:46:07 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-27 12:46:07 -Generating unique operation named: infoUsingTRACE_1
2019-03-27 12:46:07 -Generating unique operation named: listUsingGET_10
2019-03-27 12:46:07 -Generating unique operation named: removeUsingPOST_18
2019-03-27 12:46:07 -Generating unique operation named: removeUsingPOST_19
2019-03-27 12:46:07 -Generating unique operation named: saveUsingPOST_9
2019-03-27 12:46:07 -Generating unique operation named: updateUsingPOST_10
2019-03-27 12:46:07 -Generating unique operation named: listUsingGET_11
2019-03-27 12:46:07 -Generating unique operation named: removeUsingPOST_20
2019-03-27 12:46:07 -Generating unique operation named: welcomeUsingGET_1
2019-03-27 12:46:07 -Generating unique operation named: addUsingGET_10
2019-03-27 12:46:07 -Generating unique operation named: editUsingGET_11
2019-03-27 12:46:07 -Generating unique operation named: listUsingGET_12
2019-03-27 12:46:07 -Generating unique operation named: removeUsingPOST_21
2019-03-27 12:46:07 -Generating unique operation named: saveUsingPOST_10
2019-03-27 12:46:07 -Generating unique operation named: treeUsingGET_1
2019-03-27 12:46:07 -Generating unique operation named: treeUsingGET_2
2019-03-27 12:46:07 -Generating unique operation named: updateUsingPOST_11
2019-03-27 12:46:07 -Generating unique operation named: addUsingGET_11
2019-03-27 12:46:07 -Generating unique operation named: editUsingGET_12
2019-03-27 12:46:07 -Generating unique operation named: listUsingGET_13
2019-03-27 12:46:07 -Generating unique operation named: removeUsingPOST_22
2019-03-27 12:46:07 -Generating unique operation named: removeUsingPOST_23
2019-03-27 12:46:07 -Generating unique operation named: saveUsingPOST_11
2019-03-27 12:46:07 -Generating unique operation named: updateUsingGET_8
2019-03-27 12:46:07 -Generating unique operation named: updateUsingHEAD_8
2019-03-27 12:46:07 -Generating unique operation named: updateUsingPOST_12
2019-03-27 12:46:07 -Generating unique operation named: updateUsingPUT_8
2019-03-27 12:46:08 -Generating unique operation named: updateUsingPATCH_8
2019-03-27 12:46:08 -Generating unique operation named: updateUsingDELETE_8
2019-03-27 12:46:08 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-27 12:46:08 -Generating unique operation named: updateUsingTRACE_8
2019-03-27 12:46:08 -Generating unique operation named: addUsingGET_12
2019-03-27 12:46:08 -Generating unique operation named: editUsingGET_13
2019-03-27 12:46:08 -Generating unique operation named: listUsingGET_14
2019-03-27 12:46:08 -Generating unique operation named: removeUsingPOST_24
2019-03-27 12:46:08 -Generating unique operation named: removeUsingPOST_25
2019-03-27 12:46:08 -Generating unique operation named: saveUsingPOST_12
2019-03-27 12:46:08 -Generating unique operation named: updateUsingGET_9
2019-03-27 12:46:08 -Generating unique operation named: updateUsingHEAD_9
2019-03-27 12:46:08 -Generating unique operation named: updateUsingPOST_13
2019-03-27 12:46:08 -Generating unique operation named: updateUsingPUT_9
2019-03-27 12:46:08 -Generating unique operation named: updateUsingPATCH_9
2019-03-27 12:46:08 -Generating unique operation named: updateUsingDELETE_9
2019-03-27 12:46:08 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-27 12:46:08 -Generating unique operation named: updateUsingTRACE_9
2019-03-27 12:46:08 -Generating unique operation named: addUsingGET_13
2019-03-27 12:46:08 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-27 12:46:08 -Generating unique operation named: editUsingGET_14
2019-03-27 12:46:08 -Generating unique operation named: listUsingGET_15
2019-03-27 12:46:08 -Generating unique operation named: saveUsingPOST_13
2019-03-27 12:46:08 -Generating unique operation named: saveUsingPOST_14
2019-03-27 12:46:08 -Generating unique operation named: updateUsingPOST_14
2019-03-27 12:46:08 -Generating unique operation named: listUsingGET_16
2019-03-27 12:46:08 -Generating unique operation named: listUsingHEAD_1
2019-03-27 12:46:08 -Generating unique operation named: listUsingPOST_1
2019-03-27 12:46:08 -Generating unique operation named: listUsingPUT_1
2019-03-27 12:46:08 -Generating unique operation named: listUsingPATCH_1
2019-03-27 12:46:08 -Generating unique operation named: listUsingDELETE_1
2019-03-27 12:46:08 -Generating unique operation named: listUsingOPTIONS_1
2019-03-27 12:46:08 -Generating unique operation named: listUsingTRACE_1
2019-03-27 12:46:08 -Generating unique operation named: addUsingGET_14
2019-03-27 12:46:08 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-27 12:46:08 -Generating unique operation named: editUsingGET_15
2019-03-27 12:46:08 -Generating unique operation named: listUsingGET_17
2019-03-27 12:46:08 -Generating unique operation named: removeUsingPOST_26
2019-03-27 12:46:08 -Generating unique operation named: saveUsingPOST_15
2019-03-27 12:46:08 -Generating unique operation named: treeUsingGET_3
2019-03-27 12:46:08 -Generating unique operation named: treeViewUsingGET_1
2019-03-27 12:46:08 -Generating unique operation named: updateUsingPOST_15
2019-03-27 12:46:08 -Generating unique operation named: addUsingGET_15
2019-03-27 12:46:08 -Generating unique operation named: editUsingGET_16
2019-03-27 12:46:08 -Generating unique operation named: exprotExcelUsingGET_5
2019-03-27 12:46:08 -Generating unique operation named: listUsingGET_18
2019-03-27 12:46:08 -Generating unique operation named: removeUsingPOST_27
2019-03-27 12:46:08 -Generating unique operation named: removeUsingPOST_28
2019-03-27 12:46:08 -Generating unique operation named: saveUsingPOST_16
2019-03-27 12:46:08 -Generating unique operation named: updateUsingGET_10
2019-03-27 12:46:08 -Generating unique operation named: updateUsingHEAD_10
2019-03-27 12:46:08 -Generating unique operation named: updateUsingPOST_16
2019-03-27 12:46:08 -Generating unique operation named: updateUsingPUT_10
2019-03-27 12:46:08 -Generating unique operation named: updateUsingPATCH_10
2019-03-27 12:46:08 -Generating unique operation named: updateUsingDELETE_10
2019-03-27 12:46:08 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-27 12:46:08 -Generating unique operation named: updateUsingTRACE_10
2019-03-27 12:46:08 -Generating unique operation named: exprotExcelUsingGET_6
2019-03-27 12:46:08 -Generating unique operation named: addUsingGET_16
2019-03-27 12:46:08 -Generating unique operation named: editUsingGET_17
2019-03-27 12:46:08 -Generating unique operation named: listUsingGET_19
2019-03-27 12:46:08 -Generating unique operation named: removeUsingPOST_29
2019-03-27 12:46:08 -Generating unique operation named: removeUsingPOST_30
2019-03-27 12:46:08 -Generating unique operation named: saveUsingPOST_17
2019-03-27 12:46:08 -Generating unique operation named: updateUsingGET_11
2019-03-27 12:46:08 -Generating unique operation named: updateUsingHEAD_11
2019-03-27 12:46:08 -Generating unique operation named: updateUsingPOST_17
2019-03-27 12:46:08 -Generating unique operation named: updateUsingPUT_11
2019-03-27 12:46:08 -Generating unique operation named: updateUsingPATCH_11
2019-03-27 12:46:08 -Generating unique operation named: updateUsingDELETE_11
2019-03-27 12:46:08 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-27 12:46:08 -Generating unique operation named: updateUsingTRACE_11
2019-03-27 12:46:08 -Generating unique operation named: addUsingGET_17
2019-03-27 12:46:08 -Generating unique operation named: editUsingGET_18
2019-03-27 12:46:08 -Generating unique operation named: listUsingGET_20
2019-03-27 12:46:08 -Generating unique operation named: removeUsingPOST_31
2019-03-27 12:46:08 -Generating unique operation named: removeUsingPOST_32
2019-03-27 12:46:08 -Generating unique operation named: saveUsingPOST_18
2019-03-27 12:46:08 -Generating unique operation named: updateUsingGET_12
2019-03-27 12:46:08 -Generating unique operation named: updateUsingHEAD_12
2019-03-27 12:46:08 -Generating unique operation named: updateUsingPOST_18
2019-03-27 12:46:08 -Generating unique operation named: updateUsingPUT_12
2019-03-27 12:46:08 -Generating unique operation named: updateUsingPATCH_12
2019-03-27 12:46:08 -Generating unique operation named: updateUsingDELETE_12
2019-03-27 12:46:08 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-27 12:46:08 -Generating unique operation named: updateUsingTRACE_12
2019-03-27 12:46:08 -Starting Quartz Scheduler now
2019-03-27 12:46:08 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-27 12:46:08 -Starting...
2019-03-27 12:46:08 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-27 12:46:08 -Started.
2019-03-27 12:46:08 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-27 12:46:08 -Using a shared selector for servlet write/read
2019-03-27 12:46:08 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-27 12:46:09 -Started BootdoApplication in 31.93 seconds (JVM running for 33.615)
2019-03-27 12:46:09 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-27 12:46:09 -==> Parameters: 
2019-03-27 12:46:09 -<==      Total: 1
2019-03-27 12:46:29 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-27 12:46:29 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-27 12:46:29 -FrameworkServlet 'dispatcherServlet': initialization completed in 92 ms
2019-03-27 12:46:29 -Enabling session validation scheduler...
2019-03-27 12:46:29 -请求地址 : http://localhost:8081/login;JSESSIONID=3837441b-f617-4ce9-8baf-cc29328b20bc
2019-03-27 12:46:29 -HTTP METHOD : GET
2019-03-27 12:46:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-27 12:46:29 -参数 : [{}]
2019-03-27 12:46:29 -耗时 : 8
2019-03-27 12:46:29 -返回值 : login
2019-03-27 12:46:31 -请求地址 : http://localhost:8081/getVerify
2019-03-27 12:46:31 -HTTP METHOD : GET
2019-03-27 12:46:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-27 12:46:31 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@276cb1ce, org.apache.shiro.web.servlet.ShiroHttpServletResponse@235331fb]
2019-03-27 12:46:31 -0381
2019-03-27 12:46:31 -耗时 : 599
2019-03-27 12:46:31 -返回值 : null
2019-03-27 12:46:37 -请求地址 : http://localhost:8081/login
2019-03-27 12:46:37 -HTTP METHOD : POST
2019-03-27 12:46:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-27 12:46:37 -参数 : [admin, 111111, 0381, org.apache.shiro.web.servlet.ShiroHttpServletRequest@2aac483e]
2019-03-27 12:46:37 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-27 12:46:37 -==> Parameters: admin(String)
2019-03-27 12:46:37 -<==      Total: 1
2019-03-27 12:46:37 -耗时 : 101
2019-03-27 12:46:37 -返回值 : {msg=操作成功, code=0}
2019-03-27 12:46:37 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-03-27 12:46:37 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-27 12:46:37 -==> Parameters: 1(Long), admin(String), 登录(String), 102(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-27 12:46:37.268(Timestamp)
2019-03-27 12:46:37 -请求地址 : http://localhost:8081/index
2019-03-27 12:46:37 -HTTP METHOD : GET
2019-03-27 12:46:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-27 12:46:37 -参数 : [{}]
2019-03-27 12:46:37 -<==    Updates: 1
2019-03-27 12:46:37 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-27 12:46:37 -==> Parameters: 1(Long)
2019-03-27 12:46:37 -<==      Total: 46
2019-03-27 12:46:37 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-27 12:46:37 -==> Parameters: 138(Long)
2019-03-27 12:46:37 -<==      Total: 1
2019-03-27 12:46:37 -耗时 : 134
2019-03-27 12:46:37 -返回值 : index_v1
2019-03-27 12:46:37 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-27 12:46:37 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 135(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-27 12:46:37.539(Timestamp)
2019-03-27 12:46:37 -<==    Updates: 1
2019-03-27 12:46:37 -请求地址 : http://localhost:8081/main
2019-03-27 12:46:37 -HTTP METHOD : GET
2019-03-27 12:46:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-27 12:46:37 -参数 : []
2019-03-27 12:46:37 -耗时 : 0
2019-03-27 12:46:37 -返回值 : main
2019-03-27 12:46:37 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-27 12:46:37 -HTTP METHOD : GET
2019-03-27 12:46:37 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-27 12:46:37 -参数 : []
2019-03-27 12:46:37 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-27 12:46:37 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-27 12:46:37 -<==      Total: 0
2019-03-27 12:46:37 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-27 12:46:37 -==> Parameters: 1(Long), 0(String)
2019-03-27 12:46:37 -<==      Total: 1
2019-03-27 12:46:37 -耗时 : 85
2019-03-27 12:46:37 -返回值 : com.bootdo.common.utils.PageUtils@350c068c
2019-03-27 12:46:38 -请求地址 : http://localhost:8081/main
2019-03-27 12:46:38 -HTTP METHOD : GET
2019-03-27 12:46:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-27 12:46:38 -参数 : []
2019-03-27 12:46:38 -耗时 : 1
2019-03-27 12:46:38 -返回值 : main
2019-03-27 12:46:48 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-27 12:46:48 -==> Parameters: 1(Long)
2019-03-27 12:46:48 -<==      Total: 90
2019-03-27 12:46:48 -请求地址 : http://localhost:8081/heat/heat
2019-03-27 12:46:48 -HTTP METHOD : GET
2019-03-27 12:46:48 -CLASS_METHOD : com.bootdo.heat.controller.HeatController.Heat
2019-03-27 12:46:48 -参数 : []
2019-03-27 12:46:48 -耗时 : 1
2019-03-27 12:46:48 -返回值 : heat/heat/heat
2019-03-27 12:46:48 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-27 12:46:48 -HTTP METHOD : GET
2019-03-27 12:46:48 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 12:46:48 -参数 : [userType]
2019-03-27 12:46:49 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 12:46:49 -==> Parameters: userType(String)
2019-03-27 12:46:49 -<==      Total: 2
2019-03-27 12:46:49 -耗时 : 25
2019-03-27 12:46:49 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 12:46:49 -请求地址 : http://localhost:8081/heat/heat/list
2019-03-27 12:46:49 -HTTP METHOD : GET
2019-03-27 12:46:49 -CLASS_METHOD : com.bootdo.heat.controller.HeatController.list
2019-03-27 12:46:49 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}]
2019-03-27 12:46:49 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`heat_type`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat order by id asc limit ?, ? 
2019-03-27 12:46:49 -==> Parameters: 0(Integer), 3(Integer)
2019-03-27 12:46:49 -<==      Total: 3
2019-03-27 12:46:49 -==>  Preparing: select count(*) from heat 
2019-03-27 12:46:49 -==> Parameters: 
2019-03-27 12:46:49 -<==      Total: 1
2019-03-27 12:46:49 -耗时 : 46
2019-03-27 12:46:49 -返回值 : com.bootdo.common.utils.PageUtils@4526038c
2019-03-27 12:46:54 -请求地址 : http://localhost:8081/heat/heat/edit/1
2019-03-27 12:46:54 -HTTP METHOD : GET
2019-03-27 12:46:54 -CLASS_METHOD : com.bootdo.heat.controller.HeatController.edit
2019-03-27 12:46:54 -参数 : [1, {}]
2019-03-27 12:46:54 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`heat_type`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat where id = ? 
2019-03-27 12:46:54 -==> Parameters: 1(Integer)
2019-03-27 12:46:54 -<==      Total: 1
2019-03-27 12:46:54 -耗时 : 22
2019-03-27 12:46:54 -返回值 : heat/heat/edit
2019-03-27 12:46:54 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-27 12:46:54 -HTTP METHOD : GET
2019-03-27 12:46:54 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 12:46:54 -参数 : [userType]
2019-03-27 12:46:54 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 12:46:54 -==> Parameters: userType(String)
2019-03-27 12:46:54 -<==      Total: 2
2019-03-27 12:46:54 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-03-27 12:46:54 -HTTP METHOD : GET
2019-03-27 12:46:54 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 12:46:54 -参数 : [userState]
2019-03-27 12:46:54 -耗时 : 24
2019-03-27 12:46:54 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 12:46:54 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 12:46:54 -==> Parameters: userState(String)
2019-03-27 12:46:54 -<==      Total: 2
2019-03-27 12:46:54 -耗时 : 32
2019-03-27 12:46:54 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 12:46:54 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-03-27 12:46:54 -HTTP METHOD : GET
2019-03-27 12:46:54 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 12:46:54 -参数 : [heatType]
2019-03-27 12:46:54 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 12:46:54 -==> Parameters: heatType(String)
2019-03-27 12:46:54 -<==      Total: 5
2019-03-27 12:46:54 -耗时 : 15
2019-03-27 12:46:54 -返回值 : [DictDO{id=137, name='特殊暖费1', value='4', type='heatType', description='暖气类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=136, name='工业非盈利', value='3', type='heatType', description='暖气类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=135, name='工业盈利', value='2', type='heatType', description='暖气类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=134, name='民用暖', value='1', type='heatType', description='暖气类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=133, name='商业暖', value='0', type='heatType', description='暖气类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 12:46:59 -请求地址 : http://localhost:8081/heat/heat/update
2019-03-27 12:46:59 -HTTP METHOD : POST
2019-03-27 12:46:59 -CLASS_METHOD : com.bootdo.heat.controller.HeatController.update
2019-03-27 12:46:59 -参数 : [com.bootdo.heat.domain.HeatDO@6e440c82]
2019-03-27 12:46:59 -==>  Preparing: update heat SET `user_id` = ?, `user_name` = ?, `user_type` = ?, `user_org` = ?, `user_tell` = ?, `user_state` = ?, `wages_id` = ?, `heat_type` = ?, `heat_price` = ?, `heat_area` = ?, `heat_cost` = ?, `heat_sum` = ?, `create_by` = ?, `update_time` = ?, `update_by` = ?, `remark` = ? where id = ? 
2019-03-27 12:46:59 -==> Parameters: 1-001(String), 姜海龙(String), A(String), 2(String), 15716675678(String), 1(String), 10005(String), 1(String), 1.00(BigDecimal), 100.00(BigDecimal), 100.00(BigDecimal), -100.00(BigDecimal), 1(Long), 2019-03-27 12:46:59.265(Timestamp), 1(Long), (String), 1(Integer)
2019-03-27 12:46:59 -<==    Updates: 1
2019-03-27 12:46:59 -耗时 : 225
2019-03-27 12:46:59 -返回值 : {msg=操作成功, code=0}
2019-03-27 12:46:59 -请求地址 : http://localhost:8081/heat/heat/list
2019-03-27 12:46:59 -HTTP METHOD : GET
2019-03-27 12:46:59 -CLASS_METHOD : com.bootdo.heat.controller.HeatController.list
2019-03-27 12:46:59 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=, queryType=2}]
2019-03-27 12:46:59 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`heat_type`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat WHERE `heat_sum` < 0 order by id asc limit ?, ? 
2019-03-27 12:46:59 -==> Parameters: 0(Integer), 3(Integer)
2019-03-27 12:46:59 -<==      Total: 3
2019-03-27 12:46:59 -==>  Preparing: select count(*) from heat WHERE `heat_sum` < 0 
2019-03-27 12:46:59 -==> Parameters: 
2019-03-27 12:46:59 -<==      Total: 1
2019-03-27 12:46:59 -耗时 : 38
2019-03-27 12:46:59 -返回值 : com.bootdo.common.utils.PageUtils@f45b24
2019-03-27 12:47:01 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 5]
2019-03-27 12:47:12 -请求地址 : http://localhost:8081/index
2019-03-27 12:47:12 -HTTP METHOD : GET
2019-03-27 12:47:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-27 12:47:12 -参数 : [{}]
2019-03-27 12:47:12 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-27 12:47:12 -==> Parameters: 1(Long)
2019-03-27 12:47:12 -<==      Total: 46
2019-03-27 12:47:12 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-27 12:47:12 -==> Parameters: 138(Long)
2019-03-27 12:47:12 -<==      Total: 1
2019-03-27 12:47:12 -耗时 : 109
2019-03-27 12:47:12 -返回值 : index_v1
2019-03-27 12:47:12 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-27 12:47:12 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 110(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-27 12:47:12.736(Timestamp)
2019-03-27 12:47:12 -请求地址 : http://localhost:8081/main
2019-03-27 12:47:12 -HTTP METHOD : GET
2019-03-27 12:47:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-27 12:47:12 -参数 : []
2019-03-27 12:47:12 -耗时 : 0
2019-03-27 12:47:12 -返回值 : main
2019-03-27 12:47:12 -<==    Updates: 1
2019-03-27 12:47:12 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-27 12:47:12 -HTTP METHOD : GET
2019-03-27 12:47:12 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-27 12:47:12 -参数 : []
2019-03-27 12:47:12 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-27 12:47:12 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-27 12:47:12 -<==      Total: 0
2019-03-27 12:47:12 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-27 12:47:12 -==> Parameters: 1(Long), 0(String)
2019-03-27 12:47:12 -<==      Total: 1
2019-03-27 12:47:12 -耗时 : 7
2019-03-27 12:47:12 -返回值 : com.bootdo.common.utils.PageUtils@78ca4a68
2019-03-27 12:47:13 -请求地址 : http://localhost:8081/main
2019-03-27 12:47:13 -HTTP METHOD : GET
2019-03-27 12:47:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-27 12:47:13 -参数 : []
2019-03-27 12:47:13 -耗时 : 0
2019-03-27 12:47:13 -返回值 : main
2019-03-27 12:47:16 -请求地址 : http://localhost:8081/heat/heat
2019-03-27 12:47:16 -HTTP METHOD : GET
2019-03-27 12:47:16 -CLASS_METHOD : com.bootdo.heat.controller.HeatController.Heat
2019-03-27 12:47:16 -参数 : []
2019-03-27 12:47:16 -耗时 : 1
2019-03-27 12:47:16 -返回值 : heat/heat/heat
2019-03-27 12:47:17 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-27 12:47:17 -HTTP METHOD : GET
2019-03-27 12:47:17 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 12:47:17 -参数 : [userType]
2019-03-27 12:47:17 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 12:47:17 -==> Parameters: userType(String)
2019-03-27 12:47:17 -<==      Total: 2
2019-03-27 12:47:17 -耗时 : 5
2019-03-27 12:47:17 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 12:47:17 -请求地址 : http://localhost:8081/heat/heat/list
2019-03-27 12:47:17 -HTTP METHOD : GET
2019-03-27 12:47:17 -CLASS_METHOD : com.bootdo.heat.controller.HeatController.list
2019-03-27 12:47:17 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}]
2019-03-27 12:47:17 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`heat_type`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat order by id asc limit ?, ? 
2019-03-27 12:47:17 -==> Parameters: 0(Integer), 3(Integer)
2019-03-27 12:47:17 -<==      Total: 3
2019-03-27 12:47:17 -==>  Preparing: select count(*) from heat 
2019-03-27 12:47:17 -==> Parameters: 
2019-03-27 12:47:17 -<==      Total: 1
2019-03-27 12:47:17 -耗时 : 9
2019-03-27 12:47:17 -返回值 : com.bootdo.common.utils.PageUtils@62242151
2019-03-27 12:47:22 -请求地址 : http://localhost:8081/heat/heat/edit/3
2019-03-27 12:47:22 -HTTP METHOD : GET
2019-03-27 12:47:22 -CLASS_METHOD : com.bootdo.heat.controller.HeatController.edit
2019-03-27 12:47:22 -参数 : [3, {}]
2019-03-27 12:47:22 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`heat_type`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat where id = ? 
2019-03-27 12:47:22 -==> Parameters: 3(Integer)
2019-03-27 12:47:22 -<==      Total: 1
2019-03-27 12:47:22 -耗时 : 9
2019-03-27 12:47:22 -返回值 : heat/heat/edit
2019-03-27 12:47:22 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-27 12:47:22 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-03-27 12:47:22 -HTTP METHOD : GET
2019-03-27 12:47:22 -HTTP METHOD : GET
2019-03-27 12:47:22 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 12:47:22 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 12:47:22 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-03-27 12:47:22 -参数 : [userState]
2019-03-27 12:47:22 -参数 : [userType]
2019-03-27 12:47:22 -HTTP METHOD : GET
2019-03-27 12:47:22 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 12:47:22 -参数 : [heatType]
2019-03-27 12:47:22 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 12:47:22 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 12:47:22 -==> Parameters: userState(String)
2019-03-27 12:47:22 -==> Parameters: userType(String)
2019-03-27 12:47:22 -<==      Total: 2
2019-03-27 12:47:22 -<==      Total: 2
2019-03-27 12:47:22 -耗时 : 10
2019-03-27 12:47:22 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 12:47:22 -耗时 : 13
2019-03-27 12:47:22 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 12:47:22 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 12:47:22 -==> Parameters: heatType(String)
2019-03-27 12:47:22 -<==      Total: 5
2019-03-27 12:47:22 -耗时 : 19
2019-03-27 12:47:22 -返回值 : [DictDO{id=137, name='特殊暖费1', value='4', type='heatType', description='暖气类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=136, name='工业非盈利', value='3', type='heatType', description='暖气类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=135, name='工业盈利', value='2', type='heatType', description='暖气类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=134, name='民用暖', value='1', type='heatType', description='暖气类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=133, name='商业暖', value='0', type='heatType', description='暖气类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 12:47:25 -请求地址 : http://localhost:8081/heat/heat/update
2019-03-27 12:47:25 -HTTP METHOD : POST
2019-03-27 12:47:25 -CLASS_METHOD : com.bootdo.heat.controller.HeatController.update
2019-03-27 12:47:25 -参数 : [com.bootdo.heat.domain.HeatDO@55673bff]
2019-03-27 12:47:25 -==>  Preparing: update heat SET `user_id` = ?, `user_name` = ?, `user_type` = ?, `user_org` = ?, `user_tell` = ?, `user_state` = ?, `wages_id` = ?, `heat_type` = ?, `heat_price` = ?, `heat_area` = ?, `heat_cost` = ?, `heat_sum` = ?, `create_by` = ?, `update_time` = ?, `update_by` = ?, `remark` = ? where id = ? 
2019-03-27 12:47:25 -==> Parameters: 1-003(String), 阿萨德(String), B(String), 3(String), (String), 1(String), 10005(String), 1(String), 1.00(BigDecimal), 1.00(BigDecimal), 1.00(BigDecimal), 1.00(BigDecimal), 1(Long), 2019-03-27 12:47:25.635(Timestamp), 1(Long), (String), 3(Integer)
2019-03-27 12:47:25 -<==    Updates: 1
2019-03-27 12:47:25 -耗时 : 180
2019-03-27 12:47:25 -返回值 : {msg=操作成功, code=0}
2019-03-27 12:47:25 -请求地址 : http://localhost:8081/heat/heat/list
2019-03-27 12:47:25 -HTTP METHOD : GET
2019-03-27 12:47:25 -CLASS_METHOD : com.bootdo.heat.controller.HeatController.list
2019-03-27 12:47:25 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=, queryType=2}]
2019-03-27 12:47:25 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`heat_type`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat WHERE `heat_sum` < 0 order by id asc limit ?, ? 
2019-03-27 12:47:25 -==> Parameters: 0(Integer), 3(Integer)
2019-03-27 12:47:25 -<==      Total: 3
2019-03-27 12:47:25 -==>  Preparing: select count(*) from heat WHERE `heat_sum` < 0 
2019-03-27 12:47:25 -==> Parameters: 
2019-03-27 12:47:25 -<==      Total: 1
2019-03-27 12:47:25 -耗时 : 32
2019-03-27 12:47:25 -返回值 : com.bootdo.common.utils.PageUtils@2593f593
2019-03-27 12:47:30 -请求地址 : http://localhost:8081/index
2019-03-27 12:47:30 -HTTP METHOD : GET
2019-03-27 12:47:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-27 12:47:30 -参数 : [{}]
2019-03-27 12:47:30 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-27 12:47:30 -==> Parameters: 1(Long)
2019-03-27 12:47:30 -<==      Total: 46
2019-03-27 12:47:30 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-27 12:47:30 -==> Parameters: 138(Long)
2019-03-27 12:47:30 -<==      Total: 1
2019-03-27 12:47:30 -耗时 : 31
2019-03-27 12:47:30 -返回值 : index_v1
2019-03-27 12:47:30 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-27 12:47:30 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 31(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-27 12:47:30.566(Timestamp)
2019-03-27 12:47:30 -<==    Updates: 1
2019-03-27 12:47:30 -请求地址 : http://localhost:8081/main
2019-03-27 12:47:30 -HTTP METHOD : GET
2019-03-27 12:47:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-27 12:47:30 -参数 : []
2019-03-27 12:47:30 -耗时 : 0
2019-03-27 12:47:30 -返回值 : main
2019-03-27 12:47:30 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-27 12:47:30 -HTTP METHOD : GET
2019-03-27 12:47:30 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-27 12:47:30 -参数 : []
2019-03-27 12:47:30 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-27 12:47:30 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-27 12:47:30 -<==      Total: 0
2019-03-27 12:47:30 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-27 12:47:30 -==> Parameters: 1(Long), 0(String)
2019-03-27 12:47:30 -<==      Total: 1
2019-03-27 12:47:30 -耗时 : 7
2019-03-27 12:47:30 -返回值 : com.bootdo.common.utils.PageUtils@d131696
2019-03-27 12:47:30 -请求地址 : http://localhost:8081/main
2019-03-27 12:47:30 -HTTP METHOD : GET
2019-03-27 12:47:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-27 12:47:30 -参数 : []
2019-03-27 12:47:30 -耗时 : 4
2019-03-27 12:47:30 -返回值 : main
2019-03-27 12:47:35 -请求地址 : http://localhost:8081/heat/heat
2019-03-27 12:47:35 -HTTP METHOD : GET
2019-03-27 12:47:35 -CLASS_METHOD : com.bootdo.heat.controller.HeatController.Heat
2019-03-27 12:47:35 -参数 : []
2019-03-27 12:47:35 -耗时 : 1
2019-03-27 12:47:35 -返回值 : heat/heat/heat
2019-03-27 12:47:36 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-27 12:47:36 -HTTP METHOD : GET
2019-03-27 12:47:36 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 12:47:36 -参数 : [userType]
2019-03-27 12:47:36 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 12:47:36 -==> Parameters: userType(String)
2019-03-27 12:47:36 -<==      Total: 2
2019-03-27 12:47:36 -耗时 : 4
2019-03-27 12:47:36 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 12:47:36 -请求地址 : http://localhost:8081/heat/heat/list
2019-03-27 12:47:36 -HTTP METHOD : GET
2019-03-27 12:47:36 -CLASS_METHOD : com.bootdo.heat.controller.HeatController.list
2019-03-27 12:47:36 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}]
2019-03-27 12:47:36 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`heat_type`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat order by id asc limit ?, ? 
2019-03-27 12:47:36 -==> Parameters: 0(Integer), 3(Integer)
2019-03-27 12:47:36 -<==      Total: 3
2019-03-27 12:47:36 -==>  Preparing: select count(*) from heat 
2019-03-27 12:47:36 -==> Parameters: 
2019-03-27 12:47:36 -<==      Total: 1
2019-03-27 12:47:36 -耗时 : 16
2019-03-27 12:47:36 -返回值 : com.bootdo.common.utils.PageUtils@5972ca9e
2019-03-27 12:52:43 -请求地址 : http://localhost:8081/heat/heat/edit/1
2019-03-27 12:52:43 -HTTP METHOD : GET
2019-03-27 12:52:43 -CLASS_METHOD : com.bootdo.heat.controller.HeatController.edit
2019-03-27 12:52:43 -参数 : [1, {}]
2019-03-27 12:52:43 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`heat_type`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat where id = ? 
2019-03-27 12:52:43 -==> Parameters: 1(Integer)
2019-03-27 12:52:43 -<==      Total: 1
2019-03-27 12:52:43 -耗时 : 11
2019-03-27 12:52:43 -返回值 : heat/heat/edit
2019-03-27 12:52:43 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-27 12:52:43 -HTTP METHOD : GET
2019-03-27 12:52:43 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 12:52:43 -参数 : [userType]
2019-03-27 12:52:43 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-03-27 12:52:43 -HTTP METHOD : GET
2019-03-27 12:52:43 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 12:52:43 -参数 : [userState]
2019-03-27 12:52:43 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 12:52:43 -==> Parameters: userType(String)
2019-03-27 12:52:43 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 12:52:43 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-03-27 12:52:43 -HTTP METHOD : GET
2019-03-27 12:52:43 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 12:52:43 -参数 : [heatType]
2019-03-27 12:52:43 -==> Parameters: userState(String)
2019-03-27 12:52:43 -<==      Total: 2
2019-03-27 12:52:43 -耗时 : 14
2019-03-27 12:52:43 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 12:52:43 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 12:52:43 -==> Parameters: heatType(String)
2019-03-27 12:52:43 -<==      Total: 5
2019-03-27 12:52:43 -耗时 : 22
2019-03-27 12:52:43 -返回值 : [DictDO{id=137, name='特殊暖费1', value='4', type='heatType', description='暖气类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=136, name='工业非盈利', value='3', type='heatType', description='暖气类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=135, name='工业盈利', value='2', type='heatType', description='暖气类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=134, name='民用暖', value='1', type='heatType', description='暖气类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=133, name='商业暖', value='0', type='heatType', description='暖气类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 12:52:43 -<==      Total: 2
2019-03-27 12:52:43 -耗时 : 31
2019-03-27 12:52:43 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 12:52:50 -请求地址 : http://localhost:8081/water/water
2019-03-27 12:52:50 -HTTP METHOD : GET
2019-03-27 12:52:50 -CLASS_METHOD : com.bootdo.water.controller.WaterController.Water
2019-03-27 12:52:50 -参数 : []
2019-03-27 12:52:50 -耗时 : 1
2019-03-27 12:52:50 -返回值 : water/water/water
2019-03-27 12:52:50 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-27 12:52:50 -HTTP METHOD : GET
2019-03-27 12:52:50 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 12:52:50 -参数 : [userType]
2019-03-27 12:52:50 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 12:52:50 -==> Parameters: userType(String)
2019-03-27 12:52:50 -<==      Total: 2
2019-03-27 12:52:50 -耗时 : 4
2019-03-27 12:52:50 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 12:52:50 -请求地址 : http://localhost:8081/water/water/list
2019-03-27 12:52:50 -HTTP METHOD : GET
2019-03-27 12:52:50 -CLASS_METHOD : com.bootdo.water.controller.WaterController.list
2019-03-27 12:52:50 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}]
2019-03-27 12:52:50 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_cost`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water order by id asc limit ?, ? 
2019-03-27 12:52:50 -==> Parameters: 0(Integer), 3(Integer)
2019-03-27 12:52:50 -<==      Total: 3
2019-03-27 12:52:50 -==>  Preparing: select count(*) from water 
2019-03-27 12:52:50 -==> Parameters: 
2019-03-27 12:52:50 -<==      Total: 1
2019-03-27 12:52:50 -耗时 : 28
2019-03-27 12:52:50 -返回值 : com.bootdo.common.utils.PageUtils@4cc970c1
2019-03-27 12:52:55 -请求地址 : http://localhost:8081/water/water/edit/1
2019-03-27 12:52:55 -HTTP METHOD : GET
2019-03-27 12:52:55 -CLASS_METHOD : com.bootdo.water.controller.WaterController.edit
2019-03-27 12:52:55 -参数 : [1, {}]
2019-03-27 12:52:55 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_cost`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water where id = ? 
2019-03-27 12:52:55 -==> Parameters: 1(Long)
2019-03-27 12:52:55 -<==      Total: 1
2019-03-27 12:52:55 -耗时 : 11
2019-03-27 12:52:55 -返回值 : water/water/edit
2019-03-27 12:52:55 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-27 12:52:55 -HTTP METHOD : GET
2019-03-27 12:52:55 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 12:52:55 -参数 : [userType]
2019-03-27 12:52:55 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 12:52:55 -==> Parameters: userType(String)
2019-03-27 12:52:55 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-03-27 12:52:55 -HTTP METHOD : GET
2019-03-27 12:52:55 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 12:52:55 -参数 : [userState]
2019-03-27 12:52:55 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 12:52:55 -==> Parameters: userState(String)
2019-03-27 12:52:55 -<==      Total: 2
2019-03-27 12:52:55 -耗时 : 7
2019-03-27 12:52:55 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 12:52:55 -<==      Total: 2
2019-03-27 12:52:55 -耗时 : 10
2019-03-27 12:52:55 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 12:52:55 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-03-27 12:52:55 -HTTP METHOD : GET
2019-03-27 12:52:55 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 12:52:55 -参数 : [waterType]
2019-03-27 12:52:55 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 12:52:55 -==> Parameters: waterType(String)
2019-03-27 12:52:55 -<==      Total: 6
2019-03-27 12:52:55 -耗时 : 7
2019-03-27 12:52:55 -返回值 : [DictDO{id=132, name='特殊水费4', value='5', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=131, name='特殊水费3', value='4', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=130, name='特殊水费2', value='3', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=129, name='特殊水费1', value='2', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=128, name='民用水', value='1', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=127, name='商业水', value='0', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 12:53:00 -请求地址 : http://localhost:8081/water/water/update
2019-03-27 12:53:00 -HTTP METHOD : POST
2019-03-27 12:53:00 -CLASS_METHOD : com.bootdo.water.controller.WaterController.update
2019-03-27 12:53:00 -参数 : [com.bootdo.water.domain.WaterDO@389e30fc]
2019-03-27 12:53:00 -==>  Preparing: update water SET `user_id` = ?, `user_name` = ?, `user_type` = ?, `user_org` = ?, `user_tell` = ?, `user_state` = ?, `wages_id` = ?, `water_type` = ?, `water_price` = ?, `water_cost` = ?, `water_sum` = ?, `create_by` = ?, `update_time` = ?, `update_by` = ?, `remark` = ? where id = ? 
2019-03-27 12:53:00 -==> Parameters: 1-001(String), 姜海龙(String), A(String), 2(String), 16716675678(String), 1(String), 10005(String), 1(String), 15.00(BigDecimal), 15.00(BigDecimal), 110.00(BigDecimal), 1(Long), 2019-03-27 12:53:00.131(Timestamp), 1(Long), (String), 1(Long)
2019-03-27 12:53:00 -<==    Updates: 1
2019-03-27 12:53:00 -耗时 : 205
2019-03-27 12:53:00 -返回值 : {msg=操作成功, code=0}
2019-03-27 12:53:00 -请求地址 : http://localhost:8081/water/water/list
2019-03-27 12:53:00 -HTTP METHOD : GET
2019-03-27 12:53:00 -CLASS_METHOD : com.bootdo.water.controller.WaterController.list
2019-03-27 12:53:00 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=, queryType=2}]
2019-03-27 12:53:00 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_cost`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water WHERE `water_sum` < 0 order by id asc limit ?, ? 
2019-03-27 12:53:00 -==> Parameters: 0(Integer), 3(Integer)
2019-03-27 12:53:00 -<==      Total: 2
2019-03-27 12:53:00 -==>  Preparing: select count(*) from water WHERE `water_sum` < 0 
2019-03-27 12:53:00 -==> Parameters: 
2019-03-27 12:53:00 -<==      Total: 1
2019-03-27 12:53:00 -耗时 : 12
2019-03-27 12:53:00 -返回值 : com.bootdo.common.utils.PageUtils@4859c8ec
2019-03-27 12:53:13 -请求地址 : http://localhost:8081/water/water/edit/3
2019-03-27 12:53:13 -HTTP METHOD : GET
2019-03-27 12:53:13 -CLASS_METHOD : com.bootdo.water.controller.WaterController.edit
2019-03-27 12:53:13 -参数 : [3, {}]
2019-03-27 12:53:13 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_cost`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water where id = ? 
2019-03-27 12:53:13 -==> Parameters: 3(Long)
2019-03-27 12:53:13 -<==      Total: 1
2019-03-27 12:53:13 -耗时 : 5
2019-03-27 12:53:13 -返回值 : water/water/edit
2019-03-27 12:53:14 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-27 12:53:14 -HTTP METHOD : GET
2019-03-27 12:53:14 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 12:53:14 -参数 : [userType]
2019-03-27 12:53:14 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-03-27 12:53:14 -HTTP METHOD : GET
2019-03-27 12:53:14 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 12:53:14 -参数 : [waterType]
2019-03-27 12:53:14 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 12:53:14 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 12:53:14 -==> Parameters: userType(String)
2019-03-27 12:53:14 -==> Parameters: waterType(String)
2019-03-27 12:53:14 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-03-27 12:53:14 -<==      Total: 2
2019-03-27 12:53:14 -<==      Total: 6
2019-03-27 12:53:14 -耗时 : 6
2019-03-27 12:53:14 -HTTP METHOD : GET
2019-03-27 12:53:14 -耗时 : 5
2019-03-27 12:53:14 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 12:53:14 -返回值 : [DictDO{id=132, name='特殊水费4', value='5', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=131, name='特殊水费3', value='4', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=130, name='特殊水费2', value='3', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=129, name='特殊水费1', value='2', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=128, name='民用水', value='1', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=127, name='商业水', value='0', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 12:53:14 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 12:53:14 -参数 : [userState]
2019-03-27 12:53:14 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 12:53:14 -==> Parameters: userState(String)
2019-03-27 12:53:14 -<==      Total: 2
2019-03-27 12:53:14 -耗时 : 13
2019-03-27 12:53:14 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 12:53:18 -请求地址 : http://localhost:8081/water/water/update
2019-03-27 12:53:18 -HTTP METHOD : POST
2019-03-27 12:53:18 -CLASS_METHOD : com.bootdo.water.controller.WaterController.update
2019-03-27 12:53:18 -参数 : [com.bootdo.water.domain.WaterDO@189a5ea4]
2019-03-27 12:53:18 -==>  Preparing: update water SET `user_id` = ?, `user_name` = ?, `user_type` = ?, `user_org` = ?, `user_tell` = ?, `user_state` = ?, `wages_id` = ?, `water_type` = ?, `water_price` = ?, `water_cost` = ?, `water_sum` = ?, `create_by` = ?, `update_time` = ?, `update_by` = ?, `remark` = ? where id = ? 
2019-03-27 12:53:18 -==> Parameters: 1-0005(String), 阿士大(String), A(String), 2(String), (String), 1(String), 10005(String), 1(String), 1.00(BigDecimal), 1.00(BigDecimal), 15.00(BigDecimal), 1(Long), 2019-03-27 12:53:18.677(Timestamp), 1(Long), (String), 3(Long)
2019-03-27 12:53:18 -<==    Updates: 1
2019-03-27 12:53:18 -耗时 : 132
2019-03-27 12:53:18 -返回值 : {msg=操作成功, code=0}
2019-03-27 12:53:18 -请求地址 : http://localhost:8081/water/water/list
2019-03-27 12:53:18 -HTTP METHOD : GET
2019-03-27 12:53:18 -CLASS_METHOD : com.bootdo.water.controller.WaterController.list
2019-03-27 12:53:18 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=, queryType=2}]
2019-03-27 12:53:18 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_cost`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water WHERE `water_sum` < 0 order by id asc limit ?, ? 
2019-03-27 12:53:18 -==> Parameters: 0(Integer), 3(Integer)
2019-03-27 12:53:18 -<==      Total: 1
2019-03-27 12:53:18 -==>  Preparing: select count(*) from water WHERE `water_sum` < 0 
2019-03-27 12:53:18 -==> Parameters: 
2019-03-27 12:53:18 -<==      Total: 1
2019-03-27 12:53:18 -耗时 : 13
2019-03-27 12:53:18 -返回值 : com.bootdo.common.utils.PageUtils@19ee2061
2019-03-27 12:53:24 -请求地址 : http://localhost:8081/index
2019-03-27 12:53:24 -HTTP METHOD : GET
2019-03-27 12:53:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-27 12:53:24 -参数 : [{}]
2019-03-27 12:53:24 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-27 12:53:24 -==> Parameters: 1(Long)
2019-03-27 12:53:24 -<==      Total: 46
2019-03-27 12:53:24 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-27 12:53:24 -==> Parameters: 138(Long)
2019-03-27 12:53:24 -<==      Total: 1
2019-03-27 12:53:24 -耗时 : 27
2019-03-27 12:53:24 -返回值 : index_v1
2019-03-27 12:53:24 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-27 12:53:25 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 27(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-27 12:53:24.963(Timestamp)
2019-03-27 12:53:25 -请求地址 : http://localhost:8081/main
2019-03-27 12:53:25 -HTTP METHOD : GET
2019-03-27 12:53:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-27 12:53:25 -参数 : []
2019-03-27 12:53:25 -耗时 : 0
2019-03-27 12:53:25 -返回值 : main
2019-03-27 12:53:25 -<==    Updates: 1
2019-03-27 12:53:25 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-27 12:53:25 -HTTP METHOD : GET
2019-03-27 12:53:25 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-27 12:53:25 -参数 : []
2019-03-27 12:53:25 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-27 12:53:25 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-27 12:53:25 -<==      Total: 0
2019-03-27 12:53:25 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-27 12:53:25 -==> Parameters: 1(Long), 0(String)
2019-03-27 12:53:25 -<==      Total: 1
2019-03-27 12:53:25 -耗时 : 6
2019-03-27 12:53:25 -返回值 : com.bootdo.common.utils.PageUtils@690d62f8
2019-03-27 12:53:25 -请求地址 : http://localhost:8081/main
2019-03-27 12:53:25 -HTTP METHOD : GET
2019-03-27 12:53:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-27 12:53:25 -参数 : []
2019-03-27 12:53:25 -耗时 : 1
2019-03-27 12:53:25 -返回值 : main
2019-03-27 12:53:27 -请求地址 : http://localhost:8081/water/water
2019-03-27 12:53:27 -HTTP METHOD : GET
2019-03-27 12:53:27 -CLASS_METHOD : com.bootdo.water.controller.WaterController.Water
2019-03-27 12:53:27 -参数 : []
2019-03-27 12:53:27 -耗时 : 1
2019-03-27 12:53:27 -返回值 : water/water/water
2019-03-27 12:53:28 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-27 12:53:28 -HTTP METHOD : GET
2019-03-27 12:53:28 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 12:53:28 -参数 : [userType]
2019-03-27 12:53:28 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 12:53:28 -==> Parameters: userType(String)
2019-03-27 12:53:28 -<==      Total: 2
2019-03-27 12:53:28 -耗时 : 4
2019-03-27 12:53:28 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 12:53:28 -请求地址 : http://localhost:8081/water/water/list
2019-03-27 12:53:28 -HTTP METHOD : GET
2019-03-27 12:53:28 -CLASS_METHOD : com.bootdo.water.controller.WaterController.list
2019-03-27 12:53:28 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}]
2019-03-27 12:53:28 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_cost`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water order by id asc limit ?, ? 
2019-03-27 12:53:28 -==> Parameters: 0(Integer), 3(Integer)
2019-03-27 12:53:28 -<==      Total: 3
2019-03-27 12:53:28 -==>  Preparing: select count(*) from water 
2019-03-27 12:53:28 -==> Parameters: 
2019-03-27 12:53:28 -<==      Total: 1
2019-03-27 12:53:28 -耗时 : 7
2019-03-27 12:53:28 -返回值 : com.bootdo.common.utils.PageUtils@4f78fae
2019-03-27 12:55:11 -请求地址 : http://localhost:8081/water/waterInto
2019-03-27 12:55:11 -HTTP METHOD : GET
2019-03-27 12:55:11 -CLASS_METHOD : com.bootdo.water.controller.WaterIntoController.WaterInto
2019-03-27 12:55:11 -参数 : []
2019-03-27 12:55:11 -耗时 : 1
2019-03-27 12:55:11 -返回值 : water/waterInto/waterInto
2019-03-27 12:55:20 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-27 12:55:20 -HTTP METHOD : GET
2019-03-27 12:55:20 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-27 12:55:20 -参数 : []
2019-03-27 12:55:20 -耗时 : 1
2019-03-27 12:55:20 -返回值 : /moneyLog/elecLog/elecLog
2019-03-27 12:55:20 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-27 12:55:20 -HTTP METHOD : GET
2019-03-27 12:55:20 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 12:55:20 -参数 : [userType]
2019-03-27 12:55:20 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 12:55:20 -==> Parameters: userType(String)
2019-03-27 12:55:20 -<==      Total: 2
2019-03-27 12:55:20 -耗时 : 5
2019-03-27 12:55:20 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 12:55:20 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-27 12:55:20 -HTTP METHOD : GET
2019-03-27 12:55:20 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-27 12:55:20 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-27 12:55:20 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-27 12:55:21 -==> Parameters: 0(Integer), 10(Integer)
2019-03-27 12:55:21 -<==      Total: 6
2019-03-27 12:55:21 -==>  Preparing: select count(*) from elec_log 
2019-03-27 12:55:21 -==> Parameters: 
2019-03-27 12:55:21 -<==      Total: 1
2019-03-27 12:55:21 -耗时 : 70
2019-03-27 12:55:21 -返回值 : com.bootdo.common.utils.PageUtils@12c37808
2019-03-27 12:55:25 -请求地址 : http://localhost:8081/moneyLog/elecLog/edit/1
2019-03-27 12:55:25 -HTTP METHOD : GET
2019-03-27 12:55:25 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.edit
2019-03-27 12:55:25 -参数 : [1, {}]
2019-03-27 12:55:25 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log where id = ? 
2019-03-27 12:55:25 -==> Parameters: 1(Long)
2019-03-27 12:55:25 -<==      Total: 1
2019-03-27 12:55:25 -耗时 : 9
2019-03-27 12:55:25 -返回值 : moneyLog/elecLog/edit
2019-03-27 12:55:25 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-27 12:55:25 -HTTP METHOD : GET
2019-03-27 12:55:25 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 12:55:25 -参数 : [userType]
2019-03-27 12:55:25 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 12:55:25 -==> Parameters: userType(String)
2019-03-27 12:55:25 -请求地址 : http://localhost:8081/common/dict/list/userOrg
2019-03-27 12:55:25 -HTTP METHOD : GET
2019-03-27 12:55:25 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 12:55:25 -参数 : [userOrg]
2019-03-27 12:55:25 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 12:55:25 -<==      Total: 2
2019-03-27 12:55:25 -==> Parameters: userOrg(String)
2019-03-27 12:55:25 -耗时 : 3
2019-03-27 12:55:25 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 12:55:25 -<==      Total: 0
2019-03-27 12:55:25 -耗时 : 5
2019-03-27 12:55:25 -返回值 : []
2019-03-27 12:56:20 -请求地址 : http://localhost:8081/moneyLog/elecLog/edit/1
2019-03-27 12:56:20 -HTTP METHOD : GET
2019-03-27 12:56:20 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.edit
2019-03-27 12:56:20 -参数 : [1, {}]
2019-03-27 12:56:20 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log where id = ? 
2019-03-27 12:56:20 -==> Parameters: 1(Long)
2019-03-27 12:56:20 -<==      Total: 1
2019-03-27 12:56:20 -耗时 : 4
2019-03-27 12:56:20 -返回值 : moneyLog/elecLog/edit
2019-03-27 12:56:20 -请求地址 : http://localhost:8081/common/dict/list/userOrg
2019-03-27 12:56:20 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-27 12:56:20 -HTTP METHOD : GET
2019-03-27 12:56:20 -HTTP METHOD : GET
2019-03-27 12:56:20 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 12:56:20 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 12:56:20 -参数 : [userOrg]
2019-03-27 12:56:20 -参数 : [userType]
2019-03-27 12:56:20 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 12:56:20 -==> Parameters: userType(String)
2019-03-27 12:56:20 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 12:56:20 -==> Parameters: userOrg(String)
2019-03-27 12:56:20 -<==      Total: 2
2019-03-27 12:56:20 -耗时 : 6
2019-03-27 12:56:20 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 12:56:20 -<==      Total: 0
2019-03-27 12:56:20 -耗时 : 15
2019-03-27 12:56:20 -返回值 : []
2019-03-27 13:17:01 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 4 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(4)-CONNECTED(4)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 45], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 7], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 437]
2019-03-27 13:40:39 -请求地址 : http://localhost:8081/login;JSESSIONID=7ee226e7-0946-496b-8525-79bc44dff750
2019-03-27 13:40:39 -HTTP METHOD : GET
2019-03-27 13:40:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-27 13:40:39 -参数 : [{}]
2019-03-27 13:40:39 -耗时 : 1
2019-03-27 13:40:39 -返回值 : login
2019-03-27 13:40:46 -请求地址 : http://localhost:8081/login
2019-03-27 13:40:46 -HTTP METHOD : GET
2019-03-27 13:40:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-27 13:40:46 -参数 : [{}]
2019-03-27 13:40:46 -耗时 : 0
2019-03-27 13:40:46 -返回值 : login
2019-03-27 13:40:46 -请求地址 : http://localhost:8081/login
2019-03-27 13:40:46 -HTTP METHOD : GET
2019-03-27 13:40:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-27 13:40:46 -参数 : [{}]
2019-03-27 13:40:46 -耗时 : 0
2019-03-27 13:40:46 -返回值 : login
2019-03-27 13:40:46 -请求地址 : http://localhost:8081/getVerify
2019-03-27 13:40:46 -HTTP METHOD : GET
2019-03-27 13:40:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-27 13:40:46 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@41b96cd2, org.apache.shiro.web.servlet.ShiroHttpServletResponse@171a65d5]
2019-03-27 13:40:47 -9260
2019-03-27 13:40:47 -耗时 : 59
2019-03-27 13:40:47 -返回值 : null
2019-03-27 13:40:47 -请求地址 : http://localhost:8081/getVerify
2019-03-27 13:40:47 -HTTP METHOD : GET
2019-03-27 13:40:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-27 13:40:47 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@444a9769, org.apache.shiro.web.servlet.ShiroHttpServletResponse@381fe6f5]
2019-03-27 13:40:47 -2807
2019-03-27 13:40:47 -耗时 : 26
2019-03-27 13:40:47 -返回值 : null
2019-03-27 13:40:57 -请求地址 : http://localhost:8081/login
2019-03-27 13:40:57 -HTTP METHOD : POST
2019-03-27 13:40:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-27 13:40:57 -参数 : [admin, 111111, 2807, org.apache.shiro.web.servlet.ShiroHttpServletRequest@531a04ef]
2019-03-27 13:40:57 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-27 13:40:57 -==> Parameters: admin(String)
2019-03-27 13:40:57 -<==      Total: 1
2019-03-27 13:40:57 -耗时 : 28
2019-03-27 13:40:57 -返回值 : {msg=操作成功, code=0}
2019-03-27 13:40:57 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-27 13:40:57 -==> Parameters: 1(Long), admin(String), 登录(String), 28(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-27 13:40:57.409(Timestamp)
2019-03-27 13:40:57 -请求地址 : http://localhost:8081/index
2019-03-27 13:40:57 -HTTP METHOD : GET
2019-03-27 13:40:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-27 13:40:57 -参数 : [{}]
2019-03-27 13:40:57 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-27 13:40:57 -==> Parameters: 1(Long)
2019-03-27 13:40:57 -<==      Total: 46
2019-03-27 13:40:57 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-27 13:40:57 -==> Parameters: 138(Long)
2019-03-27 13:40:57 -<==      Total: 1
2019-03-27 13:40:57 -耗时 : 30
2019-03-27 13:40:57 -返回值 : index_v1
2019-03-27 13:40:57 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-27 13:40:57 -<==    Updates: 1
2019-03-27 13:40:57 -请求地址 : http://localhost:8081/main
2019-03-27 13:40:57 -HTTP METHOD : GET
2019-03-27 13:40:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-27 13:40:57 -参数 : []
2019-03-27 13:40:57 -耗时 : 9
2019-03-27 13:40:57 -返回值 : main
2019-03-27 13:40:57 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 30(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-27 13:40:57.466(Timestamp)
2019-03-27 13:40:57 -<==    Updates: 1
2019-03-27 13:40:57 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-27 13:40:57 -HTTP METHOD : GET
2019-03-27 13:40:57 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-27 13:40:57 -参数 : []
2019-03-27 13:40:57 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-27 13:40:57 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-27 13:40:57 -<==      Total: 0
2019-03-27 13:40:57 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-27 13:40:57 -==> Parameters: 1(Long), 0(String)
2019-03-27 13:40:57 -<==      Total: 1
2019-03-27 13:40:57 -耗时 : 9
2019-03-27 13:40:57 -返回值 : com.bootdo.common.utils.PageUtils@1443abbb
2019-03-27 13:40:58 -请求地址 : http://localhost:8081/main
2019-03-27 13:40:58 -HTTP METHOD : GET
2019-03-27 13:40:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-27 13:40:58 -参数 : []
2019-03-27 13:40:58 -耗时 : 1
2019-03-27 13:40:58 -返回值 : main
2019-03-27 13:41:53 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-27 13:41:53 -==> Parameters: 1(Long)
2019-03-27 13:41:53 -<==      Total: 90
2019-03-27 13:41:53 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-27 13:41:53 -HTTP METHOD : GET
2019-03-27 13:41:53 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-27 13:41:53 -参数 : []
2019-03-27 13:41:53 -耗时 : 0
2019-03-27 13:41:53 -返回值 : /moneyLog/elecLog/elecLog
2019-03-27 13:41:54 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-27 13:41:54 -HTTP METHOD : GET
2019-03-27 13:41:54 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 13:41:54 -参数 : [userType]
2019-03-27 13:41:54 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 13:41:54 -==> Parameters: userType(String)
2019-03-27 13:41:54 -<==      Total: 2
2019-03-27 13:41:54 -耗时 : 6
2019-03-27 13:41:54 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 13:41:54 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-27 13:41:54 -HTTP METHOD : GET
2019-03-27 13:41:54 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-27 13:41:54 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-27 13:41:54 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-27 13:41:54 -==> Parameters: 0(Integer), 10(Integer)
2019-03-27 13:41:54 -<==      Total: 6
2019-03-27 13:41:54 -==>  Preparing: select count(*) from elec_log 
2019-03-27 13:41:54 -==> Parameters: 
2019-03-27 13:41:54 -<==      Total: 1
2019-03-27 13:41:54 -耗时 : 68
2019-03-27 13:41:54 -返回值 : com.bootdo.common.utils.PageUtils@2c45ca4f
2019-03-27 13:41:59 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-27 13:41:59 -HTTP METHOD : GET
2019-03-27 13:41:59 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-27 13:41:59 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=2019-03-19}]
2019-03-27 13:41:59 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE `elec_date` >= ? and `elec_date` <= ? order by id asc limit ?, ? 
2019-03-27 13:41:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 0(Integer), 10(Integer)
2019-03-27 13:41:59 -<==      Total: 3
2019-03-27 13:41:59 -==>  Preparing: select count(*) from elec_log WHERE `elec_date` >= ? and `elec_date` <= ? 
2019-03-27 13:41:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String)
2019-03-27 13:41:59 -<==      Total: 1
2019-03-27 13:41:59 -耗时 : 23
2019-03-27 13:41:59 -返回值 : com.bootdo.common.utils.PageUtils@718f7c5c
2019-03-27 13:42:01 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-27 13:42:01 -HTTP METHOD : GET
2019-03-27 13:42:01 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-27 13:42:01 -参数 : [{limit=10, offset=0, userType=A, userOrg=, userId=, elecDate=2019-03-19, type=A}]
2019-03-27 13:42:01 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? and `elec_date` >= ? and `elec_date` <= ? order by id asc limit ?, ? 
2019-03-27 13:42:01 -==> Parameters: A(String), 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 0(Integer), 10(Integer)
2019-03-27 13:42:01 -<==      Total: 3
2019-03-27 13:42:01 -==>  Preparing: select count(*) from elec_log WHERE user_type = ? and `elec_date` >= ? and `elec_date` <= ? 
2019-03-27 13:42:01 -==> Parameters: A(String), 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String)
2019-03-27 13:42:01 -<==      Total: 1
2019-03-27 13:42:01 -耗时 : 24
2019-03-27 13:42:01 -返回值 : com.bootdo.common.utils.PageUtils@3f21de14
2019-03-27 13:42:02 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-27 13:42:02 -HTTP METHOD : GET
2019-03-27 13:42:02 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-27 13:42:02 -参数 : []
2019-03-27 13:42:02 -耗时 : 2
2019-03-27 13:42:02 -返回值 : system/dept/deptTree
2019-03-27 13:42:02 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-27 13:42:02 -HTTP METHOD : GET
2019-03-27 13:42:02 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-27 13:42:02 -参数 : []
2019-03-27 13:42:02 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-27 13:42:02 -==> Parameters: 
2019-03-27 13:42:02 -<==      Total: 3
2019-03-27 13:42:02 -耗时 : 30
2019-03-27 13:42:02 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-27 13:42:04 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-27 13:42:04 -HTTP METHOD : GET
2019-03-27 13:42:04 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-27 13:42:04 -参数 : [{limit=10, offset=0, userType=A, userOrg=2, userId=, elecDate=2019-03-19}]
2019-03-27 13:42:04 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? and user_org = ? and `elec_date` >= ? and `elec_date` <= ? order by id asc limit ?, ? 
2019-03-27 13:42:04 -==> Parameters: A(String), 2(String), 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 0(Integer), 10(Integer)
2019-03-27 13:42:04 -<==      Total: 3
2019-03-27 13:42:04 -==>  Preparing: select count(*) from elec_log WHERE user_type = ? and user_org = ? and `elec_date` >= ? and `elec_date` <= ? 
2019-03-27 13:42:04 -==> Parameters: A(String), 2(String), 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String)
2019-03-27 13:42:04 -<==      Total: 1
2019-03-27 13:42:04 -耗时 : 12
2019-03-27 13:42:04 -返回值 : com.bootdo.common.utils.PageUtils@6150ae35
2019-03-27 13:42:05 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-27 13:42:05 -HTTP METHOD : GET
2019-03-27 13:42:05 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-27 13:42:05 -参数 : [{limit=10, offset=0, userType=A, userOrg=2, userId=, elecDate=2019-03-19}]
2019-03-27 13:42:05 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? and user_org = ? and `elec_date` >= ? and `elec_date` <= ? order by id asc limit ?, ? 
2019-03-27 13:42:05 -==> Parameters: A(String), 2(String), 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 0(Integer), 10(Integer)
2019-03-27 13:42:05 -<==      Total: 3
2019-03-27 13:42:05 -==>  Preparing: select count(*) from elec_log WHERE user_type = ? and user_org = ? and `elec_date` >= ? and `elec_date` <= ? 
2019-03-27 13:42:05 -==> Parameters: A(String), 2(String), 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String)
2019-03-27 13:42:05 -<==      Total: 1
2019-03-27 13:42:05 -耗时 : 7
2019-03-27 13:42:05 -返回值 : com.bootdo.common.utils.PageUtils@54e0f578
2019-03-27 13:42:05 -请求地址 : http://localhost:8081/moneyLog/elecLog/exprotElecLog
2019-03-27 13:42:05 -HTTP METHOD : GET
2019-03-27 13:42:05 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog
2019-03-27 13:42:05 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@46ef2acf, org.apache.shiro.web.servlet.ShiroHttpServletResponse@391e0c56, org.apache.shiro.web.servlet.ShiroHttpServletRequest@1cfe21bb]
2019-03-27 13:42:05 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? and user_org = ? and `elec_date` >= ? and `elec_date` <= ? 
2019-03-27 13:42:05 -==> Parameters: A(String), 2(String), 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String)
2019-03-27 13:42:05 -<==      Total: 3
2019-03-27 13:42:07 -耗时 : 1253
2019-03-27 13:42:07 -返回值 : null
2019-03-27 13:42:44 -请求地址 : http://localhost:8081/moneyLog/elecLog/add
2019-03-27 13:42:44 -HTTP METHOD : GET
2019-03-27 13:42:44 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.add
2019-03-27 13:42:44 -参数 : []
2019-03-27 13:42:44 -耗时 : 1
2019-03-27 13:42:44 -返回值 : moneyLog/elecLog/add
2019-03-27 13:42:44 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-27 13:42:44 -HTTP METHOD : GET
2019-03-27 13:42:44 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 13:42:44 -参数 : [userType]
2019-03-27 13:42:44 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 13:42:44 -==> Parameters: userType(String)
2019-03-27 13:42:44 -<==      Total: 2
2019-03-27 13:42:44 -耗时 : 4
2019-03-27 13:42:44 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 13:43:03 -请求地址 : http://localhost:8081/moneyLog/elecLog/edit/1
2019-03-27 13:43:03 -HTTP METHOD : GET
2019-03-27 13:43:03 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.edit
2019-03-27 13:43:03 -参数 : [1, {}]
2019-03-27 13:43:03 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log where id = ? 
2019-03-27 13:43:03 -==> Parameters: 1(Long)
2019-03-27 13:43:03 -<==      Total: 1
2019-03-27 13:43:03 -耗时 : 5
2019-03-27 13:43:03 -返回值 : moneyLog/elecLog/edit
2019-03-27 13:43:03 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-27 13:43:03 -HTTP METHOD : GET
2019-03-27 13:43:03 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 13:43:03 -参数 : [userType]
2019-03-27 13:43:03 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 13:43:03 -==> Parameters: userType(String)
2019-03-27 13:43:03 -请求地址 : http://localhost:8081/common/dict/list/userOrg
2019-03-27 13:43:03 -HTTP METHOD : GET
2019-03-27 13:43:03 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 13:43:03 -参数 : [userOrg]
2019-03-27 13:43:03 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 13:43:03 -==> Parameters: userOrg(String)
2019-03-27 13:43:03 -<==      Total: 2
2019-03-27 13:43:03 -耗时 : 4
2019-03-27 13:43:03 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 13:43:03 -<==      Total: 0
2019-03-27 13:43:03 -耗时 : 5
2019-03-27 13:43:03 -返回值 : []
2019-03-27 13:46:29 -Validating all active sessions...
2019-03-27 13:46:29 -Finished session validation.  No sessions were stopped.
2019-03-27 13:47:01 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 5 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(5)-CONNECTED(5)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 57], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 9], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 869]
2019-03-27 13:47:18 -请求地址 : http://localhost:8081/index
2019-03-27 13:47:18 -HTTP METHOD : GET
2019-03-27 13:47:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-27 13:47:18 -参数 : [{}]
2019-03-27 13:47:18 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-27 13:47:18 -==> Parameters: 1(Long)
2019-03-27 13:47:18 -<==      Total: 46
2019-03-27 13:47:18 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-27 13:47:18 -==> Parameters: 138(Long)
2019-03-27 13:47:18 -<==      Total: 1
2019-03-27 13:47:18 -耗时 : 21
2019-03-27 13:47:18 -返回值 : index_v1
2019-03-27 13:47:18 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-27 13:47:18 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 21(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-27 13:47:18.717(Timestamp)
2019-03-27 13:47:18 -<==    Updates: 1
2019-03-27 13:47:19 -请求地址 : http://localhost:8081/main
2019-03-27 13:47:19 -HTTP METHOD : GET
2019-03-27 13:47:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-27 13:47:19 -参数 : []
2019-03-27 13:47:19 -耗时 : 2
2019-03-27 13:47:19 -返回值 : main
2019-03-27 13:47:19 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-27 13:47:19 -HTTP METHOD : GET
2019-03-27 13:47:19 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-27 13:47:19 -参数 : []
2019-03-27 13:47:19 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-27 13:47:19 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-27 13:47:19 -<==      Total: 0
2019-03-27 13:47:19 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-27 13:47:19 -==> Parameters: 1(Long), 0(String)
2019-03-27 13:47:19 -<==      Total: 1
2019-03-27 13:47:19 -耗时 : 6
2019-03-27 13:47:19 -返回值 : com.bootdo.common.utils.PageUtils@34588a22
2019-03-27 13:47:19 -请求地址 : http://localhost:8081/main
2019-03-27 13:47:19 -HTTP METHOD : GET
2019-03-27 13:47:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-27 13:47:19 -参数 : []
2019-03-27 13:47:19 -耗时 : 0
2019-03-27 13:47:19 -返回值 : main
2019-03-27 13:47:23 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-27 13:47:23 -HTTP METHOD : GET
2019-03-27 13:47:23 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-27 13:47:23 -参数 : []
2019-03-27 13:47:23 -耗时 : 0
2019-03-27 13:47:23 -返回值 : /moneyLog/elecLog/elecLog
2019-03-27 13:47:24 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-27 13:47:24 -HTTP METHOD : GET
2019-03-27 13:47:24 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 13:47:24 -参数 : [userType]
2019-03-27 13:47:24 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 13:47:24 -==> Parameters: userType(String)
2019-03-27 13:47:24 -<==      Total: 2
2019-03-27 13:47:24 -耗时 : 19
2019-03-27 13:47:24 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 13:47:24 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-27 13:47:24 -HTTP METHOD : GET
2019-03-27 13:47:24 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-27 13:47:24 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-27 13:47:24 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-27 13:47:24 -==> Parameters: 0(Integer), 10(Integer)
2019-03-27 13:47:24 -<==      Total: 6
2019-03-27 13:47:24 -==>  Preparing: select count(*) from elec_log 
2019-03-27 13:47:24 -==> Parameters: 
2019-03-27 13:47:24 -<==      Total: 1
2019-03-27 13:47:24 -耗时 : 9
2019-03-27 13:47:24 -返回值 : com.bootdo.common.utils.PageUtils@4c88879b
2019-03-27 13:47:26 -请求地址 : http://localhost:8081/moneyLog/elecLog/edit/1
2019-03-27 13:47:26 -HTTP METHOD : GET
2019-03-27 13:47:26 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.edit
2019-03-27 13:47:26 -参数 : [1, {}]
2019-03-27 13:47:26 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log where id = ? 
2019-03-27 13:47:26 -==> Parameters: 1(Long)
2019-03-27 13:47:26 -<==      Total: 1
2019-03-27 13:47:26 -耗时 : 5
2019-03-27 13:47:26 -返回值 : moneyLog/elecLog/edit
2019-03-27 13:47:26 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-27 13:47:26 -HTTP METHOD : GET
2019-03-27 13:47:26 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 13:47:26 -参数 : [userType]
2019-03-27 13:47:26 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 13:47:26 -==> Parameters: userType(String)
2019-03-27 13:47:26 -<==      Total: 2
2019-03-27 13:47:26 -耗时 : 4
2019-03-27 13:47:26 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 13:47:26 -请求地址 : http://localhost:8081/common/dict/list/userOrg
2019-03-27 13:47:26 -HTTP METHOD : GET
2019-03-27 13:47:26 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 13:47:26 -参数 : [userOrg]
2019-03-27 13:47:26 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 13:47:26 -==> Parameters: userOrg(String)
2019-03-27 13:47:26 -<==      Total: 0
2019-03-27 13:47:26 -耗时 : 5
2019-03-27 13:47:26 -返回值 : []
2019-03-27 13:47:48 -请求地址 : http://localhost:8081/moneyLog/elecLog/edit/1
2019-03-27 13:47:48 -HTTP METHOD : GET
2019-03-27 13:47:48 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.edit
2019-03-27 13:47:48 -参数 : [1, {}]
2019-03-27 13:47:48 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log where id = ? 
2019-03-27 13:47:48 -==> Parameters: 1(Long)
2019-03-27 13:47:48 -<==      Total: 1
2019-03-27 13:47:48 -耗时 : 6
2019-03-27 13:47:48 -返回值 : moneyLog/elecLog/edit
2019-03-27 13:47:48 -请求地址 : http://localhost:8081/common/dict/list/userOrg
2019-03-27 13:47:48 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-27 13:47:48 -HTTP METHOD : GET
2019-03-27 13:47:48 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 13:47:48 -HTTP METHOD : GET
2019-03-27 13:47:48 -参数 : [userType]
2019-03-27 13:47:48 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 13:47:48 -参数 : [userOrg]
2019-03-27 13:47:48 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 13:47:48 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 13:47:48 -==> Parameters: userOrg(String)
2019-03-27 13:47:48 -==> Parameters: userType(String)
2019-03-27 13:47:48 -<==      Total: 0
2019-03-27 13:47:48 -<==      Total: 2
2019-03-27 13:47:48 -耗时 : 4
2019-03-27 13:47:48 -返回值 : []
2019-03-27 13:47:48 -耗时 : 4
2019-03-27 13:47:48 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 13:48:19 -请求地址 : http://localhost:8081/moneyLog/elecLog/add
2019-03-27 13:48:19 -HTTP METHOD : GET
2019-03-27 13:48:19 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.add
2019-03-27 13:48:19 -参数 : []
2019-03-27 13:48:19 -耗时 : 1
2019-03-27 13:48:19 -返回值 : moneyLog/elecLog/add
2019-03-27 13:48:19 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-27 13:48:19 -HTTP METHOD : GET
2019-03-27 13:48:19 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 13:48:19 -参数 : [userType]
2019-03-27 13:48:19 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 13:48:19 -==> Parameters: userType(String)
2019-03-27 13:48:19 -<==      Total: 2
2019-03-27 13:48:19 -耗时 : 5
2019-03-27 13:48:19 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 13:51:01 -请求地址 : http://localhost:8081/index
2019-03-27 13:51:01 -HTTP METHOD : GET
2019-03-27 13:51:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-27 13:51:01 -参数 : [{}]
2019-03-27 13:51:01 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-27 13:51:01 -==> Parameters: 1(Long)
2019-03-27 13:51:01 -<==      Total: 46
2019-03-27 13:51:01 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-27 13:51:01 -==> Parameters: 138(Long)
2019-03-27 13:51:01 -<==      Total: 1
2019-03-27 13:51:01 -耗时 : 20
2019-03-27 13:51:01 -返回值 : index_v1
2019-03-27 13:51:01 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-27 13:51:01 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 20(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-27 13:51:01.776(Timestamp)
2019-03-27 13:51:01 -<==    Updates: 1
2019-03-27 13:51:01 -请求地址 : http://localhost:8081/main
2019-03-27 13:51:01 -HTTP METHOD : GET
2019-03-27 13:51:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-27 13:51:01 -参数 : []
2019-03-27 13:51:01 -耗时 : 0
2019-03-27 13:51:01 -返回值 : main
2019-03-27 13:51:02 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-27 13:51:02 -HTTP METHOD : GET
2019-03-27 13:51:02 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-27 13:51:02 -参数 : []
2019-03-27 13:51:02 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-27 13:51:02 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-27 13:51:02 -<==      Total: 0
2019-03-27 13:51:02 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-27 13:51:02 -==> Parameters: 1(Long), 0(String)
2019-03-27 13:51:02 -<==      Total: 1
2019-03-27 13:51:02 -耗时 : 10
2019-03-27 13:51:02 -返回值 : com.bootdo.common.utils.PageUtils@7bbb6ab9
2019-03-27 13:51:02 -请求地址 : http://localhost:8081/main
2019-03-27 13:51:02 -HTTP METHOD : GET
2019-03-27 13:51:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-27 13:51:02 -参数 : []
2019-03-27 13:51:02 -耗时 : 0
2019-03-27 13:51:02 -返回值 : main
2019-03-27 13:51:14 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-27 13:51:14 -HTTP METHOD : GET
2019-03-27 13:51:14 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-27 13:51:14 -参数 : []
2019-03-27 13:51:14 -耗时 : 0
2019-03-27 13:51:14 -返回值 : /moneyLog/elecLog/elecLog
2019-03-27 13:51:15 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-27 13:51:15 -HTTP METHOD : GET
2019-03-27 13:51:15 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 13:51:15 -参数 : [userType]
2019-03-27 13:51:15 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 13:51:15 -==> Parameters: userType(String)
2019-03-27 13:51:15 -<==      Total: 2
2019-03-27 13:51:15 -耗时 : 5
2019-03-27 13:51:15 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 13:51:15 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-27 13:51:15 -HTTP METHOD : GET
2019-03-27 13:51:15 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-27 13:51:15 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-27 13:51:15 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-27 13:51:15 -==> Parameters: 0(Integer), 10(Integer)
2019-03-27 13:51:15 -<==      Total: 6
2019-03-27 13:51:15 -==>  Preparing: select count(*) from elec_log 
2019-03-27 13:51:15 -==> Parameters: 
2019-03-27 13:51:15 -<==      Total: 1
2019-03-27 13:51:15 -耗时 : 45
2019-03-27 13:51:15 -返回值 : com.bootdo.common.utils.PageUtils@4db66d32
2019-03-27 13:51:17 -请求地址 : http://localhost:8081/moneyLog/elecLog/edit/1
2019-03-27 13:51:17 -HTTP METHOD : GET
2019-03-27 13:51:17 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.edit
2019-03-27 13:51:17 -参数 : [1, {}]
2019-03-27 13:51:17 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log where id = ? 
2019-03-27 13:51:17 -==> Parameters: 1(Long)
2019-03-27 13:51:17 -<==      Total: 1
2019-03-27 13:51:17 -耗时 : 4
2019-03-27 13:51:17 -返回值 : moneyLog/elecLog/edit
2019-03-27 13:51:17 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-27 13:51:17 -HTTP METHOD : GET
2019-03-27 13:51:17 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 13:51:17 -参数 : [userType]
2019-03-27 13:51:17 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 13:51:17 -==> Parameters: userType(String)
2019-03-27 13:51:17 -<==      Total: 2
2019-03-27 13:51:17 -耗时 : 5
2019-03-27 13:51:17 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 13:51:17 -请求地址 : http://localhost:8081/common/dict/list/userOrg
2019-03-27 13:51:17 -HTTP METHOD : GET
2019-03-27 13:51:17 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 13:51:17 -参数 : [userOrg]
2019-03-27 13:51:17 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 13:51:17 -==> Parameters: userOrg(String)
2019-03-27 13:51:17 -<==      Total: 0
2019-03-27 13:51:17 -耗时 : 6
2019-03-27 13:51:17 -返回值 : []
2019-03-27 13:51:59 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-27 13:51:59 -==> Parameters: 1(Long)
2019-03-27 13:51:59 -<==      Total: 90
2019-03-27 13:51:59 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-27 13:51:59 -HTTP METHOD : GET
2019-03-27 13:51:59 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-27 13:51:59 -参数 : []
2019-03-27 13:51:59 -耗时 : 0
2019-03-27 13:51:59 -返回值 : /moneyLog/heatLog/heatLog
2019-03-27 13:51:59 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-27 13:51:59 -HTTP METHOD : GET
2019-03-27 13:51:59 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 13:51:59 -参数 : [userType]
2019-03-27 13:51:59 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 13:51:59 -==> Parameters: userType(String)
2019-03-27 13:51:59 -<==      Total: 2
2019-03-27 13:51:59 -耗时 : 4
2019-03-27 13:51:59 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 13:51:59 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-27 13:51:59 -HTTP METHOD : GET
2019-03-27 13:51:59 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-27 13:51:59 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-03-27 13:51:59 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-27 13:51:59 -==> Parameters: 0(Integer), 10(Integer)
2019-03-27 13:51:59 -<==      Total: 4
2019-03-27 13:51:59 -==>  Preparing: select count(*) from heat_log 
2019-03-27 13:51:59 -==> Parameters: 
2019-03-27 13:51:59 -<==      Total: 1
2019-03-27 13:51:59 -耗时 : 113
2019-03-27 13:51:59 -返回值 : com.bootdo.common.utils.PageUtils@58c53fa7
2019-03-27 13:52:00 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-27 13:52:00 -HTTP METHOD : GET
2019-03-27 13:52:00 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-27 13:52:00 -参数 : []
2019-03-27 13:52:00 -耗时 : 1
2019-03-27 13:52:00 -返回值 : /moneyLog/elecLog/elecLog
2019-03-27 13:52:00 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-27 13:52:00 -HTTP METHOD : GET
2019-03-27 13:52:00 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-27 13:52:00 -参数 : []
2019-03-27 13:52:00 -耗时 : 0
2019-03-27 13:52:00 -返回值 : /moneyLog/elecLog/elecLog
2019-03-27 13:52:01 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-27 13:52:01 -HTTP METHOD : GET
2019-03-27 13:52:01 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 13:52:01 -参数 : [userType]
2019-03-27 13:52:01 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 13:52:01 -==> Parameters: userType(String)
2019-03-27 13:52:01 -<==      Total: 2
2019-03-27 13:52:01 -耗时 : 3
2019-03-27 13:52:01 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 13:52:01 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-27 13:52:01 -HTTP METHOD : GET
2019-03-27 13:52:01 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-27 13:52:01 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-27 13:52:01 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-27 13:52:01 -==> Parameters: 0(Integer), 10(Integer)
2019-03-27 13:52:01 -<==      Total: 6
2019-03-27 13:52:01 -==>  Preparing: select count(*) from elec_log 
2019-03-27 13:52:01 -==> Parameters: 
2019-03-27 13:52:01 -<==      Total: 1
2019-03-27 13:52:01 -耗时 : 8
2019-03-27 13:52:01 -返回值 : com.bootdo.common.utils.PageUtils@3a419817
2019-03-27 13:52:01 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-27 13:52:01 -HTTP METHOD : GET
2019-03-27 13:52:01 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-27 13:52:01 -参数 : []
2019-03-27 13:52:01 -耗时 : 0
2019-03-27 13:52:01 -返回值 : /moneyLog/heatLog/heatLog
2019-03-27 13:52:01 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-27 13:52:01 -HTTP METHOD : GET
2019-03-27 13:52:01 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 13:52:01 -参数 : [userType]
2019-03-27 13:52:01 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 13:52:01 -==> Parameters: userType(String)
2019-03-27 13:52:01 -<==      Total: 2
2019-03-27 13:52:01 -耗时 : 5
2019-03-27 13:52:01 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 13:52:01 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-27 13:52:01 -HTTP METHOD : GET
2019-03-27 13:52:01 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-27 13:52:01 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-03-27 13:52:01 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-27 13:52:01 -==> Parameters: 0(Integer), 10(Integer)
2019-03-27 13:52:01 -<==      Total: 4
2019-03-27 13:52:01 -==>  Preparing: select count(*) from heat_log 
2019-03-27 13:52:01 -==> Parameters: 
2019-03-27 13:52:01 -<==      Total: 1
2019-03-27 13:52:01 -耗时 : 9
2019-03-27 13:52:01 -返回值 : com.bootdo.common.utils.PageUtils@fb1fc6d
2019-03-27 13:52:01 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-27 13:52:01 -HTTP METHOD : GET
2019-03-27 13:52:01 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-27 13:52:01 -参数 : []
2019-03-27 13:52:01 -耗时 : 1
2019-03-27 13:52:01 -返回值 : /moneyLog/elecLog/elecLog
2019-03-27 13:52:02 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-27 13:52:02 -HTTP METHOD : GET
2019-03-27 13:52:02 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 13:52:02 -参数 : [userType]
2019-03-27 13:52:02 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 13:52:02 -==> Parameters: userType(String)
2019-03-27 13:52:02 -<==      Total: 2
2019-03-27 13:52:02 -耗时 : 4
2019-03-27 13:52:02 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 13:52:02 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-27 13:52:02 -HTTP METHOD : GET
2019-03-27 13:52:02 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-27 13:52:02 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-27 13:52:02 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-27 13:52:02 -==> Parameters: 0(Integer), 10(Integer)
2019-03-27 13:52:02 -<==      Total: 6
2019-03-27 13:52:02 -==>  Preparing: select count(*) from elec_log 
2019-03-27 13:52:02 -==> Parameters: 
2019-03-27 13:52:02 -<==      Total: 1
2019-03-27 13:52:02 -耗时 : 7
2019-03-27 13:52:02 -返回值 : com.bootdo.common.utils.PageUtils@5c67eaa2
2019-03-27 13:52:02 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-27 13:52:02 -HTTP METHOD : GET
2019-03-27 13:52:02 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-27 13:52:02 -参数 : []
2019-03-27 13:52:02 -耗时 : 1
2019-03-27 13:52:02 -返回值 : /moneyLog/heatLog/heatLog
2019-03-27 13:52:03 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-27 13:52:03 -HTTP METHOD : GET
2019-03-27 13:52:03 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 13:52:03 -参数 : [userType]
2019-03-27 13:52:03 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 13:52:03 -==> Parameters: userType(String)
2019-03-27 13:52:03 -<==      Total: 2
2019-03-27 13:52:03 -耗时 : 4
2019-03-27 13:52:03 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 13:52:03 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-27 13:52:03 -HTTP METHOD : GET
2019-03-27 13:52:03 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-27 13:52:03 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-03-27 13:52:03 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-27 13:52:03 -==> Parameters: 0(Integer), 10(Integer)
2019-03-27 13:52:03 -<==      Total: 4
2019-03-27 13:52:03 -==>  Preparing: select count(*) from heat_log 
2019-03-27 13:52:03 -==> Parameters: 
2019-03-27 13:52:03 -<==      Total: 1
2019-03-27 13:52:03 -耗时 : 9
2019-03-27 13:52:03 -返回值 : com.bootdo.common.utils.PageUtils@915656
2019-03-27 13:55:59 -请求地址 : http://localhost:8081/index
2019-03-27 13:55:59 -HTTP METHOD : GET
2019-03-27 13:55:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-27 13:55:59 -参数 : [{}]
2019-03-27 13:55:59 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-27 13:55:59 -==> Parameters: 1(Long)
2019-03-27 13:55:59 -<==      Total: 46
2019-03-27 13:55:59 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-27 13:55:59 -==> Parameters: 138(Long)
2019-03-27 13:55:59 -<==      Total: 1
2019-03-27 13:55:59 -耗时 : 24
2019-03-27 13:55:59 -返回值 : index_v1
2019-03-27 13:55:59 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-27 13:55:59 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 24(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-27 13:55:59.232(Timestamp)
2019-03-27 13:55:59 -<==    Updates: 1
2019-03-27 13:55:59 -请求地址 : http://localhost:8081/main
2019-03-27 13:55:59 -HTTP METHOD : GET
2019-03-27 13:55:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-27 13:55:59 -参数 : []
2019-03-27 13:55:59 -耗时 : 1
2019-03-27 13:55:59 -返回值 : main
2019-03-27 13:55:59 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-27 13:55:59 -HTTP METHOD : GET
2019-03-27 13:55:59 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-27 13:55:59 -参数 : []
2019-03-27 13:55:59 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-27 13:55:59 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-27 13:55:59 -<==      Total: 0
2019-03-27 13:55:59 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-27 13:55:59 -==> Parameters: 1(Long), 0(String)
2019-03-27 13:55:59 -<==      Total: 1
2019-03-27 13:55:59 -耗时 : 7
2019-03-27 13:55:59 -返回值 : com.bootdo.common.utils.PageUtils@156db58c
2019-03-27 13:56:00 -请求地址 : http://localhost:8081/main
2019-03-27 13:56:00 -HTTP METHOD : GET
2019-03-27 13:56:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-27 13:56:00 -参数 : []
2019-03-27 13:56:00 -耗时 : 0
2019-03-27 13:56:00 -返回值 : main
2019-03-27 13:56:02 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-27 13:56:02 -HTTP METHOD : GET
2019-03-27 13:56:02 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-27 13:56:02 -参数 : []
2019-03-27 13:56:02 -耗时 : 1
2019-03-27 13:56:02 -返回值 : /moneyLog/elecLog/elecLog
2019-03-27 13:56:03 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-27 13:56:03 -HTTP METHOD : GET
2019-03-27 13:56:03 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 13:56:03 -参数 : [userType]
2019-03-27 13:56:03 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 13:56:03 -==> Parameters: userType(String)
2019-03-27 13:56:03 -<==      Total: 2
2019-03-27 13:56:03 -耗时 : 5
2019-03-27 13:56:03 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 13:56:03 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-27 13:56:03 -HTTP METHOD : GET
2019-03-27 13:56:03 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-27 13:56:03 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-27 13:56:03 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-27 13:56:03 -==> Parameters: 0(Integer), 10(Integer)
2019-03-27 13:56:03 -<==      Total: 6
2019-03-27 13:56:03 -==>  Preparing: select count(*) from elec_log 
2019-03-27 13:56:03 -==> Parameters: 
2019-03-27 13:56:03 -<==      Total: 1
2019-03-27 13:56:03 -耗时 : 38
2019-03-27 13:56:03 -返回值 : com.bootdo.common.utils.PageUtils@617a0dc0
2019-03-27 13:56:04 -请求地址 : http://localhost:8081/moneyLog/elecLog/edit/1
2019-03-27 13:56:04 -HTTP METHOD : GET
2019-03-27 13:56:04 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.edit
2019-03-27 13:56:04 -参数 : [1, {}]
2019-03-27 13:56:04 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log where id = ? 
2019-03-27 13:56:04 -==> Parameters: 1(Long)
2019-03-27 13:56:04 -<==      Total: 1
2019-03-27 13:56:04 -耗时 : 7
2019-03-27 13:56:04 -返回值 : moneyLog/elecLog/edit
2019-03-27 13:56:05 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-27 13:56:05 -HTTP METHOD : GET
2019-03-27 13:56:05 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 13:56:05 -参数 : [userType]
2019-03-27 13:56:05 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 13:56:05 -==> Parameters: userType(String)
2019-03-27 13:56:05 -<==      Total: 2
2019-03-27 13:56:05 -耗时 : 3
2019-03-27 13:56:05 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 13:56:05 -请求地址 : http://localhost:8081/common/dict/list/userOrg
2019-03-27 13:56:05 -HTTP METHOD : GET
2019-03-27 13:56:05 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 13:56:05 -参数 : [userOrg]
2019-03-27 13:56:05 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 13:56:05 -==> Parameters: userOrg(String)
2019-03-27 13:56:05 -<==      Total: 0
2019-03-27 13:56:05 -耗时 : 4
2019-03-27 13:56:05 -返回值 : []
2019-03-27 14:17:01 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 8 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(8)-CONNECTED(8)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 93], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 15], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 1300]
2019-03-27 16:00:50 -Starting BootdoApplication on ZJZL-20180906VX with PID 8128 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-27 16:00:50 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-27 16:00:50 -The following profiles are active: dev
2019-03-27 16:00:50 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@33e01298: startup date [Wed Mar 27 16:00:50 CST 2019]; root of context hierarchy
2019-03-27 16:01:11 -Starting BootdoApplication on ZJZL-20180906VX with PID 15296 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-27 16:01:11 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-27 16:01:11 -The following profiles are active: dev
2019-03-27 16:01:12 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Wed Mar 27 16:01:12 CST 2019]; root of context hierarchy
2019-03-27 16:01:16 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-27 16:01:19 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d2517eec] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-27 16:01:20 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$c4aaad93] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-27 16:01:21 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-27 16:01:22 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-27 16:01:22 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-27 16:01:22 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-27 16:01:22 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-27 16:01:22 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-27 16:01:22 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-27 16:01:22 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-27 16:01:23 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-27 16:01:24 -Tomcat initialized with port(s): 8081 (http)
2019-03-27 16:01:24 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-27 16:01:24 -Starting service [Tomcat]
2019-03-27 16:01:24 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-27 16:01:24 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-27 16:01:25 -Initializing Spring embedded WebApplicationContext
2019-03-27 16:01:25 -Root WebApplicationContext: initialization completed in 13478 ms
2019-03-27 16:01:26 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-27 16:01:26 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-27 16:01:26 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-27 16:01:26 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-27 16:01:26 -Filter xssFilter was not registered (disabled)
2019-03-27 16:01:26 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-27 16:01:26 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-27 16:01:26 -Servlet statViewServlet mapped to [/druid/*]
2019-03-27 16:01:26 -Servlet dispatcherServlet mapped to [/]
2019-03-27 16:01:30 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Wed Mar 27 16:01:12 CST 2019]; root of context hierarchy
2019-03-27 16:01:31 -Using default implementation for ThreadExecutor
2019-03-27 16:01:31 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-27 16:01:31 -Quartz Scheduler v.2.2.1 created.
2019-03-27 16:01:31 -RAMJobStore initialized.
2019-03-27 16:01:31 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-27 16:01:31 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-27 16:01:31 -Quartz scheduler version: 2.2.1
2019-03-27 16:01:31 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@372954e1
2019-03-27 16:01:32 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-27 16:01:32 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-27 16:01:39 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-27 16:01:39 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-27 16:01:39 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-03-27 16:01:39 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-27 16:01:39 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-27 16:01:39 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-27 16:01:39 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-27 16:01:39 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-27 16:01:39 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-27 16:01:39 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-27 16:01:39 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-27 16:01:39 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 16:01:39 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-27 16:01:39 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-27 16:01:39 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-27 16:01:39 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-27 16:01:39 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 16:01:39 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-27 16:01:39 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-27 16:01:39 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-27 16:01:39 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-27 16:01:39 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-27 16:01:39 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 16:01:39 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-27 16:01:39 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-27 16:01:39 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-27 16:01:39 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-27 16:01:39 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 16:01:39 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 16:01:39 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-27 16:01:39 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-27 16:01:39 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-27 16:01:39 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-27 16:01:39 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-27 16:01:39 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-27 16:01:39 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-27 16:01:39 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-27 16:01:39 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-27 16:01:39 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 16:01:39 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-27 16:01:39 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-27 16:01:39 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 16:01:39 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-27 16:01:39 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-27 16:01:39 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-27 16:01:39 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-27 16:01:39 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 16:01:39 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-27 16:01:39 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-03-27 16:01:39 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-27 16:01:39 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-27 16:01:39 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-27 16:01:39 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-27 16:01:39 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-27 16:01:39 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-27 16:01:39 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-27 16:01:39 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-27 16:01:39 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-27 16:01:39 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 16:01:39 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-27 16:01:39 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-27 16:01:39 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-27 16:01:39 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-03-27 16:01:39 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-27 16:01:40 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-27 16:01:40 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-27 16:01:40 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-27 16:01:40 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-27 16:01:40 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 16:01:40 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-03-27 16:01:40 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 16:01:40 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-27 16:01:40 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-27 16:01:40 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-27 16:01:40 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-27 16:01:40 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-27 16:01:40 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-27 16:01:40 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-27 16:01:40 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 16:01:40 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-27 16:01:40 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-27 16:01:40 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-27 16:01:40 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-27 16:01:40 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-27 16:01:40 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-27 16:01:40 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-27 16:01:40 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-27 16:01:40 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-27 16:01:40 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-27 16:01:40 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 16:01:40 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-27 16:01:40 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 16:01:40 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-27 16:01:40 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-27 16:01:40 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-27 16:01:40 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-03-27 16:01:40 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-03-27 16:01:40 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-27 16:01:40 -Mapped "{[/moneyList/moneyList/UserList],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-27 16:01:40 -Mapped "{[/moneyList/moneyList/LikeName],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.LikeName(org.springframework.ui.Model)
2019-03-27 16:01:40 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-27 16:01:40 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-27 16:01:40 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-27 16:01:40 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-27 16:01:40 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 16:01:40 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-27 16:01:40 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 16:01:40 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-27 16:01:40 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-27 16:01:40 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-27 16:01:40 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-27 16:01:40 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-27 16:01:40 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-27 16:01:40 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 16:01:40 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-27 16:01:40 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 16:01:40 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-27 16:01:40 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-27 16:01:40 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-27 16:01:40 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-27 16:01:40 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-27 16:01:40 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-27 16:01:40 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 16:01:40 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-27 16:01:40 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 16:01:40 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-27 16:01:40 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-27 16:01:40 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-27 16:01:40 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-27 16:01:40 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-27 16:01:40 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-27 16:01:40 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-27 16:01:40 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 16:01:40 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-27 16:01:40 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-27 16:01:40 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 16:01:40 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-27 16:01:40 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 16:01:40 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-27 16:01:40 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-27 16:01:40 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-27 16:01:40 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-27 16:01:40 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-27 16:01:40 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 16:01:40 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-27 16:01:40 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 16:01:40 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-27 16:01:40 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-27 16:01:40 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 16:01:40 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-27 16:01:40 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-27 16:01:40 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-27 16:01:40 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-27 16:01:40 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-27 16:01:40 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-27 16:01:40 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-27 16:01:40 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-27 16:01:40 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 16:01:40 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-27 16:01:40 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-27 16:01:40 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-27 16:01:40 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-27 16:01:40 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-27 16:01:40 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-27 16:01:40 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-27 16:01:40 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-27 16:01:40 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-27 16:01:40 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-27 16:01:40 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-27 16:01:40 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 16:01:40 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-27 16:01:40 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-27 16:01:40 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-27 16:01:40 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-27 16:01:40 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-27 16:01:40 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-27 16:01:40 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-27 16:01:40 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-27 16:01:40 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-27 16:01:40 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-27 16:01:40 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-27 16:01:40 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-27 16:01:40 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 16:01:40 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-27 16:01:40 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-27 16:01:40 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-27 16:01:40 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-27 16:01:40 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 16:01:40 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-27 16:01:40 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-27 16:01:40 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-27 16:01:40 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 16:01:40 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-27 16:01:40 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-27 16:01:40 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-27 16:01:40 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-27 16:01:40 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-27 16:01:40 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-27 16:01:40 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-27 16:01:40 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-27 16:01:40 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-27 16:01:40 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-27 16:01:40 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-27 16:01:40 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-27 16:01:40 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-27 16:01:40 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-27 16:01:40 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-27 16:01:40 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-27 16:01:40 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-27 16:01:40 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 16:01:40 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-27 16:01:40 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-27 16:01:40 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 16:01:40 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 16:01:40 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-27 16:01:40 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-27 16:01:40 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-27 16:01:40 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-27 16:01:40 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-27 16:01:40 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-27 16:01:40 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-27 16:01:40 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 16:01:40 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-27 16:01:40 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-27 16:01:40 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 16:01:40 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-03-27 16:01:40 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-03-27 16:01:40 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-27 16:01:40 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-27 16:01:41 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-27 16:01:41 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-27 16:01:41 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-27 16:01:41 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-27 16:01:43 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-27 16:01:45 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-27 16:01:45 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-27 16:01:46 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-27 16:01:47 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Wed Mar 27 16:01:12 CST 2019]; root of context hierarchy
2019-03-27 16:01:47 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-27 16:01:47 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-27 16:01:47 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-27 16:01:47 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-27 16:01:47 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-27 16:01:51 -Registering beans for JMX exposure on startup
2019-03-27 16:01:51 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-27 16:01:51 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-27 16:01:51 -Starting beans in phase 2147483647
2019-03-27 16:01:51 -Context refreshed
2019-03-27 16:01:51 -Found 1 custom documentation plugin(s)
2019-03-27 16:01:51 -Scanning for api listing references
2019-03-27 16:01:52 -Generating unique operation named: removeUsingPOST_1
2019-03-27 16:01:52 -Generating unique operation named: addUsingGET_1
2019-03-27 16:01:52 -Generating unique operation named: editUsingGET_1
2019-03-27 16:01:52 -Generating unique operation named: listUsingGET_1
2019-03-27 16:01:52 -Generating unique operation named: removeUsingPOST_2
2019-03-27 16:01:52 -Generating unique operation named: removeUsingPOST_3
2019-03-27 16:01:52 -Generating unique operation named: saveUsingPOST_1
2019-03-27 16:01:52 -Generating unique operation named: updateUsingGET_1
2019-03-27 16:01:52 -Generating unique operation named: updateUsingHEAD_1
2019-03-27 16:01:52 -Generating unique operation named: updateUsingPOST_1
2019-03-27 16:01:52 -Generating unique operation named: updateUsingPUT_1
2019-03-27 16:01:52 -Generating unique operation named: updateUsingPATCH_1
2019-03-27 16:01:52 -Generating unique operation named: updateUsingDELETE_1
2019-03-27 16:01:52 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-27 16:01:52 -Generating unique operation named: updateUsingTRACE_1
2019-03-27 16:01:52 -Generating unique operation named: addUsingGET_2
2019-03-27 16:01:52 -Generating unique operation named: editUsingGET_2
2019-03-27 16:01:52 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-27 16:01:52 -Generating unique operation named: listUsingGET_2
2019-03-27 16:01:52 -Generating unique operation named: removeUsingPOST_4
2019-03-27 16:01:52 -Generating unique operation named: removeUsingPOST_5
2019-03-27 16:01:52 -Generating unique operation named: saveUsingPOST_2
2019-03-27 16:01:52 -Generating unique operation named: updateUsingPOST_2
2019-03-27 16:01:52 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-27 16:01:52 -Generating unique operation named: addUsingGET_3
2019-03-27 16:01:52 -Generating unique operation named: editUsingGET_3
2019-03-27 16:01:52 -Generating unique operation named: listUsingGET_3
2019-03-27 16:01:52 -Generating unique operation named: removeUsingPOST_6
2019-03-27 16:01:52 -Generating unique operation named: removeUsingPOST_7
2019-03-27 16:01:52 -Generating unique operation named: saveUsingPOST_3
2019-03-27 16:01:52 -Generating unique operation named: updateUsingGET_2
2019-03-27 16:01:52 -Generating unique operation named: updateUsingHEAD_2
2019-03-27 16:01:52 -Generating unique operation named: updateUsingPOST_3
2019-03-27 16:01:52 -Generating unique operation named: updateUsingPUT_2
2019-03-27 16:01:52 -Generating unique operation named: updateUsingPATCH_2
2019-03-27 16:01:52 -Generating unique operation named: updateUsingDELETE_2
2019-03-27 16:01:52 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-27 16:01:52 -Generating unique operation named: updateUsingTRACE_2
2019-03-27 16:01:52 -Generating unique operation named: addUsingGET_4
2019-03-27 16:01:52 -Generating unique operation named: editUsingGET_4
2019-03-27 16:01:52 -Generating unique operation named: listUsingGET_4
2019-03-27 16:01:52 -Generating unique operation named: removeUsingPOST_8
2019-03-27 16:01:52 -Generating unique operation named: removeUsingPOST_9
2019-03-27 16:01:52 -Generating unique operation named: saveUsingPOST_4
2019-03-27 16:01:52 -Generating unique operation named: updateUsingGET_3
2019-03-27 16:01:52 -Generating unique operation named: updateUsingHEAD_3
2019-03-27 16:01:52 -Generating unique operation named: updateUsingPOST_4
2019-03-27 16:01:52 -Generating unique operation named: updateUsingPUT_3
2019-03-27 16:01:53 -Generating unique operation named: updateUsingPATCH_3
2019-03-27 16:01:53 -Generating unique operation named: updateUsingDELETE_3
2019-03-27 16:01:53 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-27 16:01:53 -Generating unique operation named: updateUsingTRACE_3
2019-03-27 16:01:53 -Generating unique operation named: ElecUsingGET_1
2019-03-27 16:01:53 -Generating unique operation named: addUsingGET_5
2019-03-27 16:01:53 -Generating unique operation named: editUsingGET_5
2019-03-27 16:01:53 -Generating unique operation named: listUsingGET_5
2019-03-27 16:01:53 -Generating unique operation named: removeUsingPOST_10
2019-03-27 16:01:53 -Generating unique operation named: removeUsingPOST_11
2019-03-27 16:01:53 -Generating unique operation named: saveUsingPOST_5
2019-03-27 16:01:53 -Generating unique operation named: updateUsingGET_4
2019-03-27 16:01:53 -Generating unique operation named: updateUsingHEAD_4
2019-03-27 16:01:53 -Generating unique operation named: updateUsingPOST_5
2019-03-27 16:01:53 -Generating unique operation named: updateUsingPUT_4
2019-03-27 16:01:53 -Generating unique operation named: updateUsingPATCH_4
2019-03-27 16:01:53 -Generating unique operation named: updateUsingDELETE_4
2019-03-27 16:01:53 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-27 16:01:53 -Generating unique operation named: updateUsingTRACE_4
2019-03-27 16:01:53 -Generating unique operation named: editUsingGET_6
2019-03-27 16:01:53 -Generating unique operation named: listUsingGET_6
2019-03-27 16:01:53 -Generating unique operation named: updateUsingPOST_6
2019-03-27 16:01:53 -Generating unique operation named: addUsingGET_6
2019-03-27 16:01:53 -Generating unique operation named: editUsingGET_7
2019-03-27 16:01:53 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-27 16:01:53 -Generating unique operation named: listUsingGET_7
2019-03-27 16:01:53 -Generating unique operation named: removeUsingPOST_12
2019-03-27 16:01:53 -Generating unique operation named: removeUsingPOST_13
2019-03-27 16:01:53 -Generating unique operation named: saveUsingPOST_6
2019-03-27 16:01:53 -Generating unique operation named: updateUsingGET_5
2019-03-27 16:01:53 -Generating unique operation named: updateUsingHEAD_5
2019-03-27 16:01:53 -Generating unique operation named: updateUsingPOST_7
2019-03-27 16:01:53 -Generating unique operation named: updateUsingPUT_5
2019-03-27 16:01:53 -Generating unique operation named: updateUsingPATCH_5
2019-03-27 16:01:53 -Generating unique operation named: updateUsingDELETE_5
2019-03-27 16:01:53 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-27 16:01:53 -Generating unique operation named: updateUsingTRACE_5
2019-03-27 16:01:53 -Generating unique operation named: exprotExcelUsingGET_4
2019-03-27 16:01:53 -Generating unique operation named: addUsingGET_7
2019-03-27 16:01:53 -Generating unique operation named: editUsingGET_8
2019-03-27 16:01:53 -Generating unique operation named: listUsingGET_8
2019-03-27 16:01:53 -Generating unique operation named: removeUsingPOST_14
2019-03-27 16:01:53 -Generating unique operation named: removeUsingPOST_15
2019-03-27 16:01:53 -Generating unique operation named: saveUsingPOST_7
2019-03-27 16:01:53 -Generating unique operation named: updateUsingGET_6
2019-03-27 16:01:53 -Generating unique operation named: updateUsingHEAD_6
2019-03-27 16:01:53 -Generating unique operation named: updateUsingPOST_8
2019-03-27 16:01:53 -Generating unique operation named: updateUsingPUT_6
2019-03-27 16:01:53 -Generating unique operation named: updateUsingPATCH_6
2019-03-27 16:01:53 -Generating unique operation named: updateUsingDELETE_6
2019-03-27 16:01:53 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-27 16:01:53 -Generating unique operation named: updateUsingTRACE_6
2019-03-27 16:01:53 -Generating unique operation named: addUsingGET_8
2019-03-27 16:01:53 -Generating unique operation named: editUsingGET_9
2019-03-27 16:01:53 -Generating unique operation named: listUsingGET_9
2019-03-27 16:01:53 -Generating unique operation named: removeUsingPOST_16
2019-03-27 16:01:53 -Generating unique operation named: removeUsingPOST_17
2019-03-27 16:01:53 -Generating unique operation named: saveUsingPOST_8
2019-03-27 16:01:53 -Generating unique operation named: updateUsingGET_7
2019-03-27 16:01:53 -Generating unique operation named: updateUsingHEAD_7
2019-03-27 16:01:53 -Generating unique operation named: updateUsingPOST_9
2019-03-27 16:01:53 -Generating unique operation named: updateUsingPUT_7
2019-03-27 16:01:53 -Generating unique operation named: updateUsingPATCH_7
2019-03-27 16:01:53 -Generating unique operation named: updateUsingDELETE_7
2019-03-27 16:01:53 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-27 16:01:53 -Generating unique operation named: updateUsingTRACE_7
2019-03-27 16:01:53 -Generating unique operation named: addUsingGET_9
2019-03-27 16:01:53 -Generating unique operation named: editUsingGET_10
2019-03-27 16:01:53 -Generating unique operation named: infoUsingGET_1
2019-03-27 16:01:53 -Generating unique operation named: infoUsingHEAD_1
2019-03-27 16:01:53 -Generating unique operation named: infoUsingPOST_1
2019-03-27 16:01:53 -Generating unique operation named: infoUsingPUT_1
2019-03-27 16:01:53 -Generating unique operation named: infoUsingPATCH_1
2019-03-27 16:01:53 -Generating unique operation named: infoUsingDELETE_1
2019-03-27 16:01:53 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-27 16:01:53 -Generating unique operation named: infoUsingTRACE_1
2019-03-27 16:01:53 -Generating unique operation named: listUsingGET_10
2019-03-27 16:01:53 -Generating unique operation named: removeUsingPOST_18
2019-03-27 16:01:53 -Generating unique operation named: removeUsingPOST_19
2019-03-27 16:01:53 -Generating unique operation named: saveUsingPOST_9
2019-03-27 16:01:53 -Generating unique operation named: updateUsingPOST_10
2019-03-27 16:01:53 -Generating unique operation named: listUsingGET_11
2019-03-27 16:01:53 -Generating unique operation named: removeUsingPOST_20
2019-03-27 16:01:53 -Generating unique operation named: welcomeUsingGET_1
2019-03-27 16:01:53 -Generating unique operation named: addUsingGET_10
2019-03-27 16:01:53 -Generating unique operation named: editUsingGET_11
2019-03-27 16:01:53 -Generating unique operation named: listUsingGET_12
2019-03-27 16:01:53 -Generating unique operation named: removeUsingPOST_21
2019-03-27 16:01:53 -Generating unique operation named: saveUsingPOST_10
2019-03-27 16:01:53 -Generating unique operation named: treeUsingGET_1
2019-03-27 16:01:53 -Generating unique operation named: treeUsingGET_2
2019-03-27 16:01:53 -Generating unique operation named: updateUsingPOST_11
2019-03-27 16:01:54 -Generating unique operation named: addUsingGET_11
2019-03-27 16:01:54 -Generating unique operation named: editUsingGET_12
2019-03-27 16:01:54 -Generating unique operation named: listUsingGET_13
2019-03-27 16:01:54 -Generating unique operation named: removeUsingPOST_22
2019-03-27 16:01:54 -Generating unique operation named: removeUsingPOST_23
2019-03-27 16:01:54 -Generating unique operation named: saveUsingPOST_11
2019-03-27 16:01:54 -Generating unique operation named: updateUsingGET_8
2019-03-27 16:01:54 -Generating unique operation named: updateUsingHEAD_8
2019-03-27 16:01:54 -Generating unique operation named: updateUsingPOST_12
2019-03-27 16:01:54 -Generating unique operation named: updateUsingPUT_8
2019-03-27 16:01:54 -Generating unique operation named: updateUsingPATCH_8
2019-03-27 16:01:54 -Generating unique operation named: updateUsingDELETE_8
2019-03-27 16:01:54 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-27 16:01:54 -Generating unique operation named: updateUsingTRACE_8
2019-03-27 16:01:54 -Generating unique operation named: addUsingGET_12
2019-03-27 16:01:54 -Generating unique operation named: editUsingGET_13
2019-03-27 16:01:54 -Generating unique operation named: listUsingGET_14
2019-03-27 16:01:54 -Generating unique operation named: removeUsingPOST_24
2019-03-27 16:01:54 -Generating unique operation named: removeUsingPOST_25
2019-03-27 16:01:54 -Generating unique operation named: saveUsingPOST_12
2019-03-27 16:01:54 -Generating unique operation named: updateUsingGET_9
2019-03-27 16:01:54 -Generating unique operation named: updateUsingHEAD_9
2019-03-27 16:01:54 -Generating unique operation named: updateUsingPOST_13
2019-03-27 16:01:54 -Generating unique operation named: updateUsingPUT_9
2019-03-27 16:01:54 -Generating unique operation named: updateUsingPATCH_9
2019-03-27 16:01:54 -Generating unique operation named: updateUsingDELETE_9
2019-03-27 16:01:54 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-27 16:01:54 -Generating unique operation named: updateUsingTRACE_9
2019-03-27 16:01:54 -Generating unique operation named: addUsingGET_13
2019-03-27 16:01:54 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-27 16:01:54 -Generating unique operation named: editUsingGET_14
2019-03-27 16:01:54 -Generating unique operation named: listUsingGET_15
2019-03-27 16:01:54 -Generating unique operation named: saveUsingPOST_13
2019-03-27 16:01:54 -Generating unique operation named: saveUsingPOST_14
2019-03-27 16:01:54 -Generating unique operation named: updateUsingPOST_14
2019-03-27 16:01:54 -Generating unique operation named: listUsingGET_16
2019-03-27 16:01:54 -Generating unique operation named: listUsingHEAD_1
2019-03-27 16:01:54 -Generating unique operation named: listUsingPOST_1
2019-03-27 16:01:54 -Generating unique operation named: listUsingPUT_1
2019-03-27 16:01:54 -Generating unique operation named: listUsingPATCH_1
2019-03-27 16:01:54 -Generating unique operation named: listUsingDELETE_1
2019-03-27 16:01:54 -Generating unique operation named: listUsingOPTIONS_1
2019-03-27 16:01:54 -Generating unique operation named: listUsingTRACE_1
2019-03-27 16:01:54 -Generating unique operation named: addUsingGET_14
2019-03-27 16:01:54 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-27 16:01:54 -Generating unique operation named: editUsingGET_15
2019-03-27 16:01:54 -Generating unique operation named: listUsingGET_17
2019-03-27 16:01:54 -Generating unique operation named: removeUsingPOST_26
2019-03-27 16:01:54 -Generating unique operation named: saveUsingPOST_15
2019-03-27 16:01:54 -Generating unique operation named: treeUsingGET_3
2019-03-27 16:01:54 -Generating unique operation named: treeViewUsingGET_1
2019-03-27 16:01:54 -Generating unique operation named: updateUsingPOST_15
2019-03-27 16:01:54 -Generating unique operation named: addUsingGET_15
2019-03-27 16:01:54 -Generating unique operation named: editUsingGET_16
2019-03-27 16:01:54 -Generating unique operation named: exprotExcelUsingGET_5
2019-03-27 16:01:54 -Generating unique operation named: listUsingGET_18
2019-03-27 16:01:54 -Generating unique operation named: removeUsingPOST_27
2019-03-27 16:01:54 -Generating unique operation named: removeUsingPOST_28
2019-03-27 16:01:54 -Generating unique operation named: saveUsingPOST_16
2019-03-27 16:01:54 -Generating unique operation named: updateUsingGET_10
2019-03-27 16:01:54 -Generating unique operation named: updateUsingHEAD_10
2019-03-27 16:01:54 -Generating unique operation named: updateUsingPOST_16
2019-03-27 16:01:54 -Generating unique operation named: updateUsingPUT_10
2019-03-27 16:01:54 -Generating unique operation named: updateUsingPATCH_10
2019-03-27 16:01:54 -Generating unique operation named: updateUsingDELETE_10
2019-03-27 16:01:54 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-27 16:01:54 -Generating unique operation named: updateUsingTRACE_10
2019-03-27 16:01:54 -Generating unique operation named: exprotExcelUsingGET_6
2019-03-27 16:01:54 -Generating unique operation named: addUsingGET_16
2019-03-27 16:01:54 -Generating unique operation named: editUsingGET_17
2019-03-27 16:01:54 -Generating unique operation named: listUsingGET_19
2019-03-27 16:01:54 -Generating unique operation named: removeUsingPOST_29
2019-03-27 16:01:54 -Generating unique operation named: removeUsingPOST_30
2019-03-27 16:01:54 -Generating unique operation named: saveUsingPOST_17
2019-03-27 16:01:54 -Generating unique operation named: updateUsingGET_11
2019-03-27 16:01:54 -Generating unique operation named: updateUsingHEAD_11
2019-03-27 16:01:54 -Generating unique operation named: updateUsingPOST_17
2019-03-27 16:01:54 -Generating unique operation named: updateUsingPUT_11
2019-03-27 16:01:54 -Generating unique operation named: updateUsingPATCH_11
2019-03-27 16:01:54 -Generating unique operation named: updateUsingDELETE_11
2019-03-27 16:01:54 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-27 16:01:54 -Generating unique operation named: updateUsingTRACE_11
2019-03-27 16:01:54 -Generating unique operation named: addUsingGET_17
2019-03-27 16:01:54 -Generating unique operation named: editUsingGET_18
2019-03-27 16:01:54 -Generating unique operation named: listUsingGET_20
2019-03-27 16:01:54 -Generating unique operation named: removeUsingPOST_31
2019-03-27 16:01:54 -Generating unique operation named: removeUsingPOST_32
2019-03-27 16:01:54 -Generating unique operation named: saveUsingPOST_18
2019-03-27 16:01:54 -Generating unique operation named: updateUsingGET_12
2019-03-27 16:01:54 -Generating unique operation named: updateUsingHEAD_12
2019-03-27 16:01:54 -Generating unique operation named: updateUsingPOST_18
2019-03-27 16:01:54 -Generating unique operation named: updateUsingPUT_12
2019-03-27 16:01:54 -Generating unique operation named: updateUsingPATCH_12
2019-03-27 16:01:54 -Generating unique operation named: updateUsingDELETE_12
2019-03-27 16:01:54 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-27 16:01:54 -Generating unique operation named: updateUsingTRACE_12
2019-03-27 16:01:55 -Starting Quartz Scheduler now
2019-03-27 16:01:55 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-27 16:01:55 -Starting...
2019-03-27 16:01:55 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-27 16:01:55 -Started.
2019-03-27 16:01:55 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-27 16:01:55 -Using a shared selector for servlet write/read
2019-03-27 16:01:55 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-27 16:01:55 -Started BootdoApplication in 44.764 seconds (JVM running for 45.901)
2019-03-27 16:01:55 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-27 16:01:55 -==> Parameters: 
2019-03-27 16:01:55 -<==      Total: 1
2019-03-27 16:02:45 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-03-27 16:06:29 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-27 16:06:29 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-27 16:06:30 -FrameworkServlet 'dispatcherServlet': initialization completed in 120 ms
2019-03-27 16:06:30 -Enabling session validation scheduler...
2019-03-27 16:06:30 -请求地址 : http://localhost:8081/login;JSESSIONID=5c9af413-f179-48b1-9525-220e41865311
2019-03-27 16:06:30 -HTTP METHOD : GET
2019-03-27 16:06:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-27 16:06:30 -参数 : [{}]
2019-03-27 16:06:30 -耗时 : 8
2019-03-27 16:06:30 -返回值 : login
2019-03-27 16:06:32 -请求地址 : http://localhost:8081/getVerify
2019-03-27 16:06:32 -HTTP METHOD : GET
2019-03-27 16:06:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-27 16:06:32 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@7c9a3a96, org.apache.shiro.web.servlet.ShiroHttpServletResponse@8a8e64f]
2019-03-27 16:06:37 -3851
2019-03-27 16:06:37 -耗时 : 5428
2019-03-27 16:06:37 -返回值 : null
2019-03-27 16:06:37 -请求地址 : http://localhost:8081/login
2019-03-27 16:06:37 -HTTP METHOD : GET
2019-03-27 16:06:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-27 16:06:37 -参数 : [{}]
2019-03-27 16:06:37 -耗时 : 0
2019-03-27 16:06:37 -返回值 : login
2019-03-27 16:06:43 -请求地址 : http://localhost:8081/login
2019-03-27 16:06:43 -HTTP METHOD : POST
2019-03-27 16:06:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-27 16:06:43 -参数 : [admin, 111111, 3851, org.apache.shiro.web.servlet.ShiroHttpServletRequest@4f17a506]
2019-03-27 16:06:43 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-27 16:06:43 -==> Parameters: admin(String)
2019-03-27 16:06:43 -<==      Total: 1
2019-03-27 16:06:43 -耗时 : 577
2019-03-27 16:06:43 -返回值 : {msg=操作成功, code=0}
2019-03-27 16:06:44 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-03-27 16:06:44 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-27 16:06:44 -==> Parameters: 1(Long), admin(String), 登录(String), 578(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-27 16:06:44.041(Timestamp)
2019-03-27 16:06:44 -<==    Updates: 1
2019-03-27 16:06:44 -请求地址 : http://localhost:8081/index
2019-03-27 16:06:44 -HTTP METHOD : GET
2019-03-27 16:06:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-27 16:06:44 -参数 : [{}]
2019-03-27 16:06:44 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-27 16:06:44 -==> Parameters: 1(Long)
2019-03-27 16:06:45 -<==      Total: 46
2019-03-27 16:06:45 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-27 16:06:45 -==> Parameters: 138(Long)
2019-03-27 16:06:45 -<==      Total: 1
2019-03-27 16:06:45 -耗时 : 1180
2019-03-27 16:06:45 -返回值 : index_v1
2019-03-27 16:06:45 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-27 16:06:45 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 1180(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-27 16:06:45.843(Timestamp)
2019-03-27 16:06:46 -<==    Updates: 1
2019-03-27 16:06:46 -请求地址 : http://localhost:8081/main
2019-03-27 16:06:46 -HTTP METHOD : GET
2019-03-27 16:06:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-27 16:06:46 -参数 : []
2019-03-27 16:06:46 -耗时 : 1
2019-03-27 16:06:46 -返回值 : main
2019-03-27 16:06:47 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-27 16:06:47 -HTTP METHOD : GET
2019-03-27 16:06:47 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-27 16:06:47 -参数 : []
2019-03-27 16:06:47 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-27 16:06:47 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-27 16:06:47 -请求地址 : http://localhost:8081/main
2019-03-27 16:06:47 -HTTP METHOD : GET
2019-03-27 16:06:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-27 16:06:47 -参数 : []
2019-03-27 16:06:47 -耗时 : 0
2019-03-27 16:06:47 -返回值 : main
2019-03-27 16:06:47 -<==      Total: 0
2019-03-27 16:06:47 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-27 16:06:47 -==> Parameters: 1(Long), 0(String)
2019-03-27 16:06:47 -<==      Total: 1
2019-03-27 16:06:47 -耗时 : 222
2019-03-27 16:06:47 -返回值 : com.bootdo.common.utils.PageUtils@7ee6d337
2019-03-27 16:07:12 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-27 16:07:12 -==> Parameters: 1(Long)
2019-03-27 16:07:12 -<==      Total: 90
2019-03-27 16:07:12 -请求地址 : http://localhost:8081/charts/countDD
2019-03-27 16:07:12 -HTTP METHOD : GET
2019-03-27 16:07:12 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-03-27 16:07:12 -参数 : []
2019-03-27 16:07:12 -耗时 : 1
2019-03-27 16:07:12 -返回值 : charts/countDD
2019-03-27 16:07:14 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-27 16:07:14 -HTTP METHOD : GET
2019-03-27 16:07:14 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 16:07:14 -参数 : [userType]
2019-03-27 16:07:14 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 16:07:14 -==> Parameters: userType(String)
2019-03-27 16:07:14 -<==      Total: 2
2019-03-27 16:07:14 -耗时 : 121
2019-03-27 16:07:14 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 16:07:35 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-27 16:07:35 -HTTP METHOD : GET
2019-03-27 16:07:35 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-27 16:07:35 -参数 : []
2019-03-27 16:07:35 -耗时 : 0
2019-03-27 16:07:35 -返回值 : system/dept/deptTree
2019-03-27 16:07:35 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-27 16:07:35 -HTTP METHOD : GET
2019-03-27 16:07:35 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-27 16:07:35 -参数 : []
2019-03-27 16:07:35 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-27 16:07:35 -==> Parameters: 
2019-03-27 16:07:35 -<==      Total: 3
2019-03-27 16:07:35 -耗时 : 175
2019-03-27 16:07:35 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-27 16:07:37 -请求地址 : http://localhost:8081/charts/countDD/getCountDD
2019-03-27 16:07:37 -HTTP METHOD : POST
2019-03-27 16:07:37 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.getCountD
2019-03-27 16:07:37 -参数 : [{elecLogVo=com.bootdo.moneyLog.vo.ElecLogVo@16165900, org.springframework.validation.BindingResult.elecLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@58416371, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, heatLogVo=com.bootdo.moneyLog.vo.HeatLogVo@26f309a1, org.springframework.validation.BindingResult.heatLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.ElecLogVo@16165900, com.bootdo.moneyLog.vo.WaterLogVo@58416371, com.bootdo.moneyLog.vo.HeatLogVo@26f309a1]
2019-03-27 16:07:37 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG 
2019-03-27 16:07:37 -==> Parameters: 
2019-03-27 16:07:37 -<==      Total: 1
2019-03-27 16:07:37 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG 
2019-03-27 16:07:37 -==> Parameters: 
2019-03-27 16:07:37 -<==      Total: 1
2019-03-27 16:07:37 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG 
2019-03-27 16:07:37 -==> Parameters: 
2019-03-27 16:07:37 -<==      Total: 1
2019-03-27 16:07:37 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG 
2019-03-27 16:07:37 -==> Parameters: 
2019-03-27 16:07:37 -<==      Total: 1
2019-03-27 16:07:37 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG 
2019-03-27 16:07:37 -==> Parameters: 
2019-03-27 16:07:37 -<==      Total: 1
2019-03-27 16:07:37 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG 
2019-03-27 16:07:37 -==> Parameters: 
2019-03-27 16:07:37 -<==      Total: 1
2019-03-27 16:07:37 -耗时 : 255
2019-03-27 16:07:37 -返回值 : charts/countDD
2019-03-27 16:14:15 -请求地址 : http://localhost:8081/index
2019-03-27 16:14:15 -HTTP METHOD : GET
2019-03-27 16:14:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-27 16:14:15 -参数 : [{}]
2019-03-27 16:14:15 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-27 16:14:15 -==> Parameters: 1(Long)
2019-03-27 16:14:15 -<==      Total: 46
2019-03-27 16:14:15 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-27 16:14:15 -==> Parameters: 138(Long)
2019-03-27 16:14:15 -<==      Total: 1
2019-03-27 16:14:15 -耗时 : 86
2019-03-27 16:14:15 -返回值 : index_v1
2019-03-27 16:14:15 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-27 16:14:15 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 86(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-27 16:14:15.892(Timestamp)
2019-03-27 16:14:15 -<==    Updates: 1
2019-03-27 16:14:16 -请求地址 : http://localhost:8081/main
2019-03-27 16:14:16 -HTTP METHOD : GET
2019-03-27 16:14:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-27 16:14:16 -参数 : []
2019-03-27 16:14:16 -耗时 : 0
2019-03-27 16:14:16 -返回值 : main
2019-03-27 16:14:16 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-27 16:14:16 -HTTP METHOD : GET
2019-03-27 16:14:16 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-27 16:14:16 -参数 : []
2019-03-27 16:14:16 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-27 16:14:16 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-27 16:14:16 -<==      Total: 0
2019-03-27 16:14:16 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-27 16:14:16 -==> Parameters: 1(Long), 0(String)
2019-03-27 16:14:16 -<==      Total: 1
2019-03-27 16:14:16 -耗时 : 11
2019-03-27 16:14:16 -返回值 : com.bootdo.common.utils.PageUtils@66d2dd4e
2019-03-27 16:14:16 -请求地址 : http://localhost:8081/main
2019-03-27 16:14:16 -HTTP METHOD : GET
2019-03-27 16:14:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-27 16:14:16 -参数 : []
2019-03-27 16:14:16 -耗时 : 1
2019-03-27 16:14:16 -返回值 : main
2019-03-27 16:14:19 -请求地址 : http://localhost:8081/charts/countDD
2019-03-27 16:14:19 -HTTP METHOD : GET
2019-03-27 16:14:19 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-03-27 16:14:19 -参数 : []
2019-03-27 16:14:19 -耗时 : 1
2019-03-27 16:14:19 -返回值 : charts/countDD
2019-03-27 16:14:20 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-27 16:14:20 -HTTP METHOD : GET
2019-03-27 16:14:20 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 16:14:20 -参数 : [userType]
2019-03-27 16:14:20 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 16:14:20 -==> Parameters: userType(String)
2019-03-27 16:14:20 -<==      Total: 2
2019-03-27 16:14:20 -耗时 : 6
2019-03-27 16:14:20 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 16:14:26 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-27 16:14:26 -HTTP METHOD : GET
2019-03-27 16:14:26 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-27 16:14:26 -参数 : []
2019-03-27 16:14:26 -耗时 : 1
2019-03-27 16:14:26 -返回值 : system/dept/deptTree
2019-03-27 16:14:27 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-27 16:14:27 -HTTP METHOD : GET
2019-03-27 16:14:27 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-27 16:14:27 -参数 : []
2019-03-27 16:14:27 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-27 16:14:27 -==> Parameters: 
2019-03-27 16:14:27 -<==      Total: 3
2019-03-27 16:14:27 -耗时 : 6
2019-03-27 16:14:27 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-27 16:14:28 -请求地址 : http://localhost:8081/charts/countDD/getCountDD
2019-03-27 16:14:28 -HTTP METHOD : POST
2019-03-27 16:14:28 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.getCountD
2019-03-27 16:14:28 -参数 : [{elecLogVo=com.bootdo.moneyLog.vo.ElecLogVo@7f6e1e52, org.springframework.validation.BindingResult.elecLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@5df34971, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, heatLogVo=com.bootdo.moneyLog.vo.HeatLogVo@15629bf, org.springframework.validation.BindingResult.heatLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.ElecLogVo@7f6e1e52, com.bootdo.moneyLog.vo.WaterLogVo@5df34971, com.bootdo.moneyLog.vo.HeatLogVo@15629bf]
2019-03-27 16:14:28 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG 
2019-03-27 16:14:28 -==> Parameters: 
2019-03-27 16:14:28 -<==      Total: 1
2019-03-27 16:14:28 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG 
2019-03-27 16:14:28 -==> Parameters: 
2019-03-27 16:14:28 -<==      Total: 1
2019-03-27 16:14:28 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG 
2019-03-27 16:14:28 -==> Parameters: 
2019-03-27 16:14:29 -<==      Total: 1
2019-03-27 16:14:29 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG 
2019-03-27 16:14:29 -==> Parameters: 
2019-03-27 16:14:29 -<==      Total: 1
2019-03-27 16:14:29 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG 
2019-03-27 16:14:29 -==> Parameters: 
2019-03-27 16:14:29 -<==      Total: 1
2019-03-27 16:14:29 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG 
2019-03-27 16:14:29 -==> Parameters: 
2019-03-27 16:14:29 -<==      Total: 1
2019-03-27 16:14:29 -耗时 : 14
2019-03-27 16:14:29 -返回值 : charts/countDD
2019-03-27 16:14:49 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:23)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:26)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:424)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:232)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-27 16:15:28 -请求地址 : http://localhost:8081/index
2019-03-27 16:15:28 -HTTP METHOD : GET
2019-03-27 16:15:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-27 16:15:28 -参数 : [{}]
2019-03-27 16:15:28 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-27 16:15:28 -==> Parameters: 1(Long)
2019-03-27 16:15:28 -<==      Total: 46
2019-03-27 16:15:28 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-27 16:15:28 -==> Parameters: 138(Long)
2019-03-27 16:15:28 -<==      Total: 1
2019-03-27 16:15:28 -耗时 : 47
2019-03-27 16:15:28 -返回值 : index_v1
2019-03-27 16:15:28 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-27 16:15:28 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 47(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-27 16:15:28.875(Timestamp)
2019-03-27 16:15:28 -<==    Updates: 1
2019-03-27 16:15:29 -请求地址 : http://localhost:8081/main
2019-03-27 16:15:29 -HTTP METHOD : GET
2019-03-27 16:15:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-27 16:15:29 -参数 : []
2019-03-27 16:15:29 -耗时 : 0
2019-03-27 16:15:29 -返回值 : main
2019-03-27 16:15:29 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-27 16:15:29 -HTTP METHOD : GET
2019-03-27 16:15:29 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-27 16:15:29 -参数 : []
2019-03-27 16:15:29 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-27 16:15:29 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-27 16:15:29 -<==      Total: 0
2019-03-27 16:15:29 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-27 16:15:29 -==> Parameters: 1(Long), 0(String)
2019-03-27 16:15:29 -<==      Total: 1
2019-03-27 16:15:29 -耗时 : 7
2019-03-27 16:15:29 -返回值 : com.bootdo.common.utils.PageUtils@178a025d
2019-03-27 16:15:29 -请求地址 : http://localhost:8081/main
2019-03-27 16:15:29 -HTTP METHOD : GET
2019-03-27 16:15:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-27 16:15:29 -参数 : []
2019-03-27 16:15:29 -耗时 : 0
2019-03-27 16:15:29 -返回值 : main
2019-03-27 16:15:32 -请求地址 : http://localhost:8081/charts/countDD
2019-03-27 16:15:32 -HTTP METHOD : GET
2019-03-27 16:15:32 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-03-27 16:15:32 -参数 : []
2019-03-27 16:15:32 -耗时 : 1
2019-03-27 16:15:32 -返回值 : charts/countDD
2019-03-27 16:15:32 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-27 16:15:32 -HTTP METHOD : GET
2019-03-27 16:15:32 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 16:15:32 -参数 : [userType]
2019-03-27 16:15:32 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 16:15:32 -==> Parameters: userType(String)
2019-03-27 16:15:32 -<==      Total: 2
2019-03-27 16:15:32 -耗时 : 6
2019-03-27 16:15:32 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 16:15:38 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-27 16:15:38 -HTTP METHOD : GET
2019-03-27 16:15:38 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-27 16:15:38 -参数 : []
2019-03-27 16:15:38 -耗时 : 1
2019-03-27 16:15:38 -返回值 : system/dept/deptTree
2019-03-27 16:15:38 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-27 16:15:38 -HTTP METHOD : GET
2019-03-27 16:15:38 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-27 16:15:38 -参数 : []
2019-03-27 16:15:38 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-27 16:15:38 -==> Parameters: 
2019-03-27 16:15:38 -<==      Total: 3
2019-03-27 16:15:38 -耗时 : 5
2019-03-27 16:15:38 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-27 16:15:41 -请求地址 : http://localhost:8081/charts/countDD/getCountDD
2019-03-27 16:15:41 -HTTP METHOD : POST
2019-03-27 16:15:41 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.getCountD
2019-03-27 16:15:41 -参数 : [{elecLogVo=com.bootdo.moneyLog.vo.ElecLogVo@74c6b632, org.springframework.validation.BindingResult.elecLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@1faf5233, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, heatLogVo=com.bootdo.moneyLog.vo.HeatLogVo@1e1a0460, org.springframework.validation.BindingResult.heatLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.ElecLogVo@74c6b632, com.bootdo.moneyLog.vo.WaterLogVo@1faf5233, com.bootdo.moneyLog.vo.HeatLogVo@1e1a0460]
2019-03-27 16:15:41 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG 
2019-03-27 16:15:41 -==> Parameters: 
2019-03-27 16:15:41 -<==      Total: 1
2019-03-27 16:15:41 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG 
2019-03-27 16:15:41 -==> Parameters: 
2019-03-27 16:15:41 -<==      Total: 1
2019-03-27 16:15:41 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG 
2019-03-27 16:15:41 -==> Parameters: 
2019-03-27 16:15:41 -<==      Total: 1
2019-03-27 16:15:41 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG 
2019-03-27 16:15:41 -==> Parameters: 
2019-03-27 16:15:41 -<==      Total: 1
2019-03-27 16:15:41 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG 
2019-03-27 16:15:41 -==> Parameters: 
2019-03-27 16:15:41 -<==      Total: 1
2019-03-27 16:15:41 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG 
2019-03-27 16:15:41 -==> Parameters: 
2019-03-27 16:15:41 -<==      Total: 1
2019-03-27 16:15:41 -耗时 : 22
2019-03-27 16:15:41 -返回值 : charts/countDD
2019-03-27 16:32:45 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 4 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(3)-CONNECTED(3)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 36], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 6], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 375]
2019-03-27 17:56:02 -Starting BootdoApplication on ZJZL-20180906VX with PID 8688 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-27 17:56:02 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-27 17:56:02 -The following profiles are active: dev
2019-03-27 17:56:02 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d18aa28: startup date [Wed Mar 27 17:56:02 CST 2019]; root of context hierarchy
2019-03-27 17:56:06 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-27 17:56:09 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$9b52714c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-27 17:56:09 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$8dab9ff3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-27 17:56:10 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-27 17:56:11 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-27 17:56:11 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-27 17:56:11 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-27 17:56:11 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-27 17:56:11 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-27 17:56:11 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-27 17:56:12 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-27 17:56:12 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-27 17:56:13 -Tomcat initialized with port(s): 8081 (http)
2019-03-27 17:56:13 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-27 17:56:14 -Starting service [Tomcat]
2019-03-27 17:56:14 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-27 17:56:14 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-27 17:56:14 -Initializing Spring embedded WebApplicationContext
2019-03-27 17:56:14 -Root WebApplicationContext: initialization completed in 12365 ms
2019-03-27 17:56:15 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-27 17:56:15 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-27 17:56:15 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-27 17:56:15 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-27 17:56:15 -Filter xssFilter was not registered (disabled)
2019-03-27 17:56:15 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-27 17:56:15 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-27 17:56:15 -Servlet statViewServlet mapped to [/druid/*]
2019-03-27 17:56:15 -Servlet dispatcherServlet mapped to [/]
2019-03-27 17:56:19 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d18aa28: startup date [Wed Mar 27 17:56:02 CST 2019]; root of context hierarchy
2019-03-27 17:56:20 -Using default implementation for ThreadExecutor
2019-03-27 17:56:20 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-27 17:56:20 -Quartz Scheduler v.2.2.1 created.
2019-03-27 17:56:20 -RAMJobStore initialized.
2019-03-27 17:56:20 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-27 17:56:20 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-27 17:56:20 -Quartz scheduler version: 2.2.1
2019-03-27 17:56:20 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@568ef502
2019-03-27 17:56:21 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-27 17:56:21 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-27 17:56:25 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-03-27 17:56:25 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-27 17:56:25 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-27 17:56:25 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-27 17:56:25 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-27 17:56:25 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-27 17:56:25 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-27 17:56:25 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-27 17:56:25 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-27 17:56:25 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-27 17:56:25 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-27 17:56:25 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 17:56:25 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-27 17:56:25 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-27 17:56:25 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-27 17:56:25 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 17:56:25 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-27 17:56:25 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-27 17:56:25 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-27 17:56:25 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-27 17:56:25 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-27 17:56:25 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-27 17:56:25 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 17:56:25 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-27 17:56:25 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-27 17:56:25 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 17:56:25 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-27 17:56:25 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-27 17:56:25 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 17:56:25 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-27 17:56:25 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-27 17:56:25 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-27 17:56:25 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-27 17:56:25 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-27 17:56:25 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-27 17:56:25 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-27 17:56:25 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-27 17:56:25 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-27 17:56:25 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 17:56:25 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-27 17:56:25 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-27 17:56:25 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 17:56:25 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-27 17:56:25 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-27 17:56:25 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-27 17:56:25 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-27 17:56:25 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 17:56:25 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-27 17:56:25 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-03-27 17:56:25 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-27 17:56:25 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-27 17:56:25 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-27 17:56:25 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-27 17:56:25 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-27 17:56:25 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-27 17:56:25 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-27 17:56:25 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-27 17:56:25 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-27 17:56:25 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-27 17:56:25 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 17:56:25 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-27 17:56:25 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-03-27 17:56:25 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-27 17:56:25 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-27 17:56:25 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-27 17:56:25 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-27 17:56:25 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-27 17:56:25 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-27 17:56:25 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 17:56:25 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-03-27 17:56:25 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-27 17:56:25 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 17:56:25 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-27 17:56:25 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-27 17:56:25 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-27 17:56:25 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-27 17:56:25 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-27 17:56:25 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-27 17:56:25 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 17:56:25 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-27 17:56:25 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-27 17:56:25 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-27 17:56:25 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-27 17:56:25 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-27 17:56:25 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-27 17:56:25 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-27 17:56:25 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-27 17:56:25 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-27 17:56:25 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-27 17:56:25 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 17:56:25 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-27 17:56:25 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-27 17:56:25 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 17:56:25 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-27 17:56:25 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-27 17:56:25 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-03-27 17:56:25 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-03-27 17:56:25 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-27 17:56:25 -Mapped "{[/moneyList/moneyList/UserList],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-27 17:56:25 -Mapped "{[/moneyList/moneyList/LikeName],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.LikeName(org.springframework.ui.Model)
2019-03-27 17:56:25 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-27 17:56:25 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-27 17:56:25 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-27 17:56:25 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-27 17:56:25 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 17:56:25 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-27 17:56:25 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-27 17:56:25 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 17:56:25 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-27 17:56:25 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-27 17:56:25 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-27 17:56:25 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-27 17:56:25 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-27 17:56:25 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 17:56:25 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-27 17:56:25 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 17:56:25 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-27 17:56:25 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-27 17:56:25 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-27 17:56:25 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-27 17:56:25 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-27 17:56:25 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-27 17:56:25 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 17:56:25 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-27 17:56:25 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 17:56:25 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-27 17:56:25 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-27 17:56:25 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-27 17:56:25 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-27 17:56:25 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-27 17:56:25 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-27 17:56:25 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-27 17:56:25 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 17:56:25 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-27 17:56:25 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-27 17:56:25 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 17:56:25 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 17:56:25 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-27 17:56:25 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-27 17:56:25 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-27 17:56:25 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-27 17:56:25 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-27 17:56:25 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-27 17:56:25 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 17:56:25 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-27 17:56:25 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 17:56:25 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 17:56:25 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-27 17:56:25 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-27 17:56:25 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-27 17:56:25 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-27 17:56:25 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-27 17:56:25 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-27 17:56:25 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-27 17:56:25 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-27 17:56:25 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-27 17:56:25 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 17:56:25 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-27 17:56:25 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-27 17:56:25 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-27 17:56:25 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-27 17:56:25 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-27 17:56:25 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-27 17:56:25 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-27 17:56:25 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-27 17:56:25 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-27 17:56:25 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-27 17:56:25 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-27 17:56:25 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-27 17:56:25 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 17:56:25 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-27 17:56:25 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-27 17:56:25 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-27 17:56:25 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-27 17:56:25 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-27 17:56:25 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-27 17:56:25 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-27 17:56:25 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-27 17:56:25 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-27 17:56:25 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-27 17:56:25 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-27 17:56:25 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-27 17:56:25 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 17:56:25 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-27 17:56:25 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-27 17:56:25 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-27 17:56:25 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-27 17:56:25 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 17:56:25 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-27 17:56:25 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-27 17:56:25 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-27 17:56:25 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 17:56:25 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-27 17:56:25 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-27 17:56:25 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-27 17:56:25 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-27 17:56:25 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-27 17:56:25 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-27 17:56:25 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-27 17:56:25 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-27 17:56:25 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-27 17:56:25 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-27 17:56:25 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-27 17:56:25 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-27 17:56:25 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-27 17:56:25 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-27 17:56:25 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-27 17:56:25 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-27 17:56:25 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-27 17:56:25 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 17:56:25 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-27 17:56:25 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-27 17:56:25 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 17:56:25 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-27 17:56:25 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 17:56:25 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-27 17:56:25 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-27 17:56:25 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-27 17:56:25 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-27 17:56:25 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-27 17:56:25 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-27 17:56:25 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 17:56:25 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-27 17:56:25 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 17:56:25 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-27 17:56:25 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-27 17:56:25 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-03-27 17:56:25 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-03-27 17:56:25 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-27 17:56:25 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-27 17:56:25 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-27 17:56:25 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-27 17:56:25 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-27 17:56:26 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-27 17:56:26 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-27 17:56:26 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-27 17:56:27 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-27 17:56:28 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d18aa28: startup date [Wed Mar 27 17:56:02 CST 2019]; root of context hierarchy
2019-03-27 17:56:28 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-27 17:56:28 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-27 17:56:28 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-27 17:56:28 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-27 17:56:28 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-27 17:56:32 -Registering beans for JMX exposure on startup
2019-03-27 17:56:32 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-27 17:56:32 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-27 17:56:32 -Starting beans in phase 2147483647
2019-03-27 17:56:32 -Context refreshed
2019-03-27 17:56:32 -Found 1 custom documentation plugin(s)
2019-03-27 17:56:33 -Scanning for api listing references
2019-03-27 17:56:33 -Generating unique operation named: removeUsingPOST_1
2019-03-27 17:56:33 -Generating unique operation named: addUsingGET_1
2019-03-27 17:56:34 -Generating unique operation named: editUsingGET_1
2019-03-27 17:56:34 -Generating unique operation named: listUsingGET_1
2019-03-27 17:56:34 -Generating unique operation named: removeUsingPOST_2
2019-03-27 17:56:34 -Generating unique operation named: removeUsingPOST_3
2019-03-27 17:56:34 -Generating unique operation named: saveUsingPOST_1
2019-03-27 17:56:34 -Generating unique operation named: updateUsingGET_1
2019-03-27 17:56:34 -Generating unique operation named: updateUsingHEAD_1
2019-03-27 17:56:34 -Generating unique operation named: updateUsingPOST_1
2019-03-27 17:56:34 -Generating unique operation named: updateUsingPUT_1
2019-03-27 17:56:34 -Generating unique operation named: updateUsingPATCH_1
2019-03-27 17:56:34 -Generating unique operation named: updateUsingDELETE_1
2019-03-27 17:56:34 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-27 17:56:34 -Generating unique operation named: updateUsingTRACE_1
2019-03-27 17:56:34 -Generating unique operation named: addUsingGET_2
2019-03-27 17:56:34 -Generating unique operation named: editUsingGET_2
2019-03-27 17:56:34 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-27 17:56:34 -Generating unique operation named: listUsingGET_2
2019-03-27 17:56:34 -Generating unique operation named: removeUsingPOST_4
2019-03-27 17:56:34 -Generating unique operation named: removeUsingPOST_5
2019-03-27 17:56:34 -Generating unique operation named: saveUsingPOST_2
2019-03-27 17:56:34 -Generating unique operation named: updateUsingPOST_2
2019-03-27 17:56:34 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-27 17:56:34 -Generating unique operation named: addUsingGET_3
2019-03-27 17:56:34 -Generating unique operation named: editUsingGET_3
2019-03-27 17:56:34 -Generating unique operation named: listUsingGET_3
2019-03-27 17:56:34 -Generating unique operation named: removeUsingPOST_6
2019-03-27 17:56:34 -Generating unique operation named: removeUsingPOST_7
2019-03-27 17:56:34 -Generating unique operation named: saveUsingPOST_3
2019-03-27 17:56:34 -Generating unique operation named: updateUsingGET_2
2019-03-27 17:56:34 -Generating unique operation named: updateUsingHEAD_2
2019-03-27 17:56:34 -Generating unique operation named: updateUsingPOST_3
2019-03-27 17:56:34 -Generating unique operation named: updateUsingPUT_2
2019-03-27 17:56:34 -Generating unique operation named: updateUsingPATCH_2
2019-03-27 17:56:34 -Generating unique operation named: updateUsingDELETE_2
2019-03-27 17:56:34 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-27 17:56:34 -Generating unique operation named: updateUsingTRACE_2
2019-03-27 17:56:34 -Generating unique operation named: addUsingGET_4
2019-03-27 17:56:34 -Generating unique operation named: editUsingGET_4
2019-03-27 17:56:34 -Generating unique operation named: listUsingGET_4
2019-03-27 17:56:34 -Generating unique operation named: removeUsingPOST_8
2019-03-27 17:56:34 -Generating unique operation named: removeUsingPOST_9
2019-03-27 17:56:34 -Generating unique operation named: saveUsingPOST_4
2019-03-27 17:56:34 -Generating unique operation named: updateUsingGET_3
2019-03-27 17:56:34 -Generating unique operation named: updateUsingHEAD_3
2019-03-27 17:56:34 -Generating unique operation named: updateUsingPOST_4
2019-03-27 17:56:34 -Generating unique operation named: updateUsingPUT_3
2019-03-27 17:56:34 -Generating unique operation named: updateUsingPATCH_3
2019-03-27 17:56:34 -Generating unique operation named: updateUsingDELETE_3
2019-03-27 17:56:34 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-27 17:56:34 -Generating unique operation named: updateUsingTRACE_3
2019-03-27 17:56:34 -Generating unique operation named: ElecUsingGET_1
2019-03-27 17:56:34 -Generating unique operation named: addUsingGET_5
2019-03-27 17:56:34 -Generating unique operation named: editUsingGET_5
2019-03-27 17:56:34 -Generating unique operation named: listUsingGET_5
2019-03-27 17:56:34 -Generating unique operation named: removeUsingPOST_10
2019-03-27 17:56:34 -Generating unique operation named: removeUsingPOST_11
2019-03-27 17:56:34 -Generating unique operation named: saveUsingPOST_5
2019-03-27 17:56:34 -Generating unique operation named: updateUsingGET_4
2019-03-27 17:56:34 -Generating unique operation named: updateUsingHEAD_4
2019-03-27 17:56:34 -Generating unique operation named: updateUsingPOST_5
2019-03-27 17:56:34 -Generating unique operation named: updateUsingPUT_4
2019-03-27 17:56:34 -Generating unique operation named: updateUsingPATCH_4
2019-03-27 17:56:34 -Generating unique operation named: updateUsingDELETE_4
2019-03-27 17:56:34 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-27 17:56:34 -Generating unique operation named: updateUsingTRACE_4
2019-03-27 17:56:34 -Generating unique operation named: editUsingGET_6
2019-03-27 17:56:34 -Generating unique operation named: listUsingGET_6
2019-03-27 17:56:34 -Generating unique operation named: updateUsingPOST_6
2019-03-27 17:56:34 -Generating unique operation named: addUsingGET_6
2019-03-27 17:56:34 -Generating unique operation named: editUsingGET_7
2019-03-27 17:56:34 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-27 17:56:34 -Generating unique operation named: listUsingGET_7
2019-03-27 17:56:35 -Generating unique operation named: removeUsingPOST_12
2019-03-27 17:56:35 -Generating unique operation named: removeUsingPOST_13
2019-03-27 17:56:35 -Generating unique operation named: saveUsingPOST_6
2019-03-27 17:56:35 -Generating unique operation named: updateUsingGET_5
2019-03-27 17:56:35 -Generating unique operation named: updateUsingHEAD_5
2019-03-27 17:56:35 -Generating unique operation named: updateUsingPOST_7
2019-03-27 17:56:35 -Generating unique operation named: updateUsingPUT_5
2019-03-27 17:56:35 -Generating unique operation named: updateUsingPATCH_5
2019-03-27 17:56:35 -Generating unique operation named: updateUsingDELETE_5
2019-03-27 17:56:35 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-27 17:56:35 -Generating unique operation named: updateUsingTRACE_5
2019-03-27 17:56:35 -Generating unique operation named: exprotExcelUsingGET_4
2019-03-27 17:56:35 -Generating unique operation named: addUsingGET_7
2019-03-27 17:56:35 -Generating unique operation named: editUsingGET_8
2019-03-27 17:56:35 -Generating unique operation named: listUsingGET_8
2019-03-27 17:56:35 -Generating unique operation named: removeUsingPOST_14
2019-03-27 17:56:35 -Generating unique operation named: removeUsingPOST_15
2019-03-27 17:56:35 -Generating unique operation named: saveUsingPOST_7
2019-03-27 17:56:35 -Generating unique operation named: updateUsingGET_6
2019-03-27 17:56:35 -Generating unique operation named: updateUsingHEAD_6
2019-03-27 17:56:35 -Generating unique operation named: updateUsingPOST_8
2019-03-27 17:56:35 -Generating unique operation named: updateUsingPUT_6
2019-03-27 17:56:35 -Generating unique operation named: updateUsingPATCH_6
2019-03-27 17:56:35 -Generating unique operation named: updateUsingDELETE_6
2019-03-27 17:56:35 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-27 17:56:35 -Generating unique operation named: updateUsingTRACE_6
2019-03-27 17:56:35 -Generating unique operation named: addUsingGET_8
2019-03-27 17:56:35 -Generating unique operation named: editUsingGET_9
2019-03-27 17:56:35 -Generating unique operation named: listUsingGET_9
2019-03-27 17:56:35 -Generating unique operation named: removeUsingPOST_16
2019-03-27 17:56:35 -Generating unique operation named: removeUsingPOST_17
2019-03-27 17:56:35 -Generating unique operation named: saveUsingPOST_8
2019-03-27 17:56:35 -Generating unique operation named: updateUsingGET_7
2019-03-27 17:56:35 -Generating unique operation named: updateUsingHEAD_7
2019-03-27 17:56:35 -Generating unique operation named: updateUsingPOST_9
2019-03-27 17:56:35 -Generating unique operation named: updateUsingPUT_7
2019-03-27 17:56:35 -Generating unique operation named: updateUsingPATCH_7
2019-03-27 17:56:35 -Generating unique operation named: updateUsingDELETE_7
2019-03-27 17:56:35 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-27 17:56:35 -Generating unique operation named: updateUsingTRACE_7
2019-03-27 17:56:35 -Generating unique operation named: addUsingGET_9
2019-03-27 17:56:35 -Generating unique operation named: editUsingGET_10
2019-03-27 17:56:35 -Generating unique operation named: infoUsingGET_1
2019-03-27 17:56:35 -Generating unique operation named: infoUsingHEAD_1
2019-03-27 17:56:35 -Generating unique operation named: infoUsingPOST_1
2019-03-27 17:56:35 -Generating unique operation named: infoUsingPUT_1
2019-03-27 17:56:35 -Generating unique operation named: infoUsingPATCH_1
2019-03-27 17:56:35 -Generating unique operation named: infoUsingDELETE_1
2019-03-27 17:56:35 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-27 17:56:35 -Generating unique operation named: infoUsingTRACE_1
2019-03-27 17:56:35 -Generating unique operation named: listUsingGET_10
2019-03-27 17:56:35 -Generating unique operation named: removeUsingPOST_18
2019-03-27 17:56:35 -Generating unique operation named: removeUsingPOST_19
2019-03-27 17:56:35 -Generating unique operation named: saveUsingPOST_9
2019-03-27 17:56:35 -Generating unique operation named: updateUsingPOST_10
2019-03-27 17:56:35 -Generating unique operation named: listUsingGET_11
2019-03-27 17:56:35 -Generating unique operation named: removeUsingPOST_20
2019-03-27 17:56:35 -Generating unique operation named: welcomeUsingGET_1
2019-03-27 17:56:35 -Generating unique operation named: addUsingGET_10
2019-03-27 17:56:35 -Generating unique operation named: editUsingGET_11
2019-03-27 17:56:35 -Generating unique operation named: listUsingGET_12
2019-03-27 17:56:35 -Generating unique operation named: removeUsingPOST_21
2019-03-27 17:56:35 -Generating unique operation named: saveUsingPOST_10
2019-03-27 17:56:35 -Generating unique operation named: treeUsingGET_1
2019-03-27 17:56:35 -Generating unique operation named: treeUsingGET_2
2019-03-27 17:56:35 -Generating unique operation named: updateUsingPOST_11
2019-03-27 17:56:35 -Generating unique operation named: addUsingGET_11
2019-03-27 17:56:35 -Generating unique operation named: editUsingGET_12
2019-03-27 17:56:35 -Generating unique operation named: listUsingGET_13
2019-03-27 17:56:35 -Generating unique operation named: removeUsingPOST_22
2019-03-27 17:56:35 -Generating unique operation named: removeUsingPOST_23
2019-03-27 17:56:35 -Generating unique operation named: saveUsingPOST_11
2019-03-27 17:56:35 -Generating unique operation named: updateUsingGET_8
2019-03-27 17:56:35 -Generating unique operation named: updateUsingHEAD_8
2019-03-27 17:56:35 -Generating unique operation named: updateUsingPOST_12
2019-03-27 17:56:35 -Generating unique operation named: updateUsingPUT_8
2019-03-27 17:56:35 -Generating unique operation named: updateUsingPATCH_8
2019-03-27 17:56:35 -Generating unique operation named: updateUsingDELETE_8
2019-03-27 17:56:35 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-27 17:56:35 -Generating unique operation named: updateUsingTRACE_8
2019-03-27 17:56:35 -Generating unique operation named: addUsingGET_12
2019-03-27 17:56:35 -Generating unique operation named: editUsingGET_13
2019-03-27 17:56:35 -Generating unique operation named: listUsingGET_14
2019-03-27 17:56:35 -Generating unique operation named: removeUsingPOST_24
2019-03-27 17:56:35 -Generating unique operation named: removeUsingPOST_25
2019-03-27 17:56:35 -Generating unique operation named: saveUsingPOST_12
2019-03-27 17:56:35 -Generating unique operation named: updateUsingGET_9
2019-03-27 17:56:35 -Generating unique operation named: updateUsingHEAD_9
2019-03-27 17:56:35 -Generating unique operation named: updateUsingPOST_13
2019-03-27 17:56:35 -Generating unique operation named: updateUsingPUT_9
2019-03-27 17:56:36 -Generating unique operation named: updateUsingPATCH_9
2019-03-27 17:56:36 -Generating unique operation named: updateUsingDELETE_9
2019-03-27 17:56:36 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-27 17:56:36 -Generating unique operation named: updateUsingTRACE_9
2019-03-27 17:56:36 -Generating unique operation named: addUsingGET_13
2019-03-27 17:56:36 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-27 17:56:36 -Generating unique operation named: editUsingGET_14
2019-03-27 17:56:36 -Generating unique operation named: listUsingGET_15
2019-03-27 17:56:36 -Generating unique operation named: saveUsingPOST_13
2019-03-27 17:56:36 -Generating unique operation named: saveUsingPOST_14
2019-03-27 17:56:36 -Generating unique operation named: updateUsingPOST_14
2019-03-27 17:56:36 -Generating unique operation named: listUsingGET_16
2019-03-27 17:56:36 -Generating unique operation named: listUsingHEAD_1
2019-03-27 17:56:36 -Generating unique operation named: listUsingPOST_1
2019-03-27 17:56:36 -Generating unique operation named: listUsingPUT_1
2019-03-27 17:56:36 -Generating unique operation named: listUsingPATCH_1
2019-03-27 17:56:36 -Generating unique operation named: listUsingDELETE_1
2019-03-27 17:56:36 -Generating unique operation named: listUsingOPTIONS_1
2019-03-27 17:56:36 -Generating unique operation named: listUsingTRACE_1
2019-03-27 17:56:36 -Generating unique operation named: addUsingGET_14
2019-03-27 17:56:36 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-27 17:56:36 -Generating unique operation named: editUsingGET_15
2019-03-27 17:56:36 -Generating unique operation named: listUsingGET_17
2019-03-27 17:56:36 -Generating unique operation named: removeUsingPOST_26
2019-03-27 17:56:36 -Generating unique operation named: saveUsingPOST_15
2019-03-27 17:56:36 -Generating unique operation named: treeUsingGET_3
2019-03-27 17:56:36 -Generating unique operation named: treeViewUsingGET_1
2019-03-27 17:56:36 -Generating unique operation named: updateUsingPOST_15
2019-03-27 17:56:36 -Generating unique operation named: addUsingGET_15
2019-03-27 17:56:36 -Generating unique operation named: editUsingGET_16
2019-03-27 17:56:36 -Generating unique operation named: exprotExcelUsingGET_5
2019-03-27 17:56:36 -Generating unique operation named: listUsingGET_18
2019-03-27 17:56:36 -Generating unique operation named: removeUsingPOST_27
2019-03-27 17:56:36 -Generating unique operation named: removeUsingPOST_28
2019-03-27 17:56:36 -Generating unique operation named: saveUsingPOST_16
2019-03-27 17:56:36 -Generating unique operation named: updateUsingGET_10
2019-03-27 17:56:36 -Generating unique operation named: updateUsingHEAD_10
2019-03-27 17:56:36 -Generating unique operation named: updateUsingPOST_16
2019-03-27 17:56:36 -Generating unique operation named: updateUsingPUT_10
2019-03-27 17:56:36 -Generating unique operation named: updateUsingPATCH_10
2019-03-27 17:56:36 -Generating unique operation named: updateUsingDELETE_10
2019-03-27 17:56:36 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-27 17:56:36 -Generating unique operation named: updateUsingTRACE_10
2019-03-27 17:56:36 -Generating unique operation named: exprotExcelUsingGET_6
2019-03-27 17:56:36 -Generating unique operation named: addUsingGET_16
2019-03-27 17:56:36 -Generating unique operation named: editUsingGET_17
2019-03-27 17:56:36 -Generating unique operation named: listUsingGET_19
2019-03-27 17:56:36 -Generating unique operation named: removeUsingPOST_29
2019-03-27 17:56:36 -Generating unique operation named: removeUsingPOST_30
2019-03-27 17:56:36 -Generating unique operation named: saveUsingPOST_17
2019-03-27 17:56:36 -Generating unique operation named: updateUsingGET_11
2019-03-27 17:56:36 -Generating unique operation named: updateUsingHEAD_11
2019-03-27 17:56:36 -Generating unique operation named: updateUsingPOST_17
2019-03-27 17:56:36 -Generating unique operation named: updateUsingPUT_11
2019-03-27 17:56:36 -Generating unique operation named: updateUsingPATCH_11
2019-03-27 17:56:36 -Generating unique operation named: updateUsingDELETE_11
2019-03-27 17:56:36 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-27 17:56:36 -Generating unique operation named: updateUsingTRACE_11
2019-03-27 17:56:36 -Generating unique operation named: addUsingGET_17
2019-03-27 17:56:36 -Generating unique operation named: editUsingGET_18
2019-03-27 17:56:36 -Generating unique operation named: listUsingGET_20
2019-03-27 17:56:36 -Generating unique operation named: removeUsingPOST_31
2019-03-27 17:56:36 -Generating unique operation named: removeUsingPOST_32
2019-03-27 17:56:36 -Generating unique operation named: saveUsingPOST_18
2019-03-27 17:56:36 -Generating unique operation named: updateUsingGET_12
2019-03-27 17:56:36 -Generating unique operation named: updateUsingHEAD_12
2019-03-27 17:56:36 -Generating unique operation named: updateUsingPOST_18
2019-03-27 17:56:36 -Generating unique operation named: updateUsingPUT_12
2019-03-27 17:56:36 -Generating unique operation named: updateUsingPATCH_12
2019-03-27 17:56:36 -Generating unique operation named: updateUsingDELETE_12
2019-03-27 17:56:36 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-27 17:56:36 -Generating unique operation named: updateUsingTRACE_12
2019-03-27 17:56:37 -Starting Quartz Scheduler now
2019-03-27 17:56:37 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-27 17:56:37 -Starting...
2019-03-27 17:56:37 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-27 17:56:37 -Started.
2019-03-27 17:56:37 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-27 17:56:39 -Using a shared selector for servlet write/read
2019-03-27 17:56:39 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-27 17:56:39 -Started BootdoApplication in 39.77 seconds (JVM running for 41.456)
2019-03-27 17:56:40 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-27 17:56:41 -==> Parameters: 
2019-03-27 17:56:41 -<==      Total: 1
2019-03-27 17:57:26 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-03-27 17:58:21 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-27 17:58:21 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-27 17:58:21 -FrameworkServlet 'dispatcherServlet': initialization completed in 147 ms
2019-03-27 17:58:21 -Enabling session validation scheduler...
2019-03-27 17:58:21 -请求地址 : http://localhost:8081/
2019-03-27 17:58:21 -HTTP METHOD : GET
2019-03-27 17:58:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2019-03-27 17:58:21 -参数 : [{}]
2019-03-27 17:58:21 -耗时 : 3
2019-03-27 17:58:21 -返回值 : redirect:/index
2019-03-27 17:58:22 -请求地址 : http://localhost:8081/login;JSESSIONID=3940baff-062e-4286-831f-1714ad5a4e4d
2019-03-27 17:58:22 -HTTP METHOD : GET
2019-03-27 17:58:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-27 17:58:22 -参数 : [{}]
2019-03-27 17:58:22 -耗时 : 1
2019-03-27 17:58:22 -返回值 : login
2019-03-27 17:58:25 -请求地址 : http://localhost:8081/getVerify
2019-03-27 17:58:25 -HTTP METHOD : GET
2019-03-27 17:58:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-27 17:58:25 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@4f8ff03c, org.apache.shiro.web.servlet.ShiroHttpServletResponse@a8d67a9]
2019-03-27 17:58:28 -2312
2019-03-27 17:58:29 -耗时 : 3933
2019-03-27 17:58:29 -返回值 : null
2019-03-27 17:58:29 -请求地址 : http://localhost:8081/login
2019-03-27 17:58:29 -HTTP METHOD : GET
2019-03-27 17:58:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-27 17:58:29 -参数 : [{}]
2019-03-27 17:58:29 -耗时 : 0
2019-03-27 17:58:29 -返回值 : login
2019-03-27 17:58:33 -请求地址 : http://localhost:8081/login
2019-03-27 17:58:33 -HTTP METHOD : POST
2019-03-27 17:58:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-27 17:58:33 -参数 : [admin, 111111, 2312, org.apache.shiro.web.servlet.ShiroHttpServletRequest@5b4e3d83]
2019-03-27 17:58:33 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-27 17:58:33 -==> Parameters: admin(String)
2019-03-27 17:58:33 -<==      Total: 1
2019-03-27 17:58:33 -耗时 : 171
2019-03-27 17:58:33 -返回值 : {msg=操作成功, code=0}
2019-03-27 17:58:34 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-03-27 17:58:34 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-27 17:58:34 -==> Parameters: 1(Long), admin(String), 登录(String), 171(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-27 17:58:34.255(Timestamp)
2019-03-27 17:58:34 -<==    Updates: 1
2019-03-27 17:58:34 -请求地址 : http://localhost:8081/index
2019-03-27 17:58:34 -HTTP METHOD : GET
2019-03-27 17:58:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-27 17:58:34 -参数 : [{}]
2019-03-27 17:58:34 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-27 17:58:34 -==> Parameters: 1(Long)
2019-03-27 17:58:34 -<==      Total: 46
2019-03-27 17:58:34 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-27 17:58:34 -==> Parameters: 138(Long)
2019-03-27 17:58:34 -<==      Total: 1
2019-03-27 17:58:34 -耗时 : 337
2019-03-27 17:58:34 -返回值 : index_v1
2019-03-27 17:58:34 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-27 17:58:34 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 337(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-27 17:58:34.879(Timestamp)
2019-03-27 17:58:35 -<==    Updates: 1
2019-03-27 17:58:35 -请求地址 : http://localhost:8081/main
2019-03-27 17:58:35 -HTTP METHOD : GET
2019-03-27 17:58:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-27 17:58:35 -参数 : []
2019-03-27 17:58:35 -耗时 : 1
2019-03-27 17:58:35 -返回值 : main
2019-03-27 17:58:37 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-27 17:58:37 -HTTP METHOD : GET
2019-03-27 17:58:37 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-27 17:58:37 -参数 : []
2019-03-27 17:58:37 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-27 17:58:37 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-27 17:58:37 -请求地址 : http://localhost:8081/main
2019-03-27 17:58:37 -HTTP METHOD : GET
2019-03-27 17:58:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-27 17:58:37 -参数 : []
2019-03-27 17:58:37 -耗时 : 1
2019-03-27 17:58:37 -返回值 : main
2019-03-27 17:58:37 -<==      Total: 0
2019-03-27 17:58:37 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-27 17:58:37 -==> Parameters: 1(Long), 0(String)
2019-03-27 17:58:37 -<==      Total: 1
2019-03-27 17:58:37 -耗时 : 169
2019-03-27 17:58:37 -返回值 : com.bootdo.common.utils.PageUtils@4c827697
2019-03-27 18:13:30 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-27 18:13:30 -==> Parameters: 1(Long)
2019-03-27 18:13:30 -<==      Total: 90
2019-03-27 18:13:30 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-27 18:13:30 -HTTP METHOD : GET
2019-03-27 18:13:30 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-27 18:13:30 -参数 : []
2019-03-27 18:13:30 -耗时 : 0
2019-03-27 18:13:30 -返回值 : /moneyLog/elecLog/elecLog
2019-03-27 18:13:33 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-27 18:13:33 -HTTP METHOD : GET
2019-03-27 18:13:33 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 18:13:33 -参数 : [userType]
2019-03-27 18:13:33 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 18:13:33 -==> Parameters: userType(String)
2019-03-27 18:13:33 -<==      Total: 2
2019-03-27 18:13:33 -耗时 : 21
2019-03-27 18:13:33 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 18:13:33 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-27 18:13:33 -HTTP METHOD : GET
2019-03-27 18:13:33 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-27 18:13:33 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-27 18:13:33 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-27 18:13:33 -==> Parameters: 0(Integer), 10(Integer)
2019-03-27 18:13:33 -<==      Total: 6
2019-03-27 18:13:33 -==>  Preparing: select count(*) from elec_log 
2019-03-27 18:13:33 -==> Parameters: 
2019-03-27 18:13:33 -<==      Total: 1
2019-03-27 18:13:33 -耗时 : 28
2019-03-27 18:13:33 -返回值 : com.bootdo.common.utils.PageUtils@449cb639
2019-03-27 18:13:45 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-27 18:13:45 -HTTP METHOD : GET
2019-03-27 18:13:45 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-27 18:13:45 -参数 : [{limit=10, offset=0, userType=A, userOrg=, userId=, elecDate=2019-03-19, type=A}]
2019-03-27 18:13:45 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? and `elec_date` >= ? and `elec_date` <= ? order by id asc limit ?, ? 
2019-03-27 18:13:45 -==> Parameters: A(String), 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 0(Integer), 10(Integer)
2019-03-27 18:13:45 -<==      Total: 3
2019-03-27 18:13:45 -==>  Preparing: select count(*) from elec_log WHERE user_type = ? and `elec_date` >= ? and `elec_date` <= ? 
2019-03-27 18:13:45 -==> Parameters: A(String), 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String)
2019-03-27 18:13:45 -<==      Total: 1
2019-03-27 18:13:45 -耗时 : 20
2019-03-27 18:13:45 -返回值 : com.bootdo.common.utils.PageUtils@142ccdcc
2019-03-27 18:13:46 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-27 18:13:46 -HTTP METHOD : GET
2019-03-27 18:13:46 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-27 18:13:46 -参数 : []
2019-03-27 18:13:46 -耗时 : 1
2019-03-27 18:13:46 -返回值 : system/dept/deptTree
2019-03-27 18:13:46 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-27 18:13:46 -HTTP METHOD : GET
2019-03-27 18:13:46 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-27 18:13:46 -参数 : []
2019-03-27 18:13:46 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-27 18:13:46 -==> Parameters: 
2019-03-27 18:13:46 -<==      Total: 3
2019-03-27 18:13:46 -耗时 : 28
2019-03-27 18:13:46 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-27 18:13:51 -请求地址 : http://localhost:8081/moneyLog/elecLog/exprotElecLog
2019-03-27 18:13:51 -HTTP METHOD : GET
2019-03-27 18:13:51 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog
2019-03-27 18:13:51 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@5912f988, org.apache.shiro.web.servlet.ShiroHttpServletResponse@68a2df40, org.apache.shiro.web.servlet.ShiroHttpServletRequest@21f83566]
2019-03-27 18:13:51 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? and user_org = ? and `elec_date` >= ? and `elec_date` <= ? 
2019-03-27 18:13:51 -==> Parameters: A(String), 2(String), 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String)
2019-03-27 18:13:51 -<==      Total: 3
2019-03-27 18:13:52 -耗时 : 1283
2019-03-27 18:13:52 -返回值 : null
2019-03-27 18:14:26 -请求地址 : http://localhost:8081/moneyLog/elecLog/add
2019-03-27 18:14:26 -HTTP METHOD : GET
2019-03-27 18:14:26 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.add
2019-03-27 18:14:26 -参数 : []
2019-03-27 18:14:26 -耗时 : 0
2019-03-27 18:14:26 -返回值 : moneyLog/elecLog/add
2019-03-27 18:14:26 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-27 18:14:26 -HTTP METHOD : GET
2019-03-27 18:14:26 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 18:14:26 -参数 : [userType]
2019-03-27 18:14:26 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 18:14:26 -==> Parameters: userType(String)
2019-03-27 18:14:26 -<==      Total: 2
2019-03-27 18:14:26 -耗时 : 7
2019-03-27 18:14:26 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 18:14:54 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-27 18:14:54 -HTTP METHOD : GET
2019-03-27 18:14:54 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-27 18:14:54 -参数 : []
2019-03-27 18:14:54 -耗时 : 1
2019-03-27 18:14:54 -返回值 : system/dept/deptTree
2019-03-27 18:14:55 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-27 18:14:55 -HTTP METHOD : GET
2019-03-27 18:14:55 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-27 18:14:55 -参数 : []
2019-03-27 18:14:55 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-27 18:14:55 -==> Parameters: 
2019-03-27 18:14:55 -<==      Total: 3
2019-03-27 18:14:55 -耗时 : 7
2019-03-27 18:14:55 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-27 18:15:02 -请求地址 : http://localhost:8081/moneyLog/elecLog/save
2019-03-27 18:15:02 -HTTP METHOD : POST
2019-03-27 18:15:02 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.save
2019-03-27 18:15:02 -参数 : [com.bootdo.moneyLog.domain.ElecLogDO@f9d70e0]
2019-03-27 18:15:02 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-27 18:15:02 -==> Parameters: 5-8888(String), asdasd(String), A(String), 2(String), 80(BigDecimal), 2019-03-27 18:15:02.616(Timestamp), 2019-03(String), 1(Long), 2019-03-27 18:15:02.616(Timestamp), 1(Long), (String)
2019-03-27 18:15:02 -<==    Updates: 1
2019-03-27 18:15:02 -耗时 : 111
2019-03-27 18:15:02 -返回值 : {msg=操作成功, code=0}
2019-03-27 18:15:02 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-27 18:15:02 -HTTP METHOD : GET
2019-03-27 18:15:02 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-27 18:15:02 -参数 : [{limit=10, offset=0, userType=A, userOrg=2, userId=, elecDate=2019-03-19}]
2019-03-27 18:15:02 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? and user_org = ? and `elec_date` >= ? and `elec_date` <= ? order by id asc limit ?, ? 
2019-03-27 18:15:02 -==> Parameters: A(String), 2(String), 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 0(Integer), 10(Integer)
2019-03-27 18:15:02 -<==      Total: 3
2019-03-27 18:15:02 -==>  Preparing: select count(*) from elec_log WHERE user_type = ? and user_org = ? and `elec_date` >= ? and `elec_date` <= ? 
2019-03-27 18:15:02 -==> Parameters: A(String), 2(String), 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String)
2019-03-27 18:15:02 -<==      Total: 1
2019-03-27 18:15:02 -耗时 : 25
2019-03-27 18:15:02 -返回值 : com.bootdo.common.utils.PageUtils@69c556d8
2019-03-27 18:15:07 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-27 18:15:07 -HTTP METHOD : GET
2019-03-27 18:15:07 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-27 18:15:07 -参数 : [{limit=10, offset=0, userType=A, userOrg=2, userId=, elecDate=2019-03-19}]
2019-03-27 18:15:07 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? and user_org = ? and `elec_date` >= ? and `elec_date` <= ? order by id asc limit ?, ? 
2019-03-27 18:15:07 -==> Parameters: A(String), 2(String), 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 0(Integer), 10(Integer)
2019-03-27 18:15:07 -<==      Total: 3
2019-03-27 18:15:07 -==>  Preparing: select count(*) from elec_log WHERE user_type = ? and user_org = ? and `elec_date` >= ? and `elec_date` <= ? 
2019-03-27 18:15:07 -==> Parameters: A(String), 2(String), 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String)
2019-03-27 18:15:07 -<==      Total: 1
2019-03-27 18:15:07 -耗时 : 21
2019-03-27 18:15:07 -返回值 : com.bootdo.common.utils.PageUtils@2f1776b3
2019-03-27 18:15:08 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-27 18:15:08 -HTTP METHOD : GET
2019-03-27 18:15:08 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-27 18:15:08 -参数 : [{limit=10, offset=0, userType=A, userOrg=2, userId=, elecDate=2019-03-19}]
2019-03-27 18:15:08 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? and user_org = ? and `elec_date` >= ? and `elec_date` <= ? order by id asc limit ?, ? 
2019-03-27 18:15:08 -==> Parameters: A(String), 2(String), 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 0(Integer), 10(Integer)
2019-03-27 18:15:08 -<==      Total: 3
2019-03-27 18:15:08 -==>  Preparing: select count(*) from elec_log WHERE user_type = ? and user_org = ? and `elec_date` >= ? and `elec_date` <= ? 
2019-03-27 18:15:08 -==> Parameters: A(String), 2(String), 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String)
2019-03-27 18:15:08 -<==      Total: 1
2019-03-27 18:15:08 -耗时 : 13
2019-03-27 18:15:08 -返回值 : com.bootdo.common.utils.PageUtils@210b07b2
2019-03-27 18:15:11 -请求地址 : http://localhost:8081/index
2019-03-27 18:15:11 -HTTP METHOD : GET
2019-03-27 18:15:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-27 18:15:11 -参数 : [{}]
2019-03-27 18:15:11 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-27 18:15:11 -==> Parameters: 1(Long)
2019-03-27 18:15:11 -<==      Total: 46
2019-03-27 18:15:11 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-27 18:15:11 -==> Parameters: 138(Long)
2019-03-27 18:15:11 -<==      Total: 1
2019-03-27 18:15:11 -耗时 : 31
2019-03-27 18:15:11 -返回值 : index_v1
2019-03-27 18:15:11 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-27 18:15:11 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 31(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-27 18:15:11.619(Timestamp)
2019-03-27 18:15:11 -<==    Updates: 1
2019-03-27 18:15:11 -请求地址 : http://localhost:8081/main
2019-03-27 18:15:11 -HTTP METHOD : GET
2019-03-27 18:15:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-27 18:15:11 -参数 : []
2019-03-27 18:15:11 -耗时 : 0
2019-03-27 18:15:11 -返回值 : main
2019-03-27 18:15:12 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-27 18:15:12 -HTTP METHOD : GET
2019-03-27 18:15:12 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-27 18:15:12 -参数 : []
2019-03-27 18:15:12 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-27 18:15:12 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-27 18:15:12 -<==      Total: 0
2019-03-27 18:15:12 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-27 18:15:12 -==> Parameters: 1(Long), 0(String)
2019-03-27 18:15:12 -<==      Total: 1
2019-03-27 18:15:12 -耗时 : 27
2019-03-27 18:15:12 -返回值 : com.bootdo.common.utils.PageUtils@12ce26a9
2019-03-27 18:15:12 -请求地址 : http://localhost:8081/main
2019-03-27 18:15:12 -HTTP METHOD : GET
2019-03-27 18:15:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-27 18:15:12 -参数 : []
2019-03-27 18:15:12 -耗时 : 3
2019-03-27 18:15:12 -返回值 : main
2019-03-27 18:15:15 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-27 18:15:15 -HTTP METHOD : GET
2019-03-27 18:15:15 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-27 18:15:15 -参数 : []
2019-03-27 18:15:15 -耗时 : 0
2019-03-27 18:15:15 -返回值 : /moneyLog/elecLog/elecLog
2019-03-27 18:15:15 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-27 18:15:15 -HTTP METHOD : GET
2019-03-27 18:15:15 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 18:15:15 -参数 : [userType]
2019-03-27 18:15:15 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 18:15:15 -==> Parameters: userType(String)
2019-03-27 18:15:15 -<==      Total: 2
2019-03-27 18:15:15 -耗时 : 5
2019-03-27 18:15:15 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 18:15:15 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-27 18:15:15 -HTTP METHOD : GET
2019-03-27 18:15:15 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-27 18:15:15 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-27 18:15:15 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-27 18:15:15 -==> Parameters: 0(Integer), 10(Integer)
2019-03-27 18:15:15 -<==      Total: 7
2019-03-27 18:15:15 -==>  Preparing: select count(*) from elec_log 
2019-03-27 18:15:15 -==> Parameters: 
2019-03-27 18:15:15 -<==      Total: 1
2019-03-27 18:15:15 -耗时 : 10
2019-03-27 18:15:15 -返回值 : com.bootdo.common.utils.PageUtils@33534989
2019-03-27 18:15:46 -请求地址 : http://localhost:8081/moneyLog/elecLog/edit/7
2019-03-27 18:15:46 -HTTP METHOD : GET
2019-03-27 18:15:46 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.edit
2019-03-27 18:15:46 -参数 : [7, {}]
2019-03-27 18:15:46 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log where id = ? 
2019-03-27 18:15:46 -==> Parameters: 7(Long)
2019-03-27 18:15:46 -<==      Total: 1
2019-03-27 18:15:46 -耗时 : 10
2019-03-27 18:15:46 -返回值 : moneyLog/elecLog/edit
2019-03-27 18:15:46 -请求地址 : http://localhost:8081/common/dict/list/userOrg
2019-03-27 18:15:46 -HTTP METHOD : GET
2019-03-27 18:15:46 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-27 18:15:46 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 18:15:46 -HTTP METHOD : GET
2019-03-27 18:15:46 -参数 : [userOrg]
2019-03-27 18:15:46 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 18:15:46 -参数 : [userType]
2019-03-27 18:15:46 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 18:15:46 -==> Parameters: userOrg(String)
2019-03-27 18:15:46 -<==      Total: 0
2019-03-27 18:15:46 -耗时 : 4
2019-03-27 18:15:46 -返回值 : []
2019-03-27 18:15:46 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 18:15:46 -==> Parameters: userType(String)
2019-03-27 18:15:46 -<==      Total: 2
2019-03-27 18:15:46 -耗时 : 10
2019-03-27 18:15:46 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 18:16:36 -请求地址 : http://localhost:8081/moneyLog/elecLog/edit/3
2019-03-27 18:16:36 -HTTP METHOD : GET
2019-03-27 18:16:36 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.edit
2019-03-27 18:16:36 -参数 : [3, {}]
2019-03-27 18:16:36 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log where id = ? 
2019-03-27 18:16:36 -==> Parameters: 3(Long)
2019-03-27 18:16:36 -<==      Total: 1
2019-03-27 18:16:36 -耗时 : 221
2019-03-27 18:16:36 -返回值 : moneyLog/elecLog/edit
2019-03-27 18:16:37 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-27 18:16:37 -HTTP METHOD : GET
2019-03-27 18:16:37 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 18:16:37 -参数 : [userType]
2019-03-27 18:16:37 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 18:16:37 -==> Parameters: userType(String)
2019-03-27 18:16:37 -请求地址 : http://localhost:8081/common/dict/list/userOrg
2019-03-27 18:16:37 -HTTP METHOD : GET
2019-03-27 18:16:37 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 18:16:37 -参数 : [userOrg]
2019-03-27 18:16:37 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 18:16:37 -==> Parameters: userOrg(String)
2019-03-27 18:16:37 -<==      Total: 0
2019-03-27 18:16:37 -耗时 : 16
2019-03-27 18:16:37 -返回值 : []
2019-03-27 18:16:37 -<==      Total: 2
2019-03-27 18:16:37 -耗时 : 38
2019-03-27 18:16:37 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 18:16:46 -请求地址 : http://localhost:8081/moneyLog/elecLog/edit/3
2019-03-27 18:16:46 -HTTP METHOD : GET
2019-03-27 18:16:46 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.edit
2019-03-27 18:16:46 -参数 : [3, {}]
2019-03-27 18:16:46 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log where id = ? 
2019-03-27 18:16:46 -==> Parameters: 3(Long)
2019-03-27 18:16:46 -<==      Total: 1
2019-03-27 18:16:46 -耗时 : 5
2019-03-27 18:16:46 -返回值 : moneyLog/elecLog/edit
2019-03-27 18:16:46 -请求地址 : http://localhost:8081/common/dict/list/userOrg
2019-03-27 18:16:46 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-27 18:16:46 -HTTP METHOD : GET
2019-03-27 18:16:46 -HTTP METHOD : GET
2019-03-27 18:16:46 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 18:16:46 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 18:16:46 -参数 : [userOrg]
2019-03-27 18:16:46 -参数 : [userType]
2019-03-27 18:16:46 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 18:16:46 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 18:16:46 -==> Parameters: userOrg(String)
2019-03-27 18:16:46 -==> Parameters: userType(String)
2019-03-27 18:16:46 -<==      Total: 0
2019-03-27 18:16:46 -耗时 : 4
2019-03-27 18:16:46 -返回值 : []
2019-03-27 18:16:46 -<==      Total: 2
2019-03-27 18:16:46 -耗时 : 4
2019-03-27 18:16:46 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 18:16:49 -请求地址 : http://localhost:8081/index
2019-03-27 18:16:49 -HTTP METHOD : GET
2019-03-27 18:16:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-27 18:16:49 -参数 : [{}]
2019-03-27 18:16:49 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-27 18:16:49 -==> Parameters: 1(Long)
2019-03-27 18:16:49 -<==      Total: 46
2019-03-27 18:16:49 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-27 18:16:49 -==> Parameters: 138(Long)
2019-03-27 18:16:49 -<==      Total: 1
2019-03-27 18:16:49 -耗时 : 155
2019-03-27 18:16:49 -返回值 : index_v1
2019-03-27 18:16:49 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-27 18:16:49 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 155(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-27 18:16:49.679(Timestamp)
2019-03-27 18:16:49 -<==    Updates: 1
2019-03-27 18:16:49 -请求地址 : http://localhost:8081/main
2019-03-27 18:16:49 -HTTP METHOD : GET
2019-03-27 18:16:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-27 18:16:49 -参数 : []
2019-03-27 18:16:49 -耗时 : 1
2019-03-27 18:16:49 -返回值 : main
2019-03-27 18:16:50 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-27 18:16:50 -HTTP METHOD : GET
2019-03-27 18:16:50 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-27 18:16:50 -参数 : []
2019-03-27 18:16:50 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-27 18:16:50 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-27 18:16:50 -请求地址 : http://localhost:8081/main
2019-03-27 18:16:50 -HTTP METHOD : GET
2019-03-27 18:16:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-27 18:16:50 -参数 : []
2019-03-27 18:16:50 -耗时 : 1
2019-03-27 18:16:50 -返回值 : main
2019-03-27 18:16:50 -<==      Total: 0
2019-03-27 18:16:50 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-27 18:16:50 -==> Parameters: 1(Long), 0(String)
2019-03-27 18:16:50 -<==      Total: 1
2019-03-27 18:16:50 -耗时 : 349
2019-03-27 18:16:50 -返回值 : com.bootdo.common.utils.PageUtils@6de58cf9
2019-03-27 18:16:54 -请求地址 : http://localhost:8081/elec/elec
2019-03-27 18:16:54 -HTTP METHOD : GET
2019-03-27 18:16:54 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-27 18:16:54 -参数 : []
2019-03-27 18:16:54 -耗时 : 0
2019-03-27 18:16:54 -返回值 : elec/elec/elec
2019-03-27 18:16:55 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-27 18:16:55 -HTTP METHOD : GET
2019-03-27 18:16:55 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 18:16:55 -参数 : [userType]
2019-03-27 18:16:55 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 18:16:55 -==> Parameters: userType(String)
2019-03-27 18:16:55 -<==      Total: 2
2019-03-27 18:16:55 -耗时 : 7
2019-03-27 18:16:55 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 18:16:55 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-27 18:16:55 -HTTP METHOD : GET
2019-03-27 18:16:55 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-27 18:16:55 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@50bf1c7e]
2019-03-27 18:16:55 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-27 18:16:55 -==> Parameters: 0(Integer), 10(Integer)
2019-03-27 18:16:55 -<==      Total: 10
2019-03-27 18:16:55 -==>  Preparing: select count(*) from elec 
2019-03-27 18:16:55 -==> Parameters: 
2019-03-27 18:16:55 -<==      Total: 1
2019-03-27 18:16:55 -耗时 : 187
2019-03-27 18:16:55 -返回值 : com.bootdo.common.utils.PageUtils@35c2227a
2019-03-27 18:17:02 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-27 18:17:02 -HTTP METHOD : GET
2019-03-27 18:17:02 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-27 18:17:02 -参数 : []
2019-03-27 18:17:02 -耗时 : 1
2019-03-27 18:17:02 -返回值 : /moneyLog/elecLog/elecLog
2019-03-27 18:17:03 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-27 18:17:03 -HTTP METHOD : GET
2019-03-27 18:17:03 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 18:17:03 -参数 : [userType]
2019-03-27 18:17:03 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 18:17:03 -==> Parameters: userType(String)
2019-03-27 18:17:03 -<==      Total: 2
2019-03-27 18:17:03 -耗时 : 13
2019-03-27 18:17:03 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 18:17:03 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-27 18:17:03 -HTTP METHOD : GET
2019-03-27 18:17:03 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-27 18:17:03 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-27 18:17:03 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-27 18:17:03 -==> Parameters: 0(Integer), 10(Integer)
2019-03-27 18:17:03 -<==      Total: 7
2019-03-27 18:17:03 -==>  Preparing: select count(*) from elec_log 
2019-03-27 18:17:03 -==> Parameters: 
2019-03-27 18:17:03 -<==      Total: 1
2019-03-27 18:17:03 -耗时 : 9
2019-03-27 18:17:03 -返回值 : com.bootdo.common.utils.PageUtils@5839e225
2019-03-27 18:17:20 -请求地址 : http://localhost:8081/print/print
2019-03-27 18:17:20 -HTTP METHOD : GET
2019-03-27 18:17:20 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-03-27 18:17:20 -参数 : []
2019-03-27 18:17:20 -耗时 : 1
2019-03-27 18:17:20 -返回值 : print/print/print
2019-03-27 18:17:20 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-27 18:17:20 -HTTP METHOD : GET
2019-03-27 18:17:20 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 18:17:20 -参数 : [userType]
2019-03-27 18:17:20 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 18:17:20 -==> Parameters: userType(String)
2019-03-27 18:17:20 -<==      Total: 2
2019-03-27 18:17:20 -耗时 : 6
2019-03-27 18:17:20 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 18:17:20 -请求地址 : http://localhost:8081/print/print/list
2019-03-27 18:17:20 -HTTP METHOD : GET
2019-03-27 18:17:20 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-27 18:17:20 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-27 18:17:58 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-03-27 18:17:58 -==> Parameters: 0(Integer), 10(Integer)
2019-03-27 18:17:58 -<==      Total: 3
2019-03-27 18:17:58 -==>  Preparing: select count(*) from print 
2019-03-27 18:17:58 -==> Parameters: 
2019-03-27 18:17:58 -<==      Total: 1
2019-03-27 18:17:58 -耗时 : 37924
2019-03-27 18:17:58 -返回值 : com.bootdo.common.utils.PageUtils@5cd74fbd
2019-03-27 18:18:05 -请求地址 : http://localhost:8081/print/print/edit/1
2019-03-27 18:18:05 -HTTP METHOD : GET
2019-03-27 18:18:05 -CLASS_METHOD : com.bootdo.print.controller.PrintController.edit
2019-03-27 18:18:05 -参数 : [1, {}]
2019-03-27 18:18:05 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-03-27 18:18:05 -==> Parameters: 1(Long)
2019-03-27 18:18:05 -<==      Total: 1
2019-03-27 18:18:05 -耗时 : 9
2019-03-27 18:18:05 -返回值 : print/print/edit
2019-03-27 18:18:05 -[THYMELEAF][http-nio-8081-exec-9] Exception processing template "print/print/edit": An error happened during template parsing (template: "class path resource [templates/print/print/edit.html]")
org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/print/print/edit.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:354)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:187)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1325)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1069)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.attoparser.ParseException: Exception evaluating SpringEL expression: "print.accountData" (template: "print/print/edit" - line 124, col 53)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 69 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "print.accountData" (template: "print/print/edit" - line 124, col 53)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:290)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:165)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:126)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleStandaloneElement(ProcessorTemplateHandler.java:918)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleStandaloneElementEnd(TemplateHandlerAdapterMarkupHandler.java:260)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleStandaloneElementEnd(InlinedOutputExpressionMarkupHandler.java:256)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleStandaloneElementEnd(OutputExpressionInlinePreProcessorHandler.java:169)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleStandaloneElementEnd(InlinedOutputExpressionMarkupHandler.java:104)
	at org.attoparser.HtmlVoidElement.handleOpenElementEnd(HtmlVoidElement.java:92)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 71 common frames omitted
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1008E: Property or field 'accountData' cannot be found on object of type 'com.bootdo.print.vo.PrintVo' - maybe not public or not valid?
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:217)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:407)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:89)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:111)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:334)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	... 90 common frames omitted
2019-03-27 18:18:05 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/print/print/edit.html]")] with root cause
org.springframework.expression.spel.SpelEvaluationException: EL1008E: Property or field 'accountData' cannot be found on object of type 'com.bootdo.print.vo.PrintVo' - maybe not public or not valid?
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:217)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:407)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:89)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:111)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:334)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:165)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:126)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleStandaloneElement(ProcessorTemplateHandler.java:918)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleStandaloneElementEnd(TemplateHandlerAdapterMarkupHandler.java:260)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleStandaloneElementEnd(InlinedOutputExpressionMarkupHandler.java:256)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleStandaloneElementEnd(OutputExpressionInlinePreProcessorHandler.java:169)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleStandaloneElementEnd(InlinedOutputExpressionMarkupHandler.java:104)
	at org.attoparser.HtmlVoidElement.handleOpenElementEnd(HtmlVoidElement.java:92)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:354)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:187)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1325)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1069)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-27 18:18:09 -请求地址 : http://localhost:8081/print/print/add
2019-03-27 18:18:09 -HTTP METHOD : GET
2019-03-27 18:18:09 -CLASS_METHOD : com.bootdo.print.controller.PrintController.add
2019-03-27 18:18:09 -参数 : []
2019-03-27 18:18:09 -耗时 : 0
2019-03-27 18:18:09 -返回值 : print/print/add
2019-03-27 18:18:10 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-27 18:18:10 -HTTP METHOD : GET
2019-03-27 18:18:10 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 18:18:10 -参数 : [userType]
2019-03-27 18:18:10 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 18:18:10 -==> Parameters: userType(String)
2019-03-27 18:18:10 -<==      Total: 2
2019-03-27 18:18:10 -耗时 : 4
2019-03-27 18:18:10 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 18:18:15 -请求地址 : http://localhost:8081/print/print/edit/1
2019-03-27 18:18:15 -HTTP METHOD : GET
2019-03-27 18:18:15 -CLASS_METHOD : com.bootdo.print.controller.PrintController.edit
2019-03-27 18:18:15 -参数 : [1, {}]
2019-03-27 18:18:15 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-03-27 18:18:15 -==> Parameters: 1(Long)
2019-03-27 18:18:15 -<==      Total: 1
2019-03-27 18:18:15 -耗时 : 7
2019-03-27 18:18:15 -返回值 : print/print/edit
2019-03-27 18:18:15 -[THYMELEAF][http-nio-8081-exec-10] Exception processing template "print/print/edit": An error happened during template parsing (template: "class path resource [templates/print/print/edit.html]")
org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/print/print/edit.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:354)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:187)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1325)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1069)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.attoparser.ParseException: Exception evaluating SpringEL expression: "print.accountData" (template: "print/print/edit" - line 124, col 53)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 69 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "print.accountData" (template: "print/print/edit" - line 124, col 53)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:290)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:165)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:126)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleStandaloneElement(ProcessorTemplateHandler.java:918)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleStandaloneElementEnd(TemplateHandlerAdapterMarkupHandler.java:260)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleStandaloneElementEnd(InlinedOutputExpressionMarkupHandler.java:256)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleStandaloneElementEnd(OutputExpressionInlinePreProcessorHandler.java:169)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleStandaloneElementEnd(InlinedOutputExpressionMarkupHandler.java:104)
	at org.attoparser.HtmlVoidElement.handleOpenElementEnd(HtmlVoidElement.java:92)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 71 common frames omitted
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1008E: Property or field 'accountData' cannot be found on object of type 'com.bootdo.print.vo.PrintVo' - maybe not public or not valid?
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:217)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:407)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:89)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:111)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:334)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	... 90 common frames omitted
2019-03-27 18:18:15 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/print/print/edit.html]")] with root cause
org.springframework.expression.spel.SpelEvaluationException: EL1008E: Property or field 'accountData' cannot be found on object of type 'com.bootdo.print.vo.PrintVo' - maybe not public or not valid?
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:217)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:407)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:89)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:111)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:334)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:165)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:126)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleStandaloneElement(ProcessorTemplateHandler.java:918)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleStandaloneElementEnd(TemplateHandlerAdapterMarkupHandler.java:260)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleStandaloneElementEnd(InlinedOutputExpressionMarkupHandler.java:256)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleStandaloneElementEnd(OutputExpressionInlinePreProcessorHandler.java:169)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleStandaloneElementEnd(InlinedOutputExpressionMarkupHandler.java:104)
	at org.attoparser.HtmlVoidElement.handleOpenElementEnd(HtmlVoidElement.java:92)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:354)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:187)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1325)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1069)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-27 18:22:11 -请求地址 : http://localhost:8081/index
2019-03-27 18:22:11 -HTTP METHOD : GET
2019-03-27 18:22:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-27 18:22:11 -参数 : [{}]
2019-03-27 18:22:11 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-27 18:22:11 -==> Parameters: 1(Long)
2019-03-27 18:22:11 -<==      Total: 46
2019-03-27 18:22:11 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-27 18:22:11 -==> Parameters: 138(Long)
2019-03-27 18:22:11 -<==      Total: 1
2019-03-27 18:22:11 -耗时 : 89
2019-03-27 18:22:11 -返回值 : index_v1
2019-03-27 18:22:11 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-27 18:22:11 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 89(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-27 18:22:11.727(Timestamp)
2019-03-27 18:22:11 -<==    Updates: 1
2019-03-27 18:22:12 -请求地址 : http://localhost:8081/main
2019-03-27 18:22:12 -HTTP METHOD : GET
2019-03-27 18:22:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-27 18:22:12 -参数 : []
2019-03-27 18:22:12 -耗时 : 2
2019-03-27 18:22:12 -返回值 : main
2019-03-27 18:22:13 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-27 18:22:13 -HTTP METHOD : GET
2019-03-27 18:22:13 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-27 18:22:13 -参数 : []
2019-03-27 18:22:13 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-27 18:22:13 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-27 18:22:13 -请求地址 : http://localhost:8081/main
2019-03-27 18:22:13 -HTTP METHOD : GET
2019-03-27 18:22:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-27 18:22:13 -参数 : []
2019-03-27 18:22:13 -耗时 : 1
2019-03-27 18:22:13 -返回值 : main
2019-03-27 18:22:13 -<==      Total: 0
2019-03-27 18:22:13 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-27 18:22:13 -==> Parameters: 1(Long), 0(String)
2019-03-27 18:22:13 -<==      Total: 1
2019-03-27 18:22:13 -耗时 : 84
2019-03-27 18:22:13 -返回值 : com.bootdo.common.utils.PageUtils@5cfb47a4
2019-03-27 18:22:24 -请求地址 : http://localhost:8081/print/print
2019-03-27 18:22:24 -HTTP METHOD : GET
2019-03-27 18:22:24 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-03-27 18:22:24 -参数 : []
2019-03-27 18:22:24 -耗时 : 0
2019-03-27 18:22:24 -返回值 : print/print/print
2019-03-27 18:22:26 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-27 18:22:26 -HTTP METHOD : GET
2019-03-27 18:22:26 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 18:22:26 -参数 : [userType]
2019-03-27 18:22:26 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 18:22:26 -==> Parameters: userType(String)
2019-03-27 18:22:26 -<==      Total: 2
2019-03-27 18:22:26 -耗时 : 5
2019-03-27 18:22:26 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 18:22:26 -请求地址 : http://localhost:8081/print/print/list
2019-03-27 18:22:26 -HTTP METHOD : GET
2019-03-27 18:22:26 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-27 18:22:26 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-27 18:22:26 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-03-27 18:22:26 -==> Parameters: 0(Integer), 10(Integer)
2019-03-27 18:22:26 -<==      Total: 3
2019-03-27 18:22:26 -==>  Preparing: select count(*) from print 
2019-03-27 18:22:26 -==> Parameters: 
2019-03-27 18:22:26 -<==      Total: 1
2019-03-27 18:22:26 -耗时 : 10
2019-03-27 18:22:26 -返回值 : com.bootdo.common.utils.PageUtils@4dfcb476
2019-03-27 18:22:27 -请求地址 : http://localhost:8081/print/print/edit/1
2019-03-27 18:22:27 -HTTP METHOD : GET
2019-03-27 18:22:27 -CLASS_METHOD : com.bootdo.print.controller.PrintController.edit
2019-03-27 18:22:27 -参数 : [1, {}]
2019-03-27 18:22:27 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-03-27 18:22:27 -==> Parameters: 1(Long)
2019-03-27 18:22:27 -<==      Total: 1
2019-03-27 18:22:27 -耗时 : 13
2019-03-27 18:22:27 -返回值 : print/print/edit
2019-03-27 18:22:27 -[THYMELEAF][http-nio-8081-exec-5] Exception processing template "print/print/edit": An error happened during template parsing (template: "class path resource [templates/print/print/edit.html]")
org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/print/print/edit.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:354)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:187)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1325)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1069)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.attoparser.ParseException: Exception evaluating SpringEL expression: "print.printData" (template: "print/print/edit" - line 135, col 49)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 69 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "print.printData" (template: "print/print/edit" - line 135, col 49)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:290)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:165)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:126)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleStandaloneElement(ProcessorTemplateHandler.java:918)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleStandaloneElementEnd(TemplateHandlerAdapterMarkupHandler.java:260)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleStandaloneElementEnd(InlinedOutputExpressionMarkupHandler.java:256)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleStandaloneElementEnd(OutputExpressionInlinePreProcessorHandler.java:169)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleStandaloneElementEnd(InlinedOutputExpressionMarkupHandler.java:104)
	at org.attoparser.HtmlVoidElement.handleOpenElementEnd(HtmlVoidElement.java:92)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 71 common frames omitted
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1008E: Property or field 'printData' cannot be found on object of type 'com.bootdo.print.vo.PrintVo' - maybe not public or not valid?
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:217)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:407)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:89)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:111)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:334)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	... 90 common frames omitted
2019-03-27 18:22:27 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/print/print/edit.html]")] with root cause
org.springframework.expression.spel.SpelEvaluationException: EL1008E: Property or field 'printData' cannot be found on object of type 'com.bootdo.print.vo.PrintVo' - maybe not public or not valid?
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:217)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:407)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:89)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:111)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:334)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:165)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:126)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleStandaloneElement(ProcessorTemplateHandler.java:918)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleStandaloneElementEnd(TemplateHandlerAdapterMarkupHandler.java:260)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleStandaloneElementEnd(InlinedOutputExpressionMarkupHandler.java:256)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleStandaloneElementEnd(OutputExpressionInlinePreProcessorHandler.java:169)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleStandaloneElementEnd(InlinedOutputExpressionMarkupHandler.java:104)
	at org.attoparser.HtmlVoidElement.handleOpenElementEnd(HtmlVoidElement.java:92)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:354)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:187)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1325)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1069)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-27 18:22:30 -请求地址 : http://localhost:8081/index
2019-03-27 18:22:30 -HTTP METHOD : GET
2019-03-27 18:22:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-27 18:22:30 -参数 : [{}]
2019-03-27 18:22:30 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-27 18:22:30 -==> Parameters: 1(Long)
2019-03-27 18:22:30 -<==      Total: 46
2019-03-27 18:22:30 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-27 18:22:30 -==> Parameters: 138(Long)
2019-03-27 18:22:30 -<==      Total: 1
2019-03-27 18:22:30 -耗时 : 26
2019-03-27 18:22:30 -返回值 : index_v1
2019-03-27 18:22:30 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-27 18:22:30 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 26(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-27 18:22:30.483(Timestamp)
2019-03-27 18:22:30 -请求地址 : http://localhost:8081/main
2019-03-27 18:22:30 -HTTP METHOD : GET
2019-03-27 18:22:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-27 18:22:30 -参数 : []
2019-03-27 18:22:30 -耗时 : 1
2019-03-27 18:22:30 -返回值 : main
2019-03-27 18:22:30 -<==    Updates: 1
2019-03-27 18:22:31 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-27 18:22:31 -HTTP METHOD : GET
2019-03-27 18:22:31 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-27 18:22:31 -参数 : []
2019-03-27 18:22:31 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-27 18:22:31 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-27 18:22:31 -<==      Total: 0
2019-03-27 18:22:31 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-27 18:22:31 -==> Parameters: 1(Long), 0(String)
2019-03-27 18:22:31 -<==      Total: 1
2019-03-27 18:22:31 -耗时 : 7
2019-03-27 18:22:31 -返回值 : com.bootdo.common.utils.PageUtils@1779ccca
2019-03-27 18:22:31 -请求地址 : http://localhost:8081/main
2019-03-27 18:22:31 -HTTP METHOD : GET
2019-03-27 18:22:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-27 18:22:31 -参数 : []
2019-03-27 18:22:31 -耗时 : 1
2019-03-27 18:22:31 -返回值 : main
2019-03-27 18:24:06 -请求地址 : http://localhost:8081/index
2019-03-27 18:24:06 -HTTP METHOD : GET
2019-03-27 18:24:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-27 18:24:06 -参数 : [{}]
2019-03-27 18:24:06 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-27 18:24:06 -==> Parameters: 1(Long)
2019-03-27 18:24:06 -<==      Total: 46
2019-03-27 18:24:06 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-27 18:24:06 -==> Parameters: 138(Long)
2019-03-27 18:24:06 -<==      Total: 1
2019-03-27 18:24:06 -耗时 : 34
2019-03-27 18:24:06 -返回值 : index_v1
2019-03-27 18:24:06 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-27 18:24:06 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 34(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-27 18:24:06.896(Timestamp)
2019-03-27 18:24:07 -请求地址 : http://localhost:8081/main
2019-03-27 18:24:07 -HTTP METHOD : GET
2019-03-27 18:24:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-27 18:24:07 -参数 : []
2019-03-27 18:24:07 -耗时 : 1
2019-03-27 18:24:07 -返回值 : main
2019-03-27 18:24:07 -<==    Updates: 1
2019-03-27 18:24:07 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-27 18:24:07 -HTTP METHOD : GET
2019-03-27 18:24:07 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-27 18:24:07 -参数 : []
2019-03-27 18:24:07 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-27 18:24:07 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-27 18:24:07 -<==      Total: 0
2019-03-27 18:24:07 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-27 18:24:07 -==> Parameters: 1(Long), 0(String)
2019-03-27 18:24:07 -<==      Total: 1
2019-03-27 18:24:07 -耗时 : 7
2019-03-27 18:24:07 -返回值 : com.bootdo.common.utils.PageUtils@7034720
2019-03-27 18:24:07 -请求地址 : http://localhost:8081/main
2019-03-27 18:24:07 -HTTP METHOD : GET
2019-03-27 18:24:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-27 18:24:07 -参数 : []
2019-03-27 18:24:07 -耗时 : 0
2019-03-27 18:24:07 -返回值 : main
2019-03-27 18:24:13 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-27 18:24:13 -==> Parameters: 1(Long)
2019-03-27 18:24:13 -<==      Total: 90
2019-03-27 18:24:13 -请求地址 : http://localhost:8081/print/print
2019-03-27 18:24:13 -HTTP METHOD : GET
2019-03-27 18:24:13 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-03-27 18:24:13 -参数 : []
2019-03-27 18:24:13 -耗时 : 1
2019-03-27 18:24:13 -返回值 : print/print/print
2019-03-27 18:24:13 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-27 18:24:13 -HTTP METHOD : GET
2019-03-27 18:24:13 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 18:24:13 -参数 : [userType]
2019-03-27 18:24:13 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 18:24:13 -==> Parameters: userType(String)
2019-03-27 18:24:13 -<==      Total: 2
2019-03-27 18:24:13 -耗时 : 5
2019-03-27 18:24:13 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 18:24:13 -请求地址 : http://localhost:8081/print/print/list
2019-03-27 18:24:13 -HTTP METHOD : GET
2019-03-27 18:24:13 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-27 18:24:13 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-27 18:24:13 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-03-27 18:24:13 -==> Parameters: 0(Integer), 10(Integer)
2019-03-27 18:24:13 -<==      Total: 3
2019-03-27 18:24:13 -==>  Preparing: select count(*) from print 
2019-03-27 18:24:13 -==> Parameters: 
2019-03-27 18:24:13 -<==      Total: 1
2019-03-27 18:24:13 -耗时 : 10
2019-03-27 18:24:13 -返回值 : com.bootdo.common.utils.PageUtils@19fe579f
2019-03-27 18:24:14 -请求地址 : http://localhost:8081/print/print/edit/1
2019-03-27 18:24:14 -HTTP METHOD : GET
2019-03-27 18:24:14 -CLASS_METHOD : com.bootdo.print.controller.PrintController.edit
2019-03-27 18:24:14 -参数 : [1, {}]
2019-03-27 18:24:14 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-03-27 18:24:14 -==> Parameters: 1(Long)
2019-03-27 18:24:14 -<==      Total: 1
2019-03-27 18:24:14 -耗时 : 5
2019-03-27 18:24:14 -返回值 : print/print/edit
2019-03-27 18:24:15 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-27 18:24:15 -HTTP METHOD : GET
2019-03-27 18:24:15 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 18:24:15 -参数 : [userType]
2019-03-27 18:24:15 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 18:24:15 -==> Parameters: userType(String)
2019-03-27 18:24:15 -<==      Total: 2
2019-03-27 18:24:15 -耗时 : 3
2019-03-27 18:24:15 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 18:26:09 -请求地址 : http://localhost:8081/print/print/edit/1
2019-03-27 18:26:09 -HTTP METHOD : GET
2019-03-27 18:26:09 -CLASS_METHOD : com.bootdo.print.controller.PrintController.edit
2019-03-27 18:26:09 -参数 : [1, {}]
2019-03-27 18:26:09 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-03-27 18:26:09 -==> Parameters: 1(Long)
2019-03-27 18:26:09 -<==      Total: 1
2019-03-27 18:26:09 -耗时 : 8
2019-03-27 18:26:09 -返回值 : print/print/edit
2019-03-27 18:26:09 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-27 18:26:09 -HTTP METHOD : GET
2019-03-27 18:26:09 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 18:26:09 -参数 : [userType]
2019-03-27 18:26:09 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 18:26:09 -==> Parameters: userType(String)
2019-03-27 18:26:09 -<==      Total: 2
2019-03-27 18:26:09 -耗时 : 4
2019-03-27 18:26:09 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 18:27:09 -请求地址 : http://localhost:8081/print/print/edit/1
2019-03-27 18:27:09 -HTTP METHOD : GET
2019-03-27 18:27:09 -CLASS_METHOD : com.bootdo.print.controller.PrintController.edit
2019-03-27 18:27:09 -参数 : [1, {}]
2019-03-27 18:27:09 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-03-27 18:27:09 -==> Parameters: 1(Long)
2019-03-27 18:27:09 -<==      Total: 1
2019-03-27 18:27:09 -耗时 : 5
2019-03-27 18:27:09 -返回值 : print/print/edit
2019-03-27 18:27:09 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-27 18:27:09 -HTTP METHOD : GET
2019-03-27 18:27:09 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 18:27:09 -参数 : [userType]
2019-03-27 18:27:09 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 18:27:09 -==> Parameters: userType(String)
2019-03-27 18:27:09 -<==      Total: 2
2019-03-27 18:27:09 -耗时 : 5
2019-03-27 18:27:09 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 18:27:27 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 6 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(6)-CONNECTED(6)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 69], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 11], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 411]
2019-03-27 18:30:54 -请求地址 : http://localhost:8081/print/print/list
2019-03-27 18:30:54 -HTTP METHOD : GET
2019-03-27 18:30:54 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-27 18:30:54 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=2019-03-26}]
2019-03-27 18:30:54 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE create_time = ? and `print_date` >= ? and `print_date` <= ? order by id asc limit ?, ? 
2019-03-27 18:30:54 -==> Parameters: 2019-03-26(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String), 0(Integer), 10(Integer)
2019-03-27 18:30:54 -<==      Total: 0
2019-03-27 18:30:54 -==>  Preparing: select count(*) from print WHERE create_time = ? and `print_date` >= ? and `print_date` <= ? 
2019-03-27 18:30:54 -==> Parameters: 2019-03-26(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String)
2019-03-27 18:30:54 -<==      Total: 1
2019-03-27 18:30:54 -耗时 : 12
2019-03-27 18:30:54 -返回值 : com.bootdo.common.utils.PageUtils@54c66874
2019-03-27 18:30:55 -请求地址 : http://localhost:8081/print/print/list
2019-03-27 18:30:55 -HTTP METHOD : GET
2019-03-27 18:30:55 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-27 18:30:55 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=2019-03-26}]
2019-03-27 18:30:55 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE create_time = ? and `print_date` >= ? and `print_date` <= ? order by id asc limit ?, ? 
2019-03-27 18:30:55 -==> Parameters: 2019-03-26(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String), 0(Integer), 10(Integer)
2019-03-27 18:30:55 -<==      Total: 0
2019-03-27 18:30:55 -==>  Preparing: select count(*) from print WHERE create_time = ? and `print_date` >= ? and `print_date` <= ? 
2019-03-27 18:30:55 -==> Parameters: 2019-03-26(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String)
2019-03-27 18:30:55 -<==      Total: 1
2019-03-27 18:30:55 -耗时 : 8
2019-03-27 18:30:55 -返回值 : com.bootdo.common.utils.PageUtils@2394f62a
2019-03-27 18:30:55 -请求地址 : http://localhost:8081/print/print/list
2019-03-27 18:30:55 -HTTP METHOD : GET
2019-03-27 18:30:55 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-27 18:30:55 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=2019-03-26}]
2019-03-27 18:30:55 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE create_time = ? and `print_date` >= ? and `print_date` <= ? order by id asc limit ?, ? 
2019-03-27 18:30:55 -==> Parameters: 2019-03-26(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String), 0(Integer), 10(Integer)
2019-03-27 18:30:55 -<==      Total: 0
2019-03-27 18:30:55 -==>  Preparing: select count(*) from print WHERE create_time = ? and `print_date` >= ? and `print_date` <= ? 
2019-03-27 18:30:55 -==> Parameters: 2019-03-26(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String)
2019-03-27 18:30:55 -<==      Total: 1
2019-03-27 18:30:55 -耗时 : 5
2019-03-27 18:30:55 -返回值 : com.bootdo.common.utils.PageUtils@23169db8
2019-03-27 18:31:27 -请求地址 : http://localhost:8081/index
2019-03-27 18:31:27 -HTTP METHOD : GET
2019-03-27 18:31:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-27 18:31:27 -参数 : [{}]
2019-03-27 18:31:27 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-27 18:31:27 -==> Parameters: 1(Long)
2019-03-27 18:31:27 -<==      Total: 46
2019-03-27 18:31:27 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-27 18:31:27 -==> Parameters: 138(Long)
2019-03-27 18:31:27 -<==      Total: 1
2019-03-27 18:31:27 -耗时 : 24
2019-03-27 18:31:27 -返回值 : index_v1
2019-03-27 18:31:27 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-27 18:31:27 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 25(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-27 18:31:27.248(Timestamp)
2019-03-27 18:31:27 -<==    Updates: 1
2019-03-27 18:31:27 -请求地址 : http://localhost:8081/main
2019-03-27 18:31:27 -HTTP METHOD : GET
2019-03-27 18:31:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-27 18:31:27 -参数 : []
2019-03-27 18:31:27 -耗时 : 0
2019-03-27 18:31:27 -返回值 : main
2019-03-27 18:31:27 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-27 18:31:27 -HTTP METHOD : GET
2019-03-27 18:31:27 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-27 18:31:27 -参数 : []
2019-03-27 18:31:27 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-27 18:31:27 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-27 18:31:27 -<==      Total: 0
2019-03-27 18:31:27 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-27 18:31:27 -==> Parameters: 1(Long), 0(String)
2019-03-27 18:31:27 -<==      Total: 1
2019-03-27 18:31:27 -耗时 : 12
2019-03-27 18:31:27 -返回值 : com.bootdo.common.utils.PageUtils@495f3e22
2019-03-27 18:31:27 -请求地址 : http://localhost:8081/main
2019-03-27 18:31:27 -HTTP METHOD : GET
2019-03-27 18:31:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-27 18:31:27 -参数 : []
2019-03-27 18:31:27 -耗时 : 0
2019-03-27 18:31:27 -返回值 : main
2019-03-27 18:31:29 -请求地址 : http://localhost:8081/print/print
2019-03-27 18:31:29 -HTTP METHOD : GET
2019-03-27 18:31:29 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-03-27 18:31:29 -参数 : []
2019-03-27 18:31:29 -耗时 : 0
2019-03-27 18:31:29 -返回值 : print/print/print
2019-03-27 18:31:30 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-27 18:31:30 -HTTP METHOD : GET
2019-03-27 18:31:30 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 18:31:30 -参数 : [userType]
2019-03-27 18:31:30 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 18:31:30 -==> Parameters: userType(String)
2019-03-27 18:31:30 -<==      Total: 2
2019-03-27 18:31:30 -耗时 : 18
2019-03-27 18:31:30 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 18:31:30 -请求地址 : http://localhost:8081/print/print/list
2019-03-27 18:31:30 -HTTP METHOD : GET
2019-03-27 18:31:30 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-27 18:31:30 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-27 18:31:30 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-03-27 18:31:30 -==> Parameters: 0(Integer), 10(Integer)
2019-03-27 18:31:30 -<==      Total: 3
2019-03-27 18:31:30 -==>  Preparing: select count(*) from print 
2019-03-27 18:31:30 -==> Parameters: 
2019-03-27 18:31:30 -<==      Total: 1
2019-03-27 18:31:30 -耗时 : 17
2019-03-27 18:31:30 -返回值 : com.bootdo.common.utils.PageUtils@4cebae75
2019-03-27 18:31:37 -请求地址 : http://localhost:8081/print/print/add
2019-03-27 18:31:37 -HTTP METHOD : GET
2019-03-27 18:31:37 -CLASS_METHOD : com.bootdo.print.controller.PrintController.add
2019-03-27 18:31:37 -参数 : []
2019-03-27 18:31:37 -耗时 : 1
2019-03-27 18:31:37 -返回值 : print/print/add
2019-03-27 18:31:38 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-27 18:31:38 -HTTP METHOD : GET
2019-03-27 18:31:38 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 18:31:38 -参数 : [userType]
2019-03-27 18:31:38 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 18:31:38 -==> Parameters: userType(String)
2019-03-27 18:31:38 -<==      Total: 2
2019-03-27 18:31:38 -耗时 : 15
2019-03-27 18:31:38 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 18:31:56 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-27 18:31:56 -HTTP METHOD : GET
2019-03-27 18:31:56 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-27 18:31:56 -参数 : []
2019-03-27 18:31:56 -耗时 : 0
2019-03-27 18:31:56 -返回值 : system/dept/deptTree
2019-03-27 18:31:56 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-27 18:31:56 -HTTP METHOD : GET
2019-03-27 18:31:56 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-27 18:31:56 -参数 : []
2019-03-27 18:31:56 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-27 18:31:56 -==> Parameters: 
2019-03-27 18:31:56 -<==      Total: 3
2019-03-27 18:31:56 -耗时 : 4
2019-03-27 18:31:56 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-27 18:32:42 -请求地址 : http://localhost:8081/print/print/printEdit/1
2019-03-27 18:32:42 -HTTP METHOD : GET
2019-03-27 18:32:42 -CLASS_METHOD : com.bootdo.print.controller.PrintController.printEdit
2019-03-27 18:32:42 -参数 : [1, {}]
2019-03-27 18:32:42 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-03-27 18:32:42 -==> Parameters: 1(Long)
2019-03-27 18:32:42 -<==      Total: 1
2019-03-27 18:32:42 -耗时 : 6
2019-03-27 18:32:42 -返回值 : print/print/printEdit
2019-03-27 18:32:46 -请求地址 : http://localhost:8081/print/print/printEdit/1
2019-03-27 18:32:46 -HTTP METHOD : GET
2019-03-27 18:32:46 -CLASS_METHOD : com.bootdo.print.controller.PrintController.printEdit
2019-03-27 18:32:46 -参数 : [1, {}]
2019-03-27 18:32:46 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-03-27 18:32:46 -==> Parameters: 1(Long)
2019-03-27 18:32:46 -<==      Total: 1
2019-03-27 18:32:46 -耗时 : 6
2019-03-27 18:32:46 -返回值 : print/print/printEdit
2019-03-27 18:34:59 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-27 18:34:59 -==> Parameters: 1(Long)
2019-03-27 18:34:59 -<==      Total: 90
2019-03-27 18:34:59 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-27 18:34:59 -HTTP METHOD : GET
2019-03-27 18:34:59 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-27 18:34:59 -参数 : []
2019-03-27 18:34:59 -耗时 : 0
2019-03-27 18:34:59 -返回值 : /moneyLog/elecLog/elecLog
2019-03-27 18:35:00 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-27 18:35:00 -HTTP METHOD : GET
2019-03-27 18:35:00 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 18:35:00 -参数 : [userType]
2019-03-27 18:35:00 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 18:35:00 -==> Parameters: userType(String)
2019-03-27 18:35:00 -<==      Total: 2
2019-03-27 18:35:00 -耗时 : 4
2019-03-27 18:35:00 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 18:35:00 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-27 18:35:00 -HTTP METHOD : GET
2019-03-27 18:35:00 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-27 18:35:00 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-27 18:35:00 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-27 18:35:00 -==> Parameters: 0(Integer), 10(Integer)
2019-03-27 18:35:00 -<==      Total: 7
2019-03-27 18:35:00 -==>  Preparing: select count(*) from elec_log 
2019-03-27 18:35:00 -==> Parameters: 
2019-03-27 18:35:00 -<==      Total: 1
2019-03-27 18:35:00 -耗时 : 7
2019-03-27 18:35:00 -返回值 : com.bootdo.common.utils.PageUtils@11da83f
2019-03-27 18:35:12 -请求地址 : http://localhost:8081/moneyLog/elecLog/edit/1
2019-03-27 18:35:12 -HTTP METHOD : GET
2019-03-27 18:35:12 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.edit
2019-03-27 18:35:12 -参数 : [1, {}]
2019-03-27 18:35:12 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log where id = ? 
2019-03-27 18:35:12 -==> Parameters: 1(Long)
2019-03-27 18:35:12 -<==      Total: 1
2019-03-27 18:35:12 -耗时 : 5
2019-03-27 18:35:12 -返回值 : moneyLog/elecLog/edit
2019-03-27 18:35:12 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-27 18:35:12 -HTTP METHOD : GET
2019-03-27 18:35:12 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 18:35:12 -参数 : [userType]
2019-03-27 18:35:12 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 18:35:12 -==> Parameters: userType(String)
2019-03-27 18:35:12 -请求地址 : http://localhost:8081/common/dict/list/userOrg
2019-03-27 18:35:12 -HTTP METHOD : GET
2019-03-27 18:35:12 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 18:35:12 -参数 : [userOrg]
2019-03-27 18:35:12 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 18:35:12 -==> Parameters: userOrg(String)
2019-03-27 18:35:12 -<==      Total: 2
2019-03-27 18:35:12 -耗时 : 4
2019-03-27 18:35:12 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 18:35:12 -<==      Total: 0
2019-03-27 18:35:12 -耗时 : 3
2019-03-27 18:35:12 -返回值 : []
2019-03-27 18:36:12 -请求地址 : http://localhost:8081/index
2019-03-27 18:36:12 -HTTP METHOD : GET
2019-03-27 18:36:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-27 18:36:12 -参数 : [{}]
2019-03-27 18:36:12 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-27 18:36:12 -==> Parameters: 1(Long)
2019-03-27 18:36:12 -<==      Total: 46
2019-03-27 18:36:12 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-27 18:36:12 -==> Parameters: 138(Long)
2019-03-27 18:36:12 -<==      Total: 1
2019-03-27 18:36:12 -耗时 : 54
2019-03-27 18:36:12 -返回值 : index_v1
2019-03-27 18:36:12 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-27 18:36:12 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 54(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-27 18:36:12.158(Timestamp)
2019-03-27 18:36:12 -请求地址 : http://localhost:8081/main
2019-03-27 18:36:12 -HTTP METHOD : GET
2019-03-27 18:36:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-27 18:36:12 -参数 : []
2019-03-27 18:36:12 -耗时 : 18
2019-03-27 18:36:12 -返回值 : main
2019-03-27 18:36:12 -<==    Updates: 1
2019-03-27 18:36:12 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-27 18:36:12 -HTTP METHOD : GET
2019-03-27 18:36:12 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-27 18:36:12 -参数 : []
2019-03-27 18:36:12 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-27 18:36:12 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-27 18:36:12 -<==      Total: 0
2019-03-27 18:36:12 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-27 18:36:12 -==> Parameters: 1(Long), 0(String)
2019-03-27 18:36:12 -<==      Total: 1
2019-03-27 18:36:12 -耗时 : 8
2019-03-27 18:36:12 -返回值 : com.bootdo.common.utils.PageUtils@45bcda47
2019-03-27 18:36:12 -请求地址 : http://localhost:8081/main
2019-03-27 18:36:12 -HTTP METHOD : GET
2019-03-27 18:36:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-27 18:36:12 -参数 : []
2019-03-27 18:36:12 -耗时 : 1
2019-03-27 18:36:12 -返回值 : main
2019-03-27 18:36:17 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-27 18:36:17 -HTTP METHOD : GET
2019-03-27 18:36:17 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-27 18:36:17 -参数 : []
2019-03-27 18:36:17 -耗时 : 1
2019-03-27 18:36:17 -返回值 : /moneyLog/elecLog/elecLog
2019-03-27 18:36:18 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-27 18:36:18 -HTTP METHOD : GET
2019-03-27 18:36:18 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 18:36:18 -参数 : [userType]
2019-03-27 18:36:18 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 18:36:18 -==> Parameters: userType(String)
2019-03-27 18:36:18 -<==      Total: 2
2019-03-27 18:36:18 -耗时 : 6
2019-03-27 18:36:18 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 18:36:18 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-27 18:36:18 -HTTP METHOD : GET
2019-03-27 18:36:18 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-27 18:36:18 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-27 18:36:18 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-27 18:36:18 -==> Parameters: 0(Integer), 10(Integer)
2019-03-27 18:36:18 -<==      Total: 7
2019-03-27 18:36:18 -==>  Preparing: select count(*) from elec_log 
2019-03-27 18:36:18 -==> Parameters: 
2019-03-27 18:36:18 -<==      Total: 1
2019-03-27 18:36:18 -耗时 : 7
2019-03-27 18:36:18 -返回值 : com.bootdo.common.utils.PageUtils@3ee52108
2019-03-27 18:36:20 -请求地址 : http://localhost:8081/moneyLog/elecLog/edit/1
2019-03-27 18:36:20 -HTTP METHOD : GET
2019-03-27 18:36:20 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.edit
2019-03-27 18:36:20 -参数 : [1, {}]
2019-03-27 18:36:20 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log where id = ? 
2019-03-27 18:36:20 -==> Parameters: 1(Long)
2019-03-27 18:36:20 -<==      Total: 1
2019-03-27 18:36:20 -耗时 : 4
2019-03-27 18:36:20 -返回值 : moneyLog/elecLog/edit
2019-03-27 18:36:20 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-27 18:36:20 -HTTP METHOD : GET
2019-03-27 18:36:20 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 18:36:20 -参数 : [userType]
2019-03-27 18:36:20 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 18:36:20 -==> Parameters: userType(String)
2019-03-27 18:36:20 -请求地址 : http://localhost:8081/common/dict/list/userOrg
2019-03-27 18:36:20 -HTTP METHOD : GET
2019-03-27 18:36:20 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 18:36:20 -参数 : [userOrg]
2019-03-27 18:36:20 -<==      Total: 2
2019-03-27 18:36:20 -耗时 : 5
2019-03-27 18:36:20 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 18:36:20 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 18:36:20 -==> Parameters: userOrg(String)
2019-03-27 18:36:20 -<==      Total: 0
2019-03-27 18:36:20 -耗时 : 4
2019-03-27 18:36:20 -返回值 : []
2019-03-27 18:39:41 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-27 18:39:41 -HTTP METHOD : GET
2019-03-27 18:39:41 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-27 18:39:41 -参数 : []
2019-03-27 18:39:41 -耗时 : 1
2019-03-27 18:39:41 -返回值 : /moneyLog/heatLog/heatLog
2019-03-27 18:39:42 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-27 18:39:42 -HTTP METHOD : GET
2019-03-27 18:39:42 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 18:39:42 -参数 : [userType]
2019-03-27 18:39:42 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 18:39:42 -==> Parameters: userType(String)
2019-03-27 18:39:42 -<==      Total: 2
2019-03-27 18:39:42 -耗时 : 6
2019-03-27 18:39:42 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 18:39:42 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-27 18:39:42 -HTTP METHOD : GET
2019-03-27 18:39:42 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-27 18:39:42 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-03-27 18:39:42 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-27 18:39:42 -==> Parameters: 0(Integer), 10(Integer)
2019-03-27 18:39:42 -<==      Total: 4
2019-03-27 18:39:42 -==>  Preparing: select count(*) from heat_log 
2019-03-27 18:39:42 -==> Parameters: 
2019-03-27 18:39:42 -<==      Total: 1
2019-03-27 18:39:42 -耗时 : 177
2019-03-27 18:39:42 -返回值 : com.bootdo.common.utils.PageUtils@750b9596
2019-03-27 18:39:43 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-27 18:39:43 -HTTP METHOD : GET
2019-03-27 18:39:43 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-27 18:39:43 -参数 : []
2019-03-27 18:39:43 -耗时 : 0
2019-03-27 18:39:43 -返回值 : /moneyLog/elecLog/elecLog
2019-03-27 18:39:43 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-27 18:39:43 -HTTP METHOD : GET
2019-03-27 18:39:43 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 18:39:43 -参数 : [userType]
2019-03-27 18:39:43 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 18:39:43 -==> Parameters: userType(String)
2019-03-27 18:39:43 -<==      Total: 2
2019-03-27 18:39:43 -耗时 : 5
2019-03-27 18:39:43 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 18:39:43 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-27 18:39:43 -HTTP METHOD : GET
2019-03-27 18:39:43 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-27 18:39:43 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-27 18:39:43 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-27 18:39:43 -==> Parameters: 0(Integer), 10(Integer)
2019-03-27 18:39:43 -<==      Total: 7
2019-03-27 18:39:43 -==>  Preparing: select count(*) from elec_log 
2019-03-27 18:39:43 -==> Parameters: 
2019-03-27 18:39:43 -<==      Total: 1
2019-03-27 18:39:43 -耗时 : 7
2019-03-27 18:39:43 -返回值 : com.bootdo.common.utils.PageUtils@2531ac5e
2019-03-27 18:39:45 -请求地址 : http://localhost:8081/elec/elec
2019-03-27 18:39:45 -HTTP METHOD : GET
2019-03-27 18:39:45 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-27 18:39:45 -参数 : []
2019-03-27 18:39:45 -耗时 : 1
2019-03-27 18:39:45 -返回值 : elec/elec/elec
2019-03-27 18:39:45 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-27 18:39:45 -HTTP METHOD : GET
2019-03-27 18:39:45 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 18:39:45 -参数 : [userType]
2019-03-27 18:39:45 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 18:39:45 -==> Parameters: userType(String)
2019-03-27 18:39:45 -<==      Total: 2
2019-03-27 18:39:45 -耗时 : 4
2019-03-27 18:39:45 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 18:39:45 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-27 18:39:45 -HTTP METHOD : GET
2019-03-27 18:39:45 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-27 18:39:45 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@2c57d112]
2019-03-27 18:39:45 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-27 18:39:45 -==> Parameters: 0(Integer), 10(Integer)
2019-03-27 18:39:45 -<==      Total: 10
2019-03-27 18:39:45 -==>  Preparing: select count(*) from elec 
2019-03-27 18:39:45 -==> Parameters: 
2019-03-27 18:39:45 -<==      Total: 1
2019-03-27 18:39:45 -耗时 : 172
2019-03-27 18:39:45 -返回值 : com.bootdo.common.utils.PageUtils@59261dce
2019-03-27 18:47:53 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-27 18:47:53 -==> Parameters: 1(Long)
2019-03-27 18:47:53 -<==      Total: 90
2019-03-27 18:47:53 -请求地址 : http://localhost:8081/elec/elec/edit/1
2019-03-27 18:47:53 -HTTP METHOD : GET
2019-03-27 18:47:53 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.edit
2019-03-27 18:47:53 -参数 : [1, {}]
2019-03-27 18:47:53 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec where id = ? 
2019-03-27 18:47:53 -==> Parameters: 1(Long)
2019-03-27 18:47:53 -<==      Total: 1
2019-03-27 18:47:53 -耗时 : 8
2019-03-27 18:47:53 -返回值 : elec/elec/edit
2019-03-27 18:47:53 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-27 18:47:53 -HTTP METHOD : GET
2019-03-27 18:47:53 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 18:47:53 -参数 : [userType]
2019-03-27 18:47:53 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 18:47:53 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-03-27 18:47:53 -HTTP METHOD : GET
2019-03-27 18:47:53 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 18:47:53 -==> Parameters: userType(String)
2019-03-27 18:47:53 -参数 : [userState]
2019-03-27 18:47:53 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 18:47:53 -==> Parameters: userState(String)
2019-03-27 18:47:53 -<==      Total: 2
2019-03-27 18:47:53 -耗时 : 4
2019-03-27 18:47:53 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 18:47:53 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-03-27 18:47:53 -HTTP METHOD : GET
2019-03-27 18:47:53 -<==      Total: 2
2019-03-27 18:47:53 -耗时 : 7
2019-03-27 18:47:53 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 18:47:53 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 18:47:53 -参数 : [elecType]
2019-03-27 18:47:53 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 18:47:53 -==> Parameters: elecType(String)
2019-03-27 18:47:53 -<==      Total: 2
2019-03-27 18:47:53 -耗时 : 10
2019-03-27 18:47:53 -返回值 : [DictDO{id=139, name='民用电', value='1', type='elecType', description='电量性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='商业电', value='0', type='elecType', description='电量类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 18:57:27 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 8 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(8)-CONNECTED(8)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 93], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 15], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 843]
2019-03-27 18:58:21 -Validating all active sessions...
2019-03-27 18:58:21 -Finished session validation.  No sessions were stopped.
2019-03-27 19:27:27 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 8 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(8)-CONNECTED(8)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 93], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 15], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 1276]
2019-03-27 19:30:31 -请求地址 : http://localhost:8081/login;JSESSIONID=c161a6c1-0606-43ab-a2ea-3cb71a2aa518
2019-03-27 19:30:31 -HTTP METHOD : GET
2019-03-27 19:30:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-27 19:30:31 -参数 : [{}]
2019-03-27 19:30:31 -耗时 : 1
2019-03-27 19:30:31 -返回值 : login
2019-03-27 19:30:31 -请求地址 : http://localhost:8081/getVerify
2019-03-27 19:30:31 -HTTP METHOD : GET
2019-03-27 19:30:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-27 19:30:31 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@717a1924, org.apache.shiro.web.servlet.ShiroHttpServletResponse@5763cbd8]
2019-03-27 19:30:31 -8833
2019-03-27 19:30:31 -耗时 : 39
2019-03-27 19:30:31 -返回值 : null
2019-03-27 19:30:31 -请求地址 : http://localhost:8081/login
2019-03-27 19:30:31 -HTTP METHOD : GET
2019-03-27 19:30:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-27 19:30:31 -参数 : [{}]
2019-03-27 19:30:31 -耗时 : 1
2019-03-27 19:30:31 -返回值 : login
2019-03-27 19:33:29 -请求地址 : http://localhost:8081/login
2019-03-27 19:33:29 -HTTP METHOD : POST
2019-03-27 19:33:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-27 19:33:29 -参数 : [admin, 111111, 8833, org.apache.shiro.web.servlet.ShiroHttpServletRequest@2dd38d54]
2019-03-27 19:33:29 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-27 19:33:29 -==> Parameters: admin(String)
2019-03-27 19:33:29 -<==      Total: 1
2019-03-27 19:33:29 -耗时 : 120
2019-03-27 19:33:29 -返回值 : {msg=操作成功, code=0}
2019-03-27 19:33:29 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-27 19:33:29 -==> Parameters: 1(Long), admin(String), 登录(String), 120(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-27 19:33:29.731(Timestamp)
2019-03-27 19:33:29 -请求地址 : http://localhost:8081/index
2019-03-27 19:33:29 -HTTP METHOD : GET
2019-03-27 19:33:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-27 19:33:29 -参数 : [{}]
2019-03-27 19:33:29 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-27 19:33:29 -==> Parameters: 1(Long)
2019-03-27 19:33:29 -<==      Total: 46
2019-03-27 19:33:29 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-27 19:33:29 -==> Parameters: 138(Long)
2019-03-27 19:33:29 -<==      Total: 1
2019-03-27 19:33:29 -耗时 : 54
2019-03-27 19:33:29 -返回值 : index_v1
2019-03-27 19:33:29 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-27 19:33:29 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 54(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-27 19:33:29.819(Timestamp)
2019-03-27 19:33:29 -<==    Updates: 1
2019-03-27 19:33:29 -请求地址 : http://localhost:8081/main
2019-03-27 19:33:29 -HTTP METHOD : GET
2019-03-27 19:33:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-27 19:33:29 -参数 : []
2019-03-27 19:33:29 -耗时 : 5
2019-03-27 19:33:29 -返回值 : main
2019-03-27 19:33:29 -<==    Updates: 1
2019-03-27 19:33:30 -请求地址 : http://localhost:8081/main
2019-03-27 19:33:30 -HTTP METHOD : GET
2019-03-27 19:33:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-27 19:33:30 -参数 : []
2019-03-27 19:33:30 -耗时 : 0
2019-03-27 19:33:30 -返回值 : main
2019-03-27 19:33:30 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-27 19:33:30 -HTTP METHOD : GET
2019-03-27 19:33:30 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-27 19:33:30 -参数 : []
2019-03-27 19:33:30 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-27 19:33:30 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-27 19:33:30 -<==      Total: 0
2019-03-27 19:33:30 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-27 19:33:30 -==> Parameters: 1(Long), 0(String)
2019-03-27 19:33:30 -<==      Total: 1
2019-03-27 19:33:30 -耗时 : 10
2019-03-27 19:33:30 -返回值 : com.bootdo.common.utils.PageUtils@75d585a9
2019-03-27 19:33:50 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-27 19:33:50 -==> Parameters: 1(Long)
2019-03-27 19:33:50 -<==      Total: 90
2019-03-27 19:33:50 -请求地址 : http://localhost:8081/charts/countDD
2019-03-27 19:33:50 -HTTP METHOD : GET
2019-03-27 19:33:50 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-03-27 19:33:50 -参数 : []
2019-03-27 19:33:50 -耗时 : 0
2019-03-27 19:33:50 -返回值 : charts/countDD
2019-03-27 19:33:51 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-27 19:33:51 -HTTP METHOD : GET
2019-03-27 19:33:51 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 19:33:51 -参数 : [userType]
2019-03-27 19:33:51 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 19:33:51 -==> Parameters: userType(String)
2019-03-27 19:33:51 -<==      Total: 2
2019-03-27 19:33:51 -耗时 : 6
2019-03-27 19:33:51 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 19:33:57 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-27 19:33:57 -HTTP METHOD : GET
2019-03-27 19:33:57 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-27 19:33:57 -参数 : []
2019-03-27 19:33:57 -耗时 : 1
2019-03-27 19:33:57 -返回值 : system/dept/deptTree
2019-03-27 19:33:57 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-27 19:33:57 -HTTP METHOD : GET
2019-03-27 19:33:57 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-27 19:33:57 -参数 : []
2019-03-27 19:33:57 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-27 19:33:57 -==> Parameters: 
2019-03-27 19:33:57 -<==      Total: 3
2019-03-27 19:33:57 -耗时 : 6
2019-03-27 19:33:57 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-27 19:33:59 -请求地址 : http://localhost:8081/charts/countDD/getCountDD
2019-03-27 19:33:59 -HTTP METHOD : POST
2019-03-27 19:33:59 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.getCountD
2019-03-27 19:33:59 -参数 : [{elecLogVo=com.bootdo.moneyLog.vo.ElecLogVo@53485c82, org.springframework.validation.BindingResult.elecLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@150d3f1c, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, heatLogVo=com.bootdo.moneyLog.vo.HeatLogVo@54eae469, org.springframework.validation.BindingResult.heatLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.ElecLogVo@53485c82, com.bootdo.moneyLog.vo.WaterLogVo@150d3f1c, com.bootdo.moneyLog.vo.HeatLogVo@54eae469]
2019-03-27 19:33:59 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG 
2019-03-27 19:33:59 -==> Parameters: 
2019-03-27 19:33:59 -<==      Total: 1
2019-03-27 19:33:59 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG 
2019-03-27 19:33:59 -==> Parameters: 
2019-03-27 19:33:59 -<==      Total: 1
2019-03-27 19:33:59 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG 
2019-03-27 19:33:59 -==> Parameters: 
2019-03-27 19:33:59 -<==      Total: 1
2019-03-27 19:33:59 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG 
2019-03-27 19:33:59 -==> Parameters: 
2019-03-27 19:33:59 -<==      Total: 1
2019-03-27 19:33:59 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG 
2019-03-27 19:33:59 -==> Parameters: 
2019-03-27 19:33:59 -<==      Total: 1
2019-03-27 19:33:59 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG 
2019-03-27 19:33:59 -==> Parameters: 
2019-03-27 19:33:59 -<==      Total: 1
2019-03-27 19:33:59 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-27 19:33:59 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/countDD/getCountDD(String), org.springframework.web.util.NestedServletException: Handler dispatch failed; nested exception is java.lang.NoSuchMethodError: com.bootdo.charts.vo.CountDayVo.getUnitCountVoList()Ljava/util/List;(String), null, 2019-03-27 19:33:59.578(Timestamp)
2019-03-27 19:33:59 -Handler dispatch failed; nested exception is java.lang.NoSuchMethodError: com.bootdo.charts.vo.CountDayVo.getUnitCountVoList()Ljava/util/List;
org.springframework.web.util.NestedServletException: Handler dispatch failed; nested exception is java.lang.NoSuchMethodError: com.bootdo.charts.vo.CountDayVo.getUnitCountVoList()Ljava/util/List;
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1006)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.NoSuchMethodError: com.bootdo.charts.vo.CountDayVo.getUnitCountVoList()Ljava/util/List;
	at com.bootdo.charts.controller.countDDController.getCountD(countDDController.java:64)
	at com.bootdo.charts.controller.countDDController$$FastClassBySpringCGLIB$$b1700e.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor125.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.countDDController$$EnhancerBySpringCGLIB$$5bff5d22.getCountD(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	... 60 common frames omitted
2019-03-27 19:33:59 -<==    Updates: 1
2019-03-27 19:37:41 -Starting BootdoApplication on ZJZL-20180906VX with PID 6536 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-27 19:37:41 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-27 19:37:41 -The following profiles are active: dev
2019-03-27 19:37:41 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7a7471ce: startup date [Wed Mar 27 19:37:41 CST 2019]; root of context hierarchy
2019-03-27 19:37:46 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-27 19:37:50 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$753b479c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-27 19:37:50 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$67947643] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-27 19:37:54 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-27 19:37:55 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-27 19:37:56 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-27 19:37:56 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-27 19:37:56 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-27 19:37:56 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-27 19:37:56 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-27 19:37:56 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-27 19:37:56 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-27 19:37:57 -Tomcat initialized with port(s): 8081 (http)
2019-03-27 19:37:58 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-27 19:37:58 -Starting service [Tomcat]
2019-03-27 19:37:58 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-27 19:37:58 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-27 19:37:58 -Initializing Spring embedded WebApplicationContext
2019-03-27 19:37:58 -Root WebApplicationContext: initialization completed in 16912 ms
2019-03-27 19:37:59 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-27 19:37:59 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-27 19:37:59 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-27 19:37:59 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-27 19:37:59 -Filter xssFilter was not registered (disabled)
2019-03-27 19:37:59 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-27 19:37:59 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-27 19:37:59 -Servlet statViewServlet mapped to [/druid/*]
2019-03-27 19:37:59 -Servlet dispatcherServlet mapped to [/]
2019-03-27 19:38:08 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7a7471ce: startup date [Wed Mar 27 19:37:41 CST 2019]; root of context hierarchy
2019-03-27 19:38:09 -Using default implementation for ThreadExecutor
2019-03-27 19:38:09 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-27 19:38:09 -Quartz Scheduler v.2.2.1 created.
2019-03-27 19:38:09 -RAMJobStore initialized.
2019-03-27 19:38:09 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-27 19:38:09 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-27 19:38:09 -Quartz scheduler version: 2.2.1
2019-03-27 19:38:09 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@7b8d6c66
2019-03-27 19:38:10 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-27 19:38:10 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-27 19:38:14 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-27 19:38:14 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-03-27 19:38:14 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-27 19:38:14 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-27 19:38:14 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-27 19:38:14 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-27 19:38:14 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-27 19:38:14 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-27 19:38:14 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-27 19:38:14 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-27 19:38:14 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-27 19:38:14 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 19:38:14 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-27 19:38:14 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 19:38:14 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-27 19:38:14 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-27 19:38:14 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-27 19:38:14 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-27 19:38:14 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-27 19:38:14 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-27 19:38:14 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-27 19:38:14 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-27 19:38:14 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 19:38:14 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-27 19:38:14 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-27 19:38:14 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 19:38:14 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-27 19:38:14 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-27 19:38:14 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 19:38:14 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-27 19:38:14 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-27 19:38:14 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-27 19:38:14 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-27 19:38:14 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-27 19:38:14 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-27 19:38:14 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-27 19:38:14 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-27 19:38:14 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-27 19:38:14 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 19:38:14 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-27 19:38:14 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-27 19:38:14 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 19:38:14 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-27 19:38:14 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-27 19:38:14 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-27 19:38:14 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-27 19:38:14 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 19:38:14 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-27 19:38:14 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-03-27 19:38:14 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-27 19:38:14 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-27 19:38:14 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-27 19:38:14 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-27 19:38:14 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-27 19:38:14 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-27 19:38:14 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-27 19:38:14 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-27 19:38:14 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-27 19:38:14 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-27 19:38:14 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 19:38:14 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-27 19:38:14 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-03-27 19:38:14 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-27 19:38:14 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-27 19:38:14 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-27 19:38:14 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-27 19:38:14 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-27 19:38:14 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-27 19:38:14 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 19:38:14 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-03-27 19:38:14 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 19:38:14 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-27 19:38:14 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-27 19:38:14 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-27 19:38:14 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-27 19:38:14 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-27 19:38:14 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-27 19:38:14 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-27 19:38:14 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 19:38:14 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-27 19:38:14 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-27 19:38:14 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-27 19:38:14 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-27 19:38:14 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-27 19:38:14 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-27 19:38:14 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-27 19:38:14 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-27 19:38:14 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-27 19:38:14 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-27 19:38:14 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 19:38:14 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-27 19:38:14 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-27 19:38:14 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 19:38:14 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-03-27 19:38:14 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-27 19:38:14 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-03-27 19:38:14 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-27 19:38:14 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-27 19:38:14 -Mapped "{[/moneyList/moneyList/UserList],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-27 19:38:14 -Mapped "{[/moneyList/moneyList/LikeName],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.LikeName(org.springframework.ui.Model)
2019-03-27 19:38:14 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-27 19:38:14 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-27 19:38:14 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-27 19:38:14 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-27 19:38:14 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 19:38:14 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-27 19:38:14 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-27 19:38:14 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-27 19:38:14 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 19:38:14 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-27 19:38:14 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-27 19:38:14 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-27 19:38:14 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-27 19:38:14 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 19:38:14 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-27 19:38:14 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-27 19:38:14 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-27 19:38:14 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 19:38:14 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-27 19:38:14 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-27 19:38:14 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-27 19:38:14 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-27 19:38:14 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 19:38:14 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-27 19:38:14 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-27 19:38:14 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-27 19:38:14 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 19:38:14 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-27 19:38:14 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-27 19:38:14 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-27 19:38:14 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-27 19:38:14 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-27 19:38:14 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 19:38:14 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-27 19:38:14 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-27 19:38:14 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 19:38:14 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-27 19:38:14 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-27 19:38:14 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 19:38:14 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-27 19:38:14 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-27 19:38:14 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-27 19:38:14 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-27 19:38:14 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 19:38:14 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-27 19:38:14 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 19:38:14 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-27 19:38:14 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-27 19:38:14 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 19:38:14 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-27 19:38:14 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-27 19:38:14 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-27 19:38:14 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-27 19:38:14 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-27 19:38:14 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-27 19:38:14 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-27 19:38:14 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-27 19:38:14 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-27 19:38:14 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 19:38:14 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-27 19:38:14 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-27 19:38:14 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-27 19:38:14 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-27 19:38:14 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-27 19:38:14 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-27 19:38:14 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-27 19:38:14 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-27 19:38:14 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-27 19:38:14 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-27 19:38:14 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 19:38:14 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-27 19:38:14 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-27 19:38:14 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-27 19:38:14 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-27 19:38:14 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-27 19:38:14 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-27 19:38:14 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-27 19:38:14 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-27 19:38:14 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-27 19:38:14 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-27 19:38:14 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-27 19:38:14 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 19:38:14 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-27 19:38:14 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-27 19:38:14 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-27 19:38:14 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-27 19:38:14 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-27 19:38:14 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 19:38:14 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-27 19:38:14 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-27 19:38:14 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-27 19:38:14 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 19:38:14 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-27 19:38:14 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-27 19:38:14 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-27 19:38:14 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-27 19:38:14 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-27 19:38:14 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-27 19:38:14 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-27 19:38:14 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-27 19:38:14 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-27 19:38:14 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-27 19:38:14 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-27 19:38:14 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-27 19:38:14 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-27 19:38:14 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-27 19:38:14 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-27 19:38:14 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-27 19:38:14 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-27 19:38:14 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 19:38:14 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-27 19:38:14 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-27 19:38:14 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 19:38:14 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-27 19:38:14 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 19:38:14 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-27 19:38:14 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-27 19:38:14 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-27 19:38:14 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-27 19:38:14 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-27 19:38:14 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-27 19:38:14 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 19:38:14 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-27 19:38:14 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-27 19:38:14 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 19:38:14 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-27 19:38:14 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-27 19:38:14 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-03-27 19:38:14 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-03-27 19:38:14 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-27 19:38:14 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-27 19:38:14 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-27 19:38:14 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-27 19:38:15 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-27 19:38:15 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-27 19:38:15 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-27 19:38:16 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-27 19:38:16 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7a7471ce: startup date [Wed Mar 27 19:37:41 CST 2019]; root of context hierarchy
2019-03-27 19:38:17 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-27 19:38:17 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-27 19:38:17 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-27 19:38:17 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-27 19:38:17 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-27 19:38:21 -Registering beans for JMX exposure on startup
2019-03-27 19:38:21 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-27 19:38:21 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-27 19:38:21 -Starting beans in phase 2147483647
2019-03-27 19:38:21 -Context refreshed
2019-03-27 19:38:21 -Found 1 custom documentation plugin(s)
2019-03-27 19:38:21 -Scanning for api listing references
2019-03-27 19:38:22 -Generating unique operation named: removeUsingPOST_1
2019-03-27 19:38:23 -Generating unique operation named: addUsingGET_1
2019-03-27 19:38:23 -Generating unique operation named: editUsingGET_1
2019-03-27 19:38:23 -Generating unique operation named: listUsingGET_1
2019-03-27 19:38:23 -Generating unique operation named: removeUsingPOST_2
2019-03-27 19:38:23 -Generating unique operation named: removeUsingPOST_3
2019-03-27 19:38:23 -Generating unique operation named: saveUsingPOST_1
2019-03-27 19:38:23 -Generating unique operation named: updateUsingGET_1
2019-03-27 19:38:23 -Generating unique operation named: updateUsingHEAD_1
2019-03-27 19:38:23 -Generating unique operation named: updateUsingPOST_1
2019-03-27 19:38:23 -Generating unique operation named: updateUsingPUT_1
2019-03-27 19:38:23 -Generating unique operation named: updateUsingPATCH_1
2019-03-27 19:38:23 -Generating unique operation named: updateUsingDELETE_1
2019-03-27 19:38:23 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-27 19:38:23 -Generating unique operation named: updateUsingTRACE_1
2019-03-27 19:38:23 -Generating unique operation named: addUsingGET_2
2019-03-27 19:38:23 -Generating unique operation named: editUsingGET_2
2019-03-27 19:38:23 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-27 19:38:23 -Generating unique operation named: listUsingGET_2
2019-03-27 19:38:23 -Generating unique operation named: removeUsingPOST_4
2019-03-27 19:38:23 -Generating unique operation named: removeUsingPOST_5
2019-03-27 19:38:23 -Generating unique operation named: saveUsingPOST_2
2019-03-27 19:38:23 -Generating unique operation named: updateUsingPOST_2
2019-03-27 19:38:23 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-27 19:38:23 -Generating unique operation named: addUsingGET_3
2019-03-27 19:38:23 -Generating unique operation named: editUsingGET_3
2019-03-27 19:38:23 -Generating unique operation named: listUsingGET_3
2019-03-27 19:38:23 -Generating unique operation named: removeUsingPOST_6
2019-03-27 19:38:23 -Generating unique operation named: removeUsingPOST_7
2019-03-27 19:38:23 -Generating unique operation named: saveUsingPOST_3
2019-03-27 19:38:23 -Generating unique operation named: updateUsingGET_2
2019-03-27 19:38:23 -Generating unique operation named: updateUsingHEAD_2
2019-03-27 19:38:23 -Generating unique operation named: updateUsingPOST_3
2019-03-27 19:38:23 -Generating unique operation named: updateUsingPUT_2
2019-03-27 19:38:23 -Generating unique operation named: updateUsingPATCH_2
2019-03-27 19:38:23 -Generating unique operation named: updateUsingDELETE_2
2019-03-27 19:38:23 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-27 19:38:23 -Generating unique operation named: updateUsingTRACE_2
2019-03-27 19:38:23 -Generating unique operation named: addUsingGET_4
2019-03-27 19:38:23 -Generating unique operation named: editUsingGET_4
2019-03-27 19:38:23 -Generating unique operation named: listUsingGET_4
2019-03-27 19:38:23 -Generating unique operation named: removeUsingPOST_8
2019-03-27 19:38:23 -Generating unique operation named: removeUsingPOST_9
2019-03-27 19:38:23 -Generating unique operation named: saveUsingPOST_4
2019-03-27 19:38:23 -Generating unique operation named: updateUsingGET_3
2019-03-27 19:38:23 -Generating unique operation named: updateUsingHEAD_3
2019-03-27 19:38:23 -Generating unique operation named: updateUsingPOST_4
2019-03-27 19:38:23 -Generating unique operation named: updateUsingPUT_3
2019-03-27 19:38:23 -Generating unique operation named: updateUsingPATCH_3
2019-03-27 19:38:23 -Generating unique operation named: updateUsingDELETE_3
2019-03-27 19:38:23 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-27 19:38:23 -Generating unique operation named: updateUsingTRACE_3
2019-03-27 19:38:23 -Generating unique operation named: ElecUsingGET_1
2019-03-27 19:38:24 -Generating unique operation named: addUsingGET_5
2019-03-27 19:38:24 -Generating unique operation named: editUsingGET_5
2019-03-27 19:38:24 -Generating unique operation named: listUsingGET_5
2019-03-27 19:38:24 -Generating unique operation named: removeUsingPOST_10
2019-03-27 19:38:24 -Generating unique operation named: removeUsingPOST_11
2019-03-27 19:38:24 -Generating unique operation named: saveUsingPOST_5
2019-03-27 19:38:24 -Generating unique operation named: updateUsingGET_4
2019-03-27 19:38:24 -Generating unique operation named: updateUsingHEAD_4
2019-03-27 19:38:24 -Generating unique operation named: updateUsingPOST_5
2019-03-27 19:38:24 -Generating unique operation named: updateUsingPUT_4
2019-03-27 19:38:24 -Generating unique operation named: updateUsingPATCH_4
2019-03-27 19:38:24 -Generating unique operation named: updateUsingDELETE_4
2019-03-27 19:38:24 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-27 19:38:24 -Generating unique operation named: updateUsingTRACE_4
2019-03-27 19:38:24 -Generating unique operation named: editUsingGET_6
2019-03-27 19:38:24 -Generating unique operation named: listUsingGET_6
2019-03-27 19:38:24 -Generating unique operation named: updateUsingPOST_6
2019-03-27 19:38:24 -Generating unique operation named: addUsingGET_6
2019-03-27 19:38:24 -Generating unique operation named: editUsingGET_7
2019-03-27 19:38:24 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-27 19:38:24 -Generating unique operation named: listUsingGET_7
2019-03-27 19:38:24 -Generating unique operation named: removeUsingPOST_12
2019-03-27 19:38:24 -Generating unique operation named: removeUsingPOST_13
2019-03-27 19:38:24 -Generating unique operation named: saveUsingPOST_6
2019-03-27 19:38:24 -Generating unique operation named: updateUsingGET_5
2019-03-27 19:38:24 -Generating unique operation named: updateUsingHEAD_5
2019-03-27 19:38:24 -Generating unique operation named: updateUsingPOST_7
2019-03-27 19:38:24 -Generating unique operation named: updateUsingPUT_5
2019-03-27 19:38:24 -Generating unique operation named: updateUsingPATCH_5
2019-03-27 19:38:24 -Generating unique operation named: updateUsingDELETE_5
2019-03-27 19:38:24 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-27 19:38:24 -Generating unique operation named: updateUsingTRACE_5
2019-03-27 19:38:24 -Generating unique operation named: exprotExcelUsingGET_4
2019-03-27 19:38:24 -Generating unique operation named: addUsingGET_7
2019-03-27 19:38:24 -Generating unique operation named: editUsingGET_8
2019-03-27 19:38:24 -Generating unique operation named: listUsingGET_8
2019-03-27 19:38:24 -Generating unique operation named: removeUsingPOST_14
2019-03-27 19:38:24 -Generating unique operation named: removeUsingPOST_15
2019-03-27 19:38:24 -Generating unique operation named: saveUsingPOST_7
2019-03-27 19:38:24 -Generating unique operation named: updateUsingGET_6
2019-03-27 19:38:24 -Generating unique operation named: updateUsingHEAD_6
2019-03-27 19:38:24 -Generating unique operation named: updateUsingPOST_8
2019-03-27 19:38:24 -Generating unique operation named: updateUsingPUT_6
2019-03-27 19:38:24 -Generating unique operation named: updateUsingPATCH_6
2019-03-27 19:38:24 -Generating unique operation named: updateUsingDELETE_6
2019-03-27 19:38:24 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-27 19:38:24 -Generating unique operation named: updateUsingTRACE_6
2019-03-27 19:38:24 -Generating unique operation named: addUsingGET_8
2019-03-27 19:38:24 -Generating unique operation named: editUsingGET_9
2019-03-27 19:38:24 -Generating unique operation named: listUsingGET_9
2019-03-27 19:38:24 -Generating unique operation named: removeUsingPOST_16
2019-03-27 19:38:24 -Generating unique operation named: removeUsingPOST_17
2019-03-27 19:38:24 -Generating unique operation named: saveUsingPOST_8
2019-03-27 19:38:24 -Generating unique operation named: updateUsingGET_7
2019-03-27 19:38:24 -Generating unique operation named: updateUsingHEAD_7
2019-03-27 19:38:24 -Generating unique operation named: updateUsingPOST_9
2019-03-27 19:38:24 -Generating unique operation named: updateUsingPUT_7
2019-03-27 19:38:24 -Generating unique operation named: updateUsingPATCH_7
2019-03-27 19:38:24 -Generating unique operation named: updateUsingDELETE_7
2019-03-27 19:38:24 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-27 19:38:24 -Generating unique operation named: updateUsingTRACE_7
2019-03-27 19:38:24 -Generating unique operation named: addUsingGET_9
2019-03-27 19:38:25 -Generating unique operation named: editUsingGET_10
2019-03-27 19:38:25 -Generating unique operation named: infoUsingGET_1
2019-03-27 19:38:25 -Generating unique operation named: infoUsingHEAD_1
2019-03-27 19:38:25 -Generating unique operation named: infoUsingPOST_1
2019-03-27 19:38:25 -Generating unique operation named: infoUsingPUT_1
2019-03-27 19:38:25 -Generating unique operation named: infoUsingPATCH_1
2019-03-27 19:38:25 -Generating unique operation named: infoUsingDELETE_1
2019-03-27 19:38:25 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-27 19:38:25 -Generating unique operation named: infoUsingTRACE_1
2019-03-27 19:38:25 -Generating unique operation named: listUsingGET_10
2019-03-27 19:38:25 -Generating unique operation named: removeUsingPOST_18
2019-03-27 19:38:25 -Generating unique operation named: removeUsingPOST_19
2019-03-27 19:38:25 -Generating unique operation named: saveUsingPOST_9
2019-03-27 19:38:25 -Generating unique operation named: updateUsingPOST_10
2019-03-27 19:38:25 -Generating unique operation named: listUsingGET_11
2019-03-27 19:38:25 -Generating unique operation named: removeUsingPOST_20
2019-03-27 19:38:25 -Generating unique operation named: welcomeUsingGET_1
2019-03-27 19:38:25 -Generating unique operation named: addUsingGET_10
2019-03-27 19:38:25 -Generating unique operation named: editUsingGET_11
2019-03-27 19:38:25 -Generating unique operation named: listUsingGET_12
2019-03-27 19:38:25 -Generating unique operation named: removeUsingPOST_21
2019-03-27 19:38:25 -Generating unique operation named: saveUsingPOST_10
2019-03-27 19:38:25 -Generating unique operation named: treeUsingGET_1
2019-03-27 19:38:25 -Generating unique operation named: treeUsingGET_2
2019-03-27 19:38:25 -Generating unique operation named: updateUsingPOST_11
2019-03-27 19:38:25 -Generating unique operation named: addUsingGET_11
2019-03-27 19:38:25 -Generating unique operation named: editUsingGET_12
2019-03-27 19:38:25 -Generating unique operation named: listUsingGET_13
2019-03-27 19:38:25 -Generating unique operation named: removeUsingPOST_22
2019-03-27 19:38:25 -Generating unique operation named: removeUsingPOST_23
2019-03-27 19:38:25 -Generating unique operation named: saveUsingPOST_11
2019-03-27 19:38:25 -Generating unique operation named: updateUsingGET_8
2019-03-27 19:38:25 -Generating unique operation named: updateUsingHEAD_8
2019-03-27 19:38:25 -Generating unique operation named: updateUsingPOST_12
2019-03-27 19:38:25 -Generating unique operation named: updateUsingPUT_8
2019-03-27 19:38:25 -Generating unique operation named: updateUsingPATCH_8
2019-03-27 19:38:25 -Generating unique operation named: updateUsingDELETE_8
2019-03-27 19:38:25 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-27 19:38:25 -Generating unique operation named: updateUsingTRACE_8
2019-03-27 19:38:25 -Generating unique operation named: addUsingGET_12
2019-03-27 19:38:25 -Generating unique operation named: editUsingGET_13
2019-03-27 19:38:25 -Generating unique operation named: listUsingGET_14
2019-03-27 19:38:25 -Generating unique operation named: removeUsingPOST_24
2019-03-27 19:38:25 -Generating unique operation named: removeUsingPOST_25
2019-03-27 19:38:25 -Generating unique operation named: saveUsingPOST_12
2019-03-27 19:38:25 -Generating unique operation named: updateUsingGET_9
2019-03-27 19:38:25 -Generating unique operation named: updateUsingHEAD_9
2019-03-27 19:38:25 -Generating unique operation named: updateUsingPOST_13
2019-03-27 19:38:25 -Generating unique operation named: updateUsingPUT_9
2019-03-27 19:38:25 -Generating unique operation named: updateUsingPATCH_9
2019-03-27 19:38:25 -Generating unique operation named: updateUsingDELETE_9
2019-03-27 19:38:25 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-27 19:38:25 -Generating unique operation named: updateUsingTRACE_9
2019-03-27 19:38:25 -Generating unique operation named: addUsingGET_13
2019-03-27 19:38:25 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-27 19:38:25 -Generating unique operation named: editUsingGET_14
2019-03-27 19:38:25 -Generating unique operation named: listUsingGET_15
2019-03-27 19:38:25 -Generating unique operation named: saveUsingPOST_13
2019-03-27 19:38:25 -Generating unique operation named: saveUsingPOST_14
2019-03-27 19:38:26 -Generating unique operation named: updateUsingPOST_14
2019-03-27 19:38:26 -Generating unique operation named: listUsingGET_16
2019-03-27 19:38:26 -Generating unique operation named: listUsingHEAD_1
2019-03-27 19:38:26 -Generating unique operation named: listUsingPOST_1
2019-03-27 19:38:26 -Generating unique operation named: listUsingPUT_1
2019-03-27 19:38:26 -Generating unique operation named: listUsingPATCH_1
2019-03-27 19:38:26 -Generating unique operation named: listUsingDELETE_1
2019-03-27 19:38:26 -Generating unique operation named: listUsingOPTIONS_1
2019-03-27 19:38:26 -Generating unique operation named: listUsingTRACE_1
2019-03-27 19:38:26 -Generating unique operation named: addUsingGET_14
2019-03-27 19:38:26 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-27 19:38:26 -Generating unique operation named: editUsingGET_15
2019-03-27 19:38:26 -Generating unique operation named: listUsingGET_17
2019-03-27 19:38:26 -Generating unique operation named: removeUsingPOST_26
2019-03-27 19:38:26 -Generating unique operation named: saveUsingPOST_15
2019-03-27 19:38:26 -Generating unique operation named: treeUsingGET_3
2019-03-27 19:38:26 -Generating unique operation named: treeViewUsingGET_1
2019-03-27 19:38:26 -Generating unique operation named: updateUsingPOST_15
2019-03-27 19:38:26 -Generating unique operation named: addUsingGET_15
2019-03-27 19:38:26 -Generating unique operation named: editUsingGET_16
2019-03-27 19:38:26 -Generating unique operation named: exprotExcelUsingGET_5
2019-03-27 19:38:26 -Generating unique operation named: listUsingGET_18
2019-03-27 19:38:26 -Generating unique operation named: removeUsingPOST_27
2019-03-27 19:38:26 -Generating unique operation named: removeUsingPOST_28
2019-03-27 19:38:26 -Generating unique operation named: saveUsingPOST_16
2019-03-27 19:38:26 -Generating unique operation named: updateUsingGET_10
2019-03-27 19:38:26 -Generating unique operation named: updateUsingHEAD_10
2019-03-27 19:38:26 -Generating unique operation named: updateUsingPOST_16
2019-03-27 19:38:26 -Generating unique operation named: updateUsingPUT_10
2019-03-27 19:38:26 -Generating unique operation named: updateUsingPATCH_10
2019-03-27 19:38:26 -Generating unique operation named: updateUsingDELETE_10
2019-03-27 19:38:26 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-27 19:38:26 -Generating unique operation named: updateUsingTRACE_10
2019-03-27 19:38:26 -Generating unique operation named: exprotExcelUsingGET_6
2019-03-27 19:38:26 -Generating unique operation named: addUsingGET_16
2019-03-27 19:38:26 -Generating unique operation named: editUsingGET_17
2019-03-27 19:38:26 -Generating unique operation named: listUsingGET_19
2019-03-27 19:38:26 -Generating unique operation named: removeUsingPOST_29
2019-03-27 19:38:26 -Generating unique operation named: removeUsingPOST_30
2019-03-27 19:38:26 -Generating unique operation named: saveUsingPOST_17
2019-03-27 19:38:26 -Generating unique operation named: updateUsingGET_11
2019-03-27 19:38:26 -Generating unique operation named: updateUsingHEAD_11
2019-03-27 19:38:26 -Generating unique operation named: updateUsingPOST_17
2019-03-27 19:38:26 -Generating unique operation named: updateUsingPUT_11
2019-03-27 19:38:26 -Generating unique operation named: updateUsingPATCH_11
2019-03-27 19:38:26 -Generating unique operation named: updateUsingDELETE_11
2019-03-27 19:38:26 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-27 19:38:26 -Generating unique operation named: updateUsingTRACE_11
2019-03-27 19:38:26 -Generating unique operation named: addUsingGET_17
2019-03-27 19:38:26 -Generating unique operation named: editUsingGET_18
2019-03-27 19:38:26 -Generating unique operation named: listUsingGET_20
2019-03-27 19:38:26 -Generating unique operation named: removeUsingPOST_31
2019-03-27 19:38:26 -Generating unique operation named: removeUsingPOST_32
2019-03-27 19:38:26 -Generating unique operation named: saveUsingPOST_18
2019-03-27 19:38:26 -Generating unique operation named: updateUsingGET_12
2019-03-27 19:38:26 -Generating unique operation named: updateUsingHEAD_12
2019-03-27 19:38:26 -Generating unique operation named: updateUsingPOST_18
2019-03-27 19:38:26 -Generating unique operation named: updateUsingPUT_12
2019-03-27 19:38:26 -Generating unique operation named: updateUsingPATCH_12
2019-03-27 19:38:26 -Generating unique operation named: updateUsingDELETE_12
2019-03-27 19:38:26 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-27 19:38:26 -Generating unique operation named: updateUsingTRACE_12
2019-03-27 19:38:26 -Starting Quartz Scheduler now
2019-03-27 19:38:26 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-27 19:38:26 -Starting...
2019-03-27 19:38:26 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-27 19:38:26 -Started.
2019-03-27 19:38:26 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-27 19:38:26 -Using a shared selector for servlet write/read
2019-03-27 19:38:27 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-27 19:38:27 -Started BootdoApplication in 47.973 seconds (JVM running for 49.623)
2019-03-27 19:38:27 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-27 19:38:27 -==> Parameters: 
2019-03-27 19:38:27 -<==      Total: 1
2019-03-27 19:38:42 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-27 19:38:42 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-27 19:38:42 -FrameworkServlet 'dispatcherServlet': initialization completed in 156 ms
2019-03-27 19:38:42 -Enabling session validation scheduler...
2019-03-27 19:38:42 -请求地址 : http://localhost:8081/login;JSESSIONID=4323b1c8-8b4e-45da-b14d-7e5e5d1c9447
2019-03-27 19:38:42 -HTTP METHOD : GET
2019-03-27 19:38:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-27 19:38:42 -参数 : [{}]
2019-03-27 19:38:42 -耗时 : 6
2019-03-27 19:38:42 -返回值 : login
2019-03-27 19:38:46 -请求地址 : http://localhost:8081/getVerify
2019-03-27 19:38:46 -HTTP METHOD : GET
2019-03-27 19:38:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-27 19:38:46 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@13b3b43d, org.apache.shiro.web.servlet.ShiroHttpServletResponse@7ce44cd1]
2019-03-27 19:38:50 -8134
2019-03-27 19:38:50 -耗时 : 4015
2019-03-27 19:38:50 -返回值 : null
2019-03-27 19:38:50 -请求地址 : http://localhost:8081/login
2019-03-27 19:38:50 -HTTP METHOD : GET
2019-03-27 19:38:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-27 19:38:50 -参数 : [{}]
2019-03-27 19:38:50 -耗时 : 1
2019-03-27 19:38:50 -返回值 : login
2019-03-27 19:39:14 -请求地址 : http://localhost:8081/login
2019-03-27 19:39:14 -HTTP METHOD : POST
2019-03-27 19:39:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-27 19:39:14 -参数 : [admin, 111111, 8134, org.apache.shiro.web.servlet.ShiroHttpServletRequest@5236d533]
2019-03-27 19:39:14 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-27 19:39:14 -==> Parameters: admin(String)
2019-03-27 19:39:14 -<==      Total: 1
2019-03-27 19:39:14 -耗时 : 164
2019-03-27 19:39:14 -返回值 : {msg=操作成功, code=0}
2019-03-27 19:39:14 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-03-27 19:39:14 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-27 19:39:14 -==> Parameters: 1(Long), admin(String), 登录(String), 164(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-27 19:39:14.578(Timestamp)
2019-03-27 19:39:14 -请求地址 : http://localhost:8081/index
2019-03-27 19:39:14 -HTTP METHOD : GET
2019-03-27 19:39:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-27 19:39:14 -参数 : [{}]
2019-03-27 19:39:14 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-27 19:39:14 -<==    Updates: 1
2019-03-27 19:39:15 -==> Parameters: 1(Long)
2019-03-27 19:39:15 -<==      Total: 46
2019-03-27 19:39:15 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-27 19:39:15 -==> Parameters: 138(Long)
2019-03-27 19:39:15 -<==      Total: 1
2019-03-27 19:39:15 -耗时 : 537
2019-03-27 19:39:15 -返回值 : index_v1
2019-03-27 19:39:15 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-27 19:39:15 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 537(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-27 19:39:15.333(Timestamp)
2019-03-27 19:39:15 -<==    Updates: 1
2019-03-27 19:39:15 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-03-27 19:39:15 -请求地址 : http://localhost:8081/main
2019-03-27 19:39:15 -HTTP METHOD : GET
2019-03-27 19:39:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-27 19:39:15 -参数 : []
2019-03-27 19:39:15 -耗时 : 1
2019-03-27 19:39:15 -返回值 : main
2019-03-27 19:39:16 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-27 19:39:16 -HTTP METHOD : GET
2019-03-27 19:39:16 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-27 19:39:16 -参数 : []
2019-03-27 19:39:16 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-27 19:39:16 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-27 19:39:16 -<==      Total: 0
2019-03-27 19:39:16 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-27 19:39:16 -==> Parameters: 1(Long), 0(String)
2019-03-27 19:39:16 -<==      Total: 1
2019-03-27 19:39:16 -耗时 : 41
2019-03-27 19:39:16 -返回值 : com.bootdo.common.utils.PageUtils@924df51
2019-03-27 19:39:16 -请求地址 : http://localhost:8081/main
2019-03-27 19:39:16 -HTTP METHOD : GET
2019-03-27 19:39:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-27 19:39:16 -参数 : []
2019-03-27 19:39:16 -耗时 : 0
2019-03-27 19:39:16 -返回值 : main
2019-03-27 19:39:32 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-27 19:39:32 -==> Parameters: 1(Long)
2019-03-27 19:39:32 -<==      Total: 90
2019-03-27 19:39:32 -请求地址 : http://localhost:8081/charts/countDD
2019-03-27 19:39:32 -HTTP METHOD : GET
2019-03-27 19:39:32 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-03-27 19:39:32 -参数 : []
2019-03-27 19:39:32 -耗时 : 1
2019-03-27 19:39:32 -返回值 : charts/countDD
2019-03-27 19:39:34 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-27 19:39:34 -HTTP METHOD : GET
2019-03-27 19:39:34 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 19:39:34 -参数 : [userType]
2019-03-27 19:39:34 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 19:39:34 -==> Parameters: userType(String)
2019-03-27 19:39:34 -<==      Total: 2
2019-03-27 19:39:34 -耗时 : 45
2019-03-27 19:39:34 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 19:39:53 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-27 19:39:53 -HTTP METHOD : GET
2019-03-27 19:39:53 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-27 19:39:53 -参数 : []
2019-03-27 19:39:53 -耗时 : 1
2019-03-27 19:39:53 -返回值 : system/dept/deptTree
2019-03-27 19:39:54 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-27 19:39:54 -HTTP METHOD : GET
2019-03-27 19:39:54 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-27 19:39:54 -参数 : []
2019-03-27 19:39:54 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-27 19:39:54 -==> Parameters: 
2019-03-27 19:39:54 -<==      Total: 3
2019-03-27 19:39:54 -耗时 : 24
2019-03-27 19:39:54 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-27 19:39:56 -请求地址 : http://localhost:8081/charts/countDD/getCountDD
2019-03-27 19:39:56 -HTTP METHOD : POST
2019-03-27 19:39:56 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.getCountD
2019-03-27 19:39:56 -参数 : [{elecLogVo=com.bootdo.moneyLog.vo.ElecLogVo@494ce47, org.springframework.validation.BindingResult.elecLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@32df56a8, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, heatLogVo=com.bootdo.moneyLog.vo.HeatLogVo@1563a5e6, org.springframework.validation.BindingResult.heatLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.ElecLogVo@494ce47, com.bootdo.moneyLog.vo.WaterLogVo@32df56a8, com.bootdo.moneyLog.vo.HeatLogVo@1563a5e6]
2019-03-27 19:39:56 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG 
2019-03-27 19:39:56 -==> Parameters: 
2019-03-27 19:39:56 -<==      Total: 1
2019-03-27 19:39:56 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG 
2019-03-27 19:39:56 -==> Parameters: 
2019-03-27 19:39:56 -<==      Total: 1
2019-03-27 19:39:56 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG 
2019-03-27 19:39:56 -==> Parameters: 
2019-03-27 19:39:56 -<==      Total: 1
2019-03-27 19:39:56 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG 
2019-03-27 19:39:56 -==> Parameters: 
2019-03-27 19:39:56 -<==      Total: 1
2019-03-27 19:39:56 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG 
2019-03-27 19:39:56 -==> Parameters: 
2019-03-27 19:39:56 -<==      Total: 1
2019-03-27 19:39:56 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG 
2019-03-27 19:39:56 -==> Parameters: 
2019-03-27 19:39:56 -<==      Total: 1
2019-03-27 19:39:56 -耗时 : 210
2019-03-27 19:39:56 -返回值 : com.bootdo.charts.vo.CountDayVo@56b4c065
2019-03-27 19:40:00 -请求地址 : http://localhost:8081/charts/countDD/getCountDD
2019-03-27 19:40:00 -HTTP METHOD : POST
2019-03-27 19:40:00 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.getCountD
2019-03-27 19:40:00 -参数 : [{elecLogVo=com.bootdo.moneyLog.vo.ElecLogVo@3b9c777a, org.springframework.validation.BindingResult.elecLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@4e71028d, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, heatLogVo=com.bootdo.moneyLog.vo.HeatLogVo@30d7f54, org.springframework.validation.BindingResult.heatLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.ElecLogVo@3b9c777a, com.bootdo.moneyLog.vo.WaterLogVo@4e71028d, com.bootdo.moneyLog.vo.HeatLogVo@30d7f54]
2019-03-27 19:40:00 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG 
2019-03-27 19:40:00 -==> Parameters: 
2019-03-27 19:40:00 -<==      Total: 1
2019-03-27 19:40:00 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG 
2019-03-27 19:40:00 -==> Parameters: 
2019-03-27 19:40:00 -<==      Total: 1
2019-03-27 19:40:00 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG 
2019-03-27 19:40:00 -==> Parameters: 
2019-03-27 19:40:00 -<==      Total: 1
2019-03-27 19:40:00 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG 
2019-03-27 19:40:00 -==> Parameters: 
2019-03-27 19:40:00 -<==      Total: 1
2019-03-27 19:40:00 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG 
2019-03-27 19:40:00 -==> Parameters: 
2019-03-27 19:40:00 -<==      Total: 1
2019-03-27 19:40:00 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG 
2019-03-27 19:40:00 -==> Parameters: 
2019-03-27 19:40:00 -<==      Total: 1
2019-03-27 19:40:00 -耗时 : 23
2019-03-27 19:40:00 -返回值 : com.bootdo.charts.vo.CountDayVo@1be519c1
2019-03-27 19:40:01 -请求地址 : http://localhost:8081/charts/countDD/getCountDD
2019-03-27 19:40:01 -HTTP METHOD : POST
2019-03-27 19:40:01 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.getCountD
2019-03-27 19:40:01 -参数 : [{elecLogVo=com.bootdo.moneyLog.vo.ElecLogVo@656674b4, org.springframework.validation.BindingResult.elecLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@5212e2ea, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, heatLogVo=com.bootdo.moneyLog.vo.HeatLogVo@4cf3d0f9, org.springframework.validation.BindingResult.heatLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.ElecLogVo@656674b4, com.bootdo.moneyLog.vo.WaterLogVo@5212e2ea, com.bootdo.moneyLog.vo.HeatLogVo@4cf3d0f9]
2019-03-27 19:40:01 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG 
2019-03-27 19:40:01 -==> Parameters: 
2019-03-27 19:40:01 -<==      Total: 1
2019-03-27 19:40:01 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG 
2019-03-27 19:40:01 -==> Parameters: 
2019-03-27 19:40:01 -<==      Total: 1
2019-03-27 19:40:01 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG 
2019-03-27 19:40:01 -==> Parameters: 
2019-03-27 19:40:01 -<==      Total: 1
2019-03-27 19:40:01 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG 
2019-03-27 19:40:01 -==> Parameters: 
2019-03-27 19:40:01 -<==      Total: 1
2019-03-27 19:40:01 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG 
2019-03-27 19:40:01 -==> Parameters: 
2019-03-27 19:40:01 -<==      Total: 1
2019-03-27 19:40:01 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG 
2019-03-27 19:40:01 -==> Parameters: 
2019-03-27 19:40:01 -<==      Total: 1
2019-03-27 19:40:01 -耗时 : 15
2019-03-27 19:40:01 -返回值 : com.bootdo.charts.vo.CountDayVo@37d8ca1d
2019-03-27 19:40:13 -请求地址 : http://localhost:8081/charts/countDD/getCountDD
2019-03-27 19:40:13 -HTTP METHOD : POST
2019-03-27 19:40:13 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.getCountD
2019-03-27 19:40:13 -参数 : [{elecLogVo=com.bootdo.moneyLog.vo.ElecLogVo@51af437e, org.springframework.validation.BindingResult.elecLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@15930181, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, heatLogVo=com.bootdo.moneyLog.vo.HeatLogVo@47b887d0, org.springframework.validation.BindingResult.heatLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.ElecLogVo@51af437e, com.bootdo.moneyLog.vo.WaterLogVo@15930181, com.bootdo.moneyLog.vo.HeatLogVo@47b887d0]
2019-03-27 19:40:13 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG 
2019-03-27 19:40:13 -==> Parameters: 
2019-03-27 19:40:13 -<==      Total: 1
2019-03-27 19:40:13 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG 
2019-03-27 19:40:13 -==> Parameters: 
2019-03-27 19:40:13 -<==      Total: 1
2019-03-27 19:40:13 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG 
2019-03-27 19:40:13 -==> Parameters: 
2019-03-27 19:40:13 -<==      Total: 1
2019-03-27 19:40:13 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG 
2019-03-27 19:40:13 -==> Parameters: 
2019-03-27 19:40:13 -<==      Total: 1
2019-03-27 19:40:13 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG 
2019-03-27 19:40:13 -==> Parameters: 
2019-03-27 19:40:13 -<==      Total: 1
2019-03-27 19:40:13 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG 
2019-03-27 19:40:13 -==> Parameters: 
2019-03-27 19:40:13 -<==      Total: 1
2019-03-27 19:40:13 -耗时 : 25
2019-03-27 19:40:13 -返回值 : com.bootdo.charts.vo.CountDayVo@1004824a
2019-03-27 19:40:14 -请求地址 : http://localhost:8081/charts/countDD/getCountDD
2019-03-27 19:40:14 -HTTP METHOD : POST
2019-03-27 19:40:14 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.getCountD
2019-03-27 19:40:14 -参数 : [{elecLogVo=com.bootdo.moneyLog.vo.ElecLogVo@60363fe5, org.springframework.validation.BindingResult.elecLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@1cc1685f, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, heatLogVo=com.bootdo.moneyLog.vo.HeatLogVo@451348cd, org.springframework.validation.BindingResult.heatLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.ElecLogVo@60363fe5, com.bootdo.moneyLog.vo.WaterLogVo@1cc1685f, com.bootdo.moneyLog.vo.HeatLogVo@451348cd]
2019-03-27 19:40:14 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG 
2019-03-27 19:40:14 -==> Parameters: 
2019-03-27 19:40:14 -<==      Total: 1
2019-03-27 19:40:14 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG 
2019-03-27 19:40:14 -==> Parameters: 
2019-03-27 19:40:14 -<==      Total: 1
2019-03-27 19:40:14 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG 
2019-03-27 19:40:14 -==> Parameters: 
2019-03-27 19:40:14 -<==      Total: 1
2019-03-27 19:40:14 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG 
2019-03-27 19:40:14 -==> Parameters: 
2019-03-27 19:40:14 -<==      Total: 1
2019-03-27 19:40:14 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG 
2019-03-27 19:40:14 -==> Parameters: 
2019-03-27 19:40:14 -<==      Total: 1
2019-03-27 19:40:14 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG 
2019-03-27 19:40:14 -==> Parameters: 
2019-03-27 19:40:14 -<==      Total: 1
2019-03-27 19:40:14 -耗时 : 13
2019-03-27 19:40:14 -返回值 : com.bootdo.charts.vo.CountDayVo@678c0343
2019-03-27 19:40:15 -请求地址 : http://localhost:8081/charts/countDD/getCountDD
2019-03-27 19:40:15 -HTTP METHOD : POST
2019-03-27 19:40:15 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.getCountD
2019-03-27 19:40:15 -参数 : [{elecLogVo=com.bootdo.moneyLog.vo.ElecLogVo@602af20e, org.springframework.validation.BindingResult.elecLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@6107bd16, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, heatLogVo=com.bootdo.moneyLog.vo.HeatLogVo@15f46919, org.springframework.validation.BindingResult.heatLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.ElecLogVo@602af20e, com.bootdo.moneyLog.vo.WaterLogVo@6107bd16, com.bootdo.moneyLog.vo.HeatLogVo@15f46919]
2019-03-27 19:40:15 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG 
2019-03-27 19:40:15 -==> Parameters: 
2019-03-27 19:40:15 -<==      Total: 1
2019-03-27 19:40:15 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG 
2019-03-27 19:40:15 -==> Parameters: 
2019-03-27 19:40:15 -<==      Total: 1
2019-03-27 19:40:15 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG 
2019-03-27 19:40:15 -==> Parameters: 
2019-03-27 19:40:15 -<==      Total: 1
2019-03-27 19:40:15 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG 
2019-03-27 19:40:15 -==> Parameters: 
2019-03-27 19:40:15 -<==      Total: 1
2019-03-27 19:40:15 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG 
2019-03-27 19:40:15 -==> Parameters: 
2019-03-27 19:40:15 -<==      Total: 1
2019-03-27 19:40:15 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG 
2019-03-27 19:40:15 -==> Parameters: 
2019-03-27 19:40:15 -<==      Total: 1
2019-03-27 19:40:15 -耗时 : 13
2019-03-27 19:40:15 -返回值 : com.bootdo.charts.vo.CountDayVo@61917287
2019-03-27 19:46:52 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-27 19:46:52 -HTTP METHOD : GET
2019-03-27 19:46:52 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-27 19:46:52 -参数 : []
2019-03-27 19:46:52 -耗时 : 1
2019-03-27 19:46:52 -返回值 : /moneyLog/elecLog/elecLog
2019-03-27 19:46:52 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-27 19:46:52 -HTTP METHOD : GET
2019-03-27 19:46:52 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 19:46:52 -参数 : [userType]
2019-03-27 19:46:52 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 19:46:52 -==> Parameters: userType(String)
2019-03-27 19:46:52 -<==      Total: 2
2019-03-27 19:46:52 -耗时 : 7
2019-03-27 19:46:52 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 19:46:52 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-27 19:46:52 -HTTP METHOD : GET
2019-03-27 19:46:52 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-27 19:46:52 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-27 19:46:52 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-27 19:46:52 -==> Parameters: 0(Integer), 10(Integer)
2019-03-27 19:46:52 -<==      Total: 7
2019-03-27 19:46:52 -==>  Preparing: select count(*) from elec_log 
2019-03-27 19:46:52 -==> Parameters: 
2019-03-27 19:46:52 -<==      Total: 1
2019-03-27 19:46:52 -耗时 : 48
2019-03-27 19:46:52 -返回值 : com.bootdo.common.utils.PageUtils@745c39c2
2019-03-27 19:46:54 -请求地址 : http://localhost:8081/moneyLog/elecLog/edit/1
2019-03-27 19:46:54 -HTTP METHOD : GET
2019-03-27 19:46:54 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.edit
2019-03-27 19:46:54 -参数 : [1, {}]
2019-03-27 19:46:54 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log where id = ? 
2019-03-27 19:46:54 -==> Parameters: 1(Long)
2019-03-27 19:46:54 -<==      Total: 1
2019-03-27 19:46:54 -耗时 : 7
2019-03-27 19:46:54 -返回值 : moneyLog/elecLog/edit
2019-03-27 19:46:54 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-27 19:46:54 -HTTP METHOD : GET
2019-03-27 19:46:54 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 19:46:54 -参数 : [userType]
2019-03-27 19:46:54 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 19:46:54 -==> Parameters: userType(String)
2019-03-27 19:46:54 -请求地址 : http://localhost:8081/common/dict/list/userOrg
2019-03-27 19:46:54 -HTTP METHOD : GET
2019-03-27 19:46:54 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 19:46:54 -参数 : [userOrg]
2019-03-27 19:46:54 -<==      Total: 2
2019-03-27 19:46:54 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 19:46:54 -耗时 : 8
2019-03-27 19:46:54 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 19:46:54 -==> Parameters: userOrg(String)
2019-03-27 19:46:55 -<==      Total: 0
2019-03-27 19:46:55 -耗时 : 45
2019-03-27 19:46:55 -返回值 : []
2019-03-27 20:27:52 -Starting BootdoApplication on ZJZL-20180906VX with PID 14312 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-27 20:27:52 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-27 20:27:52 -The following profiles are active: dev
2019-03-27 20:27:53 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Wed Mar 27 20:27:53 CST 2019]; root of context hierarchy
2019-03-27 20:27:55 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-27 20:27:58 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$42986d6e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-27 20:27:58 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$34f19c15] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-27 20:27:59 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-27 20:27:59 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-27 20:27:59 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-27 20:27:59 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-27 20:27:59 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-27 20:27:59 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-27 20:27:59 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-27 20:27:59 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-27 20:27:59 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-27 20:28:00 -Tomcat initialized with port(s): 8081 (http)
2019-03-27 20:28:00 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-27 20:28:00 -Starting service [Tomcat]
2019-03-27 20:28:00 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-27 20:28:00 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-27 20:28:01 -Initializing Spring embedded WebApplicationContext
2019-03-27 20:28:01 -Root WebApplicationContext: initialization completed in 8124 ms
2019-03-27 20:28:01 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-27 20:28:02 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-27 20:28:02 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-27 20:28:02 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-27 20:28:02 -Filter xssFilter was not registered (disabled)
2019-03-27 20:28:02 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-27 20:28:02 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-27 20:28:02 -Servlet statViewServlet mapped to [/druid/*]
2019-03-27 20:28:02 -Servlet dispatcherServlet mapped to [/]
2019-03-27 20:28:04 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Wed Mar 27 20:27:53 CST 2019]; root of context hierarchy
2019-03-27 20:28:05 -Using default implementation for ThreadExecutor
2019-03-27 20:28:05 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-27 20:28:05 -Quartz Scheduler v.2.2.1 created.
2019-03-27 20:28:05 -RAMJobStore initialized.
2019-03-27 20:28:05 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-27 20:28:05 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-27 20:28:05 -Quartz scheduler version: 2.2.1
2019-03-27 20:28:05 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@1002d192
2019-03-27 20:28:05 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-27 20:28:05 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-27 20:28:08 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-27 20:28:08 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-03-27 20:28:08 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-27 20:28:08 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-27 20:28:08 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-27 20:28:08 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-27 20:28:08 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-27 20:28:08 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-27 20:28:08 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-27 20:28:08 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-27 20:28:08 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-27 20:28:08 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 20:28:08 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-27 20:28:08 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-27 20:28:08 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-27 20:28:08 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 20:28:08 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-27 20:28:08 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-27 20:28:08 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-27 20:28:08 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-27 20:28:08 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-27 20:28:08 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-27 20:28:08 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 20:28:08 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-27 20:28:08 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-27 20:28:08 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-27 20:28:08 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 20:28:08 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-27 20:28:08 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 20:28:08 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-27 20:28:08 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-27 20:28:08 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-27 20:28:08 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-27 20:28:08 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-27 20:28:08 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-27 20:28:08 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-27 20:28:08 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-27 20:28:08 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-27 20:28:08 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 20:28:08 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-27 20:28:08 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-27 20:28:08 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 20:28:08 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-27 20:28:08 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-27 20:28:08 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-27 20:28:08 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-27 20:28:08 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 20:28:08 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-27 20:28:08 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-03-27 20:28:08 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-27 20:28:08 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-27 20:28:08 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-27 20:28:08 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-27 20:28:08 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-27 20:28:08 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-27 20:28:08 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-27 20:28:08 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-27 20:28:08 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-27 20:28:08 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-27 20:28:08 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 20:28:08 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-27 20:28:08 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-27 20:28:08 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-03-27 20:28:08 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-27 20:28:08 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-27 20:28:08 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-27 20:28:08 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-27 20:28:08 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-27 20:28:08 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 20:28:08 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-03-27 20:28:08 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 20:28:08 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-27 20:28:08 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-27 20:28:08 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-27 20:28:08 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-27 20:28:08 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-27 20:28:08 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-27 20:28:08 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-27 20:28:08 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 20:28:08 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-27 20:28:08 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-27 20:28:08 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-27 20:28:08 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-27 20:28:08 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-27 20:28:08 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-27 20:28:08 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-27 20:28:08 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-27 20:28:08 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-27 20:28:08 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-27 20:28:08 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 20:28:08 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-27 20:28:08 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 20:28:08 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-27 20:28:08 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-27 20:28:08 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-03-27 20:28:08 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-27 20:28:08 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-03-27 20:28:08 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-27 20:28:08 -Mapped "{[/moneyList/moneyList/UserList],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-27 20:28:08 -Mapped "{[/moneyList/moneyList/LikeName],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.LikeName(org.springframework.ui.Model)
2019-03-27 20:28:08 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-27 20:28:08 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-27 20:28:08 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-27 20:28:08 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-27 20:28:08 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 20:28:08 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-27 20:28:08 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 20:28:08 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-27 20:28:08 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-27 20:28:08 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-27 20:28:08 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-27 20:28:08 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-27 20:28:08 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-27 20:28:08 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 20:28:08 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-27 20:28:08 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 20:28:08 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-27 20:28:08 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-27 20:28:08 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-27 20:28:08 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-27 20:28:08 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-27 20:28:08 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-27 20:28:08 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 20:28:08 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-27 20:28:08 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 20:28:08 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-27 20:28:08 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-27 20:28:08 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-27 20:28:08 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-27 20:28:08 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-27 20:28:08 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-27 20:28:08 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-27 20:28:08 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 20:28:08 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-27 20:28:08 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-27 20:28:08 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 20:28:08 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 20:28:08 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-27 20:28:08 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-27 20:28:08 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-27 20:28:08 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-27 20:28:08 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-27 20:28:08 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-27 20:28:08 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 20:28:08 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-27 20:28:08 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 20:28:08 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-27 20:28:08 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-27 20:28:08 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 20:28:08 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-27 20:28:08 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-27 20:28:08 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-27 20:28:08 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-27 20:28:08 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-27 20:28:08 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-27 20:28:08 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-27 20:28:08 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 20:28:08 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-27 20:28:08 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-27 20:28:08 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-27 20:28:08 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-27 20:28:08 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-27 20:28:08 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-27 20:28:08 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-27 20:28:08 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-27 20:28:08 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-27 20:28:08 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-27 20:28:08 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-27 20:28:08 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-27 20:28:08 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 20:28:08 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-27 20:28:08 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-27 20:28:08 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-27 20:28:08 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-27 20:28:08 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-27 20:28:08 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-27 20:28:08 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-27 20:28:08 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-27 20:28:08 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-27 20:28:08 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-27 20:28:08 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-27 20:28:08 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-27 20:28:08 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 20:28:08 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-27 20:28:08 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-27 20:28:08 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-27 20:28:08 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-27 20:28:08 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 20:28:08 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-27 20:28:08 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-27 20:28:08 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-27 20:28:08 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 20:28:08 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-27 20:28:08 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-27 20:28:08 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-27 20:28:08 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-27 20:28:08 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-27 20:28:08 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-27 20:28:08 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-27 20:28:08 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-27 20:28:08 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-27 20:28:08 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-27 20:28:08 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-27 20:28:08 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-27 20:28:08 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-27 20:28:08 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-27 20:28:08 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-27 20:28:08 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-27 20:28:08 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-27 20:28:08 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 20:28:08 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-27 20:28:08 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-27 20:28:08 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 20:28:08 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-27 20:28:08 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 20:28:08 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-27 20:28:08 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-27 20:28:08 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-27 20:28:08 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-27 20:28:08 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-27 20:28:08 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-27 20:28:08 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-27 20:28:08 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-27 20:28:08 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-27 20:28:08 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-27 20:28:08 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-03-27 20:28:08 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-03-27 20:28:08 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-27 20:28:08 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-27 20:28:08 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-27 20:28:08 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-27 20:28:08 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-27 20:28:08 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-27 20:28:09 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-27 20:28:09 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-27 20:28:09 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-27 20:28:10 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-27 20:28:10 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Wed Mar 27 20:27:53 CST 2019]; root of context hierarchy
2019-03-27 20:28:10 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-27 20:28:10 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-27 20:28:10 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-27 20:28:10 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-27 20:28:10 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-27 20:28:14 -Registering beans for JMX exposure on startup
2019-03-27 20:28:14 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-27 20:28:14 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-27 20:28:14 -Starting beans in phase 2147483647
2019-03-27 20:28:14 -Context refreshed
2019-03-27 20:28:14 -Found 1 custom documentation plugin(s)
2019-03-27 20:28:14 -Scanning for api listing references
2019-03-27 20:28:15 -Generating unique operation named: removeUsingPOST_1
2019-03-27 20:28:15 -Generating unique operation named: addUsingGET_1
2019-03-27 20:28:15 -Generating unique operation named: editUsingGET_1
2019-03-27 20:28:15 -Generating unique operation named: listUsingGET_1
2019-03-27 20:28:16 -Generating unique operation named: removeUsingPOST_2
2019-03-27 20:28:16 -Generating unique operation named: removeUsingPOST_3
2019-03-27 20:28:16 -Generating unique operation named: saveUsingPOST_1
2019-03-27 20:28:16 -Generating unique operation named: updateUsingGET_1
2019-03-27 20:28:16 -Generating unique operation named: updateUsingHEAD_1
2019-03-27 20:28:16 -Generating unique operation named: updateUsingPOST_1
2019-03-27 20:28:16 -Generating unique operation named: updateUsingPUT_1
2019-03-27 20:28:16 -Generating unique operation named: updateUsingPATCH_1
2019-03-27 20:28:16 -Generating unique operation named: updateUsingDELETE_1
2019-03-27 20:28:16 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-27 20:28:16 -Generating unique operation named: updateUsingTRACE_1
2019-03-27 20:28:16 -Generating unique operation named: addUsingGET_2
2019-03-27 20:28:16 -Generating unique operation named: editUsingGET_2
2019-03-27 20:28:16 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-27 20:28:16 -Generating unique operation named: listUsingGET_2
2019-03-27 20:28:16 -Generating unique operation named: removeUsingPOST_4
2019-03-27 20:28:16 -Generating unique operation named: removeUsingPOST_5
2019-03-27 20:28:16 -Generating unique operation named: saveUsingPOST_2
2019-03-27 20:28:16 -Generating unique operation named: updateUsingPOST_2
2019-03-27 20:28:16 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-27 20:28:16 -Generating unique operation named: addUsingGET_3
2019-03-27 20:28:16 -Generating unique operation named: editUsingGET_3
2019-03-27 20:28:16 -Generating unique operation named: listUsingGET_3
2019-03-27 20:28:16 -Generating unique operation named: removeUsingPOST_6
2019-03-27 20:28:16 -Generating unique operation named: removeUsingPOST_7
2019-03-27 20:28:16 -Generating unique operation named: saveUsingPOST_3
2019-03-27 20:28:16 -Generating unique operation named: updateUsingGET_2
2019-03-27 20:28:16 -Generating unique operation named: updateUsingHEAD_2
2019-03-27 20:28:16 -Generating unique operation named: updateUsingPOST_3
2019-03-27 20:28:16 -Generating unique operation named: updateUsingPUT_2
2019-03-27 20:28:16 -Generating unique operation named: updateUsingPATCH_2
2019-03-27 20:28:16 -Generating unique operation named: updateUsingDELETE_2
2019-03-27 20:28:16 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-27 20:28:16 -Generating unique operation named: updateUsingTRACE_2
2019-03-27 20:28:16 -Generating unique operation named: addUsingGET_4
2019-03-27 20:28:16 -Generating unique operation named: editUsingGET_4
2019-03-27 20:28:16 -Generating unique operation named: listUsingGET_4
2019-03-27 20:28:16 -Generating unique operation named: removeUsingPOST_8
2019-03-27 20:28:16 -Generating unique operation named: removeUsingPOST_9
2019-03-27 20:28:16 -Generating unique operation named: saveUsingPOST_4
2019-03-27 20:28:16 -Generating unique operation named: updateUsingGET_3
2019-03-27 20:28:16 -Generating unique operation named: updateUsingHEAD_3
2019-03-27 20:28:16 -Generating unique operation named: updateUsingPOST_4
2019-03-27 20:28:16 -Generating unique operation named: updateUsingPUT_3
2019-03-27 20:28:16 -Generating unique operation named: updateUsingPATCH_3
2019-03-27 20:28:16 -Generating unique operation named: updateUsingDELETE_3
2019-03-27 20:28:16 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-27 20:28:16 -Generating unique operation named: updateUsingTRACE_3
2019-03-27 20:28:16 -Generating unique operation named: ElecUsingGET_1
2019-03-27 20:28:16 -Generating unique operation named: addUsingGET_5
2019-03-27 20:28:16 -Generating unique operation named: editUsingGET_5
2019-03-27 20:28:16 -Generating unique operation named: listUsingGET_5
2019-03-27 20:28:16 -Generating unique operation named: removeUsingPOST_10
2019-03-27 20:28:16 -Generating unique operation named: removeUsingPOST_11
2019-03-27 20:28:16 -Generating unique operation named: saveUsingPOST_5
2019-03-27 20:28:16 -Generating unique operation named: updateUsingGET_4
2019-03-27 20:28:16 -Generating unique operation named: updateUsingHEAD_4
2019-03-27 20:28:16 -Generating unique operation named: updateUsingPOST_5
2019-03-27 20:28:16 -Generating unique operation named: updateUsingPUT_4
2019-03-27 20:28:16 -Generating unique operation named: updateUsingPATCH_4
2019-03-27 20:28:16 -Generating unique operation named: updateUsingDELETE_4
2019-03-27 20:28:16 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-27 20:28:16 -Generating unique operation named: updateUsingTRACE_4
2019-03-27 20:28:17 -Generating unique operation named: editUsingGET_6
2019-03-27 20:28:17 -Generating unique operation named: listUsingGET_6
2019-03-27 20:28:17 -Generating unique operation named: updateUsingPOST_6
2019-03-27 20:28:17 -Generating unique operation named: addUsingGET_6
2019-03-27 20:28:17 -Generating unique operation named: editUsingGET_7
2019-03-27 20:28:17 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-27 20:28:17 -Generating unique operation named: listUsingGET_7
2019-03-27 20:28:17 -Generating unique operation named: removeUsingPOST_12
2019-03-27 20:28:17 -Generating unique operation named: removeUsingPOST_13
2019-03-27 20:28:17 -Generating unique operation named: saveUsingPOST_6
2019-03-27 20:28:17 -Generating unique operation named: updateUsingGET_5
2019-03-27 20:28:17 -Generating unique operation named: updateUsingHEAD_5
2019-03-27 20:28:17 -Generating unique operation named: updateUsingPOST_7
2019-03-27 20:28:17 -Generating unique operation named: updateUsingPUT_5
2019-03-27 20:28:17 -Generating unique operation named: updateUsingPATCH_5
2019-03-27 20:28:17 -Generating unique operation named: updateUsingDELETE_5
2019-03-27 20:28:17 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-27 20:28:17 -Generating unique operation named: updateUsingTRACE_5
2019-03-27 20:28:17 -Generating unique operation named: exprotExcelUsingGET_4
2019-03-27 20:28:17 -Generating unique operation named: addUsingGET_7
2019-03-27 20:28:17 -Generating unique operation named: editUsingGET_8
2019-03-27 20:28:17 -Generating unique operation named: listUsingGET_8
2019-03-27 20:28:17 -Generating unique operation named: removeUsingPOST_14
2019-03-27 20:28:17 -Generating unique operation named: removeUsingPOST_15
2019-03-27 20:28:17 -Generating unique operation named: saveUsingPOST_7
2019-03-27 20:28:17 -Generating unique operation named: updateUsingGET_6
2019-03-27 20:28:17 -Generating unique operation named: updateUsingHEAD_6
2019-03-27 20:28:17 -Generating unique operation named: updateUsingPOST_8
2019-03-27 20:28:17 -Generating unique operation named: updateUsingPUT_6
2019-03-27 20:28:17 -Generating unique operation named: updateUsingPATCH_6
2019-03-27 20:28:17 -Generating unique operation named: updateUsingDELETE_6
2019-03-27 20:28:17 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-27 20:28:17 -Generating unique operation named: updateUsingTRACE_6
2019-03-27 20:28:17 -Generating unique operation named: addUsingGET_8
2019-03-27 20:28:17 -Generating unique operation named: editUsingGET_9
2019-03-27 20:28:17 -Generating unique operation named: listUsingGET_9
2019-03-27 20:28:17 -Generating unique operation named: removeUsingPOST_16
2019-03-27 20:28:17 -Generating unique operation named: removeUsingPOST_17
2019-03-27 20:28:17 -Generating unique operation named: saveUsingPOST_8
2019-03-27 20:28:17 -Generating unique operation named: updateUsingGET_7
2019-03-27 20:28:17 -Generating unique operation named: updateUsingHEAD_7
2019-03-27 20:28:17 -Generating unique operation named: updateUsingPOST_9
2019-03-27 20:28:17 -Generating unique operation named: updateUsingPUT_7
2019-03-27 20:28:17 -Generating unique operation named: updateUsingPATCH_7
2019-03-27 20:28:17 -Generating unique operation named: updateUsingDELETE_7
2019-03-27 20:28:17 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-27 20:28:17 -Generating unique operation named: updateUsingTRACE_7
2019-03-27 20:28:17 -Generating unique operation named: addUsingGET_9
2019-03-27 20:28:17 -Generating unique operation named: editUsingGET_10
2019-03-27 20:28:17 -Generating unique operation named: infoUsingGET_1
2019-03-27 20:28:17 -Generating unique operation named: infoUsingHEAD_1
2019-03-27 20:28:17 -Generating unique operation named: infoUsingPOST_1
2019-03-27 20:28:17 -Generating unique operation named: infoUsingPUT_1
2019-03-27 20:28:17 -Generating unique operation named: infoUsingPATCH_1
2019-03-27 20:28:17 -Generating unique operation named: infoUsingDELETE_1
2019-03-27 20:28:17 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-27 20:28:17 -Generating unique operation named: infoUsingTRACE_1
2019-03-27 20:28:17 -Generating unique operation named: listUsingGET_10
2019-03-27 20:28:17 -Generating unique operation named: removeUsingPOST_18
2019-03-27 20:28:17 -Generating unique operation named: removeUsingPOST_19
2019-03-27 20:28:17 -Generating unique operation named: saveUsingPOST_9
2019-03-27 20:28:17 -Generating unique operation named: updateUsingPOST_10
2019-03-27 20:28:17 -Generating unique operation named: listUsingGET_11
2019-03-27 20:28:17 -Generating unique operation named: removeUsingPOST_20
2019-03-27 20:28:17 -Generating unique operation named: welcomeUsingGET_1
2019-03-27 20:28:17 -Generating unique operation named: addUsingGET_10
2019-03-27 20:28:17 -Generating unique operation named: editUsingGET_11
2019-03-27 20:28:17 -Generating unique operation named: listUsingGET_12
2019-03-27 20:28:17 -Generating unique operation named: removeUsingPOST_21
2019-03-27 20:28:17 -Generating unique operation named: saveUsingPOST_10
2019-03-27 20:28:17 -Generating unique operation named: treeUsingGET_1
2019-03-27 20:28:17 -Generating unique operation named: treeUsingGET_2
2019-03-27 20:28:17 -Generating unique operation named: updateUsingPOST_11
2019-03-27 20:28:17 -Generating unique operation named: addUsingGET_11
2019-03-27 20:28:17 -Generating unique operation named: editUsingGET_12
2019-03-27 20:28:17 -Generating unique operation named: listUsingGET_13
2019-03-27 20:28:17 -Generating unique operation named: removeUsingPOST_22
2019-03-27 20:28:17 -Generating unique operation named: removeUsingPOST_23
2019-03-27 20:28:17 -Generating unique operation named: saveUsingPOST_11
2019-03-27 20:28:17 -Generating unique operation named: updateUsingGET_8
2019-03-27 20:28:17 -Generating unique operation named: updateUsingHEAD_8
2019-03-27 20:28:17 -Generating unique operation named: updateUsingPOST_12
2019-03-27 20:28:17 -Generating unique operation named: updateUsingPUT_8
2019-03-27 20:28:17 -Generating unique operation named: updateUsingPATCH_8
2019-03-27 20:28:17 -Generating unique operation named: updateUsingDELETE_8
2019-03-27 20:28:17 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-27 20:28:17 -Generating unique operation named: updateUsingTRACE_8
2019-03-27 20:28:17 -Generating unique operation named: addUsingGET_12
2019-03-27 20:28:17 -Generating unique operation named: editUsingGET_13
2019-03-27 20:28:18 -Generating unique operation named: listUsingGET_14
2019-03-27 20:28:18 -Generating unique operation named: removeUsingPOST_24
2019-03-27 20:28:18 -Generating unique operation named: removeUsingPOST_25
2019-03-27 20:28:18 -Generating unique operation named: saveUsingPOST_12
2019-03-27 20:28:18 -Generating unique operation named: updateUsingGET_9
2019-03-27 20:28:18 -Generating unique operation named: updateUsingHEAD_9
2019-03-27 20:28:18 -Generating unique operation named: updateUsingPOST_13
2019-03-27 20:28:18 -Generating unique operation named: updateUsingPUT_9
2019-03-27 20:28:18 -Generating unique operation named: updateUsingPATCH_9
2019-03-27 20:28:18 -Generating unique operation named: updateUsingDELETE_9
2019-03-27 20:28:18 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-27 20:28:18 -Generating unique operation named: updateUsingTRACE_9
2019-03-27 20:28:18 -Generating unique operation named: addUsingGET_13
2019-03-27 20:28:18 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-27 20:28:18 -Generating unique operation named: editUsingGET_14
2019-03-27 20:28:18 -Generating unique operation named: listUsingGET_15
2019-03-27 20:28:18 -Generating unique operation named: saveUsingPOST_13
2019-03-27 20:28:18 -Generating unique operation named: saveUsingPOST_14
2019-03-27 20:28:18 -Generating unique operation named: updateUsingPOST_14
2019-03-27 20:28:18 -Generating unique operation named: listUsingGET_16
2019-03-27 20:28:18 -Generating unique operation named: listUsingHEAD_1
2019-03-27 20:28:18 -Generating unique operation named: listUsingPOST_1
2019-03-27 20:28:18 -Generating unique operation named: listUsingPUT_1
2019-03-27 20:28:18 -Generating unique operation named: listUsingPATCH_1
2019-03-27 20:28:18 -Generating unique operation named: listUsingDELETE_1
2019-03-27 20:28:18 -Generating unique operation named: listUsingOPTIONS_1
2019-03-27 20:28:18 -Generating unique operation named: listUsingTRACE_1
2019-03-27 20:28:18 -Generating unique operation named: addUsingGET_14
2019-03-27 20:28:18 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-27 20:28:18 -Generating unique operation named: editUsingGET_15
2019-03-27 20:28:18 -Generating unique operation named: listUsingGET_17
2019-03-27 20:28:18 -Generating unique operation named: removeUsingPOST_26
2019-03-27 20:28:18 -Generating unique operation named: saveUsingPOST_15
2019-03-27 20:28:18 -Generating unique operation named: treeUsingGET_3
2019-03-27 20:28:18 -Generating unique operation named: treeViewUsingGET_1
2019-03-27 20:28:18 -Generating unique operation named: updateUsingPOST_15
2019-03-27 20:28:18 -Generating unique operation named: addUsingGET_15
2019-03-27 20:28:18 -Generating unique operation named: editUsingGET_16
2019-03-27 20:28:18 -Generating unique operation named: exprotExcelUsingGET_5
2019-03-27 20:28:18 -Generating unique operation named: listUsingGET_18
2019-03-27 20:28:18 -Generating unique operation named: removeUsingPOST_27
2019-03-27 20:28:18 -Generating unique operation named: removeUsingPOST_28
2019-03-27 20:28:18 -Generating unique operation named: saveUsingPOST_16
2019-03-27 20:28:18 -Generating unique operation named: updateUsingGET_10
2019-03-27 20:28:18 -Generating unique operation named: updateUsingHEAD_10
2019-03-27 20:28:18 -Generating unique operation named: updateUsingPOST_16
2019-03-27 20:28:18 -Generating unique operation named: updateUsingPUT_10
2019-03-27 20:28:18 -Generating unique operation named: updateUsingPATCH_10
2019-03-27 20:28:18 -Generating unique operation named: updateUsingDELETE_10
2019-03-27 20:28:18 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-27 20:28:18 -Generating unique operation named: updateUsingTRACE_10
2019-03-27 20:28:18 -Generating unique operation named: exprotExcelUsingGET_6
2019-03-27 20:28:18 -Generating unique operation named: addUsingGET_16
2019-03-27 20:28:18 -Generating unique operation named: editUsingGET_17
2019-03-27 20:28:18 -Generating unique operation named: listUsingGET_19
2019-03-27 20:28:18 -Generating unique operation named: removeUsingPOST_29
2019-03-27 20:28:18 -Generating unique operation named: removeUsingPOST_30
2019-03-27 20:28:18 -Generating unique operation named: saveUsingPOST_17
2019-03-27 20:28:18 -Generating unique operation named: updateUsingGET_11
2019-03-27 20:28:18 -Generating unique operation named: updateUsingHEAD_11
2019-03-27 20:28:18 -Generating unique operation named: updateUsingPOST_17
2019-03-27 20:28:18 -Generating unique operation named: updateUsingPUT_11
2019-03-27 20:28:18 -Generating unique operation named: updateUsingPATCH_11
2019-03-27 20:28:18 -Generating unique operation named: updateUsingDELETE_11
2019-03-27 20:28:18 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-27 20:28:18 -Generating unique operation named: updateUsingTRACE_11
2019-03-27 20:28:18 -Generating unique operation named: addUsingGET_17
2019-03-27 20:28:18 -Generating unique operation named: editUsingGET_18
2019-03-27 20:28:18 -Generating unique operation named: listUsingGET_20
2019-03-27 20:28:18 -Generating unique operation named: removeUsingPOST_31
2019-03-27 20:28:18 -Generating unique operation named: removeUsingPOST_32
2019-03-27 20:28:18 -Generating unique operation named: saveUsingPOST_18
2019-03-27 20:28:18 -Generating unique operation named: updateUsingGET_12
2019-03-27 20:28:18 -Generating unique operation named: updateUsingHEAD_12
2019-03-27 20:28:18 -Generating unique operation named: updateUsingPOST_18
2019-03-27 20:28:18 -Generating unique operation named: updateUsingPUT_12
2019-03-27 20:28:18 -Generating unique operation named: updateUsingPATCH_12
2019-03-27 20:28:18 -Generating unique operation named: updateUsingDELETE_12
2019-03-27 20:28:18 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-27 20:28:18 -Generating unique operation named: updateUsingTRACE_12
2019-03-27 20:28:18 -Starting Quartz Scheduler now
2019-03-27 20:28:18 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-27 20:28:18 -Starting...
2019-03-27 20:28:18 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-27 20:28:18 -Started.
2019-03-27 20:28:18 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-27 20:28:19 -Using a shared selector for servlet write/read
2019-03-27 20:28:19 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-27 20:28:19 -Started BootdoApplication in 27.195 seconds (JVM running for 27.993)
2019-03-27 20:28:19 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-27 20:28:19 -==> Parameters: 
2019-03-27 20:28:19 -<==      Total: 1
2019-03-27 20:28:54 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-27 20:28:54 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-27 20:28:54 -FrameworkServlet 'dispatcherServlet': initialization completed in 130 ms
2019-03-27 20:28:54 -Enabling session validation scheduler...
2019-03-27 20:28:55 -请求地址 : http://localhost:8081/
2019-03-27 20:28:55 -HTTP METHOD : GET
2019-03-27 20:28:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2019-03-27 20:28:55 -参数 : [{}]
2019-03-27 20:28:55 -耗时 : 4
2019-03-27 20:28:55 -返回值 : redirect:/index
2019-03-27 20:28:55 -请求地址 : http://localhost:8081/login;JSESSIONID=1e550c62-76e3-4f61-a913-de6806e36904
2019-03-27 20:28:55 -HTTP METHOD : GET
2019-03-27 20:28:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-27 20:28:55 -参数 : [{}]
2019-03-27 20:28:55 -耗时 : 1
2019-03-27 20:28:55 -返回值 : login
2019-03-27 20:28:59 -请求地址 : http://localhost:8081/getVerify
2019-03-27 20:28:59 -HTTP METHOD : GET
2019-03-27 20:28:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-27 20:28:59 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@47b17622, org.apache.shiro.web.servlet.ShiroHttpServletResponse@4f2fe6d7]
2019-03-27 20:29:09 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-03-27 20:29:13 -7520
2019-03-27 20:29:13 -耗时 : 14936
2019-03-27 20:29:13 -返回值 : null
2019-03-27 20:29:19 -请求地址 : http://localhost:8081/login
2019-03-27 20:29:19 -HTTP METHOD : POST
2019-03-27 20:29:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-27 20:29:19 -参数 : [admin, 111111, 7520, org.apache.shiro.web.servlet.ShiroHttpServletRequest@69f8bca9]
2019-03-27 20:29:19 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-27 20:29:19 -==> Parameters: admin(String)
2019-03-27 20:29:19 -<==      Total: 1
2019-03-27 20:29:19 -耗时 : 344
2019-03-27 20:29:19 -返回值 : {msg=操作成功, code=0}
2019-03-27 20:29:19 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-03-27 20:29:19 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-27 20:29:19 -==> Parameters: 1(Long), admin(String), 登录(String), 344(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-27 20:29:19.968(Timestamp)
2019-03-27 20:29:20 -<==    Updates: 1
2019-03-27 20:29:20 -请求地址 : http://localhost:8081/index
2019-03-27 20:29:20 -HTTP METHOD : GET
2019-03-27 20:29:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-27 20:29:20 -参数 : [{}]
2019-03-27 20:29:20 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-27 20:29:20 -==> Parameters: 1(Long)
2019-03-27 20:29:20 -<==      Total: 46
2019-03-27 20:29:20 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-27 20:29:20 -==> Parameters: 138(Long)
2019-03-27 20:29:20 -<==      Total: 1
2019-03-27 20:29:20 -耗时 : 424
2019-03-27 20:29:20 -返回值 : index_v1
2019-03-27 20:29:20 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-27 20:29:20 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 425(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-27 20:29:20.919(Timestamp)
2019-03-27 20:29:21 -<==    Updates: 1
2019-03-27 20:29:21 -请求地址 : http://localhost:8081/main
2019-03-27 20:29:21 -HTTP METHOD : GET
2019-03-27 20:29:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-27 20:29:21 -参数 : []
2019-03-27 20:29:21 -耗时 : 0
2019-03-27 20:29:21 -返回值 : main
2019-03-27 20:29:24 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-27 20:29:24 -HTTP METHOD : GET
2019-03-27 20:29:24 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-27 20:29:24 -参数 : []
2019-03-27 20:29:24 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-27 20:29:24 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-27 20:29:24 -<==      Total: 0
2019-03-27 20:29:24 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-27 20:29:24 -==> Parameters: 1(Long), 0(String)
2019-03-27 20:29:24 -<==      Total: 1
2019-03-27 20:29:24 -耗时 : 68
2019-03-27 20:29:24 -返回值 : com.bootdo.common.utils.PageUtils@41469190
2019-03-27 20:29:25 -请求地址 : http://localhost:8081/main
2019-03-27 20:29:25 -HTTP METHOD : GET
2019-03-27 20:29:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-27 20:29:25 -参数 : []
2019-03-27 20:29:25 -耗时 : 1
2019-03-27 20:29:25 -返回值 : main
2019-03-27 20:29:50 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-27 20:29:50 -==> Parameters: 1(Long)
2019-03-27 20:29:50 -<==      Total: 90
2019-03-27 20:29:50 -请求地址 : http://localhost:8081/charts/countDD
2019-03-27 20:29:50 -HTTP METHOD : GET
2019-03-27 20:29:50 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-03-27 20:29:50 -参数 : []
2019-03-27 20:29:50 -耗时 : 0
2019-03-27 20:29:50 -返回值 : charts/countDD
2019-03-27 20:29:54 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-27 20:29:54 -HTTP METHOD : GET
2019-03-27 20:29:54 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 20:29:54 -参数 : [userType]
2019-03-27 20:29:54 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 20:29:54 -==> Parameters: userType(String)
2019-03-27 20:29:54 -<==      Total: 2
2019-03-27 20:29:54 -耗时 : 62
2019-03-27 20:29:54 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 20:34:11 -请求地址 : http://localhost:8081/index
2019-03-27 20:34:11 -HTTP METHOD : GET
2019-03-27 20:34:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-27 20:34:11 -参数 : [{}]
2019-03-27 20:34:11 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-27 20:34:11 -==> Parameters: 1(Long)
2019-03-27 20:34:11 -<==      Total: 46
2019-03-27 20:34:11 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-27 20:34:11 -==> Parameters: 138(Long)
2019-03-27 20:34:11 -<==      Total: 1
2019-03-27 20:34:11 -耗时 : 36
2019-03-27 20:34:11 -返回值 : index_v1
2019-03-27 20:34:11 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-27 20:34:11 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 36(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-27 20:34:11.965(Timestamp)
2019-03-27 20:34:12 -<==    Updates: 1
2019-03-27 20:34:12 -请求地址 : http://localhost:8081/main
2019-03-27 20:34:12 -HTTP METHOD : GET
2019-03-27 20:34:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-27 20:34:12 -参数 : []
2019-03-27 20:34:12 -耗时 : 1
2019-03-27 20:34:12 -返回值 : main
2019-03-27 20:34:12 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-27 20:34:12 -HTTP METHOD : GET
2019-03-27 20:34:12 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-27 20:34:12 -参数 : []
2019-03-27 20:34:12 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-27 20:34:12 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-27 20:34:12 -<==      Total: 0
2019-03-27 20:34:12 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-27 20:34:12 -==> Parameters: 1(Long), 0(String)
2019-03-27 20:34:12 -<==      Total: 1
2019-03-27 20:34:12 -耗时 : 10
2019-03-27 20:34:12 -返回值 : com.bootdo.common.utils.PageUtils@213743d5
2019-03-27 20:34:12 -请求地址 : http://localhost:8081/main
2019-03-27 20:34:12 -HTTP METHOD : GET
2019-03-27 20:34:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-27 20:34:12 -参数 : []
2019-03-27 20:34:12 -耗时 : 1
2019-03-27 20:34:12 -返回值 : main
2019-03-27 20:34:35 -请求地址 : http://localhost:8081/charts/countDD
2019-03-27 20:34:35 -HTTP METHOD : GET
2019-03-27 20:34:35 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-03-27 20:34:35 -参数 : []
2019-03-27 20:34:35 -耗时 : 1
2019-03-27 20:34:35 -返回值 : charts/countDD
2019-03-27 20:34:36 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-27 20:34:36 -HTTP METHOD : GET
2019-03-27 20:34:36 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 20:34:36 -参数 : [userType]
2019-03-27 20:34:36 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 20:34:36 -==> Parameters: userType(String)
2019-03-27 20:34:36 -<==      Total: 2
2019-03-27 20:34:36 -耗时 : 8
2019-03-27 20:34:36 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 20:34:44 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-27 20:34:44 -HTTP METHOD : GET
2019-03-27 20:34:44 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-27 20:34:44 -参数 : []
2019-03-27 20:34:44 -耗时 : 1
2019-03-27 20:34:44 -返回值 : system/dept/deptTree
2019-03-27 20:34:44 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-27 20:34:44 -HTTP METHOD : GET
2019-03-27 20:34:44 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-27 20:34:44 -参数 : []
2019-03-27 20:34:44 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-27 20:34:44 -==> Parameters: 
2019-03-27 20:34:44 -<==      Total: 3
2019-03-27 20:34:44 -耗时 : 43
2019-03-27 20:34:44 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-27 20:34:47 -请求地址 : http://localhost:8081/charts/countDD/getCountDD
2019-03-27 20:34:47 -HTTP METHOD : POST
2019-03-27 20:34:47 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.getCountD
2019-03-27 20:34:47 -参数 : [{elecLogVo=com.bootdo.moneyLog.vo.ElecLogVo@547be4fa, org.springframework.validation.BindingResult.elecLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@69966f81, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, heatLogVo=com.bootdo.moneyLog.vo.HeatLogVo@48b0449d, org.springframework.validation.BindingResult.heatLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.ElecLogVo@547be4fa, com.bootdo.moneyLog.vo.WaterLogVo@69966f81, com.bootdo.moneyLog.vo.HeatLogVo@48b0449d]
2019-03-27 20:34:47 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG 
2019-03-27 20:34:47 -==> Parameters: 
2019-03-27 20:34:47 -<==      Total: 1
2019-03-27 20:34:47 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG 
2019-03-27 20:34:47 -==> Parameters: 
2019-03-27 20:34:47 -<==      Total: 1
2019-03-27 20:34:47 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG 
2019-03-27 20:34:47 -==> Parameters: 
2019-03-27 20:34:47 -<==      Total: 1
2019-03-27 20:34:47 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG 
2019-03-27 20:34:47 -==> Parameters: 
2019-03-27 20:34:47 -<==      Total: 1
2019-03-27 20:34:47 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG 
2019-03-27 20:34:47 -==> Parameters: 
2019-03-27 20:34:47 -<==      Total: 1
2019-03-27 20:34:47 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG 
2019-03-27 20:34:47 -==> Parameters: 
2019-03-27 20:34:47 -<==      Total: 1
2019-03-27 20:34:47 -耗时 : 94
2019-03-27 20:34:47 -返回值 : com.bootdo.charts.vo.CountDayVo@34226ef
2019-03-27 20:34:52 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:23)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:26)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:424)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:232)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-27 20:54:27 -请求地址 : http://localhost:8081/index
2019-03-27 20:54:27 -HTTP METHOD : GET
2019-03-27 20:54:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-27 20:54:27 -参数 : [{}]
2019-03-27 20:54:27 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-27 20:54:27 -==> Parameters: 1(Long)
2019-03-27 20:54:27 -<==      Total: 46
2019-03-27 20:54:27 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-27 20:54:27 -==> Parameters: 138(Long)
2019-03-27 20:54:27 -<==      Total: 1
2019-03-27 20:54:27 -耗时 : 284
2019-03-27 20:54:27 -返回值 : index_v1
2019-03-27 20:54:27 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-27 20:54:27 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 284(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-27 20:54:27.985(Timestamp)
2019-03-27 20:54:28 -<==    Updates: 1
2019-03-27 20:54:28 -请求地址 : http://localhost:8081/main
2019-03-27 20:54:28 -HTTP METHOD : GET
2019-03-27 20:54:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-27 20:54:28 -参数 : []
2019-03-27 20:54:28 -耗时 : 0
2019-03-27 20:54:28 -返回值 : main
2019-03-27 20:54:31 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-27 20:54:31 -HTTP METHOD : GET
2019-03-27 20:54:31 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-27 20:54:31 -参数 : []
2019-03-27 20:54:31 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-27 20:54:31 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-27 20:54:31 -请求地址 : http://localhost:8081/main
2019-03-27 20:54:31 -HTTP METHOD : GET
2019-03-27 20:54:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-27 20:54:31 -参数 : []
2019-03-27 20:54:31 -耗时 : 1
2019-03-27 20:54:31 -返回值 : main
2019-03-27 20:54:31 -<==      Total: 0
2019-03-27 20:54:31 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-27 20:54:31 -==> Parameters: 1(Long), 0(String)
2019-03-27 20:54:31 -<==      Total: 1
2019-03-27 20:54:31 -耗时 : 144
2019-03-27 20:54:31 -返回值 : com.bootdo.common.utils.PageUtils@765d9e65
2019-03-27 20:54:39 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-27 20:54:39 -==> Parameters: 1(Long)
2019-03-27 20:54:39 -<==      Total: 90
2019-03-27 20:54:39 -请求地址 : http://localhost:8081/charts/countDD
2019-03-27 20:54:39 -HTTP METHOD : GET
2019-03-27 20:54:39 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-03-27 20:54:39 -参数 : []
2019-03-27 20:54:39 -耗时 : 0
2019-03-27 20:54:39 -返回值 : charts/countDD
2019-03-27 20:54:41 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-27 20:54:41 -HTTP METHOD : GET
2019-03-27 20:54:41 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-27 20:54:41 -参数 : [userType]
2019-03-27 20:54:41 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-27 20:54:41 -==> Parameters: userType(String)
2019-03-27 20:54:41 -<==      Total: 2
2019-03-27 20:54:41 -耗时 : 5
2019-03-27 20:54:41 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-27 20:55:04 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-27 20:55:04 -HTTP METHOD : GET
2019-03-27 20:55:04 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-27 20:55:04 -参数 : []
2019-03-27 20:55:04 -耗时 : 1
2019-03-27 20:55:04 -返回值 : system/dept/deptTree
2019-03-27 20:55:04 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-27 20:55:04 -HTTP METHOD : GET
2019-03-27 20:55:04 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-27 20:55:04 -参数 : []
2019-03-27 20:55:04 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-27 20:55:04 -==> Parameters: 
2019-03-27 20:55:04 -<==      Total: 3
2019-03-27 20:55:04 -耗时 : 7
2019-03-27 20:55:04 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-27 20:55:19 -请求地址 : http://localhost:8081/charts/countDD/getCountDD
2019-03-27 20:55:19 -HTTP METHOD : POST
2019-03-27 20:55:19 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.getCountD
2019-03-27 20:55:19 -参数 : [{elecLogVo=com.bootdo.moneyLog.vo.ElecLogVo@49999cad, org.springframework.validation.BindingResult.elecLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@670404a9, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, heatLogVo=com.bootdo.moneyLog.vo.HeatLogVo@df67e30, org.springframework.validation.BindingResult.heatLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.ElecLogVo@49999cad, com.bootdo.moneyLog.vo.WaterLogVo@670404a9, com.bootdo.moneyLog.vo.HeatLogVo@df67e30]
2019-03-27 20:55:19 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG 
2019-03-27 20:55:19 -==> Parameters: 
2019-03-27 20:55:19 -<==      Total: 1
2019-03-27 20:55:19 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG 
2019-03-27 20:55:19 -==> Parameters: 
2019-03-27 20:55:19 -<==      Total: 1
2019-03-27 20:55:19 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG 
2019-03-27 20:55:19 -==> Parameters: 
2019-03-27 20:55:19 -<==      Total: 1
2019-03-27 20:55:19 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG 
2019-03-27 20:55:19 -==> Parameters: 
2019-03-27 20:55:19 -<==      Total: 1
2019-03-27 20:55:19 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG 
2019-03-27 20:55:19 -==> Parameters: 
2019-03-27 20:55:19 -<==      Total: 1
2019-03-27 20:55:19 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG 
2019-03-27 20:55:19 -==> Parameters: 
2019-03-27 20:55:19 -<==      Total: 1
2019-03-27 20:55:19 -耗时 : 22
2019-03-27 20:55:19 -返回值 : com.bootdo.charts.vo.CountDayVo@d6d99a3
2019-03-27 20:59:09 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 4 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(3)-CONNECTED(3)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 36], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 6], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 430]

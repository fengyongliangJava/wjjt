2019-03-26 08:33:18 -Starting BootdoApplication on ZJZL-20180906VX with PID 2748 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-26 08:33:18 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-26 08:33:18 -The following profiles are active: dev
2019-03-26 08:33:18 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@36676c1a: startup date [Tue Mar 26 08:33:18 CST 2019]; root of context hierarchy
2019-03-26 08:34:01 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-26 08:34:08 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$41999e89] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 08:34:08 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$33f2cd30] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 08:34:11 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 08:34:13 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 08:34:13 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 08:34:13 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-26 08:34:13 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-26 08:34:13 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 08:34:13 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 08:34:13 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 08:34:13 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 08:34:18 -Tomcat initialized with port(s): 8081 (http)
2019-03-26 08:34:18 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-26 08:34:18 -Starting service [Tomcat]
2019-03-26 08:34:18 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-26 08:34:19 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-26 08:34:20 -Initializing Spring embedded WebApplicationContext
2019-03-26 08:34:20 -Root WebApplicationContext: initialization completed in 61676 ms
2019-03-26 08:34:23 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-26 08:34:23 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-26 08:34:23 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-26 08:34:23 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-26 08:34:23 -Filter xssFilter was not registered (disabled)
2019-03-26 08:34:23 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-26 08:34:23 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-26 08:34:23 -Servlet statViewServlet mapped to [/druid/*]
2019-03-26 08:34:23 -Servlet dispatcherServlet mapped to [/]
2019-03-26 08:34:39 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@36676c1a: startup date [Tue Mar 26 08:33:18 CST 2019]; root of context hierarchy
2019-03-26 08:34:41 -Using default implementation for ThreadExecutor
2019-03-26 08:34:42 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-26 08:34:42 -Quartz Scheduler v.2.2.1 created.
2019-03-26 08:34:42 -RAMJobStore initialized.
2019-03-26 08:34:42 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-26 08:34:42 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-26 08:34:42 -Quartz scheduler version: 2.2.1
2019-03-26 08:34:42 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@4d0b276e
2019-03-26 08:34:44 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-26 08:34:44 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-26 08:34:49 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-03-26 08:34:49 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-26 08:34:49 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-26 08:34:49 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-26 08:34:49 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-26 08:34:49 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-26 08:34:49 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-26 08:34:49 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-26 08:34:49 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-26 08:34:49 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-26 08:34:49 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-26 08:34:49 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 08:34:49 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-26 08:34:49 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-26 08:34:49 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-26 08:34:50 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-26 08:34:50 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 08:34:50 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-26 08:34:50 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-26 08:34:50 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-26 08:34:50 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-26 08:34:50 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-26 08:34:50 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 08:34:50 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-26 08:34:50 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-26 08:34:50 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-26 08:34:50 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-26 08:34:50 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 08:34:50 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 08:34:50 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-26 08:34:50 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-26 08:34:50 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-26 08:34:50 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-26 08:34:50 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-26 08:34:50 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-26 08:34:50 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-26 08:34:50 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-26 08:34:50 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-26 08:34:50 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 08:34:50 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-26 08:34:50 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-26 08:34:50 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 08:34:50 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-26 08:34:50 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-26 08:34:50 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-26 08:34:50 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-26 08:34:50 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 08:34:50 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-26 08:34:50 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-03-26 08:34:50 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-26 08:34:50 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-26 08:34:50 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-26 08:34:50 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-26 08:34:50 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-26 08:34:50 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-26 08:34:50 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-26 08:34:50 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-26 08:34:50 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-26 08:34:50 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-26 08:34:50 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-26 08:34:50 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 08:34:50 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-26 08:34:50 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-26 08:34:50 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-03-26 08:34:50 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-26 08:34:50 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-26 08:34:50 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-26 08:34:50 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-26 08:34:50 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 08:34:50 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-03-26 08:34:50 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-26 08:34:50 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 08:34:50 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-26 08:34:50 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-26 08:34:50 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-26 08:34:50 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-26 08:34:50 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-26 08:34:50 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-26 08:34:50 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 08:34:50 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-26 08:34:50 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-26 08:34:50 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-26 08:34:50 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-26 08:34:50 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-26 08:34:50 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-26 08:34:50 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-26 08:34:50 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-26 08:34:50 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-26 08:34:50 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-26 08:34:50 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 08:34:50 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-26 08:34:50 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-26 08:34:50 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 08:34:50 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-03-26 08:34:50 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-26 08:34:50 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-03-26 08:34:50 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-26 08:34:50 -Mapped "{[/moneyList/moneyList/LikeName],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.LikeName(org.springframework.ui.Model)
2019-03-26 08:34:50 -Mapped "{[/moneyList/moneyList/UserList],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-26 08:34:50 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-26 08:34:50 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-26 08:34:50 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-26 08:34:50 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-26 08:34:50 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-26 08:34:50 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 08:34:50 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-26 08:34:50 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-26 08:34:50 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-26 08:34:50 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 08:34:50 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-26 08:34:50 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-26 08:34:50 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-26 08:34:50 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-26 08:34:50 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 08:34:50 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-26 08:34:50 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-26 08:34:50 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-26 08:34:50 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 08:34:50 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-26 08:34:50 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-26 08:34:50 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-26 08:34:50 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-26 08:34:50 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 08:34:50 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-26 08:34:50 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-26 08:34:50 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-26 08:34:50 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 08:34:50 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-26 08:34:50 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-26 08:34:50 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-26 08:34:50 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-26 08:34:50 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-26 08:34:50 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 08:34:50 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-26 08:34:50 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-26 08:34:50 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-26 08:34:50 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 08:34:50 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-26 08:34:50 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 08:34:50 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-26 08:34:50 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-26 08:34:50 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-26 08:34:50 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-26 08:34:50 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 08:34:50 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-26 08:34:50 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 08:34:50 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-26 08:34:50 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-26 08:34:50 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 08:34:50 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-26 08:34:50 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-26 08:34:50 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-26 08:34:50 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-26 08:34:50 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-26 08:34:50 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-26 08:34:50 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-26 08:34:50 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-26 08:34:50 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-26 08:34:50 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 08:34:50 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-26 08:34:50 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-26 08:34:50 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-26 08:34:50 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-26 08:34:50 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-26 08:34:50 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-26 08:34:50 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-26 08:34:50 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-26 08:34:50 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-26 08:34:50 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-26 08:34:50 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 08:34:50 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-26 08:34:50 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-26 08:34:50 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-26 08:34:50 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-26 08:34:50 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-26 08:34:50 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-26 08:34:50 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-26 08:34:50 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-26 08:34:50 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-26 08:34:50 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-26 08:34:50 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-26 08:34:50 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-26 08:34:50 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 08:34:50 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-26 08:34:50 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-26 08:34:50 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-26 08:34:50 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-26 08:34:50 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 08:34:50 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-26 08:34:50 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-26 08:34:50 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-26 08:34:50 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 08:34:50 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-26 08:34:50 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-26 08:34:50 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-26 08:34:50 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-26 08:34:50 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-26 08:34:50 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-26 08:34:50 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-26 08:34:50 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-26 08:34:50 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-26 08:34:50 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-26 08:34:50 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-26 08:34:50 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-26 08:34:50 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-26 08:34:50 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-26 08:34:50 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-26 08:34:50 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-26 08:34:50 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-26 08:34:50 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 08:34:50 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-26 08:34:50 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 08:34:50 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-26 08:34:50 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-26 08:34:50 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 08:34:50 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-26 08:34:50 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-26 08:34:50 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-26 08:34:50 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-26 08:34:50 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-26 08:34:50 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-26 08:34:50 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 08:34:50 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-26 08:34:50 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-26 08:34:50 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 08:34:50 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-26 08:34:50 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-26 08:34:50 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-03-26 08:34:50 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-03-26 08:34:50 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-26 08:34:50 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-26 08:34:50 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-26 08:34:50 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-26 08:34:51 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-26 08:34:52 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-26 08:34:52 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-26 08:34:53 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-26 08:34:53 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@36676c1a: startup date [Tue Mar 26 08:33:18 CST 2019]; root of context hierarchy
2019-03-26 08:34:53 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-26 08:34:53 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-26 08:34:53 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-26 08:34:54 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-26 08:34:54 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-26 08:34:59 -Registering beans for JMX exposure on startup
2019-03-26 08:34:59 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-26 08:34:59 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-26 08:34:59 -Starting beans in phase 2147483647
2019-03-26 08:34:59 -Context refreshed
2019-03-26 08:34:59 -Found 1 custom documentation plugin(s)
2019-03-26 08:34:59 -Scanning for api listing references
2019-03-26 08:35:00 -Generating unique operation named: removeUsingPOST_1
2019-03-26 08:35:00 -Generating unique operation named: addUsingGET_1
2019-03-26 08:35:00 -Generating unique operation named: editUsingGET_1
2019-03-26 08:35:00 -Generating unique operation named: listUsingGET_1
2019-03-26 08:35:00 -Generating unique operation named: removeUsingPOST_2
2019-03-26 08:35:00 -Generating unique operation named: removeUsingPOST_3
2019-03-26 08:35:00 -Generating unique operation named: saveUsingPOST_1
2019-03-26 08:35:01 -Generating unique operation named: updateUsingGET_1
2019-03-26 08:35:01 -Generating unique operation named: updateUsingHEAD_1
2019-03-26 08:35:01 -Generating unique operation named: updateUsingPOST_1
2019-03-26 08:35:01 -Generating unique operation named: updateUsingPUT_1
2019-03-26 08:35:01 -Generating unique operation named: updateUsingPATCH_1
2019-03-26 08:35:01 -Generating unique operation named: updateUsingDELETE_1
2019-03-26 08:35:01 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-26 08:35:01 -Generating unique operation named: updateUsingTRACE_1
2019-03-26 08:35:01 -Generating unique operation named: addUsingGET_2
2019-03-26 08:35:01 -Generating unique operation named: editUsingGET_2
2019-03-26 08:35:01 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-26 08:35:01 -Generating unique operation named: listUsingGET_2
2019-03-26 08:35:01 -Generating unique operation named: removeUsingPOST_4
2019-03-26 08:35:01 -Generating unique operation named: removeUsingPOST_5
2019-03-26 08:35:01 -Generating unique operation named: saveUsingPOST_2
2019-03-26 08:35:01 -Generating unique operation named: updateUsingGET_2
2019-03-26 08:35:01 -Generating unique operation named: updateUsingHEAD_2
2019-03-26 08:35:01 -Generating unique operation named: updateUsingPOST_2
2019-03-26 08:35:01 -Generating unique operation named: updateUsingPUT_2
2019-03-26 08:35:01 -Generating unique operation named: updateUsingPATCH_2
2019-03-26 08:35:01 -Generating unique operation named: updateUsingDELETE_2
2019-03-26 08:35:01 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-26 08:35:01 -Generating unique operation named: updateUsingTRACE_2
2019-03-26 08:35:01 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-26 08:35:01 -Generating unique operation named: addUsingGET_3
2019-03-26 08:35:01 -Generating unique operation named: editUsingGET_3
2019-03-26 08:35:01 -Generating unique operation named: listUsingGET_3
2019-03-26 08:35:01 -Generating unique operation named: removeUsingPOST_6
2019-03-26 08:35:01 -Generating unique operation named: removeUsingPOST_7
2019-03-26 08:35:01 -Generating unique operation named: saveUsingPOST_3
2019-03-26 08:35:01 -Generating unique operation named: updateUsingGET_3
2019-03-26 08:35:01 -Generating unique operation named: updateUsingHEAD_3
2019-03-26 08:35:01 -Generating unique operation named: updateUsingPOST_3
2019-03-26 08:35:01 -Generating unique operation named: updateUsingPUT_3
2019-03-26 08:35:01 -Generating unique operation named: updateUsingPATCH_3
2019-03-26 08:35:01 -Generating unique operation named: updateUsingDELETE_3
2019-03-26 08:35:01 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-26 08:35:01 -Generating unique operation named: updateUsingTRACE_3
2019-03-26 08:35:01 -Generating unique operation named: addUsingGET_4
2019-03-26 08:35:01 -Generating unique operation named: editUsingGET_4
2019-03-26 08:35:01 -Generating unique operation named: listUsingGET_4
2019-03-26 08:35:01 -Generating unique operation named: removeUsingPOST_8
2019-03-26 08:35:01 -Generating unique operation named: removeUsingPOST_9
2019-03-26 08:35:01 -Generating unique operation named: saveUsingPOST_4
2019-03-26 08:35:01 -Generating unique operation named: updateUsingGET_4
2019-03-26 08:35:01 -Generating unique operation named: updateUsingHEAD_4
2019-03-26 08:35:01 -Generating unique operation named: updateUsingPOST_4
2019-03-26 08:35:01 -Generating unique operation named: updateUsingPUT_4
2019-03-26 08:35:01 -Generating unique operation named: updateUsingPATCH_4
2019-03-26 08:35:01 -Generating unique operation named: updateUsingDELETE_4
2019-03-26 08:35:01 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-26 08:35:01 -Generating unique operation named: updateUsingTRACE_4
2019-03-26 08:35:01 -Generating unique operation named: ElecUsingGET_1
2019-03-26 08:35:01 -Generating unique operation named: addUsingGET_5
2019-03-26 08:35:01 -Generating unique operation named: editUsingGET_5
2019-03-26 08:35:01 -Generating unique operation named: listUsingGET_5
2019-03-26 08:35:01 -Generating unique operation named: removeUsingPOST_10
2019-03-26 08:35:01 -Generating unique operation named: removeUsingPOST_11
2019-03-26 08:35:01 -Generating unique operation named: saveUsingPOST_5
2019-03-26 08:35:01 -Generating unique operation named: updateUsingGET_5
2019-03-26 08:35:01 -Generating unique operation named: updateUsingHEAD_5
2019-03-26 08:35:01 -Generating unique operation named: updateUsingPOST_5
2019-03-26 08:35:01 -Generating unique operation named: updateUsingPUT_5
2019-03-26 08:35:02 -Generating unique operation named: updateUsingPATCH_5
2019-03-26 08:35:02 -Generating unique operation named: updateUsingDELETE_5
2019-03-26 08:35:02 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-26 08:35:02 -Generating unique operation named: updateUsingTRACE_5
2019-03-26 08:35:02 -Generating unique operation named: editUsingGET_6
2019-03-26 08:35:02 -Generating unique operation named: listUsingGET_6
2019-03-26 08:35:02 -Generating unique operation named: updateUsingPOST_6
2019-03-26 08:35:02 -Generating unique operation named: addUsingGET_6
2019-03-26 08:35:02 -Generating unique operation named: editUsingGET_7
2019-03-26 08:35:02 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-26 08:35:02 -Generating unique operation named: listUsingGET_7
2019-03-26 08:35:02 -Generating unique operation named: removeUsingPOST_12
2019-03-26 08:35:02 -Generating unique operation named: removeUsingPOST_13
2019-03-26 08:35:02 -Generating unique operation named: saveUsingPOST_6
2019-03-26 08:35:02 -Generating unique operation named: updateUsingGET_6
2019-03-26 08:35:02 -Generating unique operation named: updateUsingHEAD_6
2019-03-26 08:35:02 -Generating unique operation named: updateUsingPOST_7
2019-03-26 08:35:02 -Generating unique operation named: updateUsingPUT_6
2019-03-26 08:35:02 -Generating unique operation named: updateUsingPATCH_6
2019-03-26 08:35:02 -Generating unique operation named: updateUsingDELETE_6
2019-03-26 08:35:02 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-26 08:35:02 -Generating unique operation named: updateUsingTRACE_6
2019-03-26 08:35:02 -Generating unique operation named: exprotExcelUsingGET_4
2019-03-26 08:35:02 -Generating unique operation named: addUsingGET_7
2019-03-26 08:35:02 -Generating unique operation named: editUsingGET_8
2019-03-26 08:35:02 -Generating unique operation named: listUsingGET_8
2019-03-26 08:35:02 -Generating unique operation named: removeUsingPOST_14
2019-03-26 08:35:02 -Generating unique operation named: removeUsingPOST_15
2019-03-26 08:35:02 -Generating unique operation named: saveUsingPOST_7
2019-03-26 08:35:02 -Generating unique operation named: updateUsingGET_7
2019-03-26 08:35:02 -Generating unique operation named: updateUsingHEAD_7
2019-03-26 08:35:02 -Generating unique operation named: updateUsingPOST_8
2019-03-26 08:35:02 -Generating unique operation named: updateUsingPUT_7
2019-03-26 08:35:02 -Generating unique operation named: updateUsingPATCH_7
2019-03-26 08:35:02 -Generating unique operation named: updateUsingDELETE_7
2019-03-26 08:35:02 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-26 08:35:02 -Generating unique operation named: updateUsingTRACE_7
2019-03-26 08:35:02 -Generating unique operation named: addUsingGET_8
2019-03-26 08:35:02 -Generating unique operation named: editUsingGET_9
2019-03-26 08:35:02 -Generating unique operation named: listUsingGET_9
2019-03-26 08:35:02 -Generating unique operation named: removeUsingPOST_16
2019-03-26 08:35:02 -Generating unique operation named: removeUsingPOST_17
2019-03-26 08:35:02 -Generating unique operation named: saveUsingPOST_8
2019-03-26 08:35:02 -Generating unique operation named: updateUsingGET_8
2019-03-26 08:35:02 -Generating unique operation named: updateUsingHEAD_8
2019-03-26 08:35:02 -Generating unique operation named: updateUsingPOST_9
2019-03-26 08:35:02 -Generating unique operation named: updateUsingPUT_8
2019-03-26 08:35:02 -Generating unique operation named: updateUsingPATCH_8
2019-03-26 08:35:02 -Generating unique operation named: updateUsingDELETE_8
2019-03-26 08:35:02 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-26 08:35:02 -Generating unique operation named: updateUsingTRACE_8
2019-03-26 08:35:02 -Generating unique operation named: addUsingGET_9
2019-03-26 08:35:02 -Generating unique operation named: editUsingGET_10
2019-03-26 08:35:02 -Generating unique operation named: infoUsingGET_1
2019-03-26 08:35:02 -Generating unique operation named: infoUsingHEAD_1
2019-03-26 08:35:02 -Generating unique operation named: infoUsingPOST_1
2019-03-26 08:35:02 -Generating unique operation named: infoUsingPUT_1
2019-03-26 08:35:02 -Generating unique operation named: infoUsingPATCH_1
2019-03-26 08:35:02 -Generating unique operation named: infoUsingDELETE_1
2019-03-26 08:35:02 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-26 08:35:02 -Generating unique operation named: infoUsingTRACE_1
2019-03-26 08:35:02 -Generating unique operation named: listUsingGET_10
2019-03-26 08:35:02 -Generating unique operation named: removeUsingPOST_18
2019-03-26 08:35:02 -Generating unique operation named: removeUsingPOST_19
2019-03-26 08:35:02 -Generating unique operation named: saveUsingPOST_9
2019-03-26 08:35:02 -Generating unique operation named: updateUsingPOST_10
2019-03-26 08:35:03 -Generating unique operation named: listUsingGET_11
2019-03-26 08:35:03 -Generating unique operation named: removeUsingPOST_20
2019-03-26 08:35:03 -Generating unique operation named: welcomeUsingGET_1
2019-03-26 08:35:03 -Generating unique operation named: addUsingGET_10
2019-03-26 08:35:03 -Generating unique operation named: editUsingGET_11
2019-03-26 08:35:03 -Generating unique operation named: listUsingGET_12
2019-03-26 08:35:03 -Generating unique operation named: removeUsingPOST_21
2019-03-26 08:35:03 -Generating unique operation named: saveUsingPOST_10
2019-03-26 08:35:03 -Generating unique operation named: treeUsingGET_1
2019-03-26 08:35:03 -Generating unique operation named: treeUsingGET_2
2019-03-26 08:35:03 -Generating unique operation named: updateUsingPOST_11
2019-03-26 08:35:03 -Generating unique operation named: addUsingGET_11
2019-03-26 08:35:03 -Generating unique operation named: editUsingGET_12
2019-03-26 08:35:03 -Generating unique operation named: listUsingGET_13
2019-03-26 08:35:03 -Generating unique operation named: removeUsingPOST_22
2019-03-26 08:35:03 -Generating unique operation named: removeUsingPOST_23
2019-03-26 08:35:03 -Generating unique operation named: saveUsingPOST_11
2019-03-26 08:35:03 -Generating unique operation named: updateUsingGET_9
2019-03-26 08:35:03 -Generating unique operation named: updateUsingHEAD_9
2019-03-26 08:35:03 -Generating unique operation named: updateUsingPOST_12
2019-03-26 08:35:03 -Generating unique operation named: updateUsingPUT_9
2019-03-26 08:35:03 -Generating unique operation named: updateUsingPATCH_9
2019-03-26 08:35:03 -Generating unique operation named: updateUsingDELETE_9
2019-03-26 08:35:03 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-26 08:35:03 -Generating unique operation named: updateUsingTRACE_9
2019-03-26 08:35:03 -Generating unique operation named: addUsingGET_12
2019-03-26 08:35:03 -Generating unique operation named: editUsingGET_13
2019-03-26 08:35:03 -Generating unique operation named: listUsingGET_14
2019-03-26 08:35:03 -Generating unique operation named: removeUsingPOST_24
2019-03-26 08:35:03 -Generating unique operation named: removeUsingPOST_25
2019-03-26 08:35:03 -Generating unique operation named: saveUsingPOST_12
2019-03-26 08:35:03 -Generating unique operation named: updateUsingGET_10
2019-03-26 08:35:03 -Generating unique operation named: updateUsingHEAD_10
2019-03-26 08:35:03 -Generating unique operation named: updateUsingPOST_13
2019-03-26 08:35:03 -Generating unique operation named: updateUsingPUT_10
2019-03-26 08:35:03 -Generating unique operation named: updateUsingPATCH_10
2019-03-26 08:35:03 -Generating unique operation named: updateUsingDELETE_10
2019-03-26 08:35:03 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-26 08:35:03 -Generating unique operation named: updateUsingTRACE_10
2019-03-26 08:35:03 -Generating unique operation named: addUsingGET_13
2019-03-26 08:35:03 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-26 08:35:03 -Generating unique operation named: editUsingGET_14
2019-03-26 08:35:03 -Generating unique operation named: listUsingGET_15
2019-03-26 08:35:03 -Generating unique operation named: saveUsingPOST_13
2019-03-26 08:35:03 -Generating unique operation named: saveUsingPOST_14
2019-03-26 08:35:03 -Generating unique operation named: updateUsingPOST_14
2019-03-26 08:35:03 -Generating unique operation named: listUsingGET_16
2019-03-26 08:35:03 -Generating unique operation named: listUsingHEAD_1
2019-03-26 08:35:03 -Generating unique operation named: listUsingPOST_1
2019-03-26 08:35:03 -Generating unique operation named: listUsingPUT_1
2019-03-26 08:35:03 -Generating unique operation named: listUsingPATCH_1
2019-03-26 08:35:03 -Generating unique operation named: listUsingDELETE_1
2019-03-26 08:35:03 -Generating unique operation named: listUsingOPTIONS_1
2019-03-26 08:35:03 -Generating unique operation named: listUsingTRACE_1
2019-03-26 08:35:03 -Generating unique operation named: addUsingGET_14
2019-03-26 08:35:03 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-26 08:35:03 -Generating unique operation named: editUsingGET_15
2019-03-26 08:35:03 -Generating unique operation named: listUsingGET_17
2019-03-26 08:35:03 -Generating unique operation named: removeUsingPOST_26
2019-03-26 08:35:03 -Generating unique operation named: saveUsingPOST_15
2019-03-26 08:35:03 -Generating unique operation named: treeUsingGET_3
2019-03-26 08:35:03 -Generating unique operation named: treeViewUsingGET_1
2019-03-26 08:35:03 -Generating unique operation named: updateUsingPOST_15
2019-03-26 08:35:03 -Generating unique operation named: addUsingGET_15
2019-03-26 08:35:03 -Generating unique operation named: editUsingGET_16
2019-03-26 08:35:03 -Generating unique operation named: exprotExcelUsingGET_5
2019-03-26 08:35:03 -Generating unique operation named: listUsingGET_18
2019-03-26 08:35:03 -Generating unique operation named: removeUsingPOST_27
2019-03-26 08:35:03 -Generating unique operation named: removeUsingPOST_28
2019-03-26 08:35:03 -Generating unique operation named: saveUsingPOST_16
2019-03-26 08:35:03 -Generating unique operation named: updateUsingGET_11
2019-03-26 08:35:03 -Generating unique operation named: updateUsingHEAD_11
2019-03-26 08:35:03 -Generating unique operation named: updateUsingPOST_16
2019-03-26 08:35:03 -Generating unique operation named: updateUsingPUT_11
2019-03-26 08:35:03 -Generating unique operation named: updateUsingPATCH_11
2019-03-26 08:35:03 -Generating unique operation named: updateUsingDELETE_11
2019-03-26 08:35:03 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-26 08:35:03 -Generating unique operation named: updateUsingTRACE_11
2019-03-26 08:35:03 -Generating unique operation named: exprotExcelUsingGET_6
2019-03-26 08:35:03 -Generating unique operation named: addUsingGET_16
2019-03-26 08:35:03 -Generating unique operation named: editUsingGET_17
2019-03-26 08:35:03 -Generating unique operation named: listUsingGET_19
2019-03-26 08:35:03 -Generating unique operation named: removeUsingPOST_29
2019-03-26 08:35:03 -Generating unique operation named: removeUsingPOST_30
2019-03-26 08:35:03 -Generating unique operation named: saveUsingPOST_17
2019-03-26 08:35:03 -Generating unique operation named: updateUsingGET_12
2019-03-26 08:35:03 -Generating unique operation named: updateUsingHEAD_12
2019-03-26 08:35:03 -Generating unique operation named: updateUsingPOST_17
2019-03-26 08:35:03 -Generating unique operation named: updateUsingPUT_12
2019-03-26 08:35:03 -Generating unique operation named: updateUsingPATCH_12
2019-03-26 08:35:03 -Generating unique operation named: updateUsingDELETE_12
2019-03-26 08:35:03 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-26 08:35:04 -Generating unique operation named: updateUsingTRACE_12
2019-03-26 08:35:04 -Generating unique operation named: addUsingGET_17
2019-03-26 08:35:04 -Generating unique operation named: editUsingGET_18
2019-03-26 08:35:04 -Generating unique operation named: listUsingGET_20
2019-03-26 08:35:04 -Generating unique operation named: removeUsingPOST_31
2019-03-26 08:35:04 -Generating unique operation named: removeUsingPOST_32
2019-03-26 08:35:04 -Generating unique operation named: saveUsingPOST_18
2019-03-26 08:35:04 -Generating unique operation named: updateUsingGET_13
2019-03-26 08:35:04 -Generating unique operation named: updateUsingHEAD_13
2019-03-26 08:35:04 -Generating unique operation named: updateUsingPOST_18
2019-03-26 08:35:04 -Generating unique operation named: updateUsingPUT_13
2019-03-26 08:35:04 -Generating unique operation named: updateUsingPATCH_13
2019-03-26 08:35:04 -Generating unique operation named: updateUsingDELETE_13
2019-03-26 08:35:04 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-26 08:35:04 -Generating unique operation named: updateUsingTRACE_13
2019-03-26 08:35:04 -Starting Quartz Scheduler now
2019-03-26 08:35:04 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-26 08:35:04 -Starting...
2019-03-26 08:35:04 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-26 08:35:04 -Started.
2019-03-26 08:35:04 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-26 08:35:04 -Using a shared selector for servlet write/read
2019-03-26 08:35:05 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-26 08:35:05 -Started BootdoApplication in 119.026 seconds (JVM running for 123.988)
2019-03-26 08:35:05 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-26 08:35:06 -==> Parameters: 
2019-03-26 08:35:07 -<==      Total: 1
2019-03-26 08:35:37 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-26 08:35:37 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-26 08:35:37 -FrameworkServlet 'dispatcherServlet': initialization completed in 144 ms
2019-03-26 08:35:37 -Enabling session validation scheduler...
2019-03-26 08:35:37 -请求地址 : http://localhost:8081/
2019-03-26 08:35:37 -HTTP METHOD : GET
2019-03-26 08:35:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2019-03-26 08:35:37 -参数 : [{}]
2019-03-26 08:35:37 -耗时 : 5
2019-03-26 08:35:37 -返回值 : redirect:/index
2019-03-26 08:35:38 -请求地址 : http://localhost:8081/login;JSESSIONID=c09cc302-bc8f-4074-886b-a599f33704e2
2019-03-26 08:35:38 -HTTP METHOD : GET
2019-03-26 08:35:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-26 08:35:38 -参数 : [{}]
2019-03-26 08:35:38 -耗时 : 4
2019-03-26 08:35:38 -返回值 : login
2019-03-26 08:35:44 -请求地址 : http://localhost:8081/getVerify
2019-03-26 08:35:44 -HTTP METHOD : GET
2019-03-26 08:35:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-26 08:35:44 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@32c1bba8, org.apache.shiro.web.servlet.ShiroHttpServletResponse@77c33394]
2019-03-26 08:35:50 -9362
2019-03-26 08:35:50 -耗时 : 6227
2019-03-26 08:35:50 -返回值 : null
2019-03-26 08:35:52 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-03-26 08:39:58 -Starting BootdoApplication on ZJZL-20180906VX with PID 8620 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-26 08:39:58 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-26 08:39:58 -The following profiles are active: dev
2019-03-26 08:39:58 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Tue Mar 26 08:39:58 CST 2019]; root of context hierarchy
2019-03-26 08:40:01 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-26 08:40:02 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$740a37bd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 08:40:02 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$66636664] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 08:40:03 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 08:40:04 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 08:40:04 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 08:40:04 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-26 08:40:04 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-26 08:40:04 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 08:40:04 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 08:40:04 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 08:40:04 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 08:40:04 -Tomcat initialized with port(s): 8081 (http)
2019-03-26 08:40:05 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-26 08:40:05 -Starting service [Tomcat]
2019-03-26 08:40:05 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-26 08:40:05 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-26 08:40:05 -Initializing Spring embedded WebApplicationContext
2019-03-26 08:40:05 -Root WebApplicationContext: initialization completed in 6761 ms
2019-03-26 08:40:05 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-26 08:40:05 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-26 08:40:05 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-26 08:40:05 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-26 08:40:05 -Filter xssFilter was not registered (disabled)
2019-03-26 08:40:05 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-26 08:40:05 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-26 08:40:05 -Servlet statViewServlet mapped to [/druid/*]
2019-03-26 08:40:05 -Servlet dispatcherServlet mapped to [/]
2019-03-26 08:40:07 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Tue Mar 26 08:39:58 CST 2019]; root of context hierarchy
2019-03-26 08:40:08 -Using default implementation for ThreadExecutor
2019-03-26 08:40:08 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-26 08:40:08 -Quartz Scheduler v.2.2.1 created.
2019-03-26 08:40:08 -RAMJobStore initialized.
2019-03-26 08:40:08 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-26 08:40:08 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-26 08:40:08 -Quartz scheduler version: 2.2.1
2019-03-26 08:40:08 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@541d4d9f
2019-03-26 08:40:08 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-26 08:40:08 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-26 08:40:10 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-03-26 08:40:10 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-26 08:40:10 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-26 08:40:10 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-26 08:40:10 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-26 08:40:10 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-26 08:40:10 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-26 08:40:10 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-26 08:40:10 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-26 08:40:10 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-26 08:40:10 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-26 08:40:10 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 08:40:10 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-26 08:40:10 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-26 08:40:10 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-26 08:40:10 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 08:40:10 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-26 08:40:10 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-26 08:40:10 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-26 08:40:10 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-26 08:40:10 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-26 08:40:10 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-26 08:40:10 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 08:40:10 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-26 08:40:10 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-26 08:40:10 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 08:40:10 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-26 08:40:10 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-26 08:40:10 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 08:40:10 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-26 08:40:10 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-26 08:40:10 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-26 08:40:10 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-26 08:40:10 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-26 08:40:10 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-26 08:40:10 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-26 08:40:10 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-26 08:40:10 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-26 08:40:10 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 08:40:10 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-26 08:40:10 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-26 08:40:10 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 08:40:10 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-26 08:40:10 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-26 08:40:11 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-26 08:40:11 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-26 08:40:11 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 08:40:11 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-26 08:40:11 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-03-26 08:40:11 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-26 08:40:11 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-26 08:40:11 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-26 08:40:11 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-26 08:40:11 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-26 08:40:11 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-26 08:40:11 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-26 08:40:11 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-26 08:40:11 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-26 08:40:11 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-26 08:40:11 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-26 08:40:11 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 08:40:11 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-26 08:40:11 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-26 08:40:11 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-03-26 08:40:11 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-26 08:40:11 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-26 08:40:11 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-26 08:40:11 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-26 08:40:11 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 08:40:11 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-03-26 08:40:11 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-26 08:40:11 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 08:40:11 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-26 08:40:11 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-26 08:40:11 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-26 08:40:11 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-26 08:40:11 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-26 08:40:11 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-26 08:40:11 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 08:40:11 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-26 08:40:11 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-26 08:40:11 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-26 08:40:11 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-26 08:40:11 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-26 08:40:11 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-26 08:40:11 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-26 08:40:11 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-26 08:40:11 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-26 08:40:11 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-26 08:40:11 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 08:40:11 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-26 08:40:11 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-26 08:40:11 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 08:40:11 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-26 08:40:11 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-03-26 08:40:11 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-26 08:40:11 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-03-26 08:40:11 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-26 08:40:11 -Mapped "{[/moneyList/moneyList/LikeName],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.LikeName(org.springframework.ui.Model)
2019-03-26 08:40:11 -Mapped "{[/moneyList/moneyList/UserList],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-26 08:40:11 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-26 08:40:11 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-26 08:40:11 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-26 08:40:11 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-26 08:40:11 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 08:40:11 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-26 08:40:11 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-26 08:40:11 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-26 08:40:11 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 08:40:11 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-26 08:40:11 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-26 08:40:11 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-26 08:40:11 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-26 08:40:11 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 08:40:11 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-26 08:40:11 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-26 08:40:11 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-26 08:40:11 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 08:40:11 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-26 08:40:11 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-26 08:40:11 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-26 08:40:11 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-26 08:40:11 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 08:40:11 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-26 08:40:11 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-26 08:40:11 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-26 08:40:11 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 08:40:11 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-26 08:40:11 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-26 08:40:11 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-26 08:40:11 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-26 08:40:11 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-26 08:40:11 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 08:40:11 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-26 08:40:11 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-26 08:40:11 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 08:40:11 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-26 08:40:11 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-26 08:40:11 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 08:40:11 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-26 08:40:11 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-26 08:40:11 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-26 08:40:11 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-26 08:40:11 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 08:40:11 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-26 08:40:11 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 08:40:11 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-26 08:40:11 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-26 08:40:11 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 08:40:11 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-26 08:40:11 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-26 08:40:11 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-26 08:40:11 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-26 08:40:11 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-26 08:40:11 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-26 08:40:11 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-26 08:40:11 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-26 08:40:11 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-26 08:40:11 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 08:40:11 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-26 08:40:11 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-26 08:40:11 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-26 08:40:11 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-26 08:40:11 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-26 08:40:11 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-26 08:40:11 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-26 08:40:11 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-26 08:40:11 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-26 08:40:11 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-26 08:40:11 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 08:40:11 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-26 08:40:11 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-26 08:40:11 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-26 08:40:11 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-26 08:40:11 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-26 08:40:11 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-26 08:40:11 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-26 08:40:11 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-26 08:40:11 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-26 08:40:11 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-26 08:40:11 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-26 08:40:11 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-26 08:40:11 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 08:40:11 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-26 08:40:11 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-26 08:40:11 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-26 08:40:11 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-26 08:40:11 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 08:40:11 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-26 08:40:11 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-26 08:40:11 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-26 08:40:11 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 08:40:11 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-26 08:40:11 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-26 08:40:11 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-26 08:40:11 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-26 08:40:11 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-26 08:40:11 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-26 08:40:11 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-26 08:40:11 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-26 08:40:11 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-26 08:40:11 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-26 08:40:11 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-26 08:40:11 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-26 08:40:11 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-26 08:40:11 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-26 08:40:11 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-26 08:40:11 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-26 08:40:11 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-26 08:40:11 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 08:40:11 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-26 08:40:11 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-26 08:40:11 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 08:40:11 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-26 08:40:11 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 08:40:11 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-26 08:40:11 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-26 08:40:11 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-26 08:40:11 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-26 08:40:11 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-26 08:40:11 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-26 08:40:11 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 08:40:11 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-26 08:40:11 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 08:40:11 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-26 08:40:11 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-26 08:40:11 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-03-26 08:40:11 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-03-26 08:40:11 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-26 08:40:11 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-26 08:40:11 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-26 08:40:11 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-26 08:40:11 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-26 08:40:12 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-26 08:40:12 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-26 08:40:12 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-26 08:40:12 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-26 08:40:12 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Tue Mar 26 08:39:58 CST 2019]; root of context hierarchy
2019-03-26 08:40:13 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-26 08:40:13 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-26 08:40:13 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-26 08:40:13 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-26 08:40:13 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-26 08:40:15 -Registering beans for JMX exposure on startup
2019-03-26 08:40:15 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-26 08:40:15 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-26 08:40:15 -Starting beans in phase 2147483647
2019-03-26 08:40:15 -Context refreshed
2019-03-26 08:40:15 -Found 1 custom documentation plugin(s)
2019-03-26 08:40:15 -Scanning for api listing references
2019-03-26 08:40:15 -Generating unique operation named: removeUsingPOST_1
2019-03-26 08:40:15 -Generating unique operation named: addUsingGET_1
2019-03-26 08:40:15 -Generating unique operation named: editUsingGET_1
2019-03-26 08:40:15 -Generating unique operation named: listUsingGET_1
2019-03-26 08:40:15 -Generating unique operation named: removeUsingPOST_2
2019-03-26 08:40:15 -Generating unique operation named: removeUsingPOST_3
2019-03-26 08:40:15 -Generating unique operation named: saveUsingPOST_1
2019-03-26 08:40:15 -Generating unique operation named: updateUsingGET_1
2019-03-26 08:40:15 -Generating unique operation named: updateUsingHEAD_1
2019-03-26 08:40:15 -Generating unique operation named: updateUsingPOST_1
2019-03-26 08:40:15 -Generating unique operation named: updateUsingPUT_1
2019-03-26 08:40:15 -Generating unique operation named: updateUsingPATCH_1
2019-03-26 08:40:15 -Generating unique operation named: updateUsingDELETE_1
2019-03-26 08:40:15 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-26 08:40:15 -Generating unique operation named: updateUsingTRACE_1
2019-03-26 08:40:15 -Generating unique operation named: addUsingGET_2
2019-03-26 08:40:15 -Generating unique operation named: editUsingGET_2
2019-03-26 08:40:15 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-26 08:40:16 -Generating unique operation named: listUsingGET_2
2019-03-26 08:40:16 -Generating unique operation named: removeUsingPOST_4
2019-03-26 08:40:16 -Generating unique operation named: removeUsingPOST_5
2019-03-26 08:40:16 -Generating unique operation named: saveUsingPOST_2
2019-03-26 08:40:16 -Generating unique operation named: updateUsingGET_2
2019-03-26 08:40:16 -Generating unique operation named: updateUsingHEAD_2
2019-03-26 08:40:16 -Generating unique operation named: updateUsingPOST_2
2019-03-26 08:40:16 -Generating unique operation named: updateUsingPUT_2
2019-03-26 08:40:16 -Generating unique operation named: updateUsingPATCH_2
2019-03-26 08:40:16 -Generating unique operation named: updateUsingDELETE_2
2019-03-26 08:40:16 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-26 08:40:16 -Generating unique operation named: updateUsingTRACE_2
2019-03-26 08:40:16 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-26 08:40:16 -Generating unique operation named: addUsingGET_3
2019-03-26 08:40:16 -Generating unique operation named: editUsingGET_3
2019-03-26 08:40:16 -Generating unique operation named: listUsingGET_3
2019-03-26 08:40:16 -Generating unique operation named: removeUsingPOST_6
2019-03-26 08:40:16 -Generating unique operation named: removeUsingPOST_7
2019-03-26 08:40:16 -Generating unique operation named: saveUsingPOST_3
2019-03-26 08:40:16 -Generating unique operation named: updateUsingGET_3
2019-03-26 08:40:16 -Generating unique operation named: updateUsingHEAD_3
2019-03-26 08:40:16 -Generating unique operation named: updateUsingPOST_3
2019-03-26 08:40:16 -Generating unique operation named: updateUsingPUT_3
2019-03-26 08:40:16 -Generating unique operation named: updateUsingPATCH_3
2019-03-26 08:40:16 -Generating unique operation named: updateUsingDELETE_3
2019-03-26 08:40:16 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-26 08:40:16 -Generating unique operation named: updateUsingTRACE_3
2019-03-26 08:40:16 -Generating unique operation named: addUsingGET_4
2019-03-26 08:40:16 -Generating unique operation named: editUsingGET_4
2019-03-26 08:40:16 -Generating unique operation named: listUsingGET_4
2019-03-26 08:40:16 -Generating unique operation named: removeUsingPOST_8
2019-03-26 08:40:16 -Generating unique operation named: removeUsingPOST_9
2019-03-26 08:40:16 -Generating unique operation named: saveUsingPOST_4
2019-03-26 08:40:16 -Generating unique operation named: updateUsingGET_4
2019-03-26 08:40:16 -Generating unique operation named: updateUsingHEAD_4
2019-03-26 08:40:16 -Generating unique operation named: updateUsingPOST_4
2019-03-26 08:40:16 -Generating unique operation named: updateUsingPUT_4
2019-03-26 08:40:16 -Generating unique operation named: updateUsingPATCH_4
2019-03-26 08:40:16 -Generating unique operation named: updateUsingDELETE_4
2019-03-26 08:40:16 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-26 08:40:16 -Generating unique operation named: updateUsingTRACE_4
2019-03-26 08:40:16 -Generating unique operation named: ElecUsingGET_1
2019-03-26 08:40:16 -Generating unique operation named: addUsingGET_5
2019-03-26 08:40:16 -Generating unique operation named: editUsingGET_5
2019-03-26 08:40:16 -Generating unique operation named: listUsingGET_5
2019-03-26 08:40:16 -Generating unique operation named: removeUsingPOST_10
2019-03-26 08:40:16 -Generating unique operation named: removeUsingPOST_11
2019-03-26 08:40:16 -Generating unique operation named: saveUsingPOST_5
2019-03-26 08:40:16 -Generating unique operation named: updateUsingGET_5
2019-03-26 08:40:16 -Generating unique operation named: updateUsingHEAD_5
2019-03-26 08:40:16 -Generating unique operation named: updateUsingPOST_5
2019-03-26 08:40:16 -Generating unique operation named: updateUsingPUT_5
2019-03-26 08:40:16 -Generating unique operation named: updateUsingPATCH_5
2019-03-26 08:40:16 -Generating unique operation named: updateUsingDELETE_5
2019-03-26 08:40:16 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-26 08:40:16 -Generating unique operation named: updateUsingTRACE_5
2019-03-26 08:40:16 -Generating unique operation named: editUsingGET_6
2019-03-26 08:40:16 -Generating unique operation named: listUsingGET_6
2019-03-26 08:40:16 -Generating unique operation named: updateUsingPOST_6
2019-03-26 08:40:16 -Generating unique operation named: addUsingGET_6
2019-03-26 08:40:16 -Generating unique operation named: editUsingGET_7
2019-03-26 08:40:16 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-26 08:40:16 -Generating unique operation named: listUsingGET_7
2019-03-26 08:40:16 -Generating unique operation named: removeUsingPOST_12
2019-03-26 08:40:16 -Generating unique operation named: removeUsingPOST_13
2019-03-26 08:40:16 -Generating unique operation named: saveUsingPOST_6
2019-03-26 08:40:16 -Generating unique operation named: updateUsingGET_6
2019-03-26 08:40:16 -Generating unique operation named: updateUsingHEAD_6
2019-03-26 08:40:16 -Generating unique operation named: updateUsingPOST_7
2019-03-26 08:40:16 -Generating unique operation named: updateUsingPUT_6
2019-03-26 08:40:16 -Generating unique operation named: updateUsingPATCH_6
2019-03-26 08:40:16 -Generating unique operation named: updateUsingDELETE_6
2019-03-26 08:40:16 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-26 08:40:16 -Generating unique operation named: updateUsingTRACE_6
2019-03-26 08:40:16 -Generating unique operation named: exprotExcelUsingGET_4
2019-03-26 08:40:16 -Generating unique operation named: addUsingGET_7
2019-03-26 08:40:16 -Generating unique operation named: editUsingGET_8
2019-03-26 08:40:16 -Generating unique operation named: listUsingGET_8
2019-03-26 08:40:16 -Generating unique operation named: removeUsingPOST_14
2019-03-26 08:40:16 -Generating unique operation named: removeUsingPOST_15
2019-03-26 08:40:16 -Generating unique operation named: saveUsingPOST_7
2019-03-26 08:40:16 -Generating unique operation named: updateUsingGET_7
2019-03-26 08:40:16 -Generating unique operation named: updateUsingHEAD_7
2019-03-26 08:40:16 -Generating unique operation named: updateUsingPOST_8
2019-03-26 08:40:16 -Generating unique operation named: updateUsingPUT_7
2019-03-26 08:40:16 -Generating unique operation named: updateUsingPATCH_7
2019-03-26 08:40:16 -Generating unique operation named: updateUsingDELETE_7
2019-03-26 08:40:16 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-26 08:40:16 -Generating unique operation named: updateUsingTRACE_7
2019-03-26 08:40:16 -Generating unique operation named: addUsingGET_8
2019-03-26 08:40:16 -Generating unique operation named: editUsingGET_9
2019-03-26 08:40:16 -Generating unique operation named: listUsingGET_9
2019-03-26 08:40:16 -Generating unique operation named: removeUsingPOST_16
2019-03-26 08:40:16 -Generating unique operation named: removeUsingPOST_17
2019-03-26 08:40:16 -Generating unique operation named: saveUsingPOST_8
2019-03-26 08:40:16 -Generating unique operation named: updateUsingGET_8
2019-03-26 08:40:16 -Generating unique operation named: updateUsingHEAD_8
2019-03-26 08:40:16 -Generating unique operation named: updateUsingPOST_9
2019-03-26 08:40:16 -Generating unique operation named: updateUsingPUT_8
2019-03-26 08:40:16 -Generating unique operation named: updateUsingPATCH_8
2019-03-26 08:40:16 -Generating unique operation named: updateUsingDELETE_8
2019-03-26 08:40:16 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-26 08:40:16 -Generating unique operation named: updateUsingTRACE_8
2019-03-26 08:40:16 -Generating unique operation named: addUsingGET_9
2019-03-26 08:40:16 -Generating unique operation named: editUsingGET_10
2019-03-26 08:40:16 -Generating unique operation named: infoUsingGET_1
2019-03-26 08:40:16 -Generating unique operation named: infoUsingHEAD_1
2019-03-26 08:40:16 -Generating unique operation named: infoUsingPOST_1
2019-03-26 08:40:16 -Generating unique operation named: infoUsingPUT_1
2019-03-26 08:40:16 -Generating unique operation named: infoUsingPATCH_1
2019-03-26 08:40:16 -Generating unique operation named: infoUsingDELETE_1
2019-03-26 08:40:16 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-26 08:40:16 -Generating unique operation named: infoUsingTRACE_1
2019-03-26 08:40:16 -Generating unique operation named: listUsingGET_10
2019-03-26 08:40:16 -Generating unique operation named: removeUsingPOST_18
2019-03-26 08:40:16 -Generating unique operation named: removeUsingPOST_19
2019-03-26 08:40:16 -Generating unique operation named: saveUsingPOST_9
2019-03-26 08:40:16 -Generating unique operation named: updateUsingPOST_10
2019-03-26 08:40:16 -Generating unique operation named: listUsingGET_11
2019-03-26 08:40:16 -Generating unique operation named: removeUsingPOST_20
2019-03-26 08:40:16 -Generating unique operation named: welcomeUsingGET_1
2019-03-26 08:40:17 -Generating unique operation named: addUsingGET_10
2019-03-26 08:40:17 -Generating unique operation named: editUsingGET_11
2019-03-26 08:40:17 -Generating unique operation named: listUsingGET_12
2019-03-26 08:40:17 -Generating unique operation named: removeUsingPOST_21
2019-03-26 08:40:17 -Generating unique operation named: saveUsingPOST_10
2019-03-26 08:40:17 -Generating unique operation named: treeUsingGET_1
2019-03-26 08:40:17 -Generating unique operation named: treeUsingGET_2
2019-03-26 08:40:17 -Generating unique operation named: updateUsingPOST_11
2019-03-26 08:40:17 -Generating unique operation named: addUsingGET_11
2019-03-26 08:40:17 -Generating unique operation named: editUsingGET_12
2019-03-26 08:40:17 -Generating unique operation named: listUsingGET_13
2019-03-26 08:40:17 -Generating unique operation named: removeUsingPOST_22
2019-03-26 08:40:17 -Generating unique operation named: removeUsingPOST_23
2019-03-26 08:40:17 -Generating unique operation named: saveUsingPOST_11
2019-03-26 08:40:17 -Generating unique operation named: updateUsingGET_9
2019-03-26 08:40:17 -Generating unique operation named: updateUsingHEAD_9
2019-03-26 08:40:17 -Generating unique operation named: updateUsingPOST_12
2019-03-26 08:40:17 -Generating unique operation named: updateUsingPUT_9
2019-03-26 08:40:17 -Generating unique operation named: updateUsingPATCH_9
2019-03-26 08:40:17 -Generating unique operation named: updateUsingDELETE_9
2019-03-26 08:40:17 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-26 08:40:17 -Generating unique operation named: updateUsingTRACE_9
2019-03-26 08:40:17 -Generating unique operation named: addUsingGET_12
2019-03-26 08:40:17 -Generating unique operation named: editUsingGET_13
2019-03-26 08:40:17 -Generating unique operation named: listUsingGET_14
2019-03-26 08:40:17 -Generating unique operation named: removeUsingPOST_24
2019-03-26 08:40:17 -Generating unique operation named: removeUsingPOST_25
2019-03-26 08:40:17 -Generating unique operation named: saveUsingPOST_12
2019-03-26 08:40:17 -Generating unique operation named: updateUsingGET_10
2019-03-26 08:40:17 -Generating unique operation named: updateUsingHEAD_10
2019-03-26 08:40:17 -Generating unique operation named: updateUsingPOST_13
2019-03-26 08:40:17 -Generating unique operation named: updateUsingPUT_10
2019-03-26 08:40:17 -Generating unique operation named: updateUsingPATCH_10
2019-03-26 08:40:17 -Generating unique operation named: updateUsingDELETE_10
2019-03-26 08:40:17 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-26 08:40:17 -Generating unique operation named: updateUsingTRACE_10
2019-03-26 08:40:17 -Generating unique operation named: addUsingGET_13
2019-03-26 08:40:17 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-26 08:40:17 -Generating unique operation named: editUsingGET_14
2019-03-26 08:40:17 -Generating unique operation named: listUsingGET_15
2019-03-26 08:40:17 -Generating unique operation named: saveUsingPOST_13
2019-03-26 08:40:17 -Generating unique operation named: saveUsingPOST_14
2019-03-26 08:40:17 -Generating unique operation named: updateUsingPOST_14
2019-03-26 08:40:17 -Generating unique operation named: listUsingGET_16
2019-03-26 08:40:17 -Generating unique operation named: listUsingHEAD_1
2019-03-26 08:40:17 -Generating unique operation named: listUsingPOST_1
2019-03-26 08:40:17 -Generating unique operation named: listUsingPUT_1
2019-03-26 08:40:17 -Generating unique operation named: listUsingPATCH_1
2019-03-26 08:40:17 -Generating unique operation named: listUsingDELETE_1
2019-03-26 08:40:17 -Generating unique operation named: listUsingOPTIONS_1
2019-03-26 08:40:17 -Generating unique operation named: listUsingTRACE_1
2019-03-26 08:40:17 -Generating unique operation named: addUsingGET_14
2019-03-26 08:40:17 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-26 08:40:17 -Generating unique operation named: editUsingGET_15
2019-03-26 08:40:17 -Generating unique operation named: listUsingGET_17
2019-03-26 08:40:17 -Generating unique operation named: removeUsingPOST_26
2019-03-26 08:40:17 -Generating unique operation named: saveUsingPOST_15
2019-03-26 08:40:17 -Generating unique operation named: treeUsingGET_3
2019-03-26 08:40:17 -Generating unique operation named: treeViewUsingGET_1
2019-03-26 08:40:17 -Generating unique operation named: updateUsingPOST_15
2019-03-26 08:40:17 -Generating unique operation named: addUsingGET_15
2019-03-26 08:40:17 -Generating unique operation named: editUsingGET_16
2019-03-26 08:40:17 -Generating unique operation named: exprotExcelUsingGET_5
2019-03-26 08:40:17 -Generating unique operation named: listUsingGET_18
2019-03-26 08:40:17 -Generating unique operation named: removeUsingPOST_27
2019-03-26 08:40:17 -Generating unique operation named: removeUsingPOST_28
2019-03-26 08:40:17 -Generating unique operation named: saveUsingPOST_16
2019-03-26 08:40:17 -Generating unique operation named: updateUsingGET_11
2019-03-26 08:40:17 -Generating unique operation named: updateUsingHEAD_11
2019-03-26 08:40:17 -Generating unique operation named: updateUsingPOST_16
2019-03-26 08:40:17 -Generating unique operation named: updateUsingPUT_11
2019-03-26 08:40:17 -Generating unique operation named: updateUsingPATCH_11
2019-03-26 08:40:17 -Generating unique operation named: updateUsingDELETE_11
2019-03-26 08:40:17 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-26 08:40:17 -Generating unique operation named: updateUsingTRACE_11
2019-03-26 08:40:17 -Generating unique operation named: exprotExcelUsingGET_6
2019-03-26 08:40:17 -Generating unique operation named: addUsingGET_16
2019-03-26 08:40:17 -Generating unique operation named: editUsingGET_17
2019-03-26 08:40:17 -Generating unique operation named: listUsingGET_19
2019-03-26 08:40:17 -Generating unique operation named: removeUsingPOST_29
2019-03-26 08:40:17 -Generating unique operation named: removeUsingPOST_30
2019-03-26 08:40:17 -Generating unique operation named: saveUsingPOST_17
2019-03-26 08:40:17 -Generating unique operation named: updateUsingGET_12
2019-03-26 08:40:17 -Generating unique operation named: updateUsingHEAD_12
2019-03-26 08:40:17 -Generating unique operation named: updateUsingPOST_17
2019-03-26 08:40:17 -Generating unique operation named: updateUsingPUT_12
2019-03-26 08:40:17 -Generating unique operation named: updateUsingPATCH_12
2019-03-26 08:40:17 -Generating unique operation named: updateUsingDELETE_12
2019-03-26 08:40:17 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-26 08:40:17 -Generating unique operation named: updateUsingTRACE_12
2019-03-26 08:40:17 -Generating unique operation named: addUsingGET_17
2019-03-26 08:40:17 -Generating unique operation named: editUsingGET_18
2019-03-26 08:40:17 -Generating unique operation named: listUsingGET_20
2019-03-26 08:40:17 -Generating unique operation named: removeUsingPOST_31
2019-03-26 08:40:17 -Generating unique operation named: removeUsingPOST_32
2019-03-26 08:40:17 -Generating unique operation named: saveUsingPOST_18
2019-03-26 08:40:17 -Generating unique operation named: updateUsingGET_13
2019-03-26 08:40:17 -Generating unique operation named: updateUsingHEAD_13
2019-03-26 08:40:17 -Generating unique operation named: updateUsingPOST_18
2019-03-26 08:40:17 -Generating unique operation named: updateUsingPUT_13
2019-03-26 08:40:17 -Generating unique operation named: updateUsingPATCH_13
2019-03-26 08:40:17 -Generating unique operation named: updateUsingDELETE_13
2019-03-26 08:40:17 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-26 08:40:17 -Generating unique operation named: updateUsingTRACE_13
2019-03-26 08:40:17 -Starting Quartz Scheduler now
2019-03-26 08:40:17 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-26 08:40:17 -Starting...
2019-03-26 08:40:17 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-26 08:40:17 -Started.
2019-03-26 08:40:17 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-26 08:40:17 -Using a shared selector for servlet write/read
2019-03-26 08:40:18 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-26 08:40:18 -Started BootdoApplication in 20.639 seconds (JVM running for 21.398)
2019-03-26 08:40:18 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-26 08:40:18 -==> Parameters: 
2019-03-26 08:40:18 -<==      Total: 1
2019-03-26 08:40:23 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-26 08:40:23 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-26 08:40:23 -FrameworkServlet 'dispatcherServlet': initialization completed in 61 ms
2019-03-26 08:40:23 -Enabling session validation scheduler...
2019-03-26 08:40:24 -请求地址 : http://localhost:8081/login;JSESSIONID=c09cc302-bc8f-4074-886b-a599f33704e2
2019-03-26 08:40:24 -HTTP METHOD : GET
2019-03-26 08:40:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-26 08:40:24 -参数 : [{}]
2019-03-26 08:40:24 -耗时 : 3
2019-03-26 08:40:24 -返回值 : login
2019-03-26 08:40:25 -请求地址 : http://localhost:8081/getVerify
2019-03-26 08:40:25 -HTTP METHOD : GET
2019-03-26 08:40:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-26 08:40:25 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@406555fb, org.apache.shiro.web.servlet.ShiroHttpServletResponse@11e3d80a]
2019-03-26 08:40:31 -2882
2019-03-26 08:40:31 -耗时 : 5512
2019-03-26 08:40:31 -返回值 : null
2019-03-26 08:40:31 -请求地址 : http://localhost:8081/login
2019-03-26 08:40:31 -HTTP METHOD : GET
2019-03-26 08:40:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-26 08:40:31 -参数 : [{}]
2019-03-26 08:40:31 -耗时 : 0
2019-03-26 08:40:31 -返回值 : login
2019-03-26 08:40:38 -请求地址 : http://localhost:8081/login
2019-03-26 08:40:38 -HTTP METHOD : POST
2019-03-26 08:40:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-26 08:40:38 -参数 : [admin, 111111, 2882, org.apache.shiro.web.servlet.ShiroHttpServletRequest@4024df4a]
2019-03-26 08:40:38 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-26 08:40:38 -==> Parameters: admin(String)
2019-03-26 08:40:38 -<==      Total: 1
2019-03-26 08:40:38 -耗时 : 320
2019-03-26 08:40:38 -返回值 : {msg=操作成功, code=0}
2019-03-26 08:40:39 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-03-26 08:40:39 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-26 08:40:39 -==> Parameters: 1(Long), admin(String), 登录(String), 320(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-26 08:40:39.153(Timestamp)
2019-03-26 08:40:39 -<==    Updates: 1
2019-03-26 08:40:39 -请求地址 : http://localhost:8081/index
2019-03-26 08:40:39 -HTTP METHOD : GET
2019-03-26 08:40:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-26 08:40:39 -参数 : [{}]
2019-03-26 08:40:39 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-26 08:40:40 -==> Parameters: 1(Long)
2019-03-26 08:40:40 -<==      Total: 46
2019-03-26 08:40:40 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-26 08:40:40 -==> Parameters: 138(Long)
2019-03-26 08:40:40 -<==      Total: 1
2019-03-26 08:40:40 -耗时 : 493
2019-03-26 08:40:40 -返回值 : index_v1
2019-03-26 08:40:40 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-26 08:40:40 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 494(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-26 08:40:40.242(Timestamp)
2019-03-26 08:40:40 -<==    Updates: 1
2019-03-26 08:40:41 -请求地址 : http://localhost:8081/main
2019-03-26 08:40:41 -HTTP METHOD : GET
2019-03-26 08:40:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-26 08:40:41 -参数 : []
2019-03-26 08:40:41 -耗时 : 1
2019-03-26 08:40:41 -返回值 : main
2019-03-26 08:40:43 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-26 08:40:43 -HTTP METHOD : GET
2019-03-26 08:40:43 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-26 08:40:43 -参数 : []
2019-03-26 08:40:43 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-26 08:40:43 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-26 08:40:44 -<==      Total: 0
2019-03-26 08:40:44 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-26 08:40:44 -==> Parameters: 1(Long), 0(String)
2019-03-26 08:40:44 -<==      Total: 1
2019-03-26 08:40:44 -耗时 : 95
2019-03-26 08:40:44 -返回值 : com.bootdo.common.utils.PageUtils@3544cac8
2019-03-26 08:40:44 -请求地址 : http://localhost:8081/main
2019-03-26 08:40:44 -HTTP METHOD : GET
2019-03-26 08:40:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-26 08:40:44 -参数 : []
2019-03-26 08:40:44 -耗时 : 0
2019-03-26 08:40:44 -返回值 : main
2019-03-26 08:41:12 -WebSocketSession[1 current WS(0)-HttpStream(1)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 12], outboundChannelpool size = 2, active threads = 0, queued tasks = 0, completed tasks = 2], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 7]
2019-03-26 08:41:38 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-26 08:41:38 -==> Parameters: 1(Long)
2019-03-26 08:41:38 -<==      Total: 90
2019-03-26 08:41:38 -请求地址 : http://localhost:8081/elec/elec
2019-03-26 08:41:38 -HTTP METHOD : GET
2019-03-26 08:41:38 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-26 08:41:38 -参数 : []
2019-03-26 08:41:38 -耗时 : 1
2019-03-26 08:41:38 -返回值 : elec/elec/elec
2019-03-26 08:41:39 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-26 08:41:39 -HTTP METHOD : GET
2019-03-26 08:41:39 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-26 08:41:39 -参数 : [userType]
2019-03-26 08:41:39 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-26 08:41:39 -==> Parameters: userType(String)
2019-03-26 08:41:39 -<==      Total: 2
2019-03-26 08:41:39 -耗时 : 30
2019-03-26 08:41:39 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-26 08:41:39 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-26 08:41:39 -HTTP METHOD : GET
2019-03-26 08:41:39 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-26 08:41:39 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@684846b1]
2019-03-26 08:41:40 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-26 08:41:40 -==> Parameters: 0(Integer), 10(Integer)
2019-03-26 08:41:40 -<==      Total: 10
2019-03-26 08:41:40 -==>  Preparing: select count(*) from elec 
2019-03-26 08:41:40 -==> Parameters: 
2019-03-26 08:41:40 -<==      Total: 1
2019-03-26 08:41:40 -耗时 : 104
2019-03-26 08:41:40 -返回值 : com.bootdo.common.utils.PageUtils@752cd414
2019-03-26 08:41:46 -请求地址 : http://localhost:8081/elec/elec/edit/1
2019-03-26 08:41:46 -HTTP METHOD : GET
2019-03-26 08:41:46 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.edit
2019-03-26 08:41:46 -参数 : [1, {}]
2019-03-26 08:41:46 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec where id = ? 
2019-03-26 08:41:46 -==> Parameters: 1(Long)
2019-03-26 08:41:46 -<==      Total: 1
2019-03-26 08:41:46 -耗时 : 17
2019-03-26 08:41:46 -返回值 : elec/elec/edit
2019-03-26 08:41:46 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-26 08:41:46 -HTTP METHOD : GET
2019-03-26 08:41:46 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-26 08:41:46 -参数 : [userType]
2019-03-26 08:41:46 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-26 08:41:46 -==> Parameters: userType(String)
2019-03-26 08:41:46 -<==      Total: 2
2019-03-26 08:41:46 -耗时 : 6
2019-03-26 08:41:46 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-26 08:41:46 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-03-26 08:41:46 -HTTP METHOD : GET
2019-03-26 08:41:46 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-26 08:41:46 -参数 : [userState]
2019-03-26 08:41:46 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-03-26 08:41:46 -HTTP METHOD : GET
2019-03-26 08:41:46 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-26 08:41:46 -参数 : [elecType]
2019-03-26 08:41:46 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-26 08:41:46 -==> Parameters: elecType(String)
2019-03-26 08:41:46 -<==      Total: 2
2019-03-26 08:41:46 -耗时 : 6
2019-03-26 08:41:46 -返回值 : [DictDO{id=139, name='民用电', value='1', type='elecType', description='电量性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='商业电', value='0', type='elecType', description='电量类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-26 08:41:46 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-26 08:41:46 -==> Parameters: userState(String)
2019-03-26 08:41:46 -<==      Total: 2
2019-03-26 08:41:46 -耗时 : 22
2019-03-26 08:41:46 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-26 08:42:00 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-26 08:42:00 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/elec/elec/update(String), org.springframework.validation.BindException: org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'elecDO' on field 'hu': rejected value [2019-02,1]; codes [typeMismatch.elecDO.hu,typeMismatch.hu,typeMismatch.java.lang.Integer,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [elecDO.hu,hu]; arguments []; default message [hu]]; default message [Failed to convert property value of type 'java.lang.String[]' to required type 'java.lang.Integer' for property 'hu'; nested exception is java.lang.NumberFormatException: For input string: "2019-02,1"](String), null, 2019-03-26 08:42:00.172(Timestamp)
2019-03-26 08:42:00 -org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'elecDO' on field 'hu': rejected value [2019-02,1]; codes [typeMismatch.elecDO.hu,typeMismatch.hu,typeMismatch.java.lang.Integer,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [elecDO.hu,hu]; arguments []; default message [hu]]; default message [Failed to convert property value of type 'java.lang.String[]' to required type 'java.lang.Integer' for property 'hu'; nested exception is java.lang.NumberFormatException: For input string: "2019-02,1"]
org.springframework.validation.BindException: org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'elecDO' on field 'hu': rejected value [2019-02,1]; codes [typeMismatch.elecDO.hu,typeMismatch.hu,typeMismatch.java.lang.Integer,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [elecDO.hu,hu]; arguments []; default message [hu]]; default message [Failed to convert property value of type 'java.lang.String[]' to required type 'java.lang.Integer' for property 'hu'; nested exception is java.lang.NumberFormatException: For input string: "2019-02,1"]
	at org.springframework.web.method.annotation.ModelAttributeMethodProcessor.resolveArgument(ModelAttributeMethodProcessor.java:157)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:124)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:161)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:131)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-26 08:42:00 -<==    Updates: 1
2019-03-26 08:45:24 -请求地址 : http://localhost:8081/index
2019-03-26 08:45:24 -HTTP METHOD : GET
2019-03-26 08:45:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-26 08:45:24 -参数 : [{}]
2019-03-26 08:45:24 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-26 08:45:24 -==> Parameters: 1(Long)
2019-03-26 08:45:24 -<==      Total: 46
2019-03-26 08:45:24 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-26 08:45:24 -==> Parameters: 138(Long)
2019-03-26 08:45:24 -<==      Total: 1
2019-03-26 08:45:24 -耗时 : 101
2019-03-26 08:45:24 -返回值 : index_v1
2019-03-26 08:45:24 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-26 08:45:24 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 103(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-26 08:45:24.328(Timestamp)
2019-03-26 08:45:24 -<==    Updates: 1
2019-03-26 08:45:24 -请求地址 : http://localhost:8081/main
2019-03-26 08:45:24 -HTTP METHOD : GET
2019-03-26 08:45:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-26 08:45:24 -参数 : []
2019-03-26 08:45:24 -耗时 : 1
2019-03-26 08:45:24 -返回值 : main
2019-03-26 08:45:24 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-26 08:45:24 -HTTP METHOD : GET
2019-03-26 08:45:24 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-26 08:45:24 -参数 : []
2019-03-26 08:45:24 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-26 08:45:24 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-26 08:45:24 -<==      Total: 0
2019-03-26 08:45:24 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-26 08:45:24 -==> Parameters: 1(Long), 0(String)
2019-03-26 08:45:24 -<==      Total: 1
2019-03-26 08:45:24 -耗时 : 39
2019-03-26 08:45:24 -返回值 : com.bootdo.common.utils.PageUtils@3ee7fbc2
2019-03-26 08:45:24 -请求地址 : http://localhost:8081/main
2019-03-26 08:45:24 -HTTP METHOD : GET
2019-03-26 08:45:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-26 08:45:24 -参数 : []
2019-03-26 08:45:24 -耗时 : 0
2019-03-26 08:45:24 -返回值 : main
2019-03-26 08:45:29 -请求地址 : http://localhost:8081/elec/elec
2019-03-26 08:45:29 -HTTP METHOD : GET
2019-03-26 08:45:29 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-26 08:45:29 -参数 : []
2019-03-26 08:45:29 -耗时 : 1
2019-03-26 08:45:29 -返回值 : elec/elec/elec
2019-03-26 08:45:29 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-26 08:45:29 -HTTP METHOD : GET
2019-03-26 08:45:29 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-26 08:45:29 -参数 : [userType]
2019-03-26 08:45:29 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-26 08:45:29 -==> Parameters: userType(String)
2019-03-26 08:45:29 -<==      Total: 2
2019-03-26 08:45:29 -耗时 : 8
2019-03-26 08:45:29 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-26 08:45:29 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-26 08:45:29 -HTTP METHOD : GET
2019-03-26 08:45:29 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-26 08:45:29 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@7ee638c]
2019-03-26 08:45:29 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-26 08:45:29 -==> Parameters: 0(Integer), 10(Integer)
2019-03-26 08:45:29 -<==      Total: 10
2019-03-26 08:45:29 -==>  Preparing: select count(*) from elec 
2019-03-26 08:45:29 -==> Parameters: 
2019-03-26 08:45:29 -<==      Total: 1
2019-03-26 08:45:29 -耗时 : 31
2019-03-26 08:45:29 -返回值 : com.bootdo.common.utils.PageUtils@3ba8fe96
2019-03-26 08:45:35 -请求地址 : http://localhost:8081/elec/elec/edit/1
2019-03-26 08:45:35 -HTTP METHOD : GET
2019-03-26 08:45:35 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.edit
2019-03-26 08:45:35 -参数 : [1, {}]
2019-03-26 08:45:35 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec where id = ? 
2019-03-26 08:45:35 -==> Parameters: 1(Long)
2019-03-26 08:45:35 -<==      Total: 1
2019-03-26 08:45:35 -耗时 : 7
2019-03-26 08:45:35 -返回值 : elec/elec/edit
2019-03-26 08:45:35 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-26 08:45:35 -HTTP METHOD : GET
2019-03-26 08:45:35 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-26 08:45:35 -参数 : [userType]
2019-03-26 08:45:35 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-26 08:45:35 -==> Parameters: userType(String)
2019-03-26 08:45:35 -<==      Total: 2
2019-03-26 08:45:35 -耗时 : 5
2019-03-26 08:45:35 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-26 08:45:35 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-03-26 08:45:35 -HTTP METHOD : GET
2019-03-26 08:45:35 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-26 08:45:35 -参数 : [elecType]
2019-03-26 08:45:35 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-26 08:45:35 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-03-26 08:45:35 -HTTP METHOD : GET
2019-03-26 08:45:35 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-26 08:45:35 -==> Parameters: elecType(String)
2019-03-26 08:45:35 -参数 : [userState]
2019-03-26 08:45:35 -<==      Total: 2
2019-03-26 08:45:35 -耗时 : 8
2019-03-26 08:45:35 -返回值 : [DictDO{id=139, name='民用电', value='1', type='elecType', description='电量性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='商业电', value='0', type='elecType', description='电量类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-26 08:45:35 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-26 08:45:35 -==> Parameters: userState(String)
2019-03-26 08:45:35 -<==      Total: 2
2019-03-26 08:45:35 -耗时 : 32
2019-03-26 08:45:35 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-26 08:45:44 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-26 08:45:44 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/elec/elec/update(String), org.springframework.validation.BindException: org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'elecDO' on field 'hu': rejected value [2019-02]; codes [typeMismatch.elecDO.hu,typeMismatch.hu,typeMismatch.java.lang.Integer,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [elecDO.hu,hu]; arguments []; default message [hu]]; default message [Failed to convert property value of type 'java.lang.String' to required type 'java.lang.Integer' for property 'hu'; nested exception is java.lang.NumberFormatException: For input string: "2019-02"](String), null, 2019-03-26 08:45:44.267(Timestamp)
2019-03-26 08:45:44 -org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'elecDO' on field 'hu': rejected value [2019-02]; codes [typeMismatch.elecDO.hu,typeMismatch.hu,typeMismatch.java.lang.Integer,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [elecDO.hu,hu]; arguments []; default message [hu]]; default message [Failed to convert property value of type 'java.lang.String' to required type 'java.lang.Integer' for property 'hu'; nested exception is java.lang.NumberFormatException: For input string: "2019-02"]
org.springframework.validation.BindException: org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'elecDO' on field 'hu': rejected value [2019-02]; codes [typeMismatch.elecDO.hu,typeMismatch.hu,typeMismatch.java.lang.Integer,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [elecDO.hu,hu]; arguments []; default message [hu]]; default message [Failed to convert property value of type 'java.lang.String' to required type 'java.lang.Integer' for property 'hu'; nested exception is java.lang.NumberFormatException: For input string: "2019-02"]
	at org.springframework.web.method.annotation.ModelAttributeMethodProcessor.resolveArgument(ModelAttributeMethodProcessor.java:157)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:124)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:161)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:131)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-26 08:45:44 -<==    Updates: 1
2019-03-26 08:46:11 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:23)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:26)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:424)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:232)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-26 08:51:11 -请求地址 : http://localhost:8081/login;JSESSIONID=27935da5-bd8e-4366-a369-0d65e2af10cc
2019-03-26 08:51:11 -HTTP METHOD : GET
2019-03-26 08:51:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-26 08:51:11 -参数 : [{}]
2019-03-26 08:51:11 -耗时 : 1
2019-03-26 08:51:11 -返回值 : login
2019-03-26 08:51:12 -请求地址 : http://localhost:8081/login
2019-03-26 08:51:12 -HTTP METHOD : GET
2019-03-26 08:51:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-26 08:51:12 -参数 : [{}]
2019-03-26 08:51:12 -耗时 : 1
2019-03-26 08:51:12 -返回值 : login
2019-03-26 08:51:14 -请求地址 : http://localhost:8081/login
2019-03-26 08:51:14 -HTTP METHOD : GET
2019-03-26 08:51:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-26 08:51:14 -参数 : [{}]
2019-03-26 08:51:14 -耗时 : 1
2019-03-26 08:51:14 -返回值 : login
2019-03-26 08:51:15 -请求地址 : http://localhost:8081/login
2019-03-26 08:51:15 -HTTP METHOD : GET
2019-03-26 08:51:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-26 08:51:15 -参数 : [{}]
2019-03-26 08:51:15 -耗时 : 1
2019-03-26 08:51:15 -返回值 : login
2019-03-26 08:51:18 -请求地址 : http://localhost:8081/login
2019-03-26 08:51:18 -HTTP METHOD : GET
2019-03-26 08:51:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-26 08:51:18 -参数 : [{}]
2019-03-26 08:51:18 -耗时 : 1
2019-03-26 08:51:18 -返回值 : login
2019-03-26 08:51:19 -请求地址 : http://localhost:8081/getVerify
2019-03-26 08:51:19 -HTTP METHOD : GET
2019-03-26 08:51:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-26 08:51:19 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@68520156, org.apache.shiro.web.servlet.ShiroHttpServletResponse@4b7fd8f6]
2019-03-26 08:51:19 -0427
2019-03-26 08:51:19 -耗时 : 23
2019-03-26 08:51:19 -返回值 : null
2019-03-26 08:51:19 -请求地址 : http://localhost:8081/login
2019-03-26 08:51:19 -HTTP METHOD : GET
2019-03-26 08:51:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-26 08:51:19 -参数 : [{}]
2019-03-26 08:51:19 -耗时 : 1
2019-03-26 08:51:19 -返回值 : login
2019-03-26 08:51:26 -请求地址 : http://localhost:8081/login
2019-03-26 08:51:26 -HTTP METHOD : POST
2019-03-26 08:51:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-26 08:51:26 -参数 : [admin, 111111, 0427, org.apache.shiro.web.servlet.ShiroHttpServletRequest@787457bf]
2019-03-26 08:51:26 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-26 08:51:26 -==> Parameters: admin(String)
2019-03-26 08:51:26 -<==      Total: 1
2019-03-26 08:51:26 -耗时 : 6
2019-03-26 08:51:26 -返回值 : {msg=操作成功, code=0}
2019-03-26 08:51:26 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-26 08:51:26 -==> Parameters: 1(Long), admin(String), 登录(String), 6(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-26 08:51:26.313(Timestamp)
2019-03-26 08:51:26 -请求地址 : http://localhost:8081/index
2019-03-26 08:51:26 -HTTP METHOD : GET
2019-03-26 08:51:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-26 08:51:26 -参数 : [{}]
2019-03-26 08:51:26 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-26 08:51:26 -==> Parameters: 1(Long)
2019-03-26 08:51:26 -<==      Total: 46
2019-03-26 08:51:26 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-26 08:51:26 -==> Parameters: 138(Long)
2019-03-26 08:51:26 -<==      Total: 1
2019-03-26 08:51:26 -耗时 : 52
2019-03-26 08:51:26 -返回值 : index_v1
2019-03-26 08:51:26 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-26 08:51:26 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 53(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-26 08:51:26.401(Timestamp)
2019-03-26 08:51:26 -请求地址 : http://localhost:8081/main
2019-03-26 08:51:26 -HTTP METHOD : GET
2019-03-26 08:51:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-26 08:51:26 -参数 : []
2019-03-26 08:51:26 -耗时 : 0
2019-03-26 08:51:26 -返回值 : main
2019-03-26 08:51:26 -<==    Updates: 1
2019-03-26 08:51:27 -<==    Updates: 1
2019-03-26 08:51:27 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-26 08:51:27 -HTTP METHOD : GET
2019-03-26 08:51:27 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-26 08:51:27 -参数 : []
2019-03-26 08:51:27 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-26 08:51:27 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-26 08:51:27 -请求地址 : http://localhost:8081/main
2019-03-26 08:51:27 -HTTP METHOD : GET
2019-03-26 08:51:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-26 08:51:27 -参数 : []
2019-03-26 08:51:27 -耗时 : 1
2019-03-26 08:51:27 -返回值 : main
2019-03-26 08:51:27 -<==      Total: 0
2019-03-26 08:51:27 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-26 08:51:27 -==> Parameters: 1(Long), 0(String)
2019-03-26 08:51:27 -<==      Total: 1
2019-03-26 08:51:27 -耗时 : 180
2019-03-26 08:51:27 -返回值 : com.bootdo.common.utils.PageUtils@51dcd6ff
2019-03-26 08:51:33 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-26 08:51:33 -==> Parameters: 1(Long)
2019-03-26 08:51:33 -<==      Total: 90
2019-03-26 08:51:33 -请求地址 : http://localhost:8081/elec/elec
2019-03-26 08:51:33 -HTTP METHOD : GET
2019-03-26 08:51:33 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-26 08:51:33 -参数 : []
2019-03-26 08:51:33 -耗时 : 1
2019-03-26 08:51:33 -返回值 : elec/elec/elec
2019-03-26 08:51:34 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-26 08:51:34 -HTTP METHOD : GET
2019-03-26 08:51:34 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-26 08:51:34 -参数 : [userType]
2019-03-26 08:51:34 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-26 08:51:34 -==> Parameters: userType(String)
2019-03-26 08:51:34 -<==      Total: 2
2019-03-26 08:51:34 -耗时 : 4
2019-03-26 08:51:34 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-26 08:51:34 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-26 08:51:34 -HTTP METHOD : GET
2019-03-26 08:51:34 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-26 08:51:34 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@1618b4cd]
2019-03-26 08:51:34 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-26 08:51:34 -==> Parameters: 0(Integer), 10(Integer)
2019-03-26 08:51:34 -<==      Total: 10
2019-03-26 08:51:34 -==>  Preparing: select count(*) from elec 
2019-03-26 08:51:34 -==> Parameters: 
2019-03-26 08:51:34 -<==      Total: 1
2019-03-26 08:51:34 -耗时 : 12
2019-03-26 08:51:34 -返回值 : com.bootdo.common.utils.PageUtils@c6666f5
2019-03-26 08:51:35 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-26 08:51:35 -HTTP METHOD : GET
2019-03-26 08:51:35 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-26 08:51:35 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=2}, com.bootdo.elec.domain.ElecDO@2d2dcca4]
2019-03-26 08:51:35 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `elec_sum` < 0 order by id asc limit ?, ? 
2019-03-26 08:51:35 -==> Parameters: 0(Integer), 10(Integer)
2019-03-26 08:51:35 -<==      Total: 2
2019-03-26 08:51:35 -==>  Preparing: select count(*) from elec WHERE `elec_sum` < 0 
2019-03-26 08:51:35 -==> Parameters: 
2019-03-26 08:51:35 -<==      Total: 1
2019-03-26 08:51:35 -耗时 : 15
2019-03-26 08:51:35 -返回值 : com.bootdo.common.utils.PageUtils@1c784365
2019-03-26 08:51:36 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-26 08:51:36 -HTTP METHOD : GET
2019-03-26 08:51:36 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-26 08:51:36 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@4478ae26]
2019-03-26 08:51:36 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-26 08:51:36 -==> Parameters: 0(Integer), 10(Integer)
2019-03-26 08:51:36 -<==      Total: 10
2019-03-26 08:51:36 -==>  Preparing: select count(*) from elec 
2019-03-26 08:51:36 -==> Parameters: 
2019-03-26 08:51:36 -<==      Total: 1
2019-03-26 08:51:36 -耗时 : 14
2019-03-26 08:51:36 -返回值 : com.bootdo.common.utils.PageUtils@5607f301
2019-03-26 08:51:49 -请求地址 : http://localhost:8081/elec/elec/edit/4
2019-03-26 08:51:49 -HTTP METHOD : GET
2019-03-26 08:51:49 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.edit
2019-03-26 08:51:49 -参数 : [4, {}]
2019-03-26 08:51:49 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec where id = ? 
2019-03-26 08:51:49 -==> Parameters: 4(Long)
2019-03-26 08:51:49 -<==      Total: 1
2019-03-26 08:51:49 -耗时 : 5
2019-03-26 08:51:49 -返回值 : elec/elec/edit
2019-03-26 08:51:50 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-26 08:51:50 -HTTP METHOD : GET
2019-03-26 08:51:50 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-26 08:51:50 -参数 : [userType]
2019-03-26 08:51:50 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-26 08:51:50 -==> Parameters: userType(String)
2019-03-26 08:51:50 -<==      Total: 2
2019-03-26 08:51:50 -耗时 : 6
2019-03-26 08:51:50 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-26 08:51:50 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-03-26 08:51:50 -HTTP METHOD : GET
2019-03-26 08:51:50 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-26 08:51:50 -参数 : [userState]
2019-03-26 08:51:50 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-03-26 08:51:50 -HTTP METHOD : GET
2019-03-26 08:51:50 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-26 08:51:50 -参数 : [elecType]
2019-03-26 08:51:50 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-26 08:51:50 -==> Parameters: userState(String)
2019-03-26 08:51:50 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-26 08:51:50 -==> Parameters: elecType(String)
2019-03-26 08:51:50 -<==      Total: 2
2019-03-26 08:51:50 -耗时 : 6
2019-03-26 08:51:50 -返回值 : [DictDO{id=139, name='民用电', value='1', type='elecType', description='电量性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='商业电', value='0', type='elecType', description='电量类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-26 08:51:50 -<==      Total: 2
2019-03-26 08:51:50 -耗时 : 12
2019-03-26 08:51:50 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-26 08:52:39 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-26 08:52:39 -org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'elecDO' on field 'hu': rejected value [2019-03,1]; codes [typeMismatch.elecDO.hu,typeMismatch.hu,typeMismatch.java.lang.Integer,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [elecDO.hu,hu]; arguments []; default message [hu]]; default message [Failed to convert property value of type 'java.lang.String[]' to required type 'java.lang.Integer' for property 'hu'; nested exception is java.lang.NumberFormatException: For input string: "2019-03,1"]
org.springframework.validation.BindException: org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'elecDO' on field 'hu': rejected value [2019-03,1]; codes [typeMismatch.elecDO.hu,typeMismatch.hu,typeMismatch.java.lang.Integer,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [elecDO.hu,hu]; arguments []; default message [hu]]; default message [Failed to convert property value of type 'java.lang.String[]' to required type 'java.lang.Integer' for property 'hu'; nested exception is java.lang.NumberFormatException: For input string: "2019-03,1"]
	at org.springframework.web.method.annotation.ModelAttributeMethodProcessor.resolveArgument(ModelAttributeMethodProcessor.java:157)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:124)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:161)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:131)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-26 08:52:39 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/elec/elec/update(String), org.springframework.validation.BindException: org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'elecDO' on field 'hu': rejected value [2019-03,1]; codes [typeMismatch.elecDO.hu,typeMismatch.hu,typeMismatch.java.lang.Integer,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [elecDO.hu,hu]; arguments []; default message [hu]]; default message [Failed to convert property value of type 'java.lang.String[]' to required type 'java.lang.Integer' for property 'hu'; nested exception is java.lang.NumberFormatException: For input string: "2019-03,1"](String), null, 2019-03-26 08:52:39.828(Timestamp)
2019-03-26 08:52:39 -<==    Updates: 1
2019-03-26 08:54:10 -请求地址 : http://localhost:8081/elec/elec/edit/2
2019-03-26 08:54:10 -HTTP METHOD : GET
2019-03-26 08:54:10 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.edit
2019-03-26 08:54:10 -参数 : [2, {}]
2019-03-26 08:54:10 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec where id = ? 
2019-03-26 08:54:10 -==> Parameters: 2(Long)
2019-03-26 08:54:10 -<==      Total: 1
2019-03-26 08:54:10 -耗时 : 5
2019-03-26 08:54:10 -返回值 : elec/elec/edit
2019-03-26 08:54:11 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-26 08:54:11 -HTTP METHOD : GET
2019-03-26 08:54:11 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-26 08:54:11 -参数 : [userType]
2019-03-26 08:54:11 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-26 08:54:11 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-03-26 08:54:11 -HTTP METHOD : GET
2019-03-26 08:54:11 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-26 08:54:11 -==> Parameters: userType(String)
2019-03-26 08:54:11 -参数 : [userState]
2019-03-26 08:54:11 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-03-26 08:54:11 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-26 08:54:11 -==> Parameters: userState(String)
2019-03-26 08:54:11 -HTTP METHOD : GET
2019-03-26 08:54:11 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-26 08:54:11 -参数 : [elecType]
2019-03-26 08:54:11 -<==      Total: 2
2019-03-26 08:54:11 -耗时 : 4
2019-03-26 08:54:11 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-26 08:54:11 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-26 08:54:11 -==> Parameters: elecType(String)
2019-03-26 08:54:11 -<==      Total: 2
2019-03-26 08:54:11 -<==      Total: 2
2019-03-26 08:54:11 -耗时 : 9
2019-03-26 08:54:11 -耗时 : 10
2019-03-26 08:54:11 -返回值 : [DictDO{id=139, name='民用电', value='1', type='elecType', description='电量性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='商业电', value='0', type='elecType', description='电量类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-26 08:54:11 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-26 08:59:04 -请求地址 : http://localhost:8081/index
2019-03-26 08:59:04 -HTTP METHOD : GET
2019-03-26 08:59:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-26 08:59:04 -参数 : [{}]
2019-03-26 08:59:04 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-26 08:59:04 -==> Parameters: 1(Long)
2019-03-26 08:59:04 -<==      Total: 46
2019-03-26 08:59:04 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-26 08:59:04 -==> Parameters: 138(Long)
2019-03-26 08:59:04 -<==      Total: 1
2019-03-26 08:59:04 -耗时 : 47
2019-03-26 08:59:04 -返回值 : index_v1
2019-03-26 08:59:04 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-26 08:59:04 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 47(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-26 08:59:04.218(Timestamp)
2019-03-26 08:59:04 -请求地址 : http://localhost:8081/main
2019-03-26 08:59:04 -HTTP METHOD : GET
2019-03-26 08:59:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-26 08:59:04 -参数 : []
2019-03-26 08:59:04 -耗时 : 1
2019-03-26 08:59:04 -返回值 : main
2019-03-26 08:59:04 -<==    Updates: 1
2019-03-26 08:59:04 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-26 08:59:04 -HTTP METHOD : GET
2019-03-26 08:59:04 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-26 08:59:04 -参数 : []
2019-03-26 08:59:04 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-26 08:59:04 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-26 08:59:04 -<==      Total: 0
2019-03-26 08:59:04 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-26 08:59:04 -==> Parameters: 1(Long), 0(String)
2019-03-26 08:59:04 -<==      Total: 1
2019-03-26 08:59:04 -耗时 : 37
2019-03-26 08:59:04 -返回值 : com.bootdo.common.utils.PageUtils@6a5fb32a
2019-03-26 08:59:04 -请求地址 : http://localhost:8081/main
2019-03-26 08:59:04 -HTTP METHOD : GET
2019-03-26 08:59:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-26 08:59:04 -参数 : []
2019-03-26 08:59:04 -耗时 : 2
2019-03-26 08:59:04 -返回值 : main
2019-03-26 08:59:06 -请求地址 : http://localhost:8081/elec/elec
2019-03-26 08:59:06 -HTTP METHOD : GET
2019-03-26 08:59:06 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-26 08:59:06 -参数 : []
2019-03-26 08:59:06 -耗时 : 1
2019-03-26 08:59:06 -返回值 : elec/elec/elec
2019-03-26 08:59:07 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-26 08:59:07 -HTTP METHOD : GET
2019-03-26 08:59:07 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-26 08:59:07 -参数 : [userType]
2019-03-26 08:59:07 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-26 08:59:07 -==> Parameters: userType(String)
2019-03-26 08:59:07 -<==      Total: 2
2019-03-26 08:59:07 -耗时 : 4
2019-03-26 08:59:07 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-26 08:59:07 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-26 08:59:07 -HTTP METHOD : GET
2019-03-26 08:59:07 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-26 08:59:07 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@ae98bc1]
2019-03-26 08:59:07 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-26 08:59:07 -==> Parameters: 0(Integer), 10(Integer)
2019-03-26 08:59:07 -<==      Total: 10
2019-03-26 08:59:07 -==>  Preparing: select count(*) from elec 
2019-03-26 08:59:07 -==> Parameters: 
2019-03-26 08:59:07 -<==      Total: 1
2019-03-26 08:59:07 -耗时 : 11
2019-03-26 08:59:07 -返回值 : com.bootdo.common.utils.PageUtils@6dac8f3d
2019-03-26 08:59:12 -请求地址 : http://localhost:8081/elec/elec/edit/4
2019-03-26 08:59:12 -HTTP METHOD : GET
2019-03-26 08:59:12 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.edit
2019-03-26 08:59:12 -参数 : [4, {}]
2019-03-26 08:59:12 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec where id = ? 
2019-03-26 08:59:12 -==> Parameters: 4(Long)
2019-03-26 08:59:12 -<==      Total: 1
2019-03-26 08:59:12 -耗时 : 4
2019-03-26 08:59:12 -返回值 : elec/elec/edit
2019-03-26 08:59:12 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-26 08:59:12 -HTTP METHOD : GET
2019-03-26 08:59:12 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-26 08:59:12 -参数 : [userType]
2019-03-26 08:59:12 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-26 08:59:12 -==> Parameters: userType(String)
2019-03-26 08:59:12 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-03-26 08:59:12 -HTTP METHOD : GET
2019-03-26 08:59:12 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-26 08:59:12 -参数 : [userState]
2019-03-26 08:59:12 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-26 08:59:12 -==> Parameters: userState(String)
2019-03-26 08:59:12 -<==      Total: 2
2019-03-26 08:59:12 -耗时 : 4
2019-03-26 08:59:12 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-26 08:59:12 -<==      Total: 2
2019-03-26 08:59:12 -耗时 : 14
2019-03-26 08:59:12 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-26 08:59:12 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-03-26 08:59:12 -HTTP METHOD : GET
2019-03-26 08:59:12 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-26 08:59:12 -参数 : [elecType]
2019-03-26 08:59:12 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-26 08:59:12 -==> Parameters: elecType(String)
2019-03-26 08:59:12 -<==      Total: 2
2019-03-26 08:59:12 -耗时 : 5
2019-03-26 08:59:12 -返回值 : [DictDO{id=139, name='民用电', value='1', type='elecType', description='电量性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='商业电', value='0', type='elecType', description='电量类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-26 08:59:17 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-26 08:59:17 -org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'elecDO' on field 'hu': rejected value [2019-03,1]; codes [typeMismatch.elecDO.hu,typeMismatch.hu,typeMismatch.java.lang.Integer,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [elecDO.hu,hu]; arguments []; default message [hu]]; default message [Failed to convert property value of type 'java.lang.String[]' to required type 'java.lang.Integer' for property 'hu'; nested exception is java.lang.NumberFormatException: For input string: "2019-03,1"]
org.springframework.validation.BindException: org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'elecDO' on field 'hu': rejected value [2019-03,1]; codes [typeMismatch.elecDO.hu,typeMismatch.hu,typeMismatch.java.lang.Integer,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [elecDO.hu,hu]; arguments []; default message [hu]]; default message [Failed to convert property value of type 'java.lang.String[]' to required type 'java.lang.Integer' for property 'hu'; nested exception is java.lang.NumberFormatException: For input string: "2019-03,1"]
	at org.springframework.web.method.annotation.ModelAttributeMethodProcessor.resolveArgument(ModelAttributeMethodProcessor.java:157)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:124)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:161)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:131)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-26 08:59:17 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/elec/elec/update(String), org.springframework.validation.BindException: org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'elecDO' on field 'hu': rejected value [2019-03,1]; codes [typeMismatch.elecDO.hu,typeMismatch.hu,typeMismatch.java.lang.Integer,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [elecDO.hu,hu]; arguments []; default message [hu]]; default message [Failed to convert property value of type 'java.lang.String[]' to required type 'java.lang.Integer' for property 'hu'; nested exception is java.lang.NumberFormatException: For input string: "2019-03,1"](String), null, 2019-03-26 08:59:17.797(Timestamp)
2019-03-26 08:59:17 -<==    Updates: 1
2019-03-26 09:11:12 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 5 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(4)-CONNECTED(4)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 48], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 8], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 441]
2019-03-26 09:17:58 -请求地址 : http://localhost:8081/index
2019-03-26 09:17:58 -HTTP METHOD : GET
2019-03-26 09:17:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-26 09:17:58 -参数 : [{}]
2019-03-26 09:17:58 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-26 09:17:58 -==> Parameters: 1(Long)
2019-03-26 09:17:58 -<==      Total: 46
2019-03-26 09:17:58 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-26 09:17:58 -==> Parameters: 138(Long)
2019-03-26 09:17:58 -<==      Total: 1
2019-03-26 09:17:58 -耗时 : 26
2019-03-26 09:17:58 -返回值 : index_v1
2019-03-26 09:17:58 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-26 09:17:58 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 26(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-26 09:17:58.675(Timestamp)
2019-03-26 09:17:58 -<==    Updates: 1
2019-03-26 09:17:58 -请求地址 : http://localhost:8081/main
2019-03-26 09:17:58 -HTTP METHOD : GET
2019-03-26 09:17:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-26 09:17:58 -参数 : []
2019-03-26 09:17:58 -耗时 : 3
2019-03-26 09:17:58 -返回值 : main
2019-03-26 09:17:59 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-26 09:17:59 -HTTP METHOD : GET
2019-03-26 09:17:59 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-26 09:17:59 -参数 : []
2019-03-26 09:17:59 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-26 09:17:59 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-26 09:17:59 -<==      Total: 0
2019-03-26 09:17:59 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-26 09:17:59 -==> Parameters: 1(Long), 0(String)
2019-03-26 09:17:59 -<==      Total: 1
2019-03-26 09:17:59 -耗时 : 9
2019-03-26 09:17:59 -返回值 : com.bootdo.common.utils.PageUtils@4f989823
2019-03-26 09:17:59 -请求地址 : http://localhost:8081/main
2019-03-26 09:17:59 -HTTP METHOD : GET
2019-03-26 09:17:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-26 09:17:59 -参数 : []
2019-03-26 09:17:59 -耗时 : 0
2019-03-26 09:17:59 -返回值 : main
2019-03-26 09:18:07 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-26 09:18:07 -==> Parameters: 1(Long)
2019-03-26 09:18:07 -<==      Total: 90
2019-03-26 09:18:07 -请求地址 : http://localhost:8081/elec/elec
2019-03-26 09:18:07 -HTTP METHOD : GET
2019-03-26 09:18:07 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-26 09:18:07 -参数 : []
2019-03-26 09:18:07 -耗时 : 1
2019-03-26 09:18:07 -返回值 : elec/elec/elec
2019-03-26 09:18:07 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-26 09:18:07 -HTTP METHOD : GET
2019-03-26 09:18:07 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-26 09:18:07 -参数 : [userType]
2019-03-26 09:18:07 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-26 09:18:07 -==> Parameters: userType(String)
2019-03-26 09:18:07 -<==      Total: 2
2019-03-26 09:18:07 -耗时 : 5
2019-03-26 09:18:07 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-26 09:18:07 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-26 09:18:07 -HTTP METHOD : GET
2019-03-26 09:18:07 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-26 09:18:07 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@25883193]
2019-03-26 09:18:07 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-26 09:18:07 -==> Parameters: 0(Integer), 10(Integer)
2019-03-26 09:18:07 -<==      Total: 10
2019-03-26 09:18:07 -==>  Preparing: select count(*) from elec 
2019-03-26 09:18:07 -==> Parameters: 
2019-03-26 09:18:07 -<==      Total: 1
2019-03-26 09:18:07 -耗时 : 12
2019-03-26 09:18:07 -返回值 : com.bootdo.common.utils.PageUtils@1f064165
2019-03-26 09:18:28 -请求地址 : http://localhost:8081/elec/elec/edit/4
2019-03-26 09:18:28 -HTTP METHOD : GET
2019-03-26 09:18:28 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.edit
2019-03-26 09:18:28 -参数 : [4, {}]
2019-03-26 09:18:28 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec where id = ? 
2019-03-26 09:18:28 -==> Parameters: 4(Long)
2019-03-26 09:18:28 -<==      Total: 1
2019-03-26 09:18:28 -耗时 : 4
2019-03-26 09:18:28 -返回值 : elec/elec/edit
2019-03-26 09:18:28 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-26 09:18:28 -HTTP METHOD : GET
2019-03-26 09:18:28 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-26 09:18:28 -参数 : [userType]
2019-03-26 09:18:28 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-26 09:18:28 -==> Parameters: userType(String)
2019-03-26 09:18:28 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-03-26 09:18:28 -HTTP METHOD : GET
2019-03-26 09:18:28 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-26 09:18:28 -参数 : [userState]
2019-03-26 09:18:28 -<==      Total: 2
2019-03-26 09:18:28 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-03-26 09:18:28 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-26 09:18:28 -耗时 : 4
2019-03-26 09:18:28 -HTTP METHOD : GET
2019-03-26 09:18:28 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-26 09:18:28 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-26 09:18:28 -参数 : [elecType]
2019-03-26 09:18:28 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-26 09:18:28 -==> Parameters: userState(String)
2019-03-26 09:18:28 -==> Parameters: elecType(String)
2019-03-26 09:18:28 -<==      Total: 2
2019-03-26 09:18:28 -耗时 : 8
2019-03-26 09:18:28 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-26 09:18:28 -<==      Total: 2
2019-03-26 09:18:28 -耗时 : 7
2019-03-26 09:18:28 -返回值 : [DictDO{id=139, name='民用电', value='1', type='elecType', description='电量性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='商业电', value='0', type='elecType', description='电量类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-26 09:18:35 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-26 09:18:35 -org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'elecDO' on field 'hu': rejected value [2019-03,1]; codes [typeMismatch.elecDO.hu,typeMismatch.hu,typeMismatch.java.lang.Integer,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [elecDO.hu,hu]; arguments []; default message [hu]]; default message [Failed to convert property value of type 'java.lang.String[]' to required type 'java.lang.Integer' for property 'hu'; nested exception is java.lang.NumberFormatException: For input string: "2019-03,1"]
org.springframework.validation.BindException: org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'elecDO' on field 'hu': rejected value [2019-03,1]; codes [typeMismatch.elecDO.hu,typeMismatch.hu,typeMismatch.java.lang.Integer,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [elecDO.hu,hu]; arguments []; default message [hu]]; default message [Failed to convert property value of type 'java.lang.String[]' to required type 'java.lang.Integer' for property 'hu'; nested exception is java.lang.NumberFormatException: For input string: "2019-03,1"]
	at org.springframework.web.method.annotation.ModelAttributeMethodProcessor.resolveArgument(ModelAttributeMethodProcessor.java:157)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:124)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:161)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:131)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-26 09:18:35 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/elec/elec/update(String), org.springframework.validation.BindException: org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'elecDO' on field 'hu': rejected value [2019-03,1]; codes [typeMismatch.elecDO.hu,typeMismatch.hu,typeMismatch.java.lang.Integer,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [elecDO.hu,hu]; arguments []; default message [hu]]; default message [Failed to convert property value of type 'java.lang.String[]' to required type 'java.lang.Integer' for property 'hu'; nested exception is java.lang.NumberFormatException: For input string: "2019-03,1"](String), null, 2019-03-26 09:18:35.058(Timestamp)
2019-03-26 09:18:35 -<==    Updates: 1
2019-03-26 09:18:46 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-26 09:18:46 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/elec/elec/update(String), org.springframework.validation.BindException: org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'elecDO' on field 'hu': rejected value [2019-03,1]; codes [typeMismatch.elecDO.hu,typeMismatch.hu,typeMismatch.java.lang.Integer,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [elecDO.hu,hu]; arguments []; default message [hu]]; default message [Failed to convert property value of type 'java.lang.String[]' to required type 'java.lang.Integer' for property 'hu'; nested exception is java.lang.NumberFormatException: For input string: "2019-03,1"](String), null, 2019-03-26 09:18:46.993(Timestamp)
2019-03-26 09:18:46 -org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'elecDO' on field 'hu': rejected value [2019-03,1]; codes [typeMismatch.elecDO.hu,typeMismatch.hu,typeMismatch.java.lang.Integer,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [elecDO.hu,hu]; arguments []; default message [hu]]; default message [Failed to convert property value of type 'java.lang.String[]' to required type 'java.lang.Integer' for property 'hu'; nested exception is java.lang.NumberFormatException: For input string: "2019-03,1"]
org.springframework.validation.BindException: org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'elecDO' on field 'hu': rejected value [2019-03,1]; codes [typeMismatch.elecDO.hu,typeMismatch.hu,typeMismatch.java.lang.Integer,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [elecDO.hu,hu]; arguments []; default message [hu]]; default message [Failed to convert property value of type 'java.lang.String[]' to required type 'java.lang.Integer' for property 'hu'; nested exception is java.lang.NumberFormatException: For input string: "2019-03,1"]
	at org.springframework.web.method.annotation.ModelAttributeMethodProcessor.resolveArgument(ModelAttributeMethodProcessor.java:157)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:124)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:161)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:131)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-26 09:18:47 -<==    Updates: 1
2019-03-26 09:18:52 -请求地址 : http://localhost:8081/elec/elec/edit/6
2019-03-26 09:18:52 -HTTP METHOD : GET
2019-03-26 09:18:52 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.edit
2019-03-26 09:18:52 -参数 : [6, {}]
2019-03-26 09:18:52 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec where id = ? 
2019-03-26 09:18:52 -==> Parameters: 6(Long)
2019-03-26 09:18:52 -<==      Total: 1
2019-03-26 09:18:52 -耗时 : 4
2019-03-26 09:18:52 -返回值 : elec/elec/edit
2019-03-26 09:18:53 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-26 09:18:53 -HTTP METHOD : GET
2019-03-26 09:18:53 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-26 09:18:53 -参数 : [userType]
2019-03-26 09:18:53 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-26 09:18:53 -==> Parameters: userType(String)
2019-03-26 09:18:53 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-03-26 09:18:53 -HTTP METHOD : GET
2019-03-26 09:18:53 -<==      Total: 2
2019-03-26 09:18:53 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-26 09:18:53 -耗时 : 4
2019-03-26 09:18:53 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-03-26 09:18:53 -HTTP METHOD : GET
2019-03-26 09:18:53 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-26 09:18:53 -参数 : [elecType]
2019-03-26 09:18:53 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-26 09:18:53 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-26 09:18:53 -参数 : [userState]
2019-03-26 09:18:53 -==> Parameters: elecType(String)
2019-03-26 09:18:53 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-26 09:18:53 -==> Parameters: userState(String)
2019-03-26 09:18:53 -<==      Total: 2
2019-03-26 09:18:53 -耗时 : 9
2019-03-26 09:18:53 -返回值 : [DictDO{id=139, name='民用电', value='1', type='elecType', description='电量性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='商业电', value='0', type='elecType', description='电量类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-26 09:18:53 -<==      Total: 2
2019-03-26 09:18:53 -耗时 : 13
2019-03-26 09:18:53 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-26 09:18:58 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-26 09:18:58 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/elec/elec/update(String), org.springframework.validation.BindException: org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'elecDO' on field 'hu': rejected value [2019-03,1]; codes [typeMismatch.elecDO.hu,typeMismatch.hu,typeMismatch.java.lang.Integer,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [elecDO.hu,hu]; arguments []; default message [hu]]; default message [Failed to convert property value of type 'java.lang.String[]' to required type 'java.lang.Integer' for property 'hu'; nested exception is java.lang.NumberFormatException: For input string: "2019-03,1"](String), null, 2019-03-26 09:18:58.899(Timestamp)
2019-03-26 09:18:58 -org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'elecDO' on field 'hu': rejected value [2019-03,1]; codes [typeMismatch.elecDO.hu,typeMismatch.hu,typeMismatch.java.lang.Integer,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [elecDO.hu,hu]; arguments []; default message [hu]]; default message [Failed to convert property value of type 'java.lang.String[]' to required type 'java.lang.Integer' for property 'hu'; nested exception is java.lang.NumberFormatException: For input string: "2019-03,1"]
org.springframework.validation.BindException: org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'elecDO' on field 'hu': rejected value [2019-03,1]; codes [typeMismatch.elecDO.hu,typeMismatch.hu,typeMismatch.java.lang.Integer,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [elecDO.hu,hu]; arguments []; default message [hu]]; default message [Failed to convert property value of type 'java.lang.String[]' to required type 'java.lang.Integer' for property 'hu'; nested exception is java.lang.NumberFormatException: For input string: "2019-03,1"]
	at org.springframework.web.method.annotation.ModelAttributeMethodProcessor.resolveArgument(ModelAttributeMethodProcessor.java:157)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:124)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:161)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:131)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-26 09:18:58 -<==    Updates: 1
2019-03-26 09:44:21 -Starting BootdoApplication on ZJZL-20180906VX with PID 4264 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-26 09:44:22 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-26 09:44:22 -The following profiles are active: dev
2019-03-26 09:44:22 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2cae1042: startup date [Tue Mar 26 09:44:22 CST 2019]; root of context hierarchy
2019-03-26 09:44:26 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-26 09:44:29 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$77e927dd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 09:44:29 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$6a425684] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 09:44:30 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 09:44:31 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 09:44:31 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 09:44:31 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-26 09:44:31 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-26 09:44:31 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 09:44:31 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 09:44:31 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 09:44:32 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 09:44:33 -Tomcat initialized with port(s): 8081 (http)
2019-03-26 09:44:33 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-26 09:44:33 -Starting service [Tomcat]
2019-03-26 09:44:33 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-26 09:44:33 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-26 09:44:34 -Initializing Spring embedded WebApplicationContext
2019-03-26 09:44:34 -Root WebApplicationContext: initialization completed in 11991 ms
2019-03-26 09:44:35 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-26 09:44:35 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-26 09:44:35 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-26 09:44:35 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-26 09:44:35 -Filter xssFilter was not registered (disabled)
2019-03-26 09:44:35 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-26 09:44:35 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-26 09:44:35 -Servlet statViewServlet mapped to [/druid/*]
2019-03-26 09:44:35 -Servlet dispatcherServlet mapped to [/]
2019-03-26 09:44:41 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2cae1042: startup date [Tue Mar 26 09:44:22 CST 2019]; root of context hierarchy
2019-03-26 09:44:42 -Using default implementation for ThreadExecutor
2019-03-26 09:44:42 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-26 09:44:42 -Quartz Scheduler v.2.2.1 created.
2019-03-26 09:44:42 -RAMJobStore initialized.
2019-03-26 09:44:42 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-26 09:44:42 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-26 09:44:42 -Quartz scheduler version: 2.2.1
2019-03-26 09:44:42 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@3e55eeb9
2019-03-26 09:44:43 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-26 09:44:43 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-26 09:44:46 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-03-26 09:44:46 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-26 09:44:46 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-26 09:44:46 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-26 09:44:46 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-26 09:44:46 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-26 09:44:46 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-26 09:44:46 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-26 09:44:46 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-26 09:44:46 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-26 09:44:46 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-26 09:44:46 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 09:44:46 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-26 09:44:46 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-26 09:44:46 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 09:44:46 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-26 09:44:46 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-26 09:44:46 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-26 09:44:46 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-26 09:44:46 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-26 09:44:46 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-26 09:44:46 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-26 09:44:46 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 09:44:46 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-26 09:44:46 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-26 09:44:46 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 09:44:46 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-26 09:44:46 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-26 09:44:46 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 09:44:46 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-26 09:44:46 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-26 09:44:46 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-26 09:44:46 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-26 09:44:46 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-26 09:44:46 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-26 09:44:46 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-26 09:44:46 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-26 09:44:46 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-26 09:44:46 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 09:44:46 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-26 09:44:46 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-26 09:44:46 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 09:44:46 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-26 09:44:46 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-26 09:44:46 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-26 09:44:46 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-26 09:44:46 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 09:44:46 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-26 09:44:46 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-03-26 09:44:46 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-26 09:44:46 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-26 09:44:46 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-26 09:44:46 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-26 09:44:46 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-26 09:44:46 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-26 09:44:46 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-26 09:44:46 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-26 09:44:46 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-26 09:44:46 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-26 09:44:46 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 09:44:46 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-26 09:44:46 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-03-26 09:44:46 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-26 09:44:46 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-26 09:44:46 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-26 09:44:46 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-26 09:44:46 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-26 09:44:46 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-26 09:44:46 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 09:44:46 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-03-26 09:44:46 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 09:44:46 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-26 09:44:46 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-26 09:44:46 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-26 09:44:46 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-26 09:44:46 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-26 09:44:46 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-26 09:44:46 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-26 09:44:46 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 09:44:46 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-26 09:44:46 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-26 09:44:46 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-26 09:44:46 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-26 09:44:46 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-26 09:44:46 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-26 09:44:46 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-26 09:44:46 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-26 09:44:46 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-26 09:44:46 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-26 09:44:46 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 09:44:46 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-26 09:44:46 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 09:44:46 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-26 09:44:46 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-03-26 09:44:46 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-03-26 09:44:46 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-26 09:44:46 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-26 09:44:46 -Mapped "{[/moneyList/moneyList/UserList],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-26 09:44:46 -Mapped "{[/moneyList/moneyList/LikeName],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.LikeName(org.springframework.ui.Model)
2019-03-26 09:44:46 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-26 09:44:46 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-26 09:44:46 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-26 09:44:46 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-26 09:44:46 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-26 09:44:46 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 09:44:46 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-26 09:44:46 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 09:44:46 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-26 09:44:46 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-26 09:44:46 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-26 09:44:46 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-26 09:44:46 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-26 09:44:46 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-26 09:44:46 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 09:44:46 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-26 09:44:46 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 09:44:46 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-26 09:44:46 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-26 09:44:46 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-26 09:44:46 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-26 09:44:46 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-26 09:44:46 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-26 09:44:46 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 09:44:46 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-26 09:44:46 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 09:44:46 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-26 09:44:46 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-26 09:44:46 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-26 09:44:46 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-26 09:44:46 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-26 09:44:46 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-26 09:44:46 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-26 09:44:46 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 09:44:46 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-26 09:44:46 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-26 09:44:46 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 09:44:46 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-26 09:44:46 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 09:44:46 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-26 09:44:46 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-26 09:44:46 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-26 09:44:46 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-26 09:44:46 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-26 09:44:46 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 09:44:46 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-26 09:44:46 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 09:44:46 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-26 09:44:46 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-26 09:44:46 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 09:44:46 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-26 09:44:46 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-26 09:44:46 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-26 09:44:46 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-26 09:44:46 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-26 09:44:46 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-26 09:44:46 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-26 09:44:46 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 09:44:46 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-26 09:44:46 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-26 09:44:46 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-26 09:44:46 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-26 09:44:46 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-26 09:44:46 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-26 09:44:46 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-26 09:44:47 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-26 09:44:47 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-26 09:44:47 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-26 09:44:47 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-26 09:44:47 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-26 09:44:47 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 09:44:47 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-26 09:44:47 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-26 09:44:47 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-26 09:44:47 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-26 09:44:47 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-26 09:44:47 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-26 09:44:47 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-26 09:44:47 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-26 09:44:47 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-26 09:44:47 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-26 09:44:47 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-26 09:44:47 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-26 09:44:47 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 09:44:47 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-26 09:44:47 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-26 09:44:47 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-26 09:44:47 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-26 09:44:47 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 09:44:47 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-26 09:44:47 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-26 09:44:47 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-26 09:44:47 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 09:44:47 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-26 09:44:47 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-26 09:44:47 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-26 09:44:47 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-26 09:44:47 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-26 09:44:47 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-26 09:44:47 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-26 09:44:47 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-26 09:44:47 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-26 09:44:47 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-26 09:44:47 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-26 09:44:47 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-26 09:44:47 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-26 09:44:47 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-26 09:44:47 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-26 09:44:47 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-26 09:44:47 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-26 09:44:47 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 09:44:47 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-26 09:44:47 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-26 09:44:47 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 09:44:47 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-26 09:44:47 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 09:44:47 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-26 09:44:47 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-26 09:44:47 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-26 09:44:47 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-26 09:44:47 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-26 09:44:47 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-26 09:44:47 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 09:44:47 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-26 09:44:47 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-26 09:44:47 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 09:44:47 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-26 09:44:47 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-03-26 09:44:47 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-03-26 09:44:47 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-26 09:44:47 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-26 09:44:47 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-26 09:44:47 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-26 09:44:47 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-26 09:44:47 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-26 09:44:47 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-26 09:44:47 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-26 09:44:48 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-26 09:44:48 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2cae1042: startup date [Tue Mar 26 09:44:22 CST 2019]; root of context hierarchy
2019-03-26 09:44:48 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-26 09:44:48 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-26 09:44:48 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-26 09:44:48 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-26 09:44:49 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-26 09:44:51 -Registering beans for JMX exposure on startup
2019-03-26 09:44:51 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-26 09:44:51 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-26 09:44:51 -Starting beans in phase 2147483647
2019-03-26 09:44:51 -Context refreshed
2019-03-26 09:44:51 -Found 1 custom documentation plugin(s)
2019-03-26 09:44:51 -Scanning for api listing references
2019-03-26 09:44:52 -Generating unique operation named: removeUsingPOST_1
2019-03-26 09:44:52 -Generating unique operation named: addUsingGET_1
2019-03-26 09:44:52 -Generating unique operation named: editUsingGET_1
2019-03-26 09:44:52 -Generating unique operation named: listUsingGET_1
2019-03-26 09:44:52 -Generating unique operation named: removeUsingPOST_2
2019-03-26 09:44:52 -Generating unique operation named: removeUsingPOST_3
2019-03-26 09:44:52 -Generating unique operation named: saveUsingPOST_1
2019-03-26 09:44:52 -Generating unique operation named: updateUsingGET_1
2019-03-26 09:44:52 -Generating unique operation named: updateUsingHEAD_1
2019-03-26 09:44:52 -Generating unique operation named: updateUsingPOST_1
2019-03-26 09:44:52 -Generating unique operation named: updateUsingPUT_1
2019-03-26 09:44:52 -Generating unique operation named: updateUsingPATCH_1
2019-03-26 09:44:52 -Generating unique operation named: updateUsingDELETE_1
2019-03-26 09:44:52 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-26 09:44:52 -Generating unique operation named: updateUsingTRACE_1
2019-03-26 09:44:52 -Generating unique operation named: addUsingGET_2
2019-03-26 09:44:52 -Generating unique operation named: editUsingGET_2
2019-03-26 09:44:52 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-26 09:44:52 -Generating unique operation named: listUsingGET_2
2019-03-26 09:44:52 -Generating unique operation named: removeUsingPOST_4
2019-03-26 09:44:52 -Generating unique operation named: removeUsingPOST_5
2019-03-26 09:44:52 -Generating unique operation named: saveUsingPOST_2
2019-03-26 09:44:52 -Generating unique operation named: updateUsingPOST_2
2019-03-26 09:44:52 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-26 09:44:52 -Generating unique operation named: addUsingGET_3
2019-03-26 09:44:52 -Generating unique operation named: editUsingGET_3
2019-03-26 09:44:52 -Generating unique operation named: listUsingGET_3
2019-03-26 09:44:53 -Generating unique operation named: removeUsingPOST_6
2019-03-26 09:44:53 -Generating unique operation named: removeUsingPOST_7
2019-03-26 09:44:53 -Generating unique operation named: saveUsingPOST_3
2019-03-26 09:44:53 -Generating unique operation named: updateUsingGET_2
2019-03-26 09:44:53 -Generating unique operation named: updateUsingHEAD_2
2019-03-26 09:44:53 -Generating unique operation named: updateUsingPOST_3
2019-03-26 09:44:53 -Generating unique operation named: updateUsingPUT_2
2019-03-26 09:44:53 -Generating unique operation named: updateUsingPATCH_2
2019-03-26 09:44:53 -Generating unique operation named: updateUsingDELETE_2
2019-03-26 09:44:53 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-26 09:44:53 -Generating unique operation named: updateUsingTRACE_2
2019-03-26 09:44:53 -Generating unique operation named: addUsingGET_4
2019-03-26 09:44:53 -Generating unique operation named: editUsingGET_4
2019-03-26 09:44:53 -Generating unique operation named: listUsingGET_4
2019-03-26 09:44:53 -Generating unique operation named: removeUsingPOST_8
2019-03-26 09:44:53 -Generating unique operation named: removeUsingPOST_9
2019-03-26 09:44:53 -Generating unique operation named: saveUsingPOST_4
2019-03-26 09:44:53 -Generating unique operation named: updateUsingGET_3
2019-03-26 09:44:53 -Generating unique operation named: updateUsingHEAD_3
2019-03-26 09:44:53 -Generating unique operation named: updateUsingPOST_4
2019-03-26 09:44:53 -Generating unique operation named: updateUsingPUT_3
2019-03-26 09:44:53 -Generating unique operation named: updateUsingPATCH_3
2019-03-26 09:44:53 -Generating unique operation named: updateUsingDELETE_3
2019-03-26 09:44:53 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-26 09:44:53 -Generating unique operation named: updateUsingTRACE_3
2019-03-26 09:44:53 -Generating unique operation named: ElecUsingGET_1
2019-03-26 09:44:53 -Generating unique operation named: addUsingGET_5
2019-03-26 09:44:53 -Generating unique operation named: editUsingGET_5
2019-03-26 09:44:53 -Generating unique operation named: listUsingGET_5
2019-03-26 09:44:53 -Generating unique operation named: removeUsingPOST_10
2019-03-26 09:44:53 -Generating unique operation named: removeUsingPOST_11
2019-03-26 09:44:53 -Generating unique operation named: saveUsingPOST_5
2019-03-26 09:44:53 -Generating unique operation named: updateUsingGET_4
2019-03-26 09:44:53 -Generating unique operation named: updateUsingHEAD_4
2019-03-26 09:44:53 -Generating unique operation named: updateUsingPOST_5
2019-03-26 09:44:53 -Generating unique operation named: updateUsingPUT_4
2019-03-26 09:44:53 -Generating unique operation named: updateUsingPATCH_4
2019-03-26 09:44:53 -Generating unique operation named: updateUsingDELETE_4
2019-03-26 09:44:53 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-26 09:44:53 -Generating unique operation named: updateUsingTRACE_4
2019-03-26 09:44:53 -Generating unique operation named: editUsingGET_6
2019-03-26 09:44:53 -Generating unique operation named: listUsingGET_6
2019-03-26 09:44:53 -Generating unique operation named: updateUsingPOST_6
2019-03-26 09:44:53 -Generating unique operation named: addUsingGET_6
2019-03-26 09:44:53 -Generating unique operation named: editUsingGET_7
2019-03-26 09:44:53 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-26 09:44:53 -Generating unique operation named: listUsingGET_7
2019-03-26 09:44:53 -Generating unique operation named: removeUsingPOST_12
2019-03-26 09:44:53 -Generating unique operation named: removeUsingPOST_13
2019-03-26 09:44:53 -Generating unique operation named: saveUsingPOST_6
2019-03-26 09:44:53 -Generating unique operation named: updateUsingGET_5
2019-03-26 09:44:53 -Generating unique operation named: updateUsingHEAD_5
2019-03-26 09:44:53 -Generating unique operation named: updateUsingPOST_7
2019-03-26 09:44:53 -Generating unique operation named: updateUsingPUT_5
2019-03-26 09:44:53 -Generating unique operation named: updateUsingPATCH_5
2019-03-26 09:44:53 -Generating unique operation named: updateUsingDELETE_5
2019-03-26 09:44:53 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-26 09:44:53 -Generating unique operation named: updateUsingTRACE_5
2019-03-26 09:44:53 -Generating unique operation named: exprotExcelUsingGET_4
2019-03-26 09:44:53 -Generating unique operation named: addUsingGET_7
2019-03-26 09:44:53 -Generating unique operation named: editUsingGET_8
2019-03-26 09:44:53 -Generating unique operation named: listUsingGET_8
2019-03-26 09:44:53 -Generating unique operation named: removeUsingPOST_14
2019-03-26 09:44:53 -Generating unique operation named: removeUsingPOST_15
2019-03-26 09:44:53 -Generating unique operation named: saveUsingPOST_7
2019-03-26 09:44:53 -Generating unique operation named: updateUsingGET_6
2019-03-26 09:44:53 -Generating unique operation named: updateUsingHEAD_6
2019-03-26 09:44:53 -Generating unique operation named: updateUsingPOST_8
2019-03-26 09:44:53 -Generating unique operation named: updateUsingPUT_6
2019-03-26 09:44:53 -Generating unique operation named: updateUsingPATCH_6
2019-03-26 09:44:53 -Generating unique operation named: updateUsingDELETE_6
2019-03-26 09:44:53 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-26 09:44:53 -Generating unique operation named: updateUsingTRACE_6
2019-03-26 09:44:53 -Generating unique operation named: addUsingGET_8
2019-03-26 09:44:53 -Generating unique operation named: editUsingGET_9
2019-03-26 09:44:53 -Generating unique operation named: listUsingGET_9
2019-03-26 09:44:53 -Generating unique operation named: removeUsingPOST_16
2019-03-26 09:44:53 -Generating unique operation named: removeUsingPOST_17
2019-03-26 09:44:53 -Generating unique operation named: saveUsingPOST_8
2019-03-26 09:44:53 -Generating unique operation named: updateUsingGET_7
2019-03-26 09:44:53 -Generating unique operation named: updateUsingHEAD_7
2019-03-26 09:44:53 -Generating unique operation named: updateUsingPOST_9
2019-03-26 09:44:53 -Generating unique operation named: updateUsingPUT_7
2019-03-26 09:44:53 -Generating unique operation named: updateUsingPATCH_7
2019-03-26 09:44:53 -Generating unique operation named: updateUsingDELETE_7
2019-03-26 09:44:53 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-26 09:44:53 -Generating unique operation named: updateUsingTRACE_7
2019-03-26 09:44:53 -Generating unique operation named: addUsingGET_9
2019-03-26 09:44:53 -Generating unique operation named: editUsingGET_10
2019-03-26 09:44:53 -Generating unique operation named: infoUsingGET_1
2019-03-26 09:44:53 -Generating unique operation named: infoUsingHEAD_1
2019-03-26 09:44:53 -Generating unique operation named: infoUsingPOST_1
2019-03-26 09:44:53 -Generating unique operation named: infoUsingPUT_1
2019-03-26 09:44:53 -Generating unique operation named: infoUsingPATCH_1
2019-03-26 09:44:54 -Generating unique operation named: infoUsingDELETE_1
2019-03-26 09:44:54 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-26 09:44:54 -Generating unique operation named: infoUsingTRACE_1
2019-03-26 09:44:54 -Generating unique operation named: listUsingGET_10
2019-03-26 09:44:54 -Generating unique operation named: removeUsingPOST_18
2019-03-26 09:44:54 -Generating unique operation named: removeUsingPOST_19
2019-03-26 09:44:54 -Generating unique operation named: saveUsingPOST_9
2019-03-26 09:44:54 -Generating unique operation named: updateUsingPOST_10
2019-03-26 09:44:54 -Generating unique operation named: listUsingGET_11
2019-03-26 09:44:54 -Generating unique operation named: removeUsingPOST_20
2019-03-26 09:44:54 -Generating unique operation named: welcomeUsingGET_1
2019-03-26 09:44:54 -Generating unique operation named: addUsingGET_10
2019-03-26 09:44:54 -Generating unique operation named: editUsingGET_11
2019-03-26 09:44:54 -Generating unique operation named: listUsingGET_12
2019-03-26 09:44:54 -Generating unique operation named: removeUsingPOST_21
2019-03-26 09:44:54 -Generating unique operation named: saveUsingPOST_10
2019-03-26 09:44:54 -Generating unique operation named: treeUsingGET_1
2019-03-26 09:44:54 -Generating unique operation named: treeUsingGET_2
2019-03-26 09:44:54 -Generating unique operation named: updateUsingPOST_11
2019-03-26 09:44:54 -Generating unique operation named: addUsingGET_11
2019-03-26 09:44:54 -Generating unique operation named: editUsingGET_12
2019-03-26 09:44:54 -Generating unique operation named: listUsingGET_13
2019-03-26 09:44:54 -Generating unique operation named: removeUsingPOST_22
2019-03-26 09:44:54 -Generating unique operation named: removeUsingPOST_23
2019-03-26 09:44:54 -Generating unique operation named: saveUsingPOST_11
2019-03-26 09:44:54 -Generating unique operation named: updateUsingGET_8
2019-03-26 09:44:54 -Generating unique operation named: updateUsingHEAD_8
2019-03-26 09:44:54 -Generating unique operation named: updateUsingPOST_12
2019-03-26 09:44:54 -Generating unique operation named: updateUsingPUT_8
2019-03-26 09:44:54 -Generating unique operation named: updateUsingPATCH_8
2019-03-26 09:44:54 -Generating unique operation named: updateUsingDELETE_8
2019-03-26 09:44:54 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-26 09:44:54 -Generating unique operation named: updateUsingTRACE_8
2019-03-26 09:44:54 -Generating unique operation named: addUsingGET_12
2019-03-26 09:44:54 -Generating unique operation named: editUsingGET_13
2019-03-26 09:44:54 -Generating unique operation named: listUsingGET_14
2019-03-26 09:44:54 -Generating unique operation named: removeUsingPOST_24
2019-03-26 09:44:54 -Generating unique operation named: removeUsingPOST_25
2019-03-26 09:44:54 -Generating unique operation named: saveUsingPOST_12
2019-03-26 09:44:54 -Generating unique operation named: updateUsingGET_9
2019-03-26 09:44:54 -Generating unique operation named: updateUsingHEAD_9
2019-03-26 09:44:54 -Generating unique operation named: updateUsingPOST_13
2019-03-26 09:44:54 -Generating unique operation named: updateUsingPUT_9
2019-03-26 09:44:54 -Generating unique operation named: updateUsingPATCH_9
2019-03-26 09:44:54 -Generating unique operation named: updateUsingDELETE_9
2019-03-26 09:44:54 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-26 09:44:54 -Generating unique operation named: updateUsingTRACE_9
2019-03-26 09:44:54 -Generating unique operation named: addUsingGET_13
2019-03-26 09:44:54 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-26 09:44:54 -Generating unique operation named: editUsingGET_14
2019-03-26 09:44:54 -Generating unique operation named: listUsingGET_15
2019-03-26 09:44:54 -Generating unique operation named: saveUsingPOST_13
2019-03-26 09:44:54 -Generating unique operation named: saveUsingPOST_14
2019-03-26 09:44:54 -Generating unique operation named: updateUsingPOST_14
2019-03-26 09:44:54 -Generating unique operation named: listUsingGET_16
2019-03-26 09:44:54 -Generating unique operation named: listUsingHEAD_1
2019-03-26 09:44:54 -Generating unique operation named: listUsingPOST_1
2019-03-26 09:44:54 -Generating unique operation named: listUsingPUT_1
2019-03-26 09:44:54 -Generating unique operation named: listUsingPATCH_1
2019-03-26 09:44:54 -Generating unique operation named: listUsingDELETE_1
2019-03-26 09:44:54 -Generating unique operation named: listUsingOPTIONS_1
2019-03-26 09:44:54 -Generating unique operation named: listUsingTRACE_1
2019-03-26 09:44:54 -Generating unique operation named: addUsingGET_14
2019-03-26 09:44:54 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-26 09:44:54 -Generating unique operation named: editUsingGET_15
2019-03-26 09:44:54 -Generating unique operation named: listUsingGET_17
2019-03-26 09:44:54 -Generating unique operation named: removeUsingPOST_26
2019-03-26 09:44:54 -Generating unique operation named: saveUsingPOST_15
2019-03-26 09:44:54 -Generating unique operation named: treeUsingGET_3
2019-03-26 09:44:54 -Generating unique operation named: treeViewUsingGET_1
2019-03-26 09:44:54 -Generating unique operation named: updateUsingPOST_15
2019-03-26 09:44:55 -Generating unique operation named: addUsingGET_15
2019-03-26 09:44:55 -Generating unique operation named: editUsingGET_16
2019-03-26 09:44:55 -Generating unique operation named: exprotExcelUsingGET_5
2019-03-26 09:44:55 -Generating unique operation named: listUsingGET_18
2019-03-26 09:44:55 -Generating unique operation named: removeUsingPOST_27
2019-03-26 09:44:55 -Generating unique operation named: removeUsingPOST_28
2019-03-26 09:44:55 -Generating unique operation named: saveUsingPOST_16
2019-03-26 09:44:55 -Generating unique operation named: updateUsingGET_10
2019-03-26 09:44:55 -Generating unique operation named: updateUsingHEAD_10
2019-03-26 09:44:55 -Generating unique operation named: updateUsingPOST_16
2019-03-26 09:44:55 -Generating unique operation named: updateUsingPUT_10
2019-03-26 09:44:55 -Generating unique operation named: updateUsingPATCH_10
2019-03-26 09:44:55 -Generating unique operation named: updateUsingDELETE_10
2019-03-26 09:44:55 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-26 09:44:55 -Generating unique operation named: updateUsingTRACE_10
2019-03-26 09:44:55 -Generating unique operation named: exprotExcelUsingGET_6
2019-03-26 09:44:55 -Generating unique operation named: addUsingGET_16
2019-03-26 09:44:55 -Generating unique operation named: editUsingGET_17
2019-03-26 09:44:55 -Generating unique operation named: listUsingGET_19
2019-03-26 09:44:55 -Generating unique operation named: removeUsingPOST_29
2019-03-26 09:44:55 -Generating unique operation named: removeUsingPOST_30
2019-03-26 09:44:55 -Generating unique operation named: saveUsingPOST_17
2019-03-26 09:44:55 -Generating unique operation named: updateUsingGET_11
2019-03-26 09:44:55 -Generating unique operation named: updateUsingHEAD_11
2019-03-26 09:44:55 -Generating unique operation named: updateUsingPOST_17
2019-03-26 09:44:55 -Generating unique operation named: updateUsingPUT_11
2019-03-26 09:44:55 -Generating unique operation named: updateUsingPATCH_11
2019-03-26 09:44:55 -Generating unique operation named: updateUsingDELETE_11
2019-03-26 09:44:55 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-26 09:44:55 -Generating unique operation named: updateUsingTRACE_11
2019-03-26 09:44:55 -Generating unique operation named: addUsingGET_17
2019-03-26 09:44:55 -Generating unique operation named: editUsingGET_18
2019-03-26 09:44:55 -Generating unique operation named: listUsingGET_20
2019-03-26 09:44:55 -Generating unique operation named: removeUsingPOST_31
2019-03-26 09:44:55 -Generating unique operation named: removeUsingPOST_32
2019-03-26 09:44:55 -Generating unique operation named: saveUsingPOST_18
2019-03-26 09:44:55 -Generating unique operation named: updateUsingGET_12
2019-03-26 09:44:55 -Generating unique operation named: updateUsingHEAD_12
2019-03-26 09:44:55 -Generating unique operation named: updateUsingPOST_18
2019-03-26 09:44:55 -Generating unique operation named: updateUsingPUT_12
2019-03-26 09:44:55 -Generating unique operation named: updateUsingPATCH_12
2019-03-26 09:44:55 -Generating unique operation named: updateUsingDELETE_12
2019-03-26 09:44:55 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-26 09:44:55 -Generating unique operation named: updateUsingTRACE_12
2019-03-26 09:44:55 -Starting Quartz Scheduler now
2019-03-26 09:44:55 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-26 09:44:55 -Starting...
2019-03-26 09:44:55 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-26 09:44:55 -Started.
2019-03-26 09:44:55 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-26 09:44:55 -Failed to start connector [Connector[HTTP/1.1-8081]]
org.apache.catalina.LifecycleException: Failed to start component [Connector[HTTP/1.1-8081]]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:167)
	at org.apache.catalina.core.StandardService.addConnector(StandardService.java:225)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.addPreviouslyRemovedConnectors(TomcatWebServer.java:256)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:198)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.startWebServer(ServletWebServerApplicationContext.java:300)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.finishRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:553)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.bootdo.BootdoApplication.main(BootdoApplication.java:21)
Caused by: org.apache.catalina.LifecycleException: Protocol handler start failed
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1020)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
	... 13 common frames omitted
Caused by: java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Unknown Source)
	at sun.nio.ch.Net.bind(Unknown Source)
	at sun.nio.ch.ServerSocketChannelImpl.bind(Unknown Source)
	at sun.nio.ch.ServerSocketAdaptor.bind(Unknown Source)
	at org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:210)
	at org.apache.tomcat.util.net.AbstractEndpoint.start(AbstractEndpoint.java:1150)
	at org.apache.coyote.AbstractProtocol.start(AbstractProtocol.java:591)
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1018)
	... 14 common frames omitted
2019-03-26 09:44:55 -Pausing ProtocolHandler ["http-nio-8081"]
2019-03-26 09:44:55 -Stopping service [Tomcat]
2019-03-26 09:44:55 -The stop() method was called on component [StandardServer[-1]] after stop() had already been called. The second call will be ignored.
2019-03-26 09:44:55 -Stopping ProtocolHandler ["http-nio-8081"]
2019-03-26 09:44:55 -Destroying ProtocolHandler ["http-nio-8081"]
2019-03-26 09:44:55 -

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2019-03-26 09:44:55 -

***************************
APPLICATION FAILED TO START
***************************

Description:

The Tomcat connector configured to listen on port 8081 failed to start. The port may already be in use or the connector may be misconfigured.

Action:

Verify the connector's configuration, identify and stop any process that's listening on port 8081, or configure this application to listen on another port.

2019-03-26 09:44:55 -Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2cae1042: startup date [Tue Mar 26 09:44:22 CST 2019]; root of context hierarchy
2019-03-26 09:44:55 -Stopping beans in phase 2147483647
2019-03-26 09:44:55 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2019-03-26 09:44:55 -Stopping...
2019-03-26 09:44:55 -BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-26 09:44:55 -Stopped.
2019-03-26 09:44:55 -Unregistering JMX-exposed beans on shutdown
2019-03-26 09:44:55 -Unregistering JMX-exposed beans
2019-03-26 09:44:55 -Shutting down ExecutorService 'brokerChannelExecutor'
2019-03-26 09:44:55 -Shutting down ExecutorService 'messageBrokerTaskScheduler'
2019-03-26 09:44:55 -Shutting down ExecutorService 'clientOutboundChannelExecutor'
2019-03-26 09:44:55 -Shutting down ExecutorService 'clientInboundChannelExecutor'
2019-03-26 09:44:55 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutting down.
2019-03-26 09:44:55 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2019-03-26 09:44:55 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutdown complete.
2019-03-26 09:44:55 -Shutting down Quartz Scheduler
2019-03-26 09:45:33 -Starting BootdoApplication on ZJZL-20180906VX with PID 4664 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-26 09:45:33 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-26 09:45:33 -The following profiles are active: dev
2019-03-26 09:45:33 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@419a20a6: startup date [Tue Mar 26 09:45:33 CST 2019]; root of context hierarchy
2019-03-26 09:45:37 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-26 09:45:39 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$8f2c3ae7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 09:45:39 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$8185698e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 09:45:40 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 09:45:41 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 09:45:41 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 09:45:41 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-26 09:45:41 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-26 09:45:41 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 09:45:41 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 09:45:41 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 09:45:41 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 09:45:42 -Tomcat initialized with port(s): 8081 (http)
2019-03-26 09:45:42 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-26 09:45:42 -Starting service [Tomcat]
2019-03-26 09:45:42 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-26 09:45:42 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-26 09:45:42 -Initializing Spring embedded WebApplicationContext
2019-03-26 09:45:42 -Root WebApplicationContext: initialization completed in 9500 ms
2019-03-26 09:45:44 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-26 09:45:44 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-26 09:45:44 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-26 09:45:44 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-26 09:45:44 -Filter xssFilter was not registered (disabled)
2019-03-26 09:45:44 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-26 09:45:44 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-26 09:45:44 -Servlet statViewServlet mapped to [/druid/*]
2019-03-26 09:45:44 -Servlet dispatcherServlet mapped to [/]
2019-03-26 09:45:47 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@419a20a6: startup date [Tue Mar 26 09:45:33 CST 2019]; root of context hierarchy
2019-03-26 09:45:48 -Using default implementation for ThreadExecutor
2019-03-26 09:45:48 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-26 09:45:48 -Quartz Scheduler v.2.2.1 created.
2019-03-26 09:45:48 -RAMJobStore initialized.
2019-03-26 09:45:48 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-26 09:45:48 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-26 09:45:48 -Quartz scheduler version: 2.2.1
2019-03-26 09:45:48 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@20b67366
2019-03-26 09:45:49 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-26 09:45:49 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-26 09:45:51 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-03-26 09:45:51 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-26 09:45:51 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-26 09:45:51 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-26 09:45:51 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-26 09:45:51 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-26 09:45:51 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-26 09:45:51 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-26 09:45:51 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-26 09:45:51 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-26 09:45:51 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-26 09:45:51 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 09:45:51 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-26 09:45:51 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 09:45:51 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-26 09:45:51 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-26 09:45:51 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-26 09:45:51 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-26 09:45:52 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-26 09:45:52 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-26 09:45:52 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-26 09:45:52 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-26 09:45:52 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 09:45:52 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-26 09:45:52 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-26 09:45:52 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 09:45:52 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-26 09:45:52 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-26 09:45:52 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 09:45:52 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-26 09:45:52 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-26 09:45:52 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-26 09:45:52 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-26 09:45:52 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-26 09:45:52 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-26 09:45:52 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-26 09:45:52 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-26 09:45:52 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-26 09:45:52 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 09:45:52 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-26 09:45:52 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-26 09:45:52 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 09:45:52 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-26 09:45:52 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-26 09:45:52 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-26 09:45:52 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-26 09:45:52 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 09:45:52 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-26 09:45:52 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-03-26 09:45:52 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-26 09:45:52 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-26 09:45:52 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-26 09:45:52 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-26 09:45:52 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-26 09:45:52 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-26 09:45:52 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-26 09:45:52 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-26 09:45:52 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-26 09:45:52 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 09:45:52 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-26 09:45:52 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-26 09:45:52 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-26 09:45:52 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-26 09:45:52 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-03-26 09:45:52 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-26 09:45:52 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-26 09:45:52 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-26 09:45:52 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-26 09:45:52 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 09:45:52 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-03-26 09:45:52 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 09:45:52 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-26 09:45:52 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-26 09:45:52 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-26 09:45:52 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-26 09:45:52 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-26 09:45:52 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-26 09:45:52 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-26 09:45:52 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 09:45:52 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-26 09:45:52 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-26 09:45:52 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-26 09:45:52 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-26 09:45:52 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-26 09:45:52 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-26 09:45:52 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-26 09:45:52 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-26 09:45:52 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-26 09:45:52 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-26 09:45:52 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 09:45:52 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-26 09:45:52 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 09:45:52 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-26 09:45:52 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-26 09:45:52 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-26 09:45:52 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-03-26 09:45:52 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-03-26 09:45:52 -Mapped "{[/moneyList/moneyList/LikeName],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.LikeName(org.springframework.ui.Model)
2019-03-26 09:45:52 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-26 09:45:52 -Mapped "{[/moneyList/moneyList/UserList],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-26 09:45:52 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-26 09:45:52 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-26 09:45:52 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-26 09:45:52 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-26 09:45:52 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 09:45:52 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-26 09:45:52 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 09:45:52 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-26 09:45:52 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-26 09:45:52 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-26 09:45:52 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-26 09:45:52 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-26 09:45:52 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-26 09:45:52 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 09:45:52 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-26 09:45:52 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 09:45:52 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-26 09:45:52 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-26 09:45:52 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-26 09:45:52 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-26 09:45:52 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-26 09:45:52 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-26 09:45:52 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 09:45:52 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-26 09:45:52 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 09:45:52 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-26 09:45:52 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-26 09:45:52 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-26 09:45:52 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-26 09:45:52 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-26 09:45:52 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-26 09:45:52 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-26 09:45:52 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 09:45:52 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-26 09:45:52 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-26 09:45:52 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 09:45:52 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 09:45:52 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-26 09:45:52 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-26 09:45:52 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-26 09:45:52 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-26 09:45:52 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-26 09:45:52 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-26 09:45:52 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 09:45:52 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-26 09:45:52 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 09:45:52 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 09:45:52 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-26 09:45:52 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-26 09:45:52 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-26 09:45:52 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-26 09:45:52 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-26 09:45:52 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-26 09:45:52 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-26 09:45:52 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-26 09:45:52 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-26 09:45:52 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 09:45:52 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-26 09:45:52 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-26 09:45:52 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-26 09:45:52 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-26 09:45:52 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-26 09:45:52 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-26 09:45:52 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-26 09:45:52 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-26 09:45:52 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-26 09:45:52 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-26 09:45:52 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-26 09:45:52 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-26 09:45:52 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 09:45:52 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-26 09:45:52 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-26 09:45:52 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-26 09:45:52 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-26 09:45:52 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-26 09:45:52 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-26 09:45:52 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-26 09:45:52 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-26 09:45:52 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-26 09:45:52 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-26 09:45:52 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-26 09:45:52 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 09:45:52 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-26 09:45:52 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-26 09:45:52 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-26 09:45:52 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-26 09:45:52 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-26 09:45:52 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 09:45:52 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-26 09:45:52 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-26 09:45:52 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-26 09:45:52 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 09:45:52 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-26 09:45:52 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-26 09:45:52 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-26 09:45:52 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-26 09:45:52 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-26 09:45:52 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-26 09:45:52 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-26 09:45:52 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-26 09:45:52 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-26 09:45:52 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-26 09:45:52 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-26 09:45:52 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-26 09:45:52 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-26 09:45:52 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-26 09:45:52 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-26 09:45:52 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-26 09:45:52 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-26 09:45:52 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 09:45:52 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-26 09:45:52 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 09:45:52 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 09:45:52 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-26 09:45:52 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-26 09:45:52 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-26 09:45:52 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-26 09:45:52 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-26 09:45:52 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-26 09:45:52 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-26 09:45:52 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-26 09:45:52 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 09:45:52 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-26 09:45:52 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 09:45:52 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-26 09:45:52 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-26 09:45:52 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-26 09:45:52 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-03-26 09:45:52 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-03-26 09:45:52 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-26 09:45:52 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-26 09:45:52 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-26 09:45:52 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-26 09:45:52 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-26 09:45:52 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-26 09:45:52 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-26 09:45:53 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-26 09:45:54 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@419a20a6: startup date [Tue Mar 26 09:45:33 CST 2019]; root of context hierarchy
2019-03-26 09:45:54 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-26 09:45:54 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-26 09:45:54 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-26 09:45:54 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-26 09:45:54 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-26 09:45:56 -Registering beans for JMX exposure on startup
2019-03-26 09:45:56 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-26 09:45:56 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-26 09:45:56 -Starting beans in phase 2147483647
2019-03-26 09:45:56 -Context refreshed
2019-03-26 09:45:56 -Found 1 custom documentation plugin(s)
2019-03-26 09:45:56 -Scanning for api listing references
2019-03-26 09:45:57 -Generating unique operation named: removeUsingPOST_1
2019-03-26 09:45:57 -Generating unique operation named: addUsingGET_1
2019-03-26 09:45:57 -Generating unique operation named: editUsingGET_1
2019-03-26 09:45:57 -Generating unique operation named: listUsingGET_1
2019-03-26 09:45:57 -Generating unique operation named: removeUsingPOST_2
2019-03-26 09:45:57 -Generating unique operation named: removeUsingPOST_3
2019-03-26 09:45:57 -Generating unique operation named: saveUsingPOST_1
2019-03-26 09:45:57 -Generating unique operation named: updateUsingGET_1
2019-03-26 09:45:57 -Generating unique operation named: updateUsingHEAD_1
2019-03-26 09:45:57 -Generating unique operation named: updateUsingPOST_1
2019-03-26 09:45:57 -Generating unique operation named: updateUsingPUT_1
2019-03-26 09:45:57 -Generating unique operation named: updateUsingPATCH_1
2019-03-26 09:45:57 -Generating unique operation named: updateUsingDELETE_1
2019-03-26 09:45:57 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-26 09:45:57 -Generating unique operation named: updateUsingTRACE_1
2019-03-26 09:45:57 -Generating unique operation named: addUsingGET_2
2019-03-26 09:45:57 -Generating unique operation named: editUsingGET_2
2019-03-26 09:45:57 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-26 09:45:57 -Generating unique operation named: listUsingGET_2
2019-03-26 09:45:57 -Generating unique operation named: removeUsingPOST_4
2019-03-26 09:45:57 -Generating unique operation named: removeUsingPOST_5
2019-03-26 09:45:57 -Generating unique operation named: saveUsingPOST_2
2019-03-26 09:45:57 -Generating unique operation named: updateUsingPOST_2
2019-03-26 09:45:57 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-26 09:45:57 -Generating unique operation named: addUsingGET_3
2019-03-26 09:45:57 -Generating unique operation named: editUsingGET_3
2019-03-26 09:45:57 -Generating unique operation named: listUsingGET_3
2019-03-26 09:45:57 -Generating unique operation named: removeUsingPOST_6
2019-03-26 09:45:57 -Generating unique operation named: removeUsingPOST_7
2019-03-26 09:45:57 -Generating unique operation named: saveUsingPOST_3
2019-03-26 09:45:57 -Generating unique operation named: updateUsingGET_2
2019-03-26 09:45:57 -Generating unique operation named: updateUsingHEAD_2
2019-03-26 09:45:57 -Generating unique operation named: updateUsingPOST_3
2019-03-26 09:45:57 -Generating unique operation named: updateUsingPUT_2
2019-03-26 09:45:57 -Generating unique operation named: updateUsingPATCH_2
2019-03-26 09:45:57 -Generating unique operation named: updateUsingDELETE_2
2019-03-26 09:45:57 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-26 09:45:57 -Generating unique operation named: updateUsingTRACE_2
2019-03-26 09:45:57 -Generating unique operation named: addUsingGET_4
2019-03-26 09:45:57 -Generating unique operation named: editUsingGET_4
2019-03-26 09:45:57 -Generating unique operation named: listUsingGET_4
2019-03-26 09:45:57 -Generating unique operation named: removeUsingPOST_8
2019-03-26 09:45:57 -Generating unique operation named: removeUsingPOST_9
2019-03-26 09:45:57 -Generating unique operation named: saveUsingPOST_4
2019-03-26 09:45:57 -Generating unique operation named: updateUsingGET_3
2019-03-26 09:45:57 -Generating unique operation named: updateUsingHEAD_3
2019-03-26 09:45:57 -Generating unique operation named: updateUsingPOST_4
2019-03-26 09:45:57 -Generating unique operation named: updateUsingPUT_3
2019-03-26 09:45:57 -Generating unique operation named: updateUsingPATCH_3
2019-03-26 09:45:57 -Generating unique operation named: updateUsingDELETE_3
2019-03-26 09:45:57 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-26 09:45:57 -Generating unique operation named: updateUsingTRACE_3
2019-03-26 09:45:57 -Generating unique operation named: ElecUsingGET_1
2019-03-26 09:45:57 -Generating unique operation named: addUsingGET_5
2019-03-26 09:45:57 -Generating unique operation named: editUsingGET_5
2019-03-26 09:45:57 -Generating unique operation named: listUsingGET_5
2019-03-26 09:45:57 -Generating unique operation named: removeUsingPOST_10
2019-03-26 09:45:57 -Generating unique operation named: removeUsingPOST_11
2019-03-26 09:45:57 -Generating unique operation named: saveUsingPOST_5
2019-03-26 09:45:57 -Generating unique operation named: updateUsingGET_4
2019-03-26 09:45:57 -Generating unique operation named: updateUsingHEAD_4
2019-03-26 09:45:57 -Generating unique operation named: updateUsingPOST_5
2019-03-26 09:45:57 -Generating unique operation named: updateUsingPUT_4
2019-03-26 09:45:57 -Generating unique operation named: updateUsingPATCH_4
2019-03-26 09:45:58 -Generating unique operation named: updateUsingDELETE_4
2019-03-26 09:45:58 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-26 09:45:58 -Generating unique operation named: updateUsingTRACE_4
2019-03-26 09:45:58 -Generating unique operation named: editUsingGET_6
2019-03-26 09:45:58 -Generating unique operation named: listUsingGET_6
2019-03-26 09:45:58 -Generating unique operation named: updateUsingPOST_6
2019-03-26 09:45:58 -Generating unique operation named: addUsingGET_6
2019-03-26 09:45:58 -Generating unique operation named: editUsingGET_7
2019-03-26 09:45:58 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-26 09:45:58 -Generating unique operation named: listUsingGET_7
2019-03-26 09:45:58 -Generating unique operation named: removeUsingPOST_12
2019-03-26 09:45:58 -Generating unique operation named: removeUsingPOST_13
2019-03-26 09:45:58 -Generating unique operation named: saveUsingPOST_6
2019-03-26 09:45:58 -Generating unique operation named: updateUsingGET_5
2019-03-26 09:45:58 -Generating unique operation named: updateUsingHEAD_5
2019-03-26 09:45:58 -Generating unique operation named: updateUsingPOST_7
2019-03-26 09:45:58 -Generating unique operation named: updateUsingPUT_5
2019-03-26 09:45:58 -Generating unique operation named: updateUsingPATCH_5
2019-03-26 09:45:58 -Generating unique operation named: updateUsingDELETE_5
2019-03-26 09:45:58 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-26 09:45:58 -Generating unique operation named: updateUsingTRACE_5
2019-03-26 09:45:58 -Generating unique operation named: exprotExcelUsingGET_4
2019-03-26 09:45:58 -Generating unique operation named: addUsingGET_7
2019-03-26 09:45:58 -Generating unique operation named: editUsingGET_8
2019-03-26 09:45:58 -Generating unique operation named: listUsingGET_8
2019-03-26 09:45:58 -Generating unique operation named: removeUsingPOST_14
2019-03-26 09:45:58 -Generating unique operation named: removeUsingPOST_15
2019-03-26 09:45:58 -Generating unique operation named: saveUsingPOST_7
2019-03-26 09:45:58 -Generating unique operation named: updateUsingGET_6
2019-03-26 09:45:58 -Generating unique operation named: updateUsingHEAD_6
2019-03-26 09:45:58 -Generating unique operation named: updateUsingPOST_8
2019-03-26 09:45:58 -Generating unique operation named: updateUsingPUT_6
2019-03-26 09:45:58 -Generating unique operation named: updateUsingPATCH_6
2019-03-26 09:45:58 -Generating unique operation named: updateUsingDELETE_6
2019-03-26 09:45:58 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-26 09:45:58 -Generating unique operation named: updateUsingTRACE_6
2019-03-26 09:45:58 -Generating unique operation named: addUsingGET_8
2019-03-26 09:45:58 -Generating unique operation named: editUsingGET_9
2019-03-26 09:45:58 -Generating unique operation named: listUsingGET_9
2019-03-26 09:45:58 -Generating unique operation named: removeUsingPOST_16
2019-03-26 09:45:58 -Generating unique operation named: removeUsingPOST_17
2019-03-26 09:45:58 -Generating unique operation named: saveUsingPOST_8
2019-03-26 09:45:58 -Generating unique operation named: updateUsingGET_7
2019-03-26 09:45:58 -Generating unique operation named: updateUsingHEAD_7
2019-03-26 09:45:58 -Generating unique operation named: updateUsingPOST_9
2019-03-26 09:45:58 -Generating unique operation named: updateUsingPUT_7
2019-03-26 09:45:58 -Generating unique operation named: updateUsingPATCH_7
2019-03-26 09:45:58 -Generating unique operation named: updateUsingDELETE_7
2019-03-26 09:45:58 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-26 09:45:58 -Generating unique operation named: updateUsingTRACE_7
2019-03-26 09:45:58 -Generating unique operation named: addUsingGET_9
2019-03-26 09:45:58 -Generating unique operation named: editUsingGET_10
2019-03-26 09:45:58 -Generating unique operation named: infoUsingGET_1
2019-03-26 09:45:58 -Generating unique operation named: infoUsingHEAD_1
2019-03-26 09:45:58 -Generating unique operation named: infoUsingPOST_1
2019-03-26 09:45:58 -Generating unique operation named: infoUsingPUT_1
2019-03-26 09:45:58 -Generating unique operation named: infoUsingPATCH_1
2019-03-26 09:45:58 -Generating unique operation named: infoUsingDELETE_1
2019-03-26 09:45:58 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-26 09:45:58 -Generating unique operation named: infoUsingTRACE_1
2019-03-26 09:45:58 -Generating unique operation named: listUsingGET_10
2019-03-26 09:45:58 -Generating unique operation named: removeUsingPOST_18
2019-03-26 09:45:58 -Generating unique operation named: removeUsingPOST_19
2019-03-26 09:45:58 -Generating unique operation named: saveUsingPOST_9
2019-03-26 09:45:58 -Generating unique operation named: updateUsingPOST_10
2019-03-26 09:45:58 -Generating unique operation named: listUsingGET_11
2019-03-26 09:45:58 -Generating unique operation named: removeUsingPOST_20
2019-03-26 09:45:58 -Generating unique operation named: welcomeUsingGET_1
2019-03-26 09:45:58 -Generating unique operation named: addUsingGET_10
2019-03-26 09:45:58 -Generating unique operation named: editUsingGET_11
2019-03-26 09:45:58 -Generating unique operation named: listUsingGET_12
2019-03-26 09:45:58 -Generating unique operation named: removeUsingPOST_21
2019-03-26 09:45:58 -Generating unique operation named: saveUsingPOST_10
2019-03-26 09:45:58 -Generating unique operation named: treeUsingGET_1
2019-03-26 09:45:58 -Generating unique operation named: treeUsingGET_2
2019-03-26 09:45:58 -Generating unique operation named: updateUsingPOST_11
2019-03-26 09:45:58 -Generating unique operation named: addUsingGET_11
2019-03-26 09:45:58 -Generating unique operation named: editUsingGET_12
2019-03-26 09:45:58 -Generating unique operation named: listUsingGET_13
2019-03-26 09:45:58 -Generating unique operation named: removeUsingPOST_22
2019-03-26 09:45:58 -Generating unique operation named: removeUsingPOST_23
2019-03-26 09:45:58 -Generating unique operation named: saveUsingPOST_11
2019-03-26 09:45:58 -Generating unique operation named: updateUsingGET_8
2019-03-26 09:45:58 -Generating unique operation named: updateUsingHEAD_8
2019-03-26 09:45:58 -Generating unique operation named: updateUsingPOST_12
2019-03-26 09:45:58 -Generating unique operation named: updateUsingPUT_8
2019-03-26 09:45:58 -Generating unique operation named: updateUsingPATCH_8
2019-03-26 09:45:58 -Generating unique operation named: updateUsingDELETE_8
2019-03-26 09:45:58 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-26 09:45:58 -Generating unique operation named: updateUsingTRACE_8
2019-03-26 09:45:59 -Generating unique operation named: addUsingGET_12
2019-03-26 09:45:59 -Generating unique operation named: editUsingGET_13
2019-03-26 09:45:59 -Generating unique operation named: listUsingGET_14
2019-03-26 09:45:59 -Generating unique operation named: removeUsingPOST_24
2019-03-26 09:45:59 -Generating unique operation named: removeUsingPOST_25
2019-03-26 09:45:59 -Generating unique operation named: saveUsingPOST_12
2019-03-26 09:45:59 -Generating unique operation named: updateUsingGET_9
2019-03-26 09:45:59 -Generating unique operation named: updateUsingHEAD_9
2019-03-26 09:45:59 -Generating unique operation named: updateUsingPOST_13
2019-03-26 09:45:59 -Generating unique operation named: updateUsingPUT_9
2019-03-26 09:45:59 -Generating unique operation named: updateUsingPATCH_9
2019-03-26 09:45:59 -Generating unique operation named: updateUsingDELETE_9
2019-03-26 09:45:59 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-26 09:45:59 -Generating unique operation named: updateUsingTRACE_9
2019-03-26 09:45:59 -Generating unique operation named: addUsingGET_13
2019-03-26 09:45:59 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-26 09:45:59 -Generating unique operation named: editUsingGET_14
2019-03-26 09:45:59 -Generating unique operation named: listUsingGET_15
2019-03-26 09:45:59 -Generating unique operation named: saveUsingPOST_13
2019-03-26 09:45:59 -Generating unique operation named: saveUsingPOST_14
2019-03-26 09:45:59 -Generating unique operation named: updateUsingPOST_14
2019-03-26 09:45:59 -Generating unique operation named: listUsingGET_16
2019-03-26 09:45:59 -Generating unique operation named: listUsingHEAD_1
2019-03-26 09:45:59 -Generating unique operation named: listUsingPOST_1
2019-03-26 09:45:59 -Generating unique operation named: listUsingPUT_1
2019-03-26 09:45:59 -Generating unique operation named: listUsingPATCH_1
2019-03-26 09:45:59 -Generating unique operation named: listUsingDELETE_1
2019-03-26 09:45:59 -Generating unique operation named: listUsingOPTIONS_1
2019-03-26 09:45:59 -Generating unique operation named: listUsingTRACE_1
2019-03-26 09:45:59 -Generating unique operation named: addUsingGET_14
2019-03-26 09:45:59 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-26 09:45:59 -Generating unique operation named: editUsingGET_15
2019-03-26 09:45:59 -Generating unique operation named: listUsingGET_17
2019-03-26 09:45:59 -Generating unique operation named: removeUsingPOST_26
2019-03-26 09:45:59 -Generating unique operation named: saveUsingPOST_15
2019-03-26 09:45:59 -Generating unique operation named: treeUsingGET_3
2019-03-26 09:45:59 -Generating unique operation named: treeViewUsingGET_1
2019-03-26 09:45:59 -Generating unique operation named: updateUsingPOST_15
2019-03-26 09:45:59 -Generating unique operation named: addUsingGET_15
2019-03-26 09:45:59 -Generating unique operation named: editUsingGET_16
2019-03-26 09:45:59 -Generating unique operation named: exprotExcelUsingGET_5
2019-03-26 09:45:59 -Generating unique operation named: listUsingGET_18
2019-03-26 09:45:59 -Generating unique operation named: removeUsingPOST_27
2019-03-26 09:45:59 -Generating unique operation named: removeUsingPOST_28
2019-03-26 09:45:59 -Generating unique operation named: saveUsingPOST_16
2019-03-26 09:45:59 -Generating unique operation named: updateUsingGET_10
2019-03-26 09:45:59 -Generating unique operation named: updateUsingHEAD_10
2019-03-26 09:45:59 -Generating unique operation named: updateUsingPOST_16
2019-03-26 09:45:59 -Generating unique operation named: updateUsingPUT_10
2019-03-26 09:45:59 -Generating unique operation named: updateUsingPATCH_10
2019-03-26 09:45:59 -Generating unique operation named: updateUsingDELETE_10
2019-03-26 09:45:59 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-26 09:45:59 -Generating unique operation named: updateUsingTRACE_10
2019-03-26 09:45:59 -Generating unique operation named: exprotExcelUsingGET_6
2019-03-26 09:45:59 -Generating unique operation named: addUsingGET_16
2019-03-26 09:45:59 -Generating unique operation named: editUsingGET_17
2019-03-26 09:45:59 -Generating unique operation named: listUsingGET_19
2019-03-26 09:45:59 -Generating unique operation named: removeUsingPOST_29
2019-03-26 09:45:59 -Generating unique operation named: removeUsingPOST_30
2019-03-26 09:45:59 -Generating unique operation named: saveUsingPOST_17
2019-03-26 09:45:59 -Generating unique operation named: updateUsingGET_11
2019-03-26 09:45:59 -Generating unique operation named: updateUsingHEAD_11
2019-03-26 09:45:59 -Generating unique operation named: updateUsingPOST_17
2019-03-26 09:45:59 -Generating unique operation named: updateUsingPUT_11
2019-03-26 09:45:59 -Generating unique operation named: updateUsingPATCH_11
2019-03-26 09:45:59 -Generating unique operation named: updateUsingDELETE_11
2019-03-26 09:45:59 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-26 09:45:59 -Generating unique operation named: updateUsingTRACE_11
2019-03-26 09:45:59 -Generating unique operation named: addUsingGET_17
2019-03-26 09:45:59 -Generating unique operation named: editUsingGET_18
2019-03-26 09:45:59 -Generating unique operation named: listUsingGET_20
2019-03-26 09:45:59 -Generating unique operation named: removeUsingPOST_31
2019-03-26 09:45:59 -Generating unique operation named: removeUsingPOST_32
2019-03-26 09:45:59 -Generating unique operation named: saveUsingPOST_18
2019-03-26 09:45:59 -Generating unique operation named: updateUsingGET_12
2019-03-26 09:45:59 -Generating unique operation named: updateUsingHEAD_12
2019-03-26 09:45:59 -Generating unique operation named: updateUsingPOST_18
2019-03-26 09:45:59 -Generating unique operation named: updateUsingPUT_12
2019-03-26 09:45:59 -Generating unique operation named: updateUsingPATCH_12
2019-03-26 09:45:59 -Generating unique operation named: updateUsingDELETE_12
2019-03-26 09:45:59 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-26 09:45:59 -Generating unique operation named: updateUsingTRACE_12
2019-03-26 09:45:59 -Starting Quartz Scheduler now
2019-03-26 09:45:59 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-26 09:45:59 -Starting...
2019-03-26 09:45:59 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-26 09:45:59 -Started.
2019-03-26 09:45:59 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-26 09:45:59 -Using a shared selector for servlet write/read
2019-03-26 09:45:59 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-26 09:45:59 -Started BootdoApplication in 28.758 seconds (JVM running for 30.342)
2019-03-26 09:46:00 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-26 09:46:00 -==> Parameters: 
2019-03-26 09:46:00 -<==      Total: 1
2019-03-26 09:46:06 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-26 09:46:06 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-26 09:46:06 -FrameworkServlet 'dispatcherServlet': initialization completed in 128 ms
2019-03-26 09:46:06 -Enabling session validation scheduler...
2019-03-26 09:46:06 -请求地址 : http://localhost:8081/login;JSESSIONID=d403d9ce-94df-4382-85e3-7f479758ae51
2019-03-26 09:46:06 -HTTP METHOD : GET
2019-03-26 09:46:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-26 09:46:06 -参数 : [{}]
2019-03-26 09:46:06 -耗时 : 6
2019-03-26 09:46:06 -返回值 : login
2019-03-26 09:46:08 -请求地址 : http://localhost:8081/getVerify
2019-03-26 09:46:08 -HTTP METHOD : GET
2019-03-26 09:46:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-26 09:46:08 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@6594edc4, org.apache.shiro.web.servlet.ShiroHttpServletResponse@652cbe9]
2019-03-26 09:46:11 -2603
2019-03-26 09:46:11 -耗时 : 3346
2019-03-26 09:46:11 -返回值 : null
2019-03-26 09:46:19 -请求地址 : http://localhost:8081/login
2019-03-26 09:46:19 -HTTP METHOD : POST
2019-03-26 09:46:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-26 09:46:19 -参数 : [admin, 111111, 2603, org.apache.shiro.web.servlet.ShiroHttpServletRequest@38218dca]
2019-03-26 09:46:19 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-26 09:46:19 -==> Parameters: admin(String)
2019-03-26 09:46:19 -<==      Total: 1
2019-03-26 09:46:19 -耗时 : 179
2019-03-26 09:46:19 -返回值 : {msg=操作成功, code=0}
2019-03-26 09:46:19 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-03-26 09:46:19 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-26 09:46:19 -==> Parameters: 1(Long), admin(String), 登录(String), 180(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-26 09:46:19.356(Timestamp)
2019-03-26 09:46:19 -请求地址 : http://localhost:8081/index
2019-03-26 09:46:19 -HTTP METHOD : GET
2019-03-26 09:46:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-26 09:46:19 -参数 : [{}]
2019-03-26 09:46:19 -<==    Updates: 1
2019-03-26 09:46:19 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-26 09:46:19 -==> Parameters: 1(Long)
2019-03-26 09:46:19 -<==      Total: 46
2019-03-26 09:46:19 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-26 09:46:19 -==> Parameters: 138(Long)
2019-03-26 09:46:19 -<==      Total: 1
2019-03-26 09:46:19 -耗时 : 151
2019-03-26 09:46:19 -返回值 : index_v1
2019-03-26 09:46:19 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-26 09:46:19 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 152(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-26 09:46:19.66(Timestamp)
2019-03-26 09:46:19 -<==    Updates: 1
2019-03-26 09:46:19 -请求地址 : http://localhost:8081/main
2019-03-26 09:46:19 -HTTP METHOD : GET
2019-03-26 09:46:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-26 09:46:19 -参数 : []
2019-03-26 09:46:19 -耗时 : 0
2019-03-26 09:46:19 -返回值 : main
2019-03-26 09:46:20 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-26 09:46:20 -HTTP METHOD : GET
2019-03-26 09:46:20 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-26 09:46:20 -参数 : []
2019-03-26 09:46:20 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-26 09:46:20 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-26 09:46:20 -<==      Total: 0
2019-03-26 09:46:20 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-26 09:46:20 -==> Parameters: 1(Long), 0(String)
2019-03-26 09:46:20 -<==      Total: 1
2019-03-26 09:46:20 -耗时 : 30
2019-03-26 09:46:20 -返回值 : com.bootdo.common.utils.PageUtils@20ee00f4
2019-03-26 09:46:20 -请求地址 : http://localhost:8081/main
2019-03-26 09:46:20 -HTTP METHOD : GET
2019-03-26 09:46:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-26 09:46:20 -参数 : []
2019-03-26 09:46:20 -耗时 : 1
2019-03-26 09:46:20 -返回值 : main
2019-03-26 09:46:27 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-26 09:46:27 -==> Parameters: 1(Long)
2019-03-26 09:46:27 -<==      Total: 90
2019-03-26 09:46:27 -请求地址 : http://localhost:8081/elec/elec
2019-03-26 09:46:27 -HTTP METHOD : GET
2019-03-26 09:46:27 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-26 09:46:27 -参数 : []
2019-03-26 09:46:27 -耗时 : 0
2019-03-26 09:46:27 -返回值 : elec/elec/elec
2019-03-26 09:46:28 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-26 09:46:28 -HTTP METHOD : GET
2019-03-26 09:46:28 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-26 09:46:28 -参数 : [userType]
2019-03-26 09:46:28 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-26 09:46:28 -==> Parameters: userType(String)
2019-03-26 09:46:28 -<==      Total: 2
2019-03-26 09:46:28 -耗时 : 30
2019-03-26 09:46:28 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-26 09:46:28 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-26 09:46:28 -HTTP METHOD : GET
2019-03-26 09:46:28 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-26 09:46:28 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@7cb7ee9a]
2019-03-26 09:46:28 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-26 09:46:28 -==> Parameters: 0(Integer), 10(Integer)
2019-03-26 09:46:28 -<==      Total: 10
2019-03-26 09:46:28 -==>  Preparing: select count(*) from elec 
2019-03-26 09:46:28 -==> Parameters: 
2019-03-26 09:46:28 -<==      Total: 1
2019-03-26 09:46:28 -耗时 : 105
2019-03-26 09:46:28 -返回值 : com.bootdo.common.utils.PageUtils@66076a98
2019-03-26 09:46:34 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-26 09:46:34 -HTTP METHOD : GET
2019-03-26 09:46:34 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-26 09:46:34 -参数 : []
2019-03-26 09:46:34 -耗时 : 1
2019-03-26 09:46:34 -返回值 : /moneyLog/elecLog/elecLog
2019-03-26 09:46:34 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-26 09:46:34 -HTTP METHOD : GET
2019-03-26 09:46:34 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-26 09:46:34 -参数 : [userType]
2019-03-26 09:46:34 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-26 09:46:34 -==> Parameters: userType(String)
2019-03-26 09:46:34 -<==      Total: 2
2019-03-26 09:46:34 -耗时 : 5
2019-03-26 09:46:34 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-26 09:46:34 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-26 09:46:34 -HTTP METHOD : GET
2019-03-26 09:46:34 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-26 09:46:34 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-26 09:46:34 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-26 09:46:34 -==> Parameters: 0(Integer), 10(Integer)
2019-03-26 09:46:34 -<==      Total: 5
2019-03-26 09:46:34 -==>  Preparing: select count(*) from elec_log 
2019-03-26 09:46:34 -==> Parameters: 
2019-03-26 09:46:34 -<==      Total: 1
2019-03-26 09:46:34 -耗时 : 34
2019-03-26 09:46:34 -返回值 : com.bootdo.common.utils.PageUtils@6fb1fb56
2019-03-26 09:46:37 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-26 09:46:37 -HTTP METHOD : GET
2019-03-26 09:46:37 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-26 09:46:37 -参数 : []
2019-03-26 09:46:37 -耗时 : 1
2019-03-26 09:46:37 -返回值 : /moneyLog/heatLog/heatLog
2019-03-26 09:46:38 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-26 09:46:38 -HTTP METHOD : GET
2019-03-26 09:46:38 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-26 09:46:38 -参数 : [userType]
2019-03-26 09:46:38 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-26 09:46:38 -==> Parameters: userType(String)
2019-03-26 09:46:38 -<==      Total: 2
2019-03-26 09:46:38 -耗时 : 11
2019-03-26 09:46:38 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-26 09:46:38 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-26 09:46:38 -HTTP METHOD : GET
2019-03-26 09:46:38 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-26 09:46:38 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-03-26 09:46:38 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-26 09:46:38 -==> Parameters: 0(Integer), 10(Integer)
2019-03-26 09:46:38 -<==      Total: 4
2019-03-26 09:46:38 -==>  Preparing: select count(*) from heat_log 
2019-03-26 09:46:38 -==> Parameters: 
2019-03-26 09:46:38 -<==      Total: 1
2019-03-26 09:46:38 -耗时 : 40
2019-03-26 09:46:38 -返回值 : com.bootdo.common.utils.PageUtils@592bbed6
2019-03-26 09:46:39 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-26 09:46:39 -HTTP METHOD : GET
2019-03-26 09:46:39 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-26 09:46:39 -参数 : []
2019-03-26 09:46:39 -耗时 : 0
2019-03-26 09:46:39 -返回值 : /moneyLog/waterLog/waterLog
2019-03-26 09:46:39 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-26 09:46:39 -HTTP METHOD : GET
2019-03-26 09:46:39 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-26 09:46:39 -参数 : [userType]
2019-03-26 09:46:39 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-26 09:46:39 -==> Parameters: userType(String)
2019-03-26 09:46:39 -<==      Total: 2
2019-03-26 09:46:39 -耗时 : 6
2019-03-26 09:46:39 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-26 09:46:39 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-26 09:46:39 -HTTP METHOD : GET
2019-03-26 09:46:39 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-26 09:46:39 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-03-26 09:46:39 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-26 09:46:39 -==> Parameters: 0(Integer), 10(Integer)
2019-03-26 09:46:39 -<==      Total: 4
2019-03-26 09:46:39 -==>  Preparing: select count(*) from water_log 
2019-03-26 09:46:39 -==> Parameters: 
2019-03-26 09:46:39 -<==      Total: 1
2019-03-26 09:46:39 -耗时 : 30
2019-03-26 09:46:39 -返回值 : com.bootdo.common.utils.PageUtils@2935b67a
2019-03-26 09:46:40 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-26 09:46:40 -HTTP METHOD : GET
2019-03-26 09:46:40 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-26 09:46:40 -参数 : []
2019-03-26 09:46:40 -耗时 : 1
2019-03-26 09:46:40 -返回值 : /moneyLog/heatLog/heatLog
2019-03-26 09:46:40 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-26 09:46:40 -HTTP METHOD : GET
2019-03-26 09:46:40 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-26 09:46:40 -参数 : [userType]
2019-03-26 09:46:40 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-26 09:46:40 -==> Parameters: userType(String)
2019-03-26 09:46:40 -<==      Total: 2
2019-03-26 09:46:40 -耗时 : 4
2019-03-26 09:46:40 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-26 09:46:40 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-26 09:46:40 -HTTP METHOD : GET
2019-03-26 09:46:40 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-26 09:46:40 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-03-26 09:46:40 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-26 09:46:40 -==> Parameters: 0(Integer), 10(Integer)
2019-03-26 09:46:40 -<==      Total: 4
2019-03-26 09:46:40 -==>  Preparing: select count(*) from heat_log 
2019-03-26 09:46:40 -==> Parameters: 
2019-03-26 09:46:40 -<==      Total: 1
2019-03-26 09:46:40 -耗时 : 9
2019-03-26 09:46:40 -返回值 : com.bootdo.common.utils.PageUtils@3761cd88
2019-03-26 09:46:41 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-26 09:46:41 -HTTP METHOD : GET
2019-03-26 09:46:41 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-26 09:46:41 -参数 : []
2019-03-26 09:46:41 -耗时 : 1
2019-03-26 09:46:41 -返回值 : /moneyLog/elecLog/elecLog
2019-03-26 09:46:41 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-26 09:46:41 -HTTP METHOD : GET
2019-03-26 09:46:41 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-26 09:46:41 -参数 : [userType]
2019-03-26 09:46:41 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-26 09:46:41 -==> Parameters: userType(String)
2019-03-26 09:46:41 -<==      Total: 2
2019-03-26 09:46:41 -耗时 : 5
2019-03-26 09:46:41 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-26 09:46:41 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-26 09:46:41 -HTTP METHOD : GET
2019-03-26 09:46:41 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-26 09:46:41 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-26 09:46:41 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-26 09:46:41 -==> Parameters: 0(Integer), 10(Integer)
2019-03-26 09:46:41 -<==      Total: 5
2019-03-26 09:46:41 -==>  Preparing: select count(*) from elec_log 
2019-03-26 09:46:41 -==> Parameters: 
2019-03-26 09:46:41 -<==      Total: 1
2019-03-26 09:46:41 -耗时 : 11
2019-03-26 09:46:41 -返回值 : com.bootdo.common.utils.PageUtils@65c3b868
2019-03-26 09:46:48 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-26 09:46:48 -HTTP METHOD : GET
2019-03-26 09:46:48 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-26 09:46:48 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=2019-03-19}]
2019-03-26 09:46:48 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE `elec_date` >= ? and `elec_date` <= ? order by id asc limit ?, ? 
2019-03-26 09:46:48 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 0(Integer), 10(Integer)
2019-03-26 09:46:48 -<==      Total: 3
2019-03-26 09:46:48 -==>  Preparing: select count(*) from elec_log WHERE `elec_date` >= ? and `elec_date` <= ? 
2019-03-26 09:46:48 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String)
2019-03-26 09:46:48 -<==      Total: 1
2019-03-26 09:46:48 -耗时 : 37
2019-03-26 09:46:48 -返回值 : com.bootdo.common.utils.PageUtils@ac5abad
2019-03-26 09:46:52 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 8]
2019-03-26 09:47:06 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-26 09:47:06 -HTTP METHOD : GET
2019-03-26 09:47:06 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-26 09:47:06 -参数 : []
2019-03-26 09:47:06 -耗时 : 1
2019-03-26 09:47:06 -返回值 : /moneyLog/heatLog/heatLog
2019-03-26 09:47:06 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-26 09:47:06 -HTTP METHOD : GET
2019-03-26 09:47:06 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-26 09:47:06 -参数 : [userType]
2019-03-26 09:47:06 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-26 09:47:06 -==> Parameters: userType(String)
2019-03-26 09:47:06 -<==      Total: 2
2019-03-26 09:47:06 -耗时 : 6
2019-03-26 09:47:06 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-26 09:47:06 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-26 09:47:06 -HTTP METHOD : GET
2019-03-26 09:47:06 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-26 09:47:06 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-03-26 09:47:06 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-26 09:47:06 -==> Parameters: 0(Integer), 10(Integer)
2019-03-26 09:47:06 -<==      Total: 4
2019-03-26 09:47:06 -==>  Preparing: select count(*) from heat_log 
2019-03-26 09:47:06 -==> Parameters: 
2019-03-26 09:47:06 -<==      Total: 1
2019-03-26 09:47:06 -耗时 : 69
2019-03-26 09:47:06 -返回值 : com.bootdo.common.utils.PageUtils@7c31608b
2019-03-26 09:47:06 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-26 09:47:06 -HTTP METHOD : GET
2019-03-26 09:47:06 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-26 09:47:06 -参数 : []
2019-03-26 09:47:06 -耗时 : 1
2019-03-26 09:47:06 -返回值 : /moneyLog/waterLog/waterLog
2019-03-26 09:47:07 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-26 09:47:07 -HTTP METHOD : GET
2019-03-26 09:47:07 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-26 09:47:07 -参数 : [userType]
2019-03-26 09:47:07 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-26 09:47:07 -==> Parameters: userType(String)
2019-03-26 09:47:07 -<==      Total: 2
2019-03-26 09:47:07 -耗时 : 9
2019-03-26 09:47:07 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-26 09:47:07 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-26 09:47:07 -HTTP METHOD : GET
2019-03-26 09:47:07 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-26 09:47:07 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-03-26 09:47:07 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-26 09:47:07 -==> Parameters: 0(Integer), 10(Integer)
2019-03-26 09:47:07 -<==      Total: 4
2019-03-26 09:47:07 -==>  Preparing: select count(*) from water_log 
2019-03-26 09:47:07 -==> Parameters: 
2019-03-26 09:47:07 -<==      Total: 1
2019-03-26 09:47:07 -耗时 : 99
2019-03-26 09:47:07 -返回值 : com.bootdo.common.utils.PageUtils@3176d7ae
2019-03-26 09:47:07 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-26 09:47:07 -HTTP METHOD : GET
2019-03-26 09:47:07 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-26 09:47:07 -参数 : []
2019-03-26 09:47:07 -耗时 : 1
2019-03-26 09:47:07 -返回值 : /moneyLog/heatLog/heatLog
2019-03-26 09:47:08 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-26 09:47:08 -HTTP METHOD : GET
2019-03-26 09:47:08 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-26 09:47:08 -参数 : [userType]
2019-03-26 09:47:08 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-26 09:47:08 -==> Parameters: userType(String)
2019-03-26 09:47:08 -<==      Total: 2
2019-03-26 09:47:08 -耗时 : 4
2019-03-26 09:47:08 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-26 09:47:08 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-26 09:47:08 -HTTP METHOD : GET
2019-03-26 09:47:08 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-26 09:47:08 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-03-26 09:47:08 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-26 09:47:08 -==> Parameters: 0(Integer), 10(Integer)
2019-03-26 09:47:08 -<==      Total: 4
2019-03-26 09:47:08 -==>  Preparing: select count(*) from heat_log 
2019-03-26 09:47:08 -==> Parameters: 
2019-03-26 09:47:08 -<==      Total: 1
2019-03-26 09:47:08 -耗时 : 14
2019-03-26 09:47:08 -返回值 : com.bootdo.common.utils.PageUtils@36034e31
2019-03-26 09:47:08 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-26 09:47:08 -HTTP METHOD : GET
2019-03-26 09:47:08 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-26 09:47:08 -参数 : []
2019-03-26 09:47:08 -耗时 : 0
2019-03-26 09:47:08 -返回值 : /moneyLog/elecLog/elecLog
2019-03-26 09:47:08 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-26 09:47:08 -HTTP METHOD : GET
2019-03-26 09:47:08 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-26 09:47:08 -参数 : [userType]
2019-03-26 09:47:08 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-26 09:47:08 -==> Parameters: userType(String)
2019-03-26 09:47:08 -<==      Total: 2
2019-03-26 09:47:08 -耗时 : 4
2019-03-26 09:47:08 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-26 09:47:08 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-26 09:47:08 -HTTP METHOD : GET
2019-03-26 09:47:08 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-26 09:47:08 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-26 09:47:08 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-26 09:47:08 -==> Parameters: 0(Integer), 10(Integer)
2019-03-26 09:47:08 -<==      Total: 5
2019-03-26 09:47:08 -==>  Preparing: select count(*) from elec_log 
2019-03-26 09:47:08 -==> Parameters: 
2019-03-26 09:47:08 -<==      Total: 1
2019-03-26 09:47:08 -耗时 : 13
2019-03-26 09:47:08 -返回值 : com.bootdo.common.utils.PageUtils@286f7dab
2019-03-26 09:47:09 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-26 09:47:09 -HTTP METHOD : GET
2019-03-26 09:47:09 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-26 09:47:09 -参数 : []
2019-03-26 09:47:09 -耗时 : 1
2019-03-26 09:47:09 -返回值 : /moneyLog/heatLog/heatLog
2019-03-26 09:47:09 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-26 09:47:09 -HTTP METHOD : GET
2019-03-26 09:47:09 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-26 09:47:09 -参数 : [userType]
2019-03-26 09:47:09 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-26 09:47:09 -==> Parameters: userType(String)
2019-03-26 09:47:09 -<==      Total: 2
2019-03-26 09:47:09 -耗时 : 4
2019-03-26 09:47:09 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-26 09:47:09 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-26 09:47:09 -HTTP METHOD : GET
2019-03-26 09:47:09 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-26 09:47:09 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-03-26 09:47:09 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-26 09:47:09 -==> Parameters: 0(Integer), 10(Integer)
2019-03-26 09:47:09 -<==      Total: 4
2019-03-26 09:47:09 -==>  Preparing: select count(*) from heat_log 
2019-03-26 09:47:09 -==> Parameters: 
2019-03-26 09:47:09 -<==      Total: 1
2019-03-26 09:47:09 -耗时 : 8
2019-03-26 09:47:09 -返回值 : com.bootdo.common.utils.PageUtils@10e66bf
2019-03-26 09:47:10 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-26 09:47:10 -HTTP METHOD : GET
2019-03-26 09:47:10 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-26 09:47:10 -参数 : []
2019-03-26 09:47:10 -耗时 : 1
2019-03-26 09:47:10 -返回值 : /moneyLog/waterLog/waterLog
2019-03-26 09:47:10 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-26 09:47:10 -HTTP METHOD : GET
2019-03-26 09:47:10 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-26 09:47:10 -参数 : [userType]
2019-03-26 09:47:10 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-26 09:47:10 -==> Parameters: userType(String)
2019-03-26 09:47:10 -<==      Total: 2
2019-03-26 09:47:10 -耗时 : 4
2019-03-26 09:47:10 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-26 09:47:10 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-26 09:47:10 -HTTP METHOD : GET
2019-03-26 09:47:10 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-26 09:47:10 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-03-26 09:47:10 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-26 09:47:10 -==> Parameters: 0(Integer), 10(Integer)
2019-03-26 09:47:10 -<==      Total: 4
2019-03-26 09:47:10 -==>  Preparing: select count(*) from water_log 
2019-03-26 09:47:10 -==> Parameters: 
2019-03-26 09:47:10 -<==      Total: 1
2019-03-26 09:47:10 -耗时 : 10
2019-03-26 09:47:10 -返回值 : com.bootdo.common.utils.PageUtils@16a971f1
2019-03-26 09:47:10 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-26 09:47:10 -HTTP METHOD : GET
2019-03-26 09:47:10 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-26 09:47:10 -参数 : []
2019-03-26 09:47:10 -耗时 : 1
2019-03-26 09:47:10 -返回值 : /moneyLog/heatLog/heatLog
2019-03-26 09:47:10 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-26 09:47:10 -HTTP METHOD : GET
2019-03-26 09:47:10 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-26 09:47:10 -参数 : [userType]
2019-03-26 09:47:10 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-26 09:47:10 -==> Parameters: userType(String)
2019-03-26 09:47:10 -<==      Total: 2
2019-03-26 09:47:10 -耗时 : 4
2019-03-26 09:47:10 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-26 09:47:11 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-26 09:47:11 -HTTP METHOD : GET
2019-03-26 09:47:11 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-26 09:47:11 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-03-26 09:47:11 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-26 09:47:11 -==> Parameters: 0(Integer), 10(Integer)
2019-03-26 09:47:11 -<==      Total: 4
2019-03-26 09:47:11 -==>  Preparing: select count(*) from heat_log 
2019-03-26 09:47:11 -==> Parameters: 
2019-03-26 09:47:11 -<==      Total: 1
2019-03-26 09:47:11 -耗时 : 10
2019-03-26 09:47:11 -返回值 : com.bootdo.common.utils.PageUtils@3a07e74e
2019-03-26 09:47:11 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-26 09:47:11 -HTTP METHOD : GET
2019-03-26 09:47:11 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-26 09:47:11 -参数 : []
2019-03-26 09:47:11 -耗时 : 0
2019-03-26 09:47:11 -返回值 : /moneyLog/elecLog/elecLog
2019-03-26 09:47:11 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-26 09:47:11 -HTTP METHOD : GET
2019-03-26 09:47:11 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-26 09:47:11 -参数 : [userType]
2019-03-26 09:47:11 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-26 09:47:11 -==> Parameters: userType(String)
2019-03-26 09:47:11 -<==      Total: 2
2019-03-26 09:47:11 -耗时 : 3
2019-03-26 09:47:11 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-26 09:47:11 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-26 09:47:11 -HTTP METHOD : GET
2019-03-26 09:47:11 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-26 09:47:11 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-26 09:47:11 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-26 09:47:11 -==> Parameters: 0(Integer), 10(Integer)
2019-03-26 09:47:11 -<==      Total: 5
2019-03-26 09:47:11 -==>  Preparing: select count(*) from elec_log 
2019-03-26 09:47:11 -==> Parameters: 
2019-03-26 09:47:11 -<==      Total: 1
2019-03-26 09:47:11 -耗时 : 7
2019-03-26 09:47:11 -返回值 : com.bootdo.common.utils.PageUtils@746b2c4f
2019-03-26 09:47:13 -请求地址 : http://localhost:8081/moneyLog/elecLog/add
2019-03-26 09:47:13 -HTTP METHOD : GET
2019-03-26 09:47:13 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.add
2019-03-26 09:47:13 -参数 : []
2019-03-26 09:47:13 -耗时 : 0
2019-03-26 09:47:13 -返回值 : moneyLog/elecLog/add
2019-03-26 09:47:13 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-26 09:47:13 -HTTP METHOD : GET
2019-03-26 09:47:13 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-26 09:47:13 -参数 : [userType]
2019-03-26 09:47:13 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-26 09:47:13 -==> Parameters: userType(String)
2019-03-26 09:47:13 -<==      Total: 2
2019-03-26 09:47:13 -耗时 : 5
2019-03-26 09:47:13 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-26 09:47:25 -请求地址 : http://localhost:8081/moneyLog/elecLog/add
2019-03-26 09:47:25 -HTTP METHOD : GET
2019-03-26 09:47:25 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.add
2019-03-26 09:47:25 -参数 : []
2019-03-26 09:47:25 -耗时 : 1
2019-03-26 09:47:25 -返回值 : moneyLog/elecLog/add
2019-03-26 09:47:25 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-26 09:47:25 -HTTP METHOD : GET
2019-03-26 09:47:25 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-26 09:47:25 -参数 : [userType]
2019-03-26 09:47:25 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-26 09:47:25 -==> Parameters: userType(String)
2019-03-26 09:47:25 -<==      Total: 2
2019-03-26 09:47:25 -耗时 : 44
2019-03-26 09:47:25 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-26 09:48:01 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-26 09:48:01 -HTTP METHOD : GET
2019-03-26 09:48:01 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-26 09:48:01 -参数 : []
2019-03-26 09:48:01 -耗时 : 1
2019-03-26 09:48:01 -返回值 : system/dept/deptTree
2019-03-26 09:48:01 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-26 09:48:01 -HTTP METHOD : GET
2019-03-26 09:48:01 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-26 09:48:01 -参数 : []
2019-03-26 09:48:01 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-26 09:48:01 -==> Parameters: 
2019-03-26 09:48:01 -<==      Total: 3
2019-03-26 09:48:01 -耗时 : 29
2019-03-26 09:48:01 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-26 09:48:06 -请求地址 : http://localhost:8081/moneyLog/elecLog/save
2019-03-26 09:48:06 -HTTP METHOD : POST
2019-03-26 09:48:06 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.save
2019-03-26 09:48:06 -参数 : [com.bootdo.moneyLog.domain.ElecLogDO@3a43ade8]
2019-03-26 09:48:06 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-26 09:48:06 -==> Parameters: 5-5555(String), 地方干(String), A(String), 2(String), 90(BigDecimal), 2019-03-26 09:48:06.993(Timestamp), 2019-03(String), 1(Long), 2019-03-26 09:48:06.993(Timestamp), 1(Long), (String)
2019-03-26 09:48:07 -<==    Updates: 1
2019-03-26 09:48:07 -耗时 : 190
2019-03-26 09:48:07 -返回值 : {msg=操作成功, code=0}
2019-03-26 09:48:07 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-26 09:48:07 -HTTP METHOD : GET
2019-03-26 09:48:07 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-26 09:48:07 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-26 09:48:07 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-26 09:48:07 -==> Parameters: 0(Integer), 10(Integer)
2019-03-26 09:48:07 -<==      Total: 6
2019-03-26 09:48:07 -==>  Preparing: select count(*) from elec_log 
2019-03-26 09:48:07 -==> Parameters: 
2019-03-26 09:48:07 -<==      Total: 1
2019-03-26 09:48:07 -耗时 : 12
2019-03-26 09:48:07 -返回值 : com.bootdo.common.utils.PageUtils@1ceff11d
2019-03-26 09:48:14 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-26 09:48:14 -HTTP METHOD : GET
2019-03-26 09:48:14 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-26 09:48:14 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-26 09:48:14 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-26 09:48:14 -==> Parameters: 0(Integer), 10(Integer)
2019-03-26 09:48:14 -<==      Total: 6
2019-03-26 09:48:14 -==>  Preparing: select count(*) from elec_log 
2019-03-26 09:48:14 -==> Parameters: 
2019-03-26 09:48:14 -<==      Total: 1
2019-03-26 09:48:14 -耗时 : 10
2019-03-26 09:48:14 -返回值 : com.bootdo.common.utils.PageUtils@1c09f629
2019-03-26 09:48:20 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-26 09:48:20 -HTTP METHOD : GET
2019-03-26 09:48:20 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-26 09:48:20 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=2019-03-19}]
2019-03-26 09:48:20 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE `elec_date` >= ? and `elec_date` <= ? order by id asc limit ?, ? 
2019-03-26 09:48:20 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 0(Integer), 10(Integer)
2019-03-26 09:48:20 -<==      Total: 3
2019-03-26 09:48:20 -==>  Preparing: select count(*) from elec_log WHERE `elec_date` >= ? and `elec_date` <= ? 
2019-03-26 09:48:20 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String)
2019-03-26 09:48:20 -<==      Total: 1
2019-03-26 09:48:20 -耗时 : 9
2019-03-26 09:48:20 -返回值 : com.bootdo.common.utils.PageUtils@122a97a1
2019-03-26 09:49:05 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-26 09:49:05 -HTTP METHOD : GET
2019-03-26 09:49:05 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-26 09:49:05 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=2019-03-19}]
2019-03-26 09:49:05 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE `elec_date` >= ? and `elec_date` <= ? order by id asc limit ?, ? 
2019-03-26 09:49:05 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 0(Integer), 10(Integer)
2019-03-26 09:49:05 -<==      Total: 3
2019-03-26 09:49:05 -==>  Preparing: select count(*) from elec_log WHERE `elec_date` >= ? and `elec_date` <= ? 
2019-03-26 09:49:05 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String)
2019-03-26 09:49:05 -<==      Total: 1
2019-03-26 09:49:05 -耗时 : 9
2019-03-26 09:49:05 -返回值 : com.bootdo.common.utils.PageUtils@1eb91967
2019-03-26 09:49:09 -请求地址 : http://localhost:8081/index
2019-03-26 09:49:09 -HTTP METHOD : GET
2019-03-26 09:49:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-26 09:49:09 -参数 : [{}]
2019-03-26 09:49:09 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-26 09:49:09 -==> Parameters: 1(Long)
2019-03-26 09:49:09 -<==      Total: 46
2019-03-26 09:49:09 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-26 09:49:09 -==> Parameters: 138(Long)
2019-03-26 09:49:09 -<==      Total: 1
2019-03-26 09:49:09 -耗时 : 32
2019-03-26 09:49:09 -返回值 : index_v1
2019-03-26 09:49:09 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-26 09:49:09 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 33(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-26 09:49:09.105(Timestamp)
2019-03-26 09:49:09 -<==    Updates: 1
2019-03-26 09:49:09 -请求地址 : http://localhost:8081/main
2019-03-26 09:49:09 -HTTP METHOD : GET
2019-03-26 09:49:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-26 09:49:09 -参数 : []
2019-03-26 09:49:09 -耗时 : 0
2019-03-26 09:49:09 -返回值 : main
2019-03-26 09:49:09 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-26 09:49:09 -HTTP METHOD : GET
2019-03-26 09:49:09 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-26 09:49:09 -参数 : []
2019-03-26 09:49:09 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-26 09:49:09 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-26 09:49:09 -<==      Total: 0
2019-03-26 09:49:09 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-26 09:49:09 -==> Parameters: 1(Long), 0(String)
2019-03-26 09:49:09 -<==      Total: 1
2019-03-26 09:49:09 -耗时 : 10
2019-03-26 09:49:09 -返回值 : com.bootdo.common.utils.PageUtils@57f1736c
2019-03-26 09:49:09 -请求地址 : http://localhost:8081/main
2019-03-26 09:49:09 -HTTP METHOD : GET
2019-03-26 09:49:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-26 09:49:09 -参数 : []
2019-03-26 09:49:09 -耗时 : 1
2019-03-26 09:49:09 -返回值 : main
2019-03-26 09:49:12 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-26 09:49:12 -HTTP METHOD : GET
2019-03-26 09:49:12 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-26 09:49:12 -参数 : []
2019-03-26 09:49:12 -耗时 : 1
2019-03-26 09:49:12 -返回值 : /moneyLog/elecLog/elecLog
2019-03-26 09:49:12 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-26 09:49:12 -HTTP METHOD : GET
2019-03-26 09:49:12 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-26 09:49:12 -参数 : [userType]
2019-03-26 09:49:12 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-26 09:49:12 -==> Parameters: userType(String)
2019-03-26 09:49:12 -<==      Total: 2
2019-03-26 09:49:12 -耗时 : 8
2019-03-26 09:49:12 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-26 09:49:12 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-26 09:49:12 -HTTP METHOD : GET
2019-03-26 09:49:12 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-26 09:49:12 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-26 09:49:12 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-26 09:49:12 -==> Parameters: 0(Integer), 10(Integer)
2019-03-26 09:49:12 -<==      Total: 6
2019-03-26 09:49:12 -==>  Preparing: select count(*) from elec_log 
2019-03-26 09:49:12 -==> Parameters: 
2019-03-26 09:49:12 -<==      Total: 1
2019-03-26 09:49:12 -耗时 : 10
2019-03-26 09:49:12 -返回值 : com.bootdo.common.utils.PageUtils@2eaef89
2019-03-26 09:49:46 -请求地址 : http://localhost:8081/moneyLog/elecLog/edit/6
2019-03-26 09:49:46 -HTTP METHOD : GET
2019-03-26 09:49:46 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.edit
2019-03-26 09:49:46 -参数 : [6, {}]
2019-03-26 09:49:46 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log where id = ? 
2019-03-26 09:49:46 -==> Parameters: 6(Long)
2019-03-26 09:49:46 -<==      Total: 1
2019-03-26 09:49:46 -耗时 : 8
2019-03-26 09:49:46 -返回值 : moneyLog/elecLog/edit
2019-03-26 09:49:46 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-26 09:49:46 -HTTP METHOD : GET
2019-03-26 09:49:46 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-26 09:49:46 -参数 : [userType]
2019-03-26 09:49:46 -请求地址 : http://localhost:8081/common/dict/list/userOrg
2019-03-26 09:49:46 -HTTP METHOD : GET
2019-03-26 09:49:46 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-26 09:49:46 -参数 : [userOrg]
2019-03-26 09:49:46 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-26 09:49:46 -==> Parameters: userType(String)
2019-03-26 09:49:46 -<==      Total: 2
2019-03-26 09:49:46 -耗时 : 16
2019-03-26 09:49:46 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-26 09:49:46 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-26 09:49:46 -==> Parameters: userOrg(String)
2019-03-26 09:49:46 -<==      Total: 0
2019-03-26 09:49:46 -耗时 : 28
2019-03-26 09:49:46 -返回值 : []
2019-03-26 09:50:56 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-26 09:50:56 -HTTP METHOD : GET
2019-03-26 09:50:56 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-26 09:50:56 -参数 : [{limit=10, offset=0, userType=B, userOrg=, userId=, elecDate=, type=B}]
2019-03-26 09:50:56 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? order by id asc limit ?, ? 
2019-03-26 09:50:56 -==> Parameters: B(String), 0(Integer), 10(Integer)
2019-03-26 09:50:56 -<==      Total: 1
2019-03-26 09:50:56 -==>  Preparing: select count(*) from elec_log WHERE user_type = ? 
2019-03-26 09:50:56 -==> Parameters: B(String)
2019-03-26 09:50:56 -<==      Total: 1
2019-03-26 09:50:56 -耗时 : 33
2019-03-26 09:50:56 -返回值 : com.bootdo.common.utils.PageUtils@af1fe17
2019-03-26 09:51:07 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-26 09:51:07 -HTTP METHOD : GET
2019-03-26 09:51:07 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-26 09:51:07 -参数 : []
2019-03-26 09:51:07 -耗时 : 1
2019-03-26 09:51:07 -返回值 : /moneyLog/waterLog/waterLog
2019-03-26 09:51:07 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-26 09:51:07 -HTTP METHOD : GET
2019-03-26 09:51:07 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-26 09:51:07 -参数 : [userType]
2019-03-26 09:51:07 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-26 09:51:07 -==> Parameters: userType(String)
2019-03-26 09:51:07 -<==      Total: 2
2019-03-26 09:51:07 -耗时 : 5
2019-03-26 09:51:07 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-26 09:51:08 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-26 09:51:08 -HTTP METHOD : GET
2019-03-26 09:51:08 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-26 09:51:08 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-03-26 09:51:08 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-26 09:51:08 -==> Parameters: 0(Integer), 10(Integer)
2019-03-26 09:51:08 -<==      Total: 4
2019-03-26 09:51:08 -==>  Preparing: select count(*) from water_log 
2019-03-26 09:51:08 -==> Parameters: 
2019-03-26 09:51:08 -<==      Total: 1
2019-03-26 09:51:08 -耗时 : 14
2019-03-26 09:51:08 -返回值 : com.bootdo.common.utils.PageUtils@283d2f04
2019-03-26 09:51:09 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-26 09:51:09 -HTTP METHOD : GET
2019-03-26 09:51:09 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-26 09:51:09 -参数 : []
2019-03-26 09:51:09 -耗时 : 0
2019-03-26 09:51:09 -返回值 : /moneyLog/heatLog/heatLog
2019-03-26 09:51:09 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-26 09:51:09 -HTTP METHOD : GET
2019-03-26 09:51:09 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-26 09:51:09 -参数 : [userType]
2019-03-26 09:51:09 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-26 09:51:09 -==> Parameters: userType(String)
2019-03-26 09:51:09 -<==      Total: 2
2019-03-26 09:51:09 -耗时 : 4
2019-03-26 09:51:09 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-26 09:51:09 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-26 09:51:09 -HTTP METHOD : GET
2019-03-26 09:51:09 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-26 09:51:09 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-03-26 09:51:09 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-26 09:51:09 -==> Parameters: 0(Integer), 10(Integer)
2019-03-26 09:51:09 -<==      Total: 4
2019-03-26 09:51:09 -==>  Preparing: select count(*) from heat_log 
2019-03-26 09:51:09 -==> Parameters: 
2019-03-26 09:51:09 -<==      Total: 1
2019-03-26 09:51:09 -耗时 : 6
2019-03-26 09:51:09 -返回值 : com.bootdo.common.utils.PageUtils@774cb741
2019-03-26 09:51:10 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-26 09:51:10 -HTTP METHOD : GET
2019-03-26 09:51:10 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-26 09:51:10 -参数 : []
2019-03-26 09:51:10 -耗时 : 0
2019-03-26 09:51:10 -返回值 : /moneyLog/waterLog/waterLog
2019-03-26 09:51:10 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-26 09:51:10 -HTTP METHOD : GET
2019-03-26 09:51:10 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-26 09:51:10 -参数 : [userType]
2019-03-26 09:51:10 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-26 09:51:10 -==> Parameters: userType(String)
2019-03-26 09:51:10 -<==      Total: 2
2019-03-26 09:51:10 -耗时 : 4
2019-03-26 09:51:10 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-26 09:51:10 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-26 09:51:10 -HTTP METHOD : GET
2019-03-26 09:51:10 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-26 09:51:10 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-03-26 09:51:10 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-26 09:51:10 -==> Parameters: 0(Integer), 10(Integer)
2019-03-26 09:51:10 -<==      Total: 4
2019-03-26 09:51:10 -==>  Preparing: select count(*) from water_log 
2019-03-26 09:51:10 -==> Parameters: 
2019-03-26 09:51:10 -<==      Total: 1
2019-03-26 09:51:10 -耗时 : 10
2019-03-26 09:51:10 -返回值 : com.bootdo.common.utils.PageUtils@7d3d06e3
2019-03-26 09:51:11 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-26 09:51:11 -HTTP METHOD : GET
2019-03-26 09:51:11 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-26 09:51:11 -参数 : []
2019-03-26 09:51:11 -耗时 : 0
2019-03-26 09:51:11 -返回值 : /moneyLog/heatLog/heatLog
2019-03-26 09:51:11 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-26 09:51:11 -HTTP METHOD : GET
2019-03-26 09:51:11 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-26 09:51:11 -参数 : [userType]
2019-03-26 09:51:11 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-26 09:51:11 -==> Parameters: userType(String)
2019-03-26 09:51:11 -<==      Total: 2
2019-03-26 09:51:11 -耗时 : 6
2019-03-26 09:51:11 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-26 09:51:11 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-26 09:51:11 -HTTP METHOD : GET
2019-03-26 09:51:11 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-26 09:51:11 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-03-26 09:51:11 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-26 09:51:11 -==> Parameters: 0(Integer), 10(Integer)
2019-03-26 09:51:11 -<==      Total: 4
2019-03-26 09:51:11 -==>  Preparing: select count(*) from heat_log 
2019-03-26 09:51:11 -==> Parameters: 
2019-03-26 09:51:11 -<==      Total: 1
2019-03-26 09:51:11 -耗时 : 5
2019-03-26 09:51:11 -返回值 : com.bootdo.common.utils.PageUtils@140122fa
2019-03-26 09:51:11 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-26 09:51:11 -HTTP METHOD : GET
2019-03-26 09:51:11 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-26 09:51:11 -参数 : []
2019-03-26 09:51:11 -耗时 : 0
2019-03-26 09:51:11 -返回值 : /moneyLog/waterLog/waterLog
2019-03-26 09:51:11 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-26 09:51:11 -HTTP METHOD : GET
2019-03-26 09:51:11 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-26 09:51:11 -参数 : [userType]
2019-03-26 09:51:11 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-26 09:51:11 -==> Parameters: userType(String)
2019-03-26 09:51:11 -<==      Total: 2
2019-03-26 09:51:11 -耗时 : 4
2019-03-26 09:51:11 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-26 09:51:11 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-26 09:51:11 -HTTP METHOD : GET
2019-03-26 09:51:11 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-26 09:51:11 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-03-26 09:51:11 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-26 09:51:11 -==> Parameters: 0(Integer), 10(Integer)
2019-03-26 09:51:11 -<==      Total: 4
2019-03-26 09:51:11 -==>  Preparing: select count(*) from water_log 
2019-03-26 09:51:11 -==> Parameters: 
2019-03-26 09:51:11 -<==      Total: 1
2019-03-26 09:51:11 -耗时 : 9
2019-03-26 09:51:11 -返回值 : com.bootdo.common.utils.PageUtils@53eece7c
2019-03-26 09:51:12 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-26 09:51:12 -HTTP METHOD : GET
2019-03-26 09:51:12 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-26 09:51:12 -参数 : []
2019-03-26 09:51:12 -耗时 : 1
2019-03-26 09:51:12 -返回值 : /moneyLog/heatLog/heatLog
2019-03-26 09:51:12 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-26 09:51:12 -HTTP METHOD : GET
2019-03-26 09:51:12 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-26 09:51:12 -参数 : [userType]
2019-03-26 09:51:12 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-26 09:51:12 -==> Parameters: userType(String)
2019-03-26 09:51:12 -<==      Total: 2
2019-03-26 09:51:12 -耗时 : 5
2019-03-26 09:51:12 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-26 09:51:12 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-26 09:51:12 -HTTP METHOD : GET
2019-03-26 09:51:12 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-26 09:51:12 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-03-26 09:51:12 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-26 09:51:12 -==> Parameters: 0(Integer), 10(Integer)
2019-03-26 09:51:12 -<==      Total: 4
2019-03-26 09:51:12 -==>  Preparing: select count(*) from heat_log 
2019-03-26 09:51:12 -==> Parameters: 
2019-03-26 09:51:12 -<==      Total: 1
2019-03-26 09:51:12 -耗时 : 9
2019-03-26 09:51:12 -返回值 : com.bootdo.common.utils.PageUtils@6f2aa963
2019-03-26 09:51:12 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-26 09:51:12 -HTTP METHOD : GET
2019-03-26 09:51:12 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-26 09:51:12 -参数 : []
2019-03-26 09:51:12 -耗时 : 0
2019-03-26 09:51:12 -返回值 : /moneyLog/waterLog/waterLog
2019-03-26 09:51:12 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-26 09:51:12 -HTTP METHOD : GET
2019-03-26 09:51:12 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-26 09:51:12 -参数 : [userType]
2019-03-26 09:51:12 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-26 09:51:12 -==> Parameters: userType(String)
2019-03-26 09:51:12 -<==      Total: 2
2019-03-26 09:51:12 -耗时 : 6
2019-03-26 09:51:12 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-26 09:51:12 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-26 09:51:12 -HTTP METHOD : GET
2019-03-26 09:51:12 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-26 09:51:12 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-03-26 09:51:12 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-26 09:51:12 -==> Parameters: 0(Integer), 10(Integer)
2019-03-26 09:51:12 -<==      Total: 4
2019-03-26 09:51:12 -==>  Preparing: select count(*) from water_log 
2019-03-26 09:51:12 -==> Parameters: 
2019-03-26 09:51:12 -<==      Total: 1
2019-03-26 09:51:12 -耗时 : 9
2019-03-26 09:51:12 -返回值 : com.bootdo.common.utils.PageUtils@6da0ce7f
2019-03-26 09:51:13 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-26 09:51:13 -HTTP METHOD : GET
2019-03-26 09:51:13 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-26 09:51:13 -参数 : []
2019-03-26 09:51:13 -耗时 : 1
2019-03-26 09:51:13 -返回值 : /moneyLog/heatLog/heatLog
2019-03-26 09:51:13 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-26 09:51:13 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-26 09:51:13 -HTTP METHOD : GET
2019-03-26 09:51:13 -HTTP METHOD : GET
2019-03-26 09:51:13 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-26 09:51:13 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-26 09:51:13 -参数 : [userType]
2019-03-26 09:51:13 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-03-26 09:51:13 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-26 09:51:13 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-26 09:51:13 -==> Parameters: 0(Integer), 10(Integer)
2019-03-26 09:51:13 -==> Parameters: userType(String)
2019-03-26 09:51:13 -<==      Total: 4
2019-03-26 09:51:13 -==>  Preparing: select count(*) from heat_log 
2019-03-26 09:51:13 -==> Parameters: 
2019-03-26 09:51:13 -<==      Total: 1
2019-03-26 09:51:13 -耗时 : 59
2019-03-26 09:51:13 -返回值 : com.bootdo.common.utils.PageUtils@7ccd1a5f
2019-03-26 09:51:13 -<==      Total: 2
2019-03-26 09:51:13 -耗时 : 108
2019-03-26 09:51:13 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-26 09:51:13 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-26 09:51:13 -HTTP METHOD : GET
2019-03-26 09:51:13 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-26 09:51:13 -参数 : []
2019-03-26 09:51:13 -耗时 : 0
2019-03-26 09:51:13 -返回值 : /moneyLog/elecLog/elecLog
2019-03-26 09:51:13 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-26 09:51:13 -HTTP METHOD : GET
2019-03-26 09:51:13 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-26 09:51:13 -参数 : [userType]
2019-03-26 09:51:13 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-26 09:51:13 -==> Parameters: userType(String)
2019-03-26 09:51:13 -<==      Total: 2
2019-03-26 09:51:13 -耗时 : 5
2019-03-26 09:51:13 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-26 09:51:13 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-26 09:51:13 -HTTP METHOD : GET
2019-03-26 09:51:13 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-26 09:51:13 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-26 09:51:13 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-26 09:51:13 -==> Parameters: 0(Integer), 10(Integer)
2019-03-26 09:51:13 -<==      Total: 6
2019-03-26 09:51:13 -==>  Preparing: select count(*) from elec_log 
2019-03-26 09:51:13 -==> Parameters: 
2019-03-26 09:51:13 -<==      Total: 1
2019-03-26 09:51:13 -耗时 : 43
2019-03-26 09:51:13 -返回值 : com.bootdo.common.utils.PageUtils@66e4ff3c
2019-03-26 09:53:50 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-26 09:53:50 -HTTP METHOD : GET
2019-03-26 09:53:50 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-26 09:53:50 -参数 : [{limit=10, offset=0, userType=A, userOrg=, userId=, elecDate=2019-03-19, type=A}]
2019-03-26 09:53:50 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? and `elec_date` >= ? and `elec_date` <= ? order by id asc limit ?, ? 
2019-03-26 09:53:50 -==> Parameters: A(String), 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 0(Integer), 10(Integer)
2019-03-26 09:53:50 -<==      Total: 3
2019-03-26 09:53:50 -==>  Preparing: select count(*) from elec_log WHERE user_type = ? and `elec_date` >= ? and `elec_date` <= ? 
2019-03-26 09:53:50 -==> Parameters: A(String), 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String)
2019-03-26 09:53:50 -<==      Total: 1
2019-03-26 09:53:50 -耗时 : 46
2019-03-26 09:53:50 -返回值 : com.bootdo.common.utils.PageUtils@3f3904ed
2019-03-26 09:53:51 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-26 09:53:51 -HTTP METHOD : GET
2019-03-26 09:53:51 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-26 09:53:51 -参数 : []
2019-03-26 09:53:51 -耗时 : 0
2019-03-26 09:53:51 -返回值 : system/dept/deptTree
2019-03-26 09:53:51 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-26 09:53:51 -HTTP METHOD : GET
2019-03-26 09:53:51 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-26 09:53:51 -参数 : []
2019-03-26 09:53:51 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-26 09:53:51 -==> Parameters: 
2019-03-26 09:53:51 -<==      Total: 3
2019-03-26 09:53:51 -耗时 : 4
2019-03-26 09:53:51 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-26 09:53:53 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-26 09:53:53 -HTTP METHOD : GET
2019-03-26 09:53:53 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-26 09:53:53 -参数 : [{limit=10, offset=0, userType=A, userOrg=2, userId=, elecDate=2019-03-19}]
2019-03-26 09:53:53 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? and user_org = ? and `elec_date` >= ? and `elec_date` <= ? order by id asc limit ?, ? 
2019-03-26 09:53:53 -==> Parameters: A(String), 2(String), 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 0(Integer), 10(Integer)
2019-03-26 09:53:53 -<==      Total: 3
2019-03-26 09:53:53 -==>  Preparing: select count(*) from elec_log WHERE user_type = ? and user_org = ? and `elec_date` >= ? and `elec_date` <= ? 
2019-03-26 09:53:53 -==> Parameters: A(String), 2(String), 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String)
2019-03-26 09:53:53 -<==      Total: 1
2019-03-26 09:53:53 -耗时 : 12
2019-03-26 09:53:53 -返回值 : com.bootdo.common.utils.PageUtils@8d97f3b
2019-03-26 09:53:54 -请求地址 : http://localhost:8081/moneyLog/elecLog/exprotElecLog
2019-03-26 09:53:54 -HTTP METHOD : GET
2019-03-26 09:53:54 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog
2019-03-26 09:53:54 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@1d302847, org.apache.shiro.web.servlet.ShiroHttpServletResponse@3f302c34, org.apache.shiro.web.servlet.ShiroHttpServletRequest@1bb1aaaf]
2019-03-26 09:53:54 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? and user_org = ? and `elec_date` >= ? and `elec_date` <= ? 
2019-03-26 09:53:54 -==> Parameters: A(String), 2(String), 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String)
2019-03-26 09:53:54 -<==      Total: 3
2019-03-26 09:53:55 -耗时 : 365
2019-03-26 09:53:55 -返回值 : null
2019-03-26 09:58:02 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-26 09:58:02 -==> Parameters: 1(Long)
2019-03-26 09:58:02 -<==      Total: 90
2019-03-26 09:58:02 -请求地址 : http://localhost:8081/print/print
2019-03-26 09:58:02 -HTTP METHOD : GET
2019-03-26 09:58:02 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-03-26 09:58:02 -参数 : []
2019-03-26 09:58:02 -耗时 : 0
2019-03-26 09:58:02 -返回值 : print/print/print
2019-03-26 09:58:02 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-26 09:58:02 -HTTP METHOD : GET
2019-03-26 09:58:02 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-26 09:58:02 -参数 : [userType]
2019-03-26 09:58:02 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-26 09:58:02 -==> Parameters: userType(String)
2019-03-26 09:58:02 -<==      Total: 2
2019-03-26 09:58:02 -耗时 : 6
2019-03-26 09:58:02 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-26 09:58:02 -请求地址 : http://localhost:8081/print/print/list
2019-03-26 09:58:02 -HTTP METHOD : GET
2019-03-26 09:58:02 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-26 09:58:02 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-26 09:58:02 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_sum`,`water_money`,`account_data`,`cost_data`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-03-26 09:58:02 -==> Parameters: 0(Integer), 10(Integer)
2019-03-26 09:58:02 -<==      Total: 3
2019-03-26 09:58:02 -==>  Preparing: select count(*) from print 
2019-03-26 09:58:02 -==> Parameters: 
2019-03-26 09:58:02 -<==      Total: 1
2019-03-26 09:58:02 -耗时 : 114
2019-03-26 09:58:02 -返回值 : com.bootdo.common.utils.PageUtils@335e1179
2019-03-26 09:58:06 -请求地址 : http://localhost:8081/print/print/add
2019-03-26 09:58:06 -HTTP METHOD : GET
2019-03-26 09:58:06 -CLASS_METHOD : com.bootdo.print.controller.PrintController.add
2019-03-26 09:58:06 -参数 : []
2019-03-26 09:58:06 -耗时 : 1
2019-03-26 09:58:06 -返回值 : print/print/add
2019-03-26 09:58:06 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-26 09:58:06 -HTTP METHOD : GET
2019-03-26 09:58:06 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-26 09:58:06 -参数 : [userType]
2019-03-26 09:58:06 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-26 09:58:06 -==> Parameters: userType(String)
2019-03-26 09:58:06 -<==      Total: 2
2019-03-26 09:58:06 -耗时 : 3
2019-03-26 09:58:06 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-26 09:58:13 -请求地址 : http://localhost:8081/print/print/edit/1
2019-03-26 09:58:13 -HTTP METHOD : GET
2019-03-26 09:58:13 -CLASS_METHOD : com.bootdo.print.controller.PrintController.edit
2019-03-26 09:58:13 -参数 : [1, {}]
2019-03-26 09:58:13 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_sum`,`water_money`,`account_data`,`cost_data`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-03-26 09:58:13 -==> Parameters: 1(Long)
2019-03-26 09:58:13 -<==      Total: 1
2019-03-26 09:58:13 -耗时 : 8
2019-03-26 09:58:13 -返回值 : print/print/edit
2019-03-26 09:58:13 -[THYMELEAF][http-nio-8081-exec-5] Exception processing template "print/print/edit": An error happened during template parsing (template: "class path resource [templates/print/print/edit.html]")
org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/print/print/edit.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:354)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:187)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1325)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1069)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.attoparser.ParseException: Exception evaluating SpringEL expression: "print.printData" (template: "print/print/edit" - line 144, col 49)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 69 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "print.printData" (template: "print/print/edit" - line 144, col 49)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:290)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:165)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:126)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleStandaloneElement(ProcessorTemplateHandler.java:918)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleStandaloneElementEnd(TemplateHandlerAdapterMarkupHandler.java:260)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleStandaloneElementEnd(InlinedOutputExpressionMarkupHandler.java:256)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleStandaloneElementEnd(OutputExpressionInlinePreProcessorHandler.java:169)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleStandaloneElementEnd(InlinedOutputExpressionMarkupHandler.java:104)
	at org.attoparser.HtmlVoidElement.handleOpenElementEnd(HtmlVoidElement.java:92)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 71 common frames omitted
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1008E: Property or field 'printData' cannot be found on object of type 'com.bootdo.print.vo.PrintVo' - maybe not public or not valid?
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:217)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:407)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:89)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:111)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:334)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	... 90 common frames omitted
2019-03-26 09:58:13 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/print/print/edit.html]")] with root cause
org.springframework.expression.spel.SpelEvaluationException: EL1008E: Property or field 'printData' cannot be found on object of type 'com.bootdo.print.vo.PrintVo' - maybe not public or not valid?
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:217)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:407)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:89)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:111)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:334)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:165)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:126)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleStandaloneElement(ProcessorTemplateHandler.java:918)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleStandaloneElementEnd(TemplateHandlerAdapterMarkupHandler.java:260)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleStandaloneElementEnd(InlinedOutputExpressionMarkupHandler.java:256)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleStandaloneElementEnd(OutputExpressionInlinePreProcessorHandler.java:169)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleStandaloneElementEnd(InlinedOutputExpressionMarkupHandler.java:104)
	at org.attoparser.HtmlVoidElement.handleOpenElementEnd(HtmlVoidElement.java:92)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:354)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:187)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1325)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1069)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-26 09:58:52 -请求地址 : http://localhost:8081/print/print/printEdit/1
2019-03-26 09:58:52 -HTTP METHOD : GET
2019-03-26 09:58:52 -CLASS_METHOD : com.bootdo.print.controller.PrintController.printEdit
2019-03-26 09:58:52 -参数 : [1, {}]
2019-03-26 09:58:52 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_sum`,`water_money`,`account_data`,`cost_data`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-03-26 09:58:52 -==> Parameters: 1(Long)
2019-03-26 09:58:52 -<==      Total: 1
2019-03-26 09:58:52 -耗时 : 5
2019-03-26 09:58:52 -返回值 : print/print/printEdit
2019-03-26 09:59:16 -请求地址 : http://localhost:8081/print/print/list
2019-03-26 09:59:16 -HTTP METHOD : GET
2019-03-26 09:59:16 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-26 09:59:16 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=2019-03-12}]
2019-03-26 09:59:16 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_sum`,`water_money`,`account_data`,`cost_data`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE `print_date` >= ? and `print_date` <= ? order by id asc limit ?, ? 
2019-03-26 09:59:16 -==> Parameters: 2019-03-12 00:00:00(String), 2019-03-12 23:59:59(String), 0(Integer), 10(Integer)
2019-03-26 09:59:16 -<==      Total: 0
2019-03-26 09:59:16 -==>  Preparing: select count(*) from print WHERE `print_date` >= ? and `print_date` <= ? 
2019-03-26 09:59:16 -==> Parameters: 2019-03-12 00:00:00(String), 2019-03-12 23:59:59(String)
2019-03-26 09:59:16 -<==      Total: 1
2019-03-26 09:59:16 -耗时 : 12
2019-03-26 09:59:16 -返回值 : com.bootdo.common.utils.PageUtils@b5e38ed
2019-03-26 09:59:17 -请求地址 : http://localhost:8081/print/print/list
2019-03-26 09:59:17 -HTTP METHOD : GET
2019-03-26 09:59:17 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-26 09:59:17 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=2019-03-12}]
2019-03-26 09:59:17 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_sum`,`water_money`,`account_data`,`cost_data`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE `print_date` >= ? and `print_date` <= ? order by id asc limit ?, ? 
2019-03-26 09:59:17 -==> Parameters: 2019-03-12 00:00:00(String), 2019-03-12 23:59:59(String), 0(Integer), 10(Integer)
2019-03-26 09:59:17 -<==      Total: 0
2019-03-26 09:59:17 -==>  Preparing: select count(*) from print WHERE `print_date` >= ? and `print_date` <= ? 
2019-03-26 09:59:17 -==> Parameters: 2019-03-12 00:00:00(String), 2019-03-12 23:59:59(String)
2019-03-26 09:59:17 -<==      Total: 1
2019-03-26 09:59:17 -耗时 : 7
2019-03-26 09:59:17 -返回值 : com.bootdo.common.utils.PageUtils@303b36e6
2019-03-26 09:59:17 -请求地址 : http://localhost:8081/print/print/list
2019-03-26 09:59:17 -HTTP METHOD : GET
2019-03-26 09:59:17 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-26 09:59:17 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=2019-03-12}]
2019-03-26 09:59:17 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_sum`,`water_money`,`account_data`,`cost_data`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE `print_date` >= ? and `print_date` <= ? order by id asc limit ?, ? 
2019-03-26 09:59:17 -==> Parameters: 2019-03-12 00:00:00(String), 2019-03-12 23:59:59(String), 0(Integer), 10(Integer)
2019-03-26 09:59:17 -<==      Total: 0
2019-03-26 09:59:17 -==>  Preparing: select count(*) from print WHERE `print_date` >= ? and `print_date` <= ? 
2019-03-26 09:59:17 -==> Parameters: 2019-03-12 00:00:00(String), 2019-03-12 23:59:59(String)
2019-03-26 09:59:17 -<==      Total: 1
2019-03-26 09:59:17 -耗时 : 8
2019-03-26 09:59:17 -返回值 : com.bootdo.common.utils.PageUtils@e4ae651
2019-03-26 09:59:17 -请求地址 : http://localhost:8081/print/print/list
2019-03-26 09:59:17 -HTTP METHOD : GET
2019-03-26 09:59:17 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-26 09:59:17 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=2019-03-12}]
2019-03-26 09:59:17 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_sum`,`water_money`,`account_data`,`cost_data`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE `print_date` >= ? and `print_date` <= ? order by id asc limit ?, ? 
2019-03-26 09:59:17 -==> Parameters: 2019-03-12 00:00:00(String), 2019-03-12 23:59:59(String), 0(Integer), 10(Integer)
2019-03-26 09:59:17 -<==      Total: 0
2019-03-26 09:59:17 -==>  Preparing: select count(*) from print WHERE `print_date` >= ? and `print_date` <= ? 
2019-03-26 09:59:17 -==> Parameters: 2019-03-12 00:00:00(String), 2019-03-12 23:59:59(String)
2019-03-26 09:59:17 -<==      Total: 1
2019-03-26 09:59:17 -耗时 : 6
2019-03-26 09:59:17 -返回值 : com.bootdo.common.utils.PageUtils@32123314
2019-03-26 09:59:42 -请求地址 : http://localhost:8081/print/print/list
2019-03-26 09:59:42 -HTTP METHOD : GET
2019-03-26 09:59:42 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-26 09:59:42 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=2019-03-12}]
2019-03-26 09:59:42 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_sum`,`water_money`,`account_data`,`cost_data`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE `print_date` >= ? and `print_date` <= ? order by id asc limit ?, ? 
2019-03-26 09:59:42 -==> Parameters: 2019-03-12 00:00:00(String), 2019-03-12 23:59:59(String), 0(Integer), 10(Integer)
2019-03-26 09:59:42 -<==      Total: 0
2019-03-26 09:59:42 -==>  Preparing: select count(*) from print WHERE `print_date` >= ? and `print_date` <= ? 
2019-03-26 09:59:42 -==> Parameters: 2019-03-12 00:00:00(String), 2019-03-12 23:59:59(String)
2019-03-26 09:59:42 -<==      Total: 1
2019-03-26 09:59:42 -耗时 : 9
2019-03-26 09:59:42 -返回值 : com.bootdo.common.utils.PageUtils@3d661140
2019-03-26 09:59:43 -请求地址 : http://localhost:8081/print/print/list
2019-03-26 09:59:43 -HTTP METHOD : GET
2019-03-26 09:59:43 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-26 09:59:43 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=2019-03-12}]
2019-03-26 09:59:43 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_sum`,`water_money`,`account_data`,`cost_data`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE `print_date` >= ? and `print_date` <= ? order by id asc limit ?, ? 
2019-03-26 09:59:43 -==> Parameters: 2019-03-12 00:00:00(String), 2019-03-12 23:59:59(String), 0(Integer), 10(Integer)
2019-03-26 09:59:43 -<==      Total: 0
2019-03-26 09:59:43 -==>  Preparing: select count(*) from print WHERE `print_date` >= ? and `print_date` <= ? 
2019-03-26 09:59:43 -==> Parameters: 2019-03-12 00:00:00(String), 2019-03-12 23:59:59(String)
2019-03-26 09:59:43 -<==      Total: 1
2019-03-26 09:59:43 -耗时 : 8
2019-03-26 09:59:43 -返回值 : com.bootdo.common.utils.PageUtils@7a8cc319
2019-03-26 09:59:43 -请求地址 : http://localhost:8081/print/print/list
2019-03-26 09:59:43 -HTTP METHOD : GET
2019-03-26 09:59:43 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-26 09:59:43 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=2019-03-12}]
2019-03-26 09:59:43 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_sum`,`water_money`,`account_data`,`cost_data`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE `print_date` >= ? and `print_date` <= ? order by id asc limit ?, ? 
2019-03-26 09:59:43 -==> Parameters: 2019-03-12 00:00:00(String), 2019-03-12 23:59:59(String), 0(Integer), 10(Integer)
2019-03-26 09:59:43 -<==      Total: 0
2019-03-26 09:59:43 -==>  Preparing: select count(*) from print WHERE `print_date` >= ? and `print_date` <= ? 
2019-03-26 09:59:43 -==> Parameters: 2019-03-12 00:00:00(String), 2019-03-12 23:59:59(String)
2019-03-26 09:59:43 -<==      Total: 1
2019-03-26 09:59:43 -耗时 : 9
2019-03-26 09:59:43 -返回值 : com.bootdo.common.utils.PageUtils@fd79eef
2019-03-26 09:59:43 -请求地址 : http://localhost:8081/print/print/list
2019-03-26 09:59:43 -HTTP METHOD : GET
2019-03-26 09:59:43 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-26 09:59:43 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=2019-03-12}]
2019-03-26 09:59:43 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_sum`,`water_money`,`account_data`,`cost_data`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE `print_date` >= ? and `print_date` <= ? order by id asc limit ?, ? 
2019-03-26 09:59:43 -==> Parameters: 2019-03-12 00:00:00(String), 2019-03-12 23:59:59(String), 0(Integer), 10(Integer)
2019-03-26 09:59:43 -<==      Total: 0
2019-03-26 09:59:43 -==>  Preparing: select count(*) from print WHERE `print_date` >= ? and `print_date` <= ? 
2019-03-26 09:59:43 -==> Parameters: 2019-03-12 00:00:00(String), 2019-03-12 23:59:59(String)
2019-03-26 09:59:43 -<==      Total: 1
2019-03-26 09:59:43 -耗时 : 10
2019-03-26 09:59:43 -返回值 : com.bootdo.common.utils.PageUtils@1642b79e
2019-03-26 10:00:10 -请求地址 : http://localhost:8081/print/print
2019-03-26 10:00:10 -HTTP METHOD : GET
2019-03-26 10:00:10 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-03-26 10:00:10 -参数 : []
2019-03-26 10:00:10 -耗时 : 0
2019-03-26 10:00:10 -返回值 : print/print/print
2019-03-26 10:00:10 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-26 10:00:10 -HTTP METHOD : GET
2019-03-26 10:00:10 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-26 10:00:10 -参数 : [userType]
2019-03-26 10:00:10 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-26 10:00:10 -==> Parameters: userType(String)
2019-03-26 10:00:10 -<==      Total: 2
2019-03-26 10:00:10 -耗时 : 3
2019-03-26 10:00:10 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-26 10:00:10 -请求地址 : http://localhost:8081/print/print/list
2019-03-26 10:00:10 -HTTP METHOD : GET
2019-03-26 10:00:10 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-26 10:00:10 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-26 10:00:10 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_sum`,`water_money`,`account_data`,`cost_data`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-03-26 10:00:10 -==> Parameters: 0(Integer), 10(Integer)
2019-03-26 10:00:10 -<==      Total: 3
2019-03-26 10:00:10 -==>  Preparing: select count(*) from print 
2019-03-26 10:00:10 -==> Parameters: 
2019-03-26 10:00:10 -<==      Total: 1
2019-03-26 10:00:10 -耗时 : 12
2019-03-26 10:00:10 -返回值 : com.bootdo.common.utils.PageUtils@60d4cf9c
2019-03-26 10:01:26 -请求地址 : http://localhost:8081/common/job
2019-03-26 10:01:26 -HTTP METHOD : GET
2019-03-26 10:01:26 -CLASS_METHOD : com.bootdo.common.controller.JobController.taskScheduleJob
2019-03-26 10:01:26 -参数 : []
2019-03-26 10:01:26 -耗时 : 1
2019-03-26 10:01:26 -返回值 : common/job/job
2019-03-26 10:01:27 -请求地址 : http://localhost:8081/common/time
2019-03-26 10:01:27 -HTTP METHOD : GET
2019-03-26 10:01:27 -CLASS_METHOD : com.bootdo.common.controller.TimeController.Time
2019-03-26 10:01:27 -参数 : []
2019-03-26 10:01:27 -耗时 : 1
2019-03-26 10:01:27 -返回值 : common/job/time
2019-03-26 10:01:31 -请求地址 : http://localhost:8081/common/long
2019-03-26 10:01:31 -HTTP METHOD : GET
2019-03-26 10:01:31 -CLASS_METHOD : com.bootdo.common.controller.LongController.Long
2019-03-26 10:01:31 -参数 : []
2019-03-26 10:01:31 -耗时 : 1
2019-03-26 10:01:31 -返回值 : common/job/Long
2019-03-26 10:16:52 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 21], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 3], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 440]
2019-03-26 10:46:06 -Validating all active sessions...
2019-03-26 10:46:06 -Finished session validation.  [1] sessions were stopped.
2019-03-26 10:46:52 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 21], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 3], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 873]
2019-03-26 10:56:04 -Starting BootdoApplication on ZJZL-20180906VX with PID 10336 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-26 10:56:04 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-26 10:56:04 -The following profiles are active: dev
2019-03-26 10:56:04 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@41e350f1: startup date [Tue Mar 26 10:56:04 CST 2019]; root of context hierarchy
2019-03-26 10:56:08 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-26 10:56:10 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$5beeaa61] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 10:56:10 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$4e47d908] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 10:56:11 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 10:56:12 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 10:56:12 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 10:56:12 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-26 10:56:12 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-26 10:56:12 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 10:56:12 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 10:56:12 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 10:56:12 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 10:56:13 -Tomcat initialized with port(s): 8081 (http)
2019-03-26 10:56:13 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-26 10:56:14 -Starting service [Tomcat]
2019-03-26 10:56:14 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-26 10:56:14 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-26 10:56:15 -Initializing Spring embedded WebApplicationContext
2019-03-26 10:56:15 -Root WebApplicationContext: initialization completed in 10580 ms
2019-03-26 10:56:21 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-26 10:56:21 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-26 10:56:21 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-26 10:56:21 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-26 10:56:21 -Filter xssFilter was not registered (disabled)
2019-03-26 10:56:21 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-26 10:56:21 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-26 10:56:21 -Servlet statViewServlet mapped to [/druid/*]
2019-03-26 10:56:21 -Servlet dispatcherServlet mapped to [/]
2019-03-26 10:56:24 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@41e350f1: startup date [Tue Mar 26 10:56:04 CST 2019]; root of context hierarchy
2019-03-26 10:56:25 -Using default implementation for ThreadExecutor
2019-03-26 10:56:25 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-26 10:56:25 -Quartz Scheduler v.2.2.1 created.
2019-03-26 10:56:25 -RAMJobStore initialized.
2019-03-26 10:56:25 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-26 10:56:25 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-26 10:56:25 -Quartz scheduler version: 2.2.1
2019-03-26 10:56:25 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@25e796fe
2019-03-26 10:56:26 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-26 10:56:26 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-26 10:56:30 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-26 10:56:30 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-03-26 10:56:30 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-26 10:56:30 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-26 10:56:30 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-26 10:56:30 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-26 10:56:30 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-26 10:56:30 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-26 10:56:30 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-26 10:56:30 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-26 10:56:30 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-26 10:56:30 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 10:56:30 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-26 10:56:30 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 10:56:30 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-26 10:56:30 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-26 10:56:30 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-26 10:56:30 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-26 10:56:30 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-26 10:56:30 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-26 10:56:30 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-26 10:56:30 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-26 10:56:30 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 10:56:30 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-26 10:56:30 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-26 10:56:30 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-26 10:56:30 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 10:56:30 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-26 10:56:30 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 10:56:30 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-26 10:56:30 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-26 10:56:30 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-26 10:56:30 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-26 10:56:30 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-26 10:56:30 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-26 10:56:30 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-26 10:56:30 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-26 10:56:30 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-26 10:56:30 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 10:56:30 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-26 10:56:30 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-26 10:56:30 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 10:56:30 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-26 10:56:30 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-26 10:56:30 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-26 10:56:30 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-26 10:56:30 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 10:56:30 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-26 10:56:30 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-03-26 10:56:30 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-26 10:56:30 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-26 10:56:30 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-26 10:56:30 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-26 10:56:30 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-26 10:56:30 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-26 10:56:30 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-26 10:56:30 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-26 10:56:30 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-26 10:56:30 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-26 10:56:30 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 10:56:30 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-26 10:56:30 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-03-26 10:56:30 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-26 10:56:30 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-26 10:56:30 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-26 10:56:30 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-26 10:56:30 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-26 10:56:30 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-26 10:56:30 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 10:56:30 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-03-26 10:56:30 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 10:56:30 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-26 10:56:30 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-26 10:56:30 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-26 10:56:30 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-26 10:56:30 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-26 10:56:30 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-26 10:56:30 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-26 10:56:30 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 10:56:30 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-26 10:56:30 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-26 10:56:30 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-26 10:56:30 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-26 10:56:30 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-26 10:56:30 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-26 10:56:30 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-26 10:56:30 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-26 10:56:30 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-26 10:56:30 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-26 10:56:30 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 10:56:30 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-26 10:56:30 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 10:56:30 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-26 10:56:30 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-26 10:56:30 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-26 10:56:30 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-03-26 10:56:30 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-03-26 10:56:30 -Mapped "{[/moneyList/moneyList/LikeName],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.LikeName(org.springframework.ui.Model)
2019-03-26 10:56:30 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-26 10:56:30 -Mapped "{[/moneyList/moneyList/UserList],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-26 10:56:30 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-26 10:56:30 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-26 10:56:30 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-26 10:56:30 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-26 10:56:30 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 10:56:30 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-26 10:56:30 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 10:56:30 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-26 10:56:30 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-26 10:56:30 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-26 10:56:30 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-26 10:56:30 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-26 10:56:30 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-26 10:56:30 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 10:56:30 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-26 10:56:30 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 10:56:30 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-26 10:56:30 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-26 10:56:30 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-26 10:56:30 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-26 10:56:30 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-26 10:56:30 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-26 10:56:30 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 10:56:30 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-26 10:56:30 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 10:56:30 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-26 10:56:30 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-26 10:56:30 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-26 10:56:30 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-26 10:56:30 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-26 10:56:30 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-26 10:56:30 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-26 10:56:30 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 10:56:30 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-26 10:56:30 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-26 10:56:30 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-26 10:56:30 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 10:56:30 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 10:56:30 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-26 10:56:30 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-26 10:56:30 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-26 10:56:30 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-26 10:56:30 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-26 10:56:30 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 10:56:30 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-26 10:56:30 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-26 10:56:30 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-26 10:56:30 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 10:56:30 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 10:56:30 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-26 10:56:30 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-26 10:56:30 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-26 10:56:30 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-26 10:56:30 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-26 10:56:30 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-26 10:56:30 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-26 10:56:30 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-26 10:56:30 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-26 10:56:30 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 10:56:30 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-26 10:56:30 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-26 10:56:30 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-26 10:56:30 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-26 10:56:30 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-26 10:56:30 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-26 10:56:30 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-26 10:56:30 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-26 10:56:30 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-26 10:56:30 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-26 10:56:30 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 10:56:30 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-26 10:56:30 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-26 10:56:30 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-26 10:56:30 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-26 10:56:30 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-26 10:56:30 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-26 10:56:30 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-26 10:56:30 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-26 10:56:30 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-26 10:56:30 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-26 10:56:30 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-26 10:56:30 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 10:56:30 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-26 10:56:30 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-26 10:56:30 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-26 10:56:30 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-26 10:56:30 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-26 10:56:30 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 10:56:30 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-26 10:56:30 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-26 10:56:30 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-26 10:56:30 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 10:56:30 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-26 10:56:30 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-26 10:56:30 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-26 10:56:30 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-26 10:56:30 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-26 10:56:30 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-26 10:56:30 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-26 10:56:30 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-26 10:56:30 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-26 10:56:30 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-26 10:56:30 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-26 10:56:30 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-26 10:56:30 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-26 10:56:30 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-26 10:56:30 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-26 10:56:30 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-26 10:56:30 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-26 10:56:30 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 10:56:30 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-26 10:56:30 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-26 10:56:30 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 10:56:30 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-26 10:56:30 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 10:56:30 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-26 10:56:30 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-26 10:56:30 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-26 10:56:30 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-26 10:56:30 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-26 10:56:30 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-26 10:56:30 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 10:56:30 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-26 10:56:30 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 10:56:30 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-26 10:56:30 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-03-26 10:56:30 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-26 10:56:30 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-26 10:56:30 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-03-26 10:56:30 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-26 10:56:30 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-26 10:56:30 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-26 10:56:30 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-26 10:56:31 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-26 10:56:31 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-26 10:56:31 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-26 10:56:32 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-26 10:56:33 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@41e350f1: startup date [Tue Mar 26 10:56:04 CST 2019]; root of context hierarchy
2019-03-26 10:56:33 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-26 10:56:33 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-26 10:56:33 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-26 10:56:33 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-26 10:56:34 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-26 10:56:37 -Registering beans for JMX exposure on startup
2019-03-26 10:56:38 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-26 10:56:38 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-26 10:56:38 -Starting beans in phase 2147483647
2019-03-26 10:56:38 -Context refreshed
2019-03-26 10:56:40 -Found 1 custom documentation plugin(s)
2019-03-26 10:56:40 -Scanning for api listing references
2019-03-26 10:56:41 -Generating unique operation named: removeUsingPOST_1
2019-03-26 10:56:42 -Generating unique operation named: addUsingGET_1
2019-03-26 10:56:42 -Generating unique operation named: editUsingGET_1
2019-03-26 10:56:42 -Generating unique operation named: listUsingGET_1
2019-03-26 10:56:42 -Generating unique operation named: removeUsingPOST_2
2019-03-26 10:56:42 -Generating unique operation named: removeUsingPOST_3
2019-03-26 10:56:42 -Generating unique operation named: saveUsingPOST_1
2019-03-26 10:56:42 -Generating unique operation named: updateUsingGET_1
2019-03-26 10:56:42 -Generating unique operation named: updateUsingHEAD_1
2019-03-26 10:56:42 -Generating unique operation named: updateUsingPOST_1
2019-03-26 10:56:42 -Generating unique operation named: updateUsingPUT_1
2019-03-26 10:56:42 -Generating unique operation named: updateUsingPATCH_1
2019-03-26 10:56:42 -Generating unique operation named: updateUsingDELETE_1
2019-03-26 10:56:42 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-26 10:56:42 -Generating unique operation named: updateUsingTRACE_1
2019-03-26 10:56:42 -Generating unique operation named: addUsingGET_2
2019-03-26 10:56:42 -Generating unique operation named: editUsingGET_2
2019-03-26 10:56:42 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-26 10:56:42 -Generating unique operation named: listUsingGET_2
2019-03-26 10:56:42 -Generating unique operation named: removeUsingPOST_4
2019-03-26 10:56:42 -Generating unique operation named: removeUsingPOST_5
2019-03-26 10:56:42 -Generating unique operation named: saveUsingPOST_2
2019-03-26 10:56:42 -Generating unique operation named: updateUsingPOST_2
2019-03-26 10:56:42 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-26 10:56:42 -Generating unique operation named: addUsingGET_3
2019-03-26 10:56:42 -Generating unique operation named: editUsingGET_3
2019-03-26 10:56:42 -Generating unique operation named: listUsingGET_3
2019-03-26 10:56:42 -Generating unique operation named: removeUsingPOST_6
2019-03-26 10:56:42 -Generating unique operation named: removeUsingPOST_7
2019-03-26 10:56:42 -Generating unique operation named: saveUsingPOST_3
2019-03-26 10:56:42 -Generating unique operation named: updateUsingGET_2
2019-03-26 10:56:42 -Generating unique operation named: updateUsingHEAD_2
2019-03-26 10:56:42 -Generating unique operation named: updateUsingPOST_3
2019-03-26 10:56:42 -Generating unique operation named: updateUsingPUT_2
2019-03-26 10:56:42 -Generating unique operation named: updateUsingPATCH_2
2019-03-26 10:56:42 -Generating unique operation named: updateUsingDELETE_2
2019-03-26 10:56:42 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-26 10:56:42 -Generating unique operation named: updateUsingTRACE_2
2019-03-26 10:56:42 -Generating unique operation named: addUsingGET_4
2019-03-26 10:56:42 -Generating unique operation named: editUsingGET_4
2019-03-26 10:56:42 -Generating unique operation named: listUsingGET_4
2019-03-26 10:56:42 -Generating unique operation named: removeUsingPOST_8
2019-03-26 10:56:42 -Generating unique operation named: removeUsingPOST_9
2019-03-26 10:56:42 -Generating unique operation named: saveUsingPOST_4
2019-03-26 10:56:42 -Generating unique operation named: updateUsingGET_3
2019-03-26 10:56:42 -Generating unique operation named: updateUsingHEAD_3
2019-03-26 10:56:42 -Generating unique operation named: updateUsingPOST_4
2019-03-26 10:56:42 -Generating unique operation named: updateUsingPUT_3
2019-03-26 10:56:42 -Generating unique operation named: updateUsingPATCH_3
2019-03-26 10:56:42 -Generating unique operation named: updateUsingDELETE_3
2019-03-26 10:56:42 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-26 10:56:42 -Generating unique operation named: updateUsingTRACE_3
2019-03-26 10:56:42 -Generating unique operation named: ElecUsingGET_1
2019-03-26 10:56:42 -Generating unique operation named: addUsingGET_5
2019-03-26 10:56:42 -Generating unique operation named: editUsingGET_5
2019-03-26 10:56:42 -Generating unique operation named: listUsingGET_5
2019-03-26 10:56:42 -Generating unique operation named: removeUsingPOST_10
2019-03-26 10:56:42 -Generating unique operation named: removeUsingPOST_11
2019-03-26 10:56:42 -Generating unique operation named: saveUsingPOST_5
2019-03-26 10:56:42 -Generating unique operation named: updateUsingGET_4
2019-03-26 10:56:42 -Generating unique operation named: updateUsingHEAD_4
2019-03-26 10:56:42 -Generating unique operation named: updateUsingPOST_5
2019-03-26 10:56:42 -Generating unique operation named: updateUsingPUT_4
2019-03-26 10:56:42 -Generating unique operation named: updateUsingPATCH_4
2019-03-26 10:56:42 -Generating unique operation named: updateUsingDELETE_4
2019-03-26 10:56:42 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-26 10:56:42 -Generating unique operation named: updateUsingTRACE_4
2019-03-26 10:56:42 -Generating unique operation named: editUsingGET_6
2019-03-26 10:56:42 -Generating unique operation named: listUsingGET_6
2019-03-26 10:56:42 -Generating unique operation named: updateUsingPOST_6
2019-03-26 10:56:42 -Generating unique operation named: addUsingGET_6
2019-03-26 10:56:42 -Generating unique operation named: editUsingGET_7
2019-03-26 10:56:42 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-26 10:56:43 -Generating unique operation named: listUsingGET_7
2019-03-26 10:56:43 -Generating unique operation named: removeUsingPOST_12
2019-03-26 10:56:43 -Generating unique operation named: removeUsingPOST_13
2019-03-26 10:56:43 -Generating unique operation named: saveUsingPOST_6
2019-03-26 10:56:43 -Generating unique operation named: updateUsingGET_5
2019-03-26 10:56:43 -Generating unique operation named: updateUsingHEAD_5
2019-03-26 10:56:43 -Generating unique operation named: updateUsingPOST_7
2019-03-26 10:56:43 -Generating unique operation named: updateUsingPUT_5
2019-03-26 10:56:43 -Generating unique operation named: updateUsingPATCH_5
2019-03-26 10:56:43 -Generating unique operation named: updateUsingDELETE_5
2019-03-26 10:56:43 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-26 10:56:43 -Generating unique operation named: updateUsingTRACE_5
2019-03-26 10:56:43 -Generating unique operation named: exprotExcelUsingGET_4
2019-03-26 10:56:43 -Generating unique operation named: addUsingGET_7
2019-03-26 10:56:43 -Generating unique operation named: editUsingGET_8
2019-03-26 10:56:43 -Generating unique operation named: listUsingGET_8
2019-03-26 10:56:43 -Generating unique operation named: removeUsingPOST_14
2019-03-26 10:56:43 -Generating unique operation named: removeUsingPOST_15
2019-03-26 10:56:43 -Generating unique operation named: saveUsingPOST_7
2019-03-26 10:56:43 -Generating unique operation named: updateUsingGET_6
2019-03-26 10:56:43 -Generating unique operation named: updateUsingHEAD_6
2019-03-26 10:56:43 -Generating unique operation named: updateUsingPOST_8
2019-03-26 10:56:43 -Generating unique operation named: updateUsingPUT_6
2019-03-26 10:56:43 -Generating unique operation named: updateUsingPATCH_6
2019-03-26 10:56:43 -Generating unique operation named: updateUsingDELETE_6
2019-03-26 10:56:43 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-26 10:56:43 -Generating unique operation named: updateUsingTRACE_6
2019-03-26 10:56:43 -Generating unique operation named: addUsingGET_8
2019-03-26 10:56:43 -Generating unique operation named: editUsingGET_9
2019-03-26 10:56:43 -Generating unique operation named: listUsingGET_9
2019-03-26 10:56:43 -Generating unique operation named: removeUsingPOST_16
2019-03-26 10:56:43 -Generating unique operation named: removeUsingPOST_17
2019-03-26 10:56:43 -Generating unique operation named: saveUsingPOST_8
2019-03-26 10:56:43 -Generating unique operation named: updateUsingGET_7
2019-03-26 10:56:43 -Generating unique operation named: updateUsingHEAD_7
2019-03-26 10:56:43 -Generating unique operation named: updateUsingPOST_9
2019-03-26 10:56:43 -Generating unique operation named: updateUsingPUT_7
2019-03-26 10:56:43 -Generating unique operation named: updateUsingPATCH_7
2019-03-26 10:56:43 -Generating unique operation named: updateUsingDELETE_7
2019-03-26 10:56:43 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-26 10:56:43 -Generating unique operation named: updateUsingTRACE_7
2019-03-26 10:56:43 -Generating unique operation named: addUsingGET_9
2019-03-26 10:56:43 -Generating unique operation named: editUsingGET_10
2019-03-26 10:56:43 -Generating unique operation named: infoUsingGET_1
2019-03-26 10:56:43 -Generating unique operation named: infoUsingHEAD_1
2019-03-26 10:56:43 -Generating unique operation named: infoUsingPOST_1
2019-03-26 10:56:43 -Generating unique operation named: infoUsingPUT_1
2019-03-26 10:56:43 -Generating unique operation named: infoUsingPATCH_1
2019-03-26 10:56:43 -Generating unique operation named: infoUsingDELETE_1
2019-03-26 10:56:43 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-26 10:56:43 -Generating unique operation named: infoUsingTRACE_1
2019-03-26 10:56:43 -Generating unique operation named: listUsingGET_10
2019-03-26 10:56:43 -Generating unique operation named: removeUsingPOST_18
2019-03-26 10:56:43 -Generating unique operation named: removeUsingPOST_19
2019-03-26 10:56:43 -Generating unique operation named: saveUsingPOST_9
2019-03-26 10:56:43 -Generating unique operation named: updateUsingPOST_10
2019-03-26 10:56:43 -Generating unique operation named: listUsingGET_11
2019-03-26 10:56:43 -Generating unique operation named: removeUsingPOST_20
2019-03-26 10:56:43 -Generating unique operation named: welcomeUsingGET_1
2019-03-26 10:56:43 -Generating unique operation named: addUsingGET_10
2019-03-26 10:56:43 -Generating unique operation named: editUsingGET_11
2019-03-26 10:56:43 -Generating unique operation named: listUsingGET_12
2019-03-26 10:56:43 -Generating unique operation named: removeUsingPOST_21
2019-03-26 10:56:43 -Generating unique operation named: saveUsingPOST_10
2019-03-26 10:56:43 -Generating unique operation named: treeUsingGET_1
2019-03-26 10:56:43 -Generating unique operation named: treeUsingGET_2
2019-03-26 10:56:43 -Generating unique operation named: updateUsingPOST_11
2019-03-26 10:56:43 -Generating unique operation named: addUsingGET_11
2019-03-26 10:56:43 -Generating unique operation named: editUsingGET_12
2019-03-26 10:56:43 -Generating unique operation named: listUsingGET_13
2019-03-26 10:56:43 -Generating unique operation named: removeUsingPOST_22
2019-03-26 10:56:43 -Generating unique operation named: removeUsingPOST_23
2019-03-26 10:56:43 -Generating unique operation named: saveUsingPOST_11
2019-03-26 10:56:43 -Generating unique operation named: updateUsingGET_8
2019-03-26 10:56:43 -Generating unique operation named: updateUsingHEAD_8
2019-03-26 10:56:43 -Generating unique operation named: updateUsingPOST_12
2019-03-26 10:56:43 -Generating unique operation named: updateUsingPUT_8
2019-03-26 10:56:43 -Generating unique operation named: updateUsingPATCH_8
2019-03-26 10:56:43 -Generating unique operation named: updateUsingDELETE_8
2019-03-26 10:56:43 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-26 10:56:43 -Generating unique operation named: updateUsingTRACE_8
2019-03-26 10:56:43 -Generating unique operation named: addUsingGET_12
2019-03-26 10:56:43 -Generating unique operation named: editUsingGET_13
2019-03-26 10:56:43 -Generating unique operation named: listUsingGET_14
2019-03-26 10:56:43 -Generating unique operation named: removeUsingPOST_24
2019-03-26 10:56:43 -Generating unique operation named: removeUsingPOST_25
2019-03-26 10:56:43 -Generating unique operation named: saveUsingPOST_12
2019-03-26 10:56:43 -Generating unique operation named: updateUsingGET_9
2019-03-26 10:56:43 -Generating unique operation named: updateUsingHEAD_9
2019-03-26 10:56:43 -Generating unique operation named: updateUsingPOST_13
2019-03-26 10:56:43 -Generating unique operation named: updateUsingPUT_9
2019-03-26 10:56:43 -Generating unique operation named: updateUsingPATCH_9
2019-03-26 10:56:43 -Generating unique operation named: updateUsingDELETE_9
2019-03-26 10:56:43 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-26 10:56:43 -Generating unique operation named: updateUsingTRACE_9
2019-03-26 10:56:44 -Generating unique operation named: addUsingGET_13
2019-03-26 10:56:44 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-26 10:56:44 -Generating unique operation named: editUsingGET_14
2019-03-26 10:56:44 -Generating unique operation named: listUsingGET_15
2019-03-26 10:56:44 -Generating unique operation named: saveUsingPOST_13
2019-03-26 10:56:44 -Generating unique operation named: saveUsingPOST_14
2019-03-26 10:56:44 -Generating unique operation named: updateUsingPOST_14
2019-03-26 10:56:44 -Generating unique operation named: listUsingGET_16
2019-03-26 10:56:44 -Generating unique operation named: listUsingHEAD_1
2019-03-26 10:56:44 -Generating unique operation named: listUsingPOST_1
2019-03-26 10:56:44 -Generating unique operation named: listUsingPUT_1
2019-03-26 10:56:44 -Generating unique operation named: listUsingPATCH_1
2019-03-26 10:56:44 -Generating unique operation named: listUsingDELETE_1
2019-03-26 10:56:44 -Generating unique operation named: listUsingOPTIONS_1
2019-03-26 10:56:44 -Generating unique operation named: listUsingTRACE_1
2019-03-26 10:56:44 -Generating unique operation named: addUsingGET_14
2019-03-26 10:56:44 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-26 10:56:44 -Generating unique operation named: editUsingGET_15
2019-03-26 10:56:44 -Generating unique operation named: listUsingGET_17
2019-03-26 10:56:44 -Generating unique operation named: removeUsingPOST_26
2019-03-26 10:56:44 -Generating unique operation named: saveUsingPOST_15
2019-03-26 10:56:44 -Generating unique operation named: treeUsingGET_3
2019-03-26 10:56:44 -Generating unique operation named: treeViewUsingGET_1
2019-03-26 10:56:44 -Generating unique operation named: updateUsingPOST_15
2019-03-26 10:56:44 -Generating unique operation named: addUsingGET_15
2019-03-26 10:56:44 -Generating unique operation named: editUsingGET_16
2019-03-26 10:56:44 -Generating unique operation named: exprotExcelUsingGET_5
2019-03-26 10:56:44 -Generating unique operation named: listUsingGET_18
2019-03-26 10:56:44 -Generating unique operation named: removeUsingPOST_27
2019-03-26 10:56:44 -Generating unique operation named: removeUsingPOST_28
2019-03-26 10:56:44 -Generating unique operation named: saveUsingPOST_16
2019-03-26 10:56:44 -Generating unique operation named: updateUsingGET_10
2019-03-26 10:56:44 -Generating unique operation named: updateUsingHEAD_10
2019-03-26 10:56:44 -Generating unique operation named: updateUsingPOST_16
2019-03-26 10:56:44 -Generating unique operation named: updateUsingPUT_10
2019-03-26 10:56:44 -Generating unique operation named: updateUsingPATCH_10
2019-03-26 10:56:44 -Generating unique operation named: updateUsingDELETE_10
2019-03-26 10:56:44 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-26 10:56:44 -Generating unique operation named: updateUsingTRACE_10
2019-03-26 10:56:44 -Generating unique operation named: exprotExcelUsingGET_6
2019-03-26 10:56:44 -Generating unique operation named: addUsingGET_16
2019-03-26 10:56:44 -Generating unique operation named: editUsingGET_17
2019-03-26 10:56:44 -Generating unique operation named: listUsingGET_19
2019-03-26 10:56:44 -Generating unique operation named: removeUsingPOST_29
2019-03-26 10:56:44 -Generating unique operation named: removeUsingPOST_30
2019-03-26 10:56:44 -Generating unique operation named: saveUsingPOST_17
2019-03-26 10:56:44 -Generating unique operation named: updateUsingGET_11
2019-03-26 10:56:44 -Generating unique operation named: updateUsingHEAD_11
2019-03-26 10:56:44 -Generating unique operation named: updateUsingPOST_17
2019-03-26 10:56:44 -Generating unique operation named: updateUsingPUT_11
2019-03-26 10:56:44 -Generating unique operation named: updateUsingPATCH_11
2019-03-26 10:56:44 -Generating unique operation named: updateUsingDELETE_11
2019-03-26 10:56:44 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-26 10:56:44 -Generating unique operation named: updateUsingTRACE_11
2019-03-26 10:56:44 -Generating unique operation named: addUsingGET_17
2019-03-26 10:56:44 -Generating unique operation named: editUsingGET_18
2019-03-26 10:56:44 -Generating unique operation named: listUsingGET_20
2019-03-26 10:56:44 -Generating unique operation named: removeUsingPOST_31
2019-03-26 10:56:44 -Generating unique operation named: removeUsingPOST_32
2019-03-26 10:56:44 -Generating unique operation named: saveUsingPOST_18
2019-03-26 10:56:44 -Generating unique operation named: updateUsingGET_12
2019-03-26 10:56:44 -Generating unique operation named: updateUsingHEAD_12
2019-03-26 10:56:44 -Generating unique operation named: updateUsingPOST_18
2019-03-26 10:56:44 -Generating unique operation named: updateUsingPUT_12
2019-03-26 10:56:44 -Generating unique operation named: updateUsingPATCH_12
2019-03-26 10:56:44 -Generating unique operation named: updateUsingDELETE_12
2019-03-26 10:56:44 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-26 10:56:44 -Generating unique operation named: updateUsingTRACE_12
2019-03-26 10:56:44 -Starting Quartz Scheduler now
2019-03-26 10:56:44 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-26 10:56:44 -Starting...
2019-03-26 10:56:44 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-26 10:56:44 -Started.
2019-03-26 10:56:44 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-26 10:56:44 -Failed to start connector [Connector[HTTP/1.1-8081]]
org.apache.catalina.LifecycleException: Failed to start component [Connector[HTTP/1.1-8081]]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:167)
	at org.apache.catalina.core.StandardService.addConnector(StandardService.java:225)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.addPreviouslyRemovedConnectors(TomcatWebServer.java:256)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:198)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.startWebServer(ServletWebServerApplicationContext.java:300)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.finishRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:553)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.bootdo.BootdoApplication.main(BootdoApplication.java:21)
Caused by: org.apache.catalina.LifecycleException: Protocol handler start failed
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1020)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
	... 13 common frames omitted
Caused by: java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Unknown Source)
	at sun.nio.ch.Net.bind(Unknown Source)
	at sun.nio.ch.ServerSocketChannelImpl.bind(Unknown Source)
	at sun.nio.ch.ServerSocketAdaptor.bind(Unknown Source)
	at org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:210)
	at org.apache.tomcat.util.net.AbstractEndpoint.start(AbstractEndpoint.java:1150)
	at org.apache.coyote.AbstractProtocol.start(AbstractProtocol.java:591)
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1018)
	... 14 common frames omitted
2019-03-26 10:56:44 -Pausing ProtocolHandler ["http-nio-8081"]
2019-03-26 10:56:44 -Stopping service [Tomcat]
2019-03-26 10:56:44 -The stop() method was called on component [StandardServer[-1]] after stop() had already been called. The second call will be ignored.
2019-03-26 10:56:44 -Stopping ProtocolHandler ["http-nio-8081"]
2019-03-26 10:56:44 -Destroying ProtocolHandler ["http-nio-8081"]
2019-03-26 10:56:44 -

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2019-03-26 10:56:44 -

***************************
APPLICATION FAILED TO START
***************************

Description:

The Tomcat connector configured to listen on port 8081 failed to start. The port may already be in use or the connector may be misconfigured.

Action:

Verify the connector's configuration, identify and stop any process that's listening on port 8081, or configure this application to listen on another port.

2019-03-26 10:56:44 -Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@41e350f1: startup date [Tue Mar 26 10:56:04 CST 2019]; root of context hierarchy
2019-03-26 10:56:44 -Stopping beans in phase 2147483647
2019-03-26 10:56:44 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2019-03-26 10:56:44 -Stopping...
2019-03-26 10:56:44 -BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-26 10:56:44 -Stopped.
2019-03-26 10:56:45 -Unregistering JMX-exposed beans on shutdown
2019-03-26 10:56:45 -Unregistering JMX-exposed beans
2019-03-26 10:56:45 -Shutting down ExecutorService 'brokerChannelExecutor'
2019-03-26 10:56:45 -Shutting down ExecutorService 'messageBrokerTaskScheduler'
2019-03-26 10:56:45 -Shutting down ExecutorService 'clientOutboundChannelExecutor'
2019-03-26 10:56:45 -Shutting down ExecutorService 'clientInboundChannelExecutor'
2019-03-26 10:56:45 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutting down.
2019-03-26 10:56:45 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2019-03-26 10:56:45 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutdown complete.
2019-03-26 10:56:45 -Shutting down Quartz Scheduler
2019-03-26 10:58:51 -Starting BootdoApplication on ZJZL-20180906VX with PID 2448 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-26 10:58:51 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-26 10:58:51 -The following profiles are active: dev
2019-03-26 10:58:51 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3f053c80: startup date [Tue Mar 26 10:58:51 CST 2019]; root of context hierarchy
2019-03-26 10:58:55 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-26 10:58:57 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b0e79208] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 10:58:57 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$a340c0af] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 10:58:58 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 10:58:59 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 10:58:59 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 10:58:59 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-26 10:58:59 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-26 10:58:59 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 10:58:59 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 10:58:59 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 10:58:59 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 10:59:00 -Tomcat initialized with port(s): 8081 (http)
2019-03-26 10:59:00 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-26 10:59:00 -Starting service [Tomcat]
2019-03-26 10:59:00 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-26 10:59:00 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-26 10:59:00 -Initializing Spring embedded WebApplicationContext
2019-03-26 10:59:00 -Root WebApplicationContext: initialization completed in 9107 ms
2019-03-26 10:59:01 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-26 10:59:01 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-26 10:59:01 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-26 10:59:01 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-26 10:59:01 -Filter xssFilter was not registered (disabled)
2019-03-26 10:59:01 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-26 10:59:01 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-26 10:59:01 -Servlet statViewServlet mapped to [/druid/*]
2019-03-26 10:59:01 -Servlet dispatcherServlet mapped to [/]
2019-03-26 10:59:04 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3f053c80: startup date [Tue Mar 26 10:58:51 CST 2019]; root of context hierarchy
2019-03-26 10:59:05 -Using default implementation for ThreadExecutor
2019-03-26 10:59:05 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-26 10:59:05 -Quartz Scheduler v.2.2.1 created.
2019-03-26 10:59:05 -RAMJobStore initialized.
2019-03-26 10:59:05 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-26 10:59:05 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-26 10:59:05 -Quartz scheduler version: 2.2.1
2019-03-26 10:59:05 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@79e16dd9
2019-03-26 10:59:05 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-26 10:59:05 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-26 10:59:08 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-26 10:59:08 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-03-26 10:59:08 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-26 10:59:08 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-26 10:59:08 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-26 10:59:08 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-26 10:59:08 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-26 10:59:08 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-26 10:59:08 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-26 10:59:08 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-26 10:59:08 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-26 10:59:08 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 10:59:08 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-26 10:59:08 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-26 10:59:08 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-26 10:59:08 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-26 10:59:08 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-26 10:59:08 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 10:59:08 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-26 10:59:08 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-26 10:59:08 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-26 10:59:08 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-26 10:59:08 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 10:59:08 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-26 10:59:08 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-26 10:59:08 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-26 10:59:08 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 10:59:08 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-26 10:59:08 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 10:59:08 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-26 10:59:08 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-26 10:59:08 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-26 10:59:08 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-26 10:59:08 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-26 10:59:08 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-26 10:59:08 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-26 10:59:08 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-26 10:59:08 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-26 10:59:08 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 10:59:08 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-26 10:59:08 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-26 10:59:08 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 10:59:08 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-26 10:59:08 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-26 10:59:08 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-26 10:59:08 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-26 10:59:08 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 10:59:08 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-26 10:59:08 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-03-26 10:59:08 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-26 10:59:08 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-26 10:59:08 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-26 10:59:08 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-26 10:59:08 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-26 10:59:08 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-26 10:59:08 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-26 10:59:08 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-26 10:59:08 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-26 10:59:08 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-26 10:59:08 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 10:59:08 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-26 10:59:08 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-26 10:59:08 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-26 10:59:08 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-03-26 10:59:08 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-26 10:59:08 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-26 10:59:08 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-26 10:59:08 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-26 10:59:08 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 10:59:08 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-03-26 10:59:08 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 10:59:08 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-26 10:59:08 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-26 10:59:08 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-26 10:59:08 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-26 10:59:08 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-26 10:59:08 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-26 10:59:08 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-26 10:59:08 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 10:59:08 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-26 10:59:08 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-26 10:59:08 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-26 10:59:08 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-26 10:59:08 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-26 10:59:08 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-26 10:59:08 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-26 10:59:08 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-26 10:59:08 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-26 10:59:08 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-26 10:59:08 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 10:59:08 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-26 10:59:08 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 10:59:08 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-26 10:59:08 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-26 10:59:08 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-03-26 10:59:08 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-03-26 10:59:08 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-26 10:59:08 -Mapped "{[/moneyList/moneyList/UserList],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-26 10:59:08 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-26 10:59:08 -Mapped "{[/moneyList/moneyList/LikeName],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.LikeName(org.springframework.ui.Model)
2019-03-26 10:59:08 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-26 10:59:08 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-26 10:59:08 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-26 10:59:08 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-26 10:59:08 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 10:59:08 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-26 10:59:08 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 10:59:08 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-26 10:59:08 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-26 10:59:08 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-26 10:59:08 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-26 10:59:08 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-26 10:59:08 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-26 10:59:08 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 10:59:08 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-26 10:59:08 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 10:59:08 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-26 10:59:08 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-26 10:59:08 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-26 10:59:08 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-26 10:59:08 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-26 10:59:08 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-26 10:59:08 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 10:59:08 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-26 10:59:08 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 10:59:08 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-26 10:59:08 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-26 10:59:08 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-26 10:59:08 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-26 10:59:08 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-26 10:59:08 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-26 10:59:08 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-26 10:59:08 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 10:59:08 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-26 10:59:08 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-26 10:59:08 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 10:59:08 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-26 10:59:08 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 10:59:08 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-26 10:59:08 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-26 10:59:08 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-26 10:59:08 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-26 10:59:08 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-26 10:59:08 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 10:59:08 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-26 10:59:08 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 10:59:08 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-26 10:59:08 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-26 10:59:08 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 10:59:08 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-26 10:59:08 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-26 10:59:08 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-26 10:59:08 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-26 10:59:08 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-26 10:59:08 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-26 10:59:08 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-26 10:59:08 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 10:59:08 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-26 10:59:08 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-26 10:59:08 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-26 10:59:08 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-26 10:59:08 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-26 10:59:08 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-26 10:59:08 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-26 10:59:08 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-26 10:59:08 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-26 10:59:08 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-26 10:59:08 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-26 10:59:08 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-26 10:59:08 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 10:59:08 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-26 10:59:08 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-26 10:59:08 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-26 10:59:08 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-26 10:59:08 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-26 10:59:08 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-26 10:59:08 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-26 10:59:08 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-26 10:59:08 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-26 10:59:08 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-26 10:59:08 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-26 10:59:08 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 10:59:08 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-26 10:59:08 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-26 10:59:08 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-26 10:59:08 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-26 10:59:08 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-26 10:59:08 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 10:59:08 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-26 10:59:08 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-26 10:59:08 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-26 10:59:08 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 10:59:08 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-26 10:59:08 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-26 10:59:08 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-26 10:59:08 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-26 10:59:08 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-26 10:59:08 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-26 10:59:08 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-26 10:59:08 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-26 10:59:08 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-26 10:59:08 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-26 10:59:08 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-26 10:59:08 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-26 10:59:08 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-26 10:59:08 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-26 10:59:08 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-26 10:59:08 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-26 10:59:08 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-26 10:59:08 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 10:59:08 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-26 10:59:08 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-26 10:59:08 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 10:59:08 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-26 10:59:08 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 10:59:08 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-26 10:59:08 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-26 10:59:08 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-26 10:59:08 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-26 10:59:08 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-26 10:59:08 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-26 10:59:08 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 10:59:08 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-26 10:59:08 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 10:59:08 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-26 10:59:08 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-26 10:59:08 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-03-26 10:59:08 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-03-26 10:59:08 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-26 10:59:08 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-26 10:59:08 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-26 10:59:08 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-26 10:59:08 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-26 10:59:09 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-26 10:59:09 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-26 10:59:09 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-26 10:59:10 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-26 10:59:10 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3f053c80: startup date [Tue Mar 26 10:58:51 CST 2019]; root of context hierarchy
2019-03-26 10:59:10 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-26 10:59:10 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-26 10:59:10 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-26 10:59:10 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-26 10:59:10 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-26 10:59:13 -Registering beans for JMX exposure on startup
2019-03-26 10:59:13 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-26 10:59:13 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-26 10:59:13 -Starting beans in phase 2147483647
2019-03-26 10:59:13 -Context refreshed
2019-03-26 10:59:13 -Found 1 custom documentation plugin(s)
2019-03-26 10:59:13 -Scanning for api listing references
2019-03-26 10:59:13 -Generating unique operation named: removeUsingPOST_1
2019-03-26 10:59:13 -Generating unique operation named: addUsingGET_1
2019-03-26 10:59:13 -Generating unique operation named: editUsingGET_1
2019-03-26 10:59:13 -Generating unique operation named: listUsingGET_1
2019-03-26 10:59:14 -Generating unique operation named: removeUsingPOST_2
2019-03-26 10:59:14 -Generating unique operation named: removeUsingPOST_3
2019-03-26 10:59:14 -Generating unique operation named: saveUsingPOST_1
2019-03-26 10:59:14 -Generating unique operation named: updateUsingGET_1
2019-03-26 10:59:14 -Generating unique operation named: updateUsingHEAD_1
2019-03-26 10:59:14 -Generating unique operation named: updateUsingPOST_1
2019-03-26 10:59:14 -Generating unique operation named: updateUsingPUT_1
2019-03-26 10:59:14 -Generating unique operation named: updateUsingPATCH_1
2019-03-26 10:59:14 -Generating unique operation named: updateUsingDELETE_1
2019-03-26 10:59:14 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-26 10:59:14 -Generating unique operation named: updateUsingTRACE_1
2019-03-26 10:59:14 -Generating unique operation named: addUsingGET_2
2019-03-26 10:59:14 -Generating unique operation named: editUsingGET_2
2019-03-26 10:59:14 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-26 10:59:14 -Generating unique operation named: listUsingGET_2
2019-03-26 10:59:14 -Generating unique operation named: removeUsingPOST_4
2019-03-26 10:59:14 -Generating unique operation named: removeUsingPOST_5
2019-03-26 10:59:14 -Generating unique operation named: saveUsingPOST_2
2019-03-26 10:59:14 -Generating unique operation named: updateUsingPOST_2
2019-03-26 10:59:14 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-26 10:59:14 -Generating unique operation named: addUsingGET_3
2019-03-26 10:59:14 -Generating unique operation named: editUsingGET_3
2019-03-26 10:59:14 -Generating unique operation named: listUsingGET_3
2019-03-26 10:59:14 -Generating unique operation named: removeUsingPOST_6
2019-03-26 10:59:14 -Generating unique operation named: removeUsingPOST_7
2019-03-26 10:59:14 -Generating unique operation named: saveUsingPOST_3
2019-03-26 10:59:14 -Generating unique operation named: updateUsingGET_2
2019-03-26 10:59:14 -Generating unique operation named: updateUsingHEAD_2
2019-03-26 10:59:14 -Generating unique operation named: updateUsingPOST_3
2019-03-26 10:59:14 -Generating unique operation named: updateUsingPUT_2
2019-03-26 10:59:14 -Generating unique operation named: updateUsingPATCH_2
2019-03-26 10:59:14 -Generating unique operation named: updateUsingDELETE_2
2019-03-26 10:59:14 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-26 10:59:14 -Generating unique operation named: updateUsingTRACE_2
2019-03-26 10:59:14 -Generating unique operation named: addUsingGET_4
2019-03-26 10:59:14 -Generating unique operation named: editUsingGET_4
2019-03-26 10:59:14 -Generating unique operation named: listUsingGET_4
2019-03-26 10:59:14 -Generating unique operation named: removeUsingPOST_8
2019-03-26 10:59:14 -Generating unique operation named: removeUsingPOST_9
2019-03-26 10:59:14 -Generating unique operation named: saveUsingPOST_4
2019-03-26 10:59:14 -Generating unique operation named: updateUsingGET_3
2019-03-26 10:59:14 -Generating unique operation named: updateUsingHEAD_3
2019-03-26 10:59:14 -Generating unique operation named: updateUsingPOST_4
2019-03-26 10:59:14 -Generating unique operation named: updateUsingPUT_3
2019-03-26 10:59:14 -Generating unique operation named: updateUsingPATCH_3
2019-03-26 10:59:14 -Generating unique operation named: updateUsingDELETE_3
2019-03-26 10:59:14 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-26 10:59:14 -Generating unique operation named: updateUsingTRACE_3
2019-03-26 10:59:14 -Generating unique operation named: ElecUsingGET_1
2019-03-26 10:59:14 -Generating unique operation named: addUsingGET_5
2019-03-26 10:59:14 -Generating unique operation named: editUsingGET_5
2019-03-26 10:59:14 -Generating unique operation named: listUsingGET_5
2019-03-26 10:59:14 -Generating unique operation named: removeUsingPOST_10
2019-03-26 10:59:14 -Generating unique operation named: removeUsingPOST_11
2019-03-26 10:59:14 -Generating unique operation named: saveUsingPOST_5
2019-03-26 10:59:14 -Generating unique operation named: updateUsingGET_4
2019-03-26 10:59:14 -Generating unique operation named: updateUsingHEAD_4
2019-03-26 10:59:14 -Generating unique operation named: updateUsingPOST_5
2019-03-26 10:59:14 -Generating unique operation named: updateUsingPUT_4
2019-03-26 10:59:14 -Generating unique operation named: updateUsingPATCH_4
2019-03-26 10:59:14 -Generating unique operation named: updateUsingDELETE_4
2019-03-26 10:59:14 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-26 10:59:14 -Generating unique operation named: updateUsingTRACE_4
2019-03-26 10:59:14 -Generating unique operation named: editUsingGET_6
2019-03-26 10:59:14 -Generating unique operation named: listUsingGET_6
2019-03-26 10:59:14 -Generating unique operation named: updateUsingPOST_6
2019-03-26 10:59:14 -Generating unique operation named: addUsingGET_6
2019-03-26 10:59:14 -Generating unique operation named: editUsingGET_7
2019-03-26 10:59:14 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-26 10:59:14 -Generating unique operation named: listUsingGET_7
2019-03-26 10:59:14 -Generating unique operation named: removeUsingPOST_12
2019-03-26 10:59:14 -Generating unique operation named: removeUsingPOST_13
2019-03-26 10:59:14 -Generating unique operation named: saveUsingPOST_6
2019-03-26 10:59:14 -Generating unique operation named: updateUsingGET_5
2019-03-26 10:59:14 -Generating unique operation named: updateUsingHEAD_5
2019-03-26 10:59:14 -Generating unique operation named: updateUsingPOST_7
2019-03-26 10:59:14 -Generating unique operation named: updateUsingPUT_5
2019-03-26 10:59:14 -Generating unique operation named: updateUsingPATCH_5
2019-03-26 10:59:14 -Generating unique operation named: updateUsingDELETE_5
2019-03-26 10:59:14 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-26 10:59:14 -Generating unique operation named: updateUsingTRACE_5
2019-03-26 10:59:14 -Generating unique operation named: exprotExcelUsingGET_4
2019-03-26 10:59:14 -Generating unique operation named: addUsingGET_7
2019-03-26 10:59:14 -Generating unique operation named: editUsingGET_8
2019-03-26 10:59:14 -Generating unique operation named: listUsingGET_8
2019-03-26 10:59:14 -Generating unique operation named: removeUsingPOST_14
2019-03-26 10:59:14 -Generating unique operation named: removeUsingPOST_15
2019-03-26 10:59:14 -Generating unique operation named: saveUsingPOST_7
2019-03-26 10:59:14 -Generating unique operation named: updateUsingGET_6
2019-03-26 10:59:14 -Generating unique operation named: updateUsingHEAD_6
2019-03-26 10:59:14 -Generating unique operation named: updateUsingPOST_8
2019-03-26 10:59:14 -Generating unique operation named: updateUsingPUT_6
2019-03-26 10:59:14 -Generating unique operation named: updateUsingPATCH_6
2019-03-26 10:59:14 -Generating unique operation named: updateUsingDELETE_6
2019-03-26 10:59:14 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-26 10:59:14 -Generating unique operation named: updateUsingTRACE_6
2019-03-26 10:59:15 -Generating unique operation named: addUsingGET_8
2019-03-26 10:59:15 -Generating unique operation named: editUsingGET_9
2019-03-26 10:59:15 -Generating unique operation named: listUsingGET_9
2019-03-26 10:59:15 -Generating unique operation named: removeUsingPOST_16
2019-03-26 10:59:15 -Generating unique operation named: removeUsingPOST_17
2019-03-26 10:59:15 -Generating unique operation named: saveUsingPOST_8
2019-03-26 10:59:15 -Generating unique operation named: updateUsingGET_7
2019-03-26 10:59:15 -Generating unique operation named: updateUsingHEAD_7
2019-03-26 10:59:15 -Generating unique operation named: updateUsingPOST_9
2019-03-26 10:59:15 -Generating unique operation named: updateUsingPUT_7
2019-03-26 10:59:15 -Generating unique operation named: updateUsingPATCH_7
2019-03-26 10:59:15 -Generating unique operation named: updateUsingDELETE_7
2019-03-26 10:59:15 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-26 10:59:15 -Generating unique operation named: updateUsingTRACE_7
2019-03-26 10:59:15 -Generating unique operation named: addUsingGET_9
2019-03-26 10:59:15 -Generating unique operation named: editUsingGET_10
2019-03-26 10:59:15 -Generating unique operation named: infoUsingGET_1
2019-03-26 10:59:15 -Generating unique operation named: infoUsingHEAD_1
2019-03-26 10:59:15 -Generating unique operation named: infoUsingPOST_1
2019-03-26 10:59:15 -Generating unique operation named: infoUsingPUT_1
2019-03-26 10:59:15 -Generating unique operation named: infoUsingPATCH_1
2019-03-26 10:59:15 -Generating unique operation named: infoUsingDELETE_1
2019-03-26 10:59:15 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-26 10:59:15 -Generating unique operation named: infoUsingTRACE_1
2019-03-26 10:59:15 -Generating unique operation named: listUsingGET_10
2019-03-26 10:59:15 -Generating unique operation named: removeUsingPOST_18
2019-03-26 10:59:15 -Generating unique operation named: removeUsingPOST_19
2019-03-26 10:59:15 -Generating unique operation named: saveUsingPOST_9
2019-03-26 10:59:15 -Generating unique operation named: updateUsingPOST_10
2019-03-26 10:59:15 -Generating unique operation named: listUsingGET_11
2019-03-26 10:59:15 -Generating unique operation named: removeUsingPOST_20
2019-03-26 10:59:15 -Generating unique operation named: welcomeUsingGET_1
2019-03-26 10:59:15 -Generating unique operation named: addUsingGET_10
2019-03-26 10:59:15 -Generating unique operation named: editUsingGET_11
2019-03-26 10:59:15 -Generating unique operation named: listUsingGET_12
2019-03-26 10:59:15 -Generating unique operation named: removeUsingPOST_21
2019-03-26 10:59:15 -Generating unique operation named: saveUsingPOST_10
2019-03-26 10:59:15 -Generating unique operation named: treeUsingGET_1
2019-03-26 10:59:15 -Generating unique operation named: treeUsingGET_2
2019-03-26 10:59:15 -Generating unique operation named: updateUsingPOST_11
2019-03-26 10:59:15 -Generating unique operation named: addUsingGET_11
2019-03-26 10:59:15 -Generating unique operation named: editUsingGET_12
2019-03-26 10:59:15 -Generating unique operation named: listUsingGET_13
2019-03-26 10:59:15 -Generating unique operation named: removeUsingPOST_22
2019-03-26 10:59:15 -Generating unique operation named: removeUsingPOST_23
2019-03-26 10:59:15 -Generating unique operation named: saveUsingPOST_11
2019-03-26 10:59:15 -Generating unique operation named: updateUsingGET_8
2019-03-26 10:59:15 -Generating unique operation named: updateUsingHEAD_8
2019-03-26 10:59:15 -Generating unique operation named: updateUsingPOST_12
2019-03-26 10:59:15 -Generating unique operation named: updateUsingPUT_8
2019-03-26 10:59:15 -Generating unique operation named: updateUsingPATCH_8
2019-03-26 10:59:15 -Generating unique operation named: updateUsingDELETE_8
2019-03-26 10:59:15 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-26 10:59:15 -Generating unique operation named: updateUsingTRACE_8
2019-03-26 10:59:15 -Generating unique operation named: addUsingGET_12
2019-03-26 10:59:15 -Generating unique operation named: editUsingGET_13
2019-03-26 10:59:15 -Generating unique operation named: listUsingGET_14
2019-03-26 10:59:15 -Generating unique operation named: removeUsingPOST_24
2019-03-26 10:59:15 -Generating unique operation named: removeUsingPOST_25
2019-03-26 10:59:15 -Generating unique operation named: saveUsingPOST_12
2019-03-26 10:59:15 -Generating unique operation named: updateUsingGET_9
2019-03-26 10:59:15 -Generating unique operation named: updateUsingHEAD_9
2019-03-26 10:59:15 -Generating unique operation named: updateUsingPOST_13
2019-03-26 10:59:15 -Generating unique operation named: updateUsingPUT_9
2019-03-26 10:59:15 -Generating unique operation named: updateUsingPATCH_9
2019-03-26 10:59:15 -Generating unique operation named: updateUsingDELETE_9
2019-03-26 10:59:15 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-26 10:59:15 -Generating unique operation named: updateUsingTRACE_9
2019-03-26 10:59:15 -Generating unique operation named: addUsingGET_13
2019-03-26 10:59:15 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-26 10:59:15 -Generating unique operation named: editUsingGET_14
2019-03-26 10:59:15 -Generating unique operation named: listUsingGET_15
2019-03-26 10:59:15 -Generating unique operation named: saveUsingPOST_13
2019-03-26 10:59:15 -Generating unique operation named: saveUsingPOST_14
2019-03-26 10:59:15 -Generating unique operation named: updateUsingPOST_14
2019-03-26 10:59:15 -Generating unique operation named: listUsingGET_16
2019-03-26 10:59:15 -Generating unique operation named: listUsingHEAD_1
2019-03-26 10:59:15 -Generating unique operation named: listUsingPOST_1
2019-03-26 10:59:15 -Generating unique operation named: listUsingPUT_1
2019-03-26 10:59:15 -Generating unique operation named: listUsingPATCH_1
2019-03-26 10:59:15 -Generating unique operation named: listUsingDELETE_1
2019-03-26 10:59:15 -Generating unique operation named: listUsingOPTIONS_1
2019-03-26 10:59:15 -Generating unique operation named: listUsingTRACE_1
2019-03-26 10:59:16 -Generating unique operation named: addUsingGET_14
2019-03-26 10:59:16 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-26 10:59:16 -Generating unique operation named: editUsingGET_15
2019-03-26 10:59:16 -Generating unique operation named: listUsingGET_17
2019-03-26 10:59:16 -Generating unique operation named: removeUsingPOST_26
2019-03-26 10:59:16 -Generating unique operation named: saveUsingPOST_15
2019-03-26 10:59:16 -Generating unique operation named: treeUsingGET_3
2019-03-26 10:59:16 -Generating unique operation named: treeViewUsingGET_1
2019-03-26 10:59:16 -Generating unique operation named: updateUsingPOST_15
2019-03-26 10:59:16 -Generating unique operation named: addUsingGET_15
2019-03-26 10:59:16 -Generating unique operation named: editUsingGET_16
2019-03-26 10:59:16 -Generating unique operation named: exprotExcelUsingGET_5
2019-03-26 10:59:16 -Generating unique operation named: listUsingGET_18
2019-03-26 10:59:16 -Generating unique operation named: removeUsingPOST_27
2019-03-26 10:59:16 -Generating unique operation named: removeUsingPOST_28
2019-03-26 10:59:16 -Generating unique operation named: saveUsingPOST_16
2019-03-26 10:59:16 -Generating unique operation named: updateUsingGET_10
2019-03-26 10:59:16 -Generating unique operation named: updateUsingHEAD_10
2019-03-26 10:59:16 -Generating unique operation named: updateUsingPOST_16
2019-03-26 10:59:16 -Generating unique operation named: updateUsingPUT_10
2019-03-26 10:59:16 -Generating unique operation named: updateUsingPATCH_10
2019-03-26 10:59:16 -Generating unique operation named: updateUsingDELETE_10
2019-03-26 10:59:16 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-26 10:59:16 -Generating unique operation named: updateUsingTRACE_10
2019-03-26 10:59:16 -Generating unique operation named: exprotExcelUsingGET_6
2019-03-26 10:59:16 -Generating unique operation named: addUsingGET_16
2019-03-26 10:59:16 -Generating unique operation named: editUsingGET_17
2019-03-26 10:59:16 -Generating unique operation named: listUsingGET_19
2019-03-26 10:59:16 -Generating unique operation named: removeUsingPOST_29
2019-03-26 10:59:16 -Generating unique operation named: removeUsingPOST_30
2019-03-26 10:59:16 -Generating unique operation named: saveUsingPOST_17
2019-03-26 10:59:16 -Generating unique operation named: updateUsingGET_11
2019-03-26 10:59:16 -Generating unique operation named: updateUsingHEAD_11
2019-03-26 10:59:16 -Generating unique operation named: updateUsingPOST_17
2019-03-26 10:59:16 -Generating unique operation named: updateUsingPUT_11
2019-03-26 10:59:16 -Generating unique operation named: updateUsingPATCH_11
2019-03-26 10:59:16 -Generating unique operation named: updateUsingDELETE_11
2019-03-26 10:59:16 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-26 10:59:16 -Generating unique operation named: updateUsingTRACE_11
2019-03-26 10:59:16 -Generating unique operation named: addUsingGET_17
2019-03-26 10:59:16 -Generating unique operation named: editUsingGET_18
2019-03-26 10:59:16 -Generating unique operation named: listUsingGET_20
2019-03-26 10:59:16 -Generating unique operation named: removeUsingPOST_31
2019-03-26 10:59:16 -Generating unique operation named: removeUsingPOST_32
2019-03-26 10:59:16 -Generating unique operation named: saveUsingPOST_18
2019-03-26 10:59:16 -Generating unique operation named: updateUsingGET_12
2019-03-26 10:59:16 -Generating unique operation named: updateUsingHEAD_12
2019-03-26 10:59:16 -Generating unique operation named: updateUsingPOST_18
2019-03-26 10:59:16 -Generating unique operation named: updateUsingPUT_12
2019-03-26 10:59:16 -Generating unique operation named: updateUsingPATCH_12
2019-03-26 10:59:16 -Generating unique operation named: updateUsingDELETE_12
2019-03-26 10:59:16 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-26 10:59:16 -Generating unique operation named: updateUsingTRACE_12
2019-03-26 10:59:16 -Starting Quartz Scheduler now
2019-03-26 10:59:16 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-26 10:59:16 -Starting...
2019-03-26 10:59:16 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-26 10:59:16 -Started.
2019-03-26 10:59:16 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-26 10:59:16 -Failed to start connector [Connector[HTTP/1.1-8081]]
org.apache.catalina.LifecycleException: Failed to start component [Connector[HTTP/1.1-8081]]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:167)
	at org.apache.catalina.core.StandardService.addConnector(StandardService.java:225)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.addPreviouslyRemovedConnectors(TomcatWebServer.java:256)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:198)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.startWebServer(ServletWebServerApplicationContext.java:300)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.finishRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:553)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.bootdo.BootdoApplication.main(BootdoApplication.java:21)
Caused by: org.apache.catalina.LifecycleException: Protocol handler start failed
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1020)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
	... 13 common frames omitted
Caused by: java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Unknown Source)
	at sun.nio.ch.Net.bind(Unknown Source)
	at sun.nio.ch.ServerSocketChannelImpl.bind(Unknown Source)
	at sun.nio.ch.ServerSocketAdaptor.bind(Unknown Source)
	at org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:210)
	at org.apache.tomcat.util.net.AbstractEndpoint.start(AbstractEndpoint.java:1150)
	at org.apache.coyote.AbstractProtocol.start(AbstractProtocol.java:591)
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1018)
	... 14 common frames omitted
2019-03-26 10:59:16 -Pausing ProtocolHandler ["http-nio-8081"]
2019-03-26 10:59:16 -Stopping service [Tomcat]
2019-03-26 10:59:16 -The stop() method was called on component [StandardServer[-1]] after stop() had already been called. The second call will be ignored.
2019-03-26 10:59:16 -Stopping ProtocolHandler ["http-nio-8081"]
2019-03-26 10:59:16 -Destroying ProtocolHandler ["http-nio-8081"]
2019-03-26 10:59:16 -

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2019-03-26 10:59:16 -

***************************
APPLICATION FAILED TO START
***************************

Description:

The Tomcat connector configured to listen on port 8081 failed to start. The port may already be in use or the connector may be misconfigured.

Action:

Verify the connector's configuration, identify and stop any process that's listening on port 8081, or configure this application to listen on another port.

2019-03-26 10:59:16 -Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3f053c80: startup date [Tue Mar 26 10:58:51 CST 2019]; root of context hierarchy
2019-03-26 10:59:16 -Stopping beans in phase 2147483647
2019-03-26 10:59:16 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2019-03-26 10:59:16 -Stopping...
2019-03-26 10:59:16 -BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-26 10:59:16 -Stopped.
2019-03-26 10:59:16 -Unregistering JMX-exposed beans on shutdown
2019-03-26 10:59:16 -Unregistering JMX-exposed beans
2019-03-26 10:59:16 -Shutting down ExecutorService 'brokerChannelExecutor'
2019-03-26 10:59:16 -Shutting down ExecutorService 'messageBrokerTaskScheduler'
2019-03-26 10:59:16 -Shutting down ExecutorService 'clientOutboundChannelExecutor'
2019-03-26 10:59:16 -Shutting down ExecutorService 'clientInboundChannelExecutor'
2019-03-26 10:59:16 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutting down.
2019-03-26 10:59:16 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2019-03-26 10:59:16 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutdown complete.
2019-03-26 10:59:16 -Shutting down Quartz Scheduler
2019-03-26 11:03:15 -Starting BootdoApplication on ZJZL-20180906VX with PID 9132 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-26 11:03:15 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-26 11:03:15 -The following profiles are active: dev
2019-03-26 11:03:15 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@73163d48: startup date [Tue Mar 26 11:03:15 CST 2019]; root of context hierarchy
2019-03-26 11:03:19 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-26 11:03:21 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d8fa86f3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 11:03:21 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$cb53b59a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 11:03:22 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 11:03:22 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 11:03:22 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 11:03:22 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-26 11:03:22 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-26 11:03:22 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 11:03:23 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 11:03:23 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 11:03:23 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 11:03:24 -Tomcat initialized with port(s): 8081 (http)
2019-03-26 11:03:24 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-26 11:03:24 -Starting service [Tomcat]
2019-03-26 11:03:24 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-26 11:03:24 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-26 11:03:24 -Initializing Spring embedded WebApplicationContext
2019-03-26 11:03:24 -Root WebApplicationContext: initialization completed in 9268 ms
2019-03-26 11:03:25 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-26 11:03:25 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-26 11:03:25 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-26 11:03:25 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-26 11:03:25 -Filter xssFilter was not registered (disabled)
2019-03-26 11:03:25 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-26 11:03:25 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-26 11:03:25 -Servlet statViewServlet mapped to [/druid/*]
2019-03-26 11:03:25 -Servlet dispatcherServlet mapped to [/]
2019-03-26 11:03:28 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@73163d48: startup date [Tue Mar 26 11:03:15 CST 2019]; root of context hierarchy
2019-03-26 11:03:28 -Using default implementation for ThreadExecutor
2019-03-26 11:03:28 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-26 11:03:28 -Quartz Scheduler v.2.2.1 created.
2019-03-26 11:03:28 -RAMJobStore initialized.
2019-03-26 11:03:28 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-26 11:03:28 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-26 11:03:28 -Quartz scheduler version: 2.2.1
2019-03-26 11:03:28 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@11a67420
2019-03-26 11:03:29 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-26 11:03:29 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-26 11:03:32 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-26 11:03:32 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-03-26 11:03:32 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-26 11:03:32 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-26 11:03:32 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-26 11:03:32 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-26 11:03:32 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-26 11:03:32 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-26 11:03:32 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-26 11:03:32 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-26 11:03:32 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-26 11:03:32 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 11:03:32 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-26 11:03:32 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-26 11:03:32 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-26 11:03:32 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 11:03:32 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-26 11:03:32 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-26 11:03:32 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-26 11:03:32 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-26 11:03:32 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-26 11:03:32 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-26 11:03:32 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 11:03:32 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-26 11:03:32 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-26 11:03:32 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 11:03:32 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-26 11:03:32 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-26 11:03:32 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 11:03:32 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-26 11:03:32 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-26 11:03:32 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-26 11:03:32 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-26 11:03:32 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-26 11:03:32 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-26 11:03:32 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-26 11:03:32 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-26 11:03:32 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-26 11:03:32 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 11:03:32 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-26 11:03:32 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-26 11:03:32 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 11:03:32 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-26 11:03:32 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-26 11:03:32 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-26 11:03:32 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-26 11:03:32 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 11:03:32 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-26 11:03:32 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-03-26 11:03:32 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-26 11:03:32 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-26 11:03:32 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-26 11:03:32 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-26 11:03:32 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-26 11:03:32 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-26 11:03:32 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-26 11:03:32 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-26 11:03:32 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-26 11:03:32 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-26 11:03:32 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 11:03:32 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-26 11:03:32 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-03-26 11:03:32 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-26 11:03:32 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-26 11:03:32 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-26 11:03:32 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-26 11:03:32 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-26 11:03:32 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-26 11:03:32 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 11:03:32 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-03-26 11:03:32 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 11:03:32 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-26 11:03:32 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-26 11:03:32 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-26 11:03:32 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-26 11:03:32 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-26 11:03:32 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-26 11:03:32 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-26 11:03:32 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 11:03:32 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-26 11:03:32 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-26 11:03:32 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-26 11:03:32 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-26 11:03:32 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-26 11:03:32 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-26 11:03:32 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-26 11:03:32 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-26 11:03:32 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-26 11:03:32 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-26 11:03:32 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 11:03:32 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-26 11:03:32 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 11:03:32 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-26 11:03:32 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-03-26 11:03:32 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-26 11:03:32 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-26 11:03:32 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-03-26 11:03:32 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-26 11:03:32 -Mapped "{[/moneyList/moneyList/UserList],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-26 11:03:32 -Mapped "{[/moneyList/moneyList/LikeName],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.LikeName(org.springframework.ui.Model)
2019-03-26 11:03:32 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-26 11:03:32 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-26 11:03:32 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-26 11:03:32 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-26 11:03:32 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 11:03:32 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-26 11:03:32 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 11:03:32 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-26 11:03:32 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-26 11:03:32 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-26 11:03:32 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-26 11:03:32 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-26 11:03:32 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-26 11:03:32 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 11:03:32 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-26 11:03:32 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 11:03:32 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-26 11:03:32 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-26 11:03:32 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-26 11:03:32 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-26 11:03:32 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-26 11:03:32 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-26 11:03:32 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 11:03:32 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-26 11:03:32 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 11:03:32 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-26 11:03:32 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-26 11:03:32 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-26 11:03:32 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-26 11:03:32 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-26 11:03:32 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-26 11:03:32 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-26 11:03:32 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 11:03:32 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-26 11:03:32 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-26 11:03:32 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 11:03:32 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-26 11:03:32 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 11:03:32 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-26 11:03:32 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-26 11:03:32 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-26 11:03:32 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-26 11:03:32 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-26 11:03:32 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 11:03:32 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-26 11:03:32 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 11:03:32 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-26 11:03:32 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-26 11:03:32 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 11:03:32 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-26 11:03:32 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-26 11:03:32 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-26 11:03:32 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-26 11:03:32 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-26 11:03:32 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-26 11:03:32 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-26 11:03:32 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 11:03:32 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-26 11:03:32 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-26 11:03:32 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-26 11:03:32 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-26 11:03:32 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-26 11:03:32 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-26 11:03:32 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-26 11:03:32 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-26 11:03:32 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-26 11:03:32 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-26 11:03:32 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-26 11:03:32 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-26 11:03:32 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 11:03:32 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-26 11:03:32 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-26 11:03:32 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-26 11:03:32 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-26 11:03:32 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-26 11:03:32 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-26 11:03:32 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-26 11:03:32 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-26 11:03:32 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-26 11:03:32 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-26 11:03:32 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-26 11:03:32 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-26 11:03:32 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 11:03:32 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-26 11:03:32 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-26 11:03:32 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-26 11:03:32 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-26 11:03:32 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 11:03:32 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-26 11:03:32 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-26 11:03:32 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-26 11:03:32 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 11:03:32 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-26 11:03:32 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-26 11:03:32 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-26 11:03:32 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-26 11:03:32 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-26 11:03:32 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-26 11:03:32 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-26 11:03:32 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-26 11:03:32 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-26 11:03:32 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-26 11:03:32 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-26 11:03:32 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-26 11:03:32 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-26 11:03:32 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-26 11:03:32 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-26 11:03:32 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-26 11:03:32 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-26 11:03:32 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 11:03:32 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-26 11:03:32 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-26 11:03:32 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 11:03:32 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-26 11:03:32 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 11:03:32 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-26 11:03:32 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-26 11:03:32 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-26 11:03:32 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-26 11:03:32 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-26 11:03:32 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-26 11:03:32 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 11:03:32 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-26 11:03:32 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 11:03:32 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-26 11:03:32 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-26 11:03:32 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-03-26 11:03:32 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-26 11:03:32 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-03-26 11:03:32 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-26 11:03:32 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-26 11:03:32 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-26 11:03:32 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-26 11:03:33 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-26 11:03:33 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-26 11:03:33 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-26 11:03:33 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-26 11:03:34 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@73163d48: startup date [Tue Mar 26 11:03:15 CST 2019]; root of context hierarchy
2019-03-26 11:03:34 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-26 11:03:34 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-26 11:03:34 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-26 11:03:34 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-26 11:03:34 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-26 11:03:37 -Registering beans for JMX exposure on startup
2019-03-26 11:03:37 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-26 11:03:37 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-26 11:03:37 -Starting beans in phase 2147483647
2019-03-26 11:03:37 -Context refreshed
2019-03-26 11:03:37 -Found 1 custom documentation plugin(s)
2019-03-26 11:03:37 -Scanning for api listing references
2019-03-26 11:03:37 -Generating unique operation named: removeUsingPOST_1
2019-03-26 11:03:38 -Generating unique operation named: addUsingGET_1
2019-03-26 11:03:38 -Generating unique operation named: editUsingGET_1
2019-03-26 11:03:38 -Generating unique operation named: listUsingGET_1
2019-03-26 11:03:38 -Generating unique operation named: removeUsingPOST_2
2019-03-26 11:03:38 -Generating unique operation named: removeUsingPOST_3
2019-03-26 11:03:38 -Generating unique operation named: saveUsingPOST_1
2019-03-26 11:03:38 -Generating unique operation named: updateUsingGET_1
2019-03-26 11:03:38 -Generating unique operation named: updateUsingHEAD_1
2019-03-26 11:03:38 -Generating unique operation named: updateUsingPOST_1
2019-03-26 11:03:38 -Generating unique operation named: updateUsingPUT_1
2019-03-26 11:03:38 -Generating unique operation named: updateUsingPATCH_1
2019-03-26 11:03:38 -Generating unique operation named: updateUsingDELETE_1
2019-03-26 11:03:38 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-26 11:03:38 -Generating unique operation named: updateUsingTRACE_1
2019-03-26 11:03:38 -Generating unique operation named: addUsingGET_2
2019-03-26 11:03:38 -Generating unique operation named: editUsingGET_2
2019-03-26 11:03:38 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-26 11:03:38 -Generating unique operation named: listUsingGET_2
2019-03-26 11:03:38 -Generating unique operation named: removeUsingPOST_4
2019-03-26 11:03:38 -Generating unique operation named: removeUsingPOST_5
2019-03-26 11:03:38 -Generating unique operation named: saveUsingPOST_2
2019-03-26 11:03:38 -Generating unique operation named: updateUsingPOST_2
2019-03-26 11:03:38 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-26 11:03:38 -Generating unique operation named: addUsingGET_3
2019-03-26 11:03:38 -Generating unique operation named: editUsingGET_3
2019-03-26 11:03:38 -Generating unique operation named: listUsingGET_3
2019-03-26 11:03:38 -Generating unique operation named: removeUsingPOST_6
2019-03-26 11:03:38 -Generating unique operation named: removeUsingPOST_7
2019-03-26 11:03:38 -Generating unique operation named: saveUsingPOST_3
2019-03-26 11:03:38 -Generating unique operation named: updateUsingGET_2
2019-03-26 11:03:38 -Generating unique operation named: updateUsingHEAD_2
2019-03-26 11:03:38 -Generating unique operation named: updateUsingPOST_3
2019-03-26 11:03:38 -Generating unique operation named: updateUsingPUT_2
2019-03-26 11:03:38 -Generating unique operation named: updateUsingPATCH_2
2019-03-26 11:03:38 -Generating unique operation named: updateUsingDELETE_2
2019-03-26 11:03:38 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-26 11:03:38 -Generating unique operation named: updateUsingTRACE_2
2019-03-26 11:03:38 -Generating unique operation named: addUsingGET_4
2019-03-26 11:03:38 -Generating unique operation named: editUsingGET_4
2019-03-26 11:03:38 -Generating unique operation named: listUsingGET_4
2019-03-26 11:03:38 -Generating unique operation named: removeUsingPOST_8
2019-03-26 11:03:38 -Generating unique operation named: removeUsingPOST_9
2019-03-26 11:03:38 -Generating unique operation named: saveUsingPOST_4
2019-03-26 11:03:38 -Generating unique operation named: updateUsingGET_3
2019-03-26 11:03:38 -Generating unique operation named: updateUsingHEAD_3
2019-03-26 11:03:38 -Generating unique operation named: updateUsingPOST_4
2019-03-26 11:03:38 -Generating unique operation named: updateUsingPUT_3
2019-03-26 11:03:38 -Generating unique operation named: updateUsingPATCH_3
2019-03-26 11:03:38 -Generating unique operation named: updateUsingDELETE_3
2019-03-26 11:03:38 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-26 11:03:38 -Generating unique operation named: updateUsingTRACE_3
2019-03-26 11:03:38 -Generating unique operation named: ElecUsingGET_1
2019-03-26 11:03:39 -Generating unique operation named: addUsingGET_5
2019-03-26 11:03:39 -Generating unique operation named: editUsingGET_5
2019-03-26 11:03:39 -Generating unique operation named: listUsingGET_5
2019-03-26 11:03:39 -Generating unique operation named: removeUsingPOST_10
2019-03-26 11:03:39 -Generating unique operation named: removeUsingPOST_11
2019-03-26 11:03:39 -Generating unique operation named: saveUsingPOST_5
2019-03-26 11:03:39 -Generating unique operation named: updateUsingGET_4
2019-03-26 11:03:39 -Generating unique operation named: updateUsingHEAD_4
2019-03-26 11:03:39 -Generating unique operation named: updateUsingPOST_5
2019-03-26 11:03:39 -Generating unique operation named: updateUsingPUT_4
2019-03-26 11:03:39 -Generating unique operation named: updateUsingPATCH_4
2019-03-26 11:03:39 -Generating unique operation named: updateUsingDELETE_4
2019-03-26 11:03:39 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-26 11:03:39 -Generating unique operation named: updateUsingTRACE_4
2019-03-26 11:03:39 -Generating unique operation named: editUsingGET_6
2019-03-26 11:03:39 -Generating unique operation named: listUsingGET_6
2019-03-26 11:03:39 -Generating unique operation named: updateUsingPOST_6
2019-03-26 11:03:39 -Generating unique operation named: addUsingGET_6
2019-03-26 11:03:39 -Generating unique operation named: editUsingGET_7
2019-03-26 11:03:39 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-26 11:03:39 -Generating unique operation named: listUsingGET_7
2019-03-26 11:03:39 -Generating unique operation named: removeUsingPOST_12
2019-03-26 11:03:39 -Generating unique operation named: removeUsingPOST_13
2019-03-26 11:03:39 -Generating unique operation named: saveUsingPOST_6
2019-03-26 11:03:39 -Generating unique operation named: updateUsingGET_5
2019-03-26 11:03:39 -Generating unique operation named: updateUsingHEAD_5
2019-03-26 11:03:39 -Generating unique operation named: updateUsingPOST_7
2019-03-26 11:03:39 -Generating unique operation named: updateUsingPUT_5
2019-03-26 11:03:39 -Generating unique operation named: updateUsingPATCH_5
2019-03-26 11:03:39 -Generating unique operation named: updateUsingDELETE_5
2019-03-26 11:03:39 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-26 11:03:39 -Generating unique operation named: updateUsingTRACE_5
2019-03-26 11:03:39 -Generating unique operation named: exprotExcelUsingGET_4
2019-03-26 11:03:39 -Generating unique operation named: addUsingGET_7
2019-03-26 11:03:39 -Generating unique operation named: editUsingGET_8
2019-03-26 11:03:39 -Generating unique operation named: listUsingGET_8
2019-03-26 11:03:39 -Generating unique operation named: removeUsingPOST_14
2019-03-26 11:03:39 -Generating unique operation named: removeUsingPOST_15
2019-03-26 11:03:39 -Generating unique operation named: saveUsingPOST_7
2019-03-26 11:03:39 -Generating unique operation named: updateUsingGET_6
2019-03-26 11:03:39 -Generating unique operation named: updateUsingHEAD_6
2019-03-26 11:03:39 -Generating unique operation named: updateUsingPOST_8
2019-03-26 11:03:39 -Generating unique operation named: updateUsingPUT_6
2019-03-26 11:03:39 -Generating unique operation named: updateUsingPATCH_6
2019-03-26 11:03:39 -Generating unique operation named: updateUsingDELETE_6
2019-03-26 11:03:39 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-26 11:03:39 -Generating unique operation named: updateUsingTRACE_6
2019-03-26 11:03:39 -Generating unique operation named: addUsingGET_8
2019-03-26 11:03:39 -Generating unique operation named: editUsingGET_9
2019-03-26 11:03:39 -Generating unique operation named: listUsingGET_9
2019-03-26 11:03:39 -Generating unique operation named: removeUsingPOST_16
2019-03-26 11:03:39 -Generating unique operation named: removeUsingPOST_17
2019-03-26 11:03:40 -Generating unique operation named: saveUsingPOST_8
2019-03-26 11:03:40 -Generating unique operation named: updateUsingGET_7
2019-03-26 11:03:40 -Generating unique operation named: updateUsingHEAD_7
2019-03-26 11:03:40 -Generating unique operation named: updateUsingPOST_9
2019-03-26 11:03:40 -Generating unique operation named: updateUsingPUT_7
2019-03-26 11:03:40 -Generating unique operation named: updateUsingPATCH_7
2019-03-26 11:03:40 -Generating unique operation named: updateUsingDELETE_7
2019-03-26 11:03:40 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-26 11:03:40 -Generating unique operation named: updateUsingTRACE_7
2019-03-26 11:03:40 -Generating unique operation named: addUsingGET_9
2019-03-26 11:03:40 -Generating unique operation named: editUsingGET_10
2019-03-26 11:03:40 -Generating unique operation named: infoUsingGET_1
2019-03-26 11:03:40 -Generating unique operation named: infoUsingHEAD_1
2019-03-26 11:03:40 -Generating unique operation named: infoUsingPOST_1
2019-03-26 11:03:40 -Generating unique operation named: infoUsingPUT_1
2019-03-26 11:03:40 -Generating unique operation named: infoUsingPATCH_1
2019-03-26 11:03:40 -Generating unique operation named: infoUsingDELETE_1
2019-03-26 11:03:40 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-26 11:03:40 -Generating unique operation named: infoUsingTRACE_1
2019-03-26 11:03:40 -Generating unique operation named: listUsingGET_10
2019-03-26 11:03:40 -Generating unique operation named: removeUsingPOST_18
2019-03-26 11:03:40 -Generating unique operation named: removeUsingPOST_19
2019-03-26 11:03:40 -Generating unique operation named: saveUsingPOST_9
2019-03-26 11:03:40 -Generating unique operation named: updateUsingPOST_10
2019-03-26 11:03:40 -Generating unique operation named: listUsingGET_11
2019-03-26 11:03:40 -Generating unique operation named: removeUsingPOST_20
2019-03-26 11:03:40 -Generating unique operation named: welcomeUsingGET_1
2019-03-26 11:03:40 -Generating unique operation named: addUsingGET_10
2019-03-26 11:03:40 -Generating unique operation named: editUsingGET_11
2019-03-26 11:03:40 -Generating unique operation named: listUsingGET_12
2019-03-26 11:03:40 -Generating unique operation named: removeUsingPOST_21
2019-03-26 11:03:40 -Generating unique operation named: saveUsingPOST_10
2019-03-26 11:03:40 -Generating unique operation named: treeUsingGET_1
2019-03-26 11:03:40 -Generating unique operation named: treeUsingGET_2
2019-03-26 11:03:40 -Generating unique operation named: updateUsingPOST_11
2019-03-26 11:03:40 -Generating unique operation named: addUsingGET_11
2019-03-26 11:03:40 -Generating unique operation named: editUsingGET_12
2019-03-26 11:03:40 -Generating unique operation named: listUsingGET_13
2019-03-26 11:03:40 -Generating unique operation named: removeUsingPOST_22
2019-03-26 11:03:40 -Generating unique operation named: removeUsingPOST_23
2019-03-26 11:03:40 -Generating unique operation named: saveUsingPOST_11
2019-03-26 11:03:40 -Generating unique operation named: updateUsingGET_8
2019-03-26 11:03:40 -Generating unique operation named: updateUsingHEAD_8
2019-03-26 11:03:40 -Generating unique operation named: updateUsingPOST_12
2019-03-26 11:03:40 -Generating unique operation named: updateUsingPUT_8
2019-03-26 11:03:40 -Generating unique operation named: updateUsingPATCH_8
2019-03-26 11:03:40 -Generating unique operation named: updateUsingDELETE_8
2019-03-26 11:03:40 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-26 11:03:40 -Generating unique operation named: updateUsingTRACE_8
2019-03-26 11:03:40 -Generating unique operation named: addUsingGET_12
2019-03-26 11:03:40 -Generating unique operation named: editUsingGET_13
2019-03-26 11:03:40 -Generating unique operation named: listUsingGET_14
2019-03-26 11:03:40 -Generating unique operation named: removeUsingPOST_24
2019-03-26 11:03:40 -Generating unique operation named: removeUsingPOST_25
2019-03-26 11:03:40 -Generating unique operation named: saveUsingPOST_12
2019-03-26 11:03:40 -Generating unique operation named: updateUsingGET_9
2019-03-26 11:03:40 -Generating unique operation named: updateUsingHEAD_9
2019-03-26 11:03:40 -Generating unique operation named: updateUsingPOST_13
2019-03-26 11:03:40 -Generating unique operation named: updateUsingPUT_9
2019-03-26 11:03:40 -Generating unique operation named: updateUsingPATCH_9
2019-03-26 11:03:40 -Generating unique operation named: updateUsingDELETE_9
2019-03-26 11:03:40 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-26 11:03:40 -Generating unique operation named: updateUsingTRACE_9
2019-03-26 11:03:40 -Generating unique operation named: addUsingGET_13
2019-03-26 11:03:40 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-26 11:03:40 -Generating unique operation named: editUsingGET_14
2019-03-26 11:03:40 -Generating unique operation named: listUsingGET_15
2019-03-26 11:03:40 -Generating unique operation named: saveUsingPOST_13
2019-03-26 11:03:40 -Generating unique operation named: saveUsingPOST_14
2019-03-26 11:03:40 -Generating unique operation named: updateUsingPOST_14
2019-03-26 11:03:41 -Generating unique operation named: listUsingGET_16
2019-03-26 11:03:41 -Generating unique operation named: listUsingHEAD_1
2019-03-26 11:03:41 -Generating unique operation named: listUsingPOST_1
2019-03-26 11:03:41 -Generating unique operation named: listUsingPUT_1
2019-03-26 11:03:41 -Generating unique operation named: listUsingPATCH_1
2019-03-26 11:03:41 -Generating unique operation named: listUsingDELETE_1
2019-03-26 11:03:41 -Generating unique operation named: listUsingOPTIONS_1
2019-03-26 11:03:41 -Generating unique operation named: listUsingTRACE_1
2019-03-26 11:03:41 -Generating unique operation named: addUsingGET_14
2019-03-26 11:03:41 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-26 11:03:41 -Generating unique operation named: editUsingGET_15
2019-03-26 11:03:41 -Generating unique operation named: listUsingGET_17
2019-03-26 11:03:41 -Generating unique operation named: removeUsingPOST_26
2019-03-26 11:03:41 -Generating unique operation named: saveUsingPOST_15
2019-03-26 11:03:41 -Generating unique operation named: treeUsingGET_3
2019-03-26 11:03:41 -Generating unique operation named: treeViewUsingGET_1
2019-03-26 11:03:41 -Generating unique operation named: updateUsingPOST_15
2019-03-26 11:03:41 -Generating unique operation named: addUsingGET_15
2019-03-26 11:03:41 -Generating unique operation named: editUsingGET_16
2019-03-26 11:03:41 -Generating unique operation named: exprotExcelUsingGET_5
2019-03-26 11:03:41 -Generating unique operation named: listUsingGET_18
2019-03-26 11:03:41 -Generating unique operation named: removeUsingPOST_27
2019-03-26 11:03:41 -Generating unique operation named: removeUsingPOST_28
2019-03-26 11:03:41 -Generating unique operation named: saveUsingPOST_16
2019-03-26 11:03:41 -Generating unique operation named: updateUsingGET_10
2019-03-26 11:03:41 -Generating unique operation named: updateUsingHEAD_10
2019-03-26 11:03:41 -Generating unique operation named: updateUsingPOST_16
2019-03-26 11:03:41 -Generating unique operation named: updateUsingPUT_10
2019-03-26 11:03:41 -Generating unique operation named: updateUsingPATCH_10
2019-03-26 11:03:41 -Generating unique operation named: updateUsingDELETE_10
2019-03-26 11:03:41 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-26 11:03:41 -Generating unique operation named: updateUsingTRACE_10
2019-03-26 11:03:41 -Generating unique operation named: exprotExcelUsingGET_6
2019-03-26 11:03:41 -Generating unique operation named: addUsingGET_16
2019-03-26 11:03:41 -Generating unique operation named: editUsingGET_17
2019-03-26 11:03:41 -Generating unique operation named: listUsingGET_19
2019-03-26 11:03:41 -Generating unique operation named: removeUsingPOST_29
2019-03-26 11:03:41 -Generating unique operation named: removeUsingPOST_30
2019-03-26 11:03:41 -Generating unique operation named: saveUsingPOST_17
2019-03-26 11:03:41 -Generating unique operation named: updateUsingGET_11
2019-03-26 11:03:41 -Generating unique operation named: updateUsingHEAD_11
2019-03-26 11:03:41 -Generating unique operation named: updateUsingPOST_17
2019-03-26 11:03:41 -Generating unique operation named: updateUsingPUT_11
2019-03-26 11:03:41 -Generating unique operation named: updateUsingPATCH_11
2019-03-26 11:03:41 -Generating unique operation named: updateUsingDELETE_11
2019-03-26 11:03:41 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-26 11:03:41 -Generating unique operation named: updateUsingTRACE_11
2019-03-26 11:03:41 -Generating unique operation named: addUsingGET_17
2019-03-26 11:03:41 -Generating unique operation named: editUsingGET_18
2019-03-26 11:03:41 -Generating unique operation named: listUsingGET_20
2019-03-26 11:03:41 -Generating unique operation named: removeUsingPOST_31
2019-03-26 11:03:41 -Generating unique operation named: removeUsingPOST_32
2019-03-26 11:03:41 -Generating unique operation named: saveUsingPOST_18
2019-03-26 11:03:41 -Generating unique operation named: updateUsingGET_12
2019-03-26 11:03:41 -Generating unique operation named: updateUsingHEAD_12
2019-03-26 11:03:41 -Generating unique operation named: updateUsingPOST_18
2019-03-26 11:03:41 -Generating unique operation named: updateUsingPUT_12
2019-03-26 11:03:41 -Generating unique operation named: updateUsingPATCH_12
2019-03-26 11:03:41 -Generating unique operation named: updateUsingDELETE_12
2019-03-26 11:03:41 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-26 11:03:41 -Generating unique operation named: updateUsingTRACE_12
2019-03-26 11:03:41 -Starting Quartz Scheduler now
2019-03-26 11:03:41 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-26 11:03:41 -Starting...
2019-03-26 11:03:41 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-26 11:03:41 -Started.
2019-03-26 11:03:41 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-26 11:03:41 -Using a shared selector for servlet write/read
2019-03-26 11:03:42 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-26 11:03:42 -Started BootdoApplication in 29.019 seconds (JVM running for 31.211)
2019-03-26 11:03:42 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-26 11:03:43 -==> Parameters: 
2019-03-26 11:03:43 -<==      Total: 1
2019-03-26 11:04:18 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-26 11:04:18 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-26 11:04:18 -FrameworkServlet 'dispatcherServlet': initialization completed in 131 ms
2019-03-26 11:04:18 -Enabling session validation scheduler...
2019-03-26 11:04:18 -请求地址 : http://localhost:8081/login;JSESSIONID=6e58d013-b51e-4391-8c86-ec35e80696b9
2019-03-26 11:04:18 -HTTP METHOD : GET
2019-03-26 11:04:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-26 11:04:18 -参数 : [{}]
2019-03-26 11:04:18 -耗时 : 5
2019-03-26 11:04:18 -返回值 : login
2019-03-26 11:04:20 -请求地址 : http://localhost:8081/getVerify
2019-03-26 11:04:20 -HTTP METHOD : GET
2019-03-26 11:04:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-26 11:04:20 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@64d09730, org.apache.shiro.web.servlet.ShiroHttpServletResponse@60ef0f72]
2019-03-26 11:04:25 -7570
2019-03-26 11:04:25 -耗时 : 4878
2019-03-26 11:04:25 -返回值 : null
2019-03-26 11:04:25 -请求地址 : http://localhost:8081/login
2019-03-26 11:04:25 -HTTP METHOD : GET
2019-03-26 11:04:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-26 11:04:25 -参数 : [{}]
2019-03-26 11:04:25 -耗时 : 1
2019-03-26 11:04:25 -返回值 : login
2019-03-26 11:04:33 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-03-26 11:04:45 -请求地址 : http://localhost:8081/login
2019-03-26 11:04:45 -HTTP METHOD : POST
2019-03-26 11:04:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-26 11:04:45 -参数 : [admin, 111111, 7570, org.apache.shiro.web.servlet.ShiroHttpServletRequest@2e66240b]
2019-03-26 11:04:45 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-26 11:04:45 -==> Parameters: admin(String)
2019-03-26 11:04:45 -<==      Total: 1
2019-03-26 11:04:45 -耗时 : 92
2019-03-26 11:04:45 -返回值 : {msg=操作成功, code=0}
2019-03-26 11:04:46 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-03-26 11:04:46 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-26 11:04:46 -==> Parameters: 1(Long), admin(String), 登录(String), 93(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-26 11:04:46.043(Timestamp)
2019-03-26 11:04:46 -<==    Updates: 1
2019-03-26 11:04:46 -请求地址 : http://localhost:8081/index
2019-03-26 11:04:46 -HTTP METHOD : GET
2019-03-26 11:04:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-26 11:04:46 -参数 : [{}]
2019-03-26 11:04:46 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-26 11:04:46 -==> Parameters: 1(Long)
2019-03-26 11:04:46 -<==      Total: 46
2019-03-26 11:04:46 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-26 11:04:46 -==> Parameters: 138(Long)
2019-03-26 11:04:46 -<==      Total: 1
2019-03-26 11:04:46 -耗时 : 239
2019-03-26 11:04:46 -返回值 : index_v1
2019-03-26 11:04:46 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-26 11:04:46 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 239(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-26 11:04:46.461(Timestamp)
2019-03-26 11:04:46 -<==    Updates: 1
2019-03-26 11:04:46 -请求地址 : http://localhost:8081/main
2019-03-26 11:04:46 -HTTP METHOD : GET
2019-03-26 11:04:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-26 11:04:46 -参数 : []
2019-03-26 11:04:46 -耗时 : 1
2019-03-26 11:04:46 -返回值 : main
2019-03-26 11:04:47 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-26 11:04:47 -HTTP METHOD : GET
2019-03-26 11:04:47 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-26 11:04:47 -参数 : []
2019-03-26 11:04:47 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-26 11:04:47 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-26 11:04:47 -<==      Total: 0
2019-03-26 11:04:47 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-26 11:04:47 -==> Parameters: 1(Long), 0(String)
2019-03-26 11:04:47 -<==      Total: 1
2019-03-26 11:04:47 -耗时 : 40
2019-03-26 11:04:47 -返回值 : com.bootdo.common.utils.PageUtils@4e302c92
2019-03-26 11:04:47 -请求地址 : http://localhost:8081/main
2019-03-26 11:04:47 -HTTP METHOD : GET
2019-03-26 11:04:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-26 11:04:47 -参数 : []
2019-03-26 11:04:47 -耗时 : 0
2019-03-26 11:04:47 -返回值 : main
2019-03-26 11:04:56 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-26 11:04:56 -==> Parameters: 1(Long)
2019-03-26 11:04:56 -<==      Total: 90
2019-03-26 11:04:56 -请求地址 : http://localhost:8081/print/print
2019-03-26 11:04:56 -HTTP METHOD : GET
2019-03-26 11:04:56 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-03-26 11:04:56 -参数 : []
2019-03-26 11:04:56 -耗时 : 1
2019-03-26 11:04:56 -返回值 : print/print/print
2019-03-26 11:04:58 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-26 11:04:58 -HTTP METHOD : GET
2019-03-26 11:04:58 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-26 11:04:58 -参数 : [userType]
2019-03-26 11:04:58 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-26 11:04:58 -==> Parameters: userType(String)
2019-03-26 11:04:58 -<==      Total: 2
2019-03-26 11:04:58 -耗时 : 33
2019-03-26 11:04:58 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-26 11:04:58 -请求地址 : http://localhost:8081/print/print/list
2019-03-26 11:04:58 -HTTP METHOD : GET
2019-03-26 11:04:58 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-26 11:04:58 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-26 11:04:58 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-03-26 11:04:58 -==> Parameters: 0(Integer), 10(Integer)
2019-03-26 11:04:58 -Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]
2019-03-26 11:04:58 -SQLErrorCodes loaded: [DB2, Derby, H2, HDB, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase]
2019-03-26 11:04:58 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-26 11:04:58 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/print/print/list(String), org.springframework.dao.TransientDataAccessResourceException: Error attempting to get column 'create_time' from result set.  Cause: java.sql.SQLException: Bad format for Timestamp '2019-02' in column 27.
; ]; Bad format for Timestamp '2019-02' in column 27.; nested exception is java.sql.SQLException: Bad format for Timestamp '2019-02' in column 27.(String), null, 2019-03-26 11:04:58.486(Timestamp)
2019-03-26 11:04:58 -Error attempting to get column 'create_time' from result set.  Cause: java.sql.SQLException: Bad format for Timestamp '2019-02' in column 27.
; ]; Bad format for Timestamp '2019-02' in column 27.; nested exception is java.sql.SQLException: Bad format for Timestamp '2019-02' in column 27.
org.springframework.dao.TransientDataAccessResourceException: Error attempting to get column 'create_time' from result set.  Cause: java.sql.SQLException: Bad format for Timestamp '2019-02' in column 27.
; ]; Bad format for Timestamp '2019-02' in column 27.; nested exception is java.sql.SQLException: Bad format for Timestamp '2019-02' in column 27.
	at org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:110)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy131.list(Unknown Source)
	at com.bootdo.print.service.impl.PrintServiceImpl.list(PrintServiceImpl.java:29)
	at com.bootdo.print.controller.PrintController.list(PrintController.java:70)
	at com.bootdo.print.controller.PrintController$$FastClassBySpringCGLIB$$83188fc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.print.controller.PrintController$$EnhancerBySpringCGLIB$$5cfe7f5e.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.sql.SQLException: Bad format for Timestamp '2019-02' in column 27.
	at com.mysql.jdbc.ResultSetRow.getTimestampFast(ResultSetRow.java:1157)
	at com.mysql.jdbc.ByteArrayRow.getTimestampFast(ByteArrayRow.java:130)
	at com.mysql.jdbc.ResultSetImpl.getTimestampInternal(ResultSetImpl.java:5921)
	at com.mysql.jdbc.ResultSetImpl.getTimestamp(ResultSetImpl.java:5591)
	at com.mysql.jdbc.ResultSetImpl.getTimestamp(ResultSetImpl.java:5620)
	at com.alibaba.druid.filter.FilterChainImpl.resultSet_getTimestamp(FilterChainImpl.java:909)
	at com.alibaba.druid.filter.FilterAdapter.resultSet_getTimestamp(FilterAdapter.java:1796)
	at com.alibaba.druid.filter.FilterChainImpl.resultSet_getTimestamp(FilterChainImpl.java:907)
	at com.alibaba.druid.filter.FilterAdapter.resultSet_getTimestamp(FilterAdapter.java:1796)
	at com.alibaba.druid.filter.FilterChainImpl.resultSet_getTimestamp(FilterChainImpl.java:907)
	at com.alibaba.druid.filter.FilterAdapter.resultSet_getTimestamp(FilterAdapter.java:1796)
	at com.alibaba.druid.filter.FilterChainImpl.resultSet_getTimestamp(FilterChainImpl.java:907)
	at com.alibaba.druid.proxy.jdbc.ResultSetProxyImpl.getTimestamp(ResultSetProxyImpl.java:741)
	at com.alibaba.druid.pool.DruidPooledResultSet.getTimestamp(DruidPooledResultSet.java:366)
	at sun.reflect.GeneratedMethodAccessor111.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.ResultSetLogger.invoke(ResultSetLogger.java:68)
	at com.sun.proxy.$Proxy173.getTimestamp(Unknown Source)
	at org.apache.ibatis.type.DateTypeHandler.getNullableResult(DateTypeHandler.java:39)
	at org.apache.ibatis.type.DateTypeHandler.getNullableResult(DateTypeHandler.java:28)
	at org.apache.ibatis.type.BaseTypeHandler.getResult(BaseTypeHandler.java:66)
	at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.applyAutomaticMappings(DefaultResultSetHandler.java:512)
	at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getRowValue(DefaultResultSetHandler.java:393)
	at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.handleRowValuesForSimpleResultMap(DefaultResultSetHandler.java:347)
	at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.handleRowValues(DefaultResultSetHandler.java:322)
	at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.handleResultSet(DefaultResultSetHandler.java:295)
	at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.handleResultSets(DefaultResultSetHandler.java:192)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 105 common frames omitted
2019-03-26 11:04:58 -<==    Updates: 1
2019-03-26 11:07:51 -Starting BootdoApplication on ZJZL-20180906VX with PID 1676 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-26 11:07:51 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-26 11:07:51 -The following profiles are active: dev
2019-03-26 11:07:51 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@51850751: startup date [Tue Mar 26 11:07:51 CST 2019]; root of context hierarchy
2019-03-26 11:07:56 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-26 11:08:00 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d9cbffd6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 11:08:00 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$cc252e7d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 11:08:01 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 11:08:02 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 11:08:02 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 11:08:02 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-26 11:08:02 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-26 11:08:02 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 11:08:02 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 11:08:02 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 11:08:02 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 11:08:04 -Tomcat initialized with port(s): 8081 (http)
2019-03-26 11:08:04 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-26 11:08:04 -Starting service [Tomcat]
2019-03-26 11:08:04 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-26 11:08:04 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-26 11:08:04 -Initializing Spring embedded WebApplicationContext
2019-03-26 11:08:04 -Root WebApplicationContext: initialization completed in 12872 ms
2019-03-26 11:08:05 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-26 11:08:05 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-26 11:08:05 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-26 11:08:05 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-26 11:08:05 -Filter xssFilter was not registered (disabled)
2019-03-26 11:08:05 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-26 11:08:05 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-26 11:08:05 -Servlet statViewServlet mapped to [/druid/*]
2019-03-26 11:08:05 -Servlet dispatcherServlet mapped to [/]
2019-03-26 11:08:09 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@51850751: startup date [Tue Mar 26 11:07:51 CST 2019]; root of context hierarchy
2019-03-26 11:08:10 -Using default implementation for ThreadExecutor
2019-03-26 11:08:10 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-26 11:08:10 -Quartz Scheduler v.2.2.1 created.
2019-03-26 11:08:10 -RAMJobStore initialized.
2019-03-26 11:08:10 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-26 11:08:10 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-26 11:08:10 -Quartz scheduler version: 2.2.1
2019-03-26 11:08:10 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@43719e98
2019-03-26 11:08:11 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-26 11:08:11 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-26 11:08:15 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-03-26 11:08:15 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-26 11:08:15 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-26 11:08:15 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-26 11:08:15 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-26 11:08:15 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-26 11:08:15 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-26 11:08:15 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-26 11:08:15 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-26 11:08:15 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-26 11:08:15 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-26 11:08:15 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 11:08:15 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-26 11:08:15 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-26 11:08:15 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-26 11:08:15 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-26 11:08:15 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-26 11:08:15 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 11:08:15 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-26 11:08:15 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-26 11:08:15 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-26 11:08:15 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-26 11:08:15 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 11:08:15 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-26 11:08:15 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-26 11:08:15 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 11:08:15 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-26 11:08:15 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-26 11:08:15 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 11:08:15 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-26 11:08:15 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-26 11:08:15 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-26 11:08:15 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-26 11:08:15 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-26 11:08:15 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-26 11:08:15 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-26 11:08:15 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-26 11:08:15 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-26 11:08:15 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 11:08:15 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-26 11:08:15 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-26 11:08:15 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 11:08:15 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-26 11:08:15 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-26 11:08:15 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-26 11:08:15 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-26 11:08:15 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 11:08:15 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-26 11:08:15 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-03-26 11:08:15 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-26 11:08:15 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-26 11:08:15 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-26 11:08:15 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-26 11:08:15 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-26 11:08:15 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-26 11:08:15 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-26 11:08:15 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-26 11:08:15 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-26 11:08:15 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-26 11:08:15 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 11:08:15 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-26 11:08:15 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-03-26 11:08:15 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-26 11:08:15 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-26 11:08:15 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-26 11:08:15 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-26 11:08:15 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-26 11:08:15 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-26 11:08:15 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 11:08:15 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-03-26 11:08:15 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 11:08:15 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-26 11:08:15 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-26 11:08:15 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-26 11:08:15 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-26 11:08:15 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-26 11:08:15 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-26 11:08:15 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-26 11:08:15 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 11:08:15 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-26 11:08:15 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-26 11:08:15 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-26 11:08:15 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-26 11:08:15 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-26 11:08:15 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-26 11:08:15 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-26 11:08:15 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-26 11:08:15 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-26 11:08:15 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-26 11:08:15 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 11:08:15 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-26 11:08:15 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 11:08:15 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-26 11:08:15 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-03-26 11:08:15 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-26 11:08:15 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-03-26 11:08:15 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-26 11:08:15 -Mapped "{[/moneyList/moneyList/LikeName],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.LikeName(org.springframework.ui.Model)
2019-03-26 11:08:15 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-26 11:08:15 -Mapped "{[/moneyList/moneyList/UserList],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-26 11:08:15 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-26 11:08:15 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-26 11:08:15 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-26 11:08:15 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-26 11:08:15 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 11:08:15 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-26 11:08:15 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 11:08:15 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-26 11:08:15 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-26 11:08:15 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-26 11:08:15 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-26 11:08:15 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-26 11:08:15 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-26 11:08:15 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 11:08:15 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-26 11:08:15 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 11:08:15 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-26 11:08:15 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-26 11:08:15 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-26 11:08:15 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-26 11:08:15 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-26 11:08:15 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-26 11:08:15 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 11:08:15 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-26 11:08:15 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 11:08:15 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-26 11:08:15 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-26 11:08:15 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-26 11:08:15 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-26 11:08:15 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-26 11:08:15 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-26 11:08:15 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-26 11:08:15 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 11:08:15 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-26 11:08:15 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-26 11:08:15 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 11:08:15 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-26 11:08:15 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-26 11:08:15 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 11:08:15 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-26 11:08:15 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-26 11:08:15 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-26 11:08:15 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-26 11:08:15 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 11:08:15 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-26 11:08:15 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 11:08:15 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 11:08:15 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-26 11:08:15 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-26 11:08:15 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-26 11:08:15 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-26 11:08:15 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-26 11:08:15 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-26 11:08:15 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-26 11:08:15 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-26 11:08:15 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-26 11:08:15 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 11:08:15 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-26 11:08:15 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-26 11:08:15 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-26 11:08:15 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-26 11:08:15 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-26 11:08:15 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-26 11:08:15 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-26 11:08:15 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-26 11:08:15 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-26 11:08:15 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-26 11:08:15 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-26 11:08:15 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-26 11:08:15 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 11:08:15 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-26 11:08:15 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-26 11:08:15 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-26 11:08:15 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-26 11:08:15 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-26 11:08:15 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-26 11:08:15 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-26 11:08:15 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-26 11:08:15 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-26 11:08:15 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-26 11:08:15 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-26 11:08:15 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-26 11:08:15 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 11:08:15 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-26 11:08:15 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-26 11:08:15 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-26 11:08:15 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-26 11:08:15 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 11:08:15 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-26 11:08:15 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-26 11:08:15 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-26 11:08:15 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 11:08:15 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-26 11:08:15 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-26 11:08:15 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-26 11:08:15 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-26 11:08:15 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-26 11:08:15 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-26 11:08:15 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-26 11:08:15 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-26 11:08:15 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-26 11:08:15 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-26 11:08:15 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-26 11:08:15 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-26 11:08:15 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-26 11:08:15 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-26 11:08:15 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-26 11:08:15 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-26 11:08:15 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-26 11:08:15 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 11:08:15 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-26 11:08:15 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 11:08:15 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-26 11:08:15 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-26 11:08:15 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 11:08:15 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-26 11:08:15 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-26 11:08:15 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-26 11:08:15 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-26 11:08:15 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-26 11:08:15 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-26 11:08:15 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 11:08:15 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-26 11:08:15 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-26 11:08:15 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 11:08:15 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-26 11:08:15 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-03-26 11:08:15 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-26 11:08:15 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-03-26 11:08:15 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-26 11:08:15 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-26 11:08:15 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-26 11:08:15 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-26 11:08:16 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-26 11:08:16 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-26 11:08:16 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-26 11:08:17 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-26 11:08:17 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@51850751: startup date [Tue Mar 26 11:07:51 CST 2019]; root of context hierarchy
2019-03-26 11:08:18 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-26 11:08:18 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-26 11:08:18 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-26 11:08:18 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-26 11:08:18 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-26 11:08:21 -Registering beans for JMX exposure on startup
2019-03-26 11:08:21 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-26 11:08:21 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-26 11:08:21 -Starting beans in phase 2147483647
2019-03-26 11:08:21 -Context refreshed
2019-03-26 11:08:21 -Found 1 custom documentation plugin(s)
2019-03-26 11:08:21 -Scanning for api listing references
2019-03-26 11:08:22 -Generating unique operation named: removeUsingPOST_1
2019-03-26 11:08:22 -Generating unique operation named: addUsingGET_1
2019-03-26 11:08:22 -Generating unique operation named: editUsingGET_1
2019-03-26 11:08:22 -Generating unique operation named: listUsingGET_1
2019-03-26 11:08:22 -Generating unique operation named: removeUsingPOST_2
2019-03-26 11:08:22 -Generating unique operation named: removeUsingPOST_3
2019-03-26 11:08:22 -Generating unique operation named: saveUsingPOST_1
2019-03-26 11:08:22 -Generating unique operation named: updateUsingGET_1
2019-03-26 11:08:22 -Generating unique operation named: updateUsingHEAD_1
2019-03-26 11:08:22 -Generating unique operation named: updateUsingPOST_1
2019-03-26 11:08:22 -Generating unique operation named: updateUsingPUT_1
2019-03-26 11:08:22 -Generating unique operation named: updateUsingPATCH_1
2019-03-26 11:08:22 -Generating unique operation named: updateUsingDELETE_1
2019-03-26 11:08:22 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-26 11:08:22 -Generating unique operation named: updateUsingTRACE_1
2019-03-26 11:08:22 -Generating unique operation named: addUsingGET_2
2019-03-26 11:08:23 -Generating unique operation named: editUsingGET_2
2019-03-26 11:08:23 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-26 11:08:23 -Generating unique operation named: listUsingGET_2
2019-03-26 11:08:23 -Generating unique operation named: removeUsingPOST_4
2019-03-26 11:08:23 -Generating unique operation named: removeUsingPOST_5
2019-03-26 11:08:23 -Generating unique operation named: saveUsingPOST_2
2019-03-26 11:08:23 -Generating unique operation named: updateUsingPOST_2
2019-03-26 11:08:23 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-26 11:08:23 -Generating unique operation named: addUsingGET_3
2019-03-26 11:08:23 -Generating unique operation named: editUsingGET_3
2019-03-26 11:08:23 -Generating unique operation named: listUsingGET_3
2019-03-26 11:08:23 -Generating unique operation named: removeUsingPOST_6
2019-03-26 11:08:23 -Generating unique operation named: removeUsingPOST_7
2019-03-26 11:08:23 -Generating unique operation named: saveUsingPOST_3
2019-03-26 11:08:23 -Generating unique operation named: updateUsingGET_2
2019-03-26 11:08:23 -Generating unique operation named: updateUsingHEAD_2
2019-03-26 11:08:23 -Generating unique operation named: updateUsingPOST_3
2019-03-26 11:08:23 -Generating unique operation named: updateUsingPUT_2
2019-03-26 11:08:23 -Generating unique operation named: updateUsingPATCH_2
2019-03-26 11:08:23 -Generating unique operation named: updateUsingDELETE_2
2019-03-26 11:08:23 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-26 11:08:23 -Generating unique operation named: updateUsingTRACE_2
2019-03-26 11:08:23 -Generating unique operation named: addUsingGET_4
2019-03-26 11:08:23 -Generating unique operation named: editUsingGET_4
2019-03-26 11:08:23 -Generating unique operation named: listUsingGET_4
2019-03-26 11:08:23 -Generating unique operation named: removeUsingPOST_8
2019-03-26 11:08:23 -Generating unique operation named: removeUsingPOST_9
2019-03-26 11:08:23 -Generating unique operation named: saveUsingPOST_4
2019-03-26 11:08:23 -Generating unique operation named: updateUsingGET_3
2019-03-26 11:08:23 -Generating unique operation named: updateUsingHEAD_3
2019-03-26 11:08:23 -Generating unique operation named: updateUsingPOST_4
2019-03-26 11:08:23 -Generating unique operation named: updateUsingPUT_3
2019-03-26 11:08:23 -Generating unique operation named: updateUsingPATCH_3
2019-03-26 11:08:23 -Generating unique operation named: updateUsingDELETE_3
2019-03-26 11:08:23 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-26 11:08:23 -Generating unique operation named: updateUsingTRACE_3
2019-03-26 11:08:23 -Generating unique operation named: ElecUsingGET_1
2019-03-26 11:08:23 -Generating unique operation named: addUsingGET_5
2019-03-26 11:08:23 -Generating unique operation named: editUsingGET_5
2019-03-26 11:08:23 -Generating unique operation named: listUsingGET_5
2019-03-26 11:08:23 -Generating unique operation named: removeUsingPOST_10
2019-03-26 11:08:23 -Generating unique operation named: removeUsingPOST_11
2019-03-26 11:08:23 -Generating unique operation named: saveUsingPOST_5
2019-03-26 11:08:23 -Generating unique operation named: updateUsingGET_4
2019-03-26 11:08:23 -Generating unique operation named: updateUsingHEAD_4
2019-03-26 11:08:23 -Generating unique operation named: updateUsingPOST_5
2019-03-26 11:08:23 -Generating unique operation named: updateUsingPUT_4
2019-03-26 11:08:23 -Generating unique operation named: updateUsingPATCH_4
2019-03-26 11:08:23 -Generating unique operation named: updateUsingDELETE_4
2019-03-26 11:08:23 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-26 11:08:23 -Generating unique operation named: updateUsingTRACE_4
2019-03-26 11:08:23 -Generating unique operation named: editUsingGET_6
2019-03-26 11:08:23 -Generating unique operation named: listUsingGET_6
2019-03-26 11:08:23 -Generating unique operation named: updateUsingPOST_6
2019-03-26 11:08:23 -Generating unique operation named: addUsingGET_6
2019-03-26 11:08:23 -Generating unique operation named: editUsingGET_7
2019-03-26 11:08:23 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-26 11:08:23 -Generating unique operation named: listUsingGET_7
2019-03-26 11:08:23 -Generating unique operation named: removeUsingPOST_12
2019-03-26 11:08:23 -Generating unique operation named: removeUsingPOST_13
2019-03-26 11:08:23 -Generating unique operation named: saveUsingPOST_6
2019-03-26 11:08:23 -Generating unique operation named: updateUsingGET_5
2019-03-26 11:08:23 -Generating unique operation named: updateUsingHEAD_5
2019-03-26 11:08:23 -Generating unique operation named: updateUsingPOST_7
2019-03-26 11:08:23 -Generating unique operation named: updateUsingPUT_5
2019-03-26 11:08:23 -Generating unique operation named: updateUsingPATCH_5
2019-03-26 11:08:23 -Generating unique operation named: updateUsingDELETE_5
2019-03-26 11:08:23 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-26 11:08:23 -Generating unique operation named: updateUsingTRACE_5
2019-03-26 11:08:23 -Generating unique operation named: exprotExcelUsingGET_4
2019-03-26 11:08:24 -Generating unique operation named: addUsingGET_7
2019-03-26 11:08:24 -Generating unique operation named: editUsingGET_8
2019-03-26 11:08:24 -Generating unique operation named: listUsingGET_8
2019-03-26 11:08:24 -Generating unique operation named: removeUsingPOST_14
2019-03-26 11:08:24 -Generating unique operation named: removeUsingPOST_15
2019-03-26 11:08:24 -Generating unique operation named: saveUsingPOST_7
2019-03-26 11:08:24 -Generating unique operation named: updateUsingGET_6
2019-03-26 11:08:24 -Generating unique operation named: updateUsingHEAD_6
2019-03-26 11:08:24 -Generating unique operation named: updateUsingPOST_8
2019-03-26 11:08:24 -Generating unique operation named: updateUsingPUT_6
2019-03-26 11:08:24 -Generating unique operation named: updateUsingPATCH_6
2019-03-26 11:08:24 -Generating unique operation named: updateUsingDELETE_6
2019-03-26 11:08:24 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-26 11:08:24 -Generating unique operation named: updateUsingTRACE_6
2019-03-26 11:08:24 -Generating unique operation named: addUsingGET_8
2019-03-26 11:08:24 -Generating unique operation named: editUsingGET_9
2019-03-26 11:08:24 -Generating unique operation named: listUsingGET_9
2019-03-26 11:08:24 -Generating unique operation named: removeUsingPOST_16
2019-03-26 11:08:24 -Generating unique operation named: removeUsingPOST_17
2019-03-26 11:08:24 -Generating unique operation named: saveUsingPOST_8
2019-03-26 11:08:24 -Generating unique operation named: updateUsingGET_7
2019-03-26 11:08:24 -Generating unique operation named: updateUsingHEAD_7
2019-03-26 11:08:24 -Generating unique operation named: updateUsingPOST_9
2019-03-26 11:08:24 -Generating unique operation named: updateUsingPUT_7
2019-03-26 11:08:24 -Generating unique operation named: updateUsingPATCH_7
2019-03-26 11:08:24 -Generating unique operation named: updateUsingDELETE_7
2019-03-26 11:08:24 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-26 11:08:24 -Generating unique operation named: updateUsingTRACE_7
2019-03-26 11:08:24 -Generating unique operation named: addUsingGET_9
2019-03-26 11:08:24 -Generating unique operation named: editUsingGET_10
2019-03-26 11:08:24 -Generating unique operation named: infoUsingGET_1
2019-03-26 11:08:24 -Generating unique operation named: infoUsingHEAD_1
2019-03-26 11:08:24 -Generating unique operation named: infoUsingPOST_1
2019-03-26 11:08:24 -Generating unique operation named: infoUsingPUT_1
2019-03-26 11:08:24 -Generating unique operation named: infoUsingPATCH_1
2019-03-26 11:08:24 -Generating unique operation named: infoUsingDELETE_1
2019-03-26 11:08:24 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-26 11:08:24 -Generating unique operation named: infoUsingTRACE_1
2019-03-26 11:08:24 -Generating unique operation named: listUsingGET_10
2019-03-26 11:08:24 -Generating unique operation named: removeUsingPOST_18
2019-03-26 11:08:24 -Generating unique operation named: removeUsingPOST_19
2019-03-26 11:08:24 -Generating unique operation named: saveUsingPOST_9
2019-03-26 11:08:24 -Generating unique operation named: updateUsingPOST_10
2019-03-26 11:08:24 -Generating unique operation named: listUsingGET_11
2019-03-26 11:08:24 -Generating unique operation named: removeUsingPOST_20
2019-03-26 11:08:24 -Generating unique operation named: welcomeUsingGET_1
2019-03-26 11:08:24 -Generating unique operation named: addUsingGET_10
2019-03-26 11:08:24 -Generating unique operation named: editUsingGET_11
2019-03-26 11:08:24 -Generating unique operation named: listUsingGET_12
2019-03-26 11:08:24 -Generating unique operation named: removeUsingPOST_21
2019-03-26 11:08:24 -Generating unique operation named: saveUsingPOST_10
2019-03-26 11:08:24 -Generating unique operation named: treeUsingGET_1
2019-03-26 11:08:24 -Generating unique operation named: treeUsingGET_2
2019-03-26 11:08:24 -Generating unique operation named: updateUsingPOST_11
2019-03-26 11:08:24 -Generating unique operation named: addUsingGET_11
2019-03-26 11:08:24 -Generating unique operation named: editUsingGET_12
2019-03-26 11:08:24 -Generating unique operation named: listUsingGET_13
2019-03-26 11:08:24 -Generating unique operation named: removeUsingPOST_22
2019-03-26 11:08:24 -Generating unique operation named: removeUsingPOST_23
2019-03-26 11:08:24 -Generating unique operation named: saveUsingPOST_11
2019-03-26 11:08:24 -Generating unique operation named: updateUsingGET_8
2019-03-26 11:08:24 -Generating unique operation named: updateUsingHEAD_8
2019-03-26 11:08:24 -Generating unique operation named: updateUsingPOST_12
2019-03-26 11:08:24 -Generating unique operation named: updateUsingPUT_8
2019-03-26 11:08:24 -Generating unique operation named: updateUsingPATCH_8
2019-03-26 11:08:24 -Generating unique operation named: updateUsingDELETE_8
2019-03-26 11:08:24 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-26 11:08:24 -Generating unique operation named: updateUsingTRACE_8
2019-03-26 11:08:25 -Generating unique operation named: addUsingGET_12
2019-03-26 11:08:25 -Generating unique operation named: editUsingGET_13
2019-03-26 11:08:25 -Generating unique operation named: listUsingGET_14
2019-03-26 11:08:25 -Generating unique operation named: removeUsingPOST_24
2019-03-26 11:08:25 -Generating unique operation named: removeUsingPOST_25
2019-03-26 11:08:25 -Generating unique operation named: saveUsingPOST_12
2019-03-26 11:08:25 -Generating unique operation named: updateUsingGET_9
2019-03-26 11:08:25 -Generating unique operation named: updateUsingHEAD_9
2019-03-26 11:08:25 -Generating unique operation named: updateUsingPOST_13
2019-03-26 11:08:25 -Generating unique operation named: updateUsingPUT_9
2019-03-26 11:08:25 -Generating unique operation named: updateUsingPATCH_9
2019-03-26 11:08:25 -Generating unique operation named: updateUsingDELETE_9
2019-03-26 11:08:25 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-26 11:08:25 -Generating unique operation named: updateUsingTRACE_9
2019-03-26 11:08:25 -Generating unique operation named: addUsingGET_13
2019-03-26 11:08:25 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-26 11:08:25 -Generating unique operation named: editUsingGET_14
2019-03-26 11:08:25 -Generating unique operation named: listUsingGET_15
2019-03-26 11:08:25 -Generating unique operation named: saveUsingPOST_13
2019-03-26 11:08:25 -Generating unique operation named: saveUsingPOST_14
2019-03-26 11:08:25 -Generating unique operation named: updateUsingPOST_14
2019-03-26 11:08:25 -Generating unique operation named: listUsingGET_16
2019-03-26 11:08:25 -Generating unique operation named: listUsingHEAD_1
2019-03-26 11:08:25 -Generating unique operation named: listUsingPOST_1
2019-03-26 11:08:25 -Generating unique operation named: listUsingPUT_1
2019-03-26 11:08:25 -Generating unique operation named: listUsingPATCH_1
2019-03-26 11:08:25 -Generating unique operation named: listUsingDELETE_1
2019-03-26 11:08:25 -Generating unique operation named: listUsingOPTIONS_1
2019-03-26 11:08:25 -Generating unique operation named: listUsingTRACE_1
2019-03-26 11:08:25 -Generating unique operation named: addUsingGET_14
2019-03-26 11:08:25 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-26 11:08:25 -Generating unique operation named: editUsingGET_15
2019-03-26 11:08:25 -Generating unique operation named: listUsingGET_17
2019-03-26 11:08:25 -Generating unique operation named: removeUsingPOST_26
2019-03-26 11:08:25 -Generating unique operation named: saveUsingPOST_15
2019-03-26 11:08:25 -Generating unique operation named: treeUsingGET_3
2019-03-26 11:08:25 -Generating unique operation named: treeViewUsingGET_1
2019-03-26 11:08:25 -Generating unique operation named: updateUsingPOST_15
2019-03-26 11:08:25 -Generating unique operation named: addUsingGET_15
2019-03-26 11:08:25 -Generating unique operation named: editUsingGET_16
2019-03-26 11:08:25 -Generating unique operation named: exprotExcelUsingGET_5
2019-03-26 11:08:25 -Generating unique operation named: listUsingGET_18
2019-03-26 11:08:25 -Generating unique operation named: removeUsingPOST_27
2019-03-26 11:08:25 -Generating unique operation named: removeUsingPOST_28
2019-03-26 11:08:25 -Generating unique operation named: saveUsingPOST_16
2019-03-26 11:08:25 -Generating unique operation named: updateUsingGET_10
2019-03-26 11:08:25 -Generating unique operation named: updateUsingHEAD_10
2019-03-26 11:08:25 -Generating unique operation named: updateUsingPOST_16
2019-03-26 11:08:25 -Generating unique operation named: updateUsingPUT_10
2019-03-26 11:08:25 -Generating unique operation named: updateUsingPATCH_10
2019-03-26 11:08:25 -Generating unique operation named: updateUsingDELETE_10
2019-03-26 11:08:25 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-26 11:08:25 -Generating unique operation named: updateUsingTRACE_10
2019-03-26 11:08:25 -Generating unique operation named: exprotExcelUsingGET_6
2019-03-26 11:08:25 -Generating unique operation named: addUsingGET_16
2019-03-26 11:08:25 -Generating unique operation named: editUsingGET_17
2019-03-26 11:08:25 -Generating unique operation named: listUsingGET_19
2019-03-26 11:08:25 -Generating unique operation named: removeUsingPOST_29
2019-03-26 11:08:25 -Generating unique operation named: removeUsingPOST_30
2019-03-26 11:08:25 -Generating unique operation named: saveUsingPOST_17
2019-03-26 11:08:25 -Generating unique operation named: updateUsingGET_11
2019-03-26 11:08:25 -Generating unique operation named: updateUsingHEAD_11
2019-03-26 11:08:25 -Generating unique operation named: updateUsingPOST_17
2019-03-26 11:08:25 -Generating unique operation named: updateUsingPUT_11
2019-03-26 11:08:25 -Generating unique operation named: updateUsingPATCH_11
2019-03-26 11:08:25 -Generating unique operation named: updateUsingDELETE_11
2019-03-26 11:08:25 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-26 11:08:25 -Generating unique operation named: updateUsingTRACE_11
2019-03-26 11:08:25 -Generating unique operation named: addUsingGET_17
2019-03-26 11:08:25 -Generating unique operation named: editUsingGET_18
2019-03-26 11:08:25 -Generating unique operation named: listUsingGET_20
2019-03-26 11:08:25 -Generating unique operation named: removeUsingPOST_31
2019-03-26 11:08:25 -Generating unique operation named: removeUsingPOST_32
2019-03-26 11:08:25 -Generating unique operation named: saveUsingPOST_18
2019-03-26 11:08:25 -Generating unique operation named: updateUsingGET_12
2019-03-26 11:08:25 -Generating unique operation named: updateUsingHEAD_12
2019-03-26 11:08:25 -Generating unique operation named: updateUsingPOST_18
2019-03-26 11:08:25 -Generating unique operation named: updateUsingPUT_12
2019-03-26 11:08:25 -Generating unique operation named: updateUsingPATCH_12
2019-03-26 11:08:25 -Generating unique operation named: updateUsingDELETE_12
2019-03-26 11:08:25 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-26 11:08:25 -Generating unique operation named: updateUsingTRACE_12
2019-03-26 11:08:26 -Starting Quartz Scheduler now
2019-03-26 11:08:26 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-26 11:08:26 -Starting...
2019-03-26 11:08:26 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-26 11:08:26 -Started.
2019-03-26 11:08:26 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-26 11:08:26 -Failed to start connector [Connector[HTTP/1.1-8081]]
org.apache.catalina.LifecycleException: Failed to start component [Connector[HTTP/1.1-8081]]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:167)
	at org.apache.catalina.core.StandardService.addConnector(StandardService.java:225)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.addPreviouslyRemovedConnectors(TomcatWebServer.java:256)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:198)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.startWebServer(ServletWebServerApplicationContext.java:300)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.finishRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:553)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.bootdo.BootdoApplication.main(BootdoApplication.java:21)
Caused by: org.apache.catalina.LifecycleException: Protocol handler start failed
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1020)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
	... 13 common frames omitted
Caused by: java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Unknown Source)
	at sun.nio.ch.Net.bind(Unknown Source)
	at sun.nio.ch.ServerSocketChannelImpl.bind(Unknown Source)
	at sun.nio.ch.ServerSocketAdaptor.bind(Unknown Source)
	at org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:210)
	at org.apache.tomcat.util.net.AbstractEndpoint.start(AbstractEndpoint.java:1150)
	at org.apache.coyote.AbstractProtocol.start(AbstractProtocol.java:591)
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1018)
	... 14 common frames omitted
2019-03-26 11:08:26 -Pausing ProtocolHandler ["http-nio-8081"]
2019-03-26 11:08:26 -Stopping service [Tomcat]
2019-03-26 11:08:26 -The stop() method was called on component [StandardServer[-1]] after stop() had already been called. The second call will be ignored.
2019-03-26 11:08:26 -Stopping ProtocolHandler ["http-nio-8081"]
2019-03-26 11:08:26 -Destroying ProtocolHandler ["http-nio-8081"]
2019-03-26 11:08:26 -

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2019-03-26 11:08:26 -

***************************
APPLICATION FAILED TO START
***************************

Description:

The Tomcat connector configured to listen on port 8081 failed to start. The port may already be in use or the connector may be misconfigured.

Action:

Verify the connector's configuration, identify and stop any process that's listening on port 8081, or configure this application to listen on another port.

2019-03-26 11:08:26 -Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@51850751: startup date [Tue Mar 26 11:07:51 CST 2019]; root of context hierarchy
2019-03-26 11:08:26 -Stopping beans in phase 2147483647
2019-03-26 11:08:26 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2019-03-26 11:08:26 -Stopping...
2019-03-26 11:08:26 -BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-26 11:08:26 -Stopped.
2019-03-26 11:08:26 -Unregistering JMX-exposed beans on shutdown
2019-03-26 11:08:26 -Unregistering JMX-exposed beans
2019-03-26 11:08:26 -Shutting down ExecutorService 'brokerChannelExecutor'
2019-03-26 11:08:26 -Shutting down ExecutorService 'messageBrokerTaskScheduler'
2019-03-26 11:08:26 -Shutting down ExecutorService 'clientOutboundChannelExecutor'
2019-03-26 11:08:26 -Shutting down ExecutorService 'clientInboundChannelExecutor'
2019-03-26 11:08:26 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutting down.
2019-03-26 11:08:26 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2019-03-26 11:08:26 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutdown complete.
2019-03-26 11:08:26 -Shutting down Quartz Scheduler
2019-03-26 11:08:55 -Starting BootdoApplication on ZJZL-20180906VX with PID 1476 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-26 11:08:56 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-26 11:08:56 -The following profiles are active: dev
2019-03-26 11:08:56 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4fe89c24: startup date [Tue Mar 26 11:08:56 CST 2019]; root of context hierarchy
2019-03-26 11:09:05 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-26 11:09:08 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$48edd774] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 11:09:08 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$3b47061b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 11:09:09 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 11:09:09 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 11:09:09 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 11:09:09 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-26 11:09:09 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-26 11:09:09 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 11:09:10 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 11:09:10 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 11:09:10 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 11:09:11 -Tomcat initialized with port(s): 8081 (http)
2019-03-26 11:09:11 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-26 11:09:11 -Starting service [Tomcat]
2019-03-26 11:09:11 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-26 11:09:11 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-26 11:09:11 -Initializing Spring embedded WebApplicationContext
2019-03-26 11:09:11 -Root WebApplicationContext: initialization completed in 15464 ms
2019-03-26 11:09:12 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-26 11:09:12 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-26 11:09:12 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-26 11:09:12 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-26 11:09:12 -Filter xssFilter was not registered (disabled)
2019-03-26 11:09:12 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-26 11:09:12 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-26 11:09:12 -Servlet statViewServlet mapped to [/druid/*]
2019-03-26 11:09:12 -Servlet dispatcherServlet mapped to [/]
2019-03-26 11:09:16 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4fe89c24: startup date [Tue Mar 26 11:08:56 CST 2019]; root of context hierarchy
2019-03-26 11:09:16 -Using default implementation for ThreadExecutor
2019-03-26 11:09:16 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-26 11:09:16 -Quartz Scheduler v.2.2.1 created.
2019-03-26 11:09:16 -RAMJobStore initialized.
2019-03-26 11:09:16 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-26 11:09:16 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-26 11:09:16 -Quartz scheduler version: 2.2.1
2019-03-26 11:09:16 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@6f2864c3
2019-03-26 11:09:17 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-26 11:09:17 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-26 11:09:21 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-26 11:09:21 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-26 11:09:21 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-03-26 11:09:21 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-26 11:09:21 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-26 11:09:21 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-26 11:09:21 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-26 11:09:21 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-26 11:09:21 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-26 11:09:21 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-26 11:09:21 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-26 11:09:21 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 11:09:21 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-26 11:09:21 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-26 11:09:21 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-26 11:09:21 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-26 11:09:21 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-26 11:09:21 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 11:09:21 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-26 11:09:21 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-26 11:09:21 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-26 11:09:21 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-26 11:09:21 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 11:09:21 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-26 11:09:21 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-26 11:09:21 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-26 11:09:21 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-26 11:09:21 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 11:09:21 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 11:09:21 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-26 11:09:21 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-26 11:09:21 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-26 11:09:21 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-26 11:09:21 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-26 11:09:21 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-26 11:09:21 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-26 11:09:21 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-26 11:09:21 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-26 11:09:21 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 11:09:21 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-26 11:09:21 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-26 11:09:21 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-26 11:09:21 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-26 11:09:21 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 11:09:21 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-26 11:09:21 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-26 11:09:21 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 11:09:21 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-26 11:09:21 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-03-26 11:09:21 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-26 11:09:21 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-26 11:09:21 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-26 11:09:21 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-26 11:09:21 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-26 11:09:21 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-26 11:09:21 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-26 11:09:21 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-26 11:09:21 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-26 11:09:21 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-26 11:09:21 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 11:09:21 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-26 11:09:21 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-03-26 11:09:21 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-26 11:09:21 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-26 11:09:21 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-26 11:09:21 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-26 11:09:21 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-26 11:09:21 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-26 11:09:21 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 11:09:21 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-03-26 11:09:21 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 11:09:21 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-26 11:09:21 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-26 11:09:21 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-26 11:09:21 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-26 11:09:21 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-26 11:09:21 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-26 11:09:21 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-26 11:09:21 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 11:09:21 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-26 11:09:21 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-26 11:09:21 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-26 11:09:21 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-26 11:09:21 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-26 11:09:21 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-26 11:09:21 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-26 11:09:21 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-26 11:09:21 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-26 11:09:21 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-26 11:09:21 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 11:09:21 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-26 11:09:21 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 11:09:21 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-26 11:09:21 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-26 11:09:21 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-03-26 11:09:21 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-26 11:09:21 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-03-26 11:09:21 -Mapped "{[/moneyList/moneyList/LikeName],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.LikeName(org.springframework.ui.Model)
2019-03-26 11:09:21 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-26 11:09:21 -Mapped "{[/moneyList/moneyList/UserList],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-26 11:09:21 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-26 11:09:21 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-26 11:09:21 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-26 11:09:21 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-26 11:09:21 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 11:09:21 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-26 11:09:21 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 11:09:21 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-26 11:09:21 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-26 11:09:21 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-26 11:09:21 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-26 11:09:21 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-26 11:09:21 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-26 11:09:21 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 11:09:21 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-26 11:09:21 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 11:09:21 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-26 11:09:21 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-26 11:09:21 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-26 11:09:21 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-26 11:09:21 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-26 11:09:21 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-26 11:09:21 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 11:09:21 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-26 11:09:21 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 11:09:21 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-26 11:09:21 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-26 11:09:21 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-26 11:09:21 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-26 11:09:21 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-26 11:09:21 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-26 11:09:21 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-26 11:09:21 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 11:09:21 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-26 11:09:21 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-26 11:09:21 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 11:09:21 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 11:09:21 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-26 11:09:21 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-26 11:09:21 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-26 11:09:21 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-26 11:09:21 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-26 11:09:21 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-26 11:09:21 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 11:09:21 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-26 11:09:21 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 11:09:21 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-26 11:09:21 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 11:09:21 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-26 11:09:21 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-26 11:09:21 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-26 11:09:21 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-26 11:09:21 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-26 11:09:21 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-26 11:09:21 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-26 11:09:21 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-26 11:09:21 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 11:09:21 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-26 11:09:21 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-26 11:09:21 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-26 11:09:21 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-26 11:09:21 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-26 11:09:21 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-26 11:09:21 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-26 11:09:21 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-26 11:09:21 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-26 11:09:21 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-26 11:09:21 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-26 11:09:21 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-26 11:09:21 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 11:09:21 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-26 11:09:21 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-26 11:09:21 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-26 11:09:21 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-26 11:09:21 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-26 11:09:21 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-26 11:09:21 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-26 11:09:21 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-26 11:09:21 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-26 11:09:21 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-26 11:09:21 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-26 11:09:21 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 11:09:21 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-26 11:09:21 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-26 11:09:21 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-26 11:09:21 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-26 11:09:21 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-26 11:09:21 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 11:09:21 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-26 11:09:21 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-26 11:09:21 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-26 11:09:21 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 11:09:21 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-26 11:09:21 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-26 11:09:21 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-26 11:09:21 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-26 11:09:21 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-26 11:09:21 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-26 11:09:21 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-26 11:09:21 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-26 11:09:21 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-26 11:09:21 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-26 11:09:21 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-26 11:09:21 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-26 11:09:21 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-26 11:09:21 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-26 11:09:21 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-26 11:09:21 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-26 11:09:21 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-26 11:09:21 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 11:09:21 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-26 11:09:21 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-26 11:09:21 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 11:09:21 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-26 11:09:21 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 11:09:21 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-26 11:09:21 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-26 11:09:21 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-26 11:09:21 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-26 11:09:21 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-26 11:09:21 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-26 11:09:21 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 11:09:21 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-26 11:09:21 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-26 11:09:21 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 11:09:21 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-26 11:09:21 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-03-26 11:09:21 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-26 11:09:21 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-03-26 11:09:21 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-26 11:09:21 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-26 11:09:21 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-26 11:09:21 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-26 11:09:22 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-26 11:09:22 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-26 11:09:22 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-26 11:09:23 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-26 11:09:23 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4fe89c24: startup date [Tue Mar 26 11:08:56 CST 2019]; root of context hierarchy
2019-03-26 11:09:23 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-26 11:09:23 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-26 11:09:23 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-26 11:09:23 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-26 11:09:24 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-26 11:09:26 -Registering beans for JMX exposure on startup
2019-03-26 11:09:26 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-26 11:09:26 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-26 11:09:26 -Starting beans in phase 2147483647
2019-03-26 11:09:26 -Context refreshed
2019-03-26 11:09:26 -Found 1 custom documentation plugin(s)
2019-03-26 11:09:27 -Scanning for api listing references
2019-03-26 11:09:27 -Generating unique operation named: removeUsingPOST_1
2019-03-26 11:09:27 -Generating unique operation named: addUsingGET_1
2019-03-26 11:09:27 -Generating unique operation named: editUsingGET_1
2019-03-26 11:09:27 -Generating unique operation named: listUsingGET_1
2019-03-26 11:09:27 -Generating unique operation named: removeUsingPOST_2
2019-03-26 11:09:27 -Generating unique operation named: removeUsingPOST_3
2019-03-26 11:09:27 -Generating unique operation named: saveUsingPOST_1
2019-03-26 11:09:27 -Generating unique operation named: updateUsingGET_1
2019-03-26 11:09:27 -Generating unique operation named: updateUsingHEAD_1
2019-03-26 11:09:27 -Generating unique operation named: updateUsingPOST_1
2019-03-26 11:09:28 -Generating unique operation named: updateUsingPUT_1
2019-03-26 11:09:28 -Generating unique operation named: updateUsingPATCH_1
2019-03-26 11:09:28 -Generating unique operation named: updateUsingDELETE_1
2019-03-26 11:09:28 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-26 11:09:28 -Generating unique operation named: updateUsingTRACE_1
2019-03-26 11:09:28 -Generating unique operation named: addUsingGET_2
2019-03-26 11:09:28 -Generating unique operation named: editUsingGET_2
2019-03-26 11:09:28 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-26 11:09:28 -Generating unique operation named: listUsingGET_2
2019-03-26 11:09:28 -Generating unique operation named: removeUsingPOST_4
2019-03-26 11:09:28 -Generating unique operation named: removeUsingPOST_5
2019-03-26 11:09:28 -Generating unique operation named: saveUsingPOST_2
2019-03-26 11:09:28 -Generating unique operation named: updateUsingPOST_2
2019-03-26 11:09:28 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-26 11:09:28 -Generating unique operation named: addUsingGET_3
2019-03-26 11:09:28 -Generating unique operation named: editUsingGET_3
2019-03-26 11:09:28 -Generating unique operation named: listUsingGET_3
2019-03-26 11:09:28 -Generating unique operation named: removeUsingPOST_6
2019-03-26 11:09:28 -Generating unique operation named: removeUsingPOST_7
2019-03-26 11:09:28 -Generating unique operation named: saveUsingPOST_3
2019-03-26 11:09:28 -Generating unique operation named: updateUsingGET_2
2019-03-26 11:09:28 -Generating unique operation named: updateUsingHEAD_2
2019-03-26 11:09:28 -Generating unique operation named: updateUsingPOST_3
2019-03-26 11:09:28 -Generating unique operation named: updateUsingPUT_2
2019-03-26 11:09:28 -Generating unique operation named: updateUsingPATCH_2
2019-03-26 11:09:28 -Generating unique operation named: updateUsingDELETE_2
2019-03-26 11:09:28 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-26 11:09:28 -Generating unique operation named: updateUsingTRACE_2
2019-03-26 11:09:28 -Generating unique operation named: addUsingGET_4
2019-03-26 11:09:28 -Generating unique operation named: editUsingGET_4
2019-03-26 11:09:28 -Generating unique operation named: listUsingGET_4
2019-03-26 11:09:28 -Generating unique operation named: removeUsingPOST_8
2019-03-26 11:09:28 -Generating unique operation named: removeUsingPOST_9
2019-03-26 11:09:28 -Generating unique operation named: saveUsingPOST_4
2019-03-26 11:09:28 -Generating unique operation named: updateUsingGET_3
2019-03-26 11:09:28 -Generating unique operation named: updateUsingHEAD_3
2019-03-26 11:09:28 -Generating unique operation named: updateUsingPOST_4
2019-03-26 11:09:28 -Generating unique operation named: updateUsingPUT_3
2019-03-26 11:09:28 -Generating unique operation named: updateUsingPATCH_3
2019-03-26 11:09:28 -Generating unique operation named: updateUsingDELETE_3
2019-03-26 11:09:28 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-26 11:09:28 -Generating unique operation named: updateUsingTRACE_3
2019-03-26 11:09:28 -Generating unique operation named: ElecUsingGET_1
2019-03-26 11:09:28 -Generating unique operation named: addUsingGET_5
2019-03-26 11:09:28 -Generating unique operation named: editUsingGET_5
2019-03-26 11:09:28 -Generating unique operation named: listUsingGET_5
2019-03-26 11:09:28 -Generating unique operation named: removeUsingPOST_10
2019-03-26 11:09:28 -Generating unique operation named: removeUsingPOST_11
2019-03-26 11:09:28 -Generating unique operation named: saveUsingPOST_5
2019-03-26 11:09:28 -Generating unique operation named: updateUsingGET_4
2019-03-26 11:09:28 -Generating unique operation named: updateUsingHEAD_4
2019-03-26 11:09:28 -Generating unique operation named: updateUsingPOST_5
2019-03-26 11:09:28 -Generating unique operation named: updateUsingPUT_4
2019-03-26 11:09:28 -Generating unique operation named: updateUsingPATCH_4
2019-03-26 11:09:28 -Generating unique operation named: updateUsingDELETE_4
2019-03-26 11:09:28 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-26 11:09:28 -Generating unique operation named: updateUsingTRACE_4
2019-03-26 11:09:28 -Generating unique operation named: editUsingGET_6
2019-03-26 11:09:28 -Generating unique operation named: listUsingGET_6
2019-03-26 11:09:28 -Generating unique operation named: updateUsingPOST_6
2019-03-26 11:09:28 -Generating unique operation named: addUsingGET_6
2019-03-26 11:09:28 -Generating unique operation named: editUsingGET_7
2019-03-26 11:09:28 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-26 11:09:28 -Generating unique operation named: listUsingGET_7
2019-03-26 11:09:28 -Generating unique operation named: removeUsingPOST_12
2019-03-26 11:09:28 -Generating unique operation named: removeUsingPOST_13
2019-03-26 11:09:28 -Generating unique operation named: saveUsingPOST_6
2019-03-26 11:09:28 -Generating unique operation named: updateUsingGET_5
2019-03-26 11:09:28 -Generating unique operation named: updateUsingHEAD_5
2019-03-26 11:09:28 -Generating unique operation named: updateUsingPOST_7
2019-03-26 11:09:28 -Generating unique operation named: updateUsingPUT_5
2019-03-26 11:09:28 -Generating unique operation named: updateUsingPATCH_5
2019-03-26 11:09:28 -Generating unique operation named: updateUsingDELETE_5
2019-03-26 11:09:29 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-26 11:09:29 -Generating unique operation named: updateUsingTRACE_5
2019-03-26 11:09:29 -Generating unique operation named: exprotExcelUsingGET_4
2019-03-26 11:09:29 -Generating unique operation named: addUsingGET_7
2019-03-26 11:09:29 -Generating unique operation named: editUsingGET_8
2019-03-26 11:09:29 -Generating unique operation named: listUsingGET_8
2019-03-26 11:09:29 -Generating unique operation named: removeUsingPOST_14
2019-03-26 11:09:29 -Generating unique operation named: removeUsingPOST_15
2019-03-26 11:09:29 -Generating unique operation named: saveUsingPOST_7
2019-03-26 11:09:29 -Generating unique operation named: updateUsingGET_6
2019-03-26 11:09:29 -Generating unique operation named: updateUsingHEAD_6
2019-03-26 11:09:29 -Generating unique operation named: updateUsingPOST_8
2019-03-26 11:09:29 -Generating unique operation named: updateUsingPUT_6
2019-03-26 11:09:29 -Generating unique operation named: updateUsingPATCH_6
2019-03-26 11:09:29 -Generating unique operation named: updateUsingDELETE_6
2019-03-26 11:09:29 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-26 11:09:29 -Generating unique operation named: updateUsingTRACE_6
2019-03-26 11:09:29 -Generating unique operation named: addUsingGET_8
2019-03-26 11:09:29 -Generating unique operation named: editUsingGET_9
2019-03-26 11:09:29 -Generating unique operation named: listUsingGET_9
2019-03-26 11:09:29 -Generating unique operation named: removeUsingPOST_16
2019-03-26 11:09:29 -Generating unique operation named: removeUsingPOST_17
2019-03-26 11:09:29 -Generating unique operation named: saveUsingPOST_8
2019-03-26 11:09:29 -Generating unique operation named: updateUsingGET_7
2019-03-26 11:09:29 -Generating unique operation named: updateUsingHEAD_7
2019-03-26 11:09:29 -Generating unique operation named: updateUsingPOST_9
2019-03-26 11:09:29 -Generating unique operation named: updateUsingPUT_7
2019-03-26 11:09:29 -Generating unique operation named: updateUsingPATCH_7
2019-03-26 11:09:29 -Generating unique operation named: updateUsingDELETE_7
2019-03-26 11:09:29 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-26 11:09:29 -Generating unique operation named: updateUsingTRACE_7
2019-03-26 11:09:29 -Generating unique operation named: addUsingGET_9
2019-03-26 11:09:29 -Generating unique operation named: editUsingGET_10
2019-03-26 11:09:29 -Generating unique operation named: infoUsingGET_1
2019-03-26 11:09:29 -Generating unique operation named: infoUsingHEAD_1
2019-03-26 11:09:29 -Generating unique operation named: infoUsingPOST_1
2019-03-26 11:09:29 -Generating unique operation named: infoUsingPUT_1
2019-03-26 11:09:29 -Generating unique operation named: infoUsingPATCH_1
2019-03-26 11:09:29 -Generating unique operation named: infoUsingDELETE_1
2019-03-26 11:09:29 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-26 11:09:29 -Generating unique operation named: infoUsingTRACE_1
2019-03-26 11:09:29 -Generating unique operation named: listUsingGET_10
2019-03-26 11:09:29 -Generating unique operation named: removeUsingPOST_18
2019-03-26 11:09:29 -Generating unique operation named: removeUsingPOST_19
2019-03-26 11:09:29 -Generating unique operation named: saveUsingPOST_9
2019-03-26 11:09:29 -Generating unique operation named: updateUsingPOST_10
2019-03-26 11:09:29 -Generating unique operation named: listUsingGET_11
2019-03-26 11:09:29 -Generating unique operation named: removeUsingPOST_20
2019-03-26 11:09:29 -Generating unique operation named: welcomeUsingGET_1
2019-03-26 11:09:29 -Generating unique operation named: addUsingGET_10
2019-03-26 11:09:29 -Generating unique operation named: editUsingGET_11
2019-03-26 11:09:29 -Generating unique operation named: listUsingGET_12
2019-03-26 11:09:29 -Generating unique operation named: removeUsingPOST_21
2019-03-26 11:09:29 -Generating unique operation named: saveUsingPOST_10
2019-03-26 11:09:29 -Generating unique operation named: treeUsingGET_1
2019-03-26 11:09:29 -Generating unique operation named: treeUsingGET_2
2019-03-26 11:09:29 -Generating unique operation named: updateUsingPOST_11
2019-03-26 11:09:29 -Generating unique operation named: addUsingGET_11
2019-03-26 11:09:29 -Generating unique operation named: editUsingGET_12
2019-03-26 11:09:29 -Generating unique operation named: listUsingGET_13
2019-03-26 11:09:29 -Generating unique operation named: removeUsingPOST_22
2019-03-26 11:09:29 -Generating unique operation named: removeUsingPOST_23
2019-03-26 11:09:29 -Generating unique operation named: saveUsingPOST_11
2019-03-26 11:09:30 -Generating unique operation named: updateUsingGET_8
2019-03-26 11:09:30 -Generating unique operation named: updateUsingHEAD_8
2019-03-26 11:09:30 -Generating unique operation named: updateUsingPOST_12
2019-03-26 11:09:30 -Generating unique operation named: updateUsingPUT_8
2019-03-26 11:09:30 -Generating unique operation named: updateUsingPATCH_8
2019-03-26 11:09:30 -Generating unique operation named: updateUsingDELETE_8
2019-03-26 11:09:30 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-26 11:09:30 -Generating unique operation named: updateUsingTRACE_8
2019-03-26 11:09:30 -Generating unique operation named: addUsingGET_12
2019-03-26 11:09:30 -Generating unique operation named: editUsingGET_13
2019-03-26 11:09:30 -Generating unique operation named: listUsingGET_14
2019-03-26 11:09:30 -Generating unique operation named: removeUsingPOST_24
2019-03-26 11:09:30 -Generating unique operation named: removeUsingPOST_25
2019-03-26 11:09:30 -Generating unique operation named: saveUsingPOST_12
2019-03-26 11:09:30 -Generating unique operation named: updateUsingGET_9
2019-03-26 11:09:30 -Generating unique operation named: updateUsingHEAD_9
2019-03-26 11:09:30 -Generating unique operation named: updateUsingPOST_13
2019-03-26 11:09:30 -Generating unique operation named: updateUsingPUT_9
2019-03-26 11:09:30 -Generating unique operation named: updateUsingPATCH_9
2019-03-26 11:09:30 -Generating unique operation named: updateUsingDELETE_9
2019-03-26 11:09:30 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-26 11:09:30 -Generating unique operation named: updateUsingTRACE_9
2019-03-26 11:09:30 -Generating unique operation named: addUsingGET_13
2019-03-26 11:09:30 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-26 11:09:30 -Generating unique operation named: editUsingGET_14
2019-03-26 11:09:30 -Generating unique operation named: listUsingGET_15
2019-03-26 11:09:30 -Generating unique operation named: saveUsingPOST_13
2019-03-26 11:09:30 -Generating unique operation named: saveUsingPOST_14
2019-03-26 11:09:30 -Generating unique operation named: updateUsingPOST_14
2019-03-26 11:09:30 -Generating unique operation named: listUsingGET_16
2019-03-26 11:09:30 -Generating unique operation named: listUsingHEAD_1
2019-03-26 11:09:30 -Generating unique operation named: listUsingPOST_1
2019-03-26 11:09:30 -Generating unique operation named: listUsingPUT_1
2019-03-26 11:09:30 -Generating unique operation named: listUsingPATCH_1
2019-03-26 11:09:30 -Generating unique operation named: listUsingDELETE_1
2019-03-26 11:09:30 -Generating unique operation named: listUsingOPTIONS_1
2019-03-26 11:09:30 -Generating unique operation named: listUsingTRACE_1
2019-03-26 11:09:30 -Generating unique operation named: addUsingGET_14
2019-03-26 11:09:30 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-26 11:09:30 -Generating unique operation named: editUsingGET_15
2019-03-26 11:09:30 -Generating unique operation named: listUsingGET_17
2019-03-26 11:09:30 -Generating unique operation named: removeUsingPOST_26
2019-03-26 11:09:30 -Generating unique operation named: saveUsingPOST_15
2019-03-26 11:09:30 -Generating unique operation named: treeUsingGET_3
2019-03-26 11:09:30 -Generating unique operation named: treeViewUsingGET_1
2019-03-26 11:09:30 -Generating unique operation named: updateUsingPOST_15
2019-03-26 11:09:30 -Generating unique operation named: addUsingGET_15
2019-03-26 11:09:30 -Generating unique operation named: editUsingGET_16
2019-03-26 11:09:30 -Generating unique operation named: exprotExcelUsingGET_5
2019-03-26 11:09:30 -Generating unique operation named: listUsingGET_18
2019-03-26 11:09:30 -Generating unique operation named: removeUsingPOST_27
2019-03-26 11:09:30 -Generating unique operation named: removeUsingPOST_28
2019-03-26 11:09:30 -Generating unique operation named: saveUsingPOST_16
2019-03-26 11:09:30 -Generating unique operation named: updateUsingGET_10
2019-03-26 11:09:30 -Generating unique operation named: updateUsingHEAD_10
2019-03-26 11:09:30 -Generating unique operation named: updateUsingPOST_16
2019-03-26 11:09:30 -Generating unique operation named: updateUsingPUT_10
2019-03-26 11:09:30 -Generating unique operation named: updateUsingPATCH_10
2019-03-26 11:09:30 -Generating unique operation named: updateUsingDELETE_10
2019-03-26 11:09:30 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-26 11:09:30 -Generating unique operation named: updateUsingTRACE_10
2019-03-26 11:09:30 -Generating unique operation named: exprotExcelUsingGET_6
2019-03-26 11:09:30 -Generating unique operation named: addUsingGET_16
2019-03-26 11:09:30 -Generating unique operation named: editUsingGET_17
2019-03-26 11:09:30 -Generating unique operation named: listUsingGET_19
2019-03-26 11:09:30 -Generating unique operation named: removeUsingPOST_29
2019-03-26 11:09:30 -Generating unique operation named: removeUsingPOST_30
2019-03-26 11:09:30 -Generating unique operation named: saveUsingPOST_17
2019-03-26 11:09:30 -Generating unique operation named: updateUsingGET_11
2019-03-26 11:09:30 -Generating unique operation named: updateUsingHEAD_11
2019-03-26 11:09:30 -Generating unique operation named: updateUsingPOST_17
2019-03-26 11:09:30 -Generating unique operation named: updateUsingPUT_11
2019-03-26 11:09:30 -Generating unique operation named: updateUsingPATCH_11
2019-03-26 11:09:30 -Generating unique operation named: updateUsingDELETE_11
2019-03-26 11:09:30 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-26 11:09:30 -Generating unique operation named: updateUsingTRACE_11
2019-03-26 11:09:30 -Generating unique operation named: addUsingGET_17
2019-03-26 11:09:30 -Generating unique operation named: editUsingGET_18
2019-03-26 11:09:30 -Generating unique operation named: listUsingGET_20
2019-03-26 11:09:30 -Generating unique operation named: removeUsingPOST_31
2019-03-26 11:09:30 -Generating unique operation named: removeUsingPOST_32
2019-03-26 11:09:30 -Generating unique operation named: saveUsingPOST_18
2019-03-26 11:09:30 -Generating unique operation named: updateUsingGET_12
2019-03-26 11:09:30 -Generating unique operation named: updateUsingHEAD_12
2019-03-26 11:09:30 -Generating unique operation named: updateUsingPOST_18
2019-03-26 11:09:30 -Generating unique operation named: updateUsingPUT_12
2019-03-26 11:09:30 -Generating unique operation named: updateUsingPATCH_12
2019-03-26 11:09:30 -Generating unique operation named: updateUsingDELETE_12
2019-03-26 11:09:30 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-26 11:09:30 -Generating unique operation named: updateUsingTRACE_12
2019-03-26 11:09:31 -Starting Quartz Scheduler now
2019-03-26 11:09:31 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-26 11:09:31 -Starting...
2019-03-26 11:09:31 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-26 11:09:31 -Started.
2019-03-26 11:09:31 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-26 11:09:31 -Failed to start connector [Connector[HTTP/1.1-8081]]
org.apache.catalina.LifecycleException: Failed to start component [Connector[HTTP/1.1-8081]]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:167)
	at org.apache.catalina.core.StandardService.addConnector(StandardService.java:225)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.addPreviouslyRemovedConnectors(TomcatWebServer.java:256)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:198)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.startWebServer(ServletWebServerApplicationContext.java:300)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.finishRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:553)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.bootdo.BootdoApplication.main(BootdoApplication.java:21)
Caused by: org.apache.catalina.LifecycleException: Protocol handler start failed
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1020)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
	... 13 common frames omitted
Caused by: java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Unknown Source)
	at sun.nio.ch.Net.bind(Unknown Source)
	at sun.nio.ch.ServerSocketChannelImpl.bind(Unknown Source)
	at sun.nio.ch.ServerSocketAdaptor.bind(Unknown Source)
	at org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:210)
	at org.apache.tomcat.util.net.AbstractEndpoint.start(AbstractEndpoint.java:1150)
	at org.apache.coyote.AbstractProtocol.start(AbstractProtocol.java:591)
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1018)
	... 14 common frames omitted
2019-03-26 11:09:31 -Pausing ProtocolHandler ["http-nio-8081"]
2019-03-26 11:09:31 -Stopping service [Tomcat]
2019-03-26 11:09:31 -The stop() method was called on component [StandardServer[-1]] after stop() had already been called. The second call will be ignored.
2019-03-26 11:09:31 -Stopping ProtocolHandler ["http-nio-8081"]
2019-03-26 11:09:31 -Destroying ProtocolHandler ["http-nio-8081"]
2019-03-26 11:09:31 -

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2019-03-26 11:09:31 -

***************************
APPLICATION FAILED TO START
***************************

Description:

The Tomcat connector configured to listen on port 8081 failed to start. The port may already be in use or the connector may be misconfigured.

Action:

Verify the connector's configuration, identify and stop any process that's listening on port 8081, or configure this application to listen on another port.

2019-03-26 11:09:31 -Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4fe89c24: startup date [Tue Mar 26 11:08:56 CST 2019]; root of context hierarchy
2019-03-26 11:09:31 -Stopping beans in phase 2147483647
2019-03-26 11:09:31 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2019-03-26 11:09:31 -Stopping...
2019-03-26 11:09:31 -BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-26 11:09:31 -Stopped.
2019-03-26 11:09:31 -Unregistering JMX-exposed beans on shutdown
2019-03-26 11:09:31 -Unregistering JMX-exposed beans
2019-03-26 11:09:31 -Shutting down ExecutorService 'brokerChannelExecutor'
2019-03-26 11:09:31 -Shutting down ExecutorService 'messageBrokerTaskScheduler'
2019-03-26 11:09:31 -Shutting down ExecutorService 'clientOutboundChannelExecutor'
2019-03-26 11:09:31 -Shutting down ExecutorService 'clientInboundChannelExecutor'
2019-03-26 11:09:31 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutting down.
2019-03-26 11:09:31 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2019-03-26 11:09:31 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutdown complete.
2019-03-26 11:09:31 -Shutting down Quartz Scheduler
2019-03-26 11:17:20 -Starting BootdoApplication on ZJZL-20180906VX with PID 10480 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-26 11:17:20 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-26 11:17:20 -The following profiles are active: dev
2019-03-26 11:17:21 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@75f65e45: startup date [Tue Mar 26 11:17:21 CST 2019]; root of context hierarchy
2019-03-26 11:17:24 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-26 11:17:27 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$3dddf022] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 11:17:27 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$30371ec9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 11:17:28 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 11:17:29 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 11:17:29 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 11:17:29 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-26 11:17:29 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-26 11:17:29 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 11:17:29 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 11:17:29 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 11:17:29 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 11:17:30 -Tomcat initialized with port(s): 8081 (http)
2019-03-26 11:17:30 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-26 11:17:30 -Starting service [Tomcat]
2019-03-26 11:17:30 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-26 11:17:30 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-26 11:17:30 -Initializing Spring embedded WebApplicationContext
2019-03-26 11:17:30 -Root WebApplicationContext: initialization completed in 9764 ms
2019-03-26 11:17:31 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-26 11:17:31 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-26 11:17:31 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-26 11:17:31 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-26 11:17:31 -Filter xssFilter was not registered (disabled)
2019-03-26 11:17:31 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-26 11:17:31 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-26 11:17:31 -Servlet statViewServlet mapped to [/druid/*]
2019-03-26 11:17:31 -Servlet dispatcherServlet mapped to [/]
2019-03-26 11:17:34 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@75f65e45: startup date [Tue Mar 26 11:17:21 CST 2019]; root of context hierarchy
2019-03-26 11:17:34 -Using default implementation for ThreadExecutor
2019-03-26 11:17:34 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-26 11:17:34 -Quartz Scheduler v.2.2.1 created.
2019-03-26 11:17:34 -RAMJobStore initialized.
2019-03-26 11:17:34 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-26 11:17:34 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-26 11:17:34 -Quartz scheduler version: 2.2.1
2019-03-26 11:17:34 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@67d180e4
2019-03-26 11:17:35 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-26 11:17:35 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-26 11:17:38 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-26 11:17:38 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-03-26 11:17:38 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-26 11:17:38 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-26 11:17:38 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-26 11:17:38 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-26 11:17:38 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-26 11:17:38 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-26 11:17:38 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-26 11:17:38 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-26 11:17:38 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-26 11:17:38 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 11:17:38 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-26 11:17:38 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 11:17:38 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-26 11:17:38 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-26 11:17:38 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-26 11:17:38 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-26 11:17:38 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-26 11:17:38 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-26 11:17:38 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-26 11:17:38 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-26 11:17:38 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 11:17:38 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-26 11:17:38 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-26 11:17:38 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 11:17:38 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-26 11:17:38 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-26 11:17:38 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 11:17:38 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-26 11:17:38 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-26 11:17:38 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-26 11:17:38 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-26 11:17:38 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-26 11:17:38 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-26 11:17:38 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-26 11:17:38 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-26 11:17:38 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-26 11:17:38 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 11:17:38 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-26 11:17:38 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-26 11:17:38 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 11:17:38 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-26 11:17:38 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-26 11:17:38 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-26 11:17:38 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-26 11:17:38 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 11:17:38 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-26 11:17:38 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-03-26 11:17:38 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-26 11:17:38 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-26 11:17:38 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-26 11:17:38 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-26 11:17:38 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-26 11:17:38 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-26 11:17:38 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-26 11:17:38 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-26 11:17:38 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-26 11:17:38 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-26 11:17:38 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 11:17:38 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-26 11:17:38 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-26 11:17:38 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-26 11:17:38 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-03-26 11:17:38 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-26 11:17:38 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-26 11:17:38 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-26 11:17:38 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-26 11:17:38 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 11:17:38 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-03-26 11:17:38 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 11:17:38 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-26 11:17:38 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-26 11:17:38 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-26 11:17:38 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-26 11:17:38 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-26 11:17:38 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-26 11:17:38 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-26 11:17:38 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 11:17:38 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-26 11:17:38 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-26 11:17:38 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-26 11:17:38 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-26 11:17:38 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-26 11:17:38 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-26 11:17:38 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-26 11:17:38 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-26 11:17:38 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-26 11:17:38 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-26 11:17:38 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 11:17:38 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-26 11:17:38 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-26 11:17:38 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 11:17:38 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-26 11:17:38 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-26 11:17:38 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-03-26 11:17:38 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-03-26 11:17:38 -Mapped "{[/moneyList/moneyList/UserList],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-26 11:17:38 -Mapped "{[/moneyList/moneyList/LikeName],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.LikeName(org.springframework.ui.Model)
2019-03-26 11:17:38 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-26 11:17:38 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-26 11:17:38 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-26 11:17:38 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-26 11:17:38 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-26 11:17:38 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 11:17:38 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-26 11:17:38 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-26 11:17:38 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-26 11:17:38 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 11:17:38 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-26 11:17:38 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-26 11:17:38 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-26 11:17:38 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-26 11:17:38 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 11:17:38 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-26 11:17:38 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-26 11:17:38 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-26 11:17:38 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 11:17:38 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-26 11:17:38 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-26 11:17:38 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-26 11:17:38 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-26 11:17:38 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 11:17:38 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-26 11:17:38 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-26 11:17:38 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-26 11:17:38 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 11:17:38 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-26 11:17:38 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-26 11:17:38 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-26 11:17:38 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-26 11:17:38 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-26 11:17:38 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 11:17:38 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-26 11:17:38 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-26 11:17:38 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-26 11:17:38 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-26 11:17:38 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 11:17:38 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 11:17:38 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-26 11:17:38 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-26 11:17:38 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-26 11:17:38 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-26 11:17:38 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 11:17:38 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-26 11:17:38 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-26 11:17:38 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-26 11:17:38 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 11:17:38 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 11:17:38 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-26 11:17:38 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-26 11:17:38 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-26 11:17:38 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-26 11:17:38 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-26 11:17:38 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-26 11:17:38 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-26 11:17:38 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 11:17:38 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-26 11:17:38 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-26 11:17:38 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-26 11:17:38 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-26 11:17:38 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-26 11:17:38 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-26 11:17:38 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-26 11:17:38 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-26 11:17:38 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-26 11:17:38 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-26 11:17:38 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-26 11:17:38 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-26 11:17:38 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 11:17:38 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-26 11:17:38 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-26 11:17:38 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-26 11:17:38 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-26 11:17:38 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-26 11:17:38 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-26 11:17:38 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-26 11:17:38 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-26 11:17:38 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-26 11:17:38 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-26 11:17:38 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-26 11:17:38 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 11:17:38 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-26 11:17:38 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-26 11:17:38 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-26 11:17:38 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-26 11:17:38 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-26 11:17:38 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 11:17:38 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-26 11:17:38 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-26 11:17:38 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-26 11:17:38 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 11:17:38 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-26 11:17:38 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-26 11:17:38 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-26 11:17:38 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-26 11:17:38 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-26 11:17:38 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-26 11:17:38 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-26 11:17:38 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-26 11:17:38 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-26 11:17:38 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-26 11:17:38 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-26 11:17:38 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-26 11:17:38 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-26 11:17:38 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-26 11:17:38 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-26 11:17:38 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-26 11:17:38 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-26 11:17:38 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 11:17:38 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-26 11:17:38 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-26 11:17:38 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 11:17:38 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 11:17:38 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-26 11:17:38 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-26 11:17:38 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-26 11:17:38 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-26 11:17:38 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-26 11:17:38 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-26 11:17:38 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-26 11:17:38 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 11:17:38 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-26 11:17:38 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 11:17:38 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-26 11:17:38 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-26 11:17:38 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-03-26 11:17:38 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-03-26 11:17:38 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-26 11:17:38 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-26 11:17:38 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-26 11:17:38 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-26 11:17:38 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-26 11:17:39 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-26 11:17:39 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-26 11:17:39 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-26 11:17:39 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-26 11:17:40 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@75f65e45: startup date [Tue Mar 26 11:17:21 CST 2019]; root of context hierarchy
2019-03-26 11:17:40 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-26 11:17:40 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-26 11:17:40 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-26 11:17:40 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-26 11:17:40 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-26 11:17:42 -Registering beans for JMX exposure on startup
2019-03-26 11:17:42 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-26 11:17:42 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-26 11:17:42 -Starting beans in phase 2147483647
2019-03-26 11:17:42 -Context refreshed
2019-03-26 11:17:42 -Found 1 custom documentation plugin(s)
2019-03-26 11:17:42 -Scanning for api listing references
2019-03-26 11:17:43 -Generating unique operation named: removeUsingPOST_1
2019-03-26 11:17:43 -Generating unique operation named: addUsingGET_1
2019-03-26 11:17:43 -Generating unique operation named: editUsingGET_1
2019-03-26 11:17:43 -Generating unique operation named: listUsingGET_1
2019-03-26 11:17:43 -Generating unique operation named: removeUsingPOST_2
2019-03-26 11:17:43 -Generating unique operation named: removeUsingPOST_3
2019-03-26 11:17:43 -Generating unique operation named: saveUsingPOST_1
2019-03-26 11:17:43 -Generating unique operation named: updateUsingGET_1
2019-03-26 11:17:43 -Generating unique operation named: updateUsingHEAD_1
2019-03-26 11:17:43 -Generating unique operation named: updateUsingPOST_1
2019-03-26 11:17:43 -Generating unique operation named: updateUsingPUT_1
2019-03-26 11:17:43 -Generating unique operation named: updateUsingPATCH_1
2019-03-26 11:17:43 -Generating unique operation named: updateUsingDELETE_1
2019-03-26 11:17:43 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-26 11:17:43 -Generating unique operation named: updateUsingTRACE_1
2019-03-26 11:17:43 -Generating unique operation named: addUsingGET_2
2019-03-26 11:17:43 -Generating unique operation named: editUsingGET_2
2019-03-26 11:17:43 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-26 11:17:43 -Generating unique operation named: listUsingGET_2
2019-03-26 11:17:43 -Generating unique operation named: removeUsingPOST_4
2019-03-26 11:17:43 -Generating unique operation named: removeUsingPOST_5
2019-03-26 11:17:43 -Generating unique operation named: saveUsingPOST_2
2019-03-26 11:17:43 -Generating unique operation named: updateUsingPOST_2
2019-03-26 11:17:43 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-26 11:17:43 -Generating unique operation named: addUsingGET_3
2019-03-26 11:17:43 -Generating unique operation named: editUsingGET_3
2019-03-26 11:17:43 -Generating unique operation named: listUsingGET_3
2019-03-26 11:17:43 -Generating unique operation named: removeUsingPOST_6
2019-03-26 11:17:43 -Generating unique operation named: removeUsingPOST_7
2019-03-26 11:17:43 -Generating unique operation named: saveUsingPOST_3
2019-03-26 11:17:43 -Generating unique operation named: updateUsingGET_2
2019-03-26 11:17:43 -Generating unique operation named: updateUsingHEAD_2
2019-03-26 11:17:44 -Generating unique operation named: updateUsingPOST_3
2019-03-26 11:17:44 -Generating unique operation named: updateUsingPUT_2
2019-03-26 11:17:44 -Generating unique operation named: updateUsingPATCH_2
2019-03-26 11:17:44 -Generating unique operation named: updateUsingDELETE_2
2019-03-26 11:17:44 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-26 11:17:44 -Generating unique operation named: updateUsingTRACE_2
2019-03-26 11:17:44 -Generating unique operation named: addUsingGET_4
2019-03-26 11:17:44 -Generating unique operation named: editUsingGET_4
2019-03-26 11:17:44 -Generating unique operation named: listUsingGET_4
2019-03-26 11:17:44 -Generating unique operation named: removeUsingPOST_8
2019-03-26 11:17:44 -Generating unique operation named: removeUsingPOST_9
2019-03-26 11:17:44 -Generating unique operation named: saveUsingPOST_4
2019-03-26 11:17:44 -Generating unique operation named: updateUsingGET_3
2019-03-26 11:17:44 -Generating unique operation named: updateUsingHEAD_3
2019-03-26 11:17:44 -Generating unique operation named: updateUsingPOST_4
2019-03-26 11:17:44 -Generating unique operation named: updateUsingPUT_3
2019-03-26 11:17:44 -Generating unique operation named: updateUsingPATCH_3
2019-03-26 11:17:44 -Generating unique operation named: updateUsingDELETE_3
2019-03-26 11:17:44 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-26 11:17:44 -Generating unique operation named: updateUsingTRACE_3
2019-03-26 11:17:44 -Generating unique operation named: ElecUsingGET_1
2019-03-26 11:17:44 -Generating unique operation named: addUsingGET_5
2019-03-26 11:17:44 -Generating unique operation named: editUsingGET_5
2019-03-26 11:17:44 -Generating unique operation named: listUsingGET_5
2019-03-26 11:17:44 -Generating unique operation named: removeUsingPOST_10
2019-03-26 11:17:44 -Generating unique operation named: removeUsingPOST_11
2019-03-26 11:17:44 -Generating unique operation named: saveUsingPOST_5
2019-03-26 11:17:44 -Generating unique operation named: updateUsingGET_4
2019-03-26 11:17:44 -Generating unique operation named: updateUsingHEAD_4
2019-03-26 11:17:44 -Generating unique operation named: updateUsingPOST_5
2019-03-26 11:17:44 -Generating unique operation named: updateUsingPUT_4
2019-03-26 11:17:44 -Generating unique operation named: updateUsingPATCH_4
2019-03-26 11:17:44 -Generating unique operation named: updateUsingDELETE_4
2019-03-26 11:17:44 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-26 11:17:44 -Generating unique operation named: updateUsingTRACE_4
2019-03-26 11:17:44 -Generating unique operation named: editUsingGET_6
2019-03-26 11:17:44 -Generating unique operation named: listUsingGET_6
2019-03-26 11:17:44 -Generating unique operation named: updateUsingPOST_6
2019-03-26 11:17:44 -Generating unique operation named: addUsingGET_6
2019-03-26 11:17:44 -Generating unique operation named: editUsingGET_7
2019-03-26 11:17:44 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-26 11:17:44 -Generating unique operation named: listUsingGET_7
2019-03-26 11:17:44 -Generating unique operation named: removeUsingPOST_12
2019-03-26 11:17:44 -Generating unique operation named: removeUsingPOST_13
2019-03-26 11:17:44 -Generating unique operation named: saveUsingPOST_6
2019-03-26 11:17:44 -Generating unique operation named: updateUsingGET_5
2019-03-26 11:17:44 -Generating unique operation named: updateUsingHEAD_5
2019-03-26 11:17:44 -Generating unique operation named: updateUsingPOST_7
2019-03-26 11:17:44 -Generating unique operation named: updateUsingPUT_5
2019-03-26 11:17:44 -Generating unique operation named: updateUsingPATCH_5
2019-03-26 11:17:44 -Generating unique operation named: updateUsingDELETE_5
2019-03-26 11:17:44 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-26 11:17:44 -Generating unique operation named: updateUsingTRACE_5
2019-03-26 11:17:44 -Generating unique operation named: exprotExcelUsingGET_4
2019-03-26 11:17:44 -Generating unique operation named: addUsingGET_7
2019-03-26 11:17:44 -Generating unique operation named: editUsingGET_8
2019-03-26 11:17:44 -Generating unique operation named: listUsingGET_8
2019-03-26 11:17:44 -Generating unique operation named: removeUsingPOST_14
2019-03-26 11:17:44 -Generating unique operation named: removeUsingPOST_15
2019-03-26 11:17:44 -Generating unique operation named: saveUsingPOST_7
2019-03-26 11:17:44 -Generating unique operation named: updateUsingGET_6
2019-03-26 11:17:44 -Generating unique operation named: updateUsingHEAD_6
2019-03-26 11:17:44 -Generating unique operation named: updateUsingPOST_8
2019-03-26 11:17:44 -Generating unique operation named: updateUsingPUT_6
2019-03-26 11:17:44 -Generating unique operation named: updateUsingPATCH_6
2019-03-26 11:17:44 -Generating unique operation named: updateUsingDELETE_6
2019-03-26 11:17:44 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-26 11:17:44 -Generating unique operation named: updateUsingTRACE_6
2019-03-26 11:17:44 -Generating unique operation named: addUsingGET_8
2019-03-26 11:17:44 -Generating unique operation named: editUsingGET_9
2019-03-26 11:17:44 -Generating unique operation named: listUsingGET_9
2019-03-26 11:17:44 -Generating unique operation named: removeUsingPOST_16
2019-03-26 11:17:44 -Generating unique operation named: removeUsingPOST_17
2019-03-26 11:17:44 -Generating unique operation named: saveUsingPOST_8
2019-03-26 11:17:44 -Generating unique operation named: updateUsingGET_7
2019-03-26 11:17:44 -Generating unique operation named: updateUsingHEAD_7
2019-03-26 11:17:44 -Generating unique operation named: updateUsingPOST_9
2019-03-26 11:17:44 -Generating unique operation named: updateUsingPUT_7
2019-03-26 11:17:44 -Generating unique operation named: updateUsingPATCH_7
2019-03-26 11:17:44 -Generating unique operation named: updateUsingDELETE_7
2019-03-26 11:17:44 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-26 11:17:44 -Generating unique operation named: updateUsingTRACE_7
2019-03-26 11:17:44 -Generating unique operation named: addUsingGET_9
2019-03-26 11:17:44 -Generating unique operation named: editUsingGET_10
2019-03-26 11:17:44 -Generating unique operation named: infoUsingGET_1
2019-03-26 11:17:44 -Generating unique operation named: infoUsingHEAD_1
2019-03-26 11:17:44 -Generating unique operation named: infoUsingPOST_1
2019-03-26 11:17:44 -Generating unique operation named: infoUsingPUT_1
2019-03-26 11:17:44 -Generating unique operation named: infoUsingPATCH_1
2019-03-26 11:17:44 -Generating unique operation named: infoUsingDELETE_1
2019-03-26 11:17:44 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-26 11:17:45 -Generating unique operation named: infoUsingTRACE_1
2019-03-26 11:17:45 -Generating unique operation named: listUsingGET_10
2019-03-26 11:17:45 -Generating unique operation named: removeUsingPOST_18
2019-03-26 11:17:45 -Generating unique operation named: removeUsingPOST_19
2019-03-26 11:17:45 -Generating unique operation named: saveUsingPOST_9
2019-03-26 11:17:45 -Generating unique operation named: updateUsingPOST_10
2019-03-26 11:17:45 -Generating unique operation named: listUsingGET_11
2019-03-26 11:17:45 -Generating unique operation named: removeUsingPOST_20
2019-03-26 11:17:45 -Generating unique operation named: welcomeUsingGET_1
2019-03-26 11:17:45 -Generating unique operation named: addUsingGET_10
2019-03-26 11:17:45 -Generating unique operation named: editUsingGET_11
2019-03-26 11:17:45 -Generating unique operation named: listUsingGET_12
2019-03-26 11:17:45 -Generating unique operation named: removeUsingPOST_21
2019-03-26 11:17:45 -Generating unique operation named: saveUsingPOST_10
2019-03-26 11:17:45 -Generating unique operation named: treeUsingGET_1
2019-03-26 11:17:45 -Generating unique operation named: treeUsingGET_2
2019-03-26 11:17:45 -Generating unique operation named: updateUsingPOST_11
2019-03-26 11:17:45 -Generating unique operation named: addUsingGET_11
2019-03-26 11:17:45 -Generating unique operation named: editUsingGET_12
2019-03-26 11:17:45 -Generating unique operation named: listUsingGET_13
2019-03-26 11:17:45 -Generating unique operation named: removeUsingPOST_22
2019-03-26 11:17:45 -Generating unique operation named: removeUsingPOST_23
2019-03-26 11:17:45 -Generating unique operation named: saveUsingPOST_11
2019-03-26 11:17:45 -Generating unique operation named: updateUsingGET_8
2019-03-26 11:17:45 -Generating unique operation named: updateUsingHEAD_8
2019-03-26 11:17:45 -Generating unique operation named: updateUsingPOST_12
2019-03-26 11:17:45 -Generating unique operation named: updateUsingPUT_8
2019-03-26 11:17:45 -Generating unique operation named: updateUsingPATCH_8
2019-03-26 11:17:45 -Generating unique operation named: updateUsingDELETE_8
2019-03-26 11:17:45 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-26 11:17:45 -Generating unique operation named: updateUsingTRACE_8
2019-03-26 11:17:45 -Generating unique operation named: addUsingGET_12
2019-03-26 11:17:45 -Generating unique operation named: editUsingGET_13
2019-03-26 11:17:45 -Generating unique operation named: listUsingGET_14
2019-03-26 11:17:45 -Generating unique operation named: removeUsingPOST_24
2019-03-26 11:17:45 -Generating unique operation named: removeUsingPOST_25
2019-03-26 11:17:45 -Generating unique operation named: saveUsingPOST_12
2019-03-26 11:17:45 -Generating unique operation named: updateUsingGET_9
2019-03-26 11:17:45 -Generating unique operation named: updateUsingHEAD_9
2019-03-26 11:17:45 -Generating unique operation named: updateUsingPOST_13
2019-03-26 11:17:45 -Generating unique operation named: updateUsingPUT_9
2019-03-26 11:17:45 -Generating unique operation named: updateUsingPATCH_9
2019-03-26 11:17:45 -Generating unique operation named: updateUsingDELETE_9
2019-03-26 11:17:45 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-26 11:17:45 -Generating unique operation named: updateUsingTRACE_9
2019-03-26 11:17:45 -Generating unique operation named: addUsingGET_13
2019-03-26 11:17:45 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-26 11:17:45 -Generating unique operation named: editUsingGET_14
2019-03-26 11:17:45 -Generating unique operation named: listUsingGET_15
2019-03-26 11:17:45 -Generating unique operation named: saveUsingPOST_13
2019-03-26 11:17:45 -Generating unique operation named: saveUsingPOST_14
2019-03-26 11:17:45 -Generating unique operation named: updateUsingPOST_14
2019-03-26 11:17:45 -Generating unique operation named: listUsingGET_16
2019-03-26 11:17:45 -Generating unique operation named: listUsingHEAD_1
2019-03-26 11:17:45 -Generating unique operation named: listUsingPOST_1
2019-03-26 11:17:45 -Generating unique operation named: listUsingPUT_1
2019-03-26 11:17:45 -Generating unique operation named: listUsingPATCH_1
2019-03-26 11:17:45 -Generating unique operation named: listUsingDELETE_1
2019-03-26 11:17:45 -Generating unique operation named: listUsingOPTIONS_1
2019-03-26 11:17:45 -Generating unique operation named: listUsingTRACE_1
2019-03-26 11:17:46 -Generating unique operation named: addUsingGET_14
2019-03-26 11:17:46 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-26 11:17:46 -Generating unique operation named: editUsingGET_15
2019-03-26 11:17:46 -Generating unique operation named: listUsingGET_17
2019-03-26 11:17:46 -Generating unique operation named: removeUsingPOST_26
2019-03-26 11:17:46 -Generating unique operation named: saveUsingPOST_15
2019-03-26 11:17:46 -Generating unique operation named: treeUsingGET_3
2019-03-26 11:17:46 -Generating unique operation named: treeViewUsingGET_1
2019-03-26 11:17:46 -Generating unique operation named: updateUsingPOST_15
2019-03-26 11:17:46 -Generating unique operation named: addUsingGET_15
2019-03-26 11:17:46 -Generating unique operation named: editUsingGET_16
2019-03-26 11:17:46 -Generating unique operation named: exprotExcelUsingGET_5
2019-03-26 11:17:46 -Generating unique operation named: listUsingGET_18
2019-03-26 11:17:46 -Generating unique operation named: removeUsingPOST_27
2019-03-26 11:17:46 -Generating unique operation named: removeUsingPOST_28
2019-03-26 11:17:46 -Generating unique operation named: saveUsingPOST_16
2019-03-26 11:17:46 -Generating unique operation named: updateUsingGET_10
2019-03-26 11:17:46 -Generating unique operation named: updateUsingHEAD_10
2019-03-26 11:17:46 -Generating unique operation named: updateUsingPOST_16
2019-03-26 11:17:46 -Generating unique operation named: updateUsingPUT_10
2019-03-26 11:17:46 -Generating unique operation named: updateUsingPATCH_10
2019-03-26 11:17:46 -Generating unique operation named: updateUsingDELETE_10
2019-03-26 11:17:46 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-26 11:17:46 -Generating unique operation named: updateUsingTRACE_10
2019-03-26 11:17:46 -Generating unique operation named: exprotExcelUsingGET_6
2019-03-26 11:17:46 -Generating unique operation named: addUsingGET_16
2019-03-26 11:17:46 -Generating unique operation named: editUsingGET_17
2019-03-26 11:17:46 -Generating unique operation named: listUsingGET_19
2019-03-26 11:17:46 -Generating unique operation named: removeUsingPOST_29
2019-03-26 11:17:46 -Generating unique operation named: removeUsingPOST_30
2019-03-26 11:17:46 -Generating unique operation named: saveUsingPOST_17
2019-03-26 11:17:46 -Generating unique operation named: updateUsingGET_11
2019-03-26 11:17:46 -Generating unique operation named: updateUsingHEAD_11
2019-03-26 11:17:46 -Generating unique operation named: updateUsingPOST_17
2019-03-26 11:17:46 -Generating unique operation named: updateUsingPUT_11
2019-03-26 11:17:46 -Generating unique operation named: updateUsingPATCH_11
2019-03-26 11:17:46 -Generating unique operation named: updateUsingDELETE_11
2019-03-26 11:17:46 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-26 11:17:46 -Generating unique operation named: updateUsingTRACE_11
2019-03-26 11:17:46 -Generating unique operation named: addUsingGET_17
2019-03-26 11:17:46 -Generating unique operation named: editUsingGET_18
2019-03-26 11:17:46 -Generating unique operation named: listUsingGET_20
2019-03-26 11:17:46 -Generating unique operation named: removeUsingPOST_31
2019-03-26 11:17:46 -Generating unique operation named: removeUsingPOST_32
2019-03-26 11:17:46 -Generating unique operation named: saveUsingPOST_18
2019-03-26 11:17:46 -Generating unique operation named: updateUsingGET_12
2019-03-26 11:17:46 -Generating unique operation named: updateUsingHEAD_12
2019-03-26 11:17:46 -Generating unique operation named: updateUsingPOST_18
2019-03-26 11:17:46 -Generating unique operation named: updateUsingPUT_12
2019-03-26 11:17:46 -Generating unique operation named: updateUsingPATCH_12
2019-03-26 11:17:46 -Generating unique operation named: updateUsingDELETE_12
2019-03-26 11:17:46 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-26 11:17:46 -Generating unique operation named: updateUsingTRACE_12
2019-03-26 11:17:46 -Starting Quartz Scheduler now
2019-03-26 11:17:46 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-26 11:17:46 -Starting...
2019-03-26 11:17:46 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-26 11:17:46 -Started.
2019-03-26 11:17:46 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-26 11:17:46 -Using a shared selector for servlet write/read
2019-03-26 11:17:46 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-26 11:17:46 -Started BootdoApplication in 27.877 seconds (JVM running for 29.879)
2019-03-26 11:17:47 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-26 11:17:47 -==> Parameters: 
2019-03-26 11:17:47 -<==      Total: 1
2019-03-26 11:18:00 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-26 11:18:00 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-26 11:18:00 -FrameworkServlet 'dispatcherServlet': initialization completed in 63 ms
2019-03-26 11:18:00 -Enabling session validation scheduler...
2019-03-26 11:18:00 -请求地址 : http://localhost:8081/login;JSESSIONID=10144352-de2d-47b5-977e-f6cf924728d3
2019-03-26 11:18:00 -HTTP METHOD : GET
2019-03-26 11:18:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-26 11:18:00 -参数 : [{}]
2019-03-26 11:18:00 -耗时 : 6
2019-03-26 11:18:00 -返回值 : login
2019-03-26 11:18:02 -请求地址 : http://localhost:8081/getVerify
2019-03-26 11:18:02 -HTTP METHOD : GET
2019-03-26 11:18:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-26 11:18:02 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@17c42cef, org.apache.shiro.web.servlet.ShiroHttpServletResponse@8682770]
2019-03-26 11:18:07 -8016
2019-03-26 11:18:08 -耗时 : 5453
2019-03-26 11:18:08 -返回值 : null
2019-03-26 11:18:08 -请求地址 : http://localhost:8081/login
2019-03-26 11:18:08 -HTTP METHOD : GET
2019-03-26 11:18:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-26 11:18:08 -参数 : [{}]
2019-03-26 11:18:08 -耗时 : 0
2019-03-26 11:18:08 -返回值 : login
2019-03-26 11:18:18 -请求地址 : http://localhost:8081/login
2019-03-26 11:18:18 -HTTP METHOD : POST
2019-03-26 11:18:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-26 11:18:18 -参数 : [admin, 111111, 8016, org.apache.shiro.web.servlet.ShiroHttpServletRequest@146620a1]
2019-03-26 11:18:18 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-26 11:18:18 -==> Parameters: admin(String)
2019-03-26 11:18:18 -<==      Total: 1
2019-03-26 11:18:18 -耗时 : 314
2019-03-26 11:18:18 -返回值 : {msg=操作成功, code=0}
2019-03-26 11:18:18 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-03-26 11:18:18 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-26 11:18:18 -==> Parameters: 1(Long), admin(String), 登录(String), 314(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-26 11:18:18.512(Timestamp)
2019-03-26 11:18:18 -请求地址 : http://localhost:8081/index
2019-03-26 11:18:18 -HTTP METHOD : GET
2019-03-26 11:18:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-26 11:18:18 -参数 : [{}]
2019-03-26 11:18:18 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-26 11:18:18 -==> Parameters: 1(Long)
2019-03-26 11:18:18 -<==    Updates: 1
2019-03-26 11:18:18 -<==      Total: 46
2019-03-26 11:18:18 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-26 11:18:18 -==> Parameters: 138(Long)
2019-03-26 11:18:18 -<==      Total: 1
2019-03-26 11:18:18 -耗时 : 351
2019-03-26 11:18:18 -返回值 : index_v1
2019-03-26 11:18:18 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-26 11:18:18 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 351(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-26 11:18:18.981(Timestamp)
2019-03-26 11:18:19 -<==    Updates: 1
2019-03-26 11:18:19 -请求地址 : http://localhost:8081/main
2019-03-26 11:18:19 -HTTP METHOD : GET
2019-03-26 11:18:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-26 11:18:19 -参数 : []
2019-03-26 11:18:19 -耗时 : 1
2019-03-26 11:18:19 -返回值 : main
2019-03-26 11:18:19 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-26 11:18:19 -HTTP METHOD : GET
2019-03-26 11:18:19 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-26 11:18:19 -参数 : []
2019-03-26 11:18:19 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-26 11:18:19 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-26 11:18:19 -请求地址 : http://localhost:8081/main
2019-03-26 11:18:19 -HTTP METHOD : GET
2019-03-26 11:18:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-26 11:18:19 -参数 : []
2019-03-26 11:18:19 -耗时 : 0
2019-03-26 11:18:19 -返回值 : main
2019-03-26 11:18:19 -<==      Total: 0
2019-03-26 11:18:19 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-26 11:18:19 -==> Parameters: 1(Long), 0(String)
2019-03-26 11:18:19 -<==      Total: 1
2019-03-26 11:18:19 -耗时 : 174
2019-03-26 11:18:19 -返回值 : com.bootdo.common.utils.PageUtils@60ebdec5
2019-03-26 11:18:26 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-26 11:18:26 -==> Parameters: 1(Long)
2019-03-26 11:18:26 -<==      Total: 90
2019-03-26 11:18:26 -请求地址 : http://localhost:8081/print/print
2019-03-26 11:18:26 -HTTP METHOD : GET
2019-03-26 11:18:26 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-03-26 11:18:26 -参数 : []
2019-03-26 11:18:26 -耗时 : 1
2019-03-26 11:18:26 -返回值 : print/print/print
2019-03-26 11:18:27 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-26 11:18:27 -HTTP METHOD : GET
2019-03-26 11:18:27 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-26 11:18:27 -参数 : [userType]
2019-03-26 11:18:27 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-26 11:18:27 -==> Parameters: userType(String)
2019-03-26 11:18:27 -请求地址 : http://localhost:8081/print/print/list
2019-03-26 11:18:27 -HTTP METHOD : GET
2019-03-26 11:18:27 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-26 11:18:27 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-26 11:18:27 -<==      Total: 2
2019-03-26 11:18:27 -耗时 : 68
2019-03-26 11:18:27 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-26 11:18:27 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-03-26 11:18:27 -==> Parameters: 0(Integer), 10(Integer)
2019-03-26 11:18:27 -<==      Total: 3
2019-03-26 11:18:27 -==>  Preparing: select count(*) from print 
2019-03-26 11:18:27 -==> Parameters: 
2019-03-26 11:18:27 -<==      Total: 1
2019-03-26 11:18:27 -耗时 : 83
2019-03-26 11:18:27 -返回值 : com.bootdo.common.utils.PageUtils@47a7da7a
2019-03-26 11:18:39 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 4]
2019-03-26 11:18:44 -请求地址 : http://localhost:8081/print/print/list
2019-03-26 11:18:44 -HTTP METHOD : GET
2019-03-26 11:18:44 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-26 11:18:44 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=2019-03-26}]
2019-03-26 11:18:44 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE create_time = ? and `print_date` >= ? and `print_date` <= ? order by id asc limit ?, ? 
2019-03-26 11:18:44 -==> Parameters: 2019-03-26(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String), 0(Integer), 10(Integer)
2019-03-26 11:18:44 -<==      Total: 0
2019-03-26 11:18:44 -==>  Preparing: select count(*) from print WHERE create_time = ? and `print_date` >= ? and `print_date` <= ? 
2019-03-26 11:18:44 -==> Parameters: 2019-03-26(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String)
2019-03-26 11:18:44 -<==      Total: 1
2019-03-26 11:18:44 -耗时 : 15
2019-03-26 11:18:44 -返回值 : com.bootdo.common.utils.PageUtils@7141ce47
2019-03-26 11:18:45 -请求地址 : http://localhost:8081/print/print/list
2019-03-26 11:18:45 -HTTP METHOD : GET
2019-03-26 11:18:45 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-26 11:18:45 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=2019-03-26}]
2019-03-26 11:18:45 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE create_time = ? and `print_date` >= ? and `print_date` <= ? order by id asc limit ?, ? 
2019-03-26 11:18:45 -==> Parameters: 2019-03-26(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String), 0(Integer), 10(Integer)
2019-03-26 11:18:45 -<==      Total: 0
2019-03-26 11:18:45 -==>  Preparing: select count(*) from print WHERE create_time = ? and `print_date` >= ? and `print_date` <= ? 
2019-03-26 11:18:45 -==> Parameters: 2019-03-26(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String)
2019-03-26 11:18:45 -<==      Total: 1
2019-03-26 11:18:45 -耗时 : 18
2019-03-26 11:18:45 -返回值 : com.bootdo.common.utils.PageUtils@2f491ecd
2019-03-26 11:18:46 -请求地址 : http://localhost:8081/print/print/list
2019-03-26 11:18:46 -HTTP METHOD : GET
2019-03-26 11:18:46 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-26 11:18:46 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=2019-03-26}]
2019-03-26 11:18:46 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE create_time = ? and `print_date` >= ? and `print_date` <= ? order by id asc limit ?, ? 
2019-03-26 11:18:46 -==> Parameters: 2019-03-26(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String), 0(Integer), 10(Integer)
2019-03-26 11:18:46 -<==      Total: 0
2019-03-26 11:18:46 -==>  Preparing: select count(*) from print WHERE create_time = ? and `print_date` >= ? and `print_date` <= ? 
2019-03-26 11:18:46 -==> Parameters: 2019-03-26(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String)
2019-03-26 11:18:46 -<==      Total: 1
2019-03-26 11:18:46 -耗时 : 13
2019-03-26 11:18:46 -返回值 : com.bootdo.common.utils.PageUtils@5e22a67a
2019-03-26 11:18:46 -请求地址 : http://localhost:8081/print/print/list
2019-03-26 11:18:46 -HTTP METHOD : GET
2019-03-26 11:18:46 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-26 11:18:46 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=2019-03-26}]
2019-03-26 11:18:46 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE create_time = ? and `print_date` >= ? and `print_date` <= ? order by id asc limit ?, ? 
2019-03-26 11:18:46 -==> Parameters: 2019-03-26(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String), 0(Integer), 10(Integer)
2019-03-26 11:18:46 -<==      Total: 0
2019-03-26 11:18:46 -==>  Preparing: select count(*) from print WHERE create_time = ? and `print_date` >= ? and `print_date` <= ? 
2019-03-26 11:18:46 -==> Parameters: 2019-03-26(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String)
2019-03-26 11:18:46 -<==      Total: 1
2019-03-26 11:18:46 -耗时 : 12
2019-03-26 11:18:46 -返回值 : com.bootdo.common.utils.PageUtils@1817ab3c
2019-03-26 11:18:47 -请求地址 : http://localhost:8081/print/print/list
2019-03-26 11:18:47 -HTTP METHOD : GET
2019-03-26 11:18:47 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-26 11:18:47 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=2019-03-26}]
2019-03-26 11:18:47 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE create_time = ? and `print_date` >= ? and `print_date` <= ? order by id asc limit ?, ? 
2019-03-26 11:18:47 -==> Parameters: 2019-03-26(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String), 0(Integer), 10(Integer)
2019-03-26 11:18:47 -<==      Total: 0
2019-03-26 11:18:47 -==>  Preparing: select count(*) from print WHERE create_time = ? and `print_date` >= ? and `print_date` <= ? 
2019-03-26 11:18:47 -==> Parameters: 2019-03-26(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String)
2019-03-26 11:18:47 -<==      Total: 1
2019-03-26 11:18:47 -耗时 : 10
2019-03-26 11:18:47 -返回值 : com.bootdo.common.utils.PageUtils@171d6cb7
2019-03-26 11:18:54 -请求地址 : http://localhost:8081/print/print/list
2019-03-26 11:18:54 -HTTP METHOD : GET
2019-03-26 11:18:54 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-26 11:18:54 -参数 : [{limit=10, offset=0, userType=A, userOrg=, userId=, createTime=2019-03-26, type=A}]
2019-03-26 11:18:54 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE user_type = ? and create_time = ? and `print_date` >= ? and `print_date` <= ? order by id asc limit ?, ? 
2019-03-26 11:18:54 -==> Parameters: A(String), 2019-03-26(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String), 0(Integer), 10(Integer)
2019-03-26 11:18:54 -<==      Total: 0
2019-03-26 11:18:54 -==>  Preparing: select count(*) from print WHERE user_type = ? and create_time = ? and `print_date` >= ? and `print_date` <= ? 
2019-03-26 11:18:54 -==> Parameters: A(String), 2019-03-26(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String)
2019-03-26 11:18:54 -<==      Total: 1
2019-03-26 11:18:54 -耗时 : 26
2019-03-26 11:18:54 -返回值 : com.bootdo.common.utils.PageUtils@48434525
2019-03-26 11:18:54 -请求地址 : http://localhost:8081/print/print/list
2019-03-26 11:18:54 -HTTP METHOD : GET
2019-03-26 11:18:54 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-26 11:18:54 -参数 : [{limit=10, offset=0, userType=A, userOrg=, userId=, createTime=2019-03-26}]
2019-03-26 11:18:54 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE user_type = ? and create_time = ? and `print_date` >= ? and `print_date` <= ? order by id asc limit ?, ? 
2019-03-26 11:18:54 -==> Parameters: A(String), 2019-03-26(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String), 0(Integer), 10(Integer)
2019-03-26 11:18:54 -<==      Total: 0
2019-03-26 11:18:54 -==>  Preparing: select count(*) from print WHERE user_type = ? and create_time = ? and `print_date` >= ? and `print_date` <= ? 
2019-03-26 11:18:54 -==> Parameters: A(String), 2019-03-26(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String)
2019-03-26 11:18:54 -<==      Total: 1
2019-03-26 11:18:54 -耗时 : 10
2019-03-26 11:18:54 -返回值 : com.bootdo.common.utils.PageUtils@2a84c607
2019-03-26 11:18:56 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-26 11:18:56 -HTTP METHOD : GET
2019-03-26 11:18:56 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-26 11:18:56 -参数 : []
2019-03-26 11:18:56 -耗时 : 1
2019-03-26 11:18:56 -返回值 : system/dept/deptTree
2019-03-26 11:18:56 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-26 11:18:56 -HTTP METHOD : GET
2019-03-26 11:18:56 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-26 11:18:56 -参数 : []
2019-03-26 11:18:56 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-26 11:18:56 -==> Parameters: 
2019-03-26 11:18:56 -<==      Total: 3
2019-03-26 11:18:56 -耗时 : 61
2019-03-26 11:18:56 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-26 11:18:58 -请求地址 : http://localhost:8081/print/print/list
2019-03-26 11:18:58 -HTTP METHOD : GET
2019-03-26 11:18:58 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-26 11:18:58 -参数 : [{limit=10, offset=0, userType=A, userOrg=2, userId=, createTime=2019-03-26}]
2019-03-26 11:18:58 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE user_type = ? and user_org = ? and create_time = ? and `print_date` >= ? and `print_date` <= ? order by id asc limit ?, ? 
2019-03-26 11:18:58 -==> Parameters: A(String), 2(String), 2019-03-26(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String), 0(Integer), 10(Integer)
2019-03-26 11:18:58 -<==      Total: 0
2019-03-26 11:18:58 -==>  Preparing: select count(*) from print WHERE user_type = ? and user_org = ? and create_time = ? and `print_date` >= ? and `print_date` <= ? 
2019-03-26 11:18:58 -==> Parameters: A(String), 2(String), 2019-03-26(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String)
2019-03-26 11:18:58 -<==      Total: 1
2019-03-26 11:18:58 -耗时 : 14
2019-03-26 11:18:58 -返回值 : com.bootdo.common.utils.PageUtils@5ff731a4
2019-03-26 11:18:59 -请求地址 : http://localhost:8081/print/print/list
2019-03-26 11:18:59 -HTTP METHOD : GET
2019-03-26 11:18:59 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-26 11:18:59 -参数 : [{limit=10, offset=0, userType=A, userOrg=2, userId=, createTime=2019-03-26}]
2019-03-26 11:18:59 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE user_type = ? and user_org = ? and create_time = ? and `print_date` >= ? and `print_date` <= ? order by id asc limit ?, ? 
2019-03-26 11:18:59 -==> Parameters: A(String), 2(String), 2019-03-26(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String), 0(Integer), 10(Integer)
2019-03-26 11:18:59 -<==      Total: 0
2019-03-26 11:18:59 -==>  Preparing: select count(*) from print WHERE user_type = ? and user_org = ? and create_time = ? and `print_date` >= ? and `print_date` <= ? 
2019-03-26 11:18:59 -==> Parameters: A(String), 2(String), 2019-03-26(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String)
2019-03-26 11:18:59 -<==      Total: 1
2019-03-26 11:18:59 -耗时 : 9
2019-03-26 11:18:59 -返回值 : com.bootdo.common.utils.PageUtils@6782dac0
2019-03-26 11:19:31 -请求地址 : http://localhost:8081/index
2019-03-26 11:19:31 -HTTP METHOD : GET
2019-03-26 11:19:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-26 11:19:31 -参数 : [{}]
2019-03-26 11:19:31 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-26 11:19:31 -==> Parameters: 1(Long)
2019-03-26 11:19:32 -<==      Total: 46
2019-03-26 11:19:32 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-26 11:19:32 -==> Parameters: 138(Long)
2019-03-26 11:19:32 -<==      Total: 1
2019-03-26 11:19:32 -耗时 : 144
2019-03-26 11:19:32 -返回值 : index_v1
2019-03-26 11:19:32 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-26 11:19:32 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 145(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-26 11:19:32.079(Timestamp)
2019-03-26 11:19:32 -请求地址 : http://localhost:8081/main
2019-03-26 11:19:32 -HTTP METHOD : GET
2019-03-26 11:19:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-26 11:19:32 -参数 : []
2019-03-26 11:19:32 -耗时 : 1
2019-03-26 11:19:32 -返回值 : main
2019-03-26 11:19:32 -<==    Updates: 1
2019-03-26 11:19:32 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-26 11:19:32 -HTTP METHOD : GET
2019-03-26 11:19:32 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-26 11:19:32 -参数 : []
2019-03-26 11:19:32 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-26 11:19:32 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-26 11:19:32 -<==      Total: 0
2019-03-26 11:19:32 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-26 11:19:32 -==> Parameters: 1(Long), 0(String)
2019-03-26 11:19:32 -<==      Total: 1
2019-03-26 11:19:32 -耗时 : 44
2019-03-26 11:19:32 -返回值 : com.bootdo.common.utils.PageUtils@eb99f8d
2019-03-26 11:19:32 -请求地址 : http://localhost:8081/main
2019-03-26 11:19:32 -HTTP METHOD : GET
2019-03-26 11:19:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-26 11:19:32 -参数 : []
2019-03-26 11:19:32 -耗时 : 0
2019-03-26 11:19:32 -返回值 : main
2019-03-26 11:19:35 -请求地址 : http://localhost:8081/print/print
2019-03-26 11:19:35 -HTTP METHOD : GET
2019-03-26 11:19:35 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-03-26 11:19:35 -参数 : []
2019-03-26 11:19:35 -耗时 : 1
2019-03-26 11:19:35 -返回值 : print/print/print
2019-03-26 11:19:35 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-26 11:19:35 -HTTP METHOD : GET
2019-03-26 11:19:35 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-26 11:19:35 -参数 : [userType]
2019-03-26 11:19:35 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-26 11:19:35 -请求地址 : http://localhost:8081/print/print/list
2019-03-26 11:19:35 -==> Parameters: userType(String)
2019-03-26 11:19:35 -HTTP METHOD : GET
2019-03-26 11:19:35 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-26 11:19:35 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-26 11:19:35 -<==      Total: 2
2019-03-26 11:19:35 -耗时 : 6
2019-03-26 11:19:35 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-26 11:19:35 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-03-26 11:19:35 -==> Parameters: 0(Integer), 10(Integer)
2019-03-26 11:19:35 -<==      Total: 3
2019-03-26 11:19:35 -==>  Preparing: select count(*) from print 
2019-03-26 11:19:35 -==> Parameters: 
2019-03-26 11:19:35 -<==      Total: 1
2019-03-26 11:19:35 -耗时 : 23
2019-03-26 11:19:35 -返回值 : com.bootdo.common.utils.PageUtils@6e681cf7
2019-03-26 11:26:03 -请求地址 : http://localhost:8081/index
2019-03-26 11:26:03 -HTTP METHOD : GET
2019-03-26 11:26:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-26 11:26:03 -参数 : [{}]
2019-03-26 11:26:03 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-26 11:26:03 -==> Parameters: 1(Long)
2019-03-26 11:26:03 -<==      Total: 46
2019-03-26 11:26:03 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-26 11:26:03 -==> Parameters: 138(Long)
2019-03-26 11:26:03 -<==      Total: 1
2019-03-26 11:26:03 -耗时 : 26
2019-03-26 11:26:03 -返回值 : index_v1
2019-03-26 11:26:03 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-26 11:26:03 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 26(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-26 11:26:03.925(Timestamp)
2019-03-26 11:26:04 -<==    Updates: 1
2019-03-26 11:26:04 -请求地址 : http://localhost:8081/main
2019-03-26 11:26:04 -HTTP METHOD : GET
2019-03-26 11:26:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-26 11:26:04 -参数 : []
2019-03-26 11:26:04 -耗时 : 2
2019-03-26 11:26:04 -返回值 : main
2019-03-26 11:26:04 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-26 11:26:04 -HTTP METHOD : GET
2019-03-26 11:26:04 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-26 11:26:04 -参数 : []
2019-03-26 11:26:04 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-26 11:26:04 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-26 11:26:04 -<==      Total: 0
2019-03-26 11:26:04 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-26 11:26:04 -==> Parameters: 1(Long), 0(String)
2019-03-26 11:26:04 -<==      Total: 1
2019-03-26 11:26:04 -耗时 : 9
2019-03-26 11:26:04 -返回值 : com.bootdo.common.utils.PageUtils@74bbd88b
2019-03-26 11:26:04 -请求地址 : http://localhost:8081/main
2019-03-26 11:26:04 -HTTP METHOD : GET
2019-03-26 11:26:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-26 11:26:04 -参数 : []
2019-03-26 11:26:04 -耗时 : 0
2019-03-26 11:26:04 -返回值 : main
2019-03-26 11:26:06 -请求地址 : http://localhost:8081/print/print
2019-03-26 11:26:06 -HTTP METHOD : GET
2019-03-26 11:26:06 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-03-26 11:26:06 -参数 : []
2019-03-26 11:26:06 -耗时 : 1
2019-03-26 11:26:06 -返回值 : print/print/print
2019-03-26 11:26:07 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-26 11:26:07 -HTTP METHOD : GET
2019-03-26 11:26:07 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-26 11:26:07 -参数 : [userType]
2019-03-26 11:26:07 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-26 11:26:07 -==> Parameters: userType(String)
2019-03-26 11:26:07 -<==      Total: 2
2019-03-26 11:26:07 -耗时 : 4
2019-03-26 11:26:07 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-26 11:26:07 -请求地址 : http://localhost:8081/print/print/list
2019-03-26 11:26:07 -HTTP METHOD : GET
2019-03-26 11:26:07 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-26 11:26:07 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-26 11:26:07 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-03-26 11:26:07 -==> Parameters: 0(Integer), 10(Integer)
2019-03-26 11:26:07 -<==      Total: 3
2019-03-26 11:26:07 -==>  Preparing: select count(*) from print 
2019-03-26 11:26:07 -==> Parameters: 
2019-03-26 11:26:07 -<==      Total: 1
2019-03-26 11:26:07 -耗时 : 9
2019-03-26 11:26:07 -返回值 : com.bootdo.common.utils.PageUtils@32bb26fb
2019-03-26 11:26:16 -请求地址 : http://localhost:8081/print/print/edit/1
2019-03-26 11:26:16 -HTTP METHOD : GET
2019-03-26 11:26:16 -CLASS_METHOD : com.bootdo.print.controller.PrintController.edit
2019-03-26 11:26:16 -参数 : [1, {}]
2019-03-26 11:26:16 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-03-26 11:26:16 -==> Parameters: 1(Long)
2019-03-26 11:26:16 -<==      Total: 1
2019-03-26 11:26:16 -耗时 : 12
2019-03-26 11:26:16 -返回值 : print/print/edit
2019-03-26 11:26:16 -[THYMELEAF][http-nio-8081-exec-7] Exception processing template "print/print/edit": An error happened during template parsing (template: "class path resource [templates/print/print/edit.html]")
org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/print/print/edit.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:354)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:187)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1325)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1069)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.attoparser.ParseException: Exception evaluating SpringEL expression: "print.accountData" (template: "print/print/edit" - line 124, col 53)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 69 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "print.accountData" (template: "print/print/edit" - line 124, col 53)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:290)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:165)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:126)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleStandaloneElement(ProcessorTemplateHandler.java:918)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleStandaloneElementEnd(TemplateHandlerAdapterMarkupHandler.java:260)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleStandaloneElementEnd(InlinedOutputExpressionMarkupHandler.java:256)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleStandaloneElementEnd(OutputExpressionInlinePreProcessorHandler.java:169)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleStandaloneElementEnd(InlinedOutputExpressionMarkupHandler.java:104)
	at org.attoparser.HtmlVoidElement.handleOpenElementEnd(HtmlVoidElement.java:92)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 71 common frames omitted
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1008E: Property or field 'accountData' cannot be found on object of type 'com.bootdo.print.vo.PrintVo' - maybe not public or not valid?
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:217)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:407)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:89)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:111)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:334)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	... 90 common frames omitted
2019-03-26 11:26:16 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/print/print/edit.html]")] with root cause
org.springframework.expression.spel.SpelEvaluationException: EL1008E: Property or field 'accountData' cannot be found on object of type 'com.bootdo.print.vo.PrintVo' - maybe not public or not valid?
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:217)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:407)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:89)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:111)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:334)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:165)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:126)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleStandaloneElement(ProcessorTemplateHandler.java:918)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleStandaloneElementEnd(TemplateHandlerAdapterMarkupHandler.java:260)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleStandaloneElementEnd(InlinedOutputExpressionMarkupHandler.java:256)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleStandaloneElementEnd(OutputExpressionInlinePreProcessorHandler.java:169)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleStandaloneElementEnd(InlinedOutputExpressionMarkupHandler.java:104)
	at org.attoparser.HtmlVoidElement.handleOpenElementEnd(HtmlVoidElement.java:92)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:354)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:187)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1325)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1069)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-26 11:26:19 -请求地址 : http://localhost:8081/print/print/list
2019-03-26 11:26:19 -HTTP METHOD : GET
2019-03-26 11:26:19 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-26 11:26:19 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=2019-03-26}]
2019-03-26 11:26:19 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE create_time = ? and `print_date` >= ? and `print_date` <= ? order by id asc limit ?, ? 
2019-03-26 11:26:19 -==> Parameters: 2019-03-26(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String), 0(Integer), 10(Integer)
2019-03-26 11:26:19 -<==      Total: 0
2019-03-26 11:26:19 -==>  Preparing: select count(*) from print WHERE create_time = ? and `print_date` >= ? and `print_date` <= ? 
2019-03-26 11:26:19 -==> Parameters: 2019-03-26(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String)
2019-03-26 11:26:19 -<==      Total: 1
2019-03-26 11:26:19 -耗时 : 6
2019-03-26 11:26:19 -返回值 : com.bootdo.common.utils.PageUtils@2cfdaba
2019-03-26 11:26:19 -请求地址 : http://localhost:8081/print/print/list
2019-03-26 11:26:19 -HTTP METHOD : GET
2019-03-26 11:26:19 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-26 11:26:19 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=2019-03-26}]
2019-03-26 11:26:19 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE create_time = ? and `print_date` >= ? and `print_date` <= ? order by id asc limit ?, ? 
2019-03-26 11:26:19 -==> Parameters: 2019-03-26(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String), 0(Integer), 10(Integer)
2019-03-26 11:26:19 -<==      Total: 0
2019-03-26 11:26:19 -==>  Preparing: select count(*) from print WHERE create_time = ? and `print_date` >= ? and `print_date` <= ? 
2019-03-26 11:26:19 -==> Parameters: 2019-03-26(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String)
2019-03-26 11:26:19 -<==      Total: 1
2019-03-26 11:26:19 -耗时 : 16
2019-03-26 11:26:19 -返回值 : com.bootdo.common.utils.PageUtils@1d022dc0
2019-03-26 11:26:20 -请求地址 : http://localhost:8081/print/print/list
2019-03-26 11:26:20 -HTTP METHOD : GET
2019-03-26 11:26:20 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-26 11:26:20 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=2019-03-26}]
2019-03-26 11:26:20 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE create_time = ? and `print_date` >= ? and `print_date` <= ? order by id asc limit ?, ? 
2019-03-26 11:26:20 -==> Parameters: 2019-03-26(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String), 0(Integer), 10(Integer)
2019-03-26 11:26:20 -<==      Total: 0
2019-03-26 11:26:20 -==>  Preparing: select count(*) from print WHERE create_time = ? and `print_date` >= ? and `print_date` <= ? 
2019-03-26 11:26:20 -==> Parameters: 2019-03-26(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String)
2019-03-26 11:26:20 -<==      Total: 1
2019-03-26 11:26:20 -耗时 : 7
2019-03-26 11:26:20 -返回值 : com.bootdo.common.utils.PageUtils@7fc5b9fc
2019-03-26 11:26:20 -请求地址 : http://localhost:8081/print/print/list
2019-03-26 11:26:20 -HTTP METHOD : GET
2019-03-26 11:26:20 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-26 11:26:20 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=2019-03-26}]
2019-03-26 11:26:20 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE create_time = ? and `print_date` >= ? and `print_date` <= ? order by id asc limit ?, ? 
2019-03-26 11:26:20 -==> Parameters: 2019-03-26(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String), 0(Integer), 10(Integer)
2019-03-26 11:26:20 -<==      Total: 0
2019-03-26 11:26:20 -==>  Preparing: select count(*) from print WHERE create_time = ? and `print_date` >= ? and `print_date` <= ? 
2019-03-26 11:26:20 -==> Parameters: 2019-03-26(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String)
2019-03-26 11:26:20 -<==      Total: 1
2019-03-26 11:26:20 -耗时 : 7
2019-03-26 11:26:20 -返回值 : com.bootdo.common.utils.PageUtils@71b0ceba
2019-03-26 11:26:21 -请求地址 : http://localhost:8081/print/print/list
2019-03-26 11:26:21 -HTTP METHOD : GET
2019-03-26 11:26:21 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-26 11:26:21 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=2019-03-26}]
2019-03-26 11:26:21 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE create_time = ? and `print_date` >= ? and `print_date` <= ? order by id asc limit ?, ? 
2019-03-26 11:26:21 -==> Parameters: 2019-03-26(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String), 0(Integer), 10(Integer)
2019-03-26 11:26:21 -<==      Total: 0
2019-03-26 11:26:21 -==>  Preparing: select count(*) from print WHERE create_time = ? and `print_date` >= ? and `print_date` <= ? 
2019-03-26 11:26:21 -==> Parameters: 2019-03-26(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String)
2019-03-26 11:26:21 -<==      Total: 1
2019-03-26 11:26:21 -耗时 : 7
2019-03-26 11:26:21 -返回值 : com.bootdo.common.utils.PageUtils@1cfbee97
2019-03-26 11:26:21 -请求地址 : http://localhost:8081/print/print/list
2019-03-26 11:26:21 -HTTP METHOD : GET
2019-03-26 11:26:21 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-26 11:26:21 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=2019-03-26}]
2019-03-26 11:26:21 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE create_time = ? and `print_date` >= ? and `print_date` <= ? order by id asc limit ?, ? 
2019-03-26 11:26:21 -==> Parameters: 2019-03-26(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String), 0(Integer), 10(Integer)
2019-03-26 11:26:21 -<==      Total: 0
2019-03-26 11:26:21 -==>  Preparing: select count(*) from print WHERE create_time = ? and `print_date` >= ? and `print_date` <= ? 
2019-03-26 11:26:21 -==> Parameters: 2019-03-26(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String)
2019-03-26 11:26:21 -<==      Total: 1
2019-03-26 11:26:21 -耗时 : 8
2019-03-26 11:26:21 -返回值 : com.bootdo.common.utils.PageUtils@3f479463
2019-03-26 11:26:22 -请求地址 : http://localhost:8081/print/print/list
2019-03-26 11:26:22 -HTTP METHOD : GET
2019-03-26 11:26:22 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-26 11:26:22 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=2019-03-26}]
2019-03-26 11:26:22 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE create_time = ? and `print_date` >= ? and `print_date` <= ? order by id asc limit ?, ? 
2019-03-26 11:26:22 -==> Parameters: 2019-03-26(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String), 0(Integer), 10(Integer)
2019-03-26 11:26:22 -<==      Total: 0
2019-03-26 11:26:22 -==>  Preparing: select count(*) from print WHERE create_time = ? and `print_date` >= ? and `print_date` <= ? 
2019-03-26 11:26:22 -==> Parameters: 2019-03-26(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String)
2019-03-26 11:26:22 -<==      Total: 1
2019-03-26 11:26:22 -耗时 : 9
2019-03-26 11:26:22 -返回值 : com.bootdo.common.utils.PageUtils@2132480
2019-03-26 11:26:23 -请求地址 : http://localhost:8081/print/print/list
2019-03-26 11:26:23 -HTTP METHOD : GET
2019-03-26 11:26:23 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-26 11:26:23 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=2019-03-26}]
2019-03-26 11:26:23 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE create_time = ? and `print_date` >= ? and `print_date` <= ? order by id asc limit ?, ? 
2019-03-26 11:26:23 -==> Parameters: 2019-03-26(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String), 0(Integer), 10(Integer)
2019-03-26 11:26:23 -<==      Total: 0
2019-03-26 11:26:23 -==>  Preparing: select count(*) from print WHERE create_time = ? and `print_date` >= ? and `print_date` <= ? 
2019-03-26 11:26:23 -==> Parameters: 2019-03-26(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String)
2019-03-26 11:26:23 -<==      Total: 1
2019-03-26 11:26:23 -耗时 : 8
2019-03-26 11:26:23 -返回值 : com.bootdo.common.utils.PageUtils@1ce513a3
2019-03-26 11:26:23 -请求地址 : http://localhost:8081/print/print/list
2019-03-26 11:26:23 -HTTP METHOD : GET
2019-03-26 11:26:23 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-26 11:26:23 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=2019-03-26}]
2019-03-26 11:26:23 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE create_time = ? and `print_date` >= ? and `print_date` <= ? order by id asc limit ?, ? 
2019-03-26 11:26:23 -==> Parameters: 2019-03-26(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String), 0(Integer), 10(Integer)
2019-03-26 11:26:23 -<==      Total: 0
2019-03-26 11:26:23 -==>  Preparing: select count(*) from print WHERE create_time = ? and `print_date` >= ? and `print_date` <= ? 
2019-03-26 11:26:23 -==> Parameters: 2019-03-26(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String)
2019-03-26 11:26:23 -<==      Total: 1
2019-03-26 11:26:23 -耗时 : 5
2019-03-26 11:26:23 -返回值 : com.bootdo.common.utils.PageUtils@798c331e
2019-03-26 11:26:24 -请求地址 : http://localhost:8081/print/print/list
2019-03-26 11:26:24 -HTTP METHOD : GET
2019-03-26 11:26:24 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-26 11:26:24 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=2019-03-26}]
2019-03-26 11:26:24 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE create_time = ? and `print_date` >= ? and `print_date` <= ? order by id asc limit ?, ? 
2019-03-26 11:26:24 -==> Parameters: 2019-03-26(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String), 0(Integer), 10(Integer)
2019-03-26 11:26:24 -<==      Total: 0
2019-03-26 11:26:24 -==>  Preparing: select count(*) from print WHERE create_time = ? and `print_date` >= ? and `print_date` <= ? 
2019-03-26 11:26:24 -==> Parameters: 2019-03-26(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String)
2019-03-26 11:26:24 -<==      Total: 1
2019-03-26 11:26:24 -耗时 : 9
2019-03-26 11:26:24 -返回值 : com.bootdo.common.utils.PageUtils@a668be5
2019-03-26 11:26:24 -请求地址 : http://localhost:8081/print/print/list
2019-03-26 11:26:24 -HTTP METHOD : GET
2019-03-26 11:26:24 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-26 11:26:24 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=2019-03-26}]
2019-03-26 11:26:24 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE create_time = ? and `print_date` >= ? and `print_date` <= ? order by id asc limit ?, ? 
2019-03-26 11:26:24 -==> Parameters: 2019-03-26(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String), 0(Integer), 10(Integer)
2019-03-26 11:26:24 -<==      Total: 0
2019-03-26 11:26:24 -==>  Preparing: select count(*) from print WHERE create_time = ? and `print_date` >= ? and `print_date` <= ? 
2019-03-26 11:26:24 -==> Parameters: 2019-03-26(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String)
2019-03-26 11:26:24 -<==      Total: 1
2019-03-26 11:26:24 -耗时 : 6
2019-03-26 11:26:24 -返回值 : com.bootdo.common.utils.PageUtils@51f131e6
2019-03-26 11:26:38 -请求地址 : http://localhost:8081/print/print/edit/1
2019-03-26 11:26:38 -HTTP METHOD : GET
2019-03-26 11:26:38 -CLASS_METHOD : com.bootdo.print.controller.PrintController.edit
2019-03-26 11:26:38 -参数 : [1, {}]
2019-03-26 11:26:38 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-03-26 11:26:38 -==> Parameters: 1(Long)
2019-03-26 11:26:38 -<==      Total: 1
2019-03-26 11:26:38 -耗时 : 10
2019-03-26 11:26:38 -返回值 : print/print/edit
2019-03-26 11:26:38 -[THYMELEAF][http-nio-8081-exec-10] Exception processing template "print/print/edit": An error happened during template parsing (template: "class path resource [templates/print/print/edit.html]")
org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/print/print/edit.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:354)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:187)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1325)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1069)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.attoparser.ParseException: Exception evaluating SpringEL expression: "print.accountData" (template: "print/print/edit" - line 124, col 53)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 69 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "print.accountData" (template: "print/print/edit" - line 124, col 53)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:290)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:165)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:126)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleStandaloneElement(ProcessorTemplateHandler.java:918)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleStandaloneElementEnd(TemplateHandlerAdapterMarkupHandler.java:260)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleStandaloneElementEnd(InlinedOutputExpressionMarkupHandler.java:256)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleStandaloneElementEnd(OutputExpressionInlinePreProcessorHandler.java:169)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleStandaloneElementEnd(InlinedOutputExpressionMarkupHandler.java:104)
	at org.attoparser.HtmlVoidElement.handleOpenElementEnd(HtmlVoidElement.java:92)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 71 common frames omitted
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1008E: Property or field 'accountData' cannot be found on object of type 'com.bootdo.print.vo.PrintVo' - maybe not public or not valid?
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:217)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:407)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:89)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:111)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:334)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	... 90 common frames omitted
2019-03-26 11:26:38 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/print/print/edit.html]")] with root cause
org.springframework.expression.spel.SpelEvaluationException: EL1008E: Property or field 'accountData' cannot be found on object of type 'com.bootdo.print.vo.PrintVo' - maybe not public or not valid?
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:217)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:407)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:89)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:111)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:334)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:165)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:126)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleStandaloneElement(ProcessorTemplateHandler.java:918)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleStandaloneElementEnd(TemplateHandlerAdapterMarkupHandler.java:260)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleStandaloneElementEnd(InlinedOutputExpressionMarkupHandler.java:256)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleStandaloneElementEnd(OutputExpressionInlinePreProcessorHandler.java:169)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleStandaloneElementEnd(InlinedOutputExpressionMarkupHandler.java:104)
	at org.attoparser.HtmlVoidElement.handleOpenElementEnd(HtmlVoidElement.java:92)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:354)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:187)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1325)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1069)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-26 11:28:44 -请求地址 : http://localhost:8081/index
2019-03-26 11:28:44 -HTTP METHOD : GET
2019-03-26 11:28:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-26 11:28:44 -参数 : [{}]
2019-03-26 11:28:44 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-26 11:28:44 -==> Parameters: 1(Long)
2019-03-26 11:28:44 -<==      Total: 46
2019-03-26 11:28:44 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-26 11:28:44 -==> Parameters: 138(Long)
2019-03-26 11:28:44 -<==      Total: 1
2019-03-26 11:28:44 -耗时 : 189
2019-03-26 11:28:44 -返回值 : index_v1
2019-03-26 11:28:44 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-26 11:28:44 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 189(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-26 11:28:44.34(Timestamp)
2019-03-26 11:28:44 -<==    Updates: 1
2019-03-26 11:28:44 -请求地址 : http://localhost:8081/main
2019-03-26 11:28:44 -HTTP METHOD : GET
2019-03-26 11:28:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-26 11:28:44 -参数 : []
2019-03-26 11:28:44 -耗时 : 1
2019-03-26 11:28:44 -返回值 : main
2019-03-26 11:28:44 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-26 11:28:44 -HTTP METHOD : GET
2019-03-26 11:28:44 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-26 11:28:44 -参数 : []
2019-03-26 11:28:44 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-26 11:28:44 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-26 11:28:44 -<==      Total: 0
2019-03-26 11:28:44 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-26 11:28:44 -==> Parameters: 1(Long), 0(String)
2019-03-26 11:28:44 -<==      Total: 1
2019-03-26 11:28:44 -耗时 : 5
2019-03-26 11:28:44 -返回值 : com.bootdo.common.utils.PageUtils@4e1ad952
2019-03-26 11:28:44 -请求地址 : http://localhost:8081/main
2019-03-26 11:28:44 -HTTP METHOD : GET
2019-03-26 11:28:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-26 11:28:44 -参数 : []
2019-03-26 11:28:44 -耗时 : 2
2019-03-26 11:28:44 -返回值 : main
2019-03-26 11:28:47 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-26 11:28:47 -==> Parameters: 1(Long)
2019-03-26 11:28:47 -<==      Total: 90
2019-03-26 11:28:47 -请求地址 : http://localhost:8081/print/print
2019-03-26 11:28:47 -HTTP METHOD : GET
2019-03-26 11:28:47 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-03-26 11:28:47 -参数 : []
2019-03-26 11:28:47 -耗时 : 1
2019-03-26 11:28:47 -返回值 : print/print/print
2019-03-26 11:28:47 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-26 11:28:47 -HTTP METHOD : GET
2019-03-26 11:28:47 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-26 11:28:47 -参数 : [userType]
2019-03-26 11:28:47 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-26 11:28:47 -==> Parameters: userType(String)
2019-03-26 11:28:47 -<==      Total: 2
2019-03-26 11:28:47 -耗时 : 4
2019-03-26 11:28:47 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-26 11:28:47 -请求地址 : http://localhost:8081/print/print/list
2019-03-26 11:28:47 -HTTP METHOD : GET
2019-03-26 11:28:47 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-26 11:28:47 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-26 11:28:47 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-03-26 11:28:47 -==> Parameters: 0(Integer), 10(Integer)
2019-03-26 11:28:47 -<==      Total: 3
2019-03-26 11:28:47 -==>  Preparing: select count(*) from print 
2019-03-26 11:28:47 -==> Parameters: 
2019-03-26 11:28:47 -<==      Total: 1
2019-03-26 11:28:47 -耗时 : 7
2019-03-26 11:28:47 -返回值 : com.bootdo.common.utils.PageUtils@c4a05a
2019-03-26 11:28:51 -请求地址 : http://localhost:8081/print/print/list
2019-03-26 11:28:51 -HTTP METHOD : GET
2019-03-26 11:28:51 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-26 11:28:51 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=2019-03-26}]
2019-03-26 11:28:51 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE create_time = ? and `print_date` >= ? and `print_date` <= ? order by id asc limit ?, ? 
2019-03-26 11:28:51 -==> Parameters: 2019-03-26(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String), 0(Integer), 10(Integer)
2019-03-26 11:28:51 -<==      Total: 0
2019-03-26 11:28:51 -==>  Preparing: select count(*) from print WHERE create_time = ? and `print_date` >= ? and `print_date` <= ? 
2019-03-26 11:28:51 -==> Parameters: 2019-03-26(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String)
2019-03-26 11:28:51 -<==      Total: 1
2019-03-26 11:28:51 -耗时 : 4
2019-03-26 11:28:51 -返回值 : com.bootdo.common.utils.PageUtils@7b04f663
2019-03-26 11:28:52 -请求地址 : http://localhost:8081/print/print/list
2019-03-26 11:28:52 -HTTP METHOD : GET
2019-03-26 11:28:52 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-26 11:28:52 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=2019-03-26}]
2019-03-26 11:28:52 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE create_time = ? and `print_date` >= ? and `print_date` <= ? order by id asc limit ?, ? 
2019-03-26 11:28:52 -==> Parameters: 2019-03-26(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String), 0(Integer), 10(Integer)
2019-03-26 11:28:52 -<==      Total: 0
2019-03-26 11:28:52 -==>  Preparing: select count(*) from print WHERE create_time = ? and `print_date` >= ? and `print_date` <= ? 
2019-03-26 11:28:52 -==> Parameters: 2019-03-26(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String)
2019-03-26 11:28:52 -<==      Total: 1
2019-03-26 11:28:52 -耗时 : 7
2019-03-26 11:28:52 -返回值 : com.bootdo.common.utils.PageUtils@57e6e2ce
2019-03-26 11:28:52 -请求地址 : http://localhost:8081/print/print/list
2019-03-26 11:28:52 -HTTP METHOD : GET
2019-03-26 11:28:52 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-26 11:28:52 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=2019-03-26}]
2019-03-26 11:28:52 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE create_time = ? and `print_date` >= ? and `print_date` <= ? order by id asc limit ?, ? 
2019-03-26 11:28:52 -==> Parameters: 2019-03-26(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String), 0(Integer), 10(Integer)
2019-03-26 11:28:52 -<==      Total: 0
2019-03-26 11:28:52 -==>  Preparing: select count(*) from print WHERE create_time = ? and `print_date` >= ? and `print_date` <= ? 
2019-03-26 11:28:52 -==> Parameters: 2019-03-26(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String)
2019-03-26 11:28:52 -<==      Total: 1
2019-03-26 11:28:52 -耗时 : 8
2019-03-26 11:28:52 -返回值 : com.bootdo.common.utils.PageUtils@5f481063
2019-03-26 11:31:01 -Starting BootdoApplication on ZJZL-20180906VX with PID 9800 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-26 11:31:01 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-26 11:31:01 -The following profiles are active: dev
2019-03-26 11:31:01 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3a62c01e: startup date [Tue Mar 26 11:31:01 CST 2019]; root of context hierarchy
2019-03-26 11:31:06 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-26 11:31:08 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$6e0131fc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 11:31:09 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$605a60a3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 11:31:09 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 11:31:10 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 11:31:10 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 11:31:10 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-26 11:31:10 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-26 11:31:10 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 11:31:10 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 11:31:10 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 11:31:10 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 11:31:11 -Tomcat initialized with port(s): 8081 (http)
2019-03-26 11:31:11 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-26 11:31:12 -Starting service [Tomcat]
2019-03-26 11:31:12 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-26 11:31:12 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-26 11:31:12 -Initializing Spring embedded WebApplicationContext
2019-03-26 11:31:12 -Root WebApplicationContext: initialization completed in 10441 ms
2019-03-26 11:31:13 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-26 11:31:13 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-26 11:31:13 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-26 11:31:13 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-26 11:31:13 -Filter xssFilter was not registered (disabled)
2019-03-26 11:31:13 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-26 11:31:13 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-26 11:31:13 -Servlet statViewServlet mapped to [/druid/*]
2019-03-26 11:31:13 -Servlet dispatcherServlet mapped to [/]
2019-03-26 11:31:16 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3a62c01e: startup date [Tue Mar 26 11:31:01 CST 2019]; root of context hierarchy
2019-03-26 11:31:17 -Using default implementation for ThreadExecutor
2019-03-26 11:31:17 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-26 11:31:17 -Quartz Scheduler v.2.2.1 created.
2019-03-26 11:31:17 -RAMJobStore initialized.
2019-03-26 11:31:17 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-26 11:31:17 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-26 11:31:17 -Quartz scheduler version: 2.2.1
2019-03-26 11:31:17 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@28a3fc34
2019-03-26 11:31:18 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-26 11:31:18 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-26 11:31:21 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-26 11:31:21 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-26 11:31:21 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-03-26 11:31:21 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-26 11:31:21 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-26 11:31:21 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-26 11:31:21 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-26 11:31:21 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-26 11:31:21 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-26 11:31:21 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-26 11:31:21 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-26 11:31:21 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 11:31:21 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-26 11:31:21 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-26 11:31:21 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-26 11:31:21 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-26 11:31:21 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 11:31:21 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-26 11:31:21 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-26 11:31:21 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-26 11:31:21 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-26 11:31:21 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-26 11:31:21 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 11:31:21 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-26 11:31:21 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-26 11:31:21 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 11:31:21 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-26 11:31:21 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-26 11:31:21 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 11:31:21 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-26 11:31:21 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-26 11:31:21 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-26 11:31:21 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-26 11:31:21 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-26 11:31:21 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-26 11:31:21 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-26 11:31:21 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-26 11:31:21 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-26 11:31:21 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 11:31:21 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-26 11:31:21 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-26 11:31:21 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 11:31:21 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-26 11:31:21 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-26 11:31:21 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-26 11:31:21 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-26 11:31:21 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 11:31:21 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-26 11:31:21 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-03-26 11:31:21 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-26 11:31:21 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-26 11:31:21 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-26 11:31:21 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-26 11:31:21 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-26 11:31:21 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-26 11:31:21 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-26 11:31:21 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-26 11:31:21 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-26 11:31:21 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-26 11:31:21 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 11:31:21 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-26 11:31:21 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-03-26 11:31:21 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-26 11:31:21 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-26 11:31:21 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-26 11:31:21 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-26 11:31:21 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-26 11:31:21 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-26 11:31:21 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 11:31:21 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-03-26 11:31:21 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 11:31:21 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-26 11:31:21 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-26 11:31:21 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-26 11:31:21 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-26 11:31:21 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-26 11:31:21 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-26 11:31:21 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-26 11:31:21 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 11:31:21 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-26 11:31:21 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-26 11:31:21 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-26 11:31:21 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-26 11:31:21 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-26 11:31:21 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-26 11:31:21 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-26 11:31:21 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-26 11:31:21 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-26 11:31:21 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-26 11:31:21 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 11:31:21 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-26 11:31:21 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 11:31:21 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-26 11:31:21 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-26 11:31:21 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-03-26 11:31:21 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-03-26 11:31:21 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-26 11:31:21 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-26 11:31:21 -Mapped "{[/moneyList/moneyList/UserList],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-26 11:31:21 -Mapped "{[/moneyList/moneyList/LikeName],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.LikeName(org.springframework.ui.Model)
2019-03-26 11:31:21 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-26 11:31:21 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-26 11:31:21 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-26 11:31:21 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-26 11:31:21 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 11:31:21 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-26 11:31:21 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 11:31:21 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-26 11:31:21 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-26 11:31:21 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-26 11:31:21 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-26 11:31:21 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-26 11:31:21 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-26 11:31:21 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 11:31:21 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-26 11:31:21 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 11:31:21 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-26 11:31:21 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-26 11:31:21 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-26 11:31:21 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-26 11:31:21 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-26 11:31:21 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-26 11:31:21 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 11:31:21 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-26 11:31:21 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 11:31:21 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-26 11:31:21 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-26 11:31:21 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-26 11:31:21 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-26 11:31:21 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-26 11:31:21 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-26 11:31:21 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-26 11:31:21 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 11:31:21 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-26 11:31:21 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-26 11:31:21 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 11:31:21 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-26 11:31:21 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-26 11:31:21 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 11:31:21 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-26 11:31:21 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-26 11:31:21 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-26 11:31:21 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-26 11:31:21 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 11:31:21 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-26 11:31:21 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 11:31:21 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 11:31:21 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-26 11:31:21 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-26 11:31:21 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-26 11:31:21 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-26 11:31:21 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-26 11:31:21 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-26 11:31:21 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-26 11:31:21 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-26 11:31:21 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-26 11:31:21 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 11:31:21 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-26 11:31:21 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-26 11:31:21 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-26 11:31:21 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-26 11:31:21 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-26 11:31:21 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-26 11:31:21 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-26 11:31:21 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-26 11:31:21 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-26 11:31:21 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-26 11:31:21 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-26 11:31:21 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-26 11:31:21 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 11:31:21 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-26 11:31:21 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-26 11:31:21 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-26 11:31:21 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-26 11:31:21 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-26 11:31:21 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-26 11:31:21 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-26 11:31:21 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-26 11:31:21 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-26 11:31:21 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-26 11:31:21 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-26 11:31:21 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-26 11:31:21 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 11:31:21 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-26 11:31:21 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-26 11:31:21 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-26 11:31:21 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-26 11:31:21 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 11:31:21 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-26 11:31:21 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-26 11:31:21 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-26 11:31:21 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 11:31:21 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-26 11:31:21 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-26 11:31:21 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-26 11:31:21 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-26 11:31:21 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-26 11:31:21 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-26 11:31:21 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-26 11:31:21 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-26 11:31:21 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-26 11:31:21 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-26 11:31:21 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-26 11:31:21 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-26 11:31:21 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-26 11:31:21 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-26 11:31:21 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-26 11:31:21 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-26 11:31:21 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-26 11:31:21 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 11:31:21 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-26 11:31:21 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-26 11:31:21 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 11:31:21 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-26 11:31:21 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 11:31:21 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-26 11:31:21 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-26 11:31:21 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-26 11:31:21 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-26 11:31:21 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-26 11:31:21 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-26 11:31:21 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 11:31:21 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-26 11:31:21 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-26 11:31:21 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 11:31:21 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-03-26 11:31:21 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-26 11:31:21 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-03-26 11:31:21 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-26 11:31:21 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-26 11:31:21 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-26 11:31:21 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-26 11:31:21 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-26 11:31:22 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-26 11:31:22 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-26 11:31:22 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-26 11:31:23 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-26 11:31:23 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3a62c01e: startup date [Tue Mar 26 11:31:01 CST 2019]; root of context hierarchy
2019-03-26 11:31:24 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-26 11:31:24 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-26 11:31:24 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-26 11:31:24 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-26 11:31:24 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-26 11:31:27 -Registering beans for JMX exposure on startup
2019-03-26 11:31:27 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-26 11:31:27 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-26 11:31:27 -Starting beans in phase 2147483647
2019-03-26 11:31:27 -Context refreshed
2019-03-26 11:31:27 -Found 1 custom documentation plugin(s)
2019-03-26 11:31:27 -Scanning for api listing references
2019-03-26 11:31:28 -Generating unique operation named: removeUsingPOST_1
2019-03-26 11:31:28 -Generating unique operation named: addUsingGET_1
2019-03-26 11:31:28 -Generating unique operation named: editUsingGET_1
2019-03-26 11:31:28 -Generating unique operation named: listUsingGET_1
2019-03-26 11:31:28 -Generating unique operation named: removeUsingPOST_2
2019-03-26 11:31:28 -Generating unique operation named: removeUsingPOST_3
2019-03-26 11:31:28 -Generating unique operation named: saveUsingPOST_1
2019-03-26 11:31:28 -Generating unique operation named: updateUsingGET_1
2019-03-26 11:31:28 -Generating unique operation named: updateUsingHEAD_1
2019-03-26 11:31:28 -Generating unique operation named: updateUsingPOST_1
2019-03-26 11:31:28 -Generating unique operation named: updateUsingPUT_1
2019-03-26 11:31:28 -Generating unique operation named: updateUsingPATCH_1
2019-03-26 11:31:28 -Generating unique operation named: updateUsingDELETE_1
2019-03-26 11:31:28 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-26 11:31:28 -Generating unique operation named: updateUsingTRACE_1
2019-03-26 11:31:28 -Generating unique operation named: addUsingGET_2
2019-03-26 11:31:28 -Generating unique operation named: editUsingGET_2
2019-03-26 11:31:28 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-26 11:31:28 -Generating unique operation named: listUsingGET_2
2019-03-26 11:31:28 -Generating unique operation named: removeUsingPOST_4
2019-03-26 11:31:28 -Generating unique operation named: removeUsingPOST_5
2019-03-26 11:31:28 -Generating unique operation named: saveUsingPOST_2
2019-03-26 11:31:28 -Generating unique operation named: updateUsingPOST_2
2019-03-26 11:31:28 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-26 11:31:28 -Generating unique operation named: addUsingGET_3
2019-03-26 11:31:29 -Generating unique operation named: editUsingGET_3
2019-03-26 11:31:29 -Generating unique operation named: listUsingGET_3
2019-03-26 11:31:29 -Generating unique operation named: removeUsingPOST_6
2019-03-26 11:31:29 -Generating unique operation named: removeUsingPOST_7
2019-03-26 11:31:29 -Generating unique operation named: saveUsingPOST_3
2019-03-26 11:31:29 -Generating unique operation named: updateUsingGET_2
2019-03-26 11:31:29 -Generating unique operation named: updateUsingHEAD_2
2019-03-26 11:31:29 -Generating unique operation named: updateUsingPOST_3
2019-03-26 11:31:29 -Generating unique operation named: updateUsingPUT_2
2019-03-26 11:31:29 -Generating unique operation named: updateUsingPATCH_2
2019-03-26 11:31:29 -Generating unique operation named: updateUsingDELETE_2
2019-03-26 11:31:29 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-26 11:31:29 -Generating unique operation named: updateUsingTRACE_2
2019-03-26 11:31:29 -Generating unique operation named: addUsingGET_4
2019-03-26 11:31:29 -Generating unique operation named: editUsingGET_4
2019-03-26 11:31:29 -Generating unique operation named: listUsingGET_4
2019-03-26 11:31:29 -Generating unique operation named: removeUsingPOST_8
2019-03-26 11:31:29 -Generating unique operation named: removeUsingPOST_9
2019-03-26 11:31:29 -Generating unique operation named: saveUsingPOST_4
2019-03-26 11:31:29 -Generating unique operation named: updateUsingGET_3
2019-03-26 11:31:29 -Generating unique operation named: updateUsingHEAD_3
2019-03-26 11:31:29 -Generating unique operation named: updateUsingPOST_4
2019-03-26 11:31:29 -Generating unique operation named: updateUsingPUT_3
2019-03-26 11:31:29 -Generating unique operation named: updateUsingPATCH_3
2019-03-26 11:31:29 -Generating unique operation named: updateUsingDELETE_3
2019-03-26 11:31:29 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-26 11:31:29 -Generating unique operation named: updateUsingTRACE_3
2019-03-26 11:31:29 -Generating unique operation named: ElecUsingGET_1
2019-03-26 11:31:29 -Generating unique operation named: addUsingGET_5
2019-03-26 11:31:29 -Generating unique operation named: editUsingGET_5
2019-03-26 11:31:29 -Generating unique operation named: listUsingGET_5
2019-03-26 11:31:29 -Generating unique operation named: removeUsingPOST_10
2019-03-26 11:31:29 -Generating unique operation named: removeUsingPOST_11
2019-03-26 11:31:29 -Generating unique operation named: saveUsingPOST_5
2019-03-26 11:31:29 -Generating unique operation named: updateUsingGET_4
2019-03-26 11:31:29 -Generating unique operation named: updateUsingHEAD_4
2019-03-26 11:31:29 -Generating unique operation named: updateUsingPOST_5
2019-03-26 11:31:29 -Generating unique operation named: updateUsingPUT_4
2019-03-26 11:31:29 -Generating unique operation named: updateUsingPATCH_4
2019-03-26 11:31:29 -Generating unique operation named: updateUsingDELETE_4
2019-03-26 11:31:29 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-26 11:31:29 -Generating unique operation named: updateUsingTRACE_4
2019-03-26 11:31:29 -Generating unique operation named: editUsingGET_6
2019-03-26 11:31:29 -Generating unique operation named: listUsingGET_6
2019-03-26 11:31:29 -Generating unique operation named: updateUsingPOST_6
2019-03-26 11:31:29 -Generating unique operation named: addUsingGET_6
2019-03-26 11:31:29 -Generating unique operation named: editUsingGET_7
2019-03-26 11:31:29 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-26 11:31:29 -Generating unique operation named: listUsingGET_7
2019-03-26 11:31:29 -Generating unique operation named: removeUsingPOST_12
2019-03-26 11:31:29 -Generating unique operation named: removeUsingPOST_13
2019-03-26 11:31:29 -Generating unique operation named: saveUsingPOST_6
2019-03-26 11:31:29 -Generating unique operation named: updateUsingGET_5
2019-03-26 11:31:29 -Generating unique operation named: updateUsingHEAD_5
2019-03-26 11:31:29 -Generating unique operation named: updateUsingPOST_7
2019-03-26 11:31:29 -Generating unique operation named: updateUsingPUT_5
2019-03-26 11:31:29 -Generating unique operation named: updateUsingPATCH_5
2019-03-26 11:31:29 -Generating unique operation named: updateUsingDELETE_5
2019-03-26 11:31:29 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-26 11:31:29 -Generating unique operation named: updateUsingTRACE_5
2019-03-26 11:31:29 -Generating unique operation named: exprotExcelUsingGET_4
2019-03-26 11:31:29 -Generating unique operation named: addUsingGET_7
2019-03-26 11:31:29 -Generating unique operation named: editUsingGET_8
2019-03-26 11:31:29 -Generating unique operation named: listUsingGET_8
2019-03-26 11:31:29 -Generating unique operation named: removeUsingPOST_14
2019-03-26 11:31:29 -Generating unique operation named: removeUsingPOST_15
2019-03-26 11:31:29 -Generating unique operation named: saveUsingPOST_7
2019-03-26 11:31:29 -Generating unique operation named: updateUsingGET_6
2019-03-26 11:31:29 -Generating unique operation named: updateUsingHEAD_6
2019-03-26 11:31:29 -Generating unique operation named: updateUsingPOST_8
2019-03-26 11:31:29 -Generating unique operation named: updateUsingPUT_6
2019-03-26 11:31:30 -Generating unique operation named: updateUsingPATCH_6
2019-03-26 11:31:30 -Generating unique operation named: updateUsingDELETE_6
2019-03-26 11:31:30 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-26 11:31:30 -Generating unique operation named: updateUsingTRACE_6
2019-03-26 11:31:30 -Generating unique operation named: addUsingGET_8
2019-03-26 11:31:30 -Generating unique operation named: editUsingGET_9
2019-03-26 11:31:30 -Generating unique operation named: listUsingGET_9
2019-03-26 11:31:30 -Generating unique operation named: removeUsingPOST_16
2019-03-26 11:31:30 -Generating unique operation named: removeUsingPOST_17
2019-03-26 11:31:30 -Generating unique operation named: saveUsingPOST_8
2019-03-26 11:31:30 -Generating unique operation named: updateUsingGET_7
2019-03-26 11:31:30 -Generating unique operation named: updateUsingHEAD_7
2019-03-26 11:31:30 -Generating unique operation named: updateUsingPOST_9
2019-03-26 11:31:30 -Generating unique operation named: updateUsingPUT_7
2019-03-26 11:31:30 -Generating unique operation named: updateUsingPATCH_7
2019-03-26 11:31:30 -Generating unique operation named: updateUsingDELETE_7
2019-03-26 11:31:30 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-26 11:31:30 -Generating unique operation named: updateUsingTRACE_7
2019-03-26 11:31:30 -Generating unique operation named: addUsingGET_9
2019-03-26 11:31:30 -Generating unique operation named: editUsingGET_10
2019-03-26 11:31:30 -Generating unique operation named: infoUsingGET_1
2019-03-26 11:31:30 -Generating unique operation named: infoUsingHEAD_1
2019-03-26 11:31:30 -Generating unique operation named: infoUsingPOST_1
2019-03-26 11:31:30 -Generating unique operation named: infoUsingPUT_1
2019-03-26 11:31:30 -Generating unique operation named: infoUsingPATCH_1
2019-03-26 11:31:30 -Generating unique operation named: infoUsingDELETE_1
2019-03-26 11:31:30 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-26 11:31:30 -Generating unique operation named: infoUsingTRACE_1
2019-03-26 11:31:30 -Generating unique operation named: listUsingGET_10
2019-03-26 11:31:30 -Generating unique operation named: removeUsingPOST_18
2019-03-26 11:31:30 -Generating unique operation named: removeUsingPOST_19
2019-03-26 11:31:30 -Generating unique operation named: saveUsingPOST_9
2019-03-26 11:31:30 -Generating unique operation named: updateUsingPOST_10
2019-03-26 11:31:30 -Generating unique operation named: listUsingGET_11
2019-03-26 11:31:30 -Generating unique operation named: removeUsingPOST_20
2019-03-26 11:31:30 -Generating unique operation named: welcomeUsingGET_1
2019-03-26 11:31:30 -Generating unique operation named: addUsingGET_10
2019-03-26 11:31:30 -Generating unique operation named: editUsingGET_11
2019-03-26 11:31:30 -Generating unique operation named: listUsingGET_12
2019-03-26 11:31:30 -Generating unique operation named: removeUsingPOST_21
2019-03-26 11:31:30 -Generating unique operation named: saveUsingPOST_10
2019-03-26 11:31:30 -Generating unique operation named: treeUsingGET_1
2019-03-26 11:31:30 -Generating unique operation named: treeUsingGET_2
2019-03-26 11:31:30 -Generating unique operation named: updateUsingPOST_11
2019-03-26 11:31:30 -Generating unique operation named: addUsingGET_11
2019-03-26 11:31:30 -Generating unique operation named: editUsingGET_12
2019-03-26 11:31:30 -Generating unique operation named: listUsingGET_13
2019-03-26 11:31:30 -Generating unique operation named: removeUsingPOST_22
2019-03-26 11:31:30 -Generating unique operation named: removeUsingPOST_23
2019-03-26 11:31:30 -Generating unique operation named: saveUsingPOST_11
2019-03-26 11:31:30 -Generating unique operation named: updateUsingGET_8
2019-03-26 11:31:30 -Generating unique operation named: updateUsingHEAD_8
2019-03-26 11:31:30 -Generating unique operation named: updateUsingPOST_12
2019-03-26 11:31:30 -Generating unique operation named: updateUsingPUT_8
2019-03-26 11:31:30 -Generating unique operation named: updateUsingPATCH_8
2019-03-26 11:31:30 -Generating unique operation named: updateUsingDELETE_8
2019-03-26 11:31:30 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-26 11:31:30 -Generating unique operation named: updateUsingTRACE_8
2019-03-26 11:31:31 -Generating unique operation named: addUsingGET_12
2019-03-26 11:31:31 -Generating unique operation named: editUsingGET_13
2019-03-26 11:31:31 -Generating unique operation named: listUsingGET_14
2019-03-26 11:31:31 -Generating unique operation named: removeUsingPOST_24
2019-03-26 11:31:31 -Generating unique operation named: removeUsingPOST_25
2019-03-26 11:31:31 -Generating unique operation named: saveUsingPOST_12
2019-03-26 11:31:31 -Generating unique operation named: updateUsingGET_9
2019-03-26 11:31:31 -Generating unique operation named: updateUsingHEAD_9
2019-03-26 11:31:31 -Generating unique operation named: updateUsingPOST_13
2019-03-26 11:31:31 -Generating unique operation named: updateUsingPUT_9
2019-03-26 11:31:31 -Generating unique operation named: updateUsingPATCH_9
2019-03-26 11:31:31 -Generating unique operation named: updateUsingDELETE_9
2019-03-26 11:31:31 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-26 11:31:31 -Generating unique operation named: updateUsingTRACE_9
2019-03-26 11:31:31 -Generating unique operation named: addUsingGET_13
2019-03-26 11:31:31 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-26 11:31:31 -Generating unique operation named: editUsingGET_14
2019-03-26 11:31:31 -Generating unique operation named: listUsingGET_15
2019-03-26 11:31:31 -Generating unique operation named: saveUsingPOST_13
2019-03-26 11:31:31 -Generating unique operation named: saveUsingPOST_14
2019-03-26 11:31:31 -Generating unique operation named: updateUsingPOST_14
2019-03-26 11:31:31 -Generating unique operation named: listUsingGET_16
2019-03-26 11:31:31 -Generating unique operation named: listUsingHEAD_1
2019-03-26 11:31:31 -Generating unique operation named: listUsingPOST_1
2019-03-26 11:31:31 -Generating unique operation named: listUsingPUT_1
2019-03-26 11:31:31 -Generating unique operation named: listUsingPATCH_1
2019-03-26 11:31:31 -Generating unique operation named: listUsingDELETE_1
2019-03-26 11:31:31 -Generating unique operation named: listUsingOPTIONS_1
2019-03-26 11:31:31 -Generating unique operation named: listUsingTRACE_1
2019-03-26 11:31:31 -Generating unique operation named: addUsingGET_14
2019-03-26 11:31:31 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-26 11:31:31 -Generating unique operation named: editUsingGET_15
2019-03-26 11:31:31 -Generating unique operation named: listUsingGET_17
2019-03-26 11:31:31 -Generating unique operation named: removeUsingPOST_26
2019-03-26 11:31:31 -Generating unique operation named: saveUsingPOST_15
2019-03-26 11:31:31 -Generating unique operation named: treeUsingGET_3
2019-03-26 11:31:31 -Generating unique operation named: treeViewUsingGET_1
2019-03-26 11:31:31 -Generating unique operation named: updateUsingPOST_15
2019-03-26 11:31:31 -Generating unique operation named: addUsingGET_15
2019-03-26 11:31:31 -Generating unique operation named: editUsingGET_16
2019-03-26 11:31:31 -Generating unique operation named: exprotExcelUsingGET_5
2019-03-26 11:31:31 -Generating unique operation named: listUsingGET_18
2019-03-26 11:31:31 -Generating unique operation named: removeUsingPOST_27
2019-03-26 11:31:31 -Generating unique operation named: removeUsingPOST_28
2019-03-26 11:31:31 -Generating unique operation named: saveUsingPOST_16
2019-03-26 11:31:31 -Generating unique operation named: updateUsingGET_10
2019-03-26 11:31:31 -Generating unique operation named: updateUsingHEAD_10
2019-03-26 11:31:31 -Generating unique operation named: updateUsingPOST_16
2019-03-26 11:31:31 -Generating unique operation named: updateUsingPUT_10
2019-03-26 11:31:31 -Generating unique operation named: updateUsingPATCH_10
2019-03-26 11:31:31 -Generating unique operation named: updateUsingDELETE_10
2019-03-26 11:31:31 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-26 11:31:31 -Generating unique operation named: updateUsingTRACE_10
2019-03-26 11:31:31 -Generating unique operation named: exprotExcelUsingGET_6
2019-03-26 11:31:31 -Generating unique operation named: addUsingGET_16
2019-03-26 11:31:31 -Generating unique operation named: editUsingGET_17
2019-03-26 11:31:31 -Generating unique operation named: listUsingGET_19
2019-03-26 11:31:31 -Generating unique operation named: removeUsingPOST_29
2019-03-26 11:31:31 -Generating unique operation named: removeUsingPOST_30
2019-03-26 11:31:31 -Generating unique operation named: saveUsingPOST_17
2019-03-26 11:31:31 -Generating unique operation named: updateUsingGET_11
2019-03-26 11:31:31 -Generating unique operation named: updateUsingHEAD_11
2019-03-26 11:31:31 -Generating unique operation named: updateUsingPOST_17
2019-03-26 11:31:31 -Generating unique operation named: updateUsingPUT_11
2019-03-26 11:31:31 -Generating unique operation named: updateUsingPATCH_11
2019-03-26 11:31:31 -Generating unique operation named: updateUsingDELETE_11
2019-03-26 11:31:31 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-26 11:31:31 -Generating unique operation named: updateUsingTRACE_11
2019-03-26 11:31:31 -Generating unique operation named: addUsingGET_17
2019-03-26 11:31:31 -Generating unique operation named: editUsingGET_18
2019-03-26 11:31:31 -Generating unique operation named: listUsingGET_20
2019-03-26 11:31:31 -Generating unique operation named: removeUsingPOST_31
2019-03-26 11:31:31 -Generating unique operation named: removeUsingPOST_32
2019-03-26 11:31:31 -Generating unique operation named: saveUsingPOST_18
2019-03-26 11:31:31 -Generating unique operation named: updateUsingGET_12
2019-03-26 11:31:31 -Generating unique operation named: updateUsingHEAD_12
2019-03-26 11:31:31 -Generating unique operation named: updateUsingPOST_18
2019-03-26 11:31:31 -Generating unique operation named: updateUsingPUT_12
2019-03-26 11:31:31 -Generating unique operation named: updateUsingPATCH_12
2019-03-26 11:31:31 -Generating unique operation named: updateUsingDELETE_12
2019-03-26 11:31:31 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-26 11:31:31 -Generating unique operation named: updateUsingTRACE_12
2019-03-26 11:31:32 -Starting Quartz Scheduler now
2019-03-26 11:31:32 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-26 11:31:32 -Starting...
2019-03-26 11:31:32 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-26 11:31:32 -Started.
2019-03-26 11:31:32 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-26 11:31:32 -Using a shared selector for servlet write/read
2019-03-26 11:31:32 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-26 11:31:32 -Started BootdoApplication in 32.852 seconds (JVM running for 34.867)
2019-03-26 11:31:32 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-26 11:31:32 -==> Parameters: 
2019-03-26 11:31:32 -<==      Total: 1
2019-03-26 11:31:58 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-26 11:31:58 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-26 11:31:58 -FrameworkServlet 'dispatcherServlet': initialization completed in 95 ms
2019-03-26 11:31:58 -Enabling session validation scheduler...
2019-03-26 11:31:58 -请求地址 : http://localhost:8081/login;JSESSIONID=61dffed8-df35-41aa-aedf-3ff72b3af7a5
2019-03-26 11:31:58 -HTTP METHOD : GET
2019-03-26 11:31:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-26 11:31:58 -参数 : [{}]
2019-03-26 11:31:58 -耗时 : 5
2019-03-26 11:31:58 -返回值 : login
2019-03-26 11:32:00 -请求地址 : http://localhost:8081/getVerify
2019-03-26 11:32:00 -HTTP METHOD : GET
2019-03-26 11:32:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-26 11:32:00 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@276ea8c6, org.apache.shiro.web.servlet.ShiroHttpServletResponse@235138f3]
2019-03-26 11:32:01 -4029
2019-03-26 11:32:01 -耗时 : 625
2019-03-26 11:32:01 -返回值 : null
2019-03-26 11:32:01 -请求地址 : http://localhost:8081/login
2019-03-26 11:32:01 -HTTP METHOD : GET
2019-03-26 11:32:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-26 11:32:01 -参数 : [{}]
2019-03-26 11:32:01 -耗时 : 1
2019-03-26 11:32:01 -返回值 : login
2019-03-26 11:32:06 -请求地址 : http://localhost:8081/login
2019-03-26 11:32:06 -HTTP METHOD : POST
2019-03-26 11:32:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-26 11:32:06 -参数 : [admin, 111111, 4029, org.apache.shiro.web.servlet.ShiroHttpServletRequest@6a342d68]
2019-03-26 11:32:06 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-26 11:32:06 -==> Parameters: admin(String)
2019-03-26 11:32:06 -<==      Total: 1
2019-03-26 11:32:06 -耗时 : 258
2019-03-26 11:32:06 -返回值 : {msg=操作成功, code=0}
2019-03-26 11:32:07 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-03-26 11:32:07 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-26 11:32:07 -==> Parameters: 1(Long), admin(String), 登录(String), 259(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-26 11:32:07.076(Timestamp)
2019-03-26 11:32:07 -请求地址 : http://localhost:8081/index
2019-03-26 11:32:07 -HTTP METHOD : GET
2019-03-26 11:32:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-26 11:32:07 -参数 : [{}]
2019-03-26 11:32:07 -<==    Updates: 1
2019-03-26 11:32:07 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-26 11:32:07 -==> Parameters: 1(Long)
2019-03-26 11:32:07 -<==      Total: 46
2019-03-26 11:32:07 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-26 11:32:07 -==> Parameters: 138(Long)
2019-03-26 11:32:07 -<==      Total: 1
2019-03-26 11:32:07 -耗时 : 643
2019-03-26 11:32:07 -返回值 : index_v1
2019-03-26 11:32:07 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-26 11:32:07 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 643(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-26 11:32:07.831(Timestamp)
2019-03-26 11:32:07 -<==    Updates: 1
2019-03-26 11:32:08 -请求地址 : http://localhost:8081/main
2019-03-26 11:32:08 -HTTP METHOD : GET
2019-03-26 11:32:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-26 11:32:08 -参数 : []
2019-03-26 11:32:08 -耗时 : 1
2019-03-26 11:32:08 -返回值 : main
2019-03-26 11:32:08 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-26 11:32:08 -HTTP METHOD : GET
2019-03-26 11:32:08 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-26 11:32:08 -参数 : []
2019-03-26 11:32:08 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-26 11:32:08 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-26 11:32:08 -请求地址 : http://localhost:8081/main
2019-03-26 11:32:08 -HTTP METHOD : GET
2019-03-26 11:32:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-26 11:32:08 -参数 : []
2019-03-26 11:32:08 -耗时 : 2
2019-03-26 11:32:08 -返回值 : main
2019-03-26 11:32:08 -<==      Total: 0
2019-03-26 11:32:08 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-26 11:32:08 -==> Parameters: 1(Long), 0(String)
2019-03-26 11:32:08 -<==      Total: 1
2019-03-26 11:32:08 -耗时 : 601
2019-03-26 11:32:08 -返回值 : com.bootdo.common.utils.PageUtils@193c51dc
2019-03-26 11:32:18 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-26 11:32:18 -==> Parameters: 1(Long)
2019-03-26 11:32:18 -<==      Total: 90
2019-03-26 11:32:18 -请求地址 : http://localhost:8081/print/print
2019-03-26 11:32:18 -HTTP METHOD : GET
2019-03-26 11:32:18 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-03-26 11:32:18 -参数 : []
2019-03-26 11:32:18 -耗时 : 1
2019-03-26 11:32:18 -返回值 : print/print/print
2019-03-26 11:32:18 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-26 11:32:18 -HTTP METHOD : GET
2019-03-26 11:32:18 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-26 11:32:18 -参数 : [userType]
2019-03-26 11:32:18 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-26 11:32:18 -==> Parameters: userType(String)
2019-03-26 11:32:18 -<==      Total: 2
2019-03-26 11:32:18 -耗时 : 49
2019-03-26 11:32:18 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-26 11:32:19 -请求地址 : http://localhost:8081/print/print/list
2019-03-26 11:32:19 -HTTP METHOD : GET
2019-03-26 11:32:19 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-26 11:32:19 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-26 11:32:19 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-03-26 11:32:19 -==> Parameters: 0(Integer), 10(Integer)
2019-03-26 11:32:19 -<==      Total: 3
2019-03-26 11:32:19 -==>  Preparing: select count(*) from print 
2019-03-26 11:32:19 -==> Parameters: 
2019-03-26 11:32:19 -<==      Total: 1
2019-03-26 11:32:19 -耗时 : 74
2019-03-26 11:32:19 -返回值 : com.bootdo.common.utils.PageUtils@202333ba
2019-03-26 11:32:22 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 3]
2019-03-26 11:32:25 -请求地址 : http://localhost:8081/print/print/list
2019-03-26 11:32:25 -HTTP METHOD : GET
2019-03-26 11:32:25 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-26 11:32:25 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=2019-03-26}]
2019-03-26 11:32:25 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE create_time = ? and `print_date` >= ? and `print_date` <= ? order by id asc limit ?, ? 
2019-03-26 11:32:25 -==> Parameters: 2019-03-26(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String), 0(Integer), 10(Integer)
2019-03-26 11:32:25 -<==      Total: 0
2019-03-26 11:32:25 -==>  Preparing: select count(*) from print WHERE create_time = ? and `print_date` >= ? and `print_date` <= ? 
2019-03-26 11:32:25 -==> Parameters: 2019-03-26(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String)
2019-03-26 11:32:25 -<==      Total: 1
2019-03-26 11:32:25 -耗时 : 17
2019-03-26 11:32:25 -返回值 : com.bootdo.common.utils.PageUtils@4aa2474
2019-03-26 11:32:25 -请求地址 : http://localhost:8081/print/print/list
2019-03-26 11:32:25 -HTTP METHOD : GET
2019-03-26 11:32:25 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-26 11:32:25 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=2019-03-26}]
2019-03-26 11:32:25 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE create_time = ? and `print_date` >= ? and `print_date` <= ? order by id asc limit ?, ? 
2019-03-26 11:32:25 -==> Parameters: 2019-03-26(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String), 0(Integer), 10(Integer)
2019-03-26 11:32:25 -<==      Total: 0
2019-03-26 11:32:25 -==>  Preparing: select count(*) from print WHERE create_time = ? and `print_date` >= ? and `print_date` <= ? 
2019-03-26 11:32:25 -==> Parameters: 2019-03-26(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String)
2019-03-26 11:32:25 -<==      Total: 1
2019-03-26 11:32:25 -耗时 : 11
2019-03-26 11:32:25 -返回值 : com.bootdo.common.utils.PageUtils@18b4861c
2019-03-26 11:32:26 -请求地址 : http://localhost:8081/print/print/list
2019-03-26 11:32:26 -HTTP METHOD : GET
2019-03-26 11:32:26 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-26 11:32:26 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=2019-03-26}]
2019-03-26 11:32:26 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE create_time = ? and `print_date` >= ? and `print_date` <= ? order by id asc limit ?, ? 
2019-03-26 11:32:26 -==> Parameters: 2019-03-26(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String), 0(Integer), 10(Integer)
2019-03-26 11:32:26 -<==      Total: 0
2019-03-26 11:32:26 -==>  Preparing: select count(*) from print WHERE create_time = ? and `print_date` >= ? and `print_date` <= ? 
2019-03-26 11:32:26 -==> Parameters: 2019-03-26(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String)
2019-03-26 11:32:26 -<==      Total: 1
2019-03-26 11:32:26 -耗时 : 14
2019-03-26 11:32:26 -返回值 : com.bootdo.common.utils.PageUtils@77ecc607
2019-03-26 11:32:27 -请求地址 : http://localhost:8081/print/print/list
2019-03-26 11:32:27 -HTTP METHOD : GET
2019-03-26 11:32:27 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-26 11:32:27 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=2019-03-26}]
2019-03-26 11:32:27 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE create_time = ? and `print_date` >= ? and `print_date` <= ? order by id asc limit ?, ? 
2019-03-26 11:32:27 -==> Parameters: 2019-03-26(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String), 0(Integer), 10(Integer)
2019-03-26 11:32:27 -<==      Total: 0
2019-03-26 11:32:27 -==>  Preparing: select count(*) from print WHERE create_time = ? and `print_date` >= ? and `print_date` <= ? 
2019-03-26 11:32:27 -==> Parameters: 2019-03-26(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String)
2019-03-26 11:32:27 -<==      Total: 1
2019-03-26 11:32:27 -耗时 : 9
2019-03-26 11:32:27 -返回值 : com.bootdo.common.utils.PageUtils@1234d2ab
2019-03-26 11:32:27 -请求地址 : http://localhost:8081/print/print/list
2019-03-26 11:32:27 -HTTP METHOD : GET
2019-03-26 11:32:27 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-26 11:32:27 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=2019-03-26}]
2019-03-26 11:32:27 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE create_time = ? and `print_date` >= ? and `print_date` <= ? order by id asc limit ?, ? 
2019-03-26 11:32:27 -==> Parameters: 2019-03-26(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String), 0(Integer), 10(Integer)
2019-03-26 11:32:27 -<==      Total: 0
2019-03-26 11:32:27 -==>  Preparing: select count(*) from print WHERE create_time = ? and `print_date` >= ? and `print_date` <= ? 
2019-03-26 11:32:27 -==> Parameters: 2019-03-26(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String)
2019-03-26 11:32:27 -<==      Total: 1
2019-03-26 11:32:27 -耗时 : 17
2019-03-26 11:32:27 -返回值 : com.bootdo.common.utils.PageUtils@6313dae7
2019-03-26 11:32:27 -请求地址 : http://localhost:8081/print/print/list
2019-03-26 11:32:27 -HTTP METHOD : GET
2019-03-26 11:32:27 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-26 11:32:27 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=2019-03-26}]
2019-03-26 11:32:27 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE create_time = ? and `print_date` >= ? and `print_date` <= ? order by id asc limit ?, ? 
2019-03-26 11:32:27 -==> Parameters: 2019-03-26(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String), 0(Integer), 10(Integer)
2019-03-26 11:32:27 -<==      Total: 0
2019-03-26 11:32:27 -==>  Preparing: select count(*) from print WHERE create_time = ? and `print_date` >= ? and `print_date` <= ? 
2019-03-26 11:32:27 -==> Parameters: 2019-03-26(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String)
2019-03-26 11:32:27 -<==      Total: 1
2019-03-26 11:32:27 -耗时 : 10
2019-03-26 11:32:27 -返回值 : com.bootdo.common.utils.PageUtils@3f444f48
2019-03-26 11:33:24 -请求地址 : http://localhost:8081/login;JSESSIONID=7f404887-b0f9-4efd-8ade-7fb42cc50fd1
2019-03-26 11:33:24 -HTTP METHOD : GET
2019-03-26 11:33:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-26 11:33:24 -参数 : [{}]
2019-03-26 11:33:24 -耗时 : 1
2019-03-26 11:33:24 -返回值 : login
2019-03-26 11:33:24 -请求地址 : http://localhost:8081/getVerify
2019-03-26 11:33:24 -HTTP METHOD : GET
2019-03-26 11:33:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-26 11:33:24 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@144d39f8, org.apache.shiro.web.servlet.ShiroHttpServletResponse@69741d74]
2019-03-26 11:33:24 -6254
2019-03-26 11:33:24 -耗时 : 15
2019-03-26 11:33:24 -返回值 : null
2019-03-26 11:33:24 -请求地址 : http://localhost:8081/login
2019-03-26 11:33:24 -HTTP METHOD : GET
2019-03-26 11:33:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-26 11:33:24 -参数 : [{}]
2019-03-26 11:33:24 -耗时 : 0
2019-03-26 11:33:24 -返回值 : login
2019-03-26 11:33:26 -请求地址 : http://localhost:8081/login
2019-03-26 11:33:26 -HTTP METHOD : POST
2019-03-26 11:33:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-26 11:33:26 -参数 : [admin, 111111, , org.apache.shiro.web.servlet.ShiroHttpServletRequest@48077aec]
2019-03-26 11:33:26 -耗时 : 0
2019-03-26 11:33:26 -返回值 : {msg=请输入验证码, code=500}
2019-03-26 11:33:26 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-26 11:33:26 -==> Parameters: -1(Long), 获取用户信息为空(String), 登录(String), 1(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-26 11:33:26.608(Timestamp)
2019-03-26 11:33:26 -<==    Updates: 1
2019-03-26 11:33:32 -请求地址 : http://localhost:8081/login
2019-03-26 11:33:32 -HTTP METHOD : POST
2019-03-26 11:33:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-26 11:33:32 -参数 : [admin, 111111, 6254, org.apache.shiro.web.servlet.ShiroHttpServletRequest@6b5b2c2]
2019-03-26 11:33:32 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-26 11:33:32 -==> Parameters: admin(String)
2019-03-26 11:33:32 -<==      Total: 1
2019-03-26 11:33:32 -耗时 : 7
2019-03-26 11:33:32 -返回值 : {msg=操作成功, code=0}
2019-03-26 11:33:32 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-26 11:33:32 -==> Parameters: 1(Long), admin(String), 登录(String), 7(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-26 11:33:32.73(Timestamp)
2019-03-26 11:33:32 -请求地址 : http://localhost:8081/index
2019-03-26 11:33:32 -HTTP METHOD : GET
2019-03-26 11:33:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-26 11:33:32 -参数 : [{}]
2019-03-26 11:33:32 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-26 11:33:32 -==> Parameters: 1(Long)
2019-03-26 11:33:32 -<==    Updates: 1
2019-03-26 11:33:32 -<==      Total: 46
2019-03-26 11:33:32 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-26 11:33:32 -==> Parameters: 138(Long)
2019-03-26 11:33:32 -<==      Total: 1
2019-03-26 11:33:32 -耗时 : 162
2019-03-26 11:33:32 -返回值 : index_v1
2019-03-26 11:33:32 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-26 11:33:32 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 162(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-26 11:33:32.925(Timestamp)
2019-03-26 11:33:33 -请求地址 : http://localhost:8081/main
2019-03-26 11:33:33 -HTTP METHOD : GET
2019-03-26 11:33:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-26 11:33:33 -参数 : []
2019-03-26 11:33:33 -耗时 : 1
2019-03-26 11:33:33 -返回值 : main
2019-03-26 11:33:33 -<==    Updates: 1
2019-03-26 11:33:33 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-26 11:33:33 -HTTP METHOD : GET
2019-03-26 11:33:33 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-26 11:33:33 -参数 : []
2019-03-26 11:33:33 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-26 11:33:33 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-26 11:33:33 -请求地址 : http://localhost:8081/main
2019-03-26 11:33:33 -HTTP METHOD : GET
2019-03-26 11:33:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-26 11:33:33 -参数 : []
2019-03-26 11:33:33 -耗时 : 1
2019-03-26 11:33:33 -返回值 : main
2019-03-26 11:33:33 -<==      Total: 0
2019-03-26 11:33:33 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-26 11:33:33 -==> Parameters: 1(Long), 0(String)
2019-03-26 11:33:33 -<==      Total: 1
2019-03-26 11:33:33 -耗时 : 177
2019-03-26 11:33:33 -返回值 : com.bootdo.common.utils.PageUtils@55a71540
2019-03-26 11:33:41 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-26 11:33:41 -==> Parameters: 1(Long)
2019-03-26 11:33:41 -<==      Total: 90
2019-03-26 11:33:41 -请求地址 : http://localhost:8081/print/print
2019-03-26 11:33:41 -HTTP METHOD : GET
2019-03-26 11:33:41 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-03-26 11:33:41 -参数 : []
2019-03-26 11:33:41 -耗时 : 1
2019-03-26 11:33:41 -返回值 : print/print/print
2019-03-26 11:33:42 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-26 11:33:42 -HTTP METHOD : GET
2019-03-26 11:33:42 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-26 11:33:42 -参数 : [userType]
2019-03-26 11:33:42 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-26 11:33:42 -==> Parameters: userType(String)
2019-03-26 11:33:42 -<==      Total: 2
2019-03-26 11:33:42 -耗时 : 20
2019-03-26 11:33:42 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-26 11:33:42 -请求地址 : http://localhost:8081/print/print/list
2019-03-26 11:33:42 -HTTP METHOD : GET
2019-03-26 11:33:42 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-26 11:33:42 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-26 11:33:42 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-03-26 11:33:42 -==> Parameters: 0(Integer), 10(Integer)
2019-03-26 11:33:42 -<==      Total: 3
2019-03-26 11:33:42 -==>  Preparing: select count(*) from print 
2019-03-26 11:33:42 -==> Parameters: 
2019-03-26 11:33:42 -<==      Total: 1
2019-03-26 11:33:42 -耗时 : 23
2019-03-26 11:33:42 -返回值 : com.bootdo.common.utils.PageUtils@3c278aa8
2019-03-26 11:33:46 -请求地址 : http://localhost:8081/print/print/list
2019-03-26 11:33:46 -HTTP METHOD : GET
2019-03-26 11:33:46 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-26 11:33:46 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=2019-03-26}]
2019-03-26 11:33:46 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE create_time = ? and `print_date` >= ? and `print_date` <= ? order by id asc limit ?, ? 
2019-03-26 11:33:46 -==> Parameters: 2019-03-26(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String), 0(Integer), 10(Integer)
2019-03-26 11:33:46 -<==      Total: 0
2019-03-26 11:33:46 -==>  Preparing: select count(*) from print WHERE create_time = ? and `print_date` >= ? and `print_date` <= ? 
2019-03-26 11:33:46 -==> Parameters: 2019-03-26(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String)
2019-03-26 11:33:46 -<==      Total: 1
2019-03-26 11:33:46 -耗时 : 8
2019-03-26 11:33:46 -返回值 : com.bootdo.common.utils.PageUtils@439a45e
2019-03-26 11:33:47 -请求地址 : http://localhost:8081/print/print/list
2019-03-26 11:33:47 -HTTP METHOD : GET
2019-03-26 11:33:47 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-26 11:33:47 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=2019-03-26}]
2019-03-26 11:33:47 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE create_time = ? and `print_date` >= ? and `print_date` <= ? order by id asc limit ?, ? 
2019-03-26 11:33:47 -==> Parameters: 2019-03-26(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String), 0(Integer), 10(Integer)
2019-03-26 11:33:47 -<==      Total: 0
2019-03-26 11:33:47 -==>  Preparing: select count(*) from print WHERE create_time = ? and `print_date` >= ? and `print_date` <= ? 
2019-03-26 11:33:47 -==> Parameters: 2019-03-26(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String)
2019-03-26 11:33:47 -<==      Total: 1
2019-03-26 11:33:47 -耗时 : 10
2019-03-26 11:33:47 -返回值 : com.bootdo.common.utils.PageUtils@712ac86b
2019-03-26 11:33:49 -请求地址 : http://localhost:8081/print/print/list
2019-03-26 11:33:49 -HTTP METHOD : GET
2019-03-26 11:33:49 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-26 11:33:49 -参数 : [{limit=10, offset=0, userType=A, userOrg=, userId=, createTime=2019-03-26, type=A}]
2019-03-26 11:33:49 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE user_type = ? and create_time = ? and `print_date` >= ? and `print_date` <= ? order by id asc limit ?, ? 
2019-03-26 11:33:49 -==> Parameters: A(String), 2019-03-26(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String), 0(Integer), 10(Integer)
2019-03-26 11:33:49 -<==      Total: 0
2019-03-26 11:33:49 -==>  Preparing: select count(*) from print WHERE user_type = ? and create_time = ? and `print_date` >= ? and `print_date` <= ? 
2019-03-26 11:33:49 -==> Parameters: A(String), 2019-03-26(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String)
2019-03-26 11:33:49 -<==      Total: 1
2019-03-26 11:33:49 -耗时 : 48
2019-03-26 11:33:49 -返回值 : com.bootdo.common.utils.PageUtils@19c9b6eb
2019-03-26 11:33:50 -请求地址 : http://localhost:8081/print/print/list
2019-03-26 11:33:50 -HTTP METHOD : GET
2019-03-26 11:33:50 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-26 11:33:50 -参数 : [{limit=10, offset=0, userType=A, userOrg=, userId=, createTime=2019-03-26}]
2019-03-26 11:33:50 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE user_type = ? and create_time = ? and `print_date` >= ? and `print_date` <= ? order by id asc limit ?, ? 
2019-03-26 11:33:50 -==> Parameters: A(String), 2019-03-26(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String), 0(Integer), 10(Integer)
2019-03-26 11:33:50 -<==      Total: 0
2019-03-26 11:33:50 -==>  Preparing: select count(*) from print WHERE user_type = ? and create_time = ? and `print_date` >= ? and `print_date` <= ? 
2019-03-26 11:33:50 -==> Parameters: A(String), 2019-03-26(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String)
2019-03-26 11:33:50 -<==      Total: 1
2019-03-26 11:33:50 -耗时 : 7
2019-03-26 11:33:50 -返回值 : com.bootdo.common.utils.PageUtils@4ea855c6
2019-03-26 11:33:50 -请求地址 : http://localhost:8081/print/print/list
2019-03-26 11:33:50 -HTTP METHOD : GET
2019-03-26 11:33:50 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-26 11:33:50 -参数 : [{limit=10, offset=0, userType=A, userOrg=, userId=, createTime=2019-03-26}]
2019-03-26 11:33:50 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE user_type = ? and create_time = ? and `print_date` >= ? and `print_date` <= ? order by id asc limit ?, ? 
2019-03-26 11:33:50 -==> Parameters: A(String), 2019-03-26(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String), 0(Integer), 10(Integer)
2019-03-26 11:33:50 -<==      Total: 0
2019-03-26 11:33:50 -==>  Preparing: select count(*) from print WHERE user_type = ? and create_time = ? and `print_date` >= ? and `print_date` <= ? 
2019-03-26 11:33:50 -==> Parameters: A(String), 2019-03-26(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String)
2019-03-26 11:33:50 -<==      Total: 1
2019-03-26 11:33:50 -耗时 : 6
2019-03-26 11:33:50 -返回值 : com.bootdo.common.utils.PageUtils@352ce3ba
2019-03-26 11:33:51 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-26 11:33:51 -HTTP METHOD : GET
2019-03-26 11:33:51 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-26 11:33:51 -参数 : []
2019-03-26 11:33:51 -耗时 : 1
2019-03-26 11:33:51 -返回值 : system/dept/deptTree
2019-03-26 11:33:51 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-26 11:33:51 -HTTP METHOD : GET
2019-03-26 11:33:51 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-26 11:33:51 -参数 : []
2019-03-26 11:33:51 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-26 11:33:51 -==> Parameters: 
2019-03-26 11:33:51 -<==      Total: 3
2019-03-26 11:33:51 -耗时 : 31
2019-03-26 11:33:51 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-26 11:33:53 -请求地址 : http://localhost:8081/print/print/list
2019-03-26 11:33:53 -HTTP METHOD : GET
2019-03-26 11:33:53 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-26 11:33:53 -参数 : [{limit=10, offset=0, userType=A, userOrg=2, userId=, createTime=2019-03-26}]
2019-03-26 11:33:53 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE user_type = ? and user_org = ? and create_time = ? and `print_date` >= ? and `print_date` <= ? order by id asc limit ?, ? 
2019-03-26 11:33:53 -==> Parameters: A(String), 2(String), 2019-03-26(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String), 0(Integer), 10(Integer)
2019-03-26 11:33:53 -<==      Total: 0
2019-03-26 11:33:53 -==>  Preparing: select count(*) from print WHERE user_type = ? and user_org = ? and create_time = ? and `print_date` >= ? and `print_date` <= ? 
2019-03-26 11:33:53 -==> Parameters: A(String), 2(String), 2019-03-26(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String)
2019-03-26 11:33:53 -<==      Total: 1
2019-03-26 11:33:53 -耗时 : 14
2019-03-26 11:33:53 -返回值 : com.bootdo.common.utils.PageUtils@4c65f0e9
2019-03-26 11:36:53 -Starting BootdoApplication on ZJZL-20180906VX with PID 9168 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-26 11:36:53 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-26 11:36:53 -The following profiles are active: dev
2019-03-26 11:36:53 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Tue Mar 26 11:36:53 CST 2019]; root of context hierarchy
2019-03-26 11:36:56 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-26 11:36:58 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$8a56af48] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 11:36:58 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$7cafddef] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 11:36:59 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 11:37:00 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 11:37:00 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 11:37:00 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-26 11:37:00 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-26 11:37:00 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 11:37:00 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 11:37:00 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 11:37:00 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 11:37:01 -Tomcat initialized with port(s): 8081 (http)
2019-03-26 11:37:01 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-26 11:37:01 -Starting service [Tomcat]
2019-03-26 11:37:01 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-26 11:37:01 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-26 11:37:01 -Initializing Spring embedded WebApplicationContext
2019-03-26 11:37:01 -Root WebApplicationContext: initialization completed in 7971 ms
2019-03-26 11:37:02 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-26 11:37:02 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-26 11:37:02 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-26 11:37:02 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-26 11:37:02 -Filter xssFilter was not registered (disabled)
2019-03-26 11:37:02 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-26 11:37:02 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-26 11:37:02 -Servlet statViewServlet mapped to [/druid/*]
2019-03-26 11:37:02 -Servlet dispatcherServlet mapped to [/]
2019-03-26 11:37:04 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Tue Mar 26 11:36:53 CST 2019]; root of context hierarchy
2019-03-26 11:37:05 -Using default implementation for ThreadExecutor
2019-03-26 11:37:05 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-26 11:37:05 -Quartz Scheduler v.2.2.1 created.
2019-03-26 11:37:05 -RAMJobStore initialized.
2019-03-26 11:37:05 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-26 11:37:05 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-26 11:37:05 -Quartz scheduler version: 2.2.1
2019-03-26 11:37:05 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@1ccc1026
2019-03-26 11:37:06 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-26 11:37:06 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-26 11:37:08 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-03-26 11:37:08 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-26 11:37:08 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-26 11:37:08 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-26 11:37:08 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-26 11:37:08 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-26 11:37:08 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-26 11:37:08 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-26 11:37:08 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-26 11:37:08 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-26 11:37:08 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-26 11:37:08 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 11:37:08 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-26 11:37:08 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 11:37:08 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-26 11:37:08 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-26 11:37:08 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-26 11:37:08 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-26 11:37:08 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-26 11:37:08 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-26 11:37:08 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-26 11:37:08 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-26 11:37:08 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 11:37:08 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-26 11:37:08 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-26 11:37:08 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-26 11:37:08 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 11:37:08 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-26 11:37:08 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 11:37:08 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-26 11:37:08 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-26 11:37:08 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-26 11:37:08 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-26 11:37:08 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-26 11:37:08 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-26 11:37:08 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-26 11:37:08 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-26 11:37:08 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-26 11:37:08 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 11:37:08 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-26 11:37:08 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-26 11:37:08 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 11:37:08 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-26 11:37:08 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-26 11:37:08 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-26 11:37:08 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-26 11:37:08 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 11:37:08 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-26 11:37:08 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-03-26 11:37:08 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-26 11:37:08 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-26 11:37:08 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-26 11:37:08 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-26 11:37:08 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-26 11:37:08 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-26 11:37:08 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-26 11:37:08 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-26 11:37:08 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-26 11:37:08 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 11:37:08 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-26 11:37:08 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-26 11:37:09 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-03-26 11:37:09 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-26 11:37:09 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-26 11:37:09 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-26 11:37:09 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-26 11:37:09 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-26 11:37:09 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-26 11:37:09 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 11:37:09 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-03-26 11:37:09 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 11:37:09 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-26 11:37:09 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-26 11:37:09 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-26 11:37:09 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-26 11:37:09 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-26 11:37:09 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-26 11:37:09 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-26 11:37:09 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 11:37:09 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-26 11:37:09 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-26 11:37:09 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-26 11:37:09 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-26 11:37:09 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-26 11:37:09 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-26 11:37:09 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-26 11:37:09 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-26 11:37:09 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-26 11:37:09 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-26 11:37:09 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 11:37:09 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-26 11:37:09 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 11:37:09 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-26 11:37:09 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-26 11:37:09 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-26 11:37:09 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-03-26 11:37:09 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-03-26 11:37:09 -Mapped "{[/moneyList/moneyList/UserList],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-26 11:37:09 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-26 11:37:09 -Mapped "{[/moneyList/moneyList/LikeName],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.LikeName(org.springframework.ui.Model)
2019-03-26 11:37:09 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-26 11:37:09 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-26 11:37:09 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-26 11:37:09 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-26 11:37:09 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 11:37:09 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-26 11:37:09 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 11:37:09 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-26 11:37:09 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-26 11:37:09 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-26 11:37:09 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-26 11:37:09 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-26 11:37:09 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-26 11:37:09 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 11:37:09 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-26 11:37:09 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 11:37:09 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-26 11:37:09 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-26 11:37:09 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-26 11:37:09 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-26 11:37:09 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-26 11:37:09 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-26 11:37:09 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 11:37:09 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-26 11:37:09 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 11:37:09 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-26 11:37:09 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-26 11:37:09 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-26 11:37:09 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-26 11:37:09 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-26 11:37:09 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-26 11:37:09 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-26 11:37:09 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 11:37:09 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-26 11:37:09 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-26 11:37:09 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 11:37:09 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-26 11:37:09 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 11:37:09 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-26 11:37:09 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-26 11:37:09 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-26 11:37:09 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-26 11:37:09 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-26 11:37:09 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 11:37:09 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-26 11:37:09 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 11:37:09 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-26 11:37:09 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-26 11:37:09 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 11:37:09 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-26 11:37:09 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-26 11:37:09 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-26 11:37:09 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-26 11:37:09 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-26 11:37:09 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-26 11:37:09 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-26 11:37:09 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 11:37:09 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-26 11:37:09 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-26 11:37:09 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-26 11:37:09 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-26 11:37:09 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-26 11:37:09 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-26 11:37:09 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-26 11:37:09 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-26 11:37:09 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-26 11:37:09 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-26 11:37:09 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-26 11:37:09 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-26 11:37:09 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 11:37:09 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-26 11:37:09 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-26 11:37:09 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-26 11:37:09 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-26 11:37:09 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-26 11:37:09 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-26 11:37:09 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-26 11:37:09 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-26 11:37:09 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-26 11:37:09 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-26 11:37:09 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-26 11:37:09 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 11:37:09 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-26 11:37:09 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-26 11:37:09 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-26 11:37:09 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-26 11:37:09 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-26 11:37:09 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 11:37:09 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-26 11:37:09 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-26 11:37:09 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-26 11:37:09 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 11:37:09 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-26 11:37:09 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-26 11:37:09 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-26 11:37:09 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-26 11:37:09 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-26 11:37:09 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-26 11:37:09 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-26 11:37:09 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-26 11:37:09 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-26 11:37:09 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-26 11:37:09 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-26 11:37:09 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-26 11:37:09 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-26 11:37:09 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-26 11:37:09 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-26 11:37:09 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-26 11:37:09 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-26 11:37:09 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 11:37:09 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-26 11:37:09 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 11:37:09 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 11:37:09 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-26 11:37:09 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-26 11:37:09 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-26 11:37:09 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-26 11:37:09 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-26 11:37:09 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-26 11:37:09 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-26 11:37:09 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-26 11:37:09 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 11:37:09 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-26 11:37:09 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 11:37:09 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-26 11:37:09 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-03-26 11:37:09 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-26 11:37:09 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-26 11:37:09 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-03-26 11:37:09 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-26 11:37:09 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-26 11:37:09 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-26 11:37:09 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-26 11:37:09 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-26 11:37:09 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-26 11:37:09 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-26 11:37:10 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-26 11:37:10 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Tue Mar 26 11:36:53 CST 2019]; root of context hierarchy
2019-03-26 11:37:10 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-26 11:37:10 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-26 11:37:10 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-26 11:37:10 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-26 11:37:11 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-26 11:37:13 -Registering beans for JMX exposure on startup
2019-03-26 11:37:13 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-26 11:37:13 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-26 11:37:13 -Starting beans in phase 2147483647
2019-03-26 11:37:13 -Context refreshed
2019-03-26 11:37:13 -Found 1 custom documentation plugin(s)
2019-03-26 11:37:13 -Scanning for api listing references
2019-03-26 11:37:13 -Generating unique operation named: removeUsingPOST_1
2019-03-26 11:37:14 -Generating unique operation named: addUsingGET_1
2019-03-26 11:37:14 -Generating unique operation named: editUsingGET_1
2019-03-26 11:37:14 -Generating unique operation named: listUsingGET_1
2019-03-26 11:37:14 -Generating unique operation named: removeUsingPOST_2
2019-03-26 11:37:14 -Generating unique operation named: removeUsingPOST_3
2019-03-26 11:37:14 -Generating unique operation named: saveUsingPOST_1
2019-03-26 11:37:14 -Generating unique operation named: updateUsingGET_1
2019-03-26 11:37:14 -Generating unique operation named: updateUsingHEAD_1
2019-03-26 11:37:14 -Generating unique operation named: updateUsingPOST_1
2019-03-26 11:37:14 -Generating unique operation named: updateUsingPUT_1
2019-03-26 11:37:14 -Generating unique operation named: updateUsingPATCH_1
2019-03-26 11:37:14 -Generating unique operation named: updateUsingDELETE_1
2019-03-26 11:37:14 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-26 11:37:14 -Generating unique operation named: updateUsingTRACE_1
2019-03-26 11:37:14 -Generating unique operation named: addUsingGET_2
2019-03-26 11:37:14 -Generating unique operation named: editUsingGET_2
2019-03-26 11:37:14 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-26 11:37:14 -Generating unique operation named: listUsingGET_2
2019-03-26 11:37:14 -Generating unique operation named: removeUsingPOST_4
2019-03-26 11:37:14 -Generating unique operation named: removeUsingPOST_5
2019-03-26 11:37:14 -Generating unique operation named: saveUsingPOST_2
2019-03-26 11:37:14 -Generating unique operation named: updateUsingPOST_2
2019-03-26 11:37:14 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-26 11:37:14 -Generating unique operation named: addUsingGET_3
2019-03-26 11:37:14 -Generating unique operation named: editUsingGET_3
2019-03-26 11:37:14 -Generating unique operation named: listUsingGET_3
2019-03-26 11:37:14 -Generating unique operation named: removeUsingPOST_6
2019-03-26 11:37:14 -Generating unique operation named: removeUsingPOST_7
2019-03-26 11:37:14 -Generating unique operation named: saveUsingPOST_3
2019-03-26 11:37:14 -Generating unique operation named: updateUsingGET_2
2019-03-26 11:37:14 -Generating unique operation named: updateUsingHEAD_2
2019-03-26 11:37:14 -Generating unique operation named: updateUsingPOST_3
2019-03-26 11:37:14 -Generating unique operation named: updateUsingPUT_2
2019-03-26 11:37:14 -Generating unique operation named: updateUsingPATCH_2
2019-03-26 11:37:14 -Generating unique operation named: updateUsingDELETE_2
2019-03-26 11:37:14 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-26 11:37:14 -Generating unique operation named: updateUsingTRACE_2
2019-03-26 11:37:14 -Generating unique operation named: addUsingGET_4
2019-03-26 11:37:14 -Generating unique operation named: editUsingGET_4
2019-03-26 11:37:14 -Generating unique operation named: listUsingGET_4
2019-03-26 11:37:14 -Generating unique operation named: removeUsingPOST_8
2019-03-26 11:37:14 -Generating unique operation named: removeUsingPOST_9
2019-03-26 11:37:14 -Generating unique operation named: saveUsingPOST_4
2019-03-26 11:37:14 -Generating unique operation named: updateUsingGET_3
2019-03-26 11:37:14 -Generating unique operation named: updateUsingHEAD_3
2019-03-26 11:37:14 -Generating unique operation named: updateUsingPOST_4
2019-03-26 11:37:14 -Generating unique operation named: updateUsingPUT_3
2019-03-26 11:37:14 -Generating unique operation named: updateUsingPATCH_3
2019-03-26 11:37:14 -Generating unique operation named: updateUsingDELETE_3
2019-03-26 11:37:14 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-26 11:37:14 -Generating unique operation named: updateUsingTRACE_3
2019-03-26 11:37:14 -Generating unique operation named: ElecUsingGET_1
2019-03-26 11:37:14 -Generating unique operation named: addUsingGET_5
2019-03-26 11:37:14 -Generating unique operation named: editUsingGET_5
2019-03-26 11:37:14 -Generating unique operation named: listUsingGET_5
2019-03-26 11:37:14 -Generating unique operation named: removeUsingPOST_10
2019-03-26 11:37:14 -Generating unique operation named: removeUsingPOST_11
2019-03-26 11:37:14 -Generating unique operation named: saveUsingPOST_5
2019-03-26 11:37:14 -Generating unique operation named: updateUsingGET_4
2019-03-26 11:37:14 -Generating unique operation named: updateUsingHEAD_4
2019-03-26 11:37:14 -Generating unique operation named: updateUsingPOST_5
2019-03-26 11:37:14 -Generating unique operation named: updateUsingPUT_4
2019-03-26 11:37:14 -Generating unique operation named: updateUsingPATCH_4
2019-03-26 11:37:14 -Generating unique operation named: updateUsingDELETE_4
2019-03-26 11:37:14 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-26 11:37:14 -Generating unique operation named: updateUsingTRACE_4
2019-03-26 11:37:14 -Generating unique operation named: editUsingGET_6
2019-03-26 11:37:14 -Generating unique operation named: listUsingGET_6
2019-03-26 11:37:14 -Generating unique operation named: updateUsingPOST_6
2019-03-26 11:37:15 -Generating unique operation named: addUsingGET_6
2019-03-26 11:37:15 -Generating unique operation named: editUsingGET_7
2019-03-26 11:37:15 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-26 11:37:15 -Generating unique operation named: listUsingGET_7
2019-03-26 11:37:15 -Generating unique operation named: removeUsingPOST_12
2019-03-26 11:37:15 -Generating unique operation named: removeUsingPOST_13
2019-03-26 11:37:15 -Generating unique operation named: saveUsingPOST_6
2019-03-26 11:37:15 -Generating unique operation named: updateUsingGET_5
2019-03-26 11:37:15 -Generating unique operation named: updateUsingHEAD_5
2019-03-26 11:37:15 -Generating unique operation named: updateUsingPOST_7
2019-03-26 11:37:15 -Generating unique operation named: updateUsingPUT_5
2019-03-26 11:37:15 -Generating unique operation named: updateUsingPATCH_5
2019-03-26 11:37:15 -Generating unique operation named: updateUsingDELETE_5
2019-03-26 11:37:15 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-26 11:37:15 -Generating unique operation named: updateUsingTRACE_5
2019-03-26 11:37:15 -Generating unique operation named: exprotExcelUsingGET_4
2019-03-26 11:37:15 -Generating unique operation named: addUsingGET_7
2019-03-26 11:37:15 -Generating unique operation named: editUsingGET_8
2019-03-26 11:37:15 -Generating unique operation named: listUsingGET_8
2019-03-26 11:37:15 -Generating unique operation named: removeUsingPOST_14
2019-03-26 11:37:15 -Generating unique operation named: removeUsingPOST_15
2019-03-26 11:37:15 -Generating unique operation named: saveUsingPOST_7
2019-03-26 11:37:15 -Generating unique operation named: updateUsingGET_6
2019-03-26 11:37:15 -Generating unique operation named: updateUsingHEAD_6
2019-03-26 11:37:15 -Generating unique operation named: updateUsingPOST_8
2019-03-26 11:37:15 -Generating unique operation named: updateUsingPUT_6
2019-03-26 11:37:15 -Generating unique operation named: updateUsingPATCH_6
2019-03-26 11:37:15 -Generating unique operation named: updateUsingDELETE_6
2019-03-26 11:37:15 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-26 11:37:15 -Generating unique operation named: updateUsingTRACE_6
2019-03-26 11:37:15 -Generating unique operation named: addUsingGET_8
2019-03-26 11:37:15 -Generating unique operation named: editUsingGET_9
2019-03-26 11:37:15 -Generating unique operation named: listUsingGET_9
2019-03-26 11:37:15 -Generating unique operation named: removeUsingPOST_16
2019-03-26 11:37:15 -Generating unique operation named: removeUsingPOST_17
2019-03-26 11:37:15 -Generating unique operation named: saveUsingPOST_8
2019-03-26 11:37:15 -Generating unique operation named: updateUsingGET_7
2019-03-26 11:37:15 -Generating unique operation named: updateUsingHEAD_7
2019-03-26 11:37:15 -Generating unique operation named: updateUsingPOST_9
2019-03-26 11:37:15 -Generating unique operation named: updateUsingPUT_7
2019-03-26 11:37:15 -Generating unique operation named: updateUsingPATCH_7
2019-03-26 11:37:15 -Generating unique operation named: updateUsingDELETE_7
2019-03-26 11:37:15 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-26 11:37:15 -Generating unique operation named: updateUsingTRACE_7
2019-03-26 11:37:15 -Generating unique operation named: addUsingGET_9
2019-03-26 11:37:15 -Generating unique operation named: editUsingGET_10
2019-03-26 11:37:15 -Generating unique operation named: infoUsingGET_1
2019-03-26 11:37:15 -Generating unique operation named: infoUsingHEAD_1
2019-03-26 11:37:15 -Generating unique operation named: infoUsingPOST_1
2019-03-26 11:37:15 -Generating unique operation named: infoUsingPUT_1
2019-03-26 11:37:15 -Generating unique operation named: infoUsingPATCH_1
2019-03-26 11:37:15 -Generating unique operation named: infoUsingDELETE_1
2019-03-26 11:37:15 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-26 11:37:15 -Generating unique operation named: infoUsingTRACE_1
2019-03-26 11:37:15 -Generating unique operation named: listUsingGET_10
2019-03-26 11:37:15 -Generating unique operation named: removeUsingPOST_18
2019-03-26 11:37:15 -Generating unique operation named: removeUsingPOST_19
2019-03-26 11:37:15 -Generating unique operation named: saveUsingPOST_9
2019-03-26 11:37:15 -Generating unique operation named: updateUsingPOST_10
2019-03-26 11:37:15 -Generating unique operation named: listUsingGET_11
2019-03-26 11:37:15 -Generating unique operation named: removeUsingPOST_20
2019-03-26 11:37:15 -Generating unique operation named: welcomeUsingGET_1
2019-03-26 11:37:15 -Generating unique operation named: addUsingGET_10
2019-03-26 11:37:15 -Generating unique operation named: editUsingGET_11
2019-03-26 11:37:15 -Generating unique operation named: listUsingGET_12
2019-03-26 11:37:15 -Generating unique operation named: removeUsingPOST_21
2019-03-26 11:37:15 -Generating unique operation named: saveUsingPOST_10
2019-03-26 11:37:15 -Generating unique operation named: treeUsingGET_1
2019-03-26 11:37:15 -Generating unique operation named: treeUsingGET_2
2019-03-26 11:37:15 -Generating unique operation named: updateUsingPOST_11
2019-03-26 11:37:15 -Generating unique operation named: addUsingGET_11
2019-03-26 11:37:15 -Generating unique operation named: editUsingGET_12
2019-03-26 11:37:15 -Generating unique operation named: listUsingGET_13
2019-03-26 11:37:15 -Generating unique operation named: removeUsingPOST_22
2019-03-26 11:37:15 -Generating unique operation named: removeUsingPOST_23
2019-03-26 11:37:15 -Generating unique operation named: saveUsingPOST_11
2019-03-26 11:37:15 -Generating unique operation named: updateUsingGET_8
2019-03-26 11:37:15 -Generating unique operation named: updateUsingHEAD_8
2019-03-26 11:37:15 -Generating unique operation named: updateUsingPOST_12
2019-03-26 11:37:15 -Generating unique operation named: updateUsingPUT_8
2019-03-26 11:37:15 -Generating unique operation named: updateUsingPATCH_8
2019-03-26 11:37:15 -Generating unique operation named: updateUsingDELETE_8
2019-03-26 11:37:15 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-26 11:37:15 -Generating unique operation named: updateUsingTRACE_8
2019-03-26 11:37:15 -Generating unique operation named: addUsingGET_12
2019-03-26 11:37:15 -Generating unique operation named: editUsingGET_13
2019-03-26 11:37:15 -Generating unique operation named: listUsingGET_14
2019-03-26 11:37:15 -Generating unique operation named: removeUsingPOST_24
2019-03-26 11:37:15 -Generating unique operation named: removeUsingPOST_25
2019-03-26 11:37:15 -Generating unique operation named: saveUsingPOST_12
2019-03-26 11:37:15 -Generating unique operation named: updateUsingGET_9
2019-03-26 11:37:15 -Generating unique operation named: updateUsingHEAD_9
2019-03-26 11:37:15 -Generating unique operation named: updateUsingPOST_13
2019-03-26 11:37:15 -Generating unique operation named: updateUsingPUT_9
2019-03-26 11:37:15 -Generating unique operation named: updateUsingPATCH_9
2019-03-26 11:37:15 -Generating unique operation named: updateUsingDELETE_9
2019-03-26 11:37:15 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-26 11:37:15 -Generating unique operation named: updateUsingTRACE_9
2019-03-26 11:37:15 -Generating unique operation named: addUsingGET_13
2019-03-26 11:37:15 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-26 11:37:15 -Generating unique operation named: editUsingGET_14
2019-03-26 11:37:15 -Generating unique operation named: listUsingGET_15
2019-03-26 11:37:15 -Generating unique operation named: saveUsingPOST_13
2019-03-26 11:37:15 -Generating unique operation named: saveUsingPOST_14
2019-03-26 11:37:15 -Generating unique operation named: updateUsingPOST_14
2019-03-26 11:37:15 -Generating unique operation named: listUsingGET_16
2019-03-26 11:37:15 -Generating unique operation named: listUsingHEAD_1
2019-03-26 11:37:15 -Generating unique operation named: listUsingPOST_1
2019-03-26 11:37:15 -Generating unique operation named: listUsingPUT_1
2019-03-26 11:37:15 -Generating unique operation named: listUsingPATCH_1
2019-03-26 11:37:15 -Generating unique operation named: listUsingDELETE_1
2019-03-26 11:37:16 -Generating unique operation named: listUsingOPTIONS_1
2019-03-26 11:37:16 -Generating unique operation named: listUsingTRACE_1
2019-03-26 11:37:16 -Generating unique operation named: addUsingGET_14
2019-03-26 11:37:16 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-26 11:37:16 -Generating unique operation named: editUsingGET_15
2019-03-26 11:37:16 -Generating unique operation named: listUsingGET_17
2019-03-26 11:37:16 -Generating unique operation named: removeUsingPOST_26
2019-03-26 11:37:16 -Generating unique operation named: saveUsingPOST_15
2019-03-26 11:37:16 -Generating unique operation named: treeUsingGET_3
2019-03-26 11:37:16 -Generating unique operation named: treeViewUsingGET_1
2019-03-26 11:37:16 -Generating unique operation named: updateUsingPOST_15
2019-03-26 11:37:16 -Generating unique operation named: addUsingGET_15
2019-03-26 11:37:16 -Generating unique operation named: editUsingGET_16
2019-03-26 11:37:16 -Generating unique operation named: exprotExcelUsingGET_5
2019-03-26 11:37:16 -Generating unique operation named: listUsingGET_18
2019-03-26 11:37:16 -Generating unique operation named: removeUsingPOST_27
2019-03-26 11:37:16 -Generating unique operation named: removeUsingPOST_28
2019-03-26 11:37:16 -Generating unique operation named: saveUsingPOST_16
2019-03-26 11:37:16 -Generating unique operation named: updateUsingGET_10
2019-03-26 11:37:16 -Generating unique operation named: updateUsingHEAD_10
2019-03-26 11:37:16 -Generating unique operation named: updateUsingPOST_16
2019-03-26 11:37:16 -Generating unique operation named: updateUsingPUT_10
2019-03-26 11:37:16 -Generating unique operation named: updateUsingPATCH_10
2019-03-26 11:37:16 -Generating unique operation named: updateUsingDELETE_10
2019-03-26 11:37:16 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-26 11:37:16 -Generating unique operation named: updateUsingTRACE_10
2019-03-26 11:37:16 -Generating unique operation named: exprotExcelUsingGET_6
2019-03-26 11:37:16 -Generating unique operation named: addUsingGET_16
2019-03-26 11:37:16 -Generating unique operation named: editUsingGET_17
2019-03-26 11:37:16 -Generating unique operation named: listUsingGET_19
2019-03-26 11:37:16 -Generating unique operation named: removeUsingPOST_29
2019-03-26 11:37:16 -Generating unique operation named: removeUsingPOST_30
2019-03-26 11:37:16 -Generating unique operation named: saveUsingPOST_17
2019-03-26 11:37:16 -Generating unique operation named: updateUsingGET_11
2019-03-26 11:37:16 -Generating unique operation named: updateUsingHEAD_11
2019-03-26 11:37:16 -Generating unique operation named: updateUsingPOST_17
2019-03-26 11:37:16 -Generating unique operation named: updateUsingPUT_11
2019-03-26 11:37:16 -Generating unique operation named: updateUsingPATCH_11
2019-03-26 11:37:16 -Generating unique operation named: updateUsingDELETE_11
2019-03-26 11:37:16 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-26 11:37:16 -Generating unique operation named: updateUsingTRACE_11
2019-03-26 11:37:16 -Generating unique operation named: addUsingGET_17
2019-03-26 11:37:16 -Generating unique operation named: editUsingGET_18
2019-03-26 11:37:16 -Generating unique operation named: listUsingGET_20
2019-03-26 11:37:16 -Generating unique operation named: removeUsingPOST_31
2019-03-26 11:37:16 -Generating unique operation named: removeUsingPOST_32
2019-03-26 11:37:16 -Generating unique operation named: saveUsingPOST_18
2019-03-26 11:37:16 -Generating unique operation named: updateUsingGET_12
2019-03-26 11:37:16 -Generating unique operation named: updateUsingHEAD_12
2019-03-26 11:37:16 -Generating unique operation named: updateUsingPOST_18
2019-03-26 11:37:16 -Generating unique operation named: updateUsingPUT_12
2019-03-26 11:37:16 -Generating unique operation named: updateUsingPATCH_12
2019-03-26 11:37:16 -Generating unique operation named: updateUsingDELETE_12
2019-03-26 11:37:16 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-26 11:37:16 -Generating unique operation named: updateUsingTRACE_12
2019-03-26 11:37:16 -Starting Quartz Scheduler now
2019-03-26 11:37:16 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-26 11:37:16 -Starting...
2019-03-26 11:37:16 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-26 11:37:16 -Started.
2019-03-26 11:37:16 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-26 11:37:16 -Using a shared selector for servlet write/read
2019-03-26 11:37:16 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-26 11:37:16 -Started BootdoApplication in 24.723 seconds (JVM running for 25.74)
2019-03-26 11:37:16 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-26 11:37:17 -==> Parameters: 
2019-03-26 11:37:17 -<==      Total: 1
2019-03-26 11:38:09 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-03-26 11:38:20 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-26 11:38:20 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-26 11:38:20 -FrameworkServlet 'dispatcherServlet': initialization completed in 106 ms
2019-03-26 11:38:20 -Enabling session validation scheduler...
2019-03-26 11:38:21 -请求地址 : http://localhost:8081/login;JSESSIONID=d20e488b-588c-4d89-a0c0-e772a5148e3e
2019-03-26 11:38:21 -HTTP METHOD : GET
2019-03-26 11:38:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-26 11:38:21 -参数 : [{}]
2019-03-26 11:38:21 -耗时 : 4
2019-03-26 11:38:21 -返回值 : login
2019-03-26 11:38:22 -请求地址 : http://localhost:8081/getVerify
2019-03-26 11:38:22 -HTTP METHOD : GET
2019-03-26 11:38:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-26 11:38:22 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@3861d68e, org.apache.shiro.web.servlet.ShiroHttpServletResponse@7d634fe6]
2019-03-26 11:38:23 -9243
2019-03-26 11:38:23 -耗时 : 499
2019-03-26 11:38:23 -返回值 : null
2019-03-26 11:38:23 -请求地址 : http://localhost:8081/login
2019-03-26 11:38:23 -HTTP METHOD : GET
2019-03-26 11:38:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-26 11:38:23 -参数 : [{}]
2019-03-26 11:38:23 -耗时 : 1
2019-03-26 11:38:23 -返回值 : login
2019-03-26 11:38:28 -请求地址 : http://localhost:8081/login
2019-03-26 11:38:28 -HTTP METHOD : POST
2019-03-26 11:38:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-26 11:38:28 -参数 : [admin, 111111, 9243, org.apache.shiro.web.servlet.ShiroHttpServletRequest@7800a129]
2019-03-26 11:38:28 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-26 11:38:29 -==> Parameters: admin(String)
2019-03-26 11:38:29 -<==      Total: 1
2019-03-26 11:38:29 -耗时 : 183
2019-03-26 11:38:29 -返回值 : {msg=操作成功, code=0}
2019-03-26 11:38:29 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-03-26 11:38:29 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-26 11:38:29 -==> Parameters: 1(Long), admin(String), 登录(String), 183(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-26 11:38:29.165(Timestamp)
2019-03-26 11:38:29 -<==    Updates: 1
2019-03-26 11:38:29 -请求地址 : http://localhost:8081/index
2019-03-26 11:38:29 -HTTP METHOD : GET
2019-03-26 11:38:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-26 11:38:29 -参数 : [{}]
2019-03-26 11:38:29 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-26 11:38:29 -==> Parameters: 1(Long)
2019-03-26 11:38:29 -<==      Total: 46
2019-03-26 11:38:29 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-26 11:38:29 -==> Parameters: 138(Long)
2019-03-26 11:38:29 -<==      Total: 1
2019-03-26 11:38:29 -耗时 : 305
2019-03-26 11:38:29 -返回值 : index_v1
2019-03-26 11:38:29 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-26 11:38:29 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 305(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-26 11:38:29.659(Timestamp)
2019-03-26 11:38:29 -<==    Updates: 1
2019-03-26 11:38:29 -请求地址 : http://localhost:8081/main
2019-03-26 11:38:29 -HTTP METHOD : GET
2019-03-26 11:38:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-26 11:38:29 -参数 : []
2019-03-26 11:38:29 -耗时 : 1
2019-03-26 11:38:29 -返回值 : main
2019-03-26 11:38:30 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-26 11:38:30 -HTTP METHOD : GET
2019-03-26 11:38:30 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-26 11:38:30 -参数 : []
2019-03-26 11:38:30 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-26 11:38:30 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-26 11:38:30 -请求地址 : http://localhost:8081/main
2019-03-26 11:38:30 -HTTP METHOD : GET
2019-03-26 11:38:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-26 11:38:30 -参数 : []
2019-03-26 11:38:30 -耗时 : 0
2019-03-26 11:38:30 -返回值 : main
2019-03-26 11:38:30 -<==      Total: 0
2019-03-26 11:38:30 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-26 11:38:30 -==> Parameters: 1(Long), 0(String)
2019-03-26 11:38:30 -<==      Total: 1
2019-03-26 11:38:30 -耗时 : 144
2019-03-26 11:38:30 -返回值 : com.bootdo.common.utils.PageUtils@2c0b0dfd
2019-03-26 11:40:28 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-26 11:40:28 -==> Parameters: 1(Long)
2019-03-26 11:40:28 -<==      Total: 90
2019-03-26 11:40:28 -请求地址 : http://localhost:8081/print/print
2019-03-26 11:40:28 -HTTP METHOD : GET
2019-03-26 11:40:28 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-03-26 11:40:28 -参数 : []
2019-03-26 11:40:28 -耗时 : 1
2019-03-26 11:40:28 -返回值 : print/print/print
2019-03-26 11:40:29 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-26 11:40:29 -HTTP METHOD : GET
2019-03-26 11:40:29 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-26 11:40:29 -参数 : [userType]
2019-03-26 11:40:29 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-26 11:40:29 -==> Parameters: userType(String)
2019-03-26 11:40:29 -<==      Total: 2
2019-03-26 11:40:29 -耗时 : 56
2019-03-26 11:40:29 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-26 11:40:29 -请求地址 : http://localhost:8081/print/print/list
2019-03-26 11:40:29 -HTTP METHOD : GET
2019-03-26 11:40:29 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-26 11:40:29 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-26 11:40:30 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-03-26 11:40:30 -==> Parameters: 0(Integer), 10(Integer)
2019-03-26 11:40:30 -<==      Total: 3
2019-03-26 11:40:30 -==>  Preparing: select count(*) from print 
2019-03-26 11:40:30 -==> Parameters: 
2019-03-26 11:40:30 -<==      Total: 1
2019-03-26 11:40:30 -耗时 : 158
2019-03-26 11:40:30 -返回值 : com.bootdo.common.utils.PageUtils@1bd3a00
2019-03-26 11:40:38 -请求地址 : http://localhost:8081/print/print/list
2019-03-26 11:40:38 -HTTP METHOD : GET
2019-03-26 11:40:38 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-26 11:40:38 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=2019-03-26}]
2019-03-26 11:40:38 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE create_time = ? and `print_date` >= ? and `print_date` <= ? order by id asc limit ?, ? 
2019-03-26 11:40:38 -==> Parameters: 2019-03-26(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String), 0(Integer), 10(Integer)
2019-03-26 11:40:38 -<==      Total: 0
2019-03-26 11:40:38 -==>  Preparing: select count(*) from print WHERE create_time = ? and `print_date` >= ? and `print_date` <= ? 
2019-03-26 11:40:38 -==> Parameters: 2019-03-26(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String)
2019-03-26 11:40:38 -<==      Total: 1
2019-03-26 11:40:38 -耗时 : 15
2019-03-26 11:40:38 -返回值 : com.bootdo.common.utils.PageUtils@778d6202
2019-03-26 11:40:40 -请求地址 : http://localhost:8081/print/print/list
2019-03-26 11:40:40 -HTTP METHOD : GET
2019-03-26 11:40:40 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-26 11:40:40 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=2019-03-26}]
2019-03-26 11:40:40 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE create_time = ? and `print_date` >= ? and `print_date` <= ? order by id asc limit ?, ? 
2019-03-26 11:40:40 -==> Parameters: 2019-03-26(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String), 0(Integer), 10(Integer)
2019-03-26 11:40:40 -<==      Total: 0
2019-03-26 11:40:40 -==>  Preparing: select count(*) from print WHERE create_time = ? and `print_date` >= ? and `print_date` <= ? 
2019-03-26 11:40:40 -==> Parameters: 2019-03-26(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String)
2019-03-26 11:40:40 -<==      Total: 1
2019-03-26 11:40:40 -耗时 : 15
2019-03-26 11:40:40 -返回值 : com.bootdo.common.utils.PageUtils@1650e2bb
2019-03-26 11:40:41 -请求地址 : http://localhost:8081/print/print/list
2019-03-26 11:40:41 -HTTP METHOD : GET
2019-03-26 11:40:41 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-26 11:40:41 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=2019-03-26}]
2019-03-26 11:40:41 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE create_time = ? and `print_date` >= ? and `print_date` <= ? order by id asc limit ?, ? 
2019-03-26 11:40:41 -==> Parameters: 2019-03-26(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String), 0(Integer), 10(Integer)
2019-03-26 11:40:41 -<==      Total: 0
2019-03-26 11:40:41 -==>  Preparing: select count(*) from print WHERE create_time = ? and `print_date` >= ? and `print_date` <= ? 
2019-03-26 11:40:41 -==> Parameters: 2019-03-26(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String)
2019-03-26 11:40:41 -<==      Total: 1
2019-03-26 11:40:41 -耗时 : 12
2019-03-26 11:40:41 -返回值 : com.bootdo.common.utils.PageUtils@38d830bd
2019-03-26 11:40:41 -请求地址 : http://localhost:8081/print/print/list
2019-03-26 11:40:41 -HTTP METHOD : GET
2019-03-26 11:40:41 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-26 11:40:41 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=2019-03-26}]
2019-03-26 11:40:41 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE create_time = ? and `print_date` >= ? and `print_date` <= ? order by id asc limit ?, ? 
2019-03-26 11:40:41 -==> Parameters: 2019-03-26(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String), 0(Integer), 10(Integer)
2019-03-26 11:40:41 -<==      Total: 0
2019-03-26 11:40:41 -==>  Preparing: select count(*) from print WHERE create_time = ? and `print_date` >= ? and `print_date` <= ? 
2019-03-26 11:40:41 -==> Parameters: 2019-03-26(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String)
2019-03-26 11:40:41 -<==      Total: 1
2019-03-26 11:40:41 -耗时 : 10
2019-03-26 11:40:41 -返回值 : com.bootdo.common.utils.PageUtils@1bdf8485
2019-03-26 11:40:42 -请求地址 : http://localhost:8081/print/print/list
2019-03-26 11:40:42 -HTTP METHOD : GET
2019-03-26 11:40:42 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-26 11:40:42 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=2019-03-26}]
2019-03-26 11:40:42 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE create_time = ? and `print_date` >= ? and `print_date` <= ? order by id asc limit ?, ? 
2019-03-26 11:40:42 -==> Parameters: 2019-03-26(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String), 0(Integer), 10(Integer)
2019-03-26 11:40:42 -<==      Total: 0
2019-03-26 11:40:42 -==>  Preparing: select count(*) from print WHERE create_time = ? and `print_date` >= ? and `print_date` <= ? 
2019-03-26 11:40:42 -==> Parameters: 2019-03-26(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String)
2019-03-26 11:40:42 -<==      Total: 1
2019-03-26 11:40:42 -耗时 : 12
2019-03-26 11:40:42 -返回值 : com.bootdo.common.utils.PageUtils@2b9182ac
2019-03-26 11:40:42 -请求地址 : http://localhost:8081/print/print/list
2019-03-26 11:40:42 -HTTP METHOD : GET
2019-03-26 11:40:42 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-26 11:40:42 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=2019-03-26}]
2019-03-26 11:40:42 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE create_time = ? and `print_date` >= ? and `print_date` <= ? order by id asc limit ?, ? 
2019-03-26 11:40:42 -==> Parameters: 2019-03-26(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String), 0(Integer), 10(Integer)
2019-03-26 11:40:42 -<==      Total: 0
2019-03-26 11:40:42 -==>  Preparing: select count(*) from print WHERE create_time = ? and `print_date` >= ? and `print_date` <= ? 
2019-03-26 11:40:42 -==> Parameters: 2019-03-26(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String)
2019-03-26 11:40:42 -<==      Total: 1
2019-03-26 11:40:42 -耗时 : 8
2019-03-26 11:40:42 -返回值 : com.bootdo.common.utils.PageUtils@2807c4d8
2019-03-26 11:40:43 -请求地址 : http://localhost:8081/print/print/list
2019-03-26 11:40:43 -HTTP METHOD : GET
2019-03-26 11:40:43 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-26 11:40:43 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=2019-03-26}]
2019-03-26 11:40:43 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE create_time = ? and `print_date` >= ? and `print_date` <= ? order by id asc limit ?, ? 
2019-03-26 11:40:43 -==> Parameters: 2019-03-26(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String), 0(Integer), 10(Integer)
2019-03-26 11:40:43 -<==      Total: 0
2019-03-26 11:40:43 -==>  Preparing: select count(*) from print WHERE create_time = ? and `print_date` >= ? and `print_date` <= ? 
2019-03-26 11:40:43 -==> Parameters: 2019-03-26(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String)
2019-03-26 11:40:43 -<==      Total: 1
2019-03-26 11:40:43 -耗时 : 10
2019-03-26 11:40:43 -返回值 : com.bootdo.common.utils.PageUtils@1bf90d5f
2019-03-26 11:40:44 -请求地址 : http://localhost:8081/print/print/list
2019-03-26 11:40:44 -HTTP METHOD : GET
2019-03-26 11:40:44 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-26 11:40:44 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=2019-03-26}]
2019-03-26 11:40:44 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE create_time = ? and `print_date` >= ? and `print_date` <= ? order by id asc limit ?, ? 
2019-03-26 11:40:44 -==> Parameters: 2019-03-26(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String), 0(Integer), 10(Integer)
2019-03-26 11:40:44 -<==      Total: 0
2019-03-26 11:40:44 -==>  Preparing: select count(*) from print WHERE create_time = ? and `print_date` >= ? and `print_date` <= ? 
2019-03-26 11:40:44 -==> Parameters: 2019-03-26(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String)
2019-03-26 11:40:44 -<==      Total: 1
2019-03-26 11:40:44 -耗时 : 10
2019-03-26 11:40:44 -返回值 : com.bootdo.common.utils.PageUtils@e306d1c
2019-03-26 11:40:45 -请求地址 : http://localhost:8081/print/print/list
2019-03-26 11:40:45 -HTTP METHOD : GET
2019-03-26 11:40:45 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-26 11:40:45 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=2019-03-26}]
2019-03-26 11:40:45 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE create_time = ? and `print_date` >= ? and `print_date` <= ? order by id asc limit ?, ? 
2019-03-26 11:40:45 -==> Parameters: 2019-03-26(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String), 0(Integer), 10(Integer)
2019-03-26 11:40:45 -<==      Total: 0
2019-03-26 11:40:45 -==>  Preparing: select count(*) from print WHERE create_time = ? and `print_date` >= ? and `print_date` <= ? 
2019-03-26 11:40:45 -==> Parameters: 2019-03-26(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String)
2019-03-26 11:40:45 -<==      Total: 1
2019-03-26 11:40:45 -耗时 : 10
2019-03-26 11:40:45 -返回值 : com.bootdo.common.utils.PageUtils@4312c68d
2019-03-26 11:40:45 -请求地址 : http://localhost:8081/print/print/list
2019-03-26 11:40:45 -HTTP METHOD : GET
2019-03-26 11:40:45 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-26 11:40:45 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=2019-03-26}]
2019-03-26 11:40:45 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE create_time = ? and `print_date` >= ? and `print_date` <= ? order by id asc limit ?, ? 
2019-03-26 11:40:45 -==> Parameters: 2019-03-26(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String), 0(Integer), 10(Integer)
2019-03-26 11:40:45 -<==      Total: 0
2019-03-26 11:40:45 -==>  Preparing: select count(*) from print WHERE create_time = ? and `print_date` >= ? and `print_date` <= ? 
2019-03-26 11:40:45 -==> Parameters: 2019-03-26(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String)
2019-03-26 11:40:45 -<==      Total: 1
2019-03-26 11:40:45 -耗时 : 10
2019-03-26 11:40:45 -返回值 : com.bootdo.common.utils.PageUtils@4a5e9308
2019-03-26 11:40:45 -请求地址 : http://localhost:8081/print/print/list
2019-03-26 11:40:45 -HTTP METHOD : GET
2019-03-26 11:40:45 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-26 11:40:45 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=2019-03-26}]
2019-03-26 11:40:45 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE create_time = ? and `print_date` >= ? and `print_date` <= ? order by id asc limit ?, ? 
2019-03-26 11:40:45 -==> Parameters: 2019-03-26(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String), 0(Integer), 10(Integer)
2019-03-26 11:40:45 -<==      Total: 0
2019-03-26 11:40:45 -==>  Preparing: select count(*) from print WHERE create_time = ? and `print_date` >= ? and `print_date` <= ? 
2019-03-26 11:40:45 -==> Parameters: 2019-03-26(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String)
2019-03-26 11:40:45 -<==      Total: 1
2019-03-26 11:40:45 -耗时 : 27
2019-03-26 11:40:45 -返回值 : com.bootdo.common.utils.PageUtils@2b361e13
2019-03-26 11:40:45 -请求地址 : http://localhost:8081/print/print/list
2019-03-26 11:40:45 -HTTP METHOD : GET
2019-03-26 11:40:45 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-26 11:40:45 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=2019-03-26}]
2019-03-26 11:40:45 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE create_time = ? and `print_date` >= ? and `print_date` <= ? order by id asc limit ?, ? 
2019-03-26 11:40:45 -==> Parameters: 2019-03-26(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String), 0(Integer), 10(Integer)
2019-03-26 11:40:45 -<==      Total: 0
2019-03-26 11:40:45 -==>  Preparing: select count(*) from print WHERE create_time = ? and `print_date` >= ? and `print_date` <= ? 
2019-03-26 11:40:45 -==> Parameters: 2019-03-26(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String)
2019-03-26 11:40:45 -<==      Total: 1
2019-03-26 11:40:45 -耗时 : 16
2019-03-26 11:40:45 -返回值 : com.bootdo.common.utils.PageUtils@268e45e7
2019-03-26 13:57:48 -Starting BootdoApplication on ZJZL-20180906VX with PID 10764 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-26 13:57:48 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-26 13:57:48 -The following profiles are active: dev
2019-03-26 13:57:48 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@f73dcd6: startup date [Tue Mar 26 13:57:48 CST 2019]; root of context hierarchy
2019-03-26 13:57:52 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-26 13:57:54 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$2957df5a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 13:57:54 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$1bb10e01] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 13:57:55 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 13:57:55 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 13:57:55 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 13:57:55 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-26 13:57:55 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-26 13:57:55 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 13:57:55 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 13:57:56 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 13:57:56 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 13:57:56 -Tomcat initialized with port(s): 8081 (http)
2019-03-26 13:57:57 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-26 13:57:57 -Starting service [Tomcat]
2019-03-26 13:57:57 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-26 13:57:57 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-26 13:57:57 -Initializing Spring embedded WebApplicationContext
2019-03-26 13:57:57 -Root WebApplicationContext: initialization completed in 8824 ms
2019-03-26 13:57:58 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-26 13:57:58 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-26 13:57:58 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-26 13:57:58 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-26 13:57:58 -Filter xssFilter was not registered (disabled)
2019-03-26 13:57:58 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-26 13:57:58 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-26 13:57:58 -Servlet statViewServlet mapped to [/druid/*]
2019-03-26 13:57:58 -Servlet dispatcherServlet mapped to [/]
2019-03-26 13:58:01 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@f73dcd6: startup date [Tue Mar 26 13:57:48 CST 2019]; root of context hierarchy
2019-03-26 13:58:01 -Using default implementation for ThreadExecutor
2019-03-26 13:58:01 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-26 13:58:01 -Quartz Scheduler v.2.2.1 created.
2019-03-26 13:58:01 -RAMJobStore initialized.
2019-03-26 13:58:01 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-26 13:58:01 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-26 13:58:01 -Quartz scheduler version: 2.2.1
2019-03-26 13:58:01 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@47d4e28a
2019-03-26 13:58:02 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-26 13:58:02 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-26 13:58:06 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-26 13:58:06 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-03-26 13:58:06 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-26 13:58:06 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-26 13:58:06 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-26 13:58:06 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-26 13:58:06 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-26 13:58:06 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-26 13:58:06 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-26 13:58:06 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-26 13:58:06 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-26 13:58:06 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 13:58:06 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-26 13:58:06 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-26 13:58:06 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-26 13:58:06 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 13:58:06 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-26 13:58:06 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-26 13:58:06 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-26 13:58:06 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-26 13:58:06 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-26 13:58:06 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-26 13:58:06 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 13:58:06 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-26 13:58:06 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-26 13:58:06 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-26 13:58:06 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 13:58:06 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-26 13:58:06 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 13:58:06 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-26 13:58:06 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-26 13:58:06 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-26 13:58:06 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-26 13:58:06 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-26 13:58:06 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-26 13:58:06 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-26 13:58:06 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-26 13:58:06 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-26 13:58:06 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 13:58:06 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-26 13:58:06 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-26 13:58:06 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-26 13:58:06 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 13:58:06 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-26 13:58:06 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-26 13:58:06 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-26 13:58:06 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 13:58:06 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-26 13:58:06 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-03-26 13:58:06 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-26 13:58:06 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-26 13:58:06 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-26 13:58:06 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-26 13:58:06 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-26 13:58:06 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-26 13:58:06 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-26 13:58:06 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-26 13:58:06 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-26 13:58:06 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-26 13:58:06 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 13:58:06 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-26 13:58:06 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-26 13:58:06 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-03-26 13:58:06 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-26 13:58:06 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-26 13:58:06 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-26 13:58:06 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-26 13:58:06 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-26 13:58:06 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 13:58:06 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-03-26 13:58:06 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-26 13:58:06 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 13:58:06 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-26 13:58:06 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-26 13:58:06 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-26 13:58:06 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-26 13:58:06 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-26 13:58:06 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-26 13:58:06 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 13:58:06 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-26 13:58:06 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-26 13:58:06 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-26 13:58:06 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-26 13:58:06 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-26 13:58:06 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-26 13:58:06 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-26 13:58:06 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-26 13:58:06 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-26 13:58:06 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-26 13:58:06 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 13:58:06 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-26 13:58:06 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-26 13:58:06 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 13:58:06 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-26 13:58:06 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-03-26 13:58:06 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-03-26 13:58:06 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-26 13:58:06 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-26 13:58:06 -Mapped "{[/moneyList/moneyList/LikeName],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.LikeName(org.springframework.ui.Model)
2019-03-26 13:58:06 -Mapped "{[/moneyList/moneyList/UserList],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-26 13:58:06 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-26 13:58:06 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-26 13:58:06 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-26 13:58:06 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-26 13:58:06 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 13:58:06 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-26 13:58:06 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-26 13:58:06 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-26 13:58:06 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 13:58:06 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-26 13:58:06 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-26 13:58:06 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-26 13:58:06 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-26 13:58:06 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 13:58:06 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-26 13:58:06 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-26 13:58:06 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-26 13:58:06 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 13:58:06 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-26 13:58:06 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-26 13:58:06 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-26 13:58:06 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-26 13:58:06 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 13:58:06 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-26 13:58:06 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-26 13:58:06 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-26 13:58:06 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 13:58:06 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-26 13:58:06 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-26 13:58:06 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-26 13:58:06 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-26 13:58:06 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-26 13:58:06 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 13:58:06 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-26 13:58:06 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-26 13:58:06 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 13:58:06 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-26 13:58:06 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-26 13:58:06 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 13:58:06 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-26 13:58:06 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-26 13:58:06 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-26 13:58:06 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-26 13:58:06 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 13:58:06 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-26 13:58:06 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-26 13:58:06 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-26 13:58:06 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 13:58:06 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 13:58:06 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-26 13:58:06 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-26 13:58:06 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-26 13:58:06 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-26 13:58:06 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-26 13:58:06 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-26 13:58:06 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-26 13:58:06 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-26 13:58:06 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-26 13:58:06 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 13:58:06 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-26 13:58:06 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-26 13:58:06 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-26 13:58:06 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-26 13:58:06 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-26 13:58:06 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-26 13:58:06 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-26 13:58:06 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-26 13:58:06 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-26 13:58:06 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-26 13:58:06 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 13:58:06 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-26 13:58:06 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-26 13:58:06 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-26 13:58:06 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-26 13:58:06 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-26 13:58:06 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-26 13:58:06 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-26 13:58:06 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-26 13:58:06 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-26 13:58:06 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-26 13:58:06 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-26 13:58:06 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-26 13:58:06 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 13:58:06 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-26 13:58:06 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-26 13:58:06 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-26 13:58:06 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-26 13:58:06 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 13:58:06 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-26 13:58:06 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-26 13:58:06 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-26 13:58:06 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 13:58:06 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-26 13:58:06 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-26 13:58:06 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-26 13:58:06 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-26 13:58:06 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-26 13:58:06 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-26 13:58:06 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-26 13:58:06 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-26 13:58:06 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-26 13:58:06 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-26 13:58:06 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-26 13:58:06 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-26 13:58:06 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-26 13:58:06 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-26 13:58:06 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-26 13:58:06 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-26 13:58:06 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-26 13:58:06 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 13:58:06 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-26 13:58:06 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 13:58:06 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-26 13:58:06 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 13:58:06 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-26 13:58:06 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-26 13:58:06 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-26 13:58:06 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-26 13:58:06 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-26 13:58:06 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-26 13:58:06 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-26 13:58:06 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 13:58:06 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-26 13:58:06 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-26 13:58:06 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 13:58:06 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-03-26 13:58:06 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-26 13:58:06 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-03-26 13:58:06 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-26 13:58:06 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-26 13:58:06 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-26 13:58:06 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-26 13:58:06 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-26 13:58:07 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-26 13:58:07 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-26 13:58:07 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-26 13:58:08 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-26 13:58:08 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@f73dcd6: startup date [Tue Mar 26 13:57:48 CST 2019]; root of context hierarchy
2019-03-26 13:58:08 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-26 13:58:08 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-26 13:58:08 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-26 13:58:08 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-26 13:58:09 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-26 13:58:11 -Registering beans for JMX exposure on startup
2019-03-26 13:58:11 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-26 13:58:11 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-26 13:58:11 -Starting beans in phase 2147483647
2019-03-26 13:58:11 -Context refreshed
2019-03-26 13:58:11 -Found 1 custom documentation plugin(s)
2019-03-26 13:58:11 -Scanning for api listing references
2019-03-26 13:58:12 -Generating unique operation named: removeUsingPOST_1
2019-03-26 13:58:12 -Generating unique operation named: addUsingGET_1
2019-03-26 13:58:12 -Generating unique operation named: editUsingGET_1
2019-03-26 13:58:12 -Generating unique operation named: listUsingGET_1
2019-03-26 13:58:12 -Generating unique operation named: removeUsingPOST_2
2019-03-26 13:58:12 -Generating unique operation named: removeUsingPOST_3
2019-03-26 13:58:12 -Generating unique operation named: saveUsingPOST_1
2019-03-26 13:58:12 -Generating unique operation named: updateUsingGET_1
2019-03-26 13:58:12 -Generating unique operation named: updateUsingHEAD_1
2019-03-26 13:58:12 -Generating unique operation named: updateUsingPOST_1
2019-03-26 13:58:12 -Generating unique operation named: updateUsingPUT_1
2019-03-26 13:58:12 -Generating unique operation named: updateUsingPATCH_1
2019-03-26 13:58:12 -Generating unique operation named: updateUsingDELETE_1
2019-03-26 13:58:12 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-26 13:58:12 -Generating unique operation named: updateUsingTRACE_1
2019-03-26 13:58:12 -Generating unique operation named: addUsingGET_2
2019-03-26 13:58:12 -Generating unique operation named: editUsingGET_2
2019-03-26 13:58:12 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-26 13:58:12 -Generating unique operation named: listUsingGET_2
2019-03-26 13:58:12 -Generating unique operation named: removeUsingPOST_4
2019-03-26 13:58:12 -Generating unique operation named: removeUsingPOST_5
2019-03-26 13:58:12 -Generating unique operation named: saveUsingPOST_2
2019-03-26 13:58:12 -Generating unique operation named: updateUsingPOST_2
2019-03-26 13:58:12 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-26 13:58:12 -Generating unique operation named: addUsingGET_3
2019-03-26 13:58:12 -Generating unique operation named: editUsingGET_3
2019-03-26 13:58:12 -Generating unique operation named: listUsingGET_3
2019-03-26 13:58:12 -Generating unique operation named: removeUsingPOST_6
2019-03-26 13:58:12 -Generating unique operation named: removeUsingPOST_7
2019-03-26 13:58:12 -Generating unique operation named: saveUsingPOST_3
2019-03-26 13:58:12 -Generating unique operation named: updateUsingGET_2
2019-03-26 13:58:12 -Generating unique operation named: updateUsingHEAD_2
2019-03-26 13:58:12 -Generating unique operation named: updateUsingPOST_3
2019-03-26 13:58:12 -Generating unique operation named: updateUsingPUT_2
2019-03-26 13:58:12 -Generating unique operation named: updateUsingPATCH_2
2019-03-26 13:58:12 -Generating unique operation named: updateUsingDELETE_2
2019-03-26 13:58:12 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-26 13:58:12 -Generating unique operation named: updateUsingTRACE_2
2019-03-26 13:58:12 -Generating unique operation named: addUsingGET_4
2019-03-26 13:58:12 -Generating unique operation named: editUsingGET_4
2019-03-26 13:58:12 -Generating unique operation named: listUsingGET_4
2019-03-26 13:58:12 -Generating unique operation named: removeUsingPOST_8
2019-03-26 13:58:12 -Generating unique operation named: removeUsingPOST_9
2019-03-26 13:58:12 -Generating unique operation named: saveUsingPOST_4
2019-03-26 13:58:12 -Generating unique operation named: updateUsingGET_3
2019-03-26 13:58:12 -Generating unique operation named: updateUsingHEAD_3
2019-03-26 13:58:12 -Generating unique operation named: updateUsingPOST_4
2019-03-26 13:58:12 -Generating unique operation named: updateUsingPUT_3
2019-03-26 13:58:12 -Generating unique operation named: updateUsingPATCH_3
2019-03-26 13:58:12 -Generating unique operation named: updateUsingDELETE_3
2019-03-26 13:58:12 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-26 13:58:12 -Generating unique operation named: updateUsingTRACE_3
2019-03-26 13:58:12 -Generating unique operation named: ElecUsingGET_1
2019-03-26 13:58:12 -Generating unique operation named: addUsingGET_5
2019-03-26 13:58:12 -Generating unique operation named: editUsingGET_5
2019-03-26 13:58:12 -Generating unique operation named: listUsingGET_5
2019-03-26 13:58:12 -Generating unique operation named: removeUsingPOST_10
2019-03-26 13:58:12 -Generating unique operation named: removeUsingPOST_11
2019-03-26 13:58:12 -Generating unique operation named: saveUsingPOST_5
2019-03-26 13:58:12 -Generating unique operation named: updateUsingGET_4
2019-03-26 13:58:12 -Generating unique operation named: updateUsingHEAD_4
2019-03-26 13:58:13 -Generating unique operation named: updateUsingPOST_5
2019-03-26 13:58:13 -Generating unique operation named: updateUsingPUT_4
2019-03-26 13:58:13 -Generating unique operation named: updateUsingPATCH_4
2019-03-26 13:58:13 -Generating unique operation named: updateUsingDELETE_4
2019-03-26 13:58:13 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-26 13:58:13 -Generating unique operation named: updateUsingTRACE_4
2019-03-26 13:58:13 -Generating unique operation named: editUsingGET_6
2019-03-26 13:58:13 -Generating unique operation named: listUsingGET_6
2019-03-26 13:58:13 -Generating unique operation named: updateUsingPOST_6
2019-03-26 13:58:13 -Generating unique operation named: addUsingGET_6
2019-03-26 13:58:13 -Generating unique operation named: editUsingGET_7
2019-03-26 13:58:13 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-26 13:58:13 -Generating unique operation named: listUsingGET_7
2019-03-26 13:58:13 -Generating unique operation named: removeUsingPOST_12
2019-03-26 13:58:13 -Generating unique operation named: removeUsingPOST_13
2019-03-26 13:58:13 -Generating unique operation named: saveUsingPOST_6
2019-03-26 13:58:13 -Generating unique operation named: updateUsingGET_5
2019-03-26 13:58:13 -Generating unique operation named: updateUsingHEAD_5
2019-03-26 13:58:13 -Generating unique operation named: updateUsingPOST_7
2019-03-26 13:58:13 -Generating unique operation named: updateUsingPUT_5
2019-03-26 13:58:13 -Generating unique operation named: updateUsingPATCH_5
2019-03-26 13:58:13 -Generating unique operation named: updateUsingDELETE_5
2019-03-26 13:58:13 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-26 13:58:13 -Generating unique operation named: updateUsingTRACE_5
2019-03-26 13:58:13 -Generating unique operation named: exprotExcelUsingGET_4
2019-03-26 13:58:13 -Generating unique operation named: addUsingGET_7
2019-03-26 13:58:13 -Generating unique operation named: editUsingGET_8
2019-03-26 13:58:13 -Generating unique operation named: listUsingGET_8
2019-03-26 13:58:13 -Generating unique operation named: removeUsingPOST_14
2019-03-26 13:58:13 -Generating unique operation named: removeUsingPOST_15
2019-03-26 13:58:13 -Generating unique operation named: saveUsingPOST_7
2019-03-26 13:58:13 -Generating unique operation named: updateUsingGET_6
2019-03-26 13:58:13 -Generating unique operation named: updateUsingHEAD_6
2019-03-26 13:58:13 -Generating unique operation named: updateUsingPOST_8
2019-03-26 13:58:13 -Generating unique operation named: updateUsingPUT_6
2019-03-26 13:58:13 -Generating unique operation named: updateUsingPATCH_6
2019-03-26 13:58:13 -Generating unique operation named: updateUsingDELETE_6
2019-03-26 13:58:13 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-26 13:58:13 -Generating unique operation named: updateUsingTRACE_6
2019-03-26 13:58:13 -Generating unique operation named: addUsingGET_8
2019-03-26 13:58:13 -Generating unique operation named: editUsingGET_9
2019-03-26 13:58:13 -Generating unique operation named: listUsingGET_9
2019-03-26 13:58:13 -Generating unique operation named: removeUsingPOST_16
2019-03-26 13:58:13 -Generating unique operation named: removeUsingPOST_17
2019-03-26 13:58:13 -Generating unique operation named: saveUsingPOST_8
2019-03-26 13:58:13 -Generating unique operation named: updateUsingGET_7
2019-03-26 13:58:13 -Generating unique operation named: updateUsingHEAD_7
2019-03-26 13:58:13 -Generating unique operation named: updateUsingPOST_9
2019-03-26 13:58:13 -Generating unique operation named: updateUsingPUT_7
2019-03-26 13:58:13 -Generating unique operation named: updateUsingPATCH_7
2019-03-26 13:58:13 -Generating unique operation named: updateUsingDELETE_7
2019-03-26 13:58:13 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-26 13:58:13 -Generating unique operation named: updateUsingTRACE_7
2019-03-26 13:58:13 -Generating unique operation named: addUsingGET_9
2019-03-26 13:58:13 -Generating unique operation named: editUsingGET_10
2019-03-26 13:58:13 -Generating unique operation named: infoUsingGET_1
2019-03-26 13:58:13 -Generating unique operation named: infoUsingHEAD_1
2019-03-26 13:58:13 -Generating unique operation named: infoUsingPOST_1
2019-03-26 13:58:13 -Generating unique operation named: infoUsingPUT_1
2019-03-26 13:58:13 -Generating unique operation named: infoUsingPATCH_1
2019-03-26 13:58:13 -Generating unique operation named: infoUsingDELETE_1
2019-03-26 13:58:13 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-26 13:58:13 -Generating unique operation named: infoUsingTRACE_1
2019-03-26 13:58:13 -Generating unique operation named: listUsingGET_10
2019-03-26 13:58:13 -Generating unique operation named: removeUsingPOST_18
2019-03-26 13:58:13 -Generating unique operation named: removeUsingPOST_19
2019-03-26 13:58:13 -Generating unique operation named: saveUsingPOST_9
2019-03-26 13:58:13 -Generating unique operation named: updateUsingPOST_10
2019-03-26 13:58:13 -Generating unique operation named: listUsingGET_11
2019-03-26 13:58:13 -Generating unique operation named: removeUsingPOST_20
2019-03-26 13:58:13 -Generating unique operation named: welcomeUsingGET_1
2019-03-26 13:58:13 -Generating unique operation named: addUsingGET_10
2019-03-26 13:58:13 -Generating unique operation named: editUsingGET_11
2019-03-26 13:58:13 -Generating unique operation named: listUsingGET_12
2019-03-26 13:58:13 -Generating unique operation named: removeUsingPOST_21
2019-03-26 13:58:13 -Generating unique operation named: saveUsingPOST_10
2019-03-26 13:58:13 -Generating unique operation named: treeUsingGET_1
2019-03-26 13:58:13 -Generating unique operation named: treeUsingGET_2
2019-03-26 13:58:13 -Generating unique operation named: updateUsingPOST_11
2019-03-26 13:58:13 -Generating unique operation named: addUsingGET_11
2019-03-26 13:58:13 -Generating unique operation named: editUsingGET_12
2019-03-26 13:58:13 -Generating unique operation named: listUsingGET_13
2019-03-26 13:58:13 -Generating unique operation named: removeUsingPOST_22
2019-03-26 13:58:13 -Generating unique operation named: removeUsingPOST_23
2019-03-26 13:58:13 -Generating unique operation named: saveUsingPOST_11
2019-03-26 13:58:13 -Generating unique operation named: updateUsingGET_8
2019-03-26 13:58:13 -Generating unique operation named: updateUsingHEAD_8
2019-03-26 13:58:13 -Generating unique operation named: updateUsingPOST_12
2019-03-26 13:58:13 -Generating unique operation named: updateUsingPUT_8
2019-03-26 13:58:13 -Generating unique operation named: updateUsingPATCH_8
2019-03-26 13:58:13 -Generating unique operation named: updateUsingDELETE_8
2019-03-26 13:58:13 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-26 13:58:13 -Generating unique operation named: updateUsingTRACE_8
2019-03-26 13:58:14 -Generating unique operation named: addUsingGET_12
2019-03-26 13:58:14 -Generating unique operation named: editUsingGET_13
2019-03-26 13:58:14 -Generating unique operation named: listUsingGET_14
2019-03-26 13:58:14 -Generating unique operation named: removeUsingPOST_24
2019-03-26 13:58:14 -Generating unique operation named: removeUsingPOST_25
2019-03-26 13:58:14 -Generating unique operation named: saveUsingPOST_12
2019-03-26 13:58:14 -Generating unique operation named: updateUsingGET_9
2019-03-26 13:58:14 -Generating unique operation named: updateUsingHEAD_9
2019-03-26 13:58:14 -Generating unique operation named: updateUsingPOST_13
2019-03-26 13:58:14 -Generating unique operation named: updateUsingPUT_9
2019-03-26 13:58:14 -Generating unique operation named: updateUsingPATCH_9
2019-03-26 13:58:14 -Generating unique operation named: updateUsingDELETE_9
2019-03-26 13:58:14 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-26 13:58:14 -Generating unique operation named: updateUsingTRACE_9
2019-03-26 13:58:14 -Generating unique operation named: addUsingGET_13
2019-03-26 13:58:14 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-26 13:58:14 -Generating unique operation named: editUsingGET_14
2019-03-26 13:58:14 -Generating unique operation named: listUsingGET_15
2019-03-26 13:58:14 -Generating unique operation named: saveUsingPOST_13
2019-03-26 13:58:14 -Generating unique operation named: saveUsingPOST_14
2019-03-26 13:58:14 -Generating unique operation named: updateUsingPOST_14
2019-03-26 13:58:14 -Generating unique operation named: listUsingGET_16
2019-03-26 13:58:14 -Generating unique operation named: listUsingHEAD_1
2019-03-26 13:58:14 -Generating unique operation named: listUsingPOST_1
2019-03-26 13:58:14 -Generating unique operation named: listUsingPUT_1
2019-03-26 13:58:14 -Generating unique operation named: listUsingPATCH_1
2019-03-26 13:58:14 -Generating unique operation named: listUsingDELETE_1
2019-03-26 13:58:14 -Generating unique operation named: listUsingOPTIONS_1
2019-03-26 13:58:14 -Generating unique operation named: listUsingTRACE_1
2019-03-26 13:58:14 -Generating unique operation named: addUsingGET_14
2019-03-26 13:58:14 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-26 13:58:14 -Generating unique operation named: editUsingGET_15
2019-03-26 13:58:14 -Generating unique operation named: listUsingGET_17
2019-03-26 13:58:14 -Generating unique operation named: removeUsingPOST_26
2019-03-26 13:58:14 -Generating unique operation named: saveUsingPOST_15
2019-03-26 13:58:14 -Generating unique operation named: treeUsingGET_3
2019-03-26 13:58:14 -Generating unique operation named: treeViewUsingGET_1
2019-03-26 13:58:14 -Generating unique operation named: updateUsingPOST_15
2019-03-26 13:58:14 -Generating unique operation named: addUsingGET_15
2019-03-26 13:58:14 -Generating unique operation named: editUsingGET_16
2019-03-26 13:58:14 -Generating unique operation named: exprotExcelUsingGET_5
2019-03-26 13:58:14 -Generating unique operation named: listUsingGET_18
2019-03-26 13:58:14 -Generating unique operation named: removeUsingPOST_27
2019-03-26 13:58:14 -Generating unique operation named: removeUsingPOST_28
2019-03-26 13:58:14 -Generating unique operation named: saveUsingPOST_16
2019-03-26 13:58:14 -Generating unique operation named: updateUsingGET_10
2019-03-26 13:58:14 -Generating unique operation named: updateUsingHEAD_10
2019-03-26 13:58:14 -Generating unique operation named: updateUsingPOST_16
2019-03-26 13:58:14 -Generating unique operation named: updateUsingPUT_10
2019-03-26 13:58:14 -Generating unique operation named: updateUsingPATCH_10
2019-03-26 13:58:14 -Generating unique operation named: updateUsingDELETE_10
2019-03-26 13:58:14 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-26 13:58:14 -Generating unique operation named: updateUsingTRACE_10
2019-03-26 13:58:14 -Generating unique operation named: exprotExcelUsingGET_6
2019-03-26 13:58:14 -Generating unique operation named: addUsingGET_16
2019-03-26 13:58:14 -Generating unique operation named: editUsingGET_17
2019-03-26 13:58:14 -Generating unique operation named: listUsingGET_19
2019-03-26 13:58:14 -Generating unique operation named: removeUsingPOST_29
2019-03-26 13:58:14 -Generating unique operation named: removeUsingPOST_30
2019-03-26 13:58:14 -Generating unique operation named: saveUsingPOST_17
2019-03-26 13:58:14 -Generating unique operation named: updateUsingGET_11
2019-03-26 13:58:14 -Generating unique operation named: updateUsingHEAD_11
2019-03-26 13:58:14 -Generating unique operation named: updateUsingPOST_17
2019-03-26 13:58:14 -Generating unique operation named: updateUsingPUT_11
2019-03-26 13:58:14 -Generating unique operation named: updateUsingPATCH_11
2019-03-26 13:58:14 -Generating unique operation named: updateUsingDELETE_11
2019-03-26 13:58:14 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-26 13:58:14 -Generating unique operation named: updateUsingTRACE_11
2019-03-26 13:58:14 -Generating unique operation named: addUsingGET_17
2019-03-26 13:58:14 -Generating unique operation named: editUsingGET_18
2019-03-26 13:58:14 -Generating unique operation named: listUsingGET_20
2019-03-26 13:58:14 -Generating unique operation named: removeUsingPOST_31
2019-03-26 13:58:14 -Generating unique operation named: removeUsingPOST_32
2019-03-26 13:58:14 -Generating unique operation named: saveUsingPOST_18
2019-03-26 13:58:14 -Generating unique operation named: updateUsingGET_12
2019-03-26 13:58:14 -Generating unique operation named: updateUsingHEAD_12
2019-03-26 13:58:14 -Generating unique operation named: updateUsingPOST_18
2019-03-26 13:58:14 -Generating unique operation named: updateUsingPUT_12
2019-03-26 13:58:14 -Generating unique operation named: updateUsingPATCH_12
2019-03-26 13:58:14 -Generating unique operation named: updateUsingDELETE_12
2019-03-26 13:58:14 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-26 13:58:14 -Generating unique operation named: updateUsingTRACE_12
2019-03-26 13:58:14 -Starting Quartz Scheduler now
2019-03-26 13:58:14 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-26 13:58:14 -Starting...
2019-03-26 13:58:14 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-26 13:58:14 -Started.
2019-03-26 13:58:14 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-26 13:58:14 -Using a shared selector for servlet write/read
2019-03-26 13:58:14 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-26 13:58:14 -Started BootdoApplication in 28.623 seconds (JVM running for 30.475)
2019-03-26 13:58:15 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-26 13:58:15 -==> Parameters: 
2019-03-26 13:58:15 -<==      Total: 1
2019-03-26 13:59:07 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-03-26 14:01:22 -Starting BootdoApplication on ZJZL-20180906VX with PID 10320 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-26 14:01:22 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-26 14:01:22 -The following profiles are active: dev
2019-03-26 14:01:22 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Tue Mar 26 14:01:22 CST 2019]; root of context hierarchy
2019-03-26 14:01:25 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-26 14:01:27 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b64ed7a1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 14:01:27 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$a8a80648] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 14:01:27 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 14:01:28 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 14:01:28 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 14:01:28 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-26 14:01:28 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-26 14:01:28 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 14:01:28 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 14:01:28 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 14:01:28 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 14:01:29 -Tomcat initialized with port(s): 8081 (http)
2019-03-26 14:01:29 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-26 14:01:29 -Starting service [Tomcat]
2019-03-26 14:01:29 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-26 14:01:29 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-26 14:01:30 -Initializing Spring embedded WebApplicationContext
2019-03-26 14:01:30 -Root WebApplicationContext: initialization completed in 7411 ms
2019-03-26 14:01:30 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-26 14:01:30 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-26 14:01:30 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-26 14:01:30 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-26 14:01:30 -Filter xssFilter was not registered (disabled)
2019-03-26 14:01:30 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-26 14:01:30 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-26 14:01:30 -Servlet statViewServlet mapped to [/druid/*]
2019-03-26 14:01:30 -Servlet dispatcherServlet mapped to [/]
2019-03-26 14:01:32 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Tue Mar 26 14:01:22 CST 2019]; root of context hierarchy
2019-03-26 14:01:33 -Using default implementation for ThreadExecutor
2019-03-26 14:01:33 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-26 14:01:33 -Quartz Scheduler v.2.2.1 created.
2019-03-26 14:01:33 -RAMJobStore initialized.
2019-03-26 14:01:33 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-26 14:01:33 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-26 14:01:33 -Quartz scheduler version: 2.2.1
2019-03-26 14:01:33 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@9281d19
2019-03-26 14:01:33 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-26 14:01:33 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-26 14:01:35 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-03-26 14:01:35 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-26 14:01:35 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-26 14:01:35 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-26 14:01:35 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-26 14:01:35 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-26 14:01:35 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-26 14:01:35 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-26 14:01:35 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-26 14:01:35 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-26 14:01:35 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-26 14:01:35 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 14:01:35 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-26 14:01:35 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-26 14:01:35 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-26 14:01:35 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-26 14:01:35 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 14:01:35 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-26 14:01:35 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-26 14:01:35 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-26 14:01:35 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-26 14:01:35 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-26 14:01:35 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 14:01:35 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-26 14:01:35 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-26 14:01:35 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-26 14:01:35 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 14:01:35 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-26 14:01:35 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 14:01:35 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-26 14:01:35 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-26 14:01:35 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-26 14:01:35 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-26 14:01:35 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-26 14:01:35 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-26 14:01:35 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-26 14:01:35 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-26 14:01:35 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-26 14:01:35 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 14:01:35 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-26 14:01:35 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-26 14:01:35 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 14:01:35 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-26 14:01:35 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-26 14:01:36 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-26 14:01:36 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-26 14:01:36 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 14:01:36 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-26 14:01:36 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-03-26 14:01:36 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-26 14:01:36 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-26 14:01:36 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-26 14:01:36 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-26 14:01:36 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-26 14:01:36 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-26 14:01:36 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-26 14:01:36 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-26 14:01:36 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-26 14:01:36 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-26 14:01:36 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 14:01:36 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-26 14:01:36 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-03-26 14:01:36 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-26 14:01:36 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-26 14:01:36 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-26 14:01:36 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-26 14:01:36 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-26 14:01:36 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-26 14:01:36 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 14:01:36 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-03-26 14:01:36 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 14:01:36 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-26 14:01:36 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-26 14:01:36 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-26 14:01:36 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-26 14:01:36 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-26 14:01:36 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-26 14:01:36 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-26 14:01:36 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 14:01:36 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-26 14:01:36 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-26 14:01:36 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-26 14:01:36 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-26 14:01:36 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-26 14:01:36 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-26 14:01:36 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-26 14:01:36 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-26 14:01:36 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-26 14:01:36 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-26 14:01:36 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 14:01:36 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-26 14:01:36 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 14:01:36 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-26 14:01:36 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-03-26 14:01:36 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-03-26 14:01:36 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-26 14:01:36 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-26 14:01:36 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-26 14:01:36 -Mapped "{[/moneyList/moneyList/UserList],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-26 14:01:36 -Mapped "{[/moneyList/moneyList/LikeName],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.LikeName(org.springframework.ui.Model)
2019-03-26 14:01:36 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-26 14:01:36 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-26 14:01:36 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-26 14:01:36 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-26 14:01:36 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 14:01:36 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-26 14:01:36 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 14:01:36 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-26 14:01:36 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-26 14:01:36 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-26 14:01:36 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-26 14:01:36 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-26 14:01:36 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-26 14:01:36 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 14:01:36 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-26 14:01:36 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 14:01:36 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-26 14:01:36 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-26 14:01:36 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-26 14:01:36 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-26 14:01:36 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-26 14:01:36 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-26 14:01:36 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 14:01:36 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-26 14:01:36 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 14:01:36 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-26 14:01:36 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-26 14:01:36 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-26 14:01:36 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-26 14:01:36 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-26 14:01:36 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-26 14:01:36 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-26 14:01:36 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 14:01:36 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-26 14:01:36 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-26 14:01:36 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 14:01:36 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-26 14:01:36 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 14:01:36 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-26 14:01:36 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-26 14:01:36 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-26 14:01:36 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-26 14:01:36 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-26 14:01:36 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 14:01:36 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-26 14:01:36 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 14:01:36 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-26 14:01:36 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 14:01:36 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-26 14:01:36 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-26 14:01:36 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-26 14:01:36 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-26 14:01:36 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-26 14:01:36 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-26 14:01:36 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-26 14:01:36 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-26 14:01:36 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 14:01:36 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-26 14:01:36 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-26 14:01:36 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-26 14:01:36 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-26 14:01:36 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-26 14:01:36 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-26 14:01:36 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-26 14:01:36 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-26 14:01:36 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-26 14:01:36 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-26 14:01:36 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-26 14:01:36 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-26 14:01:36 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 14:01:36 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-26 14:01:36 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-26 14:01:36 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-26 14:01:36 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-26 14:01:36 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-26 14:01:36 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-26 14:01:36 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-26 14:01:36 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-26 14:01:36 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-26 14:01:36 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-26 14:01:36 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-26 14:01:36 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-26 14:01:36 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 14:01:36 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-26 14:01:36 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-26 14:01:36 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-26 14:01:36 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-26 14:01:36 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 14:01:36 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-26 14:01:36 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-26 14:01:36 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-26 14:01:36 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 14:01:36 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-26 14:01:36 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-26 14:01:36 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-26 14:01:36 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-26 14:01:36 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-26 14:01:36 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-26 14:01:36 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-26 14:01:36 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-26 14:01:36 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-26 14:01:36 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-26 14:01:36 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-26 14:01:36 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-26 14:01:36 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-26 14:01:36 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-26 14:01:36 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-26 14:01:36 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-26 14:01:36 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-26 14:01:36 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 14:01:36 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-26 14:01:36 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-26 14:01:36 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 14:01:36 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-26 14:01:36 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 14:01:36 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-26 14:01:36 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-26 14:01:36 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-26 14:01:36 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-26 14:01:36 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-26 14:01:36 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-26 14:01:36 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 14:01:36 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-26 14:01:36 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-26 14:01:36 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 14:01:36 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-03-26 14:01:36 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-03-26 14:01:36 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-26 14:01:36 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-26 14:01:36 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-26 14:01:36 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-26 14:01:36 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-26 14:01:36 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-26 14:01:37 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-26 14:01:37 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-26 14:01:37 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-26 14:01:37 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-26 14:01:38 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Tue Mar 26 14:01:22 CST 2019]; root of context hierarchy
2019-03-26 14:01:38 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-26 14:01:38 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-26 14:01:38 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-26 14:01:38 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-26 14:01:38 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-26 14:01:40 -Registering beans for JMX exposure on startup
2019-03-26 14:01:40 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-26 14:01:40 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-26 14:01:40 -Starting beans in phase 2147483647
2019-03-26 14:01:40 -Context refreshed
2019-03-26 14:01:40 -Found 1 custom documentation plugin(s)
2019-03-26 14:01:40 -Scanning for api listing references
2019-03-26 14:01:40 -Generating unique operation named: removeUsingPOST_1
2019-03-26 14:01:40 -Generating unique operation named: addUsingGET_1
2019-03-26 14:01:41 -Generating unique operation named: editUsingGET_1
2019-03-26 14:01:41 -Generating unique operation named: listUsingGET_1
2019-03-26 14:01:41 -Generating unique operation named: removeUsingPOST_2
2019-03-26 14:01:41 -Generating unique operation named: removeUsingPOST_3
2019-03-26 14:01:41 -Generating unique operation named: saveUsingPOST_1
2019-03-26 14:01:41 -Generating unique operation named: updateUsingGET_1
2019-03-26 14:01:41 -Generating unique operation named: updateUsingHEAD_1
2019-03-26 14:01:41 -Generating unique operation named: updateUsingPOST_1
2019-03-26 14:01:41 -Generating unique operation named: updateUsingPUT_1
2019-03-26 14:01:41 -Generating unique operation named: updateUsingPATCH_1
2019-03-26 14:01:41 -Generating unique operation named: updateUsingDELETE_1
2019-03-26 14:01:41 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-26 14:01:41 -Generating unique operation named: updateUsingTRACE_1
2019-03-26 14:01:41 -Generating unique operation named: addUsingGET_2
2019-03-26 14:01:41 -Generating unique operation named: editUsingGET_2
2019-03-26 14:01:41 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-26 14:01:41 -Generating unique operation named: listUsingGET_2
2019-03-26 14:01:41 -Generating unique operation named: removeUsingPOST_4
2019-03-26 14:01:41 -Generating unique operation named: removeUsingPOST_5
2019-03-26 14:01:41 -Generating unique operation named: saveUsingPOST_2
2019-03-26 14:01:41 -Generating unique operation named: updateUsingPOST_2
2019-03-26 14:01:41 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-26 14:01:41 -Generating unique operation named: addUsingGET_3
2019-03-26 14:01:41 -Generating unique operation named: editUsingGET_3
2019-03-26 14:01:41 -Generating unique operation named: listUsingGET_3
2019-03-26 14:01:41 -Generating unique operation named: removeUsingPOST_6
2019-03-26 14:01:41 -Generating unique operation named: removeUsingPOST_7
2019-03-26 14:01:41 -Generating unique operation named: saveUsingPOST_3
2019-03-26 14:01:41 -Generating unique operation named: updateUsingGET_2
2019-03-26 14:01:41 -Generating unique operation named: updateUsingHEAD_2
2019-03-26 14:01:41 -Generating unique operation named: updateUsingPOST_3
2019-03-26 14:01:41 -Generating unique operation named: updateUsingPUT_2
2019-03-26 14:01:41 -Generating unique operation named: updateUsingPATCH_2
2019-03-26 14:01:41 -Generating unique operation named: updateUsingDELETE_2
2019-03-26 14:01:41 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-26 14:01:41 -Generating unique operation named: updateUsingTRACE_2
2019-03-26 14:01:41 -Generating unique operation named: addUsingGET_4
2019-03-26 14:01:41 -Generating unique operation named: editUsingGET_4
2019-03-26 14:01:41 -Generating unique operation named: listUsingGET_4
2019-03-26 14:01:41 -Generating unique operation named: removeUsingPOST_8
2019-03-26 14:01:41 -Generating unique operation named: removeUsingPOST_9
2019-03-26 14:01:41 -Generating unique operation named: saveUsingPOST_4
2019-03-26 14:01:41 -Generating unique operation named: updateUsingGET_3
2019-03-26 14:01:41 -Generating unique operation named: updateUsingHEAD_3
2019-03-26 14:01:41 -Generating unique operation named: updateUsingPOST_4
2019-03-26 14:01:41 -Generating unique operation named: updateUsingPUT_3
2019-03-26 14:01:41 -Generating unique operation named: updateUsingPATCH_3
2019-03-26 14:01:41 -Generating unique operation named: updateUsingDELETE_3
2019-03-26 14:01:41 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-26 14:01:41 -Generating unique operation named: updateUsingTRACE_3
2019-03-26 14:01:41 -Generating unique operation named: ElecUsingGET_1
2019-03-26 14:01:41 -Generating unique operation named: addUsingGET_5
2019-03-26 14:01:41 -Generating unique operation named: editUsingGET_5
2019-03-26 14:01:41 -Generating unique operation named: listUsingGET_5
2019-03-26 14:01:41 -Generating unique operation named: removeUsingPOST_10
2019-03-26 14:01:41 -Generating unique operation named: removeUsingPOST_11
2019-03-26 14:01:41 -Generating unique operation named: saveUsingPOST_5
2019-03-26 14:01:41 -Generating unique operation named: updateUsingGET_4
2019-03-26 14:01:41 -Generating unique operation named: updateUsingHEAD_4
2019-03-26 14:01:41 -Generating unique operation named: updateUsingPOST_5
2019-03-26 14:01:41 -Generating unique operation named: updateUsingPUT_4
2019-03-26 14:01:41 -Generating unique operation named: updateUsingPATCH_4
2019-03-26 14:01:41 -Generating unique operation named: updateUsingDELETE_4
2019-03-26 14:01:41 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-26 14:01:41 -Generating unique operation named: updateUsingTRACE_4
2019-03-26 14:01:41 -Generating unique operation named: editUsingGET_6
2019-03-26 14:01:41 -Generating unique operation named: listUsingGET_6
2019-03-26 14:01:41 -Generating unique operation named: updateUsingPOST_6
2019-03-26 14:01:41 -Generating unique operation named: addUsingGET_6
2019-03-26 14:01:41 -Generating unique operation named: editUsingGET_7
2019-03-26 14:01:41 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-26 14:01:41 -Generating unique operation named: listUsingGET_7
2019-03-26 14:01:41 -Generating unique operation named: removeUsingPOST_12
2019-03-26 14:01:41 -Generating unique operation named: removeUsingPOST_13
2019-03-26 14:01:41 -Generating unique operation named: saveUsingPOST_6
2019-03-26 14:01:41 -Generating unique operation named: updateUsingGET_5
2019-03-26 14:01:41 -Generating unique operation named: updateUsingHEAD_5
2019-03-26 14:01:41 -Generating unique operation named: updateUsingPOST_7
2019-03-26 14:01:41 -Generating unique operation named: updateUsingPUT_5
2019-03-26 14:01:41 -Generating unique operation named: updateUsingPATCH_5
2019-03-26 14:01:41 -Generating unique operation named: updateUsingDELETE_5
2019-03-26 14:01:41 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-26 14:01:41 -Generating unique operation named: updateUsingTRACE_5
2019-03-26 14:01:41 -Generating unique operation named: exprotExcelUsingGET_4
2019-03-26 14:01:41 -Generating unique operation named: addUsingGET_7
2019-03-26 14:01:41 -Generating unique operation named: editUsingGET_8
2019-03-26 14:01:41 -Generating unique operation named: listUsingGET_8
2019-03-26 14:01:41 -Generating unique operation named: removeUsingPOST_14
2019-03-26 14:01:41 -Generating unique operation named: removeUsingPOST_15
2019-03-26 14:01:41 -Generating unique operation named: saveUsingPOST_7
2019-03-26 14:01:41 -Generating unique operation named: updateUsingGET_6
2019-03-26 14:01:41 -Generating unique operation named: updateUsingHEAD_6
2019-03-26 14:01:41 -Generating unique operation named: updateUsingPOST_8
2019-03-26 14:01:41 -Generating unique operation named: updateUsingPUT_6
2019-03-26 14:01:41 -Generating unique operation named: updateUsingPATCH_6
2019-03-26 14:01:41 -Generating unique operation named: updateUsingDELETE_6
2019-03-26 14:01:41 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-26 14:01:41 -Generating unique operation named: updateUsingTRACE_6
2019-03-26 14:01:41 -Generating unique operation named: addUsingGET_8
2019-03-26 14:01:41 -Generating unique operation named: editUsingGET_9
2019-03-26 14:01:41 -Generating unique operation named: listUsingGET_9
2019-03-26 14:01:41 -Generating unique operation named: removeUsingPOST_16
2019-03-26 14:01:41 -Generating unique operation named: removeUsingPOST_17
2019-03-26 14:01:41 -Generating unique operation named: saveUsingPOST_8
2019-03-26 14:01:41 -Generating unique operation named: updateUsingGET_7
2019-03-26 14:01:41 -Generating unique operation named: updateUsingHEAD_7
2019-03-26 14:01:41 -Generating unique operation named: updateUsingPOST_9
2019-03-26 14:01:41 -Generating unique operation named: updateUsingPUT_7
2019-03-26 14:01:41 -Generating unique operation named: updateUsingPATCH_7
2019-03-26 14:01:41 -Generating unique operation named: updateUsingDELETE_7
2019-03-26 14:01:41 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-26 14:01:41 -Generating unique operation named: updateUsingTRACE_7
2019-03-26 14:01:41 -Generating unique operation named: addUsingGET_9
2019-03-26 14:01:41 -Generating unique operation named: editUsingGET_10
2019-03-26 14:01:41 -Generating unique operation named: infoUsingGET_1
2019-03-26 14:01:41 -Generating unique operation named: infoUsingHEAD_1
2019-03-26 14:01:41 -Generating unique operation named: infoUsingPOST_1
2019-03-26 14:01:41 -Generating unique operation named: infoUsingPUT_1
2019-03-26 14:01:41 -Generating unique operation named: infoUsingPATCH_1
2019-03-26 14:01:41 -Generating unique operation named: infoUsingDELETE_1
2019-03-26 14:01:41 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-26 14:01:41 -Generating unique operation named: infoUsingTRACE_1
2019-03-26 14:01:41 -Generating unique operation named: listUsingGET_10
2019-03-26 14:01:41 -Generating unique operation named: removeUsingPOST_18
2019-03-26 14:01:41 -Generating unique operation named: removeUsingPOST_19
2019-03-26 14:01:41 -Generating unique operation named: saveUsingPOST_9
2019-03-26 14:01:41 -Generating unique operation named: updateUsingPOST_10
2019-03-26 14:01:41 -Generating unique operation named: listUsingGET_11
2019-03-26 14:01:41 -Generating unique operation named: removeUsingPOST_20
2019-03-26 14:01:41 -Generating unique operation named: welcomeUsingGET_1
2019-03-26 14:01:41 -Generating unique operation named: addUsingGET_10
2019-03-26 14:01:41 -Generating unique operation named: editUsingGET_11
2019-03-26 14:01:41 -Generating unique operation named: listUsingGET_12
2019-03-26 14:01:42 -Generating unique operation named: removeUsingPOST_21
2019-03-26 14:01:42 -Generating unique operation named: saveUsingPOST_10
2019-03-26 14:01:42 -Generating unique operation named: treeUsingGET_1
2019-03-26 14:01:42 -Generating unique operation named: treeUsingGET_2
2019-03-26 14:01:42 -Generating unique operation named: updateUsingPOST_11
2019-03-26 14:01:42 -Generating unique operation named: addUsingGET_11
2019-03-26 14:01:42 -Generating unique operation named: editUsingGET_12
2019-03-26 14:01:42 -Generating unique operation named: listUsingGET_13
2019-03-26 14:01:42 -Generating unique operation named: removeUsingPOST_22
2019-03-26 14:01:42 -Generating unique operation named: removeUsingPOST_23
2019-03-26 14:01:42 -Generating unique operation named: saveUsingPOST_11
2019-03-26 14:01:42 -Generating unique operation named: updateUsingGET_8
2019-03-26 14:01:42 -Generating unique operation named: updateUsingHEAD_8
2019-03-26 14:01:42 -Generating unique operation named: updateUsingPOST_12
2019-03-26 14:01:42 -Generating unique operation named: updateUsingPUT_8
2019-03-26 14:01:42 -Generating unique operation named: updateUsingPATCH_8
2019-03-26 14:01:42 -Generating unique operation named: updateUsingDELETE_8
2019-03-26 14:01:42 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-26 14:01:42 -Generating unique operation named: updateUsingTRACE_8
2019-03-26 14:01:42 -Generating unique operation named: addUsingGET_12
2019-03-26 14:01:42 -Generating unique operation named: editUsingGET_13
2019-03-26 14:01:42 -Generating unique operation named: listUsingGET_14
2019-03-26 14:01:42 -Generating unique operation named: removeUsingPOST_24
2019-03-26 14:01:42 -Generating unique operation named: removeUsingPOST_25
2019-03-26 14:01:42 -Generating unique operation named: saveUsingPOST_12
2019-03-26 14:01:42 -Generating unique operation named: updateUsingGET_9
2019-03-26 14:01:42 -Generating unique operation named: updateUsingHEAD_9
2019-03-26 14:01:42 -Generating unique operation named: updateUsingPOST_13
2019-03-26 14:01:42 -Generating unique operation named: updateUsingPUT_9
2019-03-26 14:01:42 -Generating unique operation named: updateUsingPATCH_9
2019-03-26 14:01:42 -Generating unique operation named: updateUsingDELETE_9
2019-03-26 14:01:42 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-26 14:01:42 -Generating unique operation named: updateUsingTRACE_9
2019-03-26 14:01:42 -Generating unique operation named: addUsingGET_13
2019-03-26 14:01:42 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-26 14:01:42 -Generating unique operation named: editUsingGET_14
2019-03-26 14:01:42 -Generating unique operation named: listUsingGET_15
2019-03-26 14:01:42 -Generating unique operation named: saveUsingPOST_13
2019-03-26 14:01:42 -Generating unique operation named: saveUsingPOST_14
2019-03-26 14:01:42 -Generating unique operation named: updateUsingPOST_14
2019-03-26 14:01:42 -Generating unique operation named: listUsingGET_16
2019-03-26 14:01:42 -Generating unique operation named: listUsingHEAD_1
2019-03-26 14:01:42 -Generating unique operation named: listUsingPOST_1
2019-03-26 14:01:42 -Generating unique operation named: listUsingPUT_1
2019-03-26 14:01:42 -Generating unique operation named: listUsingPATCH_1
2019-03-26 14:01:42 -Generating unique operation named: listUsingDELETE_1
2019-03-26 14:01:42 -Generating unique operation named: listUsingOPTIONS_1
2019-03-26 14:01:42 -Generating unique operation named: listUsingTRACE_1
2019-03-26 14:01:42 -Generating unique operation named: addUsingGET_14
2019-03-26 14:01:42 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-26 14:01:42 -Generating unique operation named: editUsingGET_15
2019-03-26 14:01:42 -Generating unique operation named: listUsingGET_17
2019-03-26 14:01:42 -Generating unique operation named: removeUsingPOST_26
2019-03-26 14:01:42 -Generating unique operation named: saveUsingPOST_15
2019-03-26 14:01:42 -Generating unique operation named: treeUsingGET_3
2019-03-26 14:01:42 -Generating unique operation named: treeViewUsingGET_1
2019-03-26 14:01:42 -Generating unique operation named: updateUsingPOST_15
2019-03-26 14:01:42 -Generating unique operation named: addUsingGET_15
2019-03-26 14:01:42 -Generating unique operation named: editUsingGET_16
2019-03-26 14:01:42 -Generating unique operation named: exprotExcelUsingGET_5
2019-03-26 14:01:42 -Generating unique operation named: listUsingGET_18
2019-03-26 14:01:42 -Generating unique operation named: removeUsingPOST_27
2019-03-26 14:01:42 -Generating unique operation named: removeUsingPOST_28
2019-03-26 14:01:42 -Generating unique operation named: saveUsingPOST_16
2019-03-26 14:01:42 -Generating unique operation named: updateUsingGET_10
2019-03-26 14:01:42 -Generating unique operation named: updateUsingHEAD_10
2019-03-26 14:01:42 -Generating unique operation named: updateUsingPOST_16
2019-03-26 14:01:42 -Generating unique operation named: updateUsingPUT_10
2019-03-26 14:01:42 -Generating unique operation named: updateUsingPATCH_10
2019-03-26 14:01:42 -Generating unique operation named: updateUsingDELETE_10
2019-03-26 14:01:42 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-26 14:01:42 -Generating unique operation named: updateUsingTRACE_10
2019-03-26 14:01:42 -Generating unique operation named: exprotExcelUsingGET_6
2019-03-26 14:01:42 -Generating unique operation named: addUsingGET_16
2019-03-26 14:01:42 -Generating unique operation named: editUsingGET_17
2019-03-26 14:01:42 -Generating unique operation named: listUsingGET_19
2019-03-26 14:01:42 -Generating unique operation named: removeUsingPOST_29
2019-03-26 14:01:42 -Generating unique operation named: removeUsingPOST_30
2019-03-26 14:01:42 -Generating unique operation named: saveUsingPOST_17
2019-03-26 14:01:42 -Generating unique operation named: updateUsingGET_11
2019-03-26 14:01:42 -Generating unique operation named: updateUsingHEAD_11
2019-03-26 14:01:42 -Generating unique operation named: updateUsingPOST_17
2019-03-26 14:01:42 -Generating unique operation named: updateUsingPUT_11
2019-03-26 14:01:42 -Generating unique operation named: updateUsingPATCH_11
2019-03-26 14:01:42 -Generating unique operation named: updateUsingDELETE_11
2019-03-26 14:01:42 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-26 14:01:42 -Generating unique operation named: updateUsingTRACE_11
2019-03-26 14:01:42 -Generating unique operation named: addUsingGET_17
2019-03-26 14:01:42 -Generating unique operation named: editUsingGET_18
2019-03-26 14:01:42 -Generating unique operation named: listUsingGET_20
2019-03-26 14:01:42 -Generating unique operation named: removeUsingPOST_31
2019-03-26 14:01:42 -Generating unique operation named: removeUsingPOST_32
2019-03-26 14:01:42 -Generating unique operation named: saveUsingPOST_18
2019-03-26 14:01:42 -Generating unique operation named: updateUsingGET_12
2019-03-26 14:01:42 -Generating unique operation named: updateUsingHEAD_12
2019-03-26 14:01:42 -Generating unique operation named: updateUsingPOST_18
2019-03-26 14:01:42 -Generating unique operation named: updateUsingPUT_12
2019-03-26 14:01:42 -Generating unique operation named: updateUsingPATCH_12
2019-03-26 14:01:42 -Generating unique operation named: updateUsingDELETE_12
2019-03-26 14:01:42 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-26 14:01:42 -Generating unique operation named: updateUsingTRACE_12
2019-03-26 14:01:42 -Starting Quartz Scheduler now
2019-03-26 14:01:42 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-26 14:01:42 -Starting...
2019-03-26 14:01:42 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-26 14:01:42 -Started.
2019-03-26 14:01:42 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-26 14:01:42 -Using a shared selector for servlet write/read
2019-03-26 14:01:42 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-26 14:01:42 -Started BootdoApplication in 21.543 seconds (JVM running for 22.444)
2019-03-26 14:01:42 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-26 14:01:43 -==> Parameters: 
2019-03-26 14:01:43 -<==      Total: 1
2019-03-26 14:02:37 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-03-26 14:12:15 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-26 14:12:15 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-26 14:12:15 -FrameworkServlet 'dispatcherServlet': initialization completed in 65 ms
2019-03-26 14:12:15 -Enabling session validation scheduler...
2019-03-26 14:12:15 -请求地址 : http://localhost:8081/login;JSESSIONID=1df7f814-ab1f-4eb6-b6a0-e8973c2467fa
2019-03-26 14:12:15 -HTTP METHOD : GET
2019-03-26 14:12:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-26 14:12:15 -参数 : [{}]
2019-03-26 14:12:15 -耗时 : 4
2019-03-26 14:12:15 -返回值 : login
2019-03-26 14:12:17 -请求地址 : http://localhost:8081/getVerify
2019-03-26 14:12:17 -HTTP METHOD : GET
2019-03-26 14:12:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-26 14:12:17 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@7c2b3e91, org.apache.shiro.web.servlet.ShiroHttpServletResponse@45c2dc0c]
2019-03-26 14:12:21 -8110
2019-03-26 14:12:22 -耗时 : 4470
2019-03-26 14:12:22 -返回值 : null
2019-03-26 14:12:22 -请求地址 : http://localhost:8081/login
2019-03-26 14:12:22 -HTTP METHOD : GET
2019-03-26 14:12:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-26 14:12:22 -参数 : [{}]
2019-03-26 14:12:22 -耗时 : 0
2019-03-26 14:12:22 -返回值 : login
2019-03-26 14:12:27 -请求地址 : http://localhost:8081/login
2019-03-26 14:12:27 -HTTP METHOD : POST
2019-03-26 14:12:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-26 14:12:27 -参数 : [admin, 111111, 8110, org.apache.shiro.web.servlet.ShiroHttpServletRequest@10ce106c]
2019-03-26 14:12:27 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-26 14:12:27 -==> Parameters: admin(String)
2019-03-26 14:12:27 -<==      Total: 1
2019-03-26 14:12:27 -耗时 : 195
2019-03-26 14:12:27 -返回值 : {msg=操作成功, code=0}
2019-03-26 14:12:27 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-03-26 14:12:27 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-26 14:12:28 -==> Parameters: 1(Long), admin(String), 登录(String), 195(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-26 14:12:27.985(Timestamp)
2019-03-26 14:12:28 -<==    Updates: 1
2019-03-26 14:12:28 -请求地址 : http://localhost:8081/index
2019-03-26 14:12:28 -HTTP METHOD : GET
2019-03-26 14:12:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-26 14:12:28 -参数 : [{}]
2019-03-26 14:12:28 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-26 14:12:28 -==> Parameters: 1(Long)
2019-03-26 14:12:28 -<==      Total: 46
2019-03-26 14:12:28 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-26 14:12:28 -==> Parameters: 138(Long)
2019-03-26 14:12:28 -<==      Total: 1
2019-03-26 14:12:28 -耗时 : 374
2019-03-26 14:12:28 -返回值 : index_v1
2019-03-26 14:12:28 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-26 14:12:28 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 374(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-26 14:12:28.845(Timestamp)
2019-03-26 14:12:28 -<==    Updates: 1
2019-03-26 14:12:29 -请求地址 : http://localhost:8081/main
2019-03-26 14:12:29 -HTTP METHOD : GET
2019-03-26 14:12:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-26 14:12:29 -参数 : []
2019-03-26 14:12:29 -耗时 : 1
2019-03-26 14:12:29 -返回值 : main
2019-03-26 14:12:29 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-26 14:12:29 -HTTP METHOD : GET
2019-03-26 14:12:29 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-26 14:12:29 -参数 : []
2019-03-26 14:12:29 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-26 14:12:29 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-26 14:12:29 -<==      Total: 0
2019-03-26 14:12:29 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-26 14:12:29 -==> Parameters: 1(Long), 0(String)
2019-03-26 14:12:29 -<==      Total: 1
2019-03-26 14:12:29 -耗时 : 83
2019-03-26 14:12:29 -返回值 : com.bootdo.common.utils.PageUtils@7346cc33
2019-03-26 14:12:29 -请求地址 : http://localhost:8081/main
2019-03-26 14:12:29 -HTTP METHOD : GET
2019-03-26 14:12:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-26 14:12:29 -参数 : []
2019-03-26 14:12:29 -耗时 : 1
2019-03-26 14:12:29 -返回值 : main
2019-03-26 14:12:31 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.web.socket.sockjs.SockJsException: Uncaught failure in SockJS request, uri=http://localhost:8081/endpointChat/561/uil39fjr/xhr_streaming; nested exception is org.springframework.web.socket.sockjs.SockJsTransportFailureException: Failed to open session; nested exception is org.springframework.web.socket.sockjs.SockJsTransportFailureException: Failed to write SockJsFrame content='o'; nested exception is org.apache.catalina.connector.ClientAbortException: java.io.IOException: 你的主机中的软件中止了一个已建立的连接。] with root cause
java.io.IOException: 你的主机中的软件中止了一个已建立的连接。
	at sun.nio.ch.SocketDispatcher.write0(Native Method)
	at sun.nio.ch.SocketDispatcher.write(Unknown Source)
	at sun.nio.ch.IOUtil.writeFromNativeBuffer(Unknown Source)
	at sun.nio.ch.IOUtil.write(Unknown Source)
	at sun.nio.ch.SocketChannelImpl.write(Unknown Source)
	at org.apache.tomcat.util.net.NioChannel.write(NioChannel.java:134)
	at org.apache.tomcat.util.net.NioBlockingSelector.write(NioBlockingSelector.java:101)
	at org.apache.tomcat.util.net.NioSelectorPool.write(NioSelectorPool.java:157)
	at org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.doWrite(NioEndpoint.java:1276)
	at org.apache.tomcat.util.net.SocketWrapperBase.doWrite(SocketWrapperBase.java:670)
	at org.apache.tomcat.util.net.SocketWrapperBase.flushBlocking(SocketWrapperBase.java:607)
	at org.apache.tomcat.util.net.SocketWrapperBase.flush(SocketWrapperBase.java:597)
	at org.apache.coyote.http11.Http11OutputBuffer$SocketOutputBuffer.flush(Http11OutputBuffer.java:646)
	at org.apache.coyote.http11.filters.ChunkedOutputFilter.flush(ChunkedOutputFilter.java:169)
	at org.apache.coyote.http11.Http11OutputBuffer.flush(Http11OutputBuffer.java:252)
	at org.apache.coyote.http11.Http11Processor.flush(Http11Processor.java:1564)
	at org.apache.coyote.AbstractProcessor.action(AbstractProcessor.java:352)
	at org.apache.coyote.Response.action(Response.java:173)
	at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:317)
	at org.apache.catalina.connector.OutputBuffer.flush(OutputBuffer.java:284)
	at org.apache.catalina.connector.Response.flushBuffer(Response.java:541)
	at org.apache.catalina.connector.ResponseFacade.flushBuffer(ResponseFacade.java:312)
	at javax.servlet.ServletResponseWrapper.flushBuffer(ServletResponseWrapper.java:176)
	at javax.servlet.ServletResponseWrapper.flushBuffer(ServletResponseWrapper.java:176)
	at org.springframework.http.server.ServletServerHttpResponse.flush(ServletServerHttpResponse.java:90)
	at org.springframework.web.socket.sockjs.transport.session.AbstractHttpSockJsSession.writeFrameInternal(AbstractHttpSockJsSession.java:358)
	at org.springframework.web.socket.sockjs.transport.session.AbstractSockJsSession.writeFrame(AbstractSockJsSession.java:324)
	at org.springframework.web.socket.sockjs.transport.session.StreamingSockJsSession.handleRequestInternal(StreamingSockJsSession.java:64)
	at org.springframework.web.socket.sockjs.transport.session.AbstractHttpSockJsSession.handleInitialRequest(AbstractHttpSockJsSession.java:229)
	at org.springframework.web.socket.sockjs.transport.handler.AbstractHttpSendingTransportHandler.handleRequestInternal(AbstractHttpSendingTransportHandler.java:76)
	at org.springframework.web.socket.sockjs.transport.handler.AbstractHttpSendingTransportHandler.handleRequest(AbstractHttpSendingTransportHandler.java:66)
	at org.springframework.web.socket.sockjs.transport.TransportHandlingSockJsService.handleTransportRequest(TransportHandlingSockJsService.java:312)
	at org.springframework.web.socket.sockjs.support.AbstractSockJsService.handleRequest(AbstractSockJsService.java:432)
	at org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler.handleRequest(SockJsHttpRequestHandler.java:133)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:53)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-26 14:12:31 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:23)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:26)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:175)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-26 14:12:57 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-26 14:12:57 -==> Parameters: 1(Long)
2019-03-26 14:12:57 -<==      Total: 90
2019-03-26 14:12:57 -请求地址 : http://localhost:8081/print/print
2019-03-26 14:12:57 -HTTP METHOD : GET
2019-03-26 14:12:57 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-03-26 14:12:57 -参数 : []
2019-03-26 14:12:57 -耗时 : 1
2019-03-26 14:12:57 -返回值 : print/print/print
2019-03-26 14:12:58 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-26 14:12:58 -HTTP METHOD : GET
2019-03-26 14:12:58 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-26 14:12:58 -参数 : [userType]
2019-03-26 14:12:58 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-26 14:12:58 -==> Parameters: userType(String)
2019-03-26 14:12:58 -<==      Total: 2
2019-03-26 14:12:58 -耗时 : 31
2019-03-26 14:12:58 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-26 14:12:58 -请求地址 : http://localhost:8081/print/print/list
2019-03-26 14:12:58 -HTTP METHOD : GET
2019-03-26 14:12:58 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-26 14:12:58 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-26 14:12:58 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-03-26 14:12:58 -==> Parameters: 0(Integer), 10(Integer)
2019-03-26 14:12:58 -<==      Total: 3
2019-03-26 14:12:58 -==>  Preparing: select count(*) from print 
2019-03-26 14:12:58 -==> Parameters: 
2019-03-26 14:12:58 -<==      Total: 1
2019-03-26 14:12:58 -耗时 : 56
2019-03-26 14:12:58 -返回值 : com.bootdo.common.utils.PageUtils@2729416c
2019-03-26 14:32:37 -WebSocketSession[1 current WS(0)-HttpStream(0)-HttpPoll(1), 3 total, 0 closed abnormally (0 connect failure, 0 send limit, 1 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 15], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 3], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 290]
2019-03-26 14:54:39 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-26 14:54:39 -==> Parameters: 1(Long)
2019-03-26 14:54:39 -<==      Total: 90
2019-03-26 14:54:39 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-03-26 14:54:39 -HTTP METHOD : GET
2019-03-26 14:54:39 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-03-26 14:54:39 -参数 : []
2019-03-26 14:54:39 -耗时 : 1
2019-03-26 14:54:39 -返回值 : /moneyList/moneyList
2019-03-26 15:02:37 -WebSocketSession[1 current WS(0)-HttpStream(0)-HttpPoll(1), 3 total, 0 closed abnormally (0 connect failure, 0 send limit, 1 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 15], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 3], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 721]
2019-03-26 15:12:15 -Validating all active sessions...
2019-03-26 15:12:15 -Finished session validation.  No sessions were stopped.
2019-03-26 15:32:37 -WebSocketSession[1 current WS(0)-HttpStream(0)-HttpPoll(1), 3 total, 0 closed abnormally (0 connect failure, 0 send limit, 1 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 15], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 3], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 1151]
2019-03-26 15:51:48 -请求地址 : http://localhost:8081/index
2019-03-26 15:51:48 -HTTP METHOD : GET
2019-03-26 15:51:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-26 15:51:48 -参数 : [{}]
2019-03-26 15:51:48 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-26 15:51:48 -==> Parameters: 1(Long)
2019-03-26 15:51:48 -<==      Total: 46
2019-03-26 15:51:48 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-26 15:51:48 -==> Parameters: 138(Long)
2019-03-26 15:51:48 -<==      Total: 1
2019-03-26 15:51:48 -耗时 : 168
2019-03-26 15:51:48 -返回值 : index_v1
2019-03-26 15:51:48 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-26 15:51:48 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 169(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-26 15:51:48.546(Timestamp)
2019-03-26 15:51:48 -<==    Updates: 1
2019-03-26 15:51:48 -请求地址 : http://localhost:8081/main
2019-03-26 15:51:48 -HTTP METHOD : GET
2019-03-26 15:51:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-26 15:51:48 -参数 : []
2019-03-26 15:51:48 -耗时 : 1
2019-03-26 15:51:48 -返回值 : main
2019-03-26 15:51:49 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-26 15:51:49 -HTTP METHOD : GET
2019-03-26 15:51:49 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-26 15:51:49 -参数 : []
2019-03-26 15:51:49 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-26 15:51:49 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-26 15:51:49 -请求地址 : http://localhost:8081/main
2019-03-26 15:51:49 -HTTP METHOD : GET
2019-03-26 15:51:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-26 15:51:49 -参数 : []
2019-03-26 15:51:49 -耗时 : 1
2019-03-26 15:51:49 -返回值 : main
2019-03-26 15:51:49 -<==      Total: 0
2019-03-26 15:51:49 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-26 15:51:49 -==> Parameters: 1(Long), 0(String)
2019-03-26 15:51:49 -<==      Total: 1
2019-03-26 15:51:49 -耗时 : 108
2019-03-26 15:51:49 -返回值 : com.bootdo.common.utils.PageUtils@52da61c7
2019-03-26 15:51:55 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-26 15:51:55 -==> Parameters: 1(Long)
2019-03-26 15:51:55 -<==      Total: 90
2019-03-26 15:51:55 -请求地址 : http://localhost:8081/print/print
2019-03-26 15:51:55 -HTTP METHOD : GET
2019-03-26 15:51:55 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-03-26 15:51:55 -参数 : []
2019-03-26 15:51:55 -耗时 : 2
2019-03-26 15:51:55 -返回值 : print/print/print
2019-03-26 15:51:56 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-26 15:51:56 -HTTP METHOD : GET
2019-03-26 15:51:56 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-26 15:51:56 -参数 : [userType]
2019-03-26 15:51:56 -请求地址 : http://localhost:8081/print/print/list
2019-03-26 15:51:56 -HTTP METHOD : GET
2019-03-26 15:51:56 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-26 15:51:56 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-26 15:51:56 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-03-26 15:51:56 -==> Parameters: 0(Integer), 10(Integer)
2019-03-26 15:51:56 -<==      Total: 3
2019-03-26 15:51:56 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-26 15:51:56 -==> Parameters: userType(String)
2019-03-26 15:51:56 -<==      Total: 2
2019-03-26 15:51:56 -耗时 : 80
2019-03-26 15:51:56 -==>  Preparing: select count(*) from print 
2019-03-26 15:51:56 -==> Parameters: 
2019-03-26 15:51:56 -<==      Total: 1
2019-03-26 15:51:56 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-26 15:51:56 -耗时 : 155
2019-03-26 15:51:56 -返回值 : com.bootdo.common.utils.PageUtils@53b8d928
2019-03-26 15:52:08 -请求地址 : http://localhost:8081/print/print/add
2019-03-26 15:52:08 -HTTP METHOD : GET
2019-03-26 15:52:08 -CLASS_METHOD : com.bootdo.print.controller.PrintController.add
2019-03-26 15:52:08 -参数 : []
2019-03-26 15:52:08 -耗时 : 0
2019-03-26 15:52:08 -返回值 : print/print/add
2019-03-26 15:52:08 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-26 15:52:08 -HTTP METHOD : GET
2019-03-26 15:52:08 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-26 15:52:08 -参数 : [userType]
2019-03-26 15:52:08 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-26 15:52:08 -==> Parameters: userType(String)
2019-03-26 15:52:08 -<==      Total: 2
2019-03-26 15:52:08 -耗时 : 60
2019-03-26 15:52:08 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-26 15:56:26 -请求地址 : http://localhost:8081/print/print/printEdit/1
2019-03-26 15:56:26 -HTTP METHOD : GET
2019-03-26 15:56:26 -CLASS_METHOD : com.bootdo.print.controller.PrintController.printEdit
2019-03-26 15:56:26 -参数 : [1, {}]
2019-03-26 15:56:26 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-03-26 15:56:26 -==> Parameters: 1(Long)
2019-03-26 15:56:26 -<==      Total: 1
2019-03-26 15:56:26 -耗时 : 40
2019-03-26 15:56:26 -返回值 : print/print/printEdit
2019-03-26 15:56:50 -请求地址 : http://localhost:8081/print/print/printEdit/1
2019-03-26 15:56:50 -HTTP METHOD : GET
2019-03-26 15:56:50 -CLASS_METHOD : com.bootdo.print.controller.PrintController.printEdit
2019-03-26 15:56:50 -参数 : [1, {}]
2019-03-26 15:56:50 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-03-26 15:56:50 -==> Parameters: 1(Long)
2019-03-26 15:56:50 -<==      Total: 1
2019-03-26 15:56:50 -耗时 : 10
2019-03-26 15:56:50 -返回值 : print/print/printEdit
2019-03-26 15:59:34 -请求地址 : http://localhost:8081/sys/menu/
2019-03-26 15:59:34 -HTTP METHOD : GET
2019-03-26 15:59:34 -CLASS_METHOD : com.bootdo.system.controller.MenuController.menu
2019-03-26 15:59:34 -参数 : [{}]
2019-03-26 15:59:34 -耗时 : 1
2019-03-26 15:59:34 -返回值 : system/menu/menu
2019-03-26 15:59:34 -请求地址 : http://localhost:8081/sys/menu/list
2019-03-26 15:59:34 -HTTP METHOD : GET
2019-03-26 15:59:34 -CLASS_METHOD : com.bootdo.system.controller.MenuController.list
2019-03-26 15:59:34 -参数 : [{sort=order_num}]
2019-03-26 15:59:34 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu order by order_num 
2019-03-26 15:59:34 -==> Parameters: 
2019-03-26 15:59:34 -<==      Total: 106
2019-03-26 15:59:34 -耗时 : 155
2019-03-26 15:59:34 -返回值 : [MenuDO{menuId=55, parentId=7, name='编辑', url='', perms='sys:role:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=56, parentId=7, name='删除', url='', perms='sys:role:remove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=61, parentId=2, name='批量删除', url='', perms='sys:menu:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=62, parentId=7, name='批量删除', url='', perms='sys:role:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=85, parentId=84, name='通知公告', url='oa/notify', perms='oa:notify:notify', type=1, icon='fa fa-pencil-square', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=88, parentId=85, name='删除', url='oa/notify/remove', perms='oa:notify:remove', type=2, icon='fa fa-minus', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=89, parentId=85, name='批量删除', url='oa/notify/batchRemove', perms='oa:notify:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=90, parentId=84, name='我的通知', url='oa/notify/selfNotify', perms='', type=1, icon='fa fa-envelope-square', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=92, parentId=91, name='在线用户', url='sys/online', perms='', type=1, icon='fa fa-user', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=133, parentId=116, name='新增', url='/heat/heatPrice/add', perms='heat:heatPrice:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=134, parentId=116, name='编辑', url='/heat/heatPrice/edit', perms='heat:heatPrice:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=135, parentId=116, name='删除', url='/heat/heatPrice/remove', perms='heat:heatPrice:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=136, parentId=116, name='批量删除', url='/heat/heatPrice/batchRemove', perms='heat:heatPrice:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=137, parentId=113, name='新增', url='/heat/heat/add', perms='heat:heat:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=138, parentId=120, name='新增', url='/water/waterPrice/add', perms='water:waterPrice:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=139, parentId=120, name='编辑', url='/water/waterPrice/edit', perms='water:waterPrice:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=140, parentId=120, name='删除', url='/water/waterPrice/remove', perms='water:waterPrice:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=141, parentId=120, name='批量删除', url='/water/waterPrice/batchRemove', perms='water:waterPrice:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=142, parentId=117, name='新增', url='/water/water/add', perms='water:water:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=143, parentId=117, name='编辑', url='/water/water/edit', perms='water:water:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=144, parentId=117, name='删除', url='/water/wate/remove', perms='water:water:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=145, parentId=117, name='批量删除', url='/water/water/batchRemove', perms='water:water:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=146, parentId=113, name='编辑', url='/heat/heat/edit', perms='heat:heat:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=147, parentId=113, name='删除', url='/heat/heat/remove', perms='heat:heat:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=148, parentId=113, name='批量删除', url='/heat/heat/batchRemove', perms='heat:heat:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=150, parentId=149, name='新增', url='/print/print/add', perms='print:print:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=151, parentId=149, name='编辑', url='/print/print/edit', perms='print:print:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=152, parentId=149, name='删除', url='/print/print/remove', perms='print:print:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=153, parentId=149, name='批量删除', url='/print/print/batchRemove', perms='print:print:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=6, parentId=3, name='用户管理', url='sys/user/', perms='sys:user:user', type=1, icon='fa fa-user', orderNum=0, gmtCreate=Thu Aug 10 14:12:11 CST 2017, gmtModified=null}, MenuDO{menuId=12, parentId=6, name='新增', url='', perms='sys:user:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:51:35 CST 2017, gmtModified=null}, MenuDO{menuId=13, parentId=6, name='编辑', url='', perms='sys:user:edit', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:52:06 CST 2017, gmtModified=null}, MenuDO{menuId=14, parentId=6, name='删除', url='null', perms='sys:user:remove', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 10:52:24 CST 2017, gmtModified=null}, MenuDO{menuId=15, parentId=7, name='新增', url='', perms='sys:role:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:56:37 CST 2017, gmtModified=null}, MenuDO{menuId=20, parentId=2, name='新增', url='', perms='sys:menu:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:59:32 CST 2017, gmtModified=null}, MenuDO{menuId=21, parentId=2, name='编辑', url='', perms='sys:menu:edit', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:59:56 CST 2017, gmtModified=null}, MenuDO{menuId=22, parentId=2, name='删除', url='', perms='sys:menu:remove', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 11:00:26 CST 2017, gmtModified=null}, MenuDO{menuId=24, parentId=6, name='批量删除', url='', perms='sys:user:batchRemove', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 17:27:18 CST 2017, gmtModified=null}, MenuDO{menuId=25, parentId=6, name='停用', url='null', perms='sys:user:disable', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 17:27:43 CST 2017, gmtModified=null}, MenuDO{menuId=26, parentId=6, name='重置密码', url='', perms='sys:user:resetPwd', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 17:28:34 CST 2017, gmtModified=null}, MenuDO{menuId=27, parentId=91, name='系统日志', url='common/log', perms='common:log', type=1, icon='fa fa-warning', orderNum=0, gmtCreate=Mon Aug 14 22:11:53 CST 2017, gmtModified=null}, MenuDO{menuId=28, parentId=27, name='刷新', url='null', perms='sys:log:list', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:30:22 CST 2017, gmtModified=null}, MenuDO{menuId=29, parentId=27, name='删除', url='null', perms='sys:log:remove', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:30:43 CST 2017, gmtModified=null}, MenuDO{menuId=30, parentId=27, name='清空', url='null', perms='sys:log:clear', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:31:02 CST 2017, gmtModified=null}, MenuDO{menuId=106, parentId=0, name='收费管理', url='', perms='', type=0, icon='fa fa-money', orderNum=0, gmtCreate=null, gmtModified=null}, MenuDO{menuId=7, parentId=3, name='角色管理', url='sys/role', perms='sys:role:role', type=1, icon='fa fa-paw', orderNum=1, gmtCreate=Thu Aug 10 14:13:19 CST 2017, gmtModified=null}, MenuDO{menuId=57, parentId=91, name='运行监控', url='/druid/index.html', perms='', type=1, icon='fa fa-caret-square-o-right', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=72, parentId=77, name='计算器', url='common/job', perms='', type=1, icon='fa fa-calculator', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=74, parentId=73, name='增加', url='/system/sysDept/add', perms='system:sysDept:add', type=2, icon='null', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=78, parentId=1, name='数据字典', url='/common/dict', perms='common:dict:dict', type=1, icon='fa fa-book', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=86, parentId=85, name='新增', url='oa/notify/add', perms='oa:notify:add', type=2, icon='fa fa-plus', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=98, parentId=97, name='百度chart', url='/chart/graph_echarts.html', perms='', type=1, icon='fa fa-area-chart', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=102, parentId=106, name='现金缴费', url='/moneyList/moneyList', perms='moneyList:moneyList', type=1, icon='fa fa-money', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=103, parentId=0, name='电费管理', url='', perms='', type=0, icon='fa fa-lightbulb-o', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=113, parentId=104, name='暖费用户', url='/heat/heat', perms='heat:heat:heat', type=1, icon='fa fa-user-secret', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=117, parentId=105, name='水费用户', url='/water/water', perms='water:water:water', type=1, icon='fa fa-user-secret', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=121, parentId=103, name='电费用户', url='/elec/elec', perms='elec:elec:elec', type=1, icon='fa fa-user-secret', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=125, parentId=124, name='新增', url='/elec/elecPrice/add', perms='elec:elecPrice:add', type=2, icon='', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=129, parentId=121, name='新增', url='/elec/elec/add', perms='elec:elec:add', type=2, icon='fa fa-plus-square', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=149, parentId=108, name='票据记录', url='/print/print', perms='print:print:print', type=1, icon='fa fa-bomb', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=156, parentId=107, name='添加', url='moneyLog/elecLog/add', perms='moneyLog:elecLog:add', type=2, icon='fa fa-plus-square', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=2, parentId=3, name='系统菜单', url='sys/menu/', perms='sys:menu:menu', type=1, icon='fa fa-th-list', orderNum=2, gmtCreate=Wed Aug 09 22:55:15 CST 2017, gmtModified=null}, MenuDO{menuId=71, parentId=1, name='文件管理', url='/common/sysFile', perms='common:sysFile:sysFile', type=1, icon='fa fa-folder-open', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=75, parentId=73, name='刪除', url='system/sysDept/remove', perms='system:sysDept:remove', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=79, parentId=78, name='增加', url='/common/dict/add', perms='common:dict:add', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=80, parentId=78, name='编辑', url='/common/dict/edit', perms='common:dict:edit', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=87, parentId=85, name='编辑', url='oa/notify/edit', perms='oa:notify:edit', type=2, icon='fa fa-pencil-square-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=105, parentId=0, name='水费管理', url='', perms='', type=0, icon='fa fa-tint', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=107, parentId=106, name='缴费记录', url='/moneyLog/elecLog', perms='moneyLog:elecLog', type=1, icon='fa fa-book', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=109, parentId=97, name='日统计报表', url='charts/countDD', perms='charts:countDD', type=1, icon='fa fa-sun-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=114, parentId=104, name='工资代扣', url='heat/heatInto', perms='heat:heatInto', type=1, icon='fa fa-file-excel-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=118, parentId=105, name='工资代扣', url='water/waterInto', perms='water:waterInto', type=1, icon='fa fa-file-excel-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=122, parentId=103, name='工资代扣', url='elec/elecInto', perms='elec:elecInto:elecInto', type=1, icon='fa fa-file-excel-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=126, parentId=124, name='编辑', url='/elec/elecPrice/edit', perms='elec:elecPrice:edit', type=2, icon='', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=131, parentId=121, name='删除', url='/elec/elec/remove', perms='elec:elec:remove', type=2, icon='fa fa-remove', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=154, parentId=77, name='时钟', url='common/time', perms='', type=1, icon='fa fa-hourglass-1', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=157, parentId=107, name='删除', url='moneyLog/elecLog/remove', perms='moneyLog:elecLog:remove', type=2, icon='fa fa-close', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=73, parentId=3, name='组织管理', url='/system/sysDept', perms='system:sysDept:sysDept', type=1, icon='fa fa-users', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=76, parentId=73, name='编辑', url='/system/sysDept/edit', perms='system:sysDept:edit', type=2, icon='null', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=81, parentId=78, name='删除', url='/common/dict/remove', perms='common:dict:remove', type=2, icon='', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=104, parentId=0, name='暖费管理', url='', perms='', type=0, icon='fa fa-fire', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=110, parentId=97, name='月统计报表', url='charts/countMM', perms='charts:countMM', type=1, icon='fa fa-registered', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=115, parentId=104, name='暖费生成', url='heat/heatUpLoad', perms='heat:heatUpLoad', type=1, icon='fa fa-cloud-upload', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=119, parentId=105, name='水费生成', url='water/waterUpLoad', perms='water:waterUpLoad', type=1, icon='fa fa-cloud-upload', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=123, parentId=103, name='电表上传', url='elec/elecUpLoad', perms='elec:elecUpLoad:elecUpLoad', type=1, icon='fa fa-cloud-upload', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=127, parentId=124, name='删除', url='/elec/elecPrice/remove', perms='elec:elecPrice:remove', type=2, icon='', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=130, parentId=121, name='编辑', url='/elec/elec/edit', perms='elec:elec:edit', type=2, icon='fa fa-edit', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=158, parentId=107, name='编辑', url='moneyLog/elecLog/edit', perms='moneyLog:elecLog:edit', type=2, icon='fa fa-edit', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=160, parentId=77, name='3D龙卷风', url='common/long', perms='', type=1, icon='fa fa-space-shuttle', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=83, parentId=78, name='批量删除', url='/common/dict/batchRemove', perms='common:dict:batchRemove', type=2, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=108, parentId=0, name='票据管理', url='', perms='', type=0, icon='fa fa-vcard-o', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=111, parentId=97, name='年统计报表', url='charts/countYY', perms='charts:countYY', type=1, icon='fa fa-support', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=116, parentId=104, name='暖价管理', url='/heat/heatPrice', perms='heat:heatPrice:heatPrice', type=1, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=120, parentId=105, name='水价管理', url='/water/waterPrice', perms='water:waterPrice:waterPrice', type=1, icon='fa fa-cc', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=124, parentId=103, name='电价管理', url='/elec/elecPrice', perms='elec:elecPrice:elecPrice', type=1, icon='fa fa-cc', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=128, parentId=124, name='批量删除', url='/elec/elecPrice/batchRemove', perms='elec:elecPrice:batchRemove', type=2, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=132, parentId=121, name='批量删除', url='/elec/elec/batchRemove', perms='elec:elec:batchRemove', type=2, icon='fa fa-file-excel-o', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=155, parentId=97, name='欠费报表图', url='charts/countOwe', perms='charts:countOwe', type=1, icon='fa fa-money', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=159, parentId=107, name='批量删除', url='moneyLog/elecLog/batchRemove', perms='moneyLog:elecLog:batchRemove', type=2, icon='fa fa-file-excel-o', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=97, parentId=0, name='统计管理', url='', perms='', type=0, icon='fa fa-bar-chart', orderNum=5, gmtCreate=null, gmtModified=null}, MenuDO{menuId=112, parentId=97, name='走势图报表', url='charts/countRun', perms='charts:countRun', type=1, icon='fa fa-tachometer', orderNum=5, gmtCreate=null, gmtModified=null}, MenuDO{menuId=1, parentId=0, name='基础管理', url='', perms='', type=0, icon='fa fa-bars', orderNum=6, gmtCreate=Wed Aug 09 22:49:47 CST 2017, gmtModified=null}, MenuDO{menuId=3, parentId=0, name='系统管理', url='null', perms='null', type=0, icon='fa fa-desktop', orderNum=7, gmtCreate=Wed Aug 09 23:06:55 CST 2017, gmtModified=Mon Aug 14 14:13:43 CST 2017}, MenuDO{menuId=77, parentId=0, name='系统工具', url='', perms='', type=0, icon='fa fa-gear', orderNum=8, gmtCreate=null, gmtModified=null}, MenuDO{menuId=84, parentId=0, name='办公管理', url='', perms='', type=0, icon='fa fa-laptop', orderNum=9, gmtCreate=null, gmtModified=null}, MenuDO{menuId=91, parentId=0, name='系统监控', url='', perms='', type=0, icon='fa fa-video-camera', orderNum=10, gmtCreate=null, gmtModified=null}]
2019-03-26 15:59:38 -请求地址 : http://localhost:8081/sys/menu/edit/103
2019-03-26 15:59:38 -HTTP METHOD : GET
2019-03-26 15:59:38 -CLASS_METHOD : com.bootdo.system.controller.MenuController.edit
2019-03-26 15:59:38 -参数 : [{}, 103]
2019-03-26 15:59:38 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu where menu_id = ? 
2019-03-26 15:59:38 -==> Parameters: 103(Long)
2019-03-26 15:59:38 -<==      Total: 1
2019-03-26 15:59:38 -耗时 : 14
2019-03-26 15:59:38 -返回值 : system/menu/edit
2019-03-26 15:59:38 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-26 15:59:38 -==> Parameters: 1(Long), admin(String), 编辑菜单(String), 14(Integer), com.bootdo.system.controller.MenuController.edit()(String), null, 127.0.0.1(String), 2019-03-26 15:59:38.869(Timestamp)
2019-03-26 15:59:38 -<==    Updates: 1
2019-03-26 15:59:46 -请求地址 : http://localhost:8081/sys/menu/edit/160
2019-03-26 15:59:46 -HTTP METHOD : GET
2019-03-26 15:59:46 -CLASS_METHOD : com.bootdo.system.controller.MenuController.edit
2019-03-26 15:59:46 -参数 : [{}, 160]
2019-03-26 15:59:46 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu where menu_id = ? 
2019-03-26 15:59:46 -==> Parameters: 160(Long)
2019-03-26 15:59:46 -<==      Total: 1
2019-03-26 15:59:46 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu where menu_id = ? 
2019-03-26 15:59:46 -==> Parameters: 77(Long)
2019-03-26 15:59:46 -<==      Total: 1
2019-03-26 15:59:46 -耗时 : 39
2019-03-26 15:59:46 -返回值 : system/menu/edit
2019-03-26 15:59:46 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-26 15:59:46 -==> Parameters: 1(Long), admin(String), 编辑菜单(String), 40(Integer), com.bootdo.system.controller.MenuController.edit()(String), null, 127.0.0.1(String), 2019-03-26 15:59:46.438(Timestamp)
2019-03-26 15:59:46 -<==    Updates: 1
2019-03-26 16:02:36 -请求地址 : http://localhost:8081/index
2019-03-26 16:02:36 -HTTP METHOD : GET
2019-03-26 16:02:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-26 16:02:36 -参数 : [{}]
2019-03-26 16:02:36 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-26 16:02:36 -==> Parameters: 1(Long)
2019-03-26 16:02:36 -<==      Total: 46
2019-03-26 16:02:36 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-26 16:02:36 -==> Parameters: 138(Long)
2019-03-26 16:02:36 -<==      Total: 1
2019-03-26 16:02:36 -耗时 : 97
2019-03-26 16:02:36 -返回值 : index_v1
2019-03-26 16:02:36 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-26 16:02:36 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 97(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-26 16:02:36.113(Timestamp)
2019-03-26 16:02:36 -<==    Updates: 1
2019-03-26 16:02:36 -请求地址 : http://localhost:8081/main
2019-03-26 16:02:36 -HTTP METHOD : GET
2019-03-26 16:02:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-26 16:02:36 -参数 : []
2019-03-26 16:02:36 -耗时 : 0
2019-03-26 16:02:36 -返回值 : main
2019-03-26 16:02:36 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-26 16:02:36 -HTTP METHOD : GET
2019-03-26 16:02:36 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-26 16:02:36 -参数 : []
2019-03-26 16:02:36 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-26 16:02:36 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-26 16:02:36 -<==      Total: 0
2019-03-26 16:02:36 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-26 16:02:36 -==> Parameters: 1(Long), 0(String)
2019-03-26 16:02:36 -<==      Total: 1
2019-03-26 16:02:36 -耗时 : 36
2019-03-26 16:02:36 -返回值 : com.bootdo.common.utils.PageUtils@6ea172a1
2019-03-26 16:02:36 -请求地址 : http://localhost:8081/main
2019-03-26 16:02:36 -HTTP METHOD : GET
2019-03-26 16:02:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-26 16:02:36 -参数 : []
2019-03-26 16:02:36 -耗时 : 2
2019-03-26 16:02:36 -返回值 : main
2019-03-26 16:02:37 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 5 total, 0 closed abnormally (0 connect failure, 0 send limit, 1 transport error)], stompSubProtocol[processed CONNECT(3)-CONNECTED(3)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 39], outboundChannelpool size = 2, active threads = 0, queued tasks = 0, completed tasks = 7], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 1567]
2019-03-26 16:03:13 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-26 16:03:13 -==> Parameters: 1(Long)
2019-03-26 16:03:13 -<==      Total: 90
2019-03-26 16:03:13 -请求地址 : http://localhost:8081/charts/countDD
2019-03-26 16:03:13 -HTTP METHOD : GET
2019-03-26 16:03:13 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-03-26 16:03:13 -参数 : []
2019-03-26 16:03:13 -耗时 : 1
2019-03-26 16:03:13 -返回值 : charts/countDD
2019-03-26 16:03:54 -请求地址 : http://localhost:8081/index
2019-03-26 16:03:54 -HTTP METHOD : GET
2019-03-26 16:03:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-26 16:03:54 -参数 : [{}]
2019-03-26 16:03:54 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-26 16:03:54 -==> Parameters: 1(Long)
2019-03-26 16:03:54 -<==      Total: 46
2019-03-26 16:03:54 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-26 16:03:54 -==> Parameters: 138(Long)
2019-03-26 16:03:54 -<==      Total: 1
2019-03-26 16:03:54 -耗时 : 29
2019-03-26 16:03:54 -返回值 : index_v1
2019-03-26 16:03:54 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-26 16:03:54 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 29(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-26 16:03:54.221(Timestamp)
2019-03-26 16:03:54 -请求地址 : http://localhost:8081/main
2019-03-26 16:03:54 -HTTP METHOD : GET
2019-03-26 16:03:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-26 16:03:54 -参数 : []
2019-03-26 16:03:54 -耗时 : 0
2019-03-26 16:03:54 -返回值 : main
2019-03-26 16:03:54 -<==    Updates: 1
2019-03-26 16:03:54 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-26 16:03:54 -HTTP METHOD : GET
2019-03-26 16:03:54 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-26 16:03:54 -参数 : []
2019-03-26 16:03:54 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-26 16:03:54 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-26 16:03:54 -<==      Total: 0
2019-03-26 16:03:54 -请求地址 : http://localhost:8081/main
2019-03-26 16:03:54 -HTTP METHOD : GET
2019-03-26 16:03:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-26 16:03:54 -参数 : []
2019-03-26 16:03:54 -耗时 : 1
2019-03-26 16:03:54 -返回值 : main
2019-03-26 16:03:54 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-26 16:03:54 -==> Parameters: 1(Long), 0(String)
2019-03-26 16:03:54 -<==      Total: 1
2019-03-26 16:03:54 -耗时 : 121
2019-03-26 16:03:54 -返回值 : com.bootdo.common.utils.PageUtils@5f4c7d32
2019-03-26 16:03:56 -请求地址 : http://localhost:8081/print/print
2019-03-26 16:03:56 -HTTP METHOD : GET
2019-03-26 16:03:56 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-03-26 16:03:56 -参数 : []
2019-03-26 16:03:56 -耗时 : 1
2019-03-26 16:03:56 -返回值 : print/print/print
2019-03-26 16:03:56 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-26 16:03:56 -HTTP METHOD : GET
2019-03-26 16:03:56 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-26 16:03:56 -参数 : [userType]
2019-03-26 16:03:56 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-26 16:03:56 -==> Parameters: userType(String)
2019-03-26 16:03:56 -<==      Total: 2
2019-03-26 16:03:56 -耗时 : 5
2019-03-26 16:03:56 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-26 16:03:56 -请求地址 : http://localhost:8081/print/print/list
2019-03-26 16:03:56 -HTTP METHOD : GET
2019-03-26 16:03:56 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-26 16:03:56 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-26 16:03:56 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-03-26 16:03:56 -==> Parameters: 0(Integer), 10(Integer)
2019-03-26 16:03:56 -<==      Total: 3
2019-03-26 16:03:56 -==>  Preparing: select count(*) from print 
2019-03-26 16:03:56 -==> Parameters: 
2019-03-26 16:03:56 -<==      Total: 1
2019-03-26 16:03:56 -耗时 : 15
2019-03-26 16:03:56 -返回值 : com.bootdo.common.utils.PageUtils@63a6bf0d
2019-03-26 16:15:19 -Validating all active sessions...
2019-03-26 16:15:19 -Finished session validation.  No sessions were stopped.
2019-03-26 16:24:25 -请求地址 : http://localhost:8081/index
2019-03-26 16:24:25 -HTTP METHOD : GET
2019-03-26 16:24:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-26 16:24:25 -参数 : [{}]
2019-03-26 16:24:25 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-26 16:24:25 -==> Parameters: 1(Long)
2019-03-26 16:24:26 -<==      Total: 46
2019-03-26 16:24:26 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-26 16:24:26 -==> Parameters: 138(Long)
2019-03-26 16:24:26 -<==      Total: 1
2019-03-26 16:24:26 -耗时 : 143
2019-03-26 16:24:26 -返回值 : index_v1
2019-03-26 16:24:26 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-26 16:24:26 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 143(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-26 16:24:26.138(Timestamp)
2019-03-26 16:24:26 -<==    Updates: 1
2019-03-26 16:24:26 -请求地址 : http://localhost:8081/main
2019-03-26 16:24:26 -HTTP METHOD : GET
2019-03-26 16:24:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-26 16:24:26 -参数 : []
2019-03-26 16:24:26 -耗时 : 3
2019-03-26 16:24:26 -返回值 : main
2019-03-26 16:24:26 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-26 16:24:26 -HTTP METHOD : GET
2019-03-26 16:24:26 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-26 16:24:26 -参数 : []
2019-03-26 16:24:26 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-26 16:24:26 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-26 16:24:26 -<==      Total: 0
2019-03-26 16:24:26 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-26 16:24:26 -==> Parameters: 1(Long), 0(String)
2019-03-26 16:24:26 -<==      Total: 1
2019-03-26 16:24:26 -耗时 : 9
2019-03-26 16:24:26 -返回值 : com.bootdo.common.utils.PageUtils@281f939b
2019-03-26 16:24:26 -请求地址 : http://localhost:8081/main
2019-03-26 16:24:26 -HTTP METHOD : GET
2019-03-26 16:24:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-26 16:24:26 -参数 : []
2019-03-26 16:24:26 -耗时 : 1
2019-03-26 16:24:26 -返回值 : main
2019-03-26 16:24:28 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-26 16:24:28 -==> Parameters: 1(Long)
2019-03-26 16:24:28 -<==      Total: 90
2019-03-26 16:24:28 -请求地址 : http://localhost:8081/charts/countDD
2019-03-26 16:24:28 -HTTP METHOD : GET
2019-03-26 16:24:28 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-03-26 16:24:28 -参数 : []
2019-03-26 16:24:28 -耗时 : 0
2019-03-26 16:24:28 -返回值 : charts/countDD
2019-03-26 16:25:23 -请求地址 : http://localhost:8081/index
2019-03-26 16:25:23 -HTTP METHOD : GET
2019-03-26 16:25:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-26 16:25:24 -参数 : [{}]
2019-03-26 16:25:24 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-26 16:25:24 -==> Parameters: 1(Long)
2019-03-26 16:25:24 -<==      Total: 46
2019-03-26 16:25:24 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-26 16:25:24 -==> Parameters: 138(Long)
2019-03-26 16:25:24 -<==      Total: 1
2019-03-26 16:25:24 -耗时 : 80
2019-03-26 16:25:24 -返回值 : index_v1
2019-03-26 16:25:24 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-26 16:25:24 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 80(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-26 16:25:24.027(Timestamp)
2019-03-26 16:25:24 -请求地址 : http://localhost:8081/main
2019-03-26 16:25:24 -HTTP METHOD : GET
2019-03-26 16:25:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-26 16:25:24 -参数 : []
2019-03-26 16:25:24 -耗时 : 0
2019-03-26 16:25:24 -返回值 : main
2019-03-26 16:25:24 -<==    Updates: 1
2019-03-26 16:25:24 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-26 16:25:24 -HTTP METHOD : GET
2019-03-26 16:25:24 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-26 16:25:24 -参数 : []
2019-03-26 16:25:24 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-26 16:25:24 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-26 16:25:24 -<==      Total: 0
2019-03-26 16:25:24 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-26 16:25:24 -==> Parameters: 1(Long), 0(String)
2019-03-26 16:25:24 -<==      Total: 1
2019-03-26 16:25:24 -耗时 : 37
2019-03-26 16:25:24 -返回值 : com.bootdo.common.utils.PageUtils@48f6cdaa
2019-03-26 16:25:24 -请求地址 : http://localhost:8081/main
2019-03-26 16:25:24 -HTTP METHOD : GET
2019-03-26 16:25:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-26 16:25:24 -参数 : []
2019-03-26 16:25:24 -耗时 : 1
2019-03-26 16:25:24 -返回值 : main
2019-03-26 16:25:27 -请求地址 : http://localhost:8081/charts/countDD
2019-03-26 16:25:27 -HTTP METHOD : GET
2019-03-26 16:25:27 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-03-26 16:25:27 -参数 : []
2019-03-26 16:25:27 -耗时 : 0
2019-03-26 16:25:27 -返回值 : charts/countDD
2019-03-26 16:26:47 -Starting BootdoApplication on ZJZL-20180906VX with PID 12340 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-26 16:26:47 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-26 16:26:47 -The following profiles are active: dev
2019-03-26 16:26:47 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1252b961: startup date [Tue Mar 26 16:26:47 CST 2019]; root of context hierarchy
2019-03-26 16:26:52 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-26 16:26:55 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$4f9d185b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 16:26:55 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$41f64702] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 16:26:56 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 16:26:57 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 16:26:57 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 16:26:57 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-26 16:26:57 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-26 16:26:57 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 16:26:57 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 16:26:57 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 16:26:57 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 16:26:59 -Tomcat initialized with port(s): 8081 (http)
2019-03-26 16:26:59 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-26 16:26:59 -Starting service [Tomcat]
2019-03-26 16:26:59 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-26 16:26:59 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-26 16:26:59 -Initializing Spring embedded WebApplicationContext
2019-03-26 16:26:59 -Root WebApplicationContext: initialization completed in 11782 ms
2019-03-26 16:27:00 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-26 16:27:00 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-26 16:27:00 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-26 16:27:00 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-26 16:27:00 -Filter xssFilter was not registered (disabled)
2019-03-26 16:27:00 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-26 16:27:00 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-26 16:27:00 -Servlet statViewServlet mapped to [/druid/*]
2019-03-26 16:27:00 -Servlet dispatcherServlet mapped to [/]
2019-03-26 16:27:12 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1252b961: startup date [Tue Mar 26 16:26:47 CST 2019]; root of context hierarchy
2019-03-26 16:27:13 -Using default implementation for ThreadExecutor
2019-03-26 16:27:13 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-26 16:27:13 -Quartz Scheduler v.2.2.1 created.
2019-03-26 16:27:13 -RAMJobStore initialized.
2019-03-26 16:27:13 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-26 16:27:13 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-26 16:27:13 -Quartz scheduler version: 2.2.1
2019-03-26 16:27:13 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@2b1a1a37
2019-03-26 16:27:14 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-26 16:27:14 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-26 16:27:18 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-26 16:27:18 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-03-26 16:27:18 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-26 16:27:18 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-26 16:27:18 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-26 16:27:18 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-26 16:27:18 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-26 16:27:18 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-26 16:27:18 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-26 16:27:18 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-26 16:27:18 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-26 16:27:18 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 16:27:18 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-26 16:27:18 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-26 16:27:18 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-26 16:27:18 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 16:27:18 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-26 16:27:18 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-26 16:27:18 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-26 16:27:18 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-26 16:27:18 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-26 16:27:18 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-26 16:27:18 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 16:27:18 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-26 16:27:18 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-26 16:27:18 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 16:27:18 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-26 16:27:18 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-26 16:27:18 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 16:27:18 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-26 16:27:18 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-26 16:27:18 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-26 16:27:18 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-26 16:27:18 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-26 16:27:18 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-26 16:27:18 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-26 16:27:18 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-26 16:27:18 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-26 16:27:18 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 16:27:18 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-26 16:27:18 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-26 16:27:18 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 16:27:18 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-26 16:27:18 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-26 16:27:18 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-26 16:27:18 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-26 16:27:18 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 16:27:18 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-26 16:27:18 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-03-26 16:27:18 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-26 16:27:18 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-26 16:27:18 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-26 16:27:18 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-26 16:27:18 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-26 16:27:18 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-26 16:27:18 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-26 16:27:18 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-26 16:27:18 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-26 16:27:18 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-26 16:27:18 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 16:27:18 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-26 16:27:18 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-26 16:27:18 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-26 16:27:18 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-03-26 16:27:18 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-26 16:27:18 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-26 16:27:18 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-26 16:27:18 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-26 16:27:18 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 16:27:18 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-03-26 16:27:18 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 16:27:18 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-26 16:27:18 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-26 16:27:18 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-26 16:27:18 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-26 16:27:18 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-26 16:27:18 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-26 16:27:18 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-26 16:27:18 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 16:27:18 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-26 16:27:18 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-26 16:27:18 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-26 16:27:18 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-26 16:27:18 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-26 16:27:18 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-26 16:27:18 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-26 16:27:18 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-26 16:27:18 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-26 16:27:18 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-26 16:27:18 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 16:27:18 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-26 16:27:18 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 16:27:18 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-26 16:27:18 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-03-26 16:27:18 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-26 16:27:18 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-26 16:27:18 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-03-26 16:27:18 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-26 16:27:18 -Mapped "{[/moneyList/moneyList/UserList],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-26 16:27:18 -Mapped "{[/moneyList/moneyList/LikeName],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.LikeName(org.springframework.ui.Model)
2019-03-26 16:27:18 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-26 16:27:18 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-26 16:27:18 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-26 16:27:18 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-26 16:27:18 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 16:27:18 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-26 16:27:18 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 16:27:18 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-26 16:27:18 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-26 16:27:18 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-26 16:27:18 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-26 16:27:18 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-26 16:27:18 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-26 16:27:18 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 16:27:18 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-26 16:27:18 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 16:27:18 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-26 16:27:18 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-26 16:27:18 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-26 16:27:18 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-26 16:27:18 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-26 16:27:18 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-26 16:27:18 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 16:27:18 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-26 16:27:18 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 16:27:18 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-26 16:27:18 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-26 16:27:18 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-26 16:27:18 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-26 16:27:18 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-26 16:27:18 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-26 16:27:18 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-26 16:27:18 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 16:27:18 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-26 16:27:18 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-26 16:27:18 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 16:27:18 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 16:27:18 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-26 16:27:18 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-26 16:27:18 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-26 16:27:18 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-26 16:27:18 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-26 16:27:18 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-26 16:27:18 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 16:27:18 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-26 16:27:18 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 16:27:18 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 16:27:18 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-26 16:27:18 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-26 16:27:18 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-26 16:27:18 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-26 16:27:18 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-26 16:27:18 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-26 16:27:18 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-26 16:27:18 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-26 16:27:18 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-26 16:27:18 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 16:27:18 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-26 16:27:18 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-26 16:27:18 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-26 16:27:18 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-26 16:27:18 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-26 16:27:18 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-26 16:27:18 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-26 16:27:18 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-26 16:27:18 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-26 16:27:18 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-26 16:27:18 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-26 16:27:18 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-26 16:27:18 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 16:27:18 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-26 16:27:18 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-26 16:27:18 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-26 16:27:18 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-26 16:27:18 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-26 16:27:18 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-26 16:27:18 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-26 16:27:18 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-26 16:27:18 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-26 16:27:18 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-26 16:27:18 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-26 16:27:18 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-26 16:27:18 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 16:27:18 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-26 16:27:18 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-26 16:27:18 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-26 16:27:18 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-26 16:27:18 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 16:27:18 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-26 16:27:18 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-26 16:27:18 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-26 16:27:18 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 16:27:18 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-26 16:27:18 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-26 16:27:18 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-26 16:27:18 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-26 16:27:18 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-26 16:27:18 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-26 16:27:18 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-26 16:27:18 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-26 16:27:18 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-26 16:27:18 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-26 16:27:18 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-26 16:27:18 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-26 16:27:18 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-26 16:27:18 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-26 16:27:18 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-26 16:27:18 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-26 16:27:18 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-26 16:27:18 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 16:27:18 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-26 16:27:18 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-26 16:27:18 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 16:27:18 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-26 16:27:18 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 16:27:18 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-26 16:27:18 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-26 16:27:18 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-26 16:27:18 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-26 16:27:18 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-26 16:27:18 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-26 16:27:18 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 16:27:18 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-26 16:27:18 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 16:27:18 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-26 16:27:18 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-26 16:27:18 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-26 16:27:18 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-03-26 16:27:18 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-03-26 16:27:18 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-26 16:27:18 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-26 16:27:18 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-26 16:27:18 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-26 16:27:19 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-26 16:27:19 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-26 16:27:19 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-26 16:27:20 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-26 16:27:20 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1252b961: startup date [Tue Mar 26 16:26:47 CST 2019]; root of context hierarchy
2019-03-26 16:27:21 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-26 16:27:21 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-26 16:27:21 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-26 16:27:21 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-26 16:27:21 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-26 16:27:24 -Registering beans for JMX exposure on startup
2019-03-26 16:27:24 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-26 16:27:24 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-26 16:27:24 -Starting beans in phase 2147483647
2019-03-26 16:27:24 -Context refreshed
2019-03-26 16:27:24 -Found 1 custom documentation plugin(s)
2019-03-26 16:27:24 -Scanning for api listing references
2019-03-26 16:27:25 -Generating unique operation named: removeUsingPOST_1
2019-03-26 16:27:25 -Generating unique operation named: addUsingGET_1
2019-03-26 16:27:25 -Generating unique operation named: editUsingGET_1
2019-03-26 16:27:25 -Generating unique operation named: listUsingGET_1
2019-03-26 16:27:25 -Generating unique operation named: removeUsingPOST_2
2019-03-26 16:27:25 -Generating unique operation named: removeUsingPOST_3
2019-03-26 16:27:25 -Generating unique operation named: saveUsingPOST_1
2019-03-26 16:27:25 -Generating unique operation named: updateUsingGET_1
2019-03-26 16:27:25 -Generating unique operation named: updateUsingHEAD_1
2019-03-26 16:27:25 -Generating unique operation named: updateUsingPOST_1
2019-03-26 16:27:25 -Generating unique operation named: updateUsingPUT_1
2019-03-26 16:27:25 -Generating unique operation named: updateUsingPATCH_1
2019-03-26 16:27:25 -Generating unique operation named: updateUsingDELETE_1
2019-03-26 16:27:25 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-26 16:27:25 -Generating unique operation named: updateUsingTRACE_1
2019-03-26 16:27:25 -Generating unique operation named: addUsingGET_2
2019-03-26 16:27:25 -Generating unique operation named: editUsingGET_2
2019-03-26 16:27:25 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-26 16:27:25 -Generating unique operation named: listUsingGET_2
2019-03-26 16:27:25 -Generating unique operation named: removeUsingPOST_4
2019-03-26 16:27:25 -Generating unique operation named: removeUsingPOST_5
2019-03-26 16:27:25 -Generating unique operation named: saveUsingPOST_2
2019-03-26 16:27:25 -Generating unique operation named: updateUsingPOST_2
2019-03-26 16:27:26 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-26 16:27:26 -Generating unique operation named: addUsingGET_3
2019-03-26 16:27:26 -Generating unique operation named: editUsingGET_3
2019-03-26 16:27:26 -Generating unique operation named: listUsingGET_3
2019-03-26 16:27:26 -Generating unique operation named: removeUsingPOST_6
2019-03-26 16:27:26 -Generating unique operation named: removeUsingPOST_7
2019-03-26 16:27:26 -Generating unique operation named: saveUsingPOST_3
2019-03-26 16:27:26 -Generating unique operation named: updateUsingGET_2
2019-03-26 16:27:26 -Generating unique operation named: updateUsingHEAD_2
2019-03-26 16:27:26 -Generating unique operation named: updateUsingPOST_3
2019-03-26 16:27:26 -Generating unique operation named: updateUsingPUT_2
2019-03-26 16:27:26 -Generating unique operation named: updateUsingPATCH_2
2019-03-26 16:27:26 -Generating unique operation named: updateUsingDELETE_2
2019-03-26 16:27:26 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-26 16:27:26 -Generating unique operation named: updateUsingTRACE_2
2019-03-26 16:27:26 -Generating unique operation named: addUsingGET_4
2019-03-26 16:27:26 -Generating unique operation named: editUsingGET_4
2019-03-26 16:27:26 -Generating unique operation named: listUsingGET_4
2019-03-26 16:27:26 -Generating unique operation named: removeUsingPOST_8
2019-03-26 16:27:26 -Generating unique operation named: removeUsingPOST_9
2019-03-26 16:27:26 -Generating unique operation named: saveUsingPOST_4
2019-03-26 16:27:26 -Generating unique operation named: updateUsingGET_3
2019-03-26 16:27:26 -Generating unique operation named: updateUsingHEAD_3
2019-03-26 16:27:26 -Generating unique operation named: updateUsingPOST_4
2019-03-26 16:27:26 -Generating unique operation named: updateUsingPUT_3
2019-03-26 16:27:26 -Generating unique operation named: updateUsingPATCH_3
2019-03-26 16:27:26 -Generating unique operation named: updateUsingDELETE_3
2019-03-26 16:27:26 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-26 16:27:26 -Generating unique operation named: updateUsingTRACE_3
2019-03-26 16:27:26 -Generating unique operation named: ElecUsingGET_1
2019-03-26 16:27:26 -Generating unique operation named: addUsingGET_5
2019-03-26 16:27:26 -Generating unique operation named: editUsingGET_5
2019-03-26 16:27:26 -Generating unique operation named: listUsingGET_5
2019-03-26 16:27:26 -Generating unique operation named: removeUsingPOST_10
2019-03-26 16:27:26 -Generating unique operation named: removeUsingPOST_11
2019-03-26 16:27:26 -Generating unique operation named: saveUsingPOST_5
2019-03-26 16:27:26 -Generating unique operation named: updateUsingGET_4
2019-03-26 16:27:26 -Generating unique operation named: updateUsingHEAD_4
2019-03-26 16:27:26 -Generating unique operation named: updateUsingPOST_5
2019-03-26 16:27:26 -Generating unique operation named: updateUsingPUT_4
2019-03-26 16:27:26 -Generating unique operation named: updateUsingPATCH_4
2019-03-26 16:27:26 -Generating unique operation named: updateUsingDELETE_4
2019-03-26 16:27:26 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-26 16:27:26 -Generating unique operation named: updateUsingTRACE_4
2019-03-26 16:27:26 -Generating unique operation named: editUsingGET_6
2019-03-26 16:27:26 -Generating unique operation named: listUsingGET_6
2019-03-26 16:27:26 -Generating unique operation named: updateUsingPOST_6
2019-03-26 16:27:26 -Generating unique operation named: addUsingGET_6
2019-03-26 16:27:26 -Generating unique operation named: editUsingGET_7
2019-03-26 16:27:26 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-26 16:27:26 -Generating unique operation named: listUsingGET_7
2019-03-26 16:27:26 -Generating unique operation named: removeUsingPOST_12
2019-03-26 16:27:26 -Generating unique operation named: removeUsingPOST_13
2019-03-26 16:27:26 -Generating unique operation named: saveUsingPOST_6
2019-03-26 16:27:26 -Generating unique operation named: updateUsingGET_5
2019-03-26 16:27:26 -Generating unique operation named: updateUsingHEAD_5
2019-03-26 16:27:26 -Generating unique operation named: updateUsingPOST_7
2019-03-26 16:27:26 -Generating unique operation named: updateUsingPUT_5
2019-03-26 16:27:26 -Generating unique operation named: updateUsingPATCH_5
2019-03-26 16:27:26 -Generating unique operation named: updateUsingDELETE_5
2019-03-26 16:27:26 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-26 16:27:26 -Generating unique operation named: updateUsingTRACE_5
2019-03-26 16:27:26 -Generating unique operation named: exprotExcelUsingGET_4
2019-03-26 16:27:26 -Generating unique operation named: addUsingGET_7
2019-03-26 16:27:26 -Generating unique operation named: editUsingGET_8
2019-03-26 16:27:26 -Generating unique operation named: listUsingGET_8
2019-03-26 16:27:26 -Generating unique operation named: removeUsingPOST_14
2019-03-26 16:27:26 -Generating unique operation named: removeUsingPOST_15
2019-03-26 16:27:26 -Generating unique operation named: saveUsingPOST_7
2019-03-26 16:27:26 -Generating unique operation named: updateUsingGET_6
2019-03-26 16:27:26 -Generating unique operation named: updateUsingHEAD_6
2019-03-26 16:27:26 -Generating unique operation named: updateUsingPOST_8
2019-03-26 16:27:26 -Generating unique operation named: updateUsingPUT_6
2019-03-26 16:27:26 -Generating unique operation named: updateUsingPATCH_6
2019-03-26 16:27:26 -Generating unique operation named: updateUsingDELETE_6
2019-03-26 16:27:26 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-26 16:27:26 -Generating unique operation named: updateUsingTRACE_6
2019-03-26 16:27:26 -Generating unique operation named: addUsingGET_8
2019-03-26 16:27:26 -Generating unique operation named: editUsingGET_9
2019-03-26 16:27:26 -Generating unique operation named: listUsingGET_9
2019-03-26 16:27:26 -Generating unique operation named: removeUsingPOST_16
2019-03-26 16:27:26 -Generating unique operation named: removeUsingPOST_17
2019-03-26 16:27:26 -Generating unique operation named: saveUsingPOST_8
2019-03-26 16:27:26 -Generating unique operation named: updateUsingGET_7
2019-03-26 16:27:26 -Generating unique operation named: updateUsingHEAD_7
2019-03-26 16:27:26 -Generating unique operation named: updateUsingPOST_9
2019-03-26 16:27:26 -Generating unique operation named: updateUsingPUT_7
2019-03-26 16:27:26 -Generating unique operation named: updateUsingPATCH_7
2019-03-26 16:27:26 -Generating unique operation named: updateUsingDELETE_7
2019-03-26 16:27:26 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-26 16:27:26 -Generating unique operation named: updateUsingTRACE_7
2019-03-26 16:27:26 -Generating unique operation named: addUsingGET_9
2019-03-26 16:27:26 -Generating unique operation named: editUsingGET_10
2019-03-26 16:27:26 -Generating unique operation named: infoUsingGET_1
2019-03-26 16:27:26 -Generating unique operation named: infoUsingHEAD_1
2019-03-26 16:27:27 -Generating unique operation named: infoUsingPOST_1
2019-03-26 16:27:27 -Generating unique operation named: infoUsingPUT_1
2019-03-26 16:27:27 -Generating unique operation named: infoUsingPATCH_1
2019-03-26 16:27:27 -Generating unique operation named: infoUsingDELETE_1
2019-03-26 16:27:27 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-26 16:27:27 -Generating unique operation named: infoUsingTRACE_1
2019-03-26 16:27:27 -Generating unique operation named: listUsingGET_10
2019-03-26 16:27:27 -Generating unique operation named: removeUsingPOST_18
2019-03-26 16:27:27 -Generating unique operation named: removeUsingPOST_19
2019-03-26 16:27:27 -Generating unique operation named: saveUsingPOST_9
2019-03-26 16:27:27 -Generating unique operation named: updateUsingPOST_10
2019-03-26 16:27:27 -Generating unique operation named: listUsingGET_11
2019-03-26 16:27:27 -Generating unique operation named: removeUsingPOST_20
2019-03-26 16:27:27 -Generating unique operation named: welcomeUsingGET_1
2019-03-26 16:27:27 -Generating unique operation named: addUsingGET_10
2019-03-26 16:27:27 -Generating unique operation named: editUsingGET_11
2019-03-26 16:27:27 -Generating unique operation named: listUsingGET_12
2019-03-26 16:27:27 -Generating unique operation named: removeUsingPOST_21
2019-03-26 16:27:27 -Generating unique operation named: saveUsingPOST_10
2019-03-26 16:27:27 -Generating unique operation named: treeUsingGET_1
2019-03-26 16:27:27 -Generating unique operation named: treeUsingGET_2
2019-03-26 16:27:27 -Generating unique operation named: updateUsingPOST_11
2019-03-26 16:27:27 -Generating unique operation named: addUsingGET_11
2019-03-26 16:27:27 -Generating unique operation named: editUsingGET_12
2019-03-26 16:27:27 -Generating unique operation named: listUsingGET_13
2019-03-26 16:27:27 -Generating unique operation named: removeUsingPOST_22
2019-03-26 16:27:27 -Generating unique operation named: removeUsingPOST_23
2019-03-26 16:27:27 -Generating unique operation named: saveUsingPOST_11
2019-03-26 16:27:27 -Generating unique operation named: updateUsingGET_8
2019-03-26 16:27:27 -Generating unique operation named: updateUsingHEAD_8
2019-03-26 16:27:27 -Generating unique operation named: updateUsingPOST_12
2019-03-26 16:27:27 -Generating unique operation named: updateUsingPUT_8
2019-03-26 16:27:27 -Generating unique operation named: updateUsingPATCH_8
2019-03-26 16:27:27 -Generating unique operation named: updateUsingDELETE_8
2019-03-26 16:27:27 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-26 16:27:27 -Generating unique operation named: updateUsingTRACE_8
2019-03-26 16:27:27 -Generating unique operation named: addUsingGET_12
2019-03-26 16:27:27 -Generating unique operation named: editUsingGET_13
2019-03-26 16:27:27 -Generating unique operation named: listUsingGET_14
2019-03-26 16:27:27 -Generating unique operation named: removeUsingPOST_24
2019-03-26 16:27:27 -Generating unique operation named: removeUsingPOST_25
2019-03-26 16:27:27 -Generating unique operation named: saveUsingPOST_12
2019-03-26 16:27:27 -Generating unique operation named: updateUsingGET_9
2019-03-26 16:27:27 -Generating unique operation named: updateUsingHEAD_9
2019-03-26 16:27:27 -Generating unique operation named: updateUsingPOST_13
2019-03-26 16:27:27 -Generating unique operation named: updateUsingPUT_9
2019-03-26 16:27:27 -Generating unique operation named: updateUsingPATCH_9
2019-03-26 16:27:27 -Generating unique operation named: updateUsingDELETE_9
2019-03-26 16:27:27 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-26 16:27:27 -Generating unique operation named: updateUsingTRACE_9
2019-03-26 16:27:27 -Generating unique operation named: addUsingGET_13
2019-03-26 16:27:27 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-26 16:27:27 -Generating unique operation named: editUsingGET_14
2019-03-26 16:27:27 -Generating unique operation named: listUsingGET_15
2019-03-26 16:27:27 -Generating unique operation named: saveUsingPOST_13
2019-03-26 16:27:27 -Generating unique operation named: saveUsingPOST_14
2019-03-26 16:27:27 -Generating unique operation named: updateUsingPOST_14
2019-03-26 16:27:27 -Generating unique operation named: listUsingGET_16
2019-03-26 16:27:27 -Generating unique operation named: listUsingHEAD_1
2019-03-26 16:27:27 -Generating unique operation named: listUsingPOST_1
2019-03-26 16:27:27 -Generating unique operation named: listUsingPUT_1
2019-03-26 16:27:27 -Generating unique operation named: listUsingPATCH_1
2019-03-26 16:27:27 -Generating unique operation named: listUsingDELETE_1
2019-03-26 16:27:27 -Generating unique operation named: listUsingOPTIONS_1
2019-03-26 16:27:27 -Generating unique operation named: listUsingTRACE_1
2019-03-26 16:27:27 -Generating unique operation named: addUsingGET_14
2019-03-26 16:27:27 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-26 16:27:27 -Generating unique operation named: editUsingGET_15
2019-03-26 16:27:27 -Generating unique operation named: listUsingGET_17
2019-03-26 16:27:27 -Generating unique operation named: removeUsingPOST_26
2019-03-26 16:27:27 -Generating unique operation named: saveUsingPOST_15
2019-03-26 16:27:27 -Generating unique operation named: treeUsingGET_3
2019-03-26 16:27:28 -Generating unique operation named: treeViewUsingGET_1
2019-03-26 16:27:28 -Generating unique operation named: updateUsingPOST_15
2019-03-26 16:27:28 -Generating unique operation named: addUsingGET_15
2019-03-26 16:27:28 -Generating unique operation named: editUsingGET_16
2019-03-26 16:27:28 -Generating unique operation named: exprotExcelUsingGET_5
2019-03-26 16:27:28 -Generating unique operation named: listUsingGET_18
2019-03-26 16:27:28 -Generating unique operation named: removeUsingPOST_27
2019-03-26 16:27:28 -Generating unique operation named: removeUsingPOST_28
2019-03-26 16:27:28 -Generating unique operation named: saveUsingPOST_16
2019-03-26 16:27:28 -Generating unique operation named: updateUsingGET_10
2019-03-26 16:27:28 -Generating unique operation named: updateUsingHEAD_10
2019-03-26 16:27:28 -Generating unique operation named: updateUsingPOST_16
2019-03-26 16:27:28 -Generating unique operation named: updateUsingPUT_10
2019-03-26 16:27:28 -Generating unique operation named: updateUsingPATCH_10
2019-03-26 16:27:28 -Generating unique operation named: updateUsingDELETE_10
2019-03-26 16:27:28 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-26 16:27:28 -Generating unique operation named: updateUsingTRACE_10
2019-03-26 16:27:28 -Generating unique operation named: exprotExcelUsingGET_6
2019-03-26 16:27:28 -Generating unique operation named: addUsingGET_16
2019-03-26 16:27:28 -Generating unique operation named: editUsingGET_17
2019-03-26 16:27:28 -Generating unique operation named: listUsingGET_19
2019-03-26 16:27:28 -Generating unique operation named: removeUsingPOST_29
2019-03-26 16:27:28 -Generating unique operation named: removeUsingPOST_30
2019-03-26 16:27:28 -Generating unique operation named: saveUsingPOST_17
2019-03-26 16:27:28 -Generating unique operation named: updateUsingGET_11
2019-03-26 16:27:28 -Generating unique operation named: updateUsingHEAD_11
2019-03-26 16:27:28 -Generating unique operation named: updateUsingPOST_17
2019-03-26 16:27:28 -Generating unique operation named: updateUsingPUT_11
2019-03-26 16:27:28 -Generating unique operation named: updateUsingPATCH_11
2019-03-26 16:27:28 -Generating unique operation named: updateUsingDELETE_11
2019-03-26 16:27:28 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-26 16:27:28 -Generating unique operation named: updateUsingTRACE_11
2019-03-26 16:27:28 -Generating unique operation named: addUsingGET_17
2019-03-26 16:27:28 -Generating unique operation named: editUsingGET_18
2019-03-26 16:27:28 -Generating unique operation named: listUsingGET_20
2019-03-26 16:27:29 -Generating unique operation named: removeUsingPOST_31
2019-03-26 16:27:29 -Generating unique operation named: removeUsingPOST_32
2019-03-26 16:27:29 -Generating unique operation named: saveUsingPOST_18
2019-03-26 16:27:29 -Generating unique operation named: updateUsingGET_12
2019-03-26 16:27:29 -Generating unique operation named: updateUsingHEAD_12
2019-03-26 16:27:29 -Generating unique operation named: updateUsingPOST_18
2019-03-26 16:27:29 -Generating unique operation named: updateUsingPUT_12
2019-03-26 16:27:29 -Generating unique operation named: updateUsingPATCH_12
2019-03-26 16:27:29 -Generating unique operation named: updateUsingDELETE_12
2019-03-26 16:27:29 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-26 16:27:29 -Generating unique operation named: updateUsingTRACE_12
2019-03-26 16:27:29 -Starting Quartz Scheduler now
2019-03-26 16:27:29 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-26 16:27:29 -Starting...
2019-03-26 16:27:29 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-26 16:27:29 -Started.
2019-03-26 16:27:29 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-26 16:27:29 -Using a shared selector for servlet write/read
2019-03-26 16:27:29 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-26 16:27:29 -Started BootdoApplication in 44.086 seconds (JVM running for 45.798)
2019-03-26 16:27:29 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-26 16:27:30 -==> Parameters: 
2019-03-26 16:27:30 -<==      Total: 1
2019-03-26 16:27:35 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-26 16:27:35 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-26 16:27:35 -FrameworkServlet 'dispatcherServlet': initialization completed in 113 ms
2019-03-26 16:27:35 -Enabling session validation scheduler...
2019-03-26 16:27:35 -请求地址 : http://localhost:8081/login;JSESSIONID=97eda11b-7dbb-44ab-aec6-696bd57146c2
2019-03-26 16:27:35 -HTTP METHOD : GET
2019-03-26 16:27:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-26 16:27:35 -参数 : [{}]
2019-03-26 16:27:35 -耗时 : 6
2019-03-26 16:27:35 -返回值 : login
2019-03-26 16:27:37 -请求地址 : http://localhost:8081/getVerify
2019-03-26 16:27:37 -HTTP METHOD : GET
2019-03-26 16:27:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-26 16:27:37 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@18ece83d, org.apache.shiro.web.servlet.ShiroHttpServletResponse@210e7ced]
2019-03-26 16:27:41 -6573
2019-03-26 16:27:42 -耗时 : 4059
2019-03-26 16:27:42 -返回值 : null
2019-03-26 16:27:42 -请求地址 : http://localhost:8081/login
2019-03-26 16:27:42 -HTTP METHOD : GET
2019-03-26 16:27:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-26 16:27:42 -参数 : [{}]
2019-03-26 16:27:42 -耗时 : 1
2019-03-26 16:27:42 -返回值 : login
2019-03-26 16:27:47 -请求地址 : http://localhost:8081/login
2019-03-26 16:27:47 -HTTP METHOD : POST
2019-03-26 16:27:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-26 16:27:47 -参数 : [admin, 111111, 6573, org.apache.shiro.web.servlet.ShiroHttpServletRequest@2d379b0f]
2019-03-26 16:27:47 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-26 16:27:47 -==> Parameters: admin(String)
2019-03-26 16:27:47 -<==      Total: 1
2019-03-26 16:27:47 -耗时 : 199
2019-03-26 16:27:47 -返回值 : {msg=操作成功, code=0}
2019-03-26 16:27:47 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-03-26 16:27:47 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-26 16:27:47 -==> Parameters: 1(Long), admin(String), 登录(String), 199(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-26 16:27:47.38(Timestamp)
2019-03-26 16:27:47 -请求地址 : http://localhost:8081/index
2019-03-26 16:27:47 -HTTP METHOD : GET
2019-03-26 16:27:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-26 16:27:47 -参数 : [{}]
2019-03-26 16:27:47 -<==    Updates: 1
2019-03-26 16:27:47 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-26 16:27:47 -==> Parameters: 1(Long)
2019-03-26 16:27:47 -<==      Total: 46
2019-03-26 16:27:47 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-26 16:27:47 -==> Parameters: 138(Long)
2019-03-26 16:27:47 -<==      Total: 1
2019-03-26 16:27:47 -耗时 : 465
2019-03-26 16:27:47 -返回值 : index_v1
2019-03-26 16:27:48 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-26 16:27:48 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 465(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-26 16:27:48.11(Timestamp)
2019-03-26 16:27:48 -<==    Updates: 1
2019-03-26 16:27:48 -请求地址 : http://localhost:8081/main
2019-03-26 16:27:48 -HTTP METHOD : GET
2019-03-26 16:27:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-26 16:27:48 -参数 : []
2019-03-26 16:27:48 -耗时 : 1
2019-03-26 16:27:48 -返回值 : main
2019-03-26 16:27:48 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-26 16:27:48 -HTTP METHOD : GET
2019-03-26 16:27:48 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-26 16:27:48 -参数 : []
2019-03-26 16:27:48 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-26 16:27:48 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-26 16:27:48 -<==      Total: 0
2019-03-26 16:27:48 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-26 16:27:48 -==> Parameters: 1(Long), 0(String)
2019-03-26 16:27:48 -<==      Total: 1
2019-03-26 16:27:48 -耗时 : 65
2019-03-26 16:27:48 -返回值 : com.bootdo.common.utils.PageUtils@e35eb20
2019-03-26 16:27:48 -请求地址 : http://localhost:8081/main
2019-03-26 16:27:48 -HTTP METHOD : GET
2019-03-26 16:27:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-26 16:27:48 -参数 : []
2019-03-26 16:27:48 -耗时 : 0
2019-03-26 16:27:48 -返回值 : main
2019-03-26 16:27:52 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-26 16:27:52 -==> Parameters: 1(Long)
2019-03-26 16:27:52 -<==      Total: 90
2019-03-26 16:27:52 -请求地址 : http://localhost:8081/charts/countDD
2019-03-26 16:27:52 -HTTP METHOD : GET
2019-03-26 16:27:52 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-03-26 16:27:52 -参数 : []
2019-03-26 16:27:52 -耗时 : 0
2019-03-26 16:27:52 -返回值 : charts/countDD
2019-03-26 16:28:19 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 8]
2019-03-26 16:28:55 -请求地址 : http://localhost:8081/index
2019-03-26 16:28:55 -HTTP METHOD : GET
2019-03-26 16:28:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-26 16:28:55 -参数 : [{}]
2019-03-26 16:28:55 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-26 16:28:55 -==> Parameters: 1(Long)
2019-03-26 16:28:55 -<==      Total: 46
2019-03-26 16:28:55 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-26 16:28:55 -==> Parameters: 138(Long)
2019-03-26 16:28:55 -<==      Total: 1
2019-03-26 16:28:55 -耗时 : 31
2019-03-26 16:28:55 -返回值 : index_v1
2019-03-26 16:28:55 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-26 16:28:55 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 31(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-26 16:28:55.05(Timestamp)
2019-03-26 16:28:55 -<==    Updates: 1
2019-03-26 16:28:55 -请求地址 : http://localhost:8081/main
2019-03-26 16:28:55 -HTTP METHOD : GET
2019-03-26 16:28:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-26 16:28:55 -参数 : []
2019-03-26 16:28:55 -耗时 : 1
2019-03-26 16:28:55 -返回值 : main
2019-03-26 16:28:55 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-26 16:28:55 -HTTP METHOD : GET
2019-03-26 16:28:55 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-26 16:28:55 -参数 : []
2019-03-26 16:28:55 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-26 16:28:55 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-26 16:28:55 -<==      Total: 0
2019-03-26 16:28:55 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-26 16:28:55 -==> Parameters: 1(Long), 0(String)
2019-03-26 16:28:55 -<==      Total: 1
2019-03-26 16:28:55 -耗时 : 7
2019-03-26 16:28:55 -返回值 : com.bootdo.common.utils.PageUtils@61d5489a
2019-03-26 16:28:55 -请求地址 : http://localhost:8081/main
2019-03-26 16:28:55 -HTTP METHOD : GET
2019-03-26 16:28:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-26 16:28:55 -参数 : []
2019-03-26 16:28:55 -耗时 : 0
2019-03-26 16:28:55 -返回值 : main
2019-03-26 16:28:57 -请求地址 : http://localhost:8081/charts/countDD
2019-03-26 16:28:57 -HTTP METHOD : GET
2019-03-26 16:28:57 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-03-26 16:28:57 -参数 : []
2019-03-26 16:28:57 -耗时 : 0
2019-03-26 16:28:57 -返回值 : charts/countDD
2019-03-26 16:28:57 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-26 16:28:57 -HTTP METHOD : GET
2019-03-26 16:28:57 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-26 16:28:57 -参数 : [userType]
2019-03-26 16:28:57 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-26 16:28:57 -==> Parameters: userType(String)
2019-03-26 16:28:58 -<==      Total: 2
2019-03-26 16:28:58 -耗时 : 46
2019-03-26 16:28:58 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-26 16:41:53 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-26 16:41:53 -==> Parameters: 1(Long)
2019-03-26 16:41:53 -<==      Total: 90
2019-03-26 16:41:53 -请求地址 : http://localhost:8081/elec/elecPrice
2019-03-26 16:41:53 -HTTP METHOD : GET
2019-03-26 16:41:53 -CLASS_METHOD : com.bootdo.elec.controller.ElecPriceController.ElecPrice
2019-03-26 16:41:53 -参数 : []
2019-03-26 16:41:53 -耗时 : 1
2019-03-26 16:41:53 -返回值 : elec/elecPrice/elecPrice
2019-03-26 16:41:54 -请求地址 : http://localhost:8081/elec/elecPrice/list
2019-03-26 16:41:54 -HTTP METHOD : GET
2019-03-26 16:41:54 -CLASS_METHOD : com.bootdo.elec.controller.ElecPriceController.list
2019-03-26 16:41:54 -参数 : [{limit=10, offset=0}]
2019-03-26 16:41:54 -==>  Preparing: select `id`,`elec_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `elec_org`) AS elecOrgName,`business_elec`,`civil_elec`,`noindustry_elec`,`industry_elec`,`special_1`,`special_2`,`special_3`,`special_4`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_price order by id desc limit ?, ? 
2019-03-26 16:41:54 -==> Parameters: 0(Integer), 10(Integer)
2019-03-26 16:41:54 -<==      Total: 2
2019-03-26 16:41:54 -==>  Preparing: select count(*) from elec_price 
2019-03-26 16:41:54 -==> Parameters: 
2019-03-26 16:41:54 -<==      Total: 1
2019-03-26 16:41:54 -耗时 : 124
2019-03-26 16:41:54 -返回值 : com.bootdo.common.utils.PageUtils@73763ab6
2019-03-26 16:44:00 -请求地址 : http://localhost:8081/charts/countMM
2019-03-26 16:44:00 -HTTP METHOD : GET
2019-03-26 16:44:00 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-03-26 16:44:00 -参数 : []
2019-03-26 16:44:00 -耗时 : 1
2019-03-26 16:44:00 -返回值 : charts/countMM
2019-03-26 16:47:29 -请求地址 : http://localhost:8081/elec/elec
2019-03-26 16:47:29 -HTTP METHOD : GET
2019-03-26 16:47:29 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-26 16:47:29 -参数 : []
2019-03-26 16:47:29 -耗时 : 1
2019-03-26 16:47:29 -返回值 : elec/elec/elec
2019-03-26 16:47:30 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-26 16:47:30 -HTTP METHOD : GET
2019-03-26 16:47:30 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-26 16:47:30 -参数 : [userType]
2019-03-26 16:47:30 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-26 16:47:30 -==> Parameters: userType(String)
2019-03-26 16:47:30 -<==      Total: 2
2019-03-26 16:47:30 -耗时 : 11
2019-03-26 16:47:30 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-26 16:47:30 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-26 16:47:30 -HTTP METHOD : GET
2019-03-26 16:47:30 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-26 16:47:30 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@69f6c1ee]
2019-03-26 16:47:30 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-26 16:47:30 -==> Parameters: 0(Integer), 10(Integer)
2019-03-26 16:47:30 -<==      Total: 10
2019-03-26 16:47:30 -==>  Preparing: select count(*) from elec 
2019-03-26 16:47:30 -==> Parameters: 
2019-03-26 16:47:30 -<==      Total: 1
2019-03-26 16:47:30 -耗时 : 208
2019-03-26 16:47:30 -返回值 : com.bootdo.common.utils.PageUtils@5a2d7f6e
2019-03-26 16:54:43 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-26 16:54:43 -==> Parameters: 1(Long)
2019-03-26 16:54:43 -<==      Total: 90
2019-03-26 16:54:43 -请求地址 : http://localhost:8081/charts/countYY
2019-03-26 16:54:43 -HTTP METHOD : GET
2019-03-26 16:54:43 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.countYY
2019-03-26 16:54:43 -参数 : []
2019-03-26 16:54:43 -耗时 : 1
2019-03-26 16:54:43 -返回值 : charts/countYY
2019-03-26 16:58:19 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 21], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 3], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 440]
2019-03-26 17:02:40 -请求地址 : http://localhost:8081/print/print
2019-03-26 17:02:40 -HTTP METHOD : GET
2019-03-26 17:02:40 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-03-26 17:02:40 -参数 : []
2019-03-26 17:02:40 -耗时 : 0
2019-03-26 17:02:40 -返回值 : print/print/print
2019-03-26 17:02:40 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-26 17:02:40 -HTTP METHOD : GET
2019-03-26 17:02:40 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-26 17:02:40 -参数 : [userType]
2019-03-26 17:02:40 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-26 17:02:40 -==> Parameters: userType(String)
2019-03-26 17:02:40 -<==      Total: 2
2019-03-26 17:02:40 -耗时 : 6
2019-03-26 17:02:40 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-26 17:02:40 -请求地址 : http://localhost:8081/print/print/list
2019-03-26 17:02:40 -HTTP METHOD : GET
2019-03-26 17:02:40 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-26 17:02:40 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-26 17:02:41 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-03-26 17:02:41 -==> Parameters: 0(Integer), 10(Integer)
2019-03-26 17:02:41 -<==      Total: 3
2019-03-26 17:02:41 -==>  Preparing: select count(*) from print 
2019-03-26 17:02:41 -==> Parameters: 
2019-03-26 17:02:41 -<==      Total: 1
2019-03-26 17:02:41 -耗时 : 166
2019-03-26 17:02:41 -返回值 : com.bootdo.common.utils.PageUtils@1b3277b8
2019-03-26 17:05:51 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-26 17:05:51 -==> Parameters: 1(Long)
2019-03-26 17:05:51 -<==      Total: 90
2019-03-26 17:05:51 -请求地址 : http://localhost:8081/print/print/add
2019-03-26 17:05:51 -HTTP METHOD : GET
2019-03-26 17:05:51 -CLASS_METHOD : com.bootdo.print.controller.PrintController.add
2019-03-26 17:05:51 -参数 : []
2019-03-26 17:05:51 -耗时 : 1
2019-03-26 17:05:51 -返回值 : print/print/add
2019-03-26 17:05:51 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-26 17:05:51 -HTTP METHOD : GET
2019-03-26 17:05:51 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-26 17:05:51 -参数 : [userType]
2019-03-26 17:05:51 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-26 17:05:51 -==> Parameters: userType(String)
2019-03-26 17:05:51 -<==      Total: 2
2019-03-26 17:05:51 -耗时 : 5
2019-03-26 17:05:51 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-26 17:27:35 -Validating all active sessions...
2019-03-26 17:27:35 -Finished session validation.  No sessions were stopped.
2019-03-26 17:28:19 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 21], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 3], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 873]
2019-03-26 17:31:17 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-26 17:31:17 -==> Parameters: 1(Long)
2019-03-26 17:31:17 -<==      Total: 90
2019-03-26 17:31:17 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-26 17:31:17 -HTTP METHOD : GET
2019-03-26 17:31:17 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-26 17:31:17 -参数 : []
2019-03-26 17:31:17 -耗时 : 1
2019-03-26 17:31:17 -返回值 : /moneyLog/elecLog/elecLog
2019-03-26 17:31:18 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-26 17:31:18 -HTTP METHOD : GET
2019-03-26 17:31:18 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-26 17:31:18 -参数 : [userType]
2019-03-26 17:31:18 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-26 17:31:18 -==> Parameters: userType(String)
2019-03-26 17:31:18 -<==      Total: 2
2019-03-26 17:31:18 -耗时 : 6
2019-03-26 17:31:18 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-26 17:31:18 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-26 17:31:18 -HTTP METHOD : GET
2019-03-26 17:31:18 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-26 17:31:18 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-26 17:31:18 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-26 17:31:18 -==> Parameters: 0(Integer), 10(Integer)
2019-03-26 17:31:18 -<==      Total: 6
2019-03-26 17:31:18 -==>  Preparing: select count(*) from elec_log 
2019-03-26 17:31:18 -==> Parameters: 
2019-03-26 17:31:18 -<==      Total: 1
2019-03-26 17:31:18 -耗时 : 134
2019-03-26 17:31:18 -返回值 : com.bootdo.common.utils.PageUtils@5b8b5c31
2019-03-26 17:31:22 -请求地址 : http://localhost:8081/moneyLog/elecLog/edit/1
2019-03-26 17:31:22 -HTTP METHOD : GET
2019-03-26 17:31:22 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.edit
2019-03-26 17:31:22 -参数 : [1, {}]
2019-03-26 17:31:22 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log where id = ? 
2019-03-26 17:31:22 -==> Parameters: 1(Long)
2019-03-26 17:31:22 -<==      Total: 1
2019-03-26 17:31:22 -耗时 : 9
2019-03-26 17:31:22 -返回值 : moneyLog/elecLog/edit
2019-03-26 17:31:22 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-26 17:31:22 -HTTP METHOD : GET
2019-03-26 17:31:22 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-26 17:31:22 -参数 : [userType]
2019-03-26 17:31:22 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-26 17:31:22 -==> Parameters: userType(String)
2019-03-26 17:31:22 -请求地址 : http://localhost:8081/common/dict/list/userOrg
2019-03-26 17:31:22 -HTTP METHOD : GET
2019-03-26 17:31:22 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-26 17:31:22 -参数 : [userOrg]
2019-03-26 17:31:22 -<==      Total: 2
2019-03-26 17:31:22 -耗时 : 10
2019-03-26 17:31:22 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-26 17:31:22 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-26 17:31:22 -==> Parameters: userOrg(String)
2019-03-26 17:31:22 -<==      Total: 0
2019-03-26 17:31:22 -耗时 : 65
2019-03-26 17:31:22 -返回值 : []
2019-03-26 17:31:32 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-03-26 17:31:32 -HTTP METHOD : GET
2019-03-26 17:31:32 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-03-26 17:31:32 -参数 : []
2019-03-26 17:31:32 -耗时 : 1
2019-03-26 17:31:32 -返回值 : /moneyList/moneyList
2019-03-26 17:58:19 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 24], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 4], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 1, completed tasks = 1300]
2019-03-26 20:08:26 -Starting BootdoApplication on ZJZL-20180906VX with PID 2852 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-26 20:08:26 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-26 20:08:26 -The following profiles are active: dev
2019-03-26 20:08:27 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4a3329b9: startup date [Tue Mar 26 20:08:27 CST 2019]; root of context hierarchy
2019-03-26 20:08:35 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-26 20:08:40 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ed28d9cf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 20:08:40 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$df820876] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 20:08:42 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 20:08:42 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 20:08:42 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 20:08:42 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-26 20:08:42 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-26 20:08:42 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 20:08:43 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 20:08:43 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 20:08:43 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 20:08:45 -Tomcat initialized with port(s): 8081 (http)
2019-03-26 20:08:45 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-26 20:08:45 -Starting service [Tomcat]
2019-03-26 20:08:45 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-26 20:08:45 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-26 20:08:46 -Initializing Spring embedded WebApplicationContext
2019-03-26 20:08:46 -Root WebApplicationContext: initialization completed in 19491 ms
2019-03-26 20:08:48 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-26 20:08:48 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-26 20:08:48 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-26 20:08:48 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-26 20:08:48 -Filter xssFilter was not registered (disabled)
2019-03-26 20:08:48 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-26 20:08:48 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-26 20:08:48 -Servlet statViewServlet mapped to [/druid/*]
2019-03-26 20:08:48 -Servlet dispatcherServlet mapped to [/]
2019-03-26 20:08:53 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4a3329b9: startup date [Tue Mar 26 20:08:27 CST 2019]; root of context hierarchy
2019-03-26 20:08:54 -Using default implementation for ThreadExecutor
2019-03-26 20:08:54 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-26 20:08:54 -Quartz Scheduler v.2.2.1 created.
2019-03-26 20:08:54 -RAMJobStore initialized.
2019-03-26 20:08:54 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-26 20:08:54 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-26 20:08:54 -Quartz scheduler version: 2.2.1
2019-03-26 20:08:54 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@3b576ee3
2019-03-26 20:08:55 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-26 20:08:55 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-26 20:09:04 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-03-26 20:09:04 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-26 20:09:04 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-26 20:09:04 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-26 20:09:04 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-26 20:09:04 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-26 20:09:04 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-26 20:09:04 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-26 20:09:04 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-26 20:09:04 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-26 20:09:04 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-26 20:09:04 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 20:09:04 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-26 20:09:04 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-26 20:09:04 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-26 20:09:04 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 20:09:04 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-26 20:09:04 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-26 20:09:04 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-26 20:09:04 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-26 20:09:04 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-26 20:09:04 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-26 20:09:04 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 20:09:04 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-26 20:09:04 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-26 20:09:04 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 20:09:04 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-26 20:09:04 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-26 20:09:04 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 20:09:04 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-26 20:09:04 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-26 20:09:04 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-26 20:09:04 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-26 20:09:04 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-26 20:09:04 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-26 20:09:04 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-26 20:09:04 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-26 20:09:04 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-26 20:09:04 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 20:09:04 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-26 20:09:04 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-26 20:09:04 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 20:09:04 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-26 20:09:04 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-26 20:09:04 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-26 20:09:04 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-26 20:09:04 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 20:09:04 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-26 20:09:04 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-03-26 20:09:04 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-26 20:09:04 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-26 20:09:04 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-26 20:09:04 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-26 20:09:04 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-26 20:09:04 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-26 20:09:04 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-26 20:09:04 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-26 20:09:04 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-26 20:09:04 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 20:09:04 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-26 20:09:04 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-26 20:09:04 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-26 20:09:04 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-03-26 20:09:04 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-26 20:09:04 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-26 20:09:04 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-26 20:09:04 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-26 20:09:04 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-26 20:09:04 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 20:09:04 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-03-26 20:09:04 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-26 20:09:04 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 20:09:04 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-26 20:09:04 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-26 20:09:04 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-26 20:09:04 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-26 20:09:04 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-26 20:09:04 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-26 20:09:04 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 20:09:04 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-26 20:09:04 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-26 20:09:04 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-26 20:09:04 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-26 20:09:04 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-26 20:09:04 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-26 20:09:04 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-26 20:09:04 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-26 20:09:04 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-26 20:09:04 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-26 20:09:04 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 20:09:04 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-26 20:09:04 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-26 20:09:04 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 20:09:04 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-26 20:09:04 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-03-26 20:09:04 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-03-26 20:09:04 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-26 20:09:04 -Mapped "{[/moneyList/moneyList/LikeName],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.LikeName(org.springframework.ui.Model)
2019-03-26 20:09:04 -Mapped "{[/moneyList/moneyList/UserList],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-26 20:09:04 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-26 20:09:04 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-26 20:09:04 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-26 20:09:04 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-26 20:09:04 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-26 20:09:04 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 20:09:04 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-26 20:09:04 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-26 20:09:04 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-26 20:09:04 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 20:09:04 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-26 20:09:04 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-26 20:09:04 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-26 20:09:04 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-26 20:09:04 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 20:09:04 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-26 20:09:04 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-26 20:09:04 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-26 20:09:04 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 20:09:04 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-26 20:09:04 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-26 20:09:04 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-26 20:09:04 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-26 20:09:04 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 20:09:04 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-26 20:09:04 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-26 20:09:04 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-26 20:09:04 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 20:09:04 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-26 20:09:04 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-26 20:09:04 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-26 20:09:04 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-26 20:09:04 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-26 20:09:04 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 20:09:04 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-26 20:09:04 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-26 20:09:04 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-26 20:09:04 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 20:09:04 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-26 20:09:04 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 20:09:04 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-26 20:09:04 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-26 20:09:04 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-26 20:09:04 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-26 20:09:04 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 20:09:04 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-26 20:09:04 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 20:09:04 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-26 20:09:04 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-26 20:09:04 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 20:09:04 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-26 20:09:04 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-26 20:09:04 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-26 20:09:04 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-26 20:09:04 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-26 20:09:04 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-26 20:09:04 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-26 20:09:04 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-26 20:09:04 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-26 20:09:04 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 20:09:04 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-26 20:09:04 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-26 20:09:04 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-26 20:09:04 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-26 20:09:04 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-26 20:09:04 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-26 20:09:04 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-26 20:09:04 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-26 20:09:04 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-26 20:09:04 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-26 20:09:04 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 20:09:04 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-26 20:09:04 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-26 20:09:04 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-26 20:09:04 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-26 20:09:04 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-26 20:09:04 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-26 20:09:04 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-26 20:09:04 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-26 20:09:04 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-26 20:09:04 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-26 20:09:04 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-26 20:09:04 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-26 20:09:04 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 20:09:04 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-26 20:09:04 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-26 20:09:04 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-26 20:09:04 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-26 20:09:04 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 20:09:04 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-26 20:09:04 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-26 20:09:04 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-26 20:09:04 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 20:09:04 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-26 20:09:04 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-26 20:09:04 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-26 20:09:04 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-26 20:09:04 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-26 20:09:04 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-26 20:09:04 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-26 20:09:04 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-26 20:09:04 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-26 20:09:04 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-26 20:09:04 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-26 20:09:04 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-26 20:09:04 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-26 20:09:04 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-26 20:09:04 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-26 20:09:04 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-26 20:09:04 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-26 20:09:04 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 20:09:04 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-26 20:09:04 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-26 20:09:04 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 20:09:04 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 20:09:04 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-26 20:09:04 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-26 20:09:04 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-26 20:09:04 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-26 20:09:04 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-26 20:09:04 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-26 20:09:04 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-26 20:09:04 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 20:09:04 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-26 20:09:04 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-26 20:09:04 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 20:09:04 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-26 20:09:04 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-03-26 20:09:04 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-03-26 20:09:04 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-26 20:09:04 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-26 20:09:04 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-26 20:09:04 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-26 20:09:04 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-26 20:09:05 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-26 20:09:05 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-26 20:09:05 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-26 20:09:06 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-26 20:09:06 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4a3329b9: startup date [Tue Mar 26 20:08:27 CST 2019]; root of context hierarchy
2019-03-26 20:09:07 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-26 20:09:07 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-26 20:09:07 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-26 20:09:07 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-26 20:09:07 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-26 20:09:10 -Registering beans for JMX exposure on startup
2019-03-26 20:09:10 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-26 20:09:10 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-26 20:09:10 -Starting beans in phase 2147483647
2019-03-26 20:09:10 -Context refreshed
2019-03-26 20:09:10 -Found 1 custom documentation plugin(s)
2019-03-26 20:09:10 -Scanning for api listing references
2019-03-26 20:09:11 -Generating unique operation named: removeUsingPOST_1
2019-03-26 20:09:11 -Generating unique operation named: addUsingGET_1
2019-03-26 20:09:12 -Generating unique operation named: editUsingGET_1
2019-03-26 20:09:12 -Generating unique operation named: listUsingGET_1
2019-03-26 20:09:12 -Generating unique operation named: removeUsingPOST_2
2019-03-26 20:09:12 -Generating unique operation named: removeUsingPOST_3
2019-03-26 20:09:12 -Generating unique operation named: saveUsingPOST_1
2019-03-26 20:09:12 -Generating unique operation named: updateUsingGET_1
2019-03-26 20:09:12 -Generating unique operation named: updateUsingHEAD_1
2019-03-26 20:09:12 -Generating unique operation named: updateUsingPOST_1
2019-03-26 20:09:12 -Generating unique operation named: updateUsingPUT_1
2019-03-26 20:09:12 -Generating unique operation named: updateUsingPATCH_1
2019-03-26 20:09:12 -Generating unique operation named: updateUsingDELETE_1
2019-03-26 20:09:12 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-26 20:09:12 -Generating unique operation named: updateUsingTRACE_1
2019-03-26 20:09:12 -Generating unique operation named: addUsingGET_2
2019-03-26 20:09:12 -Generating unique operation named: editUsingGET_2
2019-03-26 20:09:12 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-26 20:09:12 -Generating unique operation named: listUsingGET_2
2019-03-26 20:09:12 -Generating unique operation named: removeUsingPOST_4
2019-03-26 20:09:12 -Generating unique operation named: removeUsingPOST_5
2019-03-26 20:09:12 -Generating unique operation named: saveUsingPOST_2
2019-03-26 20:09:12 -Generating unique operation named: updateUsingPOST_2
2019-03-26 20:09:12 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-26 20:09:12 -Generating unique operation named: addUsingGET_3
2019-03-26 20:09:12 -Generating unique operation named: editUsingGET_3
2019-03-26 20:09:12 -Generating unique operation named: listUsingGET_3
2019-03-26 20:09:12 -Generating unique operation named: removeUsingPOST_6
2019-03-26 20:09:12 -Generating unique operation named: removeUsingPOST_7
2019-03-26 20:09:12 -Generating unique operation named: saveUsingPOST_3
2019-03-26 20:09:12 -Generating unique operation named: updateUsingGET_2
2019-03-26 20:09:12 -Generating unique operation named: updateUsingHEAD_2
2019-03-26 20:09:12 -Generating unique operation named: updateUsingPOST_3
2019-03-26 20:09:12 -Generating unique operation named: updateUsingPUT_2
2019-03-26 20:09:12 -Generating unique operation named: updateUsingPATCH_2
2019-03-26 20:09:12 -Generating unique operation named: updateUsingDELETE_2
2019-03-26 20:09:12 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-26 20:09:12 -Generating unique operation named: updateUsingTRACE_2
2019-03-26 20:09:12 -Generating unique operation named: addUsingGET_4
2019-03-26 20:09:12 -Generating unique operation named: editUsingGET_4
2019-03-26 20:09:12 -Generating unique operation named: listUsingGET_4
2019-03-26 20:09:12 -Generating unique operation named: removeUsingPOST_8
2019-03-26 20:09:12 -Generating unique operation named: removeUsingPOST_9
2019-03-26 20:09:12 -Generating unique operation named: saveUsingPOST_4
2019-03-26 20:09:12 -Generating unique operation named: updateUsingGET_3
2019-03-26 20:09:12 -Generating unique operation named: updateUsingHEAD_3
2019-03-26 20:09:12 -Generating unique operation named: updateUsingPOST_4
2019-03-26 20:09:12 -Generating unique operation named: updateUsingPUT_3
2019-03-26 20:09:12 -Generating unique operation named: updateUsingPATCH_3
2019-03-26 20:09:12 -Generating unique operation named: updateUsingDELETE_3
2019-03-26 20:09:12 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-26 20:09:12 -Generating unique operation named: updateUsingTRACE_3
2019-03-26 20:09:12 -Generating unique operation named: ElecUsingGET_1
2019-03-26 20:09:12 -Generating unique operation named: addUsingGET_5
2019-03-26 20:09:13 -Generating unique operation named: editUsingGET_5
2019-03-26 20:09:13 -Generating unique operation named: listUsingGET_5
2019-03-26 20:09:13 -Generating unique operation named: removeUsingPOST_10
2019-03-26 20:09:13 -Generating unique operation named: removeUsingPOST_11
2019-03-26 20:09:13 -Generating unique operation named: saveUsingPOST_5
2019-03-26 20:09:13 -Generating unique operation named: updateUsingGET_4
2019-03-26 20:09:13 -Generating unique operation named: updateUsingHEAD_4
2019-03-26 20:09:13 -Generating unique operation named: updateUsingPOST_5
2019-03-26 20:09:13 -Generating unique operation named: updateUsingPUT_4
2019-03-26 20:09:13 -Generating unique operation named: updateUsingPATCH_4
2019-03-26 20:09:13 -Generating unique operation named: updateUsingDELETE_4
2019-03-26 20:09:13 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-26 20:09:13 -Generating unique operation named: updateUsingTRACE_4
2019-03-26 20:09:13 -Generating unique operation named: editUsingGET_6
2019-03-26 20:09:13 -Generating unique operation named: listUsingGET_6
2019-03-26 20:09:13 -Generating unique operation named: updateUsingPOST_6
2019-03-26 20:09:13 -Generating unique operation named: addUsingGET_6
2019-03-26 20:09:13 -Generating unique operation named: editUsingGET_7
2019-03-26 20:09:13 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-26 20:09:13 -Generating unique operation named: listUsingGET_7
2019-03-26 20:09:13 -Generating unique operation named: removeUsingPOST_12
2019-03-26 20:09:13 -Generating unique operation named: removeUsingPOST_13
2019-03-26 20:09:13 -Generating unique operation named: saveUsingPOST_6
2019-03-26 20:09:13 -Generating unique operation named: updateUsingGET_5
2019-03-26 20:09:13 -Generating unique operation named: updateUsingHEAD_5
2019-03-26 20:09:13 -Generating unique operation named: updateUsingPOST_7
2019-03-26 20:09:13 -Generating unique operation named: updateUsingPUT_5
2019-03-26 20:09:13 -Generating unique operation named: updateUsingPATCH_5
2019-03-26 20:09:13 -Generating unique operation named: updateUsingDELETE_5
2019-03-26 20:09:13 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-26 20:09:13 -Generating unique operation named: updateUsingTRACE_5
2019-03-26 20:09:14 -Generating unique operation named: exprotExcelUsingGET_4
2019-03-26 20:09:14 -Generating unique operation named: addUsingGET_7
2019-03-26 20:09:14 -Generating unique operation named: editUsingGET_8
2019-03-26 20:09:14 -Generating unique operation named: listUsingGET_8
2019-03-26 20:09:14 -Generating unique operation named: removeUsingPOST_14
2019-03-26 20:09:14 -Generating unique operation named: removeUsingPOST_15
2019-03-26 20:09:14 -Generating unique operation named: saveUsingPOST_7
2019-03-26 20:09:14 -Generating unique operation named: updateUsingGET_6
2019-03-26 20:09:14 -Generating unique operation named: updateUsingHEAD_6
2019-03-26 20:09:14 -Generating unique operation named: updateUsingPOST_8
2019-03-26 20:09:14 -Generating unique operation named: updateUsingPUT_6
2019-03-26 20:09:14 -Generating unique operation named: updateUsingPATCH_6
2019-03-26 20:09:14 -Generating unique operation named: updateUsingDELETE_6
2019-03-26 20:09:14 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-26 20:09:14 -Generating unique operation named: updateUsingTRACE_6
2019-03-26 20:09:14 -Generating unique operation named: addUsingGET_8
2019-03-26 20:09:14 -Generating unique operation named: editUsingGET_9
2019-03-26 20:09:14 -Generating unique operation named: listUsingGET_9
2019-03-26 20:09:14 -Generating unique operation named: removeUsingPOST_16
2019-03-26 20:09:14 -Generating unique operation named: removeUsingPOST_17
2019-03-26 20:09:14 -Generating unique operation named: saveUsingPOST_8
2019-03-26 20:09:14 -Generating unique operation named: updateUsingGET_7
2019-03-26 20:09:14 -Generating unique operation named: updateUsingHEAD_7
2019-03-26 20:09:14 -Generating unique operation named: updateUsingPOST_9
2019-03-26 20:09:14 -Generating unique operation named: updateUsingPUT_7
2019-03-26 20:09:14 -Generating unique operation named: updateUsingPATCH_7
2019-03-26 20:09:14 -Generating unique operation named: updateUsingDELETE_7
2019-03-26 20:09:14 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-26 20:09:14 -Generating unique operation named: updateUsingTRACE_7
2019-03-26 20:09:14 -Generating unique operation named: addUsingGET_9
2019-03-26 20:09:14 -Generating unique operation named: editUsingGET_10
2019-03-26 20:09:14 -Generating unique operation named: infoUsingGET_1
2019-03-26 20:09:14 -Generating unique operation named: infoUsingHEAD_1
2019-03-26 20:09:14 -Generating unique operation named: infoUsingPOST_1
2019-03-26 20:09:14 -Generating unique operation named: infoUsingPUT_1
2019-03-26 20:09:14 -Generating unique operation named: infoUsingPATCH_1
2019-03-26 20:09:14 -Generating unique operation named: infoUsingDELETE_1
2019-03-26 20:09:14 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-26 20:09:14 -Generating unique operation named: infoUsingTRACE_1
2019-03-26 20:09:14 -Generating unique operation named: listUsingGET_10
2019-03-26 20:09:14 -Generating unique operation named: removeUsingPOST_18
2019-03-26 20:09:14 -Generating unique operation named: removeUsingPOST_19
2019-03-26 20:09:14 -Generating unique operation named: saveUsingPOST_9
2019-03-26 20:09:14 -Generating unique operation named: updateUsingPOST_10
2019-03-26 20:09:14 -Generating unique operation named: listUsingGET_11
2019-03-26 20:09:14 -Generating unique operation named: removeUsingPOST_20
2019-03-26 20:09:14 -Generating unique operation named: welcomeUsingGET_1
2019-03-26 20:09:14 -Generating unique operation named: addUsingGET_10
2019-03-26 20:09:14 -Generating unique operation named: editUsingGET_11
2019-03-26 20:09:14 -Generating unique operation named: listUsingGET_12
2019-03-26 20:09:14 -Generating unique operation named: removeUsingPOST_21
2019-03-26 20:09:14 -Generating unique operation named: saveUsingPOST_10
2019-03-26 20:09:15 -Generating unique operation named: treeUsingGET_1
2019-03-26 20:09:15 -Generating unique operation named: treeUsingGET_2
2019-03-26 20:09:15 -Generating unique operation named: updateUsingPOST_11
2019-03-26 20:09:15 -Generating unique operation named: addUsingGET_11
2019-03-26 20:09:15 -Generating unique operation named: editUsingGET_12
2019-03-26 20:09:15 -Generating unique operation named: listUsingGET_13
2019-03-26 20:09:15 -Generating unique operation named: removeUsingPOST_22
2019-03-26 20:09:15 -Generating unique operation named: removeUsingPOST_23
2019-03-26 20:09:15 -Generating unique operation named: saveUsingPOST_11
2019-03-26 20:09:15 -Generating unique operation named: updateUsingGET_8
2019-03-26 20:09:15 -Generating unique operation named: updateUsingHEAD_8
2019-03-26 20:09:15 -Generating unique operation named: updateUsingPOST_12
2019-03-26 20:09:15 -Generating unique operation named: updateUsingPUT_8
2019-03-26 20:09:15 -Generating unique operation named: updateUsingPATCH_8
2019-03-26 20:09:15 -Generating unique operation named: updateUsingDELETE_8
2019-03-26 20:09:15 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-26 20:09:15 -Generating unique operation named: updateUsingTRACE_8
2019-03-26 20:09:15 -Generating unique operation named: addUsingGET_12
2019-03-26 20:09:15 -Generating unique operation named: editUsingGET_13
2019-03-26 20:09:15 -Generating unique operation named: listUsingGET_14
2019-03-26 20:09:15 -Generating unique operation named: removeUsingPOST_24
2019-03-26 20:09:15 -Generating unique operation named: removeUsingPOST_25
2019-03-26 20:09:15 -Generating unique operation named: saveUsingPOST_12
2019-03-26 20:09:15 -Generating unique operation named: updateUsingGET_9
2019-03-26 20:09:15 -Generating unique operation named: updateUsingHEAD_9
2019-03-26 20:09:15 -Generating unique operation named: updateUsingPOST_13
2019-03-26 20:09:15 -Generating unique operation named: updateUsingPUT_9
2019-03-26 20:09:15 -Generating unique operation named: updateUsingPATCH_9
2019-03-26 20:09:15 -Generating unique operation named: updateUsingDELETE_9
2019-03-26 20:09:15 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-26 20:09:15 -Generating unique operation named: updateUsingTRACE_9
2019-03-26 20:09:15 -Generating unique operation named: addUsingGET_13
2019-03-26 20:09:15 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-26 20:09:15 -Generating unique operation named: editUsingGET_14
2019-03-26 20:09:15 -Generating unique operation named: listUsingGET_15
2019-03-26 20:09:15 -Generating unique operation named: saveUsingPOST_13
2019-03-26 20:09:15 -Generating unique operation named: saveUsingPOST_14
2019-03-26 20:09:15 -Generating unique operation named: updateUsingPOST_14
2019-03-26 20:09:15 -Generating unique operation named: listUsingGET_16
2019-03-26 20:09:15 -Generating unique operation named: listUsingHEAD_1
2019-03-26 20:09:15 -Generating unique operation named: listUsingPOST_1
2019-03-26 20:09:15 -Generating unique operation named: listUsingPUT_1
2019-03-26 20:09:15 -Generating unique operation named: listUsingPATCH_1
2019-03-26 20:09:15 -Generating unique operation named: listUsingDELETE_1
2019-03-26 20:09:15 -Generating unique operation named: listUsingOPTIONS_1
2019-03-26 20:09:15 -Generating unique operation named: listUsingTRACE_1
2019-03-26 20:09:15 -Generating unique operation named: addUsingGET_14
2019-03-26 20:09:15 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-26 20:09:15 -Generating unique operation named: editUsingGET_15
2019-03-26 20:09:15 -Generating unique operation named: listUsingGET_17
2019-03-26 20:09:15 -Generating unique operation named: removeUsingPOST_26
2019-03-26 20:09:15 -Generating unique operation named: saveUsingPOST_15
2019-03-26 20:09:15 -Generating unique operation named: treeUsingGET_3
2019-03-26 20:09:15 -Generating unique operation named: treeViewUsingGET_1
2019-03-26 20:09:15 -Generating unique operation named: updateUsingPOST_15
2019-03-26 20:09:16 -Generating unique operation named: addUsingGET_15
2019-03-26 20:09:16 -Generating unique operation named: editUsingGET_16
2019-03-26 20:09:16 -Generating unique operation named: exprotExcelUsingGET_5
2019-03-26 20:09:16 -Generating unique operation named: listUsingGET_18
2019-03-26 20:09:16 -Generating unique operation named: removeUsingPOST_27
2019-03-26 20:09:16 -Generating unique operation named: removeUsingPOST_28
2019-03-26 20:09:16 -Generating unique operation named: saveUsingPOST_16
2019-03-26 20:09:16 -Generating unique operation named: updateUsingGET_10
2019-03-26 20:09:16 -Generating unique operation named: updateUsingHEAD_10
2019-03-26 20:09:16 -Generating unique operation named: updateUsingPOST_16
2019-03-26 20:09:16 -Generating unique operation named: updateUsingPUT_10
2019-03-26 20:09:16 -Generating unique operation named: updateUsingPATCH_10
2019-03-26 20:09:16 -Generating unique operation named: updateUsingDELETE_10
2019-03-26 20:09:16 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-26 20:09:16 -Generating unique operation named: updateUsingTRACE_10
2019-03-26 20:09:16 -Generating unique operation named: exprotExcelUsingGET_6
2019-03-26 20:09:16 -Generating unique operation named: addUsingGET_16
2019-03-26 20:09:16 -Generating unique operation named: editUsingGET_17
2019-03-26 20:09:16 -Generating unique operation named: listUsingGET_19
2019-03-26 20:09:16 -Generating unique operation named: removeUsingPOST_29
2019-03-26 20:09:16 -Generating unique operation named: removeUsingPOST_30
2019-03-26 20:09:16 -Generating unique operation named: saveUsingPOST_17
2019-03-26 20:09:16 -Generating unique operation named: updateUsingGET_11
2019-03-26 20:09:16 -Generating unique operation named: updateUsingHEAD_11
2019-03-26 20:09:16 -Generating unique operation named: updateUsingPOST_17
2019-03-26 20:09:16 -Generating unique operation named: updateUsingPUT_11
2019-03-26 20:09:16 -Generating unique operation named: updateUsingPATCH_11
2019-03-26 20:09:16 -Generating unique operation named: updateUsingDELETE_11
2019-03-26 20:09:16 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-26 20:09:16 -Generating unique operation named: updateUsingTRACE_11
2019-03-26 20:09:16 -Generating unique operation named: addUsingGET_17
2019-03-26 20:09:16 -Generating unique operation named: editUsingGET_18
2019-03-26 20:09:16 -Generating unique operation named: listUsingGET_20
2019-03-26 20:09:16 -Generating unique operation named: removeUsingPOST_31
2019-03-26 20:09:16 -Generating unique operation named: removeUsingPOST_32
2019-03-26 20:09:16 -Generating unique operation named: saveUsingPOST_18
2019-03-26 20:09:16 -Generating unique operation named: updateUsingGET_12
2019-03-26 20:09:16 -Generating unique operation named: updateUsingHEAD_12
2019-03-26 20:09:16 -Generating unique operation named: updateUsingPOST_18
2019-03-26 20:09:16 -Generating unique operation named: updateUsingPUT_12
2019-03-26 20:09:16 -Generating unique operation named: updateUsingPATCH_12
2019-03-26 20:09:16 -Generating unique operation named: updateUsingDELETE_12
2019-03-26 20:09:16 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-26 20:09:16 -Generating unique operation named: updateUsingTRACE_12
2019-03-26 20:09:16 -Starting Quartz Scheduler now
2019-03-26 20:09:16 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-26 20:09:16 -Starting...
2019-03-26 20:09:16 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-26 20:09:16 -Started.
2019-03-26 20:09:16 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-26 20:09:16 -Using a shared selector for servlet write/read
2019-03-26 20:09:16 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-26 20:09:16 -Started BootdoApplication in 54.081 seconds (JVM running for 56.151)
2019-03-26 20:09:16 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-26 20:09:17 -==> Parameters: 
2019-03-26 20:09:17 -<==      Total: 1
2019-03-26 20:10:05 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-03-26 20:10:43 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-26 20:10:43 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-26 20:10:43 -FrameworkServlet 'dispatcherServlet': initialization completed in 75 ms
2019-03-26 20:10:44 -Enabling session validation scheduler...
2019-03-26 20:10:45 -请求地址 : http://localhost:8081/login;JSESSIONID=764a3998-e320-4f9e-8803-5287d283afb9
2019-03-26 20:10:45 -HTTP METHOD : GET
2019-03-26 20:10:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-26 20:10:45 -参数 : [{}]
2019-03-26 20:10:45 -耗时 : 3
2019-03-26 20:10:45 -返回值 : login
2019-03-26 20:10:48 -请求地址 : http://localhost:8081/getVerify
2019-03-26 20:10:48 -HTTP METHOD : GET
2019-03-26 20:10:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-26 20:10:48 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@3f533d56, org.apache.shiro.web.servlet.ShiroHttpServletResponse@aa7bf53]
2019-03-26 20:10:55 -5374
2019-03-26 20:10:56 -耗时 : 7233
2019-03-26 20:10:56 -返回值 : null
2019-03-26 20:11:04 -请求地址 : http://localhost:8081/login
2019-03-26 20:11:04 -HTTP METHOD : POST
2019-03-26 20:11:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-26 20:11:04 -参数 : [admin, 111111, 5374, org.apache.shiro.web.servlet.ShiroHttpServletRequest@6d615f4a]
2019-03-26 20:11:04 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-26 20:11:04 -==> Parameters: admin(String)
2019-03-26 20:11:04 -<==      Total: 1
2019-03-26 20:11:04 -耗时 : 258
2019-03-26 20:11:04 -返回值 : {msg=操作成功, code=0}
2019-03-26 20:11:05 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-03-26 20:11:05 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-26 20:11:05 -==> Parameters: 1(Long), admin(String), 登录(String), 259(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-26 20:11:05.054(Timestamp)
2019-03-26 20:11:05 -<==    Updates: 1
2019-03-26 20:11:05 -请求地址 : http://localhost:8081/index
2019-03-26 20:11:05 -HTTP METHOD : GET
2019-03-26 20:11:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-26 20:11:05 -参数 : [{}]
2019-03-26 20:11:05 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-26 20:11:05 -==> Parameters: 1(Long)
2019-03-26 20:11:05 -<==      Total: 46
2019-03-26 20:11:05 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-26 20:11:05 -==> Parameters: 138(Long)
2019-03-26 20:11:05 -<==      Total: 1
2019-03-26 20:11:05 -耗时 : 351
2019-03-26 20:11:05 -返回值 : index_v1
2019-03-26 20:11:05 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-26 20:11:05 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 351(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-26 20:11:05.848(Timestamp)
2019-03-26 20:11:06 -<==    Updates: 1
2019-03-26 20:11:06 -请求地址 : http://localhost:8081/main
2019-03-26 20:11:06 -HTTP METHOD : GET
2019-03-26 20:11:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-26 20:11:06 -参数 : []
2019-03-26 20:11:06 -耗时 : 0
2019-03-26 20:11:06 -返回值 : main
2019-03-26 20:11:08 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-26 20:11:08 -HTTP METHOD : GET
2019-03-26 20:11:08 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-26 20:11:08 -参数 : []
2019-03-26 20:11:08 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-26 20:11:08 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-26 20:11:08 -<==      Total: 0
2019-03-26 20:11:08 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-26 20:11:08 -==> Parameters: 1(Long), 0(String)
2019-03-26 20:11:08 -<==      Total: 1
2019-03-26 20:11:08 -耗时 : 52
2019-03-26 20:11:08 -返回值 : com.bootdo.common.utils.PageUtils@2a9a3626
2019-03-26 20:11:08 -请求地址 : http://localhost:8081/main
2019-03-26 20:11:08 -HTTP METHOD : GET
2019-03-26 20:11:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-26 20:11:08 -参数 : []
2019-03-26 20:11:08 -耗时 : 0
2019-03-26 20:11:08 -返回值 : main
2019-03-26 20:12:19 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-26 20:12:19 -==> Parameters: 1(Long)
2019-03-26 20:12:19 -<==      Total: 90
2019-03-26 20:12:19 -请求地址 : http://localhost:8081/elec/elec
2019-03-26 20:12:19 -HTTP METHOD : GET
2019-03-26 20:12:19 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-26 20:12:19 -参数 : []
2019-03-26 20:12:19 -耗时 : 1
2019-03-26 20:12:19 -返回值 : elec/elec/elec
2019-03-26 20:12:20 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-26 20:12:20 -HTTP METHOD : GET
2019-03-26 20:12:20 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-26 20:12:20 -参数 : [userType]
2019-03-26 20:12:20 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-26 20:12:20 -==> Parameters: userType(String)
2019-03-26 20:12:20 -<==      Total: 2
2019-03-26 20:12:20 -耗时 : 30
2019-03-26 20:12:20 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-26 20:12:20 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-26 20:12:20 -HTTP METHOD : GET
2019-03-26 20:12:20 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-26 20:12:20 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@93b74e6]
2019-03-26 20:12:20 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-26 20:12:20 -==> Parameters: 0(Integer), 10(Integer)
2019-03-26 20:12:20 -<==      Total: 10
2019-03-26 20:12:20 -==>  Preparing: select count(*) from elec 
2019-03-26 20:12:20 -==> Parameters: 
2019-03-26 20:12:20 -<==      Total: 1
2019-03-26 20:12:20 -耗时 : 187
2019-03-26 20:12:20 -返回值 : com.bootdo.common.utils.PageUtils@17b4c652
2019-03-26 20:13:33 -请求地址 : http://localhost:8081/elec/elec/edit/1
2019-03-26 20:13:33 -HTTP METHOD : GET
2019-03-26 20:13:33 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.edit
2019-03-26 20:13:33 -参数 : [1, {}]
2019-03-26 20:13:33 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec where id = ? 
2019-03-26 20:13:33 -==> Parameters: 1(Long)
2019-03-26 20:13:33 -<==      Total: 1
2019-03-26 20:13:33 -耗时 : 15
2019-03-26 20:13:33 -返回值 : elec/elec/edit
2019-03-26 20:13:33 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-26 20:13:33 -HTTP METHOD : GET
2019-03-26 20:13:33 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-26 20:13:33 -参数 : [userType]
2019-03-26 20:13:33 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-03-26 20:13:33 -HTTP METHOD : GET
2019-03-26 20:13:33 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-26 20:13:33 -参数 : [userState]
2019-03-26 20:13:33 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-03-26 20:13:33 -HTTP METHOD : GET
2019-03-26 20:13:33 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-26 20:13:33 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-26 20:13:33 -参数 : [elecType]
2019-03-26 20:13:33 -==> Parameters: userType(String)
2019-03-26 20:13:33 -<==      Total: 2
2019-03-26 20:13:33 -耗时 : 6
2019-03-26 20:13:33 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-26 20:13:33 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-26 20:13:33 -==> Parameters: userState(String)
2019-03-26 20:13:33 -<==      Total: 2
2019-03-26 20:13:33 -耗时 : 13
2019-03-26 20:13:33 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-26 20:13:33 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-26 20:13:33 -==> Parameters: elecType(String)
2019-03-26 20:13:33 -<==      Total: 2
2019-03-26 20:13:33 -耗时 : 26
2019-03-26 20:13:33 -返回值 : [DictDO{id=139, name='民用电', value='1', type='elecType', description='电量性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='商业电', value='0', type='elecType', description='电量类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-26 20:14:32 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-26 20:14:32 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/elec/elec/update(String), org.springframework.validation.BindException: org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'elecDO' on field 'hu': rejected value [2019-02,1]; codes [typeMismatch.elecDO.hu,typeMismatch.hu,typeMismatch.java.lang.Integer,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [elecDO.hu,hu]; arguments []; default message [hu]]; default message [Failed to convert property value of type 'java.lang.String[]' to required type 'java.lang.Integer' for property 'hu'; nested exception is java.lang.NumberFormatException: For input string: "2019-02,1"](String), null, 2019-03-26 20:14:32.773(Timestamp)
2019-03-26 20:14:32 -org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'elecDO' on field 'hu': rejected value [2019-02,1]; codes [typeMismatch.elecDO.hu,typeMismatch.hu,typeMismatch.java.lang.Integer,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [elecDO.hu,hu]; arguments []; default message [hu]]; default message [Failed to convert property value of type 'java.lang.String[]' to required type 'java.lang.Integer' for property 'hu'; nested exception is java.lang.NumberFormatException: For input string: "2019-02,1"]
org.springframework.validation.BindException: org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'elecDO' on field 'hu': rejected value [2019-02,1]; codes [typeMismatch.elecDO.hu,typeMismatch.hu,typeMismatch.java.lang.Integer,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [elecDO.hu,hu]; arguments []; default message [hu]]; default message [Failed to convert property value of type 'java.lang.String[]' to required type 'java.lang.Integer' for property 'hu'; nested exception is java.lang.NumberFormatException: For input string: "2019-02,1"]
	at org.springframework.web.method.annotation.ModelAttributeMethodProcessor.resolveArgument(ModelAttributeMethodProcessor.java:157)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:124)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:161)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:131)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-26 20:14:32 -<==    Updates: 1
2019-03-26 20:14:36 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-26 20:14:36 -org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'elecDO' on field 'hu': rejected value [2019-02,1]; codes [typeMismatch.elecDO.hu,typeMismatch.hu,typeMismatch.java.lang.Integer,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [elecDO.hu,hu]; arguments []; default message [hu]]; default message [Failed to convert property value of type 'java.lang.String[]' to required type 'java.lang.Integer' for property 'hu'; nested exception is java.lang.NumberFormatException: For input string: "2019-02,1"]
org.springframework.validation.BindException: org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'elecDO' on field 'hu': rejected value [2019-02,1]; codes [typeMismatch.elecDO.hu,typeMismatch.hu,typeMismatch.java.lang.Integer,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [elecDO.hu,hu]; arguments []; default message [hu]]; default message [Failed to convert property value of type 'java.lang.String[]' to required type 'java.lang.Integer' for property 'hu'; nested exception is java.lang.NumberFormatException: For input string: "2019-02,1"]
	at org.springframework.web.method.annotation.ModelAttributeMethodProcessor.resolveArgument(ModelAttributeMethodProcessor.java:157)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:124)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:161)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:131)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-26 20:14:36 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/elec/elec/update(String), org.springframework.validation.BindException: org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'elecDO' on field 'hu': rejected value [2019-02,1]; codes [typeMismatch.elecDO.hu,typeMismatch.hu,typeMismatch.java.lang.Integer,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [elecDO.hu,hu]; arguments []; default message [hu]]; default message [Failed to convert property value of type 'java.lang.String[]' to required type 'java.lang.Integer' for property 'hu'; nested exception is java.lang.NumberFormatException: For input string: "2019-02,1"](String), null, 2019-03-26 20:14:36.385(Timestamp)
2019-03-26 20:14:36 -<==    Updates: 1
2019-03-26 20:40:05 -WebSocketSession[1 current WS(0)-HttpStream(1)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 12], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 2], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 418]
2019-03-26 20:55:59 -请求地址 : http://localhost:8081/login;JSESSIONID=875e53d8-7438-4465-98ff-484f286e2087
2019-03-26 20:55:59 -HTTP METHOD : GET
2019-03-26 20:55:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-26 20:55:59 -参数 : [{}]
2019-03-26 20:55:59 -耗时 : 2
2019-03-26 20:55:59 -返回值 : login
2019-03-26 20:56:00 -请求地址 : http://localhost:8081/getVerify
2019-03-26 20:56:00 -HTTP METHOD : GET
2019-03-26 20:56:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-26 20:56:00 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@545006ca, org.apache.shiro.web.servlet.ShiroHttpServletResponse@4a65ec31]
2019-03-26 20:56:00 -5057
2019-03-26 20:56:00 -耗时 : 24
2019-03-26 20:56:00 -返回值 : null
2019-03-26 20:56:00 -请求地址 : http://localhost:8081/login
2019-03-26 20:56:00 -HTTP METHOD : GET
2019-03-26 20:56:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-26 20:56:00 -参数 : [{}]
2019-03-26 20:56:00 -耗时 : 0
2019-03-26 20:56:00 -返回值 : login
2019-03-26 20:56:09 -请求地址 : http://localhost:8081/login
2019-03-26 20:56:09 -HTTP METHOD : POST
2019-03-26 20:56:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-26 20:56:09 -参数 : [admin, 111111, 5057, org.apache.shiro.web.servlet.ShiroHttpServletRequest@703c5608]
2019-03-26 20:56:09 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-26 20:56:09 -==> Parameters: admin(String)
2019-03-26 20:56:09 -<==      Total: 1
2019-03-26 20:56:09 -耗时 : 120
2019-03-26 20:56:09 -返回值 : {msg=操作成功, code=0}
2019-03-26 20:56:09 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-26 20:56:09 -==> Parameters: 1(Long), admin(String), 登录(String), 121(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-26 20:56:09.879(Timestamp)
2019-03-26 20:56:09 -请求地址 : http://localhost:8081/index
2019-03-26 20:56:09 -HTTP METHOD : GET
2019-03-26 20:56:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-26 20:56:09 -参数 : [{}]
2019-03-26 20:56:09 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-26 20:56:09 -==> Parameters: 1(Long)
2019-03-26 20:56:09 -<==      Total: 46
2019-03-26 20:56:09 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-26 20:56:09 -==> Parameters: 138(Long)
2019-03-26 20:56:09 -<==      Total: 1
2019-03-26 20:56:09 -耗时 : 45
2019-03-26 20:56:09 -返回值 : index_v1
2019-03-26 20:56:09 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-26 20:56:09 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 45(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-26 20:56:09.952(Timestamp)
2019-03-26 20:56:10 -<==    Updates: 1
2019-03-26 20:56:10 -请求地址 : http://localhost:8081/main
2019-03-26 20:56:10 -HTTP METHOD : GET
2019-03-26 20:56:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-26 20:56:10 -参数 : []
2019-03-26 20:56:10 -耗时 : 1
2019-03-26 20:56:10 -返回值 : main
2019-03-26 20:56:10 -<==    Updates: 1
2019-03-26 20:56:10 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-26 20:56:10 -HTTP METHOD : GET
2019-03-26 20:56:10 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-26 20:56:10 -参数 : []
2019-03-26 20:56:10 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-26 20:56:10 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-26 20:56:10 -<==      Total: 0
2019-03-26 20:56:10 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-26 20:56:10 -==> Parameters: 1(Long), 0(String)
2019-03-26 20:56:10 -<==      Total: 1
2019-03-26 20:56:10 -耗时 : 13
2019-03-26 20:56:10 -返回值 : com.bootdo.common.utils.PageUtils@4e48e98c
2019-03-26 20:56:10 -请求地址 : http://localhost:8081/main
2019-03-26 20:56:10 -HTTP METHOD : GET
2019-03-26 20:56:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-26 20:56:10 -参数 : []
2019-03-26 20:56:10 -耗时 : 0
2019-03-26 20:56:10 -返回值 : main
2019-03-26 20:56:16 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-26 20:56:16 -==> Parameters: 1(Long)
2019-03-26 20:56:16 -<==      Total: 90
2019-03-26 20:56:16 -请求地址 : http://localhost:8081/elec/elec
2019-03-26 20:56:16 -HTTP METHOD : GET
2019-03-26 20:56:16 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-26 20:56:16 -参数 : []
2019-03-26 20:56:16 -耗时 : 0
2019-03-26 20:56:16 -返回值 : elec/elec/elec
2019-03-26 20:56:17 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-26 20:56:17 -HTTP METHOD : GET
2019-03-26 20:56:17 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-26 20:56:17 -参数 : [userType]
2019-03-26 20:56:17 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-26 20:56:17 -==> Parameters: userType(String)
2019-03-26 20:56:17 -<==      Total: 2
2019-03-26 20:56:17 -耗时 : 6
2019-03-26 20:56:17 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-26 20:56:17 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-26 20:56:17 -HTTP METHOD : GET
2019-03-26 20:56:17 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-26 20:56:17 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@61577e61]
2019-03-26 20:56:17 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-26 20:56:17 -==> Parameters: 0(Integer), 10(Integer)
2019-03-26 20:56:17 -<==      Total: 10
2019-03-26 20:56:17 -==>  Preparing: select count(*) from elec 
2019-03-26 20:56:17 -==> Parameters: 
2019-03-26 20:56:17 -<==      Total: 1
2019-03-26 20:56:17 -耗时 : 31
2019-03-26 20:56:17 -返回值 : com.bootdo.common.utils.PageUtils@66343f1b
2019-03-26 20:56:25 -请求地址 : http://localhost:8081/elec/elec/edit/1
2019-03-26 20:56:25 -HTTP METHOD : GET
2019-03-26 20:56:25 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.edit
2019-03-26 20:56:25 -参数 : [1, {}]
2019-03-26 20:56:25 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec where id = ? 
2019-03-26 20:56:25 -==> Parameters: 1(Long)
2019-03-26 20:56:25 -<==      Total: 1
2019-03-26 20:56:25 -耗时 : 41
2019-03-26 20:56:25 -返回值 : elec/elec/edit
2019-03-26 20:56:25 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-03-26 20:56:25 -HTTP METHOD : GET
2019-03-26 20:56:25 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-26 20:56:25 -参数 : [userState]
2019-03-26 20:56:25 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-26 20:56:25 -==> Parameters: userState(String)
2019-03-26 20:56:25 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-26 20:56:25 -HTTP METHOD : GET
2019-03-26 20:56:25 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-26 20:56:25 -参数 : [userType]
2019-03-26 20:56:25 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-03-26 20:56:25 -HTTP METHOD : GET
2019-03-26 20:56:25 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-26 20:56:25 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-26 20:56:25 -参数 : [elecType]
2019-03-26 20:56:25 -==> Parameters: userType(String)
2019-03-26 20:56:25 -<==      Total: 2
2019-03-26 20:56:25 -耗时 : 5
2019-03-26 20:56:25 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-26 20:56:25 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-26 20:56:25 -==> Parameters: elecType(String)
2019-03-26 20:56:25 -<==      Total: 2
2019-03-26 20:56:25 -耗时 : 8
2019-03-26 20:56:25 -返回值 : [DictDO{id=139, name='民用电', value='1', type='elecType', description='电量性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='商业电', value='0', type='elecType', description='电量类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-26 20:56:25 -<==      Total: 2
2019-03-26 20:56:25 -耗时 : 53
2019-03-26 20:56:25 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-26 20:56:28 -org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'elecDO' on field 'hu': rejected value [2019-02,1]; codes [typeMismatch.elecDO.hu,typeMismatch.hu,typeMismatch.java.lang.Integer,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [elecDO.hu,hu]; arguments []; default message [hu]]; default message [Failed to convert property value of type 'java.lang.String[]' to required type 'java.lang.Integer' for property 'hu'; nested exception is java.lang.NumberFormatException: For input string: "2019-02,1"]
org.springframework.validation.BindException: org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'elecDO' on field 'hu': rejected value [2019-02,1]; codes [typeMismatch.elecDO.hu,typeMismatch.hu,typeMismatch.java.lang.Integer,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [elecDO.hu,hu]; arguments []; default message [hu]]; default message [Failed to convert property value of type 'java.lang.String[]' to required type 'java.lang.Integer' for property 'hu'; nested exception is java.lang.NumberFormatException: For input string: "2019-02,1"]
	at org.springframework.web.method.annotation.ModelAttributeMethodProcessor.resolveArgument(ModelAttributeMethodProcessor.java:157)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:124)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:161)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:131)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-26 20:56:28 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-26 20:56:28 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/elec/elec/update(String), org.springframework.validation.BindException: org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'elecDO' on field 'hu': rejected value [2019-02,1]; codes [typeMismatch.elecDO.hu,typeMismatch.hu,typeMismatch.java.lang.Integer,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [elecDO.hu,hu]; arguments []; default message [hu]]; default message [Failed to convert property value of type 'java.lang.String[]' to required type 'java.lang.Integer' for property 'hu'; nested exception is java.lang.NumberFormatException: For input string: "2019-02,1"](String), null, 2019-03-26 20:56:28.343(Timestamp)
2019-03-26 20:56:28 -<==    Updates: 1
2019-03-26 20:56:30 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-26 20:56:30 -org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'elecDO' on field 'hu': rejected value [2019-02,1]; codes [typeMismatch.elecDO.hu,typeMismatch.hu,typeMismatch.java.lang.Integer,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [elecDO.hu,hu]; arguments []; default message [hu]]; default message [Failed to convert property value of type 'java.lang.String[]' to required type 'java.lang.Integer' for property 'hu'; nested exception is java.lang.NumberFormatException: For input string: "2019-02,1"]
org.springframework.validation.BindException: org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'elecDO' on field 'hu': rejected value [2019-02,1]; codes [typeMismatch.elecDO.hu,typeMismatch.hu,typeMismatch.java.lang.Integer,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [elecDO.hu,hu]; arguments []; default message [hu]]; default message [Failed to convert property value of type 'java.lang.String[]' to required type 'java.lang.Integer' for property 'hu'; nested exception is java.lang.NumberFormatException: For input string: "2019-02,1"]
	at org.springframework.web.method.annotation.ModelAttributeMethodProcessor.resolveArgument(ModelAttributeMethodProcessor.java:157)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:124)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:161)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:131)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-26 20:56:30 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/elec/elec/update(String), org.springframework.validation.BindException: org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'elecDO' on field 'hu': rejected value [2019-02,1]; codes [typeMismatch.elecDO.hu,typeMismatch.hu,typeMismatch.java.lang.Integer,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [elecDO.hu,hu]; arguments []; default message [hu]]; default message [Failed to convert property value of type 'java.lang.String[]' to required type 'java.lang.Integer' for property 'hu'; nested exception is java.lang.NumberFormatException: For input string: "2019-02,1"](String), null, 2019-03-26 20:56:30.572(Timestamp)
2019-03-26 20:56:31 -<==    Updates: 1
2019-03-26 20:56:36 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:23)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:26)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:424)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:232)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-26 20:57:42 -Starting BootdoApplication on ZJZL-20180906VX with PID 9508 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-26 20:57:42 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-26 20:57:42 -The following profiles are active: dev
2019-03-26 20:57:42 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Tue Mar 26 20:57:42 CST 2019]; root of context hierarchy
2019-03-26 20:57:47 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-26 20:57:50 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ec7c61e8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 20:57:51 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$ded5908f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 20:57:53 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 20:57:53 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 20:57:53 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 20:57:53 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-26 20:57:53 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-26 20:57:53 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 20:57:53 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 20:57:54 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 20:57:54 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 20:57:56 -Tomcat initialized with port(s): 8081 (http)
2019-03-26 20:57:56 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-26 20:57:56 -Starting service [Tomcat]
2019-03-26 20:57:56 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-26 20:57:56 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-26 20:57:57 -Initializing Spring embedded WebApplicationContext
2019-03-26 20:57:57 -Root WebApplicationContext: initialization completed in 14890 ms
2019-03-26 20:57:59 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-26 20:57:59 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-26 20:57:59 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-26 20:57:59 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-26 20:57:59 -Filter xssFilter was not registered (disabled)
2019-03-26 20:57:59 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-26 20:57:59 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-26 20:57:59 -Servlet statViewServlet mapped to [/druid/*]
2019-03-26 20:57:59 -Servlet dispatcherServlet mapped to [/]
2019-03-26 20:58:04 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Tue Mar 26 20:57:42 CST 2019]; root of context hierarchy
2019-03-26 20:58:05 -Using default implementation for ThreadExecutor
2019-03-26 20:58:05 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-26 20:58:05 -Quartz Scheduler v.2.2.1 created.
2019-03-26 20:58:05 -RAMJobStore initialized.
2019-03-26 20:58:05 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-26 20:58:05 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-26 20:58:05 -Quartz scheduler version: 2.2.1
2019-03-26 20:58:05 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@53cddaf8
2019-03-26 20:58:06 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-26 20:58:06 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-26 20:58:10 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-26 20:58:10 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-03-26 20:58:10 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-26 20:58:10 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-26 20:58:10 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-26 20:58:10 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-26 20:58:10 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-26 20:58:10 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-26 20:58:10 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-26 20:58:10 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-26 20:58:10 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-26 20:58:10 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 20:58:10 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-26 20:58:10 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-26 20:58:10 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-26 20:58:10 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-26 20:58:10 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 20:58:10 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-26 20:58:10 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-26 20:58:10 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-26 20:58:10 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-26 20:58:10 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-26 20:58:10 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 20:58:10 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-26 20:58:10 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-26 20:58:10 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-26 20:58:10 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 20:58:10 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-26 20:58:10 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 20:58:10 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-26 20:58:10 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-26 20:58:10 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-26 20:58:10 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-26 20:58:10 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-26 20:58:10 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-26 20:58:10 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-26 20:58:10 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-26 20:58:10 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-26 20:58:10 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 20:58:10 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-26 20:58:10 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-26 20:58:10 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-26 20:58:10 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 20:58:10 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-26 20:58:11 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-26 20:58:11 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-26 20:58:11 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 20:58:11 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-26 20:58:11 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-03-26 20:58:11 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-26 20:58:11 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-26 20:58:11 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-26 20:58:11 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-26 20:58:11 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-26 20:58:11 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-26 20:58:11 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-26 20:58:11 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-26 20:58:11 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-26 20:58:11 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 20:58:11 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-26 20:58:11 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-26 20:58:11 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-03-26 20:58:11 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-26 20:58:11 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-26 20:58:11 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-26 20:58:11 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-26 20:58:11 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-26 20:58:11 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-26 20:58:11 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 20:58:11 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-03-26 20:58:11 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 20:58:11 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-26 20:58:11 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-26 20:58:11 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-26 20:58:11 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-26 20:58:11 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-26 20:58:11 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-26 20:58:11 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-26 20:58:11 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 20:58:11 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-26 20:58:11 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-26 20:58:11 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-26 20:58:11 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-26 20:58:11 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-26 20:58:11 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-26 20:58:11 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-26 20:58:11 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-26 20:58:11 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-26 20:58:11 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-26 20:58:11 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 20:58:11 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-26 20:58:11 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 20:58:11 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-26 20:58:11 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-26 20:58:11 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-26 20:58:11 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-03-26 20:58:11 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-03-26 20:58:11 -Mapped "{[/moneyList/moneyList/UserList],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-26 20:58:11 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-26 20:58:11 -Mapped "{[/moneyList/moneyList/LikeName],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.LikeName(org.springframework.ui.Model)
2019-03-26 20:58:11 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-26 20:58:11 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-26 20:58:11 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-26 20:58:11 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-26 20:58:11 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 20:58:11 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-26 20:58:11 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 20:58:11 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-26 20:58:11 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-26 20:58:11 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-26 20:58:11 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-26 20:58:11 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-26 20:58:11 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-26 20:58:11 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 20:58:11 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-26 20:58:11 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 20:58:11 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-26 20:58:11 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-26 20:58:11 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-26 20:58:11 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-26 20:58:11 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-26 20:58:11 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-26 20:58:11 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 20:58:11 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-26 20:58:11 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 20:58:11 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-26 20:58:11 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-26 20:58:11 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-26 20:58:11 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-26 20:58:11 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-26 20:58:11 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-26 20:58:11 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-26 20:58:11 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 20:58:11 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-26 20:58:11 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-26 20:58:11 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 20:58:11 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-26 20:58:11 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-26 20:58:11 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 20:58:11 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-26 20:58:11 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-26 20:58:11 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-26 20:58:11 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-26 20:58:11 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 20:58:11 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-26 20:58:11 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 20:58:11 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-26 20:58:11 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-26 20:58:11 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 20:58:11 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-26 20:58:11 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-26 20:58:11 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-26 20:58:11 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-26 20:58:11 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-26 20:58:11 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-26 20:58:11 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-26 20:58:11 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 20:58:11 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-26 20:58:11 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-26 20:58:11 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-26 20:58:11 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-26 20:58:11 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-26 20:58:11 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-26 20:58:11 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-26 20:58:11 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-26 20:58:11 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-26 20:58:11 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-26 20:58:11 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-26 20:58:11 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-26 20:58:11 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 20:58:11 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-26 20:58:11 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-26 20:58:11 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-26 20:58:11 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-26 20:58:11 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-26 20:58:11 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-26 20:58:11 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-26 20:58:11 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-26 20:58:11 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-26 20:58:11 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-26 20:58:11 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-26 20:58:11 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-26 20:58:11 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 20:58:11 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-26 20:58:11 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-26 20:58:11 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-26 20:58:11 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-26 20:58:11 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 20:58:11 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-26 20:58:11 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-26 20:58:11 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-26 20:58:11 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 20:58:11 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-26 20:58:11 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-26 20:58:11 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-26 20:58:11 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-26 20:58:11 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-26 20:58:11 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-26 20:58:11 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-26 20:58:11 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-26 20:58:11 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-26 20:58:11 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-26 20:58:11 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-26 20:58:11 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-26 20:58:11 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-26 20:58:11 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-26 20:58:11 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-26 20:58:11 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-26 20:58:11 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-26 20:58:11 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 20:58:11 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-26 20:58:11 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 20:58:11 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-26 20:58:11 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 20:58:11 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-26 20:58:11 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-26 20:58:11 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-26 20:58:11 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-26 20:58:11 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-26 20:58:11 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-26 20:58:11 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-26 20:58:11 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 20:58:11 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-26 20:58:11 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-26 20:58:11 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 20:58:11 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-03-26 20:58:11 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-26 20:58:11 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-26 20:58:11 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-03-26 20:58:11 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-26 20:58:12 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-26 20:58:12 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-26 20:58:12 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-26 20:58:13 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-26 20:58:13 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-26 20:58:13 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-26 20:58:14 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-26 20:58:14 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Tue Mar 26 20:57:42 CST 2019]; root of context hierarchy
2019-03-26 20:58:14 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-26 20:58:14 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-26 20:58:14 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-26 20:58:15 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-26 20:58:15 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-26 20:58:19 -Registering beans for JMX exposure on startup
2019-03-26 20:58:19 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-26 20:58:19 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-26 20:58:19 -Starting beans in phase 2147483647
2019-03-26 20:58:19 -Context refreshed
2019-03-26 20:58:20 -Found 1 custom documentation plugin(s)
2019-03-26 20:58:20 -Scanning for api listing references
2019-03-26 20:58:21 -Generating unique operation named: removeUsingPOST_1
2019-03-26 20:58:21 -Generating unique operation named: addUsingGET_1
2019-03-26 20:58:21 -Generating unique operation named: editUsingGET_1
2019-03-26 20:58:21 -Generating unique operation named: listUsingGET_1
2019-03-26 20:58:22 -Generating unique operation named: removeUsingPOST_2
2019-03-26 20:58:22 -Generating unique operation named: removeUsingPOST_3
2019-03-26 20:58:22 -Generating unique operation named: saveUsingPOST_1
2019-03-26 20:58:22 -Generating unique operation named: updateUsingGET_1
2019-03-26 20:58:22 -Generating unique operation named: updateUsingHEAD_1
2019-03-26 20:58:22 -Generating unique operation named: updateUsingPOST_1
2019-03-26 20:58:22 -Generating unique operation named: updateUsingPUT_1
2019-03-26 20:58:22 -Generating unique operation named: updateUsingPATCH_1
2019-03-26 20:58:22 -Generating unique operation named: updateUsingDELETE_1
2019-03-26 20:58:22 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-26 20:58:22 -Generating unique operation named: updateUsingTRACE_1
2019-03-26 20:58:22 -Generating unique operation named: addUsingGET_2
2019-03-26 20:58:22 -Generating unique operation named: editUsingGET_2
2019-03-26 20:58:22 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-26 20:58:22 -Generating unique operation named: listUsingGET_2
2019-03-26 20:58:22 -Generating unique operation named: removeUsingPOST_4
2019-03-26 20:58:22 -Generating unique operation named: removeUsingPOST_5
2019-03-26 20:58:22 -Generating unique operation named: saveUsingPOST_2
2019-03-26 20:58:22 -Generating unique operation named: updateUsingPOST_2
2019-03-26 20:58:22 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-26 20:58:22 -Generating unique operation named: addUsingGET_3
2019-03-26 20:58:22 -Generating unique operation named: editUsingGET_3
2019-03-26 20:58:22 -Generating unique operation named: listUsingGET_3
2019-03-26 20:58:22 -Generating unique operation named: removeUsingPOST_6
2019-03-26 20:58:22 -Generating unique operation named: removeUsingPOST_7
2019-03-26 20:58:22 -Generating unique operation named: saveUsingPOST_3
2019-03-26 20:58:22 -Generating unique operation named: updateUsingGET_2
2019-03-26 20:58:22 -Generating unique operation named: updateUsingHEAD_2
2019-03-26 20:58:22 -Generating unique operation named: updateUsingPOST_3
2019-03-26 20:58:22 -Generating unique operation named: updateUsingPUT_2
2019-03-26 20:58:22 -Generating unique operation named: updateUsingPATCH_2
2019-03-26 20:58:22 -Generating unique operation named: updateUsingDELETE_2
2019-03-26 20:58:22 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-26 20:58:22 -Generating unique operation named: updateUsingTRACE_2
2019-03-26 20:58:22 -Generating unique operation named: addUsingGET_4
2019-03-26 20:58:22 -Generating unique operation named: editUsingGET_4
2019-03-26 20:58:22 -Generating unique operation named: listUsingGET_4
2019-03-26 20:58:22 -Generating unique operation named: removeUsingPOST_8
2019-03-26 20:58:23 -Generating unique operation named: removeUsingPOST_9
2019-03-26 20:58:23 -Generating unique operation named: saveUsingPOST_4
2019-03-26 20:58:23 -Generating unique operation named: updateUsingGET_3
2019-03-26 20:58:23 -Generating unique operation named: updateUsingHEAD_3
2019-03-26 20:58:23 -Generating unique operation named: updateUsingPOST_4
2019-03-26 20:58:23 -Generating unique operation named: updateUsingPUT_3
2019-03-26 20:58:23 -Generating unique operation named: updateUsingPATCH_3
2019-03-26 20:58:23 -Generating unique operation named: updateUsingDELETE_3
2019-03-26 20:58:23 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-26 20:58:23 -Generating unique operation named: updateUsingTRACE_3
2019-03-26 20:58:23 -Generating unique operation named: ElecUsingGET_1
2019-03-26 20:58:23 -Generating unique operation named: addUsingGET_5
2019-03-26 20:58:23 -Generating unique operation named: editUsingGET_5
2019-03-26 20:58:23 -Generating unique operation named: listUsingGET_5
2019-03-26 20:58:23 -Generating unique operation named: removeUsingPOST_10
2019-03-26 20:58:23 -Generating unique operation named: removeUsingPOST_11
2019-03-26 20:58:23 -Generating unique operation named: saveUsingPOST_5
2019-03-26 20:58:23 -Generating unique operation named: updateUsingGET_4
2019-03-26 20:58:23 -Generating unique operation named: updateUsingHEAD_4
2019-03-26 20:58:23 -Generating unique operation named: updateUsingPOST_5
2019-03-26 20:58:23 -Generating unique operation named: updateUsingPUT_4
2019-03-26 20:58:23 -Generating unique operation named: updateUsingPATCH_4
2019-03-26 20:58:23 -Generating unique operation named: updateUsingDELETE_4
2019-03-26 20:58:23 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-26 20:58:23 -Generating unique operation named: updateUsingTRACE_4
2019-03-26 20:58:23 -Generating unique operation named: editUsingGET_6
2019-03-26 20:58:23 -Generating unique operation named: listUsingGET_6
2019-03-26 20:58:23 -Generating unique operation named: updateUsingPOST_6
2019-03-26 20:58:23 -Generating unique operation named: addUsingGET_6
2019-03-26 20:58:23 -Generating unique operation named: editUsingGET_7
2019-03-26 20:58:23 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-26 20:58:23 -Generating unique operation named: listUsingGET_7
2019-03-26 20:58:23 -Generating unique operation named: removeUsingPOST_12
2019-03-26 20:58:23 -Generating unique operation named: removeUsingPOST_13
2019-03-26 20:58:23 -Generating unique operation named: saveUsingPOST_6
2019-03-26 20:58:23 -Generating unique operation named: updateUsingGET_5
2019-03-26 20:58:23 -Generating unique operation named: updateUsingHEAD_5
2019-03-26 20:58:23 -Generating unique operation named: updateUsingPOST_7
2019-03-26 20:58:23 -Generating unique operation named: updateUsingPUT_5
2019-03-26 20:58:23 -Generating unique operation named: updateUsingPATCH_5
2019-03-26 20:58:23 -Generating unique operation named: updateUsingDELETE_5
2019-03-26 20:58:23 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-26 20:58:23 -Generating unique operation named: updateUsingTRACE_5
2019-03-26 20:58:23 -Generating unique operation named: exprotExcelUsingGET_4
2019-03-26 20:58:23 -Generating unique operation named: addUsingGET_7
2019-03-26 20:58:23 -Generating unique operation named: editUsingGET_8
2019-03-26 20:58:23 -Generating unique operation named: listUsingGET_8
2019-03-26 20:58:23 -Generating unique operation named: removeUsingPOST_14
2019-03-26 20:58:23 -Generating unique operation named: removeUsingPOST_15
2019-03-26 20:58:23 -Generating unique operation named: saveUsingPOST_7
2019-03-26 20:58:23 -Generating unique operation named: updateUsingGET_6
2019-03-26 20:58:23 -Generating unique operation named: updateUsingHEAD_6
2019-03-26 20:58:23 -Generating unique operation named: updateUsingPOST_8
2019-03-26 20:58:23 -Generating unique operation named: updateUsingPUT_6
2019-03-26 20:58:24 -Generating unique operation named: updateUsingPATCH_6
2019-03-26 20:58:24 -Generating unique operation named: updateUsingDELETE_6
2019-03-26 20:58:24 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-26 20:58:24 -Generating unique operation named: updateUsingTRACE_6
2019-03-26 20:58:24 -Generating unique operation named: addUsingGET_8
2019-03-26 20:58:24 -Generating unique operation named: editUsingGET_9
2019-03-26 20:58:24 -Generating unique operation named: listUsingGET_9
2019-03-26 20:58:24 -Generating unique operation named: removeUsingPOST_16
2019-03-26 20:58:24 -Generating unique operation named: removeUsingPOST_17
2019-03-26 20:58:24 -Generating unique operation named: saveUsingPOST_8
2019-03-26 20:58:24 -Generating unique operation named: updateUsingGET_7
2019-03-26 20:58:24 -Generating unique operation named: updateUsingHEAD_7
2019-03-26 20:58:24 -Generating unique operation named: updateUsingPOST_9
2019-03-26 20:58:24 -Generating unique operation named: updateUsingPUT_7
2019-03-26 20:58:24 -Generating unique operation named: updateUsingPATCH_7
2019-03-26 20:58:24 -Generating unique operation named: updateUsingDELETE_7
2019-03-26 20:58:24 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-26 20:58:24 -Generating unique operation named: updateUsingTRACE_7
2019-03-26 20:58:24 -Generating unique operation named: addUsingGET_9
2019-03-26 20:58:24 -Generating unique operation named: editUsingGET_10
2019-03-26 20:58:24 -Generating unique operation named: infoUsingGET_1
2019-03-26 20:58:24 -Generating unique operation named: infoUsingHEAD_1
2019-03-26 20:58:24 -Generating unique operation named: infoUsingPOST_1
2019-03-26 20:58:24 -Generating unique operation named: infoUsingPUT_1
2019-03-26 20:58:24 -Generating unique operation named: infoUsingPATCH_1
2019-03-26 20:58:24 -Generating unique operation named: infoUsingDELETE_1
2019-03-26 20:58:24 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-26 20:58:24 -Generating unique operation named: infoUsingTRACE_1
2019-03-26 20:58:24 -Generating unique operation named: listUsingGET_10
2019-03-26 20:58:24 -Generating unique operation named: removeUsingPOST_18
2019-03-26 20:58:24 -Generating unique operation named: removeUsingPOST_19
2019-03-26 20:58:24 -Generating unique operation named: saveUsingPOST_9
2019-03-26 20:58:24 -Generating unique operation named: updateUsingPOST_10
2019-03-26 20:58:24 -Generating unique operation named: listUsingGET_11
2019-03-26 20:58:24 -Generating unique operation named: removeUsingPOST_20
2019-03-26 20:58:24 -Generating unique operation named: welcomeUsingGET_1
2019-03-26 20:58:24 -Generating unique operation named: addUsingGET_10
2019-03-26 20:58:24 -Generating unique operation named: editUsingGET_11
2019-03-26 20:58:24 -Generating unique operation named: listUsingGET_12
2019-03-26 20:58:24 -Generating unique operation named: removeUsingPOST_21
2019-03-26 20:58:24 -Generating unique operation named: saveUsingPOST_10
2019-03-26 20:58:24 -Generating unique operation named: treeUsingGET_1
2019-03-26 20:58:24 -Generating unique operation named: treeUsingGET_2
2019-03-26 20:58:24 -Generating unique operation named: updateUsingPOST_11
2019-03-26 20:58:24 -Generating unique operation named: addUsingGET_11
2019-03-26 20:58:24 -Generating unique operation named: editUsingGET_12
2019-03-26 20:58:24 -Generating unique operation named: listUsingGET_13
2019-03-26 20:58:24 -Generating unique operation named: removeUsingPOST_22
2019-03-26 20:58:24 -Generating unique operation named: removeUsingPOST_23
2019-03-26 20:58:24 -Generating unique operation named: saveUsingPOST_11
2019-03-26 20:58:25 -Generating unique operation named: updateUsingGET_8
2019-03-26 20:58:25 -Generating unique operation named: updateUsingHEAD_8
2019-03-26 20:58:25 -Generating unique operation named: updateUsingPOST_12
2019-03-26 20:58:25 -Generating unique operation named: updateUsingPUT_8
2019-03-26 20:58:25 -Generating unique operation named: updateUsingPATCH_8
2019-03-26 20:58:25 -Generating unique operation named: updateUsingDELETE_8
2019-03-26 20:58:25 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-26 20:58:25 -Generating unique operation named: updateUsingTRACE_8
2019-03-26 20:58:25 -Generating unique operation named: addUsingGET_12
2019-03-26 20:58:25 -Generating unique operation named: editUsingGET_13
2019-03-26 20:58:25 -Generating unique operation named: listUsingGET_14
2019-03-26 20:58:25 -Generating unique operation named: removeUsingPOST_24
2019-03-26 20:58:25 -Generating unique operation named: removeUsingPOST_25
2019-03-26 20:58:25 -Generating unique operation named: saveUsingPOST_12
2019-03-26 20:58:25 -Generating unique operation named: updateUsingGET_9
2019-03-26 20:58:25 -Generating unique operation named: updateUsingHEAD_9
2019-03-26 20:58:25 -Generating unique operation named: updateUsingPOST_13
2019-03-26 20:58:25 -Generating unique operation named: updateUsingPUT_9
2019-03-26 20:58:25 -Generating unique operation named: updateUsingPATCH_9
2019-03-26 20:58:25 -Generating unique operation named: updateUsingDELETE_9
2019-03-26 20:58:25 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-26 20:58:25 -Generating unique operation named: updateUsingTRACE_9
2019-03-26 20:58:25 -Generating unique operation named: addUsingGET_13
2019-03-26 20:58:25 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-26 20:58:25 -Generating unique operation named: editUsingGET_14
2019-03-26 20:58:25 -Generating unique operation named: listUsingGET_15
2019-03-26 20:58:25 -Generating unique operation named: saveUsingPOST_13
2019-03-26 20:58:25 -Generating unique operation named: saveUsingPOST_14
2019-03-26 20:58:25 -Generating unique operation named: updateUsingPOST_14
2019-03-26 20:58:25 -Generating unique operation named: listUsingGET_16
2019-03-26 20:58:25 -Generating unique operation named: listUsingHEAD_1
2019-03-26 20:58:25 -Generating unique operation named: listUsingPOST_1
2019-03-26 20:58:25 -Generating unique operation named: listUsingPUT_1
2019-03-26 20:58:25 -Generating unique operation named: listUsingPATCH_1
2019-03-26 20:58:25 -Generating unique operation named: listUsingDELETE_1
2019-03-26 20:58:25 -Generating unique operation named: listUsingOPTIONS_1
2019-03-26 20:58:25 -Generating unique operation named: listUsingTRACE_1
2019-03-26 20:58:25 -Generating unique operation named: addUsingGET_14
2019-03-26 20:58:25 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-26 20:58:25 -Generating unique operation named: editUsingGET_15
2019-03-26 20:58:25 -Generating unique operation named: listUsingGET_17
2019-03-26 20:58:25 -Generating unique operation named: removeUsingPOST_26
2019-03-26 20:58:25 -Generating unique operation named: saveUsingPOST_15
2019-03-26 20:58:25 -Generating unique operation named: treeUsingGET_3
2019-03-26 20:58:25 -Generating unique operation named: treeViewUsingGET_1
2019-03-26 20:58:25 -Generating unique operation named: updateUsingPOST_15
2019-03-26 20:58:25 -Generating unique operation named: addUsingGET_15
2019-03-26 20:58:25 -Generating unique operation named: editUsingGET_16
2019-03-26 20:58:25 -Generating unique operation named: exprotExcelUsingGET_5
2019-03-26 20:58:25 -Generating unique operation named: listUsingGET_18
2019-03-26 20:58:25 -Generating unique operation named: removeUsingPOST_27
2019-03-26 20:58:25 -Generating unique operation named: removeUsingPOST_28
2019-03-26 20:58:25 -Generating unique operation named: saveUsingPOST_16
2019-03-26 20:58:25 -Generating unique operation named: updateUsingGET_10
2019-03-26 20:58:25 -Generating unique operation named: updateUsingHEAD_10
2019-03-26 20:58:25 -Generating unique operation named: updateUsingPOST_16
2019-03-26 20:58:25 -Generating unique operation named: updateUsingPUT_10
2019-03-26 20:58:25 -Generating unique operation named: updateUsingPATCH_10
2019-03-26 20:58:25 -Generating unique operation named: updateUsingDELETE_10
2019-03-26 20:58:25 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-26 20:58:26 -Generating unique operation named: updateUsingTRACE_10
2019-03-26 20:58:26 -Generating unique operation named: exprotExcelUsingGET_6
2019-03-26 20:58:26 -Generating unique operation named: addUsingGET_16
2019-03-26 20:58:26 -Generating unique operation named: editUsingGET_17
2019-03-26 20:58:26 -Generating unique operation named: listUsingGET_19
2019-03-26 20:58:26 -Generating unique operation named: removeUsingPOST_29
2019-03-26 20:58:26 -Generating unique operation named: removeUsingPOST_30
2019-03-26 20:58:26 -Generating unique operation named: saveUsingPOST_17
2019-03-26 20:58:26 -Generating unique operation named: updateUsingGET_11
2019-03-26 20:58:26 -Generating unique operation named: updateUsingHEAD_11
2019-03-26 20:58:26 -Generating unique operation named: updateUsingPOST_17
2019-03-26 20:58:26 -Generating unique operation named: updateUsingPUT_11
2019-03-26 20:58:26 -Generating unique operation named: updateUsingPATCH_11
2019-03-26 20:58:26 -Generating unique operation named: updateUsingDELETE_11
2019-03-26 20:58:26 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-26 20:58:26 -Generating unique operation named: updateUsingTRACE_11
2019-03-26 20:58:26 -Generating unique operation named: addUsingGET_17
2019-03-26 20:58:26 -Generating unique operation named: editUsingGET_18
2019-03-26 20:58:26 -Generating unique operation named: listUsingGET_20
2019-03-26 20:58:26 -Generating unique operation named: removeUsingPOST_31
2019-03-26 20:58:26 -Generating unique operation named: removeUsingPOST_32
2019-03-26 20:58:26 -Generating unique operation named: saveUsingPOST_18
2019-03-26 20:58:26 -Generating unique operation named: updateUsingGET_12
2019-03-26 20:58:26 -Generating unique operation named: updateUsingHEAD_12
2019-03-26 20:58:26 -Generating unique operation named: updateUsingPOST_18
2019-03-26 20:58:26 -Generating unique operation named: updateUsingPUT_12
2019-03-26 20:58:26 -Generating unique operation named: updateUsingPATCH_12
2019-03-26 20:58:26 -Generating unique operation named: updateUsingDELETE_12
2019-03-26 20:58:26 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-26 20:58:26 -Generating unique operation named: updateUsingTRACE_12
2019-03-26 20:58:26 -Starting Quartz Scheduler now
2019-03-26 20:58:26 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-26 20:58:26 -Starting...
2019-03-26 20:58:26 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-26 20:58:26 -Started.
2019-03-26 20:58:26 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-26 20:58:26 -Using a shared selector for servlet write/read
2019-03-26 20:58:26 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-26 20:58:26 -Started BootdoApplication in 45.511 seconds (JVM running for 46.714)
2019-03-26 20:58:26 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-26 20:58:27 -==> Parameters: 
2019-03-26 20:58:27 -<==      Total: 1
2019-03-26 20:58:34 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-26 20:58:34 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-26 20:58:34 -FrameworkServlet 'dispatcherServlet': initialization completed in 84 ms
2019-03-26 20:58:35 -Enabling session validation scheduler...
2019-03-26 20:58:35 -请求地址 : http://localhost:8081/login;JSESSIONID=0addc91b-7b6b-46ac-b2eb-74d07cc8eec2
2019-03-26 20:58:35 -HTTP METHOD : GET
2019-03-26 20:58:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-26 20:58:35 -参数 : [{}]
2019-03-26 20:58:35 -耗时 : 4
2019-03-26 20:58:35 -返回值 : login
2019-03-26 20:58:36 -请求地址 : http://localhost:8081/getVerify
2019-03-26 20:58:36 -HTTP METHOD : GET
2019-03-26 20:58:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-26 20:58:36 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@19778360, org.apache.shiro.web.servlet.ShiroHttpServletResponse@1d480496]
2019-03-26 20:58:40 -2754
2019-03-26 20:58:41 -耗时 : 4527
2019-03-26 20:58:41 -返回值 : null
2019-03-26 20:58:45 -请求地址 : http://localhost:8081/login
2019-03-26 20:58:45 -HTTP METHOD : POST
2019-03-26 20:58:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-26 20:58:45 -参数 : [admin, 111111, 2754, org.apache.shiro.web.servlet.ShiroHttpServletRequest@77f4c386]
2019-03-26 20:58:45 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-26 20:58:45 -==> Parameters: admin(String)
2019-03-26 20:58:45 -<==      Total: 1
2019-03-26 20:58:45 -耗时 : 126
2019-03-26 20:58:45 -返回值 : {msg=操作成功, code=0}
2019-03-26 20:58:45 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-03-26 20:58:45 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-26 20:58:45 -==> Parameters: 1(Long), admin(String), 登录(String), 126(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-26 20:58:45.835(Timestamp)
2019-03-26 20:58:45 -请求地址 : http://localhost:8081/index
2019-03-26 20:58:45 -HTTP METHOD : GET
2019-03-26 20:58:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-26 20:58:45 -参数 : [{}]
2019-03-26 20:58:46 -<==    Updates: 1
2019-03-26 20:58:46 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-26 20:58:46 -==> Parameters: 1(Long)
2019-03-26 20:58:46 -<==      Total: 46
2019-03-26 20:58:46 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-26 20:58:46 -==> Parameters: 138(Long)
2019-03-26 20:58:46 -<==      Total: 1
2019-03-26 20:58:46 -耗时 : 306
2019-03-26 20:58:46 -返回值 : index_v1
2019-03-26 20:58:46 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-26 20:58:46 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 307(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-26 20:58:46.304(Timestamp)
2019-03-26 20:58:46 -<==    Updates: 1
2019-03-26 20:58:46 -请求地址 : http://localhost:8081/main
2019-03-26 20:58:46 -HTTP METHOD : GET
2019-03-26 20:58:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-26 20:58:46 -参数 : []
2019-03-26 20:58:46 -耗时 : 1
2019-03-26 20:58:46 -返回值 : main
2019-03-26 20:58:46 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-26 20:58:46 -HTTP METHOD : GET
2019-03-26 20:58:46 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-26 20:58:46 -参数 : []
2019-03-26 20:58:46 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-26 20:58:46 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-26 20:58:46 -<==      Total: 0
2019-03-26 20:58:46 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-26 20:58:46 -==> Parameters: 1(Long), 0(String)
2019-03-26 20:58:46 -<==      Total: 1
2019-03-26 20:58:46 -耗时 : 79
2019-03-26 20:58:46 -返回值 : com.bootdo.common.utils.PageUtils@38805fa7
2019-03-26 20:58:46 -请求地址 : http://localhost:8081/main
2019-03-26 20:58:46 -HTTP METHOD : GET
2019-03-26 20:58:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-26 20:58:46 -参数 : []
2019-03-26 20:58:46 -耗时 : 1
2019-03-26 20:58:46 -返回值 : main
2019-03-26 20:58:49 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-26 20:58:49 -==> Parameters: 1(Long)
2019-03-26 20:58:49 -<==      Total: 90
2019-03-26 20:58:49 -请求地址 : http://localhost:8081/elec/elec
2019-03-26 20:58:49 -HTTP METHOD : GET
2019-03-26 20:58:49 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-26 20:58:49 -参数 : []
2019-03-26 20:58:49 -耗时 : 1
2019-03-26 20:58:49 -返回值 : elec/elec/elec
2019-03-26 20:58:49 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-26 20:58:49 -HTTP METHOD : GET
2019-03-26 20:58:49 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-26 20:58:49 -参数 : [userType]
2019-03-26 20:58:49 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-26 20:58:49 -==> Parameters: userType(String)
2019-03-26 20:58:49 -<==      Total: 2
2019-03-26 20:58:49 -耗时 : 31
2019-03-26 20:58:49 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-26 20:58:49 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-26 20:58:49 -HTTP METHOD : GET
2019-03-26 20:58:49 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-26 20:58:49 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@9c0ae57]
2019-03-26 20:58:49 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-26 20:58:49 -==> Parameters: 0(Integer), 10(Integer)
2019-03-26 20:58:49 -<==      Total: 10
2019-03-26 20:58:49 -==>  Preparing: select count(*) from elec 
2019-03-26 20:58:49 -==> Parameters: 
2019-03-26 20:58:49 -<==      Total: 1
2019-03-26 20:58:49 -耗时 : 93
2019-03-26 20:58:49 -返回值 : com.bootdo.common.utils.PageUtils@71468c62
2019-03-26 20:58:55 -请求地址 : http://localhost:8081/elec/elec/edit/4
2019-03-26 20:58:55 -HTTP METHOD : GET
2019-03-26 20:58:55 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.edit
2019-03-26 20:58:55 -参数 : [4, {}]
2019-03-26 20:58:55 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec where id = ? 
2019-03-26 20:58:55 -==> Parameters: 4(Long)
2019-03-26 20:58:55 -<==      Total: 1
2019-03-26 20:58:55 -耗时 : 34
2019-03-26 20:58:55 -返回值 : elec/elec/edit
2019-03-26 20:58:55 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-26 20:58:55 -HTTP METHOD : GET
2019-03-26 20:58:55 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-26 20:58:55 -参数 : [userType]
2019-03-26 20:58:55 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-26 20:58:55 -==> Parameters: userType(String)
2019-03-26 20:58:55 -<==      Total: 2
2019-03-26 20:58:55 -耗时 : 9
2019-03-26 20:58:55 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-26 20:58:55 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-03-26 20:58:55 -HTTP METHOD : GET
2019-03-26 20:58:55 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-26 20:58:55 -参数 : [elecType]
2019-03-26 20:58:55 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-26 20:58:55 -==> Parameters: elecType(String)
2019-03-26 20:58:55 -<==      Total: 2
2019-03-26 20:58:55 -耗时 : 6
2019-03-26 20:58:55 -返回值 : [DictDO{id=139, name='民用电', value='1', type='elecType', description='电量性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='商业电', value='0', type='elecType', description='电量类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-26 20:58:55 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-03-26 20:58:55 -HTTP METHOD : GET
2019-03-26 20:58:55 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-26 20:58:55 -参数 : [userState]
2019-03-26 20:58:55 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-26 20:58:55 -==> Parameters: userState(String)
2019-03-26 20:58:55 -<==      Total: 2
2019-03-26 20:58:55 -耗时 : 12
2019-03-26 20:58:55 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-26 20:59:00 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-26 20:59:00 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/elec/elec/update(String), org.springframework.validation.BindException: org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'elecDO' on field 'hu': rejected value [2019-03,1]; codes [typeMismatch.elecDO.hu,typeMismatch.hu,typeMismatch.java.lang.Integer,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [elecDO.hu,hu]; arguments []; default message [hu]]; default message [Failed to convert property value of type 'java.lang.String[]' to required type 'java.lang.Integer' for property 'hu'; nested exception is java.lang.NumberFormatException: For input string: "2019-03,1"](String), null, 2019-03-26 20:59:00.542(Timestamp)
2019-03-26 20:59:00 -org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'elecDO' on field 'hu': rejected value [2019-03,1]; codes [typeMismatch.elecDO.hu,typeMismatch.hu,typeMismatch.java.lang.Integer,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [elecDO.hu,hu]; arguments []; default message [hu]]; default message [Failed to convert property value of type 'java.lang.String[]' to required type 'java.lang.Integer' for property 'hu'; nested exception is java.lang.NumberFormatException: For input string: "2019-03,1"]
org.springframework.validation.BindException: org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'elecDO' on field 'hu': rejected value [2019-03,1]; codes [typeMismatch.elecDO.hu,typeMismatch.hu,typeMismatch.java.lang.Integer,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [elecDO.hu,hu]; arguments []; default message [hu]]; default message [Failed to convert property value of type 'java.lang.String[]' to required type 'java.lang.Integer' for property 'hu'; nested exception is java.lang.NumberFormatException: For input string: "2019-03,1"]
	at org.springframework.web.method.annotation.ModelAttributeMethodProcessor.resolveArgument(ModelAttributeMethodProcessor.java:157)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:124)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:161)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:131)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-26 20:59:00 -<==    Updates: 1
2019-03-26 20:59:13 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 7]
2019-03-26 21:16:26 -Starting BootdoApplication on ZJZL-20180906VX with PID 6884 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-26 21:16:26 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-26 21:16:26 -The following profiles are active: dev
2019-03-26 21:16:27 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@70e9c95d: startup date [Tue Mar 26 21:16:27 CST 2019]; root of context hierarchy
2019-03-26 21:16:30 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-26 21:16:33 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$86e339f1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 21:16:33 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$793c6898] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 21:16:35 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 21:16:35 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 21:16:35 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 21:16:35 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-26 21:16:35 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-26 21:16:35 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 21:16:35 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 21:16:35 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 21:16:36 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 21:16:37 -Tomcat initialized with port(s): 8081 (http)
2019-03-26 21:16:37 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-26 21:16:37 -Starting service [Tomcat]
2019-03-26 21:16:37 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-26 21:16:37 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-26 21:16:37 -Initializing Spring embedded WebApplicationContext
2019-03-26 21:16:37 -Root WebApplicationContext: initialization completed in 10511 ms
2019-03-26 21:16:38 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-26 21:16:38 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-26 21:16:38 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-26 21:16:38 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-26 21:16:38 -Filter xssFilter was not registered (disabled)
2019-03-26 21:16:38 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-26 21:16:38 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-26 21:16:38 -Servlet statViewServlet mapped to [/druid/*]
2019-03-26 21:16:38 -Servlet dispatcherServlet mapped to [/]
2019-03-26 21:16:42 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@70e9c95d: startup date [Tue Mar 26 21:16:27 CST 2019]; root of context hierarchy
2019-03-26 21:16:42 -Using default implementation for ThreadExecutor
2019-03-26 21:16:42 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-26 21:16:42 -Quartz Scheduler v.2.2.1 created.
2019-03-26 21:16:42 -RAMJobStore initialized.
2019-03-26 21:16:42 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-26 21:16:42 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-26 21:16:42 -Quartz scheduler version: 2.2.1
2019-03-26 21:16:42 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@26874f2c
2019-03-26 21:16:43 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-26 21:16:43 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-26 21:16:46 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-26 21:16:46 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-26 21:16:46 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-03-26 21:16:46 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-26 21:16:46 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-26 21:16:46 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-26 21:16:46 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-26 21:16:46 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-26 21:16:46 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-26 21:16:46 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-26 21:16:46 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-26 21:16:46 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 21:16:46 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-26 21:16:46 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-26 21:16:46 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 21:16:46 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-26 21:16:46 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-26 21:16:46 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-26 21:16:46 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-26 21:16:46 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-26 21:16:46 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-26 21:16:46 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-26 21:16:46 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 21:16:46 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-26 21:16:46 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-26 21:16:46 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 21:16:46 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-26 21:16:46 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-26 21:16:46 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 21:16:46 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-26 21:16:46 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-26 21:16:46 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-26 21:16:46 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-26 21:16:46 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-26 21:16:46 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-26 21:16:46 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-26 21:16:46 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-26 21:16:46 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-26 21:16:46 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 21:16:46 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-26 21:16:46 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-26 21:16:46 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 21:16:46 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-26 21:16:46 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-26 21:16:46 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-26 21:16:46 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-26 21:16:46 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 21:16:46 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-26 21:16:46 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-03-26 21:16:46 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-26 21:16:46 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-26 21:16:46 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-26 21:16:46 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-26 21:16:46 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-26 21:16:46 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-26 21:16:46 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-26 21:16:46 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-26 21:16:46 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-26 21:16:46 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-26 21:16:46 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 21:16:46 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-26 21:16:46 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-03-26 21:16:46 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-26 21:16:46 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-26 21:16:46 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-26 21:16:46 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-26 21:16:46 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-26 21:16:46 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-26 21:16:46 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 21:16:46 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-03-26 21:16:46 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 21:16:46 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-26 21:16:46 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-26 21:16:46 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-26 21:16:46 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-26 21:16:46 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-26 21:16:46 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-26 21:16:46 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-26 21:16:46 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 21:16:46 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-26 21:16:46 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-26 21:16:46 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-26 21:16:46 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-26 21:16:46 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-26 21:16:46 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-26 21:16:46 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-26 21:16:46 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-26 21:16:46 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-26 21:16:46 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-26 21:16:46 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 21:16:46 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-26 21:16:46 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 21:16:46 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-26 21:16:47 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-26 21:16:47 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-03-26 21:16:47 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-26 21:16:47 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-03-26 21:16:47 -Mapped "{[/moneyList/moneyList/LikeName],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.LikeName(org.springframework.ui.Model)
2019-03-26 21:16:47 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-26 21:16:47 -Mapped "{[/moneyList/moneyList/UserList],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-26 21:16:47 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-26 21:16:47 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-26 21:16:47 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-26 21:16:47 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-26 21:16:47 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 21:16:47 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-26 21:16:47 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 21:16:47 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-26 21:16:47 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-26 21:16:47 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-26 21:16:47 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-26 21:16:47 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-26 21:16:47 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-26 21:16:47 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 21:16:47 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-26 21:16:47 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 21:16:47 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-26 21:16:47 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-26 21:16:47 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-26 21:16:47 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-26 21:16:47 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-26 21:16:47 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-26 21:16:47 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 21:16:47 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-26 21:16:47 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 21:16:47 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-26 21:16:47 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-26 21:16:47 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-26 21:16:47 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-26 21:16:47 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-26 21:16:47 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-26 21:16:47 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-26 21:16:47 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 21:16:47 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-26 21:16:47 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-26 21:16:47 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 21:16:47 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 21:16:47 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-26 21:16:47 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-26 21:16:47 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-26 21:16:47 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-26 21:16:47 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-26 21:16:47 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-26 21:16:47 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 21:16:47 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-26 21:16:47 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 21:16:47 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-26 21:16:47 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 21:16:47 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-26 21:16:47 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-26 21:16:47 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-26 21:16:47 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-26 21:16:47 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-26 21:16:47 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-26 21:16:47 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-26 21:16:47 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-26 21:16:47 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 21:16:47 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-26 21:16:47 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-26 21:16:47 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-26 21:16:47 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-26 21:16:47 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-26 21:16:47 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-26 21:16:47 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-26 21:16:47 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-26 21:16:47 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-26 21:16:47 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-26 21:16:47 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-26 21:16:47 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-26 21:16:47 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 21:16:47 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-26 21:16:47 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-26 21:16:47 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-26 21:16:47 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-26 21:16:47 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-26 21:16:47 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-26 21:16:47 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-26 21:16:47 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-26 21:16:47 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-26 21:16:47 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-26 21:16:47 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-26 21:16:47 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-26 21:16:47 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 21:16:47 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-26 21:16:47 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-26 21:16:47 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-26 21:16:47 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-26 21:16:47 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 21:16:47 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-26 21:16:47 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-26 21:16:47 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-26 21:16:47 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 21:16:47 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-26 21:16:47 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-26 21:16:47 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-26 21:16:47 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-26 21:16:47 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-26 21:16:47 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-26 21:16:47 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-26 21:16:47 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-26 21:16:47 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-26 21:16:47 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-26 21:16:47 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-26 21:16:47 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-26 21:16:47 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-26 21:16:47 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-26 21:16:47 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-26 21:16:47 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-26 21:16:47 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-26 21:16:47 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 21:16:47 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-26 21:16:47 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-26 21:16:47 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 21:16:47 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 21:16:47 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-26 21:16:47 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-26 21:16:47 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-26 21:16:47 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-26 21:16:47 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-26 21:16:47 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-26 21:16:47 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-26 21:16:47 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 21:16:47 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-26 21:16:47 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 21:16:47 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-26 21:16:47 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-26 21:16:47 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-03-26 21:16:47 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-03-26 21:16:47 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-26 21:16:47 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-26 21:16:47 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-26 21:16:47 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-26 21:16:47 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-26 21:16:48 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-26 21:16:48 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-26 21:16:48 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-26 21:16:49 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-26 21:16:49 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@70e9c95d: startup date [Tue Mar 26 21:16:27 CST 2019]; root of context hierarchy
2019-03-26 21:16:49 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-26 21:16:49 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-26 21:16:49 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-26 21:16:49 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-26 21:16:50 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-26 21:16:52 -Registering beans for JMX exposure on startup
2019-03-26 21:16:52 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-26 21:16:52 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-26 21:16:52 -Starting beans in phase 2147483647
2019-03-26 21:16:52 -Context refreshed
2019-03-26 21:16:53 -Found 1 custom documentation plugin(s)
2019-03-26 21:16:53 -Scanning for api listing references
2019-03-26 21:16:54 -Generating unique operation named: removeUsingPOST_1
2019-03-26 21:16:54 -Generating unique operation named: addUsingGET_1
2019-03-26 21:16:54 -Generating unique operation named: editUsingGET_1
2019-03-26 21:16:54 -Generating unique operation named: listUsingGET_1
2019-03-26 21:16:54 -Generating unique operation named: removeUsingPOST_2
2019-03-26 21:16:54 -Generating unique operation named: removeUsingPOST_3
2019-03-26 21:16:54 -Generating unique operation named: saveUsingPOST_1
2019-03-26 21:16:54 -Generating unique operation named: updateUsingGET_1
2019-03-26 21:16:54 -Generating unique operation named: updateUsingHEAD_1
2019-03-26 21:16:54 -Generating unique operation named: updateUsingPOST_1
2019-03-26 21:16:54 -Generating unique operation named: updateUsingPUT_1
2019-03-26 21:16:54 -Generating unique operation named: updateUsingPATCH_1
2019-03-26 21:16:54 -Generating unique operation named: updateUsingDELETE_1
2019-03-26 21:16:54 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-26 21:16:54 -Generating unique operation named: updateUsingTRACE_1
2019-03-26 21:16:54 -Generating unique operation named: addUsingGET_2
2019-03-26 21:16:54 -Generating unique operation named: editUsingGET_2
2019-03-26 21:16:54 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-26 21:16:54 -Generating unique operation named: listUsingGET_2
2019-03-26 21:16:54 -Generating unique operation named: removeUsingPOST_4
2019-03-26 21:16:54 -Generating unique operation named: removeUsingPOST_5
2019-03-26 21:16:54 -Generating unique operation named: saveUsingPOST_2
2019-03-26 21:16:54 -Generating unique operation named: updateUsingPOST_2
2019-03-26 21:16:54 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-26 21:16:54 -Generating unique operation named: addUsingGET_3
2019-03-26 21:16:54 -Generating unique operation named: editUsingGET_3
2019-03-26 21:16:54 -Generating unique operation named: listUsingGET_3
2019-03-26 21:16:54 -Generating unique operation named: removeUsingPOST_6
2019-03-26 21:16:54 -Generating unique operation named: removeUsingPOST_7
2019-03-26 21:16:54 -Generating unique operation named: saveUsingPOST_3
2019-03-26 21:16:54 -Generating unique operation named: updateUsingGET_2
2019-03-26 21:16:54 -Generating unique operation named: updateUsingHEAD_2
2019-03-26 21:16:54 -Generating unique operation named: updateUsingPOST_3
2019-03-26 21:16:54 -Generating unique operation named: updateUsingPUT_2
2019-03-26 21:16:54 -Generating unique operation named: updateUsingPATCH_2
2019-03-26 21:16:54 -Generating unique operation named: updateUsingDELETE_2
2019-03-26 21:16:54 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-26 21:16:54 -Generating unique operation named: updateUsingTRACE_2
2019-03-26 21:16:54 -Generating unique operation named: addUsingGET_4
2019-03-26 21:16:54 -Generating unique operation named: editUsingGET_4
2019-03-26 21:16:54 -Generating unique operation named: listUsingGET_4
2019-03-26 21:16:54 -Generating unique operation named: removeUsingPOST_8
2019-03-26 21:16:54 -Generating unique operation named: removeUsingPOST_9
2019-03-26 21:16:54 -Generating unique operation named: saveUsingPOST_4
2019-03-26 21:16:54 -Generating unique operation named: updateUsingGET_3
2019-03-26 21:16:54 -Generating unique operation named: updateUsingHEAD_3
2019-03-26 21:16:54 -Generating unique operation named: updateUsingPOST_4
2019-03-26 21:16:54 -Generating unique operation named: updateUsingPUT_3
2019-03-26 21:16:54 -Generating unique operation named: updateUsingPATCH_3
2019-03-26 21:16:54 -Generating unique operation named: updateUsingDELETE_3
2019-03-26 21:16:54 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-26 21:16:54 -Generating unique operation named: updateUsingTRACE_3
2019-03-26 21:16:54 -Generating unique operation named: ElecUsingGET_1
2019-03-26 21:16:54 -Generating unique operation named: addUsingGET_5
2019-03-26 21:16:54 -Generating unique operation named: editUsingGET_5
2019-03-26 21:16:54 -Generating unique operation named: listUsingGET_5
2019-03-26 21:16:54 -Generating unique operation named: removeUsingPOST_10
2019-03-26 21:16:54 -Generating unique operation named: removeUsingPOST_11
2019-03-26 21:16:54 -Generating unique operation named: saveUsingPOST_5
2019-03-26 21:16:54 -Generating unique operation named: updateUsingGET_4
2019-03-26 21:16:54 -Generating unique operation named: updateUsingHEAD_4
2019-03-26 21:16:54 -Generating unique operation named: updateUsingPOST_5
2019-03-26 21:16:54 -Generating unique operation named: updateUsingPUT_4
2019-03-26 21:16:54 -Generating unique operation named: updateUsingPATCH_4
2019-03-26 21:16:54 -Generating unique operation named: updateUsingDELETE_4
2019-03-26 21:16:54 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-26 21:16:54 -Generating unique operation named: updateUsingTRACE_4
2019-03-26 21:16:54 -Generating unique operation named: editUsingGET_6
2019-03-26 21:16:54 -Generating unique operation named: listUsingGET_6
2019-03-26 21:16:54 -Generating unique operation named: updateUsingPOST_6
2019-03-26 21:16:54 -Generating unique operation named: addUsingGET_6
2019-03-26 21:16:54 -Generating unique operation named: editUsingGET_7
2019-03-26 21:16:55 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-26 21:16:55 -Generating unique operation named: listUsingGET_7
2019-03-26 21:16:55 -Generating unique operation named: removeUsingPOST_12
2019-03-26 21:16:55 -Generating unique operation named: removeUsingPOST_13
2019-03-26 21:16:55 -Generating unique operation named: saveUsingPOST_6
2019-03-26 21:16:55 -Generating unique operation named: updateUsingGET_5
2019-03-26 21:16:55 -Generating unique operation named: updateUsingHEAD_5
2019-03-26 21:16:55 -Generating unique operation named: updateUsingPOST_7
2019-03-26 21:16:55 -Generating unique operation named: updateUsingPUT_5
2019-03-26 21:16:55 -Generating unique operation named: updateUsingPATCH_5
2019-03-26 21:16:55 -Generating unique operation named: updateUsingDELETE_5
2019-03-26 21:16:55 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-26 21:16:55 -Generating unique operation named: updateUsingTRACE_5
2019-03-26 21:16:55 -Generating unique operation named: exprotExcelUsingGET_4
2019-03-26 21:16:55 -Generating unique operation named: addUsingGET_7
2019-03-26 21:16:55 -Generating unique operation named: editUsingGET_8
2019-03-26 21:16:55 -Generating unique operation named: listUsingGET_8
2019-03-26 21:16:55 -Generating unique operation named: removeUsingPOST_14
2019-03-26 21:16:55 -Generating unique operation named: removeUsingPOST_15
2019-03-26 21:16:55 -Generating unique operation named: saveUsingPOST_7
2019-03-26 21:16:55 -Generating unique operation named: updateUsingGET_6
2019-03-26 21:16:55 -Generating unique operation named: updateUsingHEAD_6
2019-03-26 21:16:55 -Generating unique operation named: updateUsingPOST_8
2019-03-26 21:16:55 -Generating unique operation named: updateUsingPUT_6
2019-03-26 21:16:55 -Generating unique operation named: updateUsingPATCH_6
2019-03-26 21:16:55 -Generating unique operation named: updateUsingDELETE_6
2019-03-26 21:16:55 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-26 21:16:55 -Generating unique operation named: updateUsingTRACE_6
2019-03-26 21:16:55 -Generating unique operation named: addUsingGET_8
2019-03-26 21:16:55 -Generating unique operation named: editUsingGET_9
2019-03-26 21:16:55 -Generating unique operation named: listUsingGET_9
2019-03-26 21:16:55 -Generating unique operation named: removeUsingPOST_16
2019-03-26 21:16:55 -Generating unique operation named: removeUsingPOST_17
2019-03-26 21:16:55 -Generating unique operation named: saveUsingPOST_8
2019-03-26 21:16:55 -Generating unique operation named: updateUsingGET_7
2019-03-26 21:16:55 -Generating unique operation named: updateUsingHEAD_7
2019-03-26 21:16:55 -Generating unique operation named: updateUsingPOST_9
2019-03-26 21:16:55 -Generating unique operation named: updateUsingPUT_7
2019-03-26 21:16:55 -Generating unique operation named: updateUsingPATCH_7
2019-03-26 21:16:55 -Generating unique operation named: updateUsingDELETE_7
2019-03-26 21:16:55 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-26 21:16:55 -Generating unique operation named: updateUsingTRACE_7
2019-03-26 21:16:55 -Generating unique operation named: addUsingGET_9
2019-03-26 21:16:55 -Generating unique operation named: editUsingGET_10
2019-03-26 21:16:55 -Generating unique operation named: infoUsingGET_1
2019-03-26 21:16:55 -Generating unique operation named: infoUsingHEAD_1
2019-03-26 21:16:55 -Generating unique operation named: infoUsingPOST_1
2019-03-26 21:16:55 -Generating unique operation named: infoUsingPUT_1
2019-03-26 21:16:55 -Generating unique operation named: infoUsingPATCH_1
2019-03-26 21:16:55 -Generating unique operation named: infoUsingDELETE_1
2019-03-26 21:16:55 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-26 21:16:55 -Generating unique operation named: infoUsingTRACE_1
2019-03-26 21:16:55 -Generating unique operation named: listUsingGET_10
2019-03-26 21:16:55 -Generating unique operation named: removeUsingPOST_18
2019-03-26 21:16:55 -Generating unique operation named: removeUsingPOST_19
2019-03-26 21:16:55 -Generating unique operation named: saveUsingPOST_9
2019-03-26 21:16:55 -Generating unique operation named: updateUsingPOST_10
2019-03-26 21:16:55 -Generating unique operation named: listUsingGET_11
2019-03-26 21:16:55 -Generating unique operation named: removeUsingPOST_20
2019-03-26 21:16:55 -Generating unique operation named: welcomeUsingGET_1
2019-03-26 21:16:55 -Generating unique operation named: addUsingGET_10
2019-03-26 21:16:55 -Generating unique operation named: editUsingGET_11
2019-03-26 21:16:55 -Generating unique operation named: listUsingGET_12
2019-03-26 21:16:55 -Generating unique operation named: removeUsingPOST_21
2019-03-26 21:16:55 -Generating unique operation named: saveUsingPOST_10
2019-03-26 21:16:55 -Generating unique operation named: treeUsingGET_1
2019-03-26 21:16:55 -Generating unique operation named: treeUsingGET_2
2019-03-26 21:16:55 -Generating unique operation named: updateUsingPOST_11
2019-03-26 21:16:55 -Generating unique operation named: addUsingGET_11
2019-03-26 21:16:55 -Generating unique operation named: editUsingGET_12
2019-03-26 21:16:55 -Generating unique operation named: listUsingGET_13
2019-03-26 21:16:55 -Generating unique operation named: removeUsingPOST_22
2019-03-26 21:16:55 -Generating unique operation named: removeUsingPOST_23
2019-03-26 21:16:55 -Generating unique operation named: saveUsingPOST_11
2019-03-26 21:16:55 -Generating unique operation named: updateUsingGET_8
2019-03-26 21:16:55 -Generating unique operation named: updateUsingHEAD_8
2019-03-26 21:16:55 -Generating unique operation named: updateUsingPOST_12
2019-03-26 21:16:55 -Generating unique operation named: updateUsingPUT_8
2019-03-26 21:16:55 -Generating unique operation named: updateUsingPATCH_8
2019-03-26 21:16:55 -Generating unique operation named: updateUsingDELETE_8
2019-03-26 21:16:55 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-26 21:16:55 -Generating unique operation named: updateUsingTRACE_8
2019-03-26 21:16:55 -Generating unique operation named: addUsingGET_12
2019-03-26 21:16:55 -Generating unique operation named: editUsingGET_13
2019-03-26 21:16:55 -Generating unique operation named: listUsingGET_14
2019-03-26 21:16:55 -Generating unique operation named: removeUsingPOST_24
2019-03-26 21:16:56 -Generating unique operation named: removeUsingPOST_25
2019-03-26 21:16:56 -Generating unique operation named: saveUsingPOST_12
2019-03-26 21:16:56 -Generating unique operation named: updateUsingGET_9
2019-03-26 21:16:56 -Generating unique operation named: updateUsingHEAD_9
2019-03-26 21:16:56 -Generating unique operation named: updateUsingPOST_13
2019-03-26 21:16:56 -Generating unique operation named: updateUsingPUT_9
2019-03-26 21:16:56 -Generating unique operation named: updateUsingPATCH_9
2019-03-26 21:16:56 -Generating unique operation named: updateUsingDELETE_9
2019-03-26 21:16:56 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-26 21:16:56 -Generating unique operation named: updateUsingTRACE_9
2019-03-26 21:16:56 -Generating unique operation named: addUsingGET_13
2019-03-26 21:16:56 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-26 21:16:56 -Generating unique operation named: editUsingGET_14
2019-03-26 21:16:56 -Generating unique operation named: listUsingGET_15
2019-03-26 21:16:56 -Generating unique operation named: saveUsingPOST_13
2019-03-26 21:16:56 -Generating unique operation named: saveUsingPOST_14
2019-03-26 21:16:56 -Generating unique operation named: updateUsingPOST_14
2019-03-26 21:16:56 -Generating unique operation named: listUsingGET_16
2019-03-26 21:16:56 -Generating unique operation named: listUsingHEAD_1
2019-03-26 21:16:56 -Generating unique operation named: listUsingPOST_1
2019-03-26 21:16:56 -Generating unique operation named: listUsingPUT_1
2019-03-26 21:16:56 -Generating unique operation named: listUsingPATCH_1
2019-03-26 21:16:56 -Generating unique operation named: listUsingDELETE_1
2019-03-26 21:16:56 -Generating unique operation named: listUsingOPTIONS_1
2019-03-26 21:16:56 -Generating unique operation named: listUsingTRACE_1
2019-03-26 21:16:56 -Generating unique operation named: addUsingGET_14
2019-03-26 21:16:56 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-26 21:16:56 -Generating unique operation named: editUsingGET_15
2019-03-26 21:16:56 -Generating unique operation named: listUsingGET_17
2019-03-26 21:16:56 -Generating unique operation named: removeUsingPOST_26
2019-03-26 21:16:56 -Generating unique operation named: saveUsingPOST_15
2019-03-26 21:16:56 -Generating unique operation named: treeUsingGET_3
2019-03-26 21:16:56 -Generating unique operation named: treeViewUsingGET_1
2019-03-26 21:16:56 -Generating unique operation named: updateUsingPOST_15
2019-03-26 21:16:56 -Generating unique operation named: addUsingGET_15
2019-03-26 21:16:56 -Generating unique operation named: editUsingGET_16
2019-03-26 21:16:56 -Generating unique operation named: exprotExcelUsingGET_5
2019-03-26 21:16:56 -Generating unique operation named: listUsingGET_18
2019-03-26 21:16:56 -Generating unique operation named: removeUsingPOST_27
2019-03-26 21:16:56 -Generating unique operation named: removeUsingPOST_28
2019-03-26 21:16:56 -Generating unique operation named: saveUsingPOST_16
2019-03-26 21:16:56 -Generating unique operation named: updateUsingGET_10
2019-03-26 21:16:56 -Generating unique operation named: updateUsingHEAD_10
2019-03-26 21:16:56 -Generating unique operation named: updateUsingPOST_16
2019-03-26 21:16:56 -Generating unique operation named: updateUsingPUT_10
2019-03-26 21:16:56 -Generating unique operation named: updateUsingPATCH_10
2019-03-26 21:16:56 -Generating unique operation named: updateUsingDELETE_10
2019-03-26 21:16:56 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-26 21:16:56 -Generating unique operation named: updateUsingTRACE_10
2019-03-26 21:16:56 -Generating unique operation named: exprotExcelUsingGET_6
2019-03-26 21:16:56 -Generating unique operation named: addUsingGET_16
2019-03-26 21:16:56 -Generating unique operation named: editUsingGET_17
2019-03-26 21:16:56 -Generating unique operation named: listUsingGET_19
2019-03-26 21:16:56 -Generating unique operation named: removeUsingPOST_29
2019-03-26 21:16:56 -Generating unique operation named: removeUsingPOST_30
2019-03-26 21:16:56 -Generating unique operation named: saveUsingPOST_17
2019-03-26 21:16:56 -Generating unique operation named: updateUsingGET_11
2019-03-26 21:16:56 -Generating unique operation named: updateUsingHEAD_11
2019-03-26 21:16:56 -Generating unique operation named: updateUsingPOST_17
2019-03-26 21:16:56 -Generating unique operation named: updateUsingPUT_11
2019-03-26 21:16:56 -Generating unique operation named: updateUsingPATCH_11
2019-03-26 21:16:56 -Generating unique operation named: updateUsingDELETE_11
2019-03-26 21:16:56 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-26 21:16:56 -Generating unique operation named: updateUsingTRACE_11
2019-03-26 21:16:56 -Generating unique operation named: addUsingGET_17
2019-03-26 21:16:56 -Generating unique operation named: editUsingGET_18
2019-03-26 21:16:56 -Generating unique operation named: listUsingGET_20
2019-03-26 21:16:56 -Generating unique operation named: removeUsingPOST_31
2019-03-26 21:16:56 -Generating unique operation named: removeUsingPOST_32
2019-03-26 21:16:56 -Generating unique operation named: saveUsingPOST_18
2019-03-26 21:16:56 -Generating unique operation named: updateUsingGET_12
2019-03-26 21:16:56 -Generating unique operation named: updateUsingHEAD_12
2019-03-26 21:16:56 -Generating unique operation named: updateUsingPOST_18
2019-03-26 21:16:56 -Generating unique operation named: updateUsingPUT_12
2019-03-26 21:16:56 -Generating unique operation named: updateUsingPATCH_12
2019-03-26 21:16:56 -Generating unique operation named: updateUsingDELETE_12
2019-03-26 21:16:56 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-26 21:16:56 -Generating unique operation named: updateUsingTRACE_12
2019-03-26 21:16:56 -Starting Quartz Scheduler now
2019-03-26 21:16:56 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-26 21:16:56 -Starting...
2019-03-26 21:16:56 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-26 21:16:56 -Started.
2019-03-26 21:16:56 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-26 21:16:57 -Failed to start connector [Connector[HTTP/1.1-8081]]
org.apache.catalina.LifecycleException: Failed to start component [Connector[HTTP/1.1-8081]]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:167)
	at org.apache.catalina.core.StandardService.addConnector(StandardService.java:225)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.addPreviouslyRemovedConnectors(TomcatWebServer.java:256)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:198)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.startWebServer(ServletWebServerApplicationContext.java:300)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.finishRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:553)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.bootdo.BootdoApplication.main(BootdoApplication.java:21)
Caused by: org.apache.catalina.LifecycleException: Protocol handler start failed
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1020)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
	... 13 common frames omitted
Caused by: java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Unknown Source)
	at sun.nio.ch.Net.bind(Unknown Source)
	at sun.nio.ch.ServerSocketChannelImpl.bind(Unknown Source)
	at sun.nio.ch.ServerSocketAdaptor.bind(Unknown Source)
	at org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:210)
	at org.apache.tomcat.util.net.AbstractEndpoint.start(AbstractEndpoint.java:1150)
	at org.apache.coyote.AbstractProtocol.start(AbstractProtocol.java:591)
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1018)
	... 14 common frames omitted
2019-03-26 21:16:57 -Pausing ProtocolHandler ["http-nio-8081"]
2019-03-26 21:16:57 -Stopping service [Tomcat]
2019-03-26 21:16:57 -The stop() method was called on component [StandardServer[-1]] after stop() had already been called. The second call will be ignored.
2019-03-26 21:16:57 -Stopping ProtocolHandler ["http-nio-8081"]
2019-03-26 21:16:57 -Destroying ProtocolHandler ["http-nio-8081"]
2019-03-26 21:16:57 -

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2019-03-26 21:16:57 -

***************************
APPLICATION FAILED TO START
***************************

Description:

The Tomcat connector configured to listen on port 8081 failed to start. The port may already be in use or the connector may be misconfigured.

Action:

Verify the connector's configuration, identify and stop any process that's listening on port 8081, or configure this application to listen on another port.

2019-03-26 21:16:57 -Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@70e9c95d: startup date [Tue Mar 26 21:16:27 CST 2019]; root of context hierarchy
2019-03-26 21:16:57 -Stopping beans in phase 2147483647
2019-03-26 21:16:57 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2019-03-26 21:16:57 -Stopping...
2019-03-26 21:16:57 -BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-26 21:16:57 -Stopped.
2019-03-26 21:16:57 -Unregistering JMX-exposed beans on shutdown
2019-03-26 21:16:57 -Unregistering JMX-exposed beans
2019-03-26 21:16:57 -Shutting down ExecutorService 'brokerChannelExecutor'
2019-03-26 21:16:57 -Shutting down ExecutorService 'messageBrokerTaskScheduler'
2019-03-26 21:16:57 -Shutting down ExecutorService 'clientOutboundChannelExecutor'
2019-03-26 21:16:57 -Shutting down ExecutorService 'clientInboundChannelExecutor'
2019-03-26 21:16:57 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutting down.
2019-03-26 21:16:57 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2019-03-26 21:16:57 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutdown complete.
2019-03-26 21:16:57 -Shutting down Quartz Scheduler
2019-03-26 21:17:39 -Starting BootdoApplication on ZJZL-20180906VX with PID 6952 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-26 21:17:39 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-26 21:17:39 -The following profiles are active: dev
2019-03-26 21:17:39 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@14f5da2c: startup date [Tue Mar 26 21:17:39 CST 2019]; root of context hierarchy
2019-03-26 21:17:52 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-26 21:17:56 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$47228cd0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 21:17:56 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$397bbb77] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 21:17:57 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 21:17:58 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 21:17:58 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 21:17:58 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-26 21:17:58 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-26 21:17:58 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 21:17:58 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 21:17:58 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 21:17:59 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 21:18:01 -Tomcat initialized with port(s): 8081 (http)
2019-03-26 21:18:01 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-26 21:18:01 -Starting service [Tomcat]
2019-03-26 21:18:01 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-26 21:18:01 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-26 21:18:02 -Initializing Spring embedded WebApplicationContext
2019-03-26 21:18:02 -Root WebApplicationContext: initialization completed in 22163 ms
2019-03-26 21:18:03 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-26 21:18:03 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-26 21:18:03 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-26 21:18:03 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-26 21:18:03 -Filter xssFilter was not registered (disabled)
2019-03-26 21:18:03 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-26 21:18:03 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-26 21:18:03 -Servlet statViewServlet mapped to [/druid/*]
2019-03-26 21:18:03 -Servlet dispatcherServlet mapped to [/]
2019-03-26 21:18:08 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@14f5da2c: startup date [Tue Mar 26 21:17:39 CST 2019]; root of context hierarchy
2019-03-26 21:18:09 -Using default implementation for ThreadExecutor
2019-03-26 21:18:09 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-26 21:18:09 -Quartz Scheduler v.2.2.1 created.
2019-03-26 21:18:09 -RAMJobStore initialized.
2019-03-26 21:18:09 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-26 21:18:09 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-26 21:18:09 -Quartz scheduler version: 2.2.1
2019-03-26 21:18:09 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@795eddda
2019-03-26 21:18:11 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-26 21:18:11 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-26 21:18:16 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-26 21:18:16 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-03-26 21:18:16 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-26 21:18:16 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-26 21:18:16 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-26 21:18:16 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-26 21:18:16 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-26 21:18:16 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-26 21:18:16 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-26 21:18:16 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-26 21:18:16 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-26 21:18:16 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 21:18:16 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-26 21:18:16 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-26 21:18:16 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 21:18:16 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-26 21:18:16 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-26 21:18:16 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-26 21:18:16 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-26 21:18:16 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-26 21:18:16 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-26 21:18:16 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-26 21:18:16 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 21:18:16 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-26 21:18:16 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-26 21:18:16 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 21:18:16 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-26 21:18:16 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-26 21:18:16 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 21:18:16 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-26 21:18:16 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-26 21:18:16 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-26 21:18:16 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-26 21:18:16 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-26 21:18:16 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-26 21:18:16 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-26 21:18:16 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-26 21:18:16 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-26 21:18:16 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 21:18:16 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-26 21:18:16 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-26 21:18:16 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 21:18:16 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-26 21:18:16 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-26 21:18:16 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-26 21:18:16 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-26 21:18:16 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 21:18:16 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-26 21:18:16 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-03-26 21:18:16 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-26 21:18:16 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-26 21:18:16 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-26 21:18:16 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-26 21:18:16 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-26 21:18:16 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-26 21:18:16 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-26 21:18:16 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-26 21:18:16 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-26 21:18:16 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-26 21:18:16 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 21:18:16 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-26 21:18:16 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-03-26 21:18:16 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-26 21:18:16 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-26 21:18:16 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-26 21:18:16 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-26 21:18:16 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-26 21:18:16 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-26 21:18:16 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 21:18:16 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-03-26 21:18:16 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 21:18:16 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-26 21:18:16 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-26 21:18:16 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-26 21:18:16 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-26 21:18:16 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-26 21:18:16 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-26 21:18:16 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-26 21:18:16 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 21:18:16 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-26 21:18:16 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-26 21:18:16 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-26 21:18:16 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-26 21:18:16 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-26 21:18:16 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-26 21:18:16 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-26 21:18:16 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-26 21:18:16 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-26 21:18:16 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-26 21:18:16 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 21:18:16 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-26 21:18:16 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 21:18:16 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-26 21:18:16 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-26 21:18:16 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-03-26 21:18:16 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-03-26 21:18:16 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-26 21:18:16 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-26 21:18:16 -Mapped "{[/moneyList/moneyList/LikeName],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.LikeName(org.springframework.ui.Model)
2019-03-26 21:18:16 -Mapped "{[/moneyList/moneyList/UserList],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-26 21:18:16 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-26 21:18:16 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-26 21:18:16 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-26 21:18:16 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-26 21:18:16 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 21:18:16 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-26 21:18:16 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 21:18:16 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-26 21:18:16 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-26 21:18:16 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-26 21:18:16 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-26 21:18:16 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-26 21:18:16 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-26 21:18:16 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 21:18:16 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-26 21:18:16 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 21:18:16 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-26 21:18:16 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-26 21:18:16 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-26 21:18:16 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-26 21:18:16 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-26 21:18:16 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-26 21:18:16 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 21:18:16 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-26 21:18:16 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 21:18:16 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-26 21:18:16 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-26 21:18:16 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-26 21:18:16 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-26 21:18:16 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-26 21:18:16 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-26 21:18:16 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-26 21:18:16 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 21:18:16 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-26 21:18:16 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-26 21:18:16 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 21:18:16 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 21:18:16 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-26 21:18:16 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-26 21:18:16 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-26 21:18:16 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-26 21:18:16 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-26 21:18:16 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-26 21:18:16 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 21:18:16 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-26 21:18:16 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 21:18:16 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-26 21:18:16 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-26 21:18:16 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 21:18:16 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-26 21:18:16 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-26 21:18:16 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-26 21:18:16 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-26 21:18:16 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-26 21:18:16 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-26 21:18:16 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-26 21:18:16 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 21:18:16 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-26 21:18:16 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-26 21:18:16 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-26 21:18:16 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-26 21:18:16 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-26 21:18:16 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-26 21:18:16 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-26 21:18:16 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-26 21:18:16 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-26 21:18:16 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-26 21:18:16 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-26 21:18:16 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-26 21:18:16 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 21:18:16 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-26 21:18:16 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-26 21:18:16 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-26 21:18:16 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-26 21:18:16 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-26 21:18:16 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-26 21:18:16 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-26 21:18:16 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-26 21:18:16 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-26 21:18:16 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-26 21:18:16 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-26 21:18:16 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-26 21:18:16 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 21:18:16 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-26 21:18:16 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-26 21:18:16 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-26 21:18:16 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-26 21:18:16 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 21:18:16 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-26 21:18:16 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-26 21:18:16 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-26 21:18:16 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 21:18:16 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-26 21:18:16 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-26 21:18:16 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-26 21:18:16 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-26 21:18:16 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-26 21:18:16 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-26 21:18:16 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-26 21:18:16 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-26 21:18:16 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-26 21:18:16 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-26 21:18:16 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-26 21:18:16 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-26 21:18:16 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-26 21:18:16 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-26 21:18:16 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-26 21:18:16 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-26 21:18:16 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-26 21:18:16 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 21:18:16 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-26 21:18:16 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-26 21:18:16 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 21:18:16 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-26 21:18:16 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 21:18:16 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-26 21:18:16 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-26 21:18:16 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-26 21:18:16 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-26 21:18:16 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-26 21:18:16 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-26 21:18:16 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 21:18:16 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-26 21:18:16 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 21:18:16 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-26 21:18:16 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-26 21:18:16 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-03-26 21:18:16 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-26 21:18:16 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-03-26 21:18:16 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-26 21:18:16 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-26 21:18:16 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-26 21:18:16 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-26 21:18:17 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-26 21:18:17 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-26 21:18:17 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-26 21:18:18 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-26 21:18:19 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@14f5da2c: startup date [Tue Mar 26 21:17:39 CST 2019]; root of context hierarchy
2019-03-26 21:18:19 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-26 21:18:19 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-26 21:18:19 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-26 21:18:19 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-26 21:18:20 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-26 21:18:24 -Registering beans for JMX exposure on startup
2019-03-26 21:18:24 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-26 21:18:24 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-26 21:18:24 -Starting beans in phase 2147483647
2019-03-26 21:18:24 -Context refreshed
2019-03-26 21:18:24 -Found 1 custom documentation plugin(s)
2019-03-26 21:18:24 -Scanning for api listing references
2019-03-26 21:18:25 -Generating unique operation named: removeUsingPOST_1
2019-03-26 21:18:25 -Generating unique operation named: addUsingGET_1
2019-03-26 21:18:25 -Generating unique operation named: editUsingGET_1
2019-03-26 21:18:25 -Generating unique operation named: listUsingGET_1
2019-03-26 21:18:25 -Generating unique operation named: removeUsingPOST_2
2019-03-26 21:18:25 -Generating unique operation named: removeUsingPOST_3
2019-03-26 21:18:25 -Generating unique operation named: saveUsingPOST_1
2019-03-26 21:18:25 -Generating unique operation named: updateUsingGET_1
2019-03-26 21:18:25 -Generating unique operation named: updateUsingHEAD_1
2019-03-26 21:18:25 -Generating unique operation named: updateUsingPOST_1
2019-03-26 21:18:25 -Generating unique operation named: updateUsingPUT_1
2019-03-26 21:18:25 -Generating unique operation named: updateUsingPATCH_1
2019-03-26 21:18:25 -Generating unique operation named: updateUsingDELETE_1
2019-03-26 21:18:25 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-26 21:18:25 -Generating unique operation named: updateUsingTRACE_1
2019-03-26 21:18:25 -Generating unique operation named: addUsingGET_2
2019-03-26 21:18:25 -Generating unique operation named: editUsingGET_2
2019-03-26 21:18:25 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-26 21:18:25 -Generating unique operation named: listUsingGET_2
2019-03-26 21:18:26 -Generating unique operation named: removeUsingPOST_4
2019-03-26 21:18:26 -Generating unique operation named: removeUsingPOST_5
2019-03-26 21:18:26 -Generating unique operation named: saveUsingPOST_2
2019-03-26 21:18:26 -Generating unique operation named: updateUsingPOST_2
2019-03-26 21:18:26 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-26 21:18:26 -Generating unique operation named: addUsingGET_3
2019-03-26 21:18:26 -Generating unique operation named: editUsingGET_3
2019-03-26 21:18:26 -Generating unique operation named: listUsingGET_3
2019-03-26 21:18:26 -Generating unique operation named: removeUsingPOST_6
2019-03-26 21:18:26 -Generating unique operation named: removeUsingPOST_7
2019-03-26 21:18:26 -Generating unique operation named: saveUsingPOST_3
2019-03-26 21:18:26 -Generating unique operation named: updateUsingGET_2
2019-03-26 21:18:26 -Generating unique operation named: updateUsingHEAD_2
2019-03-26 21:18:26 -Generating unique operation named: updateUsingPOST_3
2019-03-26 21:18:26 -Generating unique operation named: updateUsingPUT_2
2019-03-26 21:18:26 -Generating unique operation named: updateUsingPATCH_2
2019-03-26 21:18:26 -Generating unique operation named: updateUsingDELETE_2
2019-03-26 21:18:26 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-26 21:18:26 -Generating unique operation named: updateUsingTRACE_2
2019-03-26 21:18:26 -Generating unique operation named: addUsingGET_4
2019-03-26 21:18:26 -Generating unique operation named: editUsingGET_4
2019-03-26 21:18:26 -Generating unique operation named: listUsingGET_4
2019-03-26 21:18:26 -Generating unique operation named: removeUsingPOST_8
2019-03-26 21:18:26 -Generating unique operation named: removeUsingPOST_9
2019-03-26 21:18:26 -Generating unique operation named: saveUsingPOST_4
2019-03-26 21:18:26 -Generating unique operation named: updateUsingGET_3
2019-03-26 21:18:26 -Generating unique operation named: updateUsingHEAD_3
2019-03-26 21:18:26 -Generating unique operation named: updateUsingPOST_4
2019-03-26 21:18:26 -Generating unique operation named: updateUsingPUT_3
2019-03-26 21:18:26 -Generating unique operation named: updateUsingPATCH_3
2019-03-26 21:18:26 -Generating unique operation named: updateUsingDELETE_3
2019-03-26 21:18:26 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-26 21:18:26 -Generating unique operation named: updateUsingTRACE_3
2019-03-26 21:18:26 -Generating unique operation named: ElecUsingGET_1
2019-03-26 21:18:26 -Generating unique operation named: addUsingGET_5
2019-03-26 21:18:26 -Generating unique operation named: editUsingGET_5
2019-03-26 21:18:26 -Generating unique operation named: listUsingGET_5
2019-03-26 21:18:26 -Generating unique operation named: removeUsingPOST_10
2019-03-26 21:18:27 -Generating unique operation named: removeUsingPOST_11
2019-03-26 21:18:27 -Generating unique operation named: saveUsingPOST_5
2019-03-26 21:18:27 -Generating unique operation named: updateUsingGET_4
2019-03-26 21:18:27 -Generating unique operation named: updateUsingHEAD_4
2019-03-26 21:18:27 -Generating unique operation named: updateUsingPOST_5
2019-03-26 21:18:27 -Generating unique operation named: updateUsingPUT_4
2019-03-26 21:18:27 -Generating unique operation named: updateUsingPATCH_4
2019-03-26 21:18:27 -Generating unique operation named: updateUsingDELETE_4
2019-03-26 21:18:27 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-26 21:18:27 -Generating unique operation named: updateUsingTRACE_4
2019-03-26 21:18:27 -Generating unique operation named: editUsingGET_6
2019-03-26 21:18:27 -Generating unique operation named: listUsingGET_6
2019-03-26 21:18:27 -Generating unique operation named: updateUsingPOST_6
2019-03-26 21:18:27 -Generating unique operation named: addUsingGET_6
2019-03-26 21:18:27 -Generating unique operation named: editUsingGET_7
2019-03-26 21:18:27 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-26 21:18:27 -Generating unique operation named: listUsingGET_7
2019-03-26 21:18:27 -Generating unique operation named: removeUsingPOST_12
2019-03-26 21:18:27 -Generating unique operation named: removeUsingPOST_13
2019-03-26 21:18:27 -Generating unique operation named: saveUsingPOST_6
2019-03-26 21:18:27 -Generating unique operation named: updateUsingGET_5
2019-03-26 21:18:27 -Generating unique operation named: updateUsingHEAD_5
2019-03-26 21:18:27 -Generating unique operation named: updateUsingPOST_7
2019-03-26 21:18:27 -Generating unique operation named: updateUsingPUT_5
2019-03-26 21:18:27 -Generating unique operation named: updateUsingPATCH_5
2019-03-26 21:18:27 -Generating unique operation named: updateUsingDELETE_5
2019-03-26 21:18:27 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-26 21:18:27 -Generating unique operation named: updateUsingTRACE_5
2019-03-26 21:18:27 -Generating unique operation named: exprotExcelUsingGET_4
2019-03-26 21:18:27 -Generating unique operation named: addUsingGET_7
2019-03-26 21:18:27 -Generating unique operation named: editUsingGET_8
2019-03-26 21:18:27 -Generating unique operation named: listUsingGET_8
2019-03-26 21:18:27 -Generating unique operation named: removeUsingPOST_14
2019-03-26 21:18:27 -Generating unique operation named: removeUsingPOST_15
2019-03-26 21:18:27 -Generating unique operation named: saveUsingPOST_7
2019-03-26 21:18:27 -Generating unique operation named: updateUsingGET_6
2019-03-26 21:18:27 -Generating unique operation named: updateUsingHEAD_6
2019-03-26 21:18:27 -Generating unique operation named: updateUsingPOST_8
2019-03-26 21:18:27 -Generating unique operation named: updateUsingPUT_6
2019-03-26 21:18:27 -Generating unique operation named: updateUsingPATCH_6
2019-03-26 21:18:27 -Generating unique operation named: updateUsingDELETE_6
2019-03-26 21:18:27 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-26 21:18:27 -Generating unique operation named: updateUsingTRACE_6
2019-03-26 21:18:27 -Generating unique operation named: addUsingGET_8
2019-03-26 21:18:27 -Generating unique operation named: editUsingGET_9
2019-03-26 21:18:27 -Generating unique operation named: listUsingGET_9
2019-03-26 21:18:27 -Generating unique operation named: removeUsingPOST_16
2019-03-26 21:18:27 -Generating unique operation named: removeUsingPOST_17
2019-03-26 21:18:27 -Generating unique operation named: saveUsingPOST_8
2019-03-26 21:18:27 -Generating unique operation named: updateUsingGET_7
2019-03-26 21:18:27 -Generating unique operation named: updateUsingHEAD_7
2019-03-26 21:18:27 -Generating unique operation named: updateUsingPOST_9
2019-03-26 21:18:27 -Generating unique operation named: updateUsingPUT_7
2019-03-26 21:18:27 -Generating unique operation named: updateUsingPATCH_7
2019-03-26 21:18:27 -Generating unique operation named: updateUsingDELETE_7
2019-03-26 21:18:27 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-26 21:18:27 -Generating unique operation named: updateUsingTRACE_7
2019-03-26 21:18:27 -Generating unique operation named: addUsingGET_9
2019-03-26 21:18:27 -Generating unique operation named: editUsingGET_10
2019-03-26 21:18:27 -Generating unique operation named: infoUsingGET_1
2019-03-26 21:18:27 -Generating unique operation named: infoUsingHEAD_1
2019-03-26 21:18:27 -Generating unique operation named: infoUsingPOST_1
2019-03-26 21:18:27 -Generating unique operation named: infoUsingPUT_1
2019-03-26 21:18:27 -Generating unique operation named: infoUsingPATCH_1
2019-03-26 21:18:27 -Generating unique operation named: infoUsingDELETE_1
2019-03-26 21:18:27 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-26 21:18:27 -Generating unique operation named: infoUsingTRACE_1
2019-03-26 21:18:27 -Generating unique operation named: listUsingGET_10
2019-03-26 21:18:27 -Generating unique operation named: removeUsingPOST_18
2019-03-26 21:18:27 -Generating unique operation named: removeUsingPOST_19
2019-03-26 21:18:28 -Generating unique operation named: saveUsingPOST_9
2019-03-26 21:18:28 -Generating unique operation named: updateUsingPOST_10
2019-03-26 21:18:28 -Generating unique operation named: listUsingGET_11
2019-03-26 21:18:28 -Generating unique operation named: removeUsingPOST_20
2019-03-26 21:18:28 -Generating unique operation named: welcomeUsingGET_1
2019-03-26 21:18:28 -Generating unique operation named: addUsingGET_10
2019-03-26 21:18:28 -Generating unique operation named: editUsingGET_11
2019-03-26 21:18:28 -Generating unique operation named: listUsingGET_12
2019-03-26 21:18:28 -Generating unique operation named: removeUsingPOST_21
2019-03-26 21:18:28 -Generating unique operation named: saveUsingPOST_10
2019-03-26 21:18:28 -Generating unique operation named: treeUsingGET_1
2019-03-26 21:18:28 -Generating unique operation named: treeUsingGET_2
2019-03-26 21:18:28 -Generating unique operation named: updateUsingPOST_11
2019-03-26 21:18:28 -Generating unique operation named: addUsingGET_11
2019-03-26 21:18:28 -Generating unique operation named: editUsingGET_12
2019-03-26 21:18:28 -Generating unique operation named: listUsingGET_13
2019-03-26 21:18:28 -Generating unique operation named: removeUsingPOST_22
2019-03-26 21:18:28 -Generating unique operation named: removeUsingPOST_23
2019-03-26 21:18:28 -Generating unique operation named: saveUsingPOST_11
2019-03-26 21:18:28 -Generating unique operation named: updateUsingGET_8
2019-03-26 21:18:28 -Generating unique operation named: updateUsingHEAD_8
2019-03-26 21:18:28 -Generating unique operation named: updateUsingPOST_12
2019-03-26 21:18:28 -Generating unique operation named: updateUsingPUT_8
2019-03-26 21:18:28 -Generating unique operation named: updateUsingPATCH_8
2019-03-26 21:18:28 -Generating unique operation named: updateUsingDELETE_8
2019-03-26 21:18:28 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-26 21:18:29 -Generating unique operation named: updateUsingTRACE_8
2019-03-26 21:18:29 -Generating unique operation named: addUsingGET_12
2019-03-26 21:18:29 -Generating unique operation named: editUsingGET_13
2019-03-26 21:18:29 -Generating unique operation named: listUsingGET_14
2019-03-26 21:18:29 -Generating unique operation named: removeUsingPOST_24
2019-03-26 21:18:29 -Generating unique operation named: removeUsingPOST_25
2019-03-26 21:18:29 -Generating unique operation named: saveUsingPOST_12
2019-03-26 21:18:29 -Generating unique operation named: updateUsingGET_9
2019-03-26 21:18:29 -Generating unique operation named: updateUsingHEAD_9
2019-03-26 21:18:29 -Generating unique operation named: updateUsingPOST_13
2019-03-26 21:18:29 -Generating unique operation named: updateUsingPUT_9
2019-03-26 21:18:29 -Generating unique operation named: updateUsingPATCH_9
2019-03-26 21:18:29 -Generating unique operation named: updateUsingDELETE_9
2019-03-26 21:18:29 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-26 21:18:29 -Generating unique operation named: updateUsingTRACE_9
2019-03-26 21:18:29 -Generating unique operation named: addUsingGET_13
2019-03-26 21:18:29 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-26 21:18:29 -Generating unique operation named: editUsingGET_14
2019-03-26 21:18:29 -Generating unique operation named: listUsingGET_15
2019-03-26 21:18:29 -Generating unique operation named: saveUsingPOST_13
2019-03-26 21:18:29 -Generating unique operation named: saveUsingPOST_14
2019-03-26 21:18:29 -Generating unique operation named: updateUsingPOST_14
2019-03-26 21:18:29 -Generating unique operation named: listUsingGET_16
2019-03-26 21:18:29 -Generating unique operation named: listUsingHEAD_1
2019-03-26 21:18:29 -Generating unique operation named: listUsingPOST_1
2019-03-26 21:18:29 -Generating unique operation named: listUsingPUT_1
2019-03-26 21:18:29 -Generating unique operation named: listUsingPATCH_1
2019-03-26 21:18:29 -Generating unique operation named: listUsingDELETE_1
2019-03-26 21:18:29 -Generating unique operation named: listUsingOPTIONS_1
2019-03-26 21:18:29 -Generating unique operation named: listUsingTRACE_1
2019-03-26 21:18:29 -Generating unique operation named: addUsingGET_14
2019-03-26 21:18:29 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-26 21:18:29 -Generating unique operation named: editUsingGET_15
2019-03-26 21:18:29 -Generating unique operation named: listUsingGET_17
2019-03-26 21:18:29 -Generating unique operation named: removeUsingPOST_26
2019-03-26 21:18:29 -Generating unique operation named: saveUsingPOST_15
2019-03-26 21:18:29 -Generating unique operation named: treeUsingGET_3
2019-03-26 21:18:29 -Generating unique operation named: treeViewUsingGET_1
2019-03-26 21:18:29 -Generating unique operation named: updateUsingPOST_15
2019-03-26 21:18:30 -Generating unique operation named: addUsingGET_15
2019-03-26 21:18:30 -Generating unique operation named: editUsingGET_16
2019-03-26 21:18:30 -Generating unique operation named: exprotExcelUsingGET_5
2019-03-26 21:18:30 -Generating unique operation named: listUsingGET_18
2019-03-26 21:18:30 -Generating unique operation named: removeUsingPOST_27
2019-03-26 21:18:30 -Generating unique operation named: removeUsingPOST_28
2019-03-26 21:18:30 -Generating unique operation named: saveUsingPOST_16
2019-03-26 21:18:30 -Generating unique operation named: updateUsingGET_10
2019-03-26 21:18:30 -Generating unique operation named: updateUsingHEAD_10
2019-03-26 21:18:30 -Generating unique operation named: updateUsingPOST_16
2019-03-26 21:18:30 -Generating unique operation named: updateUsingPUT_10
2019-03-26 21:18:30 -Generating unique operation named: updateUsingPATCH_10
2019-03-26 21:18:30 -Generating unique operation named: updateUsingDELETE_10
2019-03-26 21:18:30 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-26 21:18:30 -Generating unique operation named: updateUsingTRACE_10
2019-03-26 21:18:30 -Generating unique operation named: exprotExcelUsingGET_6
2019-03-26 21:18:30 -Generating unique operation named: addUsingGET_16
2019-03-26 21:18:30 -Generating unique operation named: editUsingGET_17
2019-03-26 21:18:30 -Generating unique operation named: listUsingGET_19
2019-03-26 21:18:30 -Generating unique operation named: removeUsingPOST_29
2019-03-26 21:18:30 -Generating unique operation named: removeUsingPOST_30
2019-03-26 21:18:30 -Generating unique operation named: saveUsingPOST_17
2019-03-26 21:18:30 -Generating unique operation named: updateUsingGET_11
2019-03-26 21:18:30 -Generating unique operation named: updateUsingHEAD_11
2019-03-26 21:18:30 -Generating unique operation named: updateUsingPOST_17
2019-03-26 21:18:30 -Generating unique operation named: updateUsingPUT_11
2019-03-26 21:18:30 -Generating unique operation named: updateUsingPATCH_11
2019-03-26 21:18:30 -Generating unique operation named: updateUsingDELETE_11
2019-03-26 21:18:30 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-26 21:18:30 -Generating unique operation named: updateUsingTRACE_11
2019-03-26 21:18:30 -Generating unique operation named: addUsingGET_17
2019-03-26 21:18:30 -Generating unique operation named: editUsingGET_18
2019-03-26 21:18:30 -Generating unique operation named: listUsingGET_20
2019-03-26 21:18:30 -Generating unique operation named: removeUsingPOST_31
2019-03-26 21:18:30 -Generating unique operation named: removeUsingPOST_32
2019-03-26 21:18:30 -Generating unique operation named: saveUsingPOST_18
2019-03-26 21:18:30 -Generating unique operation named: updateUsingGET_12
2019-03-26 21:18:30 -Generating unique operation named: updateUsingHEAD_12
2019-03-26 21:18:30 -Generating unique operation named: updateUsingPOST_18
2019-03-26 21:18:30 -Generating unique operation named: updateUsingPUT_12
2019-03-26 21:18:30 -Generating unique operation named: updateUsingPATCH_12
2019-03-26 21:18:30 -Generating unique operation named: updateUsingDELETE_12
2019-03-26 21:18:30 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-26 21:18:30 -Generating unique operation named: updateUsingTRACE_12
2019-03-26 21:18:30 -Starting Quartz Scheduler now
2019-03-26 21:18:30 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-26 21:18:30 -Starting...
2019-03-26 21:18:30 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-26 21:18:30 -Started.
2019-03-26 21:18:30 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-26 21:18:30 -Failed to start connector [Connector[HTTP/1.1-8081]]
org.apache.catalina.LifecycleException: Failed to start component [Connector[HTTP/1.1-8081]]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:167)
	at org.apache.catalina.core.StandardService.addConnector(StandardService.java:225)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.addPreviouslyRemovedConnectors(TomcatWebServer.java:256)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:198)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.startWebServer(ServletWebServerApplicationContext.java:300)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.finishRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:553)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.bootdo.BootdoApplication.main(BootdoApplication.java:21)
Caused by: org.apache.catalina.LifecycleException: Protocol handler start failed
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1020)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
	... 13 common frames omitted
Caused by: java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Unknown Source)
	at sun.nio.ch.Net.bind(Unknown Source)
	at sun.nio.ch.ServerSocketChannelImpl.bind(Unknown Source)
	at sun.nio.ch.ServerSocketAdaptor.bind(Unknown Source)
	at org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:210)
	at org.apache.tomcat.util.net.AbstractEndpoint.start(AbstractEndpoint.java:1150)
	at org.apache.coyote.AbstractProtocol.start(AbstractProtocol.java:591)
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1018)
	... 14 common frames omitted
2019-03-26 21:18:30 -Pausing ProtocolHandler ["http-nio-8081"]
2019-03-26 21:18:30 -Stopping service [Tomcat]
2019-03-26 21:18:30 -The stop() method was called on component [StandardServer[-1]] after stop() had already been called. The second call will be ignored.
2019-03-26 21:18:30 -Stopping ProtocolHandler ["http-nio-8081"]
2019-03-26 21:18:30 -Destroying ProtocolHandler ["http-nio-8081"]
2019-03-26 21:18:30 -

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2019-03-26 21:18:30 -

***************************
APPLICATION FAILED TO START
***************************

Description:

The Tomcat connector configured to listen on port 8081 failed to start. The port may already be in use or the connector may be misconfigured.

Action:

Verify the connector's configuration, identify and stop any process that's listening on port 8081, or configure this application to listen on another port.

2019-03-26 21:18:30 -Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@14f5da2c: startup date [Tue Mar 26 21:17:39 CST 2019]; root of context hierarchy
2019-03-26 21:18:30 -Stopping beans in phase 2147483647
2019-03-26 21:18:30 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2019-03-26 21:18:30 -Stopping...
2019-03-26 21:18:30 -BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-26 21:18:30 -Stopped.
2019-03-26 21:18:31 -Unregistering JMX-exposed beans on shutdown
2019-03-26 21:18:31 -Unregistering JMX-exposed beans
2019-03-26 21:18:31 -Shutting down ExecutorService 'brokerChannelExecutor'
2019-03-26 21:18:31 -Shutting down ExecutorService 'messageBrokerTaskScheduler'
2019-03-26 21:18:31 -Shutting down ExecutorService 'clientOutboundChannelExecutor'
2019-03-26 21:18:31 -Shutting down ExecutorService 'clientInboundChannelExecutor'
2019-03-26 21:18:31 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutting down.
2019-03-26 21:18:31 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2019-03-26 21:18:31 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutdown complete.
2019-03-26 21:18:31 -Shutting down Quartz Scheduler
2019-03-26 21:27:55 -Starting BootdoApplication on ZJZL-20180906VX with PID 13020 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-26 21:27:55 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-26 21:27:55 -The following profiles are active: dev
2019-03-26 21:27:56 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@73c60324: startup date [Tue Mar 26 21:27:56 CST 2019]; root of context hierarchy
2019-03-26 21:28:01 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-26 21:28:05 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$3a55a580] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 21:28:05 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$2caed427] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 21:28:06 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 21:28:07 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 21:28:07 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 21:28:07 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-26 21:28:07 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-26 21:28:07 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 21:28:07 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 21:28:07 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 21:28:07 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 21:28:08 -Tomcat initialized with port(s): 8081 (http)
2019-03-26 21:28:08 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-26 21:28:08 -Starting service [Tomcat]
2019-03-26 21:28:08 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-26 21:28:09 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-26 21:28:09 -Initializing Spring embedded WebApplicationContext
2019-03-26 21:28:09 -Root WebApplicationContext: initialization completed in 13746 ms
2019-03-26 21:28:10 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-26 21:28:10 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-26 21:28:10 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-26 21:28:10 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-26 21:28:10 -Filter xssFilter was not registered (disabled)
2019-03-26 21:28:10 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-26 21:28:10 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-26 21:28:10 -Servlet statViewServlet mapped to [/druid/*]
2019-03-26 21:28:10 -Servlet dispatcherServlet mapped to [/]
2019-03-26 21:28:14 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@73c60324: startup date [Tue Mar 26 21:27:56 CST 2019]; root of context hierarchy
2019-03-26 21:28:15 -Using default implementation for ThreadExecutor
2019-03-26 21:28:15 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-26 21:28:15 -Quartz Scheduler v.2.2.1 created.
2019-03-26 21:28:15 -RAMJobStore initialized.
2019-03-26 21:28:15 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-26 21:28:15 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-26 21:28:15 -Quartz scheduler version: 2.2.1
2019-03-26 21:28:15 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@77b27b57
2019-03-26 21:28:16 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-26 21:28:16 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-26 21:28:21 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-03-26 21:28:22 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-26 21:28:22 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-26 21:28:22 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-26 21:28:22 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-26 21:28:22 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-26 21:28:22 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-26 21:28:22 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-26 21:28:22 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-26 21:28:22 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-26 21:28:22 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-26 21:28:22 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 21:28:22 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-26 21:28:22 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-26 21:28:22 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-26 21:28:22 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 21:28:22 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-26 21:28:22 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-26 21:28:22 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-26 21:28:22 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-26 21:28:22 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-26 21:28:22 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-26 21:28:22 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 21:28:22 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-26 21:28:22 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-26 21:28:22 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 21:28:22 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-26 21:28:22 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-26 21:28:22 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 21:28:22 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-26 21:28:22 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-26 21:28:22 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-26 21:28:22 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-26 21:28:22 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-26 21:28:22 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-26 21:28:22 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-26 21:28:22 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-26 21:28:22 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-26 21:28:22 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 21:28:22 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-26 21:28:22 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-26 21:28:22 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 21:28:22 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-26 21:28:22 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-26 21:28:22 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-26 21:28:22 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-26 21:28:22 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 21:28:22 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-26 21:28:22 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-03-26 21:28:22 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-26 21:28:22 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-26 21:28:22 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-26 21:28:22 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-26 21:28:22 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-26 21:28:22 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-26 21:28:22 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-26 21:28:22 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-26 21:28:22 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-26 21:28:22 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-26 21:28:22 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 21:28:22 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-26 21:28:22 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-03-26 21:28:22 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-26 21:28:22 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-26 21:28:22 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-26 21:28:22 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-26 21:28:22 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-26 21:28:22 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-26 21:28:22 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 21:28:22 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-03-26 21:28:22 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 21:28:22 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-26 21:28:22 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-26 21:28:22 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-26 21:28:22 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-26 21:28:22 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-26 21:28:22 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-26 21:28:22 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-26 21:28:22 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 21:28:22 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-26 21:28:22 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-26 21:28:22 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-26 21:28:22 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-26 21:28:22 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-26 21:28:22 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-26 21:28:22 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-26 21:28:22 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-26 21:28:22 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-26 21:28:22 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-26 21:28:22 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 21:28:22 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-26 21:28:22 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 21:28:22 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-26 21:28:22 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-03-26 21:28:22 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-26 21:28:22 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-03-26 21:28:22 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-26 21:28:22 -Mapped "{[/moneyList/moneyList/UserList],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-26 21:28:22 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-26 21:28:22 -Mapped "{[/moneyList/moneyList/LikeName],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.LikeName(org.springframework.ui.Model)
2019-03-26 21:28:22 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-26 21:28:22 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-26 21:28:22 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-26 21:28:22 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-26 21:28:22 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 21:28:22 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-26 21:28:22 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 21:28:22 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-26 21:28:22 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-26 21:28:22 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-26 21:28:22 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-26 21:28:22 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-26 21:28:22 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-26 21:28:22 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 21:28:22 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-26 21:28:22 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 21:28:22 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-26 21:28:22 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-26 21:28:22 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-26 21:28:22 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-26 21:28:22 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-26 21:28:22 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-26 21:28:22 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 21:28:22 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-26 21:28:22 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 21:28:22 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-26 21:28:22 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-26 21:28:22 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-26 21:28:22 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-26 21:28:22 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-26 21:28:22 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-26 21:28:22 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-26 21:28:22 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 21:28:22 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-26 21:28:22 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-26 21:28:22 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 21:28:22 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-26 21:28:22 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 21:28:22 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-26 21:28:22 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-26 21:28:22 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-26 21:28:22 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-26 21:28:22 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-26 21:28:22 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 21:28:22 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-26 21:28:22 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 21:28:22 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-26 21:28:22 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 21:28:22 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-26 21:28:22 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-26 21:28:22 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-26 21:28:22 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-26 21:28:22 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-26 21:28:22 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-26 21:28:22 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-26 21:28:22 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-26 21:28:22 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 21:28:22 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-26 21:28:22 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-26 21:28:22 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-26 21:28:22 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-26 21:28:22 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-26 21:28:22 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-26 21:28:22 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-26 21:28:22 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-26 21:28:22 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-26 21:28:22 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-26 21:28:22 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-26 21:28:22 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-26 21:28:22 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 21:28:22 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-26 21:28:22 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-26 21:28:22 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-26 21:28:22 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-26 21:28:22 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-26 21:28:22 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-26 21:28:22 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-26 21:28:22 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-26 21:28:22 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-26 21:28:22 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-26 21:28:22 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-26 21:28:22 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 21:28:22 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-26 21:28:22 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-26 21:28:22 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-26 21:28:22 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-26 21:28:22 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-26 21:28:22 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 21:28:22 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-26 21:28:22 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-26 21:28:22 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-26 21:28:22 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 21:28:22 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-26 21:28:22 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-26 21:28:22 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-26 21:28:22 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-26 21:28:22 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-26 21:28:22 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-26 21:28:22 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-26 21:28:22 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-26 21:28:22 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-26 21:28:22 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-26 21:28:22 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-26 21:28:22 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-26 21:28:22 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-26 21:28:22 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-26 21:28:22 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-26 21:28:22 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-26 21:28:22 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-26 21:28:22 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 21:28:22 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-26 21:28:22 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-26 21:28:22 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 21:28:22 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-26 21:28:22 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 21:28:22 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-26 21:28:22 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-26 21:28:22 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-26 21:28:22 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-26 21:28:22 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-26 21:28:22 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-26 21:28:22 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 21:28:22 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-26 21:28:22 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 21:28:22 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-26 21:28:22 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-03-26 21:28:22 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-26 21:28:22 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-03-26 21:28:22 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-26 21:28:22 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-26 21:28:22 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-26 21:28:22 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-26 21:28:22 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-26 21:28:25 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-26 21:28:26 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-26 21:28:26 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-26 21:28:27 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-26 21:28:27 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@73c60324: startup date [Tue Mar 26 21:27:56 CST 2019]; root of context hierarchy
2019-03-26 21:28:28 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-26 21:28:28 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-26 21:28:28 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-26 21:28:28 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-26 21:28:28 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-26 21:28:32 -Registering beans for JMX exposure on startup
2019-03-26 21:28:32 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-26 21:28:32 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-26 21:28:32 -Starting beans in phase 2147483647
2019-03-26 21:28:32 -Context refreshed
2019-03-26 21:28:32 -Found 1 custom documentation plugin(s)
2019-03-26 21:28:32 -Scanning for api listing references
2019-03-26 21:28:34 -Generating unique operation named: removeUsingPOST_1
2019-03-26 21:28:34 -Generating unique operation named: addUsingGET_1
2019-03-26 21:28:34 -Generating unique operation named: editUsingGET_1
2019-03-26 21:28:34 -Generating unique operation named: listUsingGET_1
2019-03-26 21:28:34 -Generating unique operation named: removeUsingPOST_2
2019-03-26 21:28:34 -Generating unique operation named: removeUsingPOST_3
2019-03-26 21:28:34 -Generating unique operation named: saveUsingPOST_1
2019-03-26 21:28:34 -Generating unique operation named: updateUsingGET_1
2019-03-26 21:28:34 -Generating unique operation named: updateUsingHEAD_1
2019-03-26 21:28:34 -Generating unique operation named: updateUsingPOST_1
2019-03-26 21:28:34 -Generating unique operation named: updateUsingPUT_1
2019-03-26 21:28:34 -Generating unique operation named: updateUsingPATCH_1
2019-03-26 21:28:34 -Generating unique operation named: updateUsingDELETE_1
2019-03-26 21:28:34 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-26 21:28:34 -Generating unique operation named: updateUsingTRACE_1
2019-03-26 21:28:34 -Generating unique operation named: addUsingGET_2
2019-03-26 21:28:34 -Generating unique operation named: editUsingGET_2
2019-03-26 21:28:35 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-26 21:28:35 -Generating unique operation named: listUsingGET_2
2019-03-26 21:28:35 -Generating unique operation named: removeUsingPOST_4
2019-03-26 21:28:35 -Generating unique operation named: removeUsingPOST_5
2019-03-26 21:28:35 -Generating unique operation named: saveUsingPOST_2
2019-03-26 21:28:35 -Generating unique operation named: updateUsingPOST_2
2019-03-26 21:28:35 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-26 21:28:35 -Generating unique operation named: addUsingGET_3
2019-03-26 21:28:35 -Generating unique operation named: editUsingGET_3
2019-03-26 21:28:35 -Generating unique operation named: listUsingGET_3
2019-03-26 21:28:35 -Generating unique operation named: removeUsingPOST_6
2019-03-26 21:28:35 -Generating unique operation named: removeUsingPOST_7
2019-03-26 21:28:35 -Generating unique operation named: saveUsingPOST_3
2019-03-26 21:28:35 -Generating unique operation named: updateUsingGET_2
2019-03-26 21:28:35 -Generating unique operation named: updateUsingHEAD_2
2019-03-26 21:28:35 -Generating unique operation named: updateUsingPOST_3
2019-03-26 21:28:35 -Generating unique operation named: updateUsingPUT_2
2019-03-26 21:28:35 -Generating unique operation named: updateUsingPATCH_2
2019-03-26 21:28:35 -Generating unique operation named: updateUsingDELETE_2
2019-03-26 21:28:35 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-26 21:28:35 -Generating unique operation named: updateUsingTRACE_2
2019-03-26 21:28:35 -Generating unique operation named: addUsingGET_4
2019-03-26 21:28:35 -Generating unique operation named: editUsingGET_4
2019-03-26 21:28:35 -Generating unique operation named: listUsingGET_4
2019-03-26 21:28:35 -Generating unique operation named: removeUsingPOST_8
2019-03-26 21:28:35 -Generating unique operation named: removeUsingPOST_9
2019-03-26 21:28:35 -Generating unique operation named: saveUsingPOST_4
2019-03-26 21:28:35 -Generating unique operation named: updateUsingGET_3
2019-03-26 21:28:35 -Generating unique operation named: updateUsingHEAD_3
2019-03-26 21:28:35 -Generating unique operation named: updateUsingPOST_4
2019-03-26 21:28:35 -Generating unique operation named: updateUsingPUT_3
2019-03-26 21:28:35 -Generating unique operation named: updateUsingPATCH_3
2019-03-26 21:28:35 -Generating unique operation named: updateUsingDELETE_3
2019-03-26 21:28:35 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-26 21:28:35 -Generating unique operation named: updateUsingTRACE_3
2019-03-26 21:28:35 -Generating unique operation named: ElecUsingGET_1
2019-03-26 21:28:35 -Generating unique operation named: addUsingGET_5
2019-03-26 21:28:35 -Generating unique operation named: editUsingGET_5
2019-03-26 21:28:35 -Generating unique operation named: listUsingGET_5
2019-03-26 21:28:35 -Generating unique operation named: removeUsingPOST_10
2019-03-26 21:28:35 -Generating unique operation named: removeUsingPOST_11
2019-03-26 21:28:35 -Generating unique operation named: saveUsingPOST_5
2019-03-26 21:28:35 -Generating unique operation named: updateUsingGET_4
2019-03-26 21:28:35 -Generating unique operation named: updateUsingHEAD_4
2019-03-26 21:28:35 -Generating unique operation named: updateUsingPOST_5
2019-03-26 21:28:35 -Generating unique operation named: updateUsingPUT_4
2019-03-26 21:28:35 -Generating unique operation named: updateUsingPATCH_4
2019-03-26 21:28:35 -Generating unique operation named: updateUsingDELETE_4
2019-03-26 21:28:35 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-26 21:28:35 -Generating unique operation named: updateUsingTRACE_4
2019-03-26 21:28:36 -Generating unique operation named: editUsingGET_6
2019-03-26 21:28:36 -Generating unique operation named: listUsingGET_6
2019-03-26 21:28:36 -Generating unique operation named: updateUsingPOST_6
2019-03-26 21:28:36 -Generating unique operation named: addUsingGET_6
2019-03-26 21:28:36 -Generating unique operation named: editUsingGET_7
2019-03-26 21:28:36 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-26 21:28:36 -Generating unique operation named: listUsingGET_7
2019-03-26 21:28:36 -Generating unique operation named: removeUsingPOST_12
2019-03-26 21:28:36 -Generating unique operation named: removeUsingPOST_13
2019-03-26 21:28:36 -Generating unique operation named: saveUsingPOST_6
2019-03-26 21:28:36 -Generating unique operation named: updateUsingGET_5
2019-03-26 21:28:36 -Generating unique operation named: updateUsingHEAD_5
2019-03-26 21:28:36 -Generating unique operation named: updateUsingPOST_7
2019-03-26 21:28:36 -Generating unique operation named: updateUsingPUT_5
2019-03-26 21:28:36 -Generating unique operation named: updateUsingPATCH_5
2019-03-26 21:28:36 -Generating unique operation named: updateUsingDELETE_5
2019-03-26 21:28:36 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-26 21:28:36 -Generating unique operation named: updateUsingTRACE_5
2019-03-26 21:28:36 -Generating unique operation named: exprotExcelUsingGET_4
2019-03-26 21:28:36 -Generating unique operation named: addUsingGET_7
2019-03-26 21:28:36 -Generating unique operation named: editUsingGET_8
2019-03-26 21:28:36 -Generating unique operation named: listUsingGET_8
2019-03-26 21:28:36 -Generating unique operation named: removeUsingPOST_14
2019-03-26 21:28:36 -Generating unique operation named: removeUsingPOST_15
2019-03-26 21:28:36 -Generating unique operation named: saveUsingPOST_7
2019-03-26 21:28:36 -Generating unique operation named: updateUsingGET_6
2019-03-26 21:28:36 -Generating unique operation named: updateUsingHEAD_6
2019-03-26 21:28:36 -Generating unique operation named: updateUsingPOST_8
2019-03-26 21:28:36 -Generating unique operation named: updateUsingPUT_6
2019-03-26 21:28:36 -Generating unique operation named: updateUsingPATCH_6
2019-03-26 21:28:36 -Generating unique operation named: updateUsingDELETE_6
2019-03-26 21:28:36 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-26 21:28:36 -Generating unique operation named: updateUsingTRACE_6
2019-03-26 21:28:36 -Generating unique operation named: addUsingGET_8
2019-03-26 21:28:36 -Generating unique operation named: editUsingGET_9
2019-03-26 21:28:36 -Generating unique operation named: listUsingGET_9
2019-03-26 21:28:36 -Generating unique operation named: removeUsingPOST_16
2019-03-26 21:28:36 -Generating unique operation named: removeUsingPOST_17
2019-03-26 21:28:36 -Generating unique operation named: saveUsingPOST_8
2019-03-26 21:28:36 -Generating unique operation named: updateUsingGET_7
2019-03-26 21:28:36 -Generating unique operation named: updateUsingHEAD_7
2019-03-26 21:28:36 -Generating unique operation named: updateUsingPOST_9
2019-03-26 21:28:36 -Generating unique operation named: updateUsingPUT_7
2019-03-26 21:28:36 -Generating unique operation named: updateUsingPATCH_7
2019-03-26 21:28:36 -Generating unique operation named: updateUsingDELETE_7
2019-03-26 21:28:36 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-26 21:28:36 -Generating unique operation named: updateUsingTRACE_7
2019-03-26 21:28:37 -Generating unique operation named: addUsingGET_9
2019-03-26 21:28:37 -Generating unique operation named: editUsingGET_10
2019-03-26 21:28:37 -Generating unique operation named: infoUsingGET_1
2019-03-26 21:28:37 -Generating unique operation named: infoUsingHEAD_1
2019-03-26 21:28:37 -Generating unique operation named: infoUsingPOST_1
2019-03-26 21:28:37 -Generating unique operation named: infoUsingPUT_1
2019-03-26 21:28:37 -Generating unique operation named: infoUsingPATCH_1
2019-03-26 21:28:37 -Generating unique operation named: infoUsingDELETE_1
2019-03-26 21:28:37 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-26 21:28:37 -Generating unique operation named: infoUsingTRACE_1
2019-03-26 21:28:37 -Generating unique operation named: listUsingGET_10
2019-03-26 21:28:37 -Generating unique operation named: removeUsingPOST_18
2019-03-26 21:28:37 -Generating unique operation named: removeUsingPOST_19
2019-03-26 21:28:37 -Generating unique operation named: saveUsingPOST_9
2019-03-26 21:28:37 -Generating unique operation named: updateUsingPOST_10
2019-03-26 21:28:37 -Generating unique operation named: listUsingGET_11
2019-03-26 21:28:37 -Generating unique operation named: removeUsingPOST_20
2019-03-26 21:28:37 -Generating unique operation named: welcomeUsingGET_1
2019-03-26 21:28:37 -Generating unique operation named: addUsingGET_10
2019-03-26 21:28:37 -Generating unique operation named: editUsingGET_11
2019-03-26 21:28:37 -Generating unique operation named: listUsingGET_12
2019-03-26 21:28:37 -Generating unique operation named: removeUsingPOST_21
2019-03-26 21:28:37 -Generating unique operation named: saveUsingPOST_10
2019-03-26 21:28:37 -Generating unique operation named: treeUsingGET_1
2019-03-26 21:28:37 -Generating unique operation named: treeUsingGET_2
2019-03-26 21:28:37 -Generating unique operation named: updateUsingPOST_11
2019-03-26 21:28:37 -Generating unique operation named: addUsingGET_11
2019-03-26 21:28:37 -Generating unique operation named: editUsingGET_12
2019-03-26 21:28:37 -Generating unique operation named: listUsingGET_13
2019-03-26 21:28:37 -Generating unique operation named: removeUsingPOST_22
2019-03-26 21:28:37 -Generating unique operation named: removeUsingPOST_23
2019-03-26 21:28:37 -Generating unique operation named: saveUsingPOST_11
2019-03-26 21:28:37 -Generating unique operation named: updateUsingGET_8
2019-03-26 21:28:37 -Generating unique operation named: updateUsingHEAD_8
2019-03-26 21:28:38 -Generating unique operation named: updateUsingPOST_12
2019-03-26 21:28:38 -Generating unique operation named: updateUsingPUT_8
2019-03-26 21:28:38 -Generating unique operation named: updateUsingPATCH_8
2019-03-26 21:28:38 -Generating unique operation named: updateUsingDELETE_8
2019-03-26 21:28:38 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-26 21:28:38 -Generating unique operation named: updateUsingTRACE_8
2019-03-26 21:28:38 -Generating unique operation named: addUsingGET_12
2019-03-26 21:28:38 -Generating unique operation named: editUsingGET_13
2019-03-26 21:28:38 -Generating unique operation named: listUsingGET_14
2019-03-26 21:28:38 -Generating unique operation named: removeUsingPOST_24
2019-03-26 21:28:38 -Generating unique operation named: removeUsingPOST_25
2019-03-26 21:28:38 -Generating unique operation named: saveUsingPOST_12
2019-03-26 21:28:38 -Generating unique operation named: updateUsingGET_9
2019-03-26 21:28:38 -Generating unique operation named: updateUsingHEAD_9
2019-03-26 21:28:38 -Generating unique operation named: updateUsingPOST_13
2019-03-26 21:28:38 -Generating unique operation named: updateUsingPUT_9
2019-03-26 21:28:38 -Generating unique operation named: updateUsingPATCH_9
2019-03-26 21:28:38 -Generating unique operation named: updateUsingDELETE_9
2019-03-26 21:28:38 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-26 21:28:38 -Generating unique operation named: updateUsingTRACE_9
2019-03-26 21:28:38 -Generating unique operation named: addUsingGET_13
2019-03-26 21:28:38 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-26 21:28:38 -Generating unique operation named: editUsingGET_14
2019-03-26 21:28:38 -Generating unique operation named: listUsingGET_15
2019-03-26 21:28:38 -Generating unique operation named: saveUsingPOST_13
2019-03-26 21:28:38 -Generating unique operation named: saveUsingPOST_14
2019-03-26 21:28:38 -Generating unique operation named: updateUsingPOST_14
2019-03-26 21:28:38 -Generating unique operation named: listUsingGET_16
2019-03-26 21:28:38 -Generating unique operation named: listUsingHEAD_1
2019-03-26 21:28:38 -Generating unique operation named: listUsingPOST_1
2019-03-26 21:28:38 -Generating unique operation named: listUsingPUT_1
2019-03-26 21:28:38 -Generating unique operation named: listUsingPATCH_1
2019-03-26 21:28:38 -Generating unique operation named: listUsingDELETE_1
2019-03-26 21:28:38 -Generating unique operation named: listUsingOPTIONS_1
2019-03-26 21:28:38 -Generating unique operation named: listUsingTRACE_1
2019-03-26 21:28:38 -Generating unique operation named: addUsingGET_14
2019-03-26 21:28:38 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-26 21:28:38 -Generating unique operation named: editUsingGET_15
2019-03-26 21:28:38 -Generating unique operation named: listUsingGET_17
2019-03-26 21:28:38 -Generating unique operation named: removeUsingPOST_26
2019-03-26 21:28:38 -Generating unique operation named: saveUsingPOST_15
2019-03-26 21:28:38 -Generating unique operation named: treeUsingGET_3
2019-03-26 21:28:38 -Generating unique operation named: treeViewUsingGET_1
2019-03-26 21:28:38 -Generating unique operation named: updateUsingPOST_15
2019-03-26 21:28:38 -Generating unique operation named: addUsingGET_15
2019-03-26 21:28:38 -Generating unique operation named: editUsingGET_16
2019-03-26 21:28:38 -Generating unique operation named: exprotExcelUsingGET_5
2019-03-26 21:28:38 -Generating unique operation named: listUsingGET_18
2019-03-26 21:28:38 -Generating unique operation named: removeUsingPOST_27
2019-03-26 21:28:38 -Generating unique operation named: removeUsingPOST_28
2019-03-26 21:28:38 -Generating unique operation named: saveUsingPOST_16
2019-03-26 21:28:38 -Generating unique operation named: updateUsingGET_10
2019-03-26 21:28:38 -Generating unique operation named: updateUsingHEAD_10
2019-03-26 21:28:38 -Generating unique operation named: updateUsingPOST_16
2019-03-26 21:28:38 -Generating unique operation named: updateUsingPUT_10
2019-03-26 21:28:38 -Generating unique operation named: updateUsingPATCH_10
2019-03-26 21:28:38 -Generating unique operation named: updateUsingDELETE_10
2019-03-26 21:28:38 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-26 21:28:38 -Generating unique operation named: updateUsingTRACE_10
2019-03-26 21:28:38 -Generating unique operation named: exprotExcelUsingGET_6
2019-03-26 21:28:38 -Generating unique operation named: addUsingGET_16
2019-03-26 21:28:38 -Generating unique operation named: editUsingGET_17
2019-03-26 21:28:38 -Generating unique operation named: listUsingGET_19
2019-03-26 21:28:38 -Generating unique operation named: removeUsingPOST_29
2019-03-26 21:28:38 -Generating unique operation named: removeUsingPOST_30
2019-03-26 21:28:38 -Generating unique operation named: saveUsingPOST_17
2019-03-26 21:28:38 -Generating unique operation named: updateUsingGET_11
2019-03-26 21:28:38 -Generating unique operation named: updateUsingHEAD_11
2019-03-26 21:28:38 -Generating unique operation named: updateUsingPOST_17
2019-03-26 21:28:38 -Generating unique operation named: updateUsingPUT_11
2019-03-26 21:28:38 -Generating unique operation named: updateUsingPATCH_11
2019-03-26 21:28:38 -Generating unique operation named: updateUsingDELETE_11
2019-03-26 21:28:38 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-26 21:28:38 -Generating unique operation named: updateUsingTRACE_11
2019-03-26 21:28:38 -Generating unique operation named: addUsingGET_17
2019-03-26 21:28:38 -Generating unique operation named: editUsingGET_18
2019-03-26 21:28:38 -Generating unique operation named: listUsingGET_20
2019-03-26 21:28:38 -Generating unique operation named: removeUsingPOST_31
2019-03-26 21:28:38 -Generating unique operation named: removeUsingPOST_32
2019-03-26 21:28:38 -Generating unique operation named: saveUsingPOST_18
2019-03-26 21:28:38 -Generating unique operation named: updateUsingGET_12
2019-03-26 21:28:38 -Generating unique operation named: updateUsingHEAD_12
2019-03-26 21:28:38 -Generating unique operation named: updateUsingPOST_18
2019-03-26 21:28:38 -Generating unique operation named: updateUsingPUT_12
2019-03-26 21:28:38 -Generating unique operation named: updateUsingPATCH_12
2019-03-26 21:28:38 -Generating unique operation named: updateUsingDELETE_12
2019-03-26 21:28:38 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-26 21:28:38 -Generating unique operation named: updateUsingTRACE_12
2019-03-26 21:28:39 -Starting Quartz Scheduler now
2019-03-26 21:28:39 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-26 21:28:39 -Starting...
2019-03-26 21:28:39 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-26 21:28:39 -Started.
2019-03-26 21:28:39 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-26 21:28:39 -Failed to start connector [Connector[HTTP/1.1-8081]]
org.apache.catalina.LifecycleException: Failed to start component [Connector[HTTP/1.1-8081]]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:167)
	at org.apache.catalina.core.StandardService.addConnector(StandardService.java:225)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.addPreviouslyRemovedConnectors(TomcatWebServer.java:256)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:198)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.startWebServer(ServletWebServerApplicationContext.java:300)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.finishRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:553)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.bootdo.BootdoApplication.main(BootdoApplication.java:21)
Caused by: org.apache.catalina.LifecycleException: Protocol handler start failed
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1020)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
	... 13 common frames omitted
Caused by: java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Unknown Source)
	at sun.nio.ch.Net.bind(Unknown Source)
	at sun.nio.ch.ServerSocketChannelImpl.bind(Unknown Source)
	at sun.nio.ch.ServerSocketAdaptor.bind(Unknown Source)
	at org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:210)
	at org.apache.tomcat.util.net.AbstractEndpoint.start(AbstractEndpoint.java:1150)
	at org.apache.coyote.AbstractProtocol.start(AbstractProtocol.java:591)
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1018)
	... 14 common frames omitted
2019-03-26 21:28:39 -Pausing ProtocolHandler ["http-nio-8081"]
2019-03-26 21:28:39 -Stopping service [Tomcat]
2019-03-26 21:28:39 -The stop() method was called on component [StandardServer[-1]] after stop() had already been called. The second call will be ignored.
2019-03-26 21:28:39 -Stopping ProtocolHandler ["http-nio-8081"]
2019-03-26 21:28:39 -Destroying ProtocolHandler ["http-nio-8081"]
2019-03-26 21:28:39 -

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2019-03-26 21:28:39 -

***************************
APPLICATION FAILED TO START
***************************

Description:

The Tomcat connector configured to listen on port 8081 failed to start. The port may already be in use or the connector may be misconfigured.

Action:

Verify the connector's configuration, identify and stop any process that's listening on port 8081, or configure this application to listen on another port.

2019-03-26 21:28:39 -Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@73c60324: startup date [Tue Mar 26 21:27:56 CST 2019]; root of context hierarchy
2019-03-26 21:28:39 -Stopping beans in phase 2147483647
2019-03-26 21:28:39 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2019-03-26 21:28:39 -Stopping...
2019-03-26 21:28:39 -BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-26 21:28:39 -Stopped.
2019-03-26 21:28:39 -Unregistering JMX-exposed beans on shutdown
2019-03-26 21:28:39 -Unregistering JMX-exposed beans
2019-03-26 21:28:39 -Shutting down ExecutorService 'brokerChannelExecutor'
2019-03-26 21:28:39 -Shutting down ExecutorService 'messageBrokerTaskScheduler'
2019-03-26 21:28:39 -Shutting down ExecutorService 'clientOutboundChannelExecutor'
2019-03-26 21:28:39 -Shutting down ExecutorService 'clientInboundChannelExecutor'
2019-03-26 21:28:39 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutting down.
2019-03-26 21:28:39 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2019-03-26 21:28:39 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutdown complete.
2019-03-26 21:28:39 -Shutting down Quartz Scheduler
2019-03-26 21:29:13 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 440]
2019-03-26 21:35:58 -请求地址 : http://localhost:8081/login;JSESSIONID=ad065900-7bd1-40f5-8226-4e86e72cc9b1
2019-03-26 21:35:58 -HTTP METHOD : GET
2019-03-26 21:35:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-26 21:35:58 -参数 : [{}]
2019-03-26 21:35:58 -耗时 : 2
2019-03-26 21:35:58 -返回值 : login
2019-03-26 21:36:10 -请求地址 : http://localhost:8081/login;JSESSIONID=ad065900-7bd1-40f5-8226-4e86e72cc9b1
2019-03-26 21:36:10 -HTTP METHOD : GET
2019-03-26 21:36:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-26 21:36:10 -参数 : [{}]
2019-03-26 21:36:10 -耗时 : 361
2019-03-26 21:36:11 -请求地址 : http://localhost:8081/getVerify
2019-03-26 21:36:11 -HTTP METHOD : GET
2019-03-26 21:36:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-26 21:36:11 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@14bb27e3, org.apache.shiro.web.servlet.ShiroHttpServletResponse@6743b327]
2019-03-26 21:36:11 -返回值 : login
2019-03-26 21:36:11 -请求地址 : http://localhost:8081/getVerify
2019-03-26 21:36:11 -HTTP METHOD : GET
2019-03-26 21:36:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-26 21:36:11 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@1467b243, org.apache.shiro.web.servlet.ShiroHttpServletResponse@3b8e6799]
2019-03-26 21:36:13 -1777
2019-03-26 21:36:14 -7647
2019-03-26 21:36:15 -耗时 : 3416
2019-03-26 21:36:15 -返回值 : null
2019-03-26 21:36:15 -请求地址 : http://localhost:8081/login
2019-03-26 21:36:15 -HTTP METHOD : GET
2019-03-26 21:36:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-26 21:36:15 -参数 : [{}]
2019-03-26 21:36:15 -耗时 : 10
2019-03-26 21:36:15 -返回值 : login
2019-03-26 21:36:16 -耗时 : 5602
2019-03-26 21:36:17 -返回值 : null
2019-03-26 21:36:33 -请求地址 : http://localhost:8081/login
2019-03-26 21:36:33 -HTTP METHOD : POST
2019-03-26 21:36:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-26 21:36:33 -参数 : [admin, 111111, 1777, org.apache.shiro.web.servlet.ShiroHttpServletRequest@daa1af4]
2019-03-26 21:36:33 -耗时 : 82
2019-03-26 21:36:33 -返回值 : {msg=请输入正确的验证码, code=500}
2019-03-26 21:36:34 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-26 21:36:34 -==> Parameters: -1(Long), 获取用户信息为空(String), 登录(String), 127(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-26 21:36:33.625(Timestamp)
2019-03-26 21:36:34 -<==    Updates: 1
2019-03-26 21:36:36 -请求地址 : http://localhost:8081/getVerify
2019-03-26 21:36:36 -HTTP METHOD : GET
2019-03-26 21:36:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-26 21:36:36 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@7f8ed50b, org.apache.shiro.web.servlet.ShiroHttpServletResponse@3ff5a20c]
2019-03-26 21:36:36 -8150
2019-03-26 21:36:36 -耗时 : 47
2019-03-26 21:36:36 -返回值 : null
2019-03-26 21:36:42 -请求地址 : http://localhost:8081/login
2019-03-26 21:36:42 -HTTP METHOD : POST
2019-03-26 21:36:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-26 21:36:42 -参数 : [admin, 111111, 8150, org.apache.shiro.web.servlet.ShiroHttpServletRequest@3d0b6a82]
2019-03-26 21:36:42 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-26 21:36:42 -==> Parameters: admin(String)
2019-03-26 21:36:42 -<==      Total: 1
2019-03-26 21:36:42 -耗时 : 291
2019-03-26 21:36:42 -返回值 : {msg=操作成功, code=0}
2019-03-26 21:36:42 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-26 21:36:42 -==> Parameters: 1(Long), admin(String), 登录(String), 292(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-26 21:36:42.711(Timestamp)
2019-03-26 21:36:42 -请求地址 : http://localhost:8081/index
2019-03-26 21:36:42 -HTTP METHOD : GET
2019-03-26 21:36:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-26 21:36:42 -参数 : [{}]
2019-03-26 21:36:43 -<==    Updates: 1
2019-03-26 21:36:43 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-26 21:36:43 -==> Parameters: 1(Long)
2019-03-26 21:36:43 -<==      Total: 46
2019-03-26 21:36:43 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-26 21:36:43 -==> Parameters: 138(Long)
2019-03-26 21:36:43 -<==      Total: 1
2019-03-26 21:36:43 -耗时 : 877
2019-03-26 21:36:43 -返回值 : index_v1
2019-03-26 21:36:43 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-26 21:36:43 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 877(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-26 21:36:43.676(Timestamp)
2019-03-26 21:36:44 -请求地址 : http://localhost:8081/main
2019-03-26 21:36:44 -HTTP METHOD : GET
2019-03-26 21:36:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-26 21:36:44 -参数 : []
2019-03-26 21:36:44 -耗时 : 15
2019-03-26 21:36:44 -返回值 : main
2019-03-26 21:36:44 -<==    Updates: 1
2019-03-26 21:36:47 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-26 21:36:47 -HTTP METHOD : GET
2019-03-26 21:36:47 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-26 21:36:47 -参数 : []
2019-03-26 21:36:47 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-26 21:36:47 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-26 21:36:47 -<==      Total: 0
2019-03-26 21:36:47 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-26 21:36:47 -==> Parameters: 1(Long), 0(String)
2019-03-26 21:36:47 -<==      Total: 1
2019-03-26 21:36:47 -耗时 : 77
2019-03-26 21:36:47 -返回值 : com.bootdo.common.utils.PageUtils@28ab8521
2019-03-26 21:36:47 -请求地址 : http://localhost:8081/main
2019-03-26 21:36:47 -HTTP METHOD : GET
2019-03-26 21:36:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-26 21:36:47 -参数 : []
2019-03-26 21:36:47 -耗时 : 0
2019-03-26 21:36:47 -返回值 : main
2019-03-26 21:36:50 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-26 21:36:50 -==> Parameters: 1(Long)
2019-03-26 21:36:50 -<==      Total: 90
2019-03-26 21:36:50 -请求地址 : http://localhost:8081/elec/elec
2019-03-26 21:36:50 -HTTP METHOD : GET
2019-03-26 21:36:50 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-26 21:36:50 -参数 : []
2019-03-26 21:36:50 -耗时 : 0
2019-03-26 21:36:50 -返回值 : elec/elec/elec
2019-03-26 21:36:53 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-26 21:36:53 -HTTP METHOD : GET
2019-03-26 21:36:53 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-26 21:36:53 -参数 : [userType]
2019-03-26 21:36:53 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-26 21:36:53 -==> Parameters: userType(String)
2019-03-26 21:36:54 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-26 21:36:54 -HTTP METHOD : GET
2019-03-26 21:36:54 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-26 21:36:54 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@5ff33944]
2019-03-26 21:36:54 -<==      Total: 2
2019-03-26 21:36:54 -耗时 : 728
2019-03-26 21:36:54 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-26 21:36:54 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-26 21:36:54 -==> Parameters: 0(Integer), 10(Integer)
2019-03-26 21:36:54 -<==      Total: 10
2019-03-26 21:36:54 -==>  Preparing: select count(*) from elec 
2019-03-26 21:36:54 -==> Parameters: 
2019-03-26 21:36:54 -<==      Total: 1
2019-03-26 21:36:54 -耗时 : 130
2019-03-26 21:36:54 -返回值 : com.bootdo.common.utils.PageUtils@4eabbf39
2019-03-26 21:37:03 -请求地址 : http://localhost:8081/elec/elec/edit/1
2019-03-26 21:37:03 -HTTP METHOD : GET
2019-03-26 21:37:03 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.edit
2019-03-26 21:37:03 -参数 : [1, {}]
2019-03-26 21:37:03 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec where id = ? 
2019-03-26 21:37:03 -==> Parameters: 1(Long)
2019-03-26 21:37:03 -<==      Total: 1
2019-03-26 21:37:03 -耗时 : 20
2019-03-26 21:37:03 -返回值 : elec/elec/edit
2019-03-26 21:37:03 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-03-26 21:37:03 -HTTP METHOD : GET
2019-03-26 21:37:03 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-26 21:37:03 -参数 : [userState]
2019-03-26 21:37:03 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-26 21:37:03 -==> Parameters: userState(String)
2019-03-26 21:37:03 -<==      Total: 2
2019-03-26 21:37:03 -耗时 : 5
2019-03-26 21:37:03 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-26 21:37:03 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-03-26 21:37:03 -HTTP METHOD : GET
2019-03-26 21:37:03 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-26 21:37:03 -参数 : [elecType]
2019-03-26 21:37:03 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-26 21:37:03 -==> Parameters: elecType(String)
2019-03-26 21:37:03 -<==      Total: 2
2019-03-26 21:37:03 -耗时 : 7
2019-03-26 21:37:03 -返回值 : [DictDO{id=139, name='民用电', value='1', type='elecType', description='电量性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='商业电', value='0', type='elecType', description='电量类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-26 21:37:03 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-26 21:37:03 -HTTP METHOD : GET
2019-03-26 21:37:03 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-26 21:37:03 -参数 : [userType]
2019-03-26 21:37:03 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-26 21:37:03 -==> Parameters: userType(String)
2019-03-26 21:37:03 -<==      Total: 2
2019-03-26 21:37:03 -耗时 : 65
2019-03-26 21:37:03 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-26 21:37:47 -org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'elecDO' on field 'hu': rejected value [2019-02,1]; codes [typeMismatch.elecDO.hu,typeMismatch.hu,typeMismatch.java.lang.Integer,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [elecDO.hu,hu]; arguments []; default message [hu]]; default message [Failed to convert property value of type 'java.lang.String[]' to required type 'java.lang.Integer' for property 'hu'; nested exception is java.lang.NumberFormatException: For input string: "2019-02,1"]
org.springframework.validation.BindException: org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'elecDO' on field 'hu': rejected value [2019-02,1]; codes [typeMismatch.elecDO.hu,typeMismatch.hu,typeMismatch.java.lang.Integer,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [elecDO.hu,hu]; arguments []; default message [hu]]; default message [Failed to convert property value of type 'java.lang.String[]' to required type 'java.lang.Integer' for property 'hu'; nested exception is java.lang.NumberFormatException: For input string: "2019-02,1"]
	at org.springframework.web.method.annotation.ModelAttributeMethodProcessor.resolveArgument(ModelAttributeMethodProcessor.java:157)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:124)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:161)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:131)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-26 21:37:47 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-26 21:37:47 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/elec/elec/update(String), org.springframework.validation.BindException: org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'elecDO' on field 'hu': rejected value [2019-02,1]; codes [typeMismatch.elecDO.hu,typeMismatch.hu,typeMismatch.java.lang.Integer,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [elecDO.hu,hu]; arguments []; default message [hu]]; default message [Failed to convert property value of type 'java.lang.String[]' to required type 'java.lang.Integer' for property 'hu'; nested exception is java.lang.NumberFormatException: For input string: "2019-02,1"](String), null, 2019-03-26 21:37:47.572(Timestamp)
2019-03-26 21:37:47 -<==    Updates: 1
2019-03-26 21:46:32 -请求地址 : http://localhost:8081/index
2019-03-26 21:46:32 -HTTP METHOD : GET
2019-03-26 21:46:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-26 21:46:32 -参数 : [{}]
2019-03-26 21:46:32 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-26 21:46:32 -==> Parameters: 1(Long)
2019-03-26 21:46:32 -<==      Total: 46
2019-03-26 21:46:32 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-26 21:46:32 -==> Parameters: 138(Long)
2019-03-26 21:46:32 -<==      Total: 1
2019-03-26 21:46:32 -耗时 : 146
2019-03-26 21:46:32 -返回值 : index_v1
2019-03-26 21:46:32 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-26 21:46:32 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 146(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-26 21:46:32.706(Timestamp)
2019-03-26 21:46:32 -<==    Updates: 1
2019-03-26 21:46:33 -请求地址 : http://localhost:8081/main
2019-03-26 21:46:33 -HTTP METHOD : GET
2019-03-26 21:46:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-26 21:46:33 -参数 : []
2019-03-26 21:46:33 -耗时 : 0
2019-03-26 21:46:33 -返回值 : main
2019-03-26 21:46:34 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-26 21:46:34 -HTTP METHOD : GET
2019-03-26 21:46:34 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-26 21:46:34 -参数 : []
2019-03-26 21:46:34 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-26 21:46:34 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-26 21:46:34 -请求地址 : http://localhost:8081/main
2019-03-26 21:46:34 -HTTP METHOD : GET
2019-03-26 21:46:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-26 21:46:34 -参数 : []
2019-03-26 21:46:34 -耗时 : 1
2019-03-26 21:46:34 -返回值 : main
2019-03-26 21:46:34 -<==      Total: 0
2019-03-26 21:46:34 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-26 21:46:34 -==> Parameters: 1(Long), 0(String)
2019-03-26 21:46:34 -<==      Total: 1
2019-03-26 21:46:34 -耗时 : 111
2019-03-26 21:46:34 -返回值 : com.bootdo.common.utils.PageUtils@7cda337a
2019-03-26 21:46:37 -请求地址 : http://localhost:8081/elec/elec
2019-03-26 21:46:37 -HTTP METHOD : GET
2019-03-26 21:46:37 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-26 21:46:37 -参数 : []
2019-03-26 21:46:37 -耗时 : 1
2019-03-26 21:46:37 -返回值 : elec/elec/elec
2019-03-26 21:46:39 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-26 21:46:39 -HTTP METHOD : GET
2019-03-26 21:46:40 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-26 21:46:40 -HTTP METHOD : GET
2019-03-26 21:46:40 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-26 21:46:40 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@70a513f1]
2019-03-26 21:46:39 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-26 21:46:40 -参数 : [userType]
2019-03-26 21:46:40 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-26 21:46:40 -==> Parameters: userType(String)
2019-03-26 21:46:40 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-26 21:46:40 -==> Parameters: 0(Integer), 10(Integer)
2019-03-26 21:46:40 -<==      Total: 10
2019-03-26 21:46:40 -==>  Preparing: select count(*) from elec 
2019-03-26 21:46:40 -==> Parameters: 
2019-03-26 21:46:40 -<==      Total: 1
2019-03-26 21:46:40 -耗时 : 86
2019-03-26 21:46:40 -返回值 : com.bootdo.common.utils.PageUtils@71688642
2019-03-26 21:46:40 -<==      Total: 2
2019-03-26 21:46:40 -耗时 : 226
2019-03-26 21:46:40 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-26 21:46:47 -请求地址 : http://localhost:8081/elec/elec/edit/1
2019-03-26 21:46:47 -HTTP METHOD : GET
2019-03-26 21:46:47 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.edit
2019-03-26 21:46:47 -参数 : [1, {}]
2019-03-26 21:46:47 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec where id = ? 
2019-03-26 21:46:47 -==> Parameters: 1(Long)
2019-03-26 21:46:47 -<==      Total: 1
2019-03-26 21:46:47 -耗时 : 76
2019-03-26 21:46:47 -返回值 : elec/elec/edit
2019-03-26 21:46:48 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-26 21:46:48 -HTTP METHOD : GET
2019-03-26 21:46:48 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-26 21:46:48 -参数 : [userType]
2019-03-26 21:46:48 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-26 21:46:48 -==> Parameters: userType(String)
2019-03-26 21:46:48 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-03-26 21:46:48 -HTTP METHOD : GET
2019-03-26 21:46:48 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-26 21:46:48 -参数 : [userState]
2019-03-26 21:46:48 -<==      Total: 2
2019-03-26 21:46:48 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-26 21:46:48 -耗时 : 5
2019-03-26 21:46:48 -==> Parameters: userState(String)
2019-03-26 21:46:48 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-26 21:46:48 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-03-26 21:46:48 -HTTP METHOD : GET
2019-03-26 21:46:48 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-26 21:46:48 -参数 : [elecType]
2019-03-26 21:46:48 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-26 21:46:48 -<==      Total: 2
2019-03-26 21:46:48 -==> Parameters: elecType(String)
2019-03-26 21:46:48 -耗时 : 4
2019-03-26 21:46:48 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-26 21:46:48 -<==      Total: 2
2019-03-26 21:46:48 -耗时 : 16
2019-03-26 21:46:48 -返回值 : [DictDO{id=139, name='民用电', value='1', type='elecType', description='电量性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='商业电', value='0', type='elecType', description='电量类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-26 21:46:49 -请求地址 : http://localhost:8081/elec/elec/update
2019-03-26 21:46:49 -HTTP METHOD : POST
2019-03-26 21:46:49 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.update
2019-03-26 21:46:49 -参数 : [com.bootdo.elec.domain.ElecDO@41e4c75c]
2019-03-26 21:46:49 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-26 21:46:49 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/elec/elec/update(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error updating database.  Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
### Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String(String), null, 2019-03-26 21:46:49.949(Timestamp)
2019-03-26 21:46:50 -<==    Updates: 1
2019-03-26 21:46:50 -nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error updating database.  Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
### Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error updating database.  Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
### Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:295)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy119.update(Unknown Source)
	at com.bootdo.elec.service.impl.ElecServiceImpl.update(ElecServiceImpl.java:47)
	at com.bootdo.elec.controller.ElecController.update(ElecController.java:220)
	at com.bootdo.elec.controller.ElecController$$FastClassBySpringCGLIB$$b8b2b2ee.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor129.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.elec.controller.ElecController$$EnhancerBySpringCGLIB$$77c0e397.update(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.ibatis.exceptions.PersistenceException: 
### Error updating database.  Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
### Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
	at org.apache.ibatis.exceptions.ExceptionFactory.wrapException(ExceptionFactory.java:30)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:200)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 103 common frames omitted
Caused by: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
	at org.apache.ibatis.ognl.OgnlOps.compareWithConversion(OgnlOps.java:93)
	at org.apache.ibatis.ognl.OgnlOps.isEqual(OgnlOps.java:143)
	at org.apache.ibatis.ognl.OgnlOps.equal(OgnlOps.java:802)
	at org.apache.ibatis.ognl.ASTNotEq.getValueBody(ASTNotEq.java:53)
	at org.apache.ibatis.ognl.SimpleNode.evaluateGetValueBody(SimpleNode.java:212)
	at org.apache.ibatis.ognl.SimpleNode.getValue(SimpleNode.java:258)
	at org.apache.ibatis.ognl.ASTAnd.getValueBody(ASTAnd.java:61)
	at org.apache.ibatis.ognl.SimpleNode.evaluateGetValueBody(SimpleNode.java:212)
	at org.apache.ibatis.ognl.SimpleNode.getValue(SimpleNode.java:258)
	at org.apache.ibatis.ognl.Ognl.getValue(Ognl.java:470)
	at org.apache.ibatis.ognl.Ognl.getValue(Ognl.java:434)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:44)
	at org.apache.ibatis.scripting.xmltags.ExpressionEvaluator.evaluateBoolean(ExpressionEvaluator.java:32)
	at org.apache.ibatis.scripting.xmltags.IfSqlNode.apply(IfSqlNode.java:34)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.TrimSqlNode.apply(TrimSqlNode.java:55)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.DynamicSqlSource.getBoundSql(DynamicSqlSource.java:41)
	at org.apache.ibatis.mapping.MappedStatement.getBoundSql(MappedStatement.java:292)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.<init>(BaseStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.<init>(PreparedStatementHandler.java:40)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.<init>(RoutingStatementHandler.java:46)
	at org.apache.ibatis.session.Configuration.newStatementHandler(Configuration.java:545)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:48)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	... 108 common frames omitted
2019-03-26 21:47:20 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:23)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:26)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:424)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:232)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-26 21:48:28 -Starting BootdoApplication on ZJZL-20180906VX with PID 10576 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-26 21:48:28 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-26 21:48:28 -The following profiles are active: dev
2019-03-26 21:48:28 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7c041b41: startup date [Tue Mar 26 21:48:28 CST 2019]; root of context hierarchy
2019-03-26 21:48:36 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-26 21:48:40 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$2da6b0a7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 21:48:40 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$1fffdf4e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 21:48:42 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 21:48:43 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 21:48:43 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 21:48:43 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-26 21:48:43 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-26 21:48:43 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 21:48:43 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 21:48:43 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 21:48:43 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 21:48:45 -Tomcat initialized with port(s): 8081 (http)
2019-03-26 21:48:45 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-26 21:48:45 -Starting service [Tomcat]
2019-03-26 21:48:45 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-26 21:48:45 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-26 21:48:46 -Initializing Spring embedded WebApplicationContext
2019-03-26 21:48:46 -Root WebApplicationContext: initialization completed in 17679 ms
2019-03-26 21:48:47 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-26 21:48:47 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-26 21:48:47 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-26 21:48:47 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-26 21:48:47 -Filter xssFilter was not registered (disabled)
2019-03-26 21:48:47 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-26 21:48:47 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-26 21:48:47 -Servlet statViewServlet mapped to [/druid/*]
2019-03-26 21:48:47 -Servlet dispatcherServlet mapped to [/]
2019-03-26 21:48:52 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7c041b41: startup date [Tue Mar 26 21:48:28 CST 2019]; root of context hierarchy
2019-03-26 21:48:53 -Using default implementation for ThreadExecutor
2019-03-26 21:48:53 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-26 21:48:53 -Quartz Scheduler v.2.2.1 created.
2019-03-26 21:48:53 -RAMJobStore initialized.
2019-03-26 21:48:53 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-26 21:48:53 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-26 21:48:53 -Quartz scheduler version: 2.2.1
2019-03-26 21:48:53 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@4b916cc2
2019-03-26 21:48:54 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-26 21:48:54 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-26 21:48:59 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-03-26 21:48:59 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-26 21:48:59 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-26 21:48:59 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-26 21:48:59 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-26 21:48:59 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-26 21:48:59 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-26 21:48:59 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-26 21:48:59 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-26 21:48:59 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-26 21:48:59 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-26 21:48:59 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 21:48:59 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-26 21:48:59 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-26 21:48:59 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 21:48:59 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-26 21:48:59 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-26 21:48:59 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-26 21:48:59 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-26 21:48:59 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-26 21:48:59 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-26 21:48:59 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-26 21:48:59 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 21:48:59 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-26 21:48:59 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-26 21:48:59 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 21:48:59 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-26 21:48:59 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-26 21:48:59 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 21:48:59 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-26 21:48:59 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-26 21:48:59 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-26 21:48:59 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-26 21:48:59 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-26 21:48:59 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-26 21:48:59 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-26 21:48:59 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-26 21:48:59 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-26 21:48:59 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 21:48:59 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-26 21:48:59 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-26 21:48:59 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-26 21:48:59 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-26 21:48:59 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 21:48:59 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-26 21:48:59 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-26 21:48:59 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 21:48:59 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-26 21:48:59 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-03-26 21:48:59 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-26 21:48:59 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-26 21:48:59 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-26 21:48:59 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-26 21:48:59 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-26 21:48:59 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-26 21:48:59 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-26 21:48:59 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-26 21:48:59 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-26 21:48:59 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-26 21:48:59 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-26 21:48:59 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 21:49:00 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-26 21:49:00 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-26 21:49:00 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-03-26 21:49:00 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-26 21:49:00 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-26 21:49:00 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-26 21:49:00 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-26 21:49:00 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 21:49:00 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-03-26 21:49:00 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-26 21:49:00 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 21:49:00 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-26 21:49:00 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-26 21:49:00 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-26 21:49:00 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-26 21:49:00 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-26 21:49:00 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-26 21:49:00 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 21:49:00 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-26 21:49:00 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-26 21:49:00 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-26 21:49:00 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-26 21:49:00 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-26 21:49:00 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-26 21:49:00 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-26 21:49:00 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-26 21:49:00 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-26 21:49:00 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-26 21:49:00 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 21:49:00 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-26 21:49:00 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-26 21:49:00 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 21:49:00 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-26 21:49:00 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-03-26 21:49:00 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-26 21:49:00 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-03-26 21:49:00 -Mapped "{[/moneyList/moneyList/UserList],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-26 21:49:00 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-26 21:49:00 -Mapped "{[/moneyList/moneyList/LikeName],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.LikeName(org.springframework.ui.Model)
2019-03-26 21:49:00 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-26 21:49:00 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-26 21:49:00 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-26 21:49:00 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-26 21:49:00 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 21:49:00 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-26 21:49:00 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-26 21:49:00 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-26 21:49:00 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 21:49:00 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-26 21:49:00 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-26 21:49:00 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-26 21:49:00 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-26 21:49:00 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 21:49:00 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-26 21:49:00 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-26 21:49:00 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-26 21:49:00 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 21:49:00 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-26 21:49:00 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-26 21:49:00 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-26 21:49:00 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-26 21:49:00 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 21:49:00 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-26 21:49:00 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-26 21:49:00 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-26 21:49:00 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 21:49:00 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-26 21:49:00 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-26 21:49:00 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-26 21:49:00 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-26 21:49:00 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-26 21:49:00 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 21:49:00 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-26 21:49:00 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-26 21:49:00 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 21:49:00 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-26 21:49:00 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-26 21:49:00 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 21:49:00 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-26 21:49:00 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-26 21:49:00 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-26 21:49:00 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-26 21:49:00 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 21:49:00 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-26 21:49:00 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-26 21:49:00 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-26 21:49:00 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 21:49:00 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 21:49:00 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-26 21:49:00 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-26 21:49:00 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-26 21:49:00 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-26 21:49:00 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-26 21:49:00 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-26 21:49:00 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-26 21:49:00 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-26 21:49:00 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-26 21:49:00 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 21:49:00 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-26 21:49:00 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-26 21:49:00 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-26 21:49:00 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-26 21:49:00 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-26 21:49:00 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-26 21:49:00 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-26 21:49:00 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-26 21:49:00 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-26 21:49:00 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-26 21:49:00 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 21:49:00 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-26 21:49:00 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-26 21:49:00 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-26 21:49:00 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-26 21:49:00 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-26 21:49:00 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-26 21:49:00 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-26 21:49:00 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-26 21:49:00 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-26 21:49:00 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-26 21:49:00 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-26 21:49:00 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 21:49:00 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-26 21:49:00 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-26 21:49:00 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-26 21:49:00 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-26 21:49:00 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-26 21:49:00 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 21:49:00 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-26 21:49:00 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-26 21:49:00 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-26 21:49:00 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 21:49:00 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-26 21:49:00 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-26 21:49:00 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-26 21:49:00 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-26 21:49:00 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-26 21:49:00 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-26 21:49:00 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-26 21:49:00 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-26 21:49:00 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-26 21:49:00 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-26 21:49:00 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-26 21:49:00 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-26 21:49:00 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-26 21:49:00 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-26 21:49:00 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-26 21:49:00 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-26 21:49:00 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-26 21:49:00 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 21:49:00 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-26 21:49:00 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 21:49:00 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-26 21:49:00 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-26 21:49:00 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 21:49:00 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-26 21:49:00 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-26 21:49:00 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-26 21:49:00 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-26 21:49:00 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-26 21:49:00 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-26 21:49:00 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 21:49:00 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-26 21:49:00 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-26 21:49:00 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 21:49:00 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-26 21:49:00 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-03-26 21:49:00 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-26 21:49:00 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-03-26 21:49:00 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-26 21:49:00 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-26 21:49:00 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-26 21:49:00 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-26 21:49:01 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-26 21:49:01 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-26 21:49:01 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-26 21:49:02 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-26 21:49:02 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7c041b41: startup date [Tue Mar 26 21:48:28 CST 2019]; root of context hierarchy
2019-03-26 21:49:03 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-26 21:49:03 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-26 21:49:03 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-26 21:49:03 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-26 21:49:03 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-26 21:49:06 -Registering beans for JMX exposure on startup
2019-03-26 21:49:06 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-26 21:49:06 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-26 21:49:06 -Starting beans in phase 2147483647
2019-03-26 21:49:06 -Context refreshed
2019-03-26 21:49:06 -Found 1 custom documentation plugin(s)
2019-03-26 21:49:06 -Scanning for api listing references
2019-03-26 21:49:07 -Generating unique operation named: removeUsingPOST_1
2019-03-26 21:49:07 -Generating unique operation named: addUsingGET_1
2019-03-26 21:49:07 -Generating unique operation named: editUsingGET_1
2019-03-26 21:49:07 -Generating unique operation named: listUsingGET_1
2019-03-26 21:49:07 -Generating unique operation named: removeUsingPOST_2
2019-03-26 21:49:07 -Generating unique operation named: removeUsingPOST_3
2019-03-26 21:49:07 -Generating unique operation named: saveUsingPOST_1
2019-03-26 21:49:07 -Generating unique operation named: updateUsingGET_1
2019-03-26 21:49:08 -Generating unique operation named: updateUsingHEAD_1
2019-03-26 21:49:08 -Generating unique operation named: updateUsingPOST_1
2019-03-26 21:49:08 -Generating unique operation named: updateUsingPUT_1
2019-03-26 21:49:08 -Generating unique operation named: updateUsingPATCH_1
2019-03-26 21:49:08 -Generating unique operation named: updateUsingDELETE_1
2019-03-26 21:49:08 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-26 21:49:08 -Generating unique operation named: updateUsingTRACE_1
2019-03-26 21:49:08 -Generating unique operation named: addUsingGET_2
2019-03-26 21:49:08 -Generating unique operation named: editUsingGET_2
2019-03-26 21:49:08 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-26 21:49:08 -Generating unique operation named: listUsingGET_2
2019-03-26 21:49:08 -Generating unique operation named: removeUsingPOST_4
2019-03-26 21:49:08 -Generating unique operation named: removeUsingPOST_5
2019-03-26 21:49:08 -Generating unique operation named: saveUsingPOST_2
2019-03-26 21:49:08 -Generating unique operation named: updateUsingPOST_2
2019-03-26 21:49:08 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-26 21:49:08 -Generating unique operation named: addUsingGET_3
2019-03-26 21:49:08 -Generating unique operation named: editUsingGET_3
2019-03-26 21:49:08 -Generating unique operation named: listUsingGET_3
2019-03-26 21:49:08 -Generating unique operation named: removeUsingPOST_6
2019-03-26 21:49:08 -Generating unique operation named: removeUsingPOST_7
2019-03-26 21:49:08 -Generating unique operation named: saveUsingPOST_3
2019-03-26 21:49:08 -Generating unique operation named: updateUsingGET_2
2019-03-26 21:49:08 -Generating unique operation named: updateUsingHEAD_2
2019-03-26 21:49:08 -Generating unique operation named: updateUsingPOST_3
2019-03-26 21:49:08 -Generating unique operation named: updateUsingPUT_2
2019-03-26 21:49:08 -Generating unique operation named: updateUsingPATCH_2
2019-03-26 21:49:08 -Generating unique operation named: updateUsingDELETE_2
2019-03-26 21:49:08 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-26 21:49:08 -Generating unique operation named: updateUsingTRACE_2
2019-03-26 21:49:08 -Generating unique operation named: addUsingGET_4
2019-03-26 21:49:08 -Generating unique operation named: editUsingGET_4
2019-03-26 21:49:08 -Generating unique operation named: listUsingGET_4
2019-03-26 21:49:08 -Generating unique operation named: removeUsingPOST_8
2019-03-26 21:49:08 -Generating unique operation named: removeUsingPOST_9
2019-03-26 21:49:08 -Generating unique operation named: saveUsingPOST_4
2019-03-26 21:49:08 -Generating unique operation named: updateUsingGET_3
2019-03-26 21:49:08 -Generating unique operation named: updateUsingHEAD_3
2019-03-26 21:49:08 -Generating unique operation named: updateUsingPOST_4
2019-03-26 21:49:08 -Generating unique operation named: updateUsingPUT_3
2019-03-26 21:49:08 -Generating unique operation named: updateUsingPATCH_3
2019-03-26 21:49:08 -Generating unique operation named: updateUsingDELETE_3
2019-03-26 21:49:08 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-26 21:49:08 -Generating unique operation named: updateUsingTRACE_3
2019-03-26 21:49:08 -Generating unique operation named: ElecUsingGET_1
2019-03-26 21:49:08 -Generating unique operation named: addUsingGET_5
2019-03-26 21:49:08 -Generating unique operation named: editUsingGET_5
2019-03-26 21:49:08 -Generating unique operation named: listUsingGET_5
2019-03-26 21:49:08 -Generating unique operation named: removeUsingPOST_10
2019-03-26 21:49:08 -Generating unique operation named: removeUsingPOST_11
2019-03-26 21:49:08 -Generating unique operation named: saveUsingPOST_5
2019-03-26 21:49:08 -Generating unique operation named: updateUsingGET_4
2019-03-26 21:49:08 -Generating unique operation named: updateUsingHEAD_4
2019-03-26 21:49:08 -Generating unique operation named: updateUsingPOST_5
2019-03-26 21:49:08 -Generating unique operation named: updateUsingPUT_4
2019-03-26 21:49:08 -Generating unique operation named: updateUsingPATCH_4
2019-03-26 21:49:08 -Generating unique operation named: updateUsingDELETE_4
2019-03-26 21:49:08 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-26 21:49:08 -Generating unique operation named: updateUsingTRACE_4
2019-03-26 21:49:08 -Generating unique operation named: editUsingGET_6
2019-03-26 21:49:08 -Generating unique operation named: listUsingGET_6
2019-03-26 21:49:08 -Generating unique operation named: updateUsingPOST_6
2019-03-26 21:49:08 -Generating unique operation named: addUsingGET_6
2019-03-26 21:49:08 -Generating unique operation named: editUsingGET_7
2019-03-26 21:49:08 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-26 21:49:08 -Generating unique operation named: listUsingGET_7
2019-03-26 21:49:08 -Generating unique operation named: removeUsingPOST_12
2019-03-26 21:49:08 -Generating unique operation named: removeUsingPOST_13
2019-03-26 21:49:08 -Generating unique operation named: saveUsingPOST_6
2019-03-26 21:49:08 -Generating unique operation named: updateUsingGET_5
2019-03-26 21:49:08 -Generating unique operation named: updateUsingHEAD_5
2019-03-26 21:49:08 -Generating unique operation named: updateUsingPOST_7
2019-03-26 21:49:08 -Generating unique operation named: updateUsingPUT_5
2019-03-26 21:49:08 -Generating unique operation named: updateUsingPATCH_5
2019-03-26 21:49:08 -Generating unique operation named: updateUsingDELETE_5
2019-03-26 21:49:08 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-26 21:49:08 -Generating unique operation named: updateUsingTRACE_5
2019-03-26 21:49:08 -Generating unique operation named: exprotExcelUsingGET_4
2019-03-26 21:49:08 -Generating unique operation named: addUsingGET_7
2019-03-26 21:49:08 -Generating unique operation named: editUsingGET_8
2019-03-26 21:49:08 -Generating unique operation named: listUsingGET_8
2019-03-26 21:49:09 -Generating unique operation named: removeUsingPOST_14
2019-03-26 21:49:09 -Generating unique operation named: removeUsingPOST_15
2019-03-26 21:49:09 -Generating unique operation named: saveUsingPOST_7
2019-03-26 21:49:09 -Generating unique operation named: updateUsingGET_6
2019-03-26 21:49:09 -Generating unique operation named: updateUsingHEAD_6
2019-03-26 21:49:09 -Generating unique operation named: updateUsingPOST_8
2019-03-26 21:49:09 -Generating unique operation named: updateUsingPUT_6
2019-03-26 21:49:09 -Generating unique operation named: updateUsingPATCH_6
2019-03-26 21:49:09 -Generating unique operation named: updateUsingDELETE_6
2019-03-26 21:49:09 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-26 21:49:09 -Generating unique operation named: updateUsingTRACE_6
2019-03-26 21:49:09 -Generating unique operation named: addUsingGET_8
2019-03-26 21:49:09 -Generating unique operation named: editUsingGET_9
2019-03-26 21:49:09 -Generating unique operation named: listUsingGET_9
2019-03-26 21:49:09 -Generating unique operation named: removeUsingPOST_16
2019-03-26 21:49:09 -Generating unique operation named: removeUsingPOST_17
2019-03-26 21:49:09 -Generating unique operation named: saveUsingPOST_8
2019-03-26 21:49:09 -Generating unique operation named: updateUsingGET_7
2019-03-26 21:49:09 -Generating unique operation named: updateUsingHEAD_7
2019-03-26 21:49:09 -Generating unique operation named: updateUsingPOST_9
2019-03-26 21:49:09 -Generating unique operation named: updateUsingPUT_7
2019-03-26 21:49:09 -Generating unique operation named: updateUsingPATCH_7
2019-03-26 21:49:09 -Generating unique operation named: updateUsingDELETE_7
2019-03-26 21:49:09 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-26 21:49:09 -Generating unique operation named: updateUsingTRACE_7
2019-03-26 21:49:09 -Generating unique operation named: addUsingGET_9
2019-03-26 21:49:09 -Generating unique operation named: editUsingGET_10
2019-03-26 21:49:09 -Generating unique operation named: infoUsingGET_1
2019-03-26 21:49:09 -Generating unique operation named: infoUsingHEAD_1
2019-03-26 21:49:09 -Generating unique operation named: infoUsingPOST_1
2019-03-26 21:49:09 -Generating unique operation named: infoUsingPUT_1
2019-03-26 21:49:09 -Generating unique operation named: infoUsingPATCH_1
2019-03-26 21:49:09 -Generating unique operation named: infoUsingDELETE_1
2019-03-26 21:49:09 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-26 21:49:09 -Generating unique operation named: infoUsingTRACE_1
2019-03-26 21:49:09 -Generating unique operation named: listUsingGET_10
2019-03-26 21:49:09 -Generating unique operation named: removeUsingPOST_18
2019-03-26 21:49:09 -Generating unique operation named: removeUsingPOST_19
2019-03-26 21:49:09 -Generating unique operation named: saveUsingPOST_9
2019-03-26 21:49:09 -Generating unique operation named: updateUsingPOST_10
2019-03-26 21:49:09 -Generating unique operation named: listUsingGET_11
2019-03-26 21:49:09 -Generating unique operation named: removeUsingPOST_20
2019-03-26 21:49:09 -Generating unique operation named: welcomeUsingGET_1
2019-03-26 21:49:09 -Generating unique operation named: addUsingGET_10
2019-03-26 21:49:09 -Generating unique operation named: editUsingGET_11
2019-03-26 21:49:09 -Generating unique operation named: listUsingGET_12
2019-03-26 21:49:09 -Generating unique operation named: removeUsingPOST_21
2019-03-26 21:49:09 -Generating unique operation named: saveUsingPOST_10
2019-03-26 21:49:09 -Generating unique operation named: treeUsingGET_1
2019-03-26 21:49:09 -Generating unique operation named: treeUsingGET_2
2019-03-26 21:49:09 -Generating unique operation named: updateUsingPOST_11
2019-03-26 21:49:09 -Generating unique operation named: addUsingGET_11
2019-03-26 21:49:09 -Generating unique operation named: editUsingGET_12
2019-03-26 21:49:09 -Generating unique operation named: listUsingGET_13
2019-03-26 21:49:09 -Generating unique operation named: removeUsingPOST_22
2019-03-26 21:49:09 -Generating unique operation named: removeUsingPOST_23
2019-03-26 21:49:09 -Generating unique operation named: saveUsingPOST_11
2019-03-26 21:49:09 -Generating unique operation named: updateUsingGET_8
2019-03-26 21:49:09 -Generating unique operation named: updateUsingHEAD_8
2019-03-26 21:49:09 -Generating unique operation named: updateUsingPOST_12
2019-03-26 21:49:09 -Generating unique operation named: updateUsingPUT_8
2019-03-26 21:49:09 -Generating unique operation named: updateUsingPATCH_8
2019-03-26 21:49:09 -Generating unique operation named: updateUsingDELETE_8
2019-03-26 21:49:09 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-26 21:49:09 -Generating unique operation named: updateUsingTRACE_8
2019-03-26 21:49:10 -Generating unique operation named: addUsingGET_12
2019-03-26 21:49:10 -Generating unique operation named: editUsingGET_13
2019-03-26 21:49:10 -Generating unique operation named: listUsingGET_14
2019-03-26 21:49:10 -Generating unique operation named: removeUsingPOST_24
2019-03-26 21:49:10 -Generating unique operation named: removeUsingPOST_25
2019-03-26 21:49:10 -Generating unique operation named: saveUsingPOST_12
2019-03-26 21:49:10 -Generating unique operation named: updateUsingGET_9
2019-03-26 21:49:10 -Generating unique operation named: updateUsingHEAD_9
2019-03-26 21:49:10 -Generating unique operation named: updateUsingPOST_13
2019-03-26 21:49:10 -Generating unique operation named: updateUsingPUT_9
2019-03-26 21:49:10 -Generating unique operation named: updateUsingPATCH_9
2019-03-26 21:49:10 -Generating unique operation named: updateUsingDELETE_9
2019-03-26 21:49:10 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-26 21:49:10 -Generating unique operation named: updateUsingTRACE_9
2019-03-26 21:49:10 -Generating unique operation named: addUsingGET_13
2019-03-26 21:49:10 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-26 21:49:10 -Generating unique operation named: editUsingGET_14
2019-03-26 21:49:10 -Generating unique operation named: listUsingGET_15
2019-03-26 21:49:10 -Generating unique operation named: saveUsingPOST_13
2019-03-26 21:49:10 -Generating unique operation named: saveUsingPOST_14
2019-03-26 21:49:10 -Generating unique operation named: updateUsingPOST_14
2019-03-26 21:49:10 -Generating unique operation named: listUsingGET_16
2019-03-26 21:49:10 -Generating unique operation named: listUsingHEAD_1
2019-03-26 21:49:10 -Generating unique operation named: listUsingPOST_1
2019-03-26 21:49:10 -Generating unique operation named: listUsingPUT_1
2019-03-26 21:49:10 -Generating unique operation named: listUsingPATCH_1
2019-03-26 21:49:10 -Generating unique operation named: listUsingDELETE_1
2019-03-26 21:49:10 -Generating unique operation named: listUsingOPTIONS_1
2019-03-26 21:49:10 -Generating unique operation named: listUsingTRACE_1
2019-03-26 21:49:10 -Generating unique operation named: addUsingGET_14
2019-03-26 21:49:10 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-26 21:49:10 -Generating unique operation named: editUsingGET_15
2019-03-26 21:49:10 -Generating unique operation named: listUsingGET_17
2019-03-26 21:49:10 -Generating unique operation named: removeUsingPOST_26
2019-03-26 21:49:10 -Generating unique operation named: saveUsingPOST_15
2019-03-26 21:49:10 -Generating unique operation named: treeUsingGET_3
2019-03-26 21:49:10 -Generating unique operation named: treeViewUsingGET_1
2019-03-26 21:49:10 -Generating unique operation named: updateUsingPOST_15
2019-03-26 21:49:10 -Generating unique operation named: addUsingGET_15
2019-03-26 21:49:10 -Generating unique operation named: editUsingGET_16
2019-03-26 21:49:10 -Generating unique operation named: exprotExcelUsingGET_5
2019-03-26 21:49:10 -Generating unique operation named: listUsingGET_18
2019-03-26 21:49:10 -Generating unique operation named: removeUsingPOST_27
2019-03-26 21:49:10 -Generating unique operation named: removeUsingPOST_28
2019-03-26 21:49:10 -Generating unique operation named: saveUsingPOST_16
2019-03-26 21:49:10 -Generating unique operation named: updateUsingGET_10
2019-03-26 21:49:10 -Generating unique operation named: updateUsingHEAD_10
2019-03-26 21:49:10 -Generating unique operation named: updateUsingPOST_16
2019-03-26 21:49:10 -Generating unique operation named: updateUsingPUT_10
2019-03-26 21:49:10 -Generating unique operation named: updateUsingPATCH_10
2019-03-26 21:49:10 -Generating unique operation named: updateUsingDELETE_10
2019-03-26 21:49:10 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-26 21:49:10 -Generating unique operation named: updateUsingTRACE_10
2019-03-26 21:49:10 -Generating unique operation named: exprotExcelUsingGET_6
2019-03-26 21:49:10 -Generating unique operation named: addUsingGET_16
2019-03-26 21:49:10 -Generating unique operation named: editUsingGET_17
2019-03-26 21:49:10 -Generating unique operation named: listUsingGET_19
2019-03-26 21:49:10 -Generating unique operation named: removeUsingPOST_29
2019-03-26 21:49:10 -Generating unique operation named: removeUsingPOST_30
2019-03-26 21:49:10 -Generating unique operation named: saveUsingPOST_17
2019-03-26 21:49:10 -Generating unique operation named: updateUsingGET_11
2019-03-26 21:49:10 -Generating unique operation named: updateUsingHEAD_11
2019-03-26 21:49:10 -Generating unique operation named: updateUsingPOST_17
2019-03-26 21:49:10 -Generating unique operation named: updateUsingPUT_11
2019-03-26 21:49:10 -Generating unique operation named: updateUsingPATCH_11
2019-03-26 21:49:10 -Generating unique operation named: updateUsingDELETE_11
2019-03-26 21:49:10 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-26 21:49:10 -Generating unique operation named: updateUsingTRACE_11
2019-03-26 21:49:10 -Generating unique operation named: addUsingGET_17
2019-03-26 21:49:10 -Generating unique operation named: editUsingGET_18
2019-03-26 21:49:10 -Generating unique operation named: listUsingGET_20
2019-03-26 21:49:10 -Generating unique operation named: removeUsingPOST_31
2019-03-26 21:49:10 -Generating unique operation named: removeUsingPOST_32
2019-03-26 21:49:10 -Generating unique operation named: saveUsingPOST_18
2019-03-26 21:49:10 -Generating unique operation named: updateUsingGET_12
2019-03-26 21:49:10 -Generating unique operation named: updateUsingHEAD_12
2019-03-26 21:49:10 -Generating unique operation named: updateUsingPOST_18
2019-03-26 21:49:10 -Generating unique operation named: updateUsingPUT_12
2019-03-26 21:49:10 -Generating unique operation named: updateUsingPATCH_12
2019-03-26 21:49:10 -Generating unique operation named: updateUsingDELETE_12
2019-03-26 21:49:10 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-26 21:49:10 -Generating unique operation named: updateUsingTRACE_12
2019-03-26 21:49:10 -Starting Quartz Scheduler now
2019-03-26 21:49:10 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-26 21:49:10 -Starting...
2019-03-26 21:49:10 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-26 21:49:10 -Started.
2019-03-26 21:49:10 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-26 21:49:11 -Failed to start connector [Connector[HTTP/1.1-8081]]
org.apache.catalina.LifecycleException: Failed to start component [Connector[HTTP/1.1-8081]]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:167)
	at org.apache.catalina.core.StandardService.addConnector(StandardService.java:225)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.addPreviouslyRemovedConnectors(TomcatWebServer.java:256)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:198)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.startWebServer(ServletWebServerApplicationContext.java:300)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.finishRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:553)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.bootdo.BootdoApplication.main(BootdoApplication.java:21)
Caused by: org.apache.catalina.LifecycleException: Protocol handler start failed
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1020)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
	... 13 common frames omitted
Caused by: java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Unknown Source)
	at sun.nio.ch.Net.bind(Unknown Source)
	at sun.nio.ch.ServerSocketChannelImpl.bind(Unknown Source)
	at sun.nio.ch.ServerSocketAdaptor.bind(Unknown Source)
	at org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:210)
	at org.apache.tomcat.util.net.AbstractEndpoint.start(AbstractEndpoint.java:1150)
	at org.apache.coyote.AbstractProtocol.start(AbstractProtocol.java:591)
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1018)
	... 14 common frames omitted
2019-03-26 21:49:11 -Pausing ProtocolHandler ["http-nio-8081"]
2019-03-26 21:49:11 -Stopping service [Tomcat]
2019-03-26 21:49:11 -The stop() method was called on component [StandardServer[-1]] after stop() had already been called. The second call will be ignored.
2019-03-26 21:49:11 -Stopping ProtocolHandler ["http-nio-8081"]
2019-03-26 21:49:11 -Destroying ProtocolHandler ["http-nio-8081"]
2019-03-26 21:49:11 -

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2019-03-26 21:49:11 -

***************************
APPLICATION FAILED TO START
***************************

Description:

The Tomcat connector configured to listen on port 8081 failed to start. The port may already be in use or the connector may be misconfigured.

Action:

Verify the connector's configuration, identify and stop any process that's listening on port 8081, or configure this application to listen on another port.

2019-03-26 21:49:11 -Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7c041b41: startup date [Tue Mar 26 21:48:28 CST 2019]; root of context hierarchy
2019-03-26 21:49:11 -Stopping beans in phase 2147483647
2019-03-26 21:49:11 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2019-03-26 21:49:11 -Stopping...
2019-03-26 21:49:11 -BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-26 21:49:11 -Stopped.
2019-03-26 21:49:11 -Unregistering JMX-exposed beans on shutdown
2019-03-26 21:49:11 -Unregistering JMX-exposed beans
2019-03-26 21:49:11 -Shutting down ExecutorService 'brokerChannelExecutor'
2019-03-26 21:49:11 -Shutting down ExecutorService 'messageBrokerTaskScheduler'
2019-03-26 21:49:11 -Shutting down ExecutorService 'clientOutboundChannelExecutor'
2019-03-26 21:49:11 -Shutting down ExecutorService 'clientInboundChannelExecutor'
2019-03-26 21:49:11 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutting down.
2019-03-26 21:49:11 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2019-03-26 21:49:11 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutdown complete.
2019-03-26 21:49:11 -Shutting down Quartz Scheduler
2019-03-26 21:50:20 -Starting BootdoApplication on ZJZL-20180906VX with PID 13856 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-26 21:50:20 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-26 21:50:20 -The following profiles are active: dev
2019-03-26 21:50:20 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1698fc68: startup date [Tue Mar 26 21:50:20 CST 2019]; root of context hierarchy
2019-03-26 21:50:25 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-26 21:50:28 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$83dfbaa6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 21:50:28 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$7638e94d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 21:50:29 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 21:50:30 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 21:50:30 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 21:50:30 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-26 21:50:30 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-26 21:50:30 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 21:50:30 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 21:50:30 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 21:50:30 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 21:50:31 -Tomcat initialized with port(s): 8081 (http)
2019-03-26 21:50:31 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-26 21:50:31 -Starting service [Tomcat]
2019-03-26 21:50:31 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-26 21:50:31 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-26 21:50:32 -Initializing Spring embedded WebApplicationContext
2019-03-26 21:50:32 -Root WebApplicationContext: initialization completed in 11630 ms
2019-03-26 21:50:33 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-26 21:50:33 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-26 21:50:33 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-26 21:50:33 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-26 21:50:33 -Filter xssFilter was not registered (disabled)
2019-03-26 21:50:33 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-26 21:50:33 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-26 21:50:33 -Servlet statViewServlet mapped to [/druid/*]
2019-03-26 21:50:33 -Servlet dispatcherServlet mapped to [/]
2019-03-26 21:50:36 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1698fc68: startup date [Tue Mar 26 21:50:20 CST 2019]; root of context hierarchy
2019-03-26 21:50:36 -Using default implementation for ThreadExecutor
2019-03-26 21:50:36 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-26 21:50:36 -Quartz Scheduler v.2.2.1 created.
2019-03-26 21:50:36 -RAMJobStore initialized.
2019-03-26 21:50:36 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-26 21:50:36 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-26 21:50:36 -Quartz scheduler version: 2.2.1
2019-03-26 21:50:36 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@1324e70a
2019-03-26 21:50:37 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-26 21:50:37 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-26 21:50:41 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-26 21:50:41 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-03-26 21:50:41 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-26 21:50:41 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-26 21:50:41 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-26 21:50:41 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-26 21:50:41 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-26 21:50:41 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-26 21:50:41 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-26 21:50:41 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-26 21:50:41 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-26 21:50:41 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 21:50:41 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-26 21:50:41 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-26 21:50:41 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-26 21:50:41 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 21:50:41 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-26 21:50:41 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-26 21:50:41 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-26 21:50:41 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-26 21:50:41 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-26 21:50:41 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-26 21:50:41 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 21:50:41 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-26 21:50:41 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-26 21:50:41 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-26 21:50:41 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-26 21:50:41 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 21:50:41 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 21:50:41 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-26 21:50:41 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-26 21:50:41 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-26 21:50:41 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-26 21:50:41 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-26 21:50:41 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-26 21:50:41 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-26 21:50:41 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-26 21:50:41 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-26 21:50:41 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 21:50:41 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-26 21:50:41 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-26 21:50:41 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-26 21:50:41 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-26 21:50:41 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 21:50:41 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-26 21:50:41 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-26 21:50:41 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 21:50:41 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-26 21:50:41 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-03-26 21:50:41 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-26 21:50:41 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-26 21:50:41 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-26 21:50:41 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-26 21:50:41 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-26 21:50:41 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-26 21:50:41 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-26 21:50:41 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-26 21:50:41 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-26 21:50:41 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-26 21:50:41 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-26 21:50:41 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 21:50:41 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-26 21:50:41 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-03-26 21:50:41 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-26 21:50:41 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-26 21:50:41 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-26 21:50:41 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-26 21:50:41 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-26 21:50:41 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 21:50:41 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-03-26 21:50:41 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-26 21:50:41 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 21:50:41 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-26 21:50:41 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-26 21:50:41 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-26 21:50:41 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-26 21:50:41 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-26 21:50:41 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-26 21:50:41 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 21:50:41 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-26 21:50:41 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-26 21:50:41 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-26 21:50:41 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-26 21:50:41 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-26 21:50:41 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-26 21:50:41 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-26 21:50:41 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-26 21:50:41 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-26 21:50:41 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-26 21:50:41 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 21:50:41 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-26 21:50:41 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-26 21:50:41 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 21:50:41 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-26 21:50:41 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-03-26 21:50:41 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-03-26 21:50:41 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-26 21:50:41 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-26 21:50:41 -Mapped "{[/moneyList/moneyList/LikeName],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.LikeName(org.springframework.ui.Model)
2019-03-26 21:50:41 -Mapped "{[/moneyList/moneyList/UserList],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-26 21:50:41 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-26 21:50:41 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-26 21:50:41 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-26 21:50:41 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-26 21:50:41 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 21:50:41 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-26 21:50:41 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-26 21:50:41 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-26 21:50:41 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 21:50:41 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-26 21:50:41 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-26 21:50:41 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-26 21:50:41 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-26 21:50:41 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 21:50:41 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-26 21:50:41 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-26 21:50:41 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-26 21:50:41 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 21:50:41 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-26 21:50:41 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-26 21:50:41 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-26 21:50:41 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-26 21:50:41 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 21:50:41 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-26 21:50:41 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-26 21:50:41 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-26 21:50:41 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 21:50:41 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-26 21:50:41 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-26 21:50:41 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-26 21:50:41 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-26 21:50:41 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-26 21:50:41 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 21:50:41 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-26 21:50:41 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-26 21:50:41 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-26 21:50:41 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 21:50:41 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-26 21:50:41 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 21:50:41 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-26 21:50:41 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-26 21:50:41 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-26 21:50:41 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-26 21:50:41 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 21:50:41 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-26 21:50:41 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-26 21:50:41 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-26 21:50:41 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 21:50:41 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 21:50:41 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-26 21:50:41 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-26 21:50:41 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-26 21:50:41 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-26 21:50:41 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-26 21:50:41 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-26 21:50:41 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-26 21:50:41 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-26 21:50:41 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-26 21:50:41 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 21:50:41 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-26 21:50:41 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-26 21:50:41 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-26 21:50:41 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-26 21:50:41 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-26 21:50:41 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-26 21:50:41 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-26 21:50:41 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-26 21:50:41 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-26 21:50:41 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-26 21:50:41 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 21:50:41 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-26 21:50:41 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-26 21:50:41 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-26 21:50:41 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-26 21:50:41 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-26 21:50:41 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-26 21:50:41 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-26 21:50:41 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-26 21:50:41 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-26 21:50:41 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-26 21:50:41 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-26 21:50:41 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-26 21:50:41 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 21:50:41 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-26 21:50:41 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-26 21:50:41 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-26 21:50:41 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-26 21:50:41 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 21:50:41 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-26 21:50:41 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-26 21:50:41 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-26 21:50:41 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 21:50:41 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-26 21:50:41 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-26 21:50:41 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-26 21:50:41 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-26 21:50:41 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-26 21:50:41 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-26 21:50:41 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-26 21:50:41 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-26 21:50:41 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-26 21:50:41 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-26 21:50:41 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-26 21:50:41 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-26 21:50:41 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-26 21:50:41 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-26 21:50:41 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-26 21:50:41 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-26 21:50:41 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-26 21:50:41 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 21:50:41 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-26 21:50:41 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-26 21:50:41 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 21:50:41 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-26 21:50:41 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 21:50:41 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-26 21:50:41 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-26 21:50:41 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-26 21:50:41 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-26 21:50:41 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-26 21:50:41 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-26 21:50:41 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 21:50:41 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-26 21:50:41 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 21:50:41 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-26 21:50:41 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-03-26 21:50:41 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-26 21:50:41 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-26 21:50:41 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-03-26 21:50:41 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-26 21:50:41 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-26 21:50:41 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-26 21:50:41 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-26 21:50:42 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-26 21:50:42 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-26 21:50:42 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-26 21:50:43 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-26 21:50:43 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1698fc68: startup date [Tue Mar 26 21:50:20 CST 2019]; root of context hierarchy
2019-03-26 21:50:44 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-26 21:50:44 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-26 21:50:44 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-26 21:50:44 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-26 21:50:44 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-26 21:50:47 -Registering beans for JMX exposure on startup
2019-03-26 21:50:47 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-26 21:50:47 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-26 21:50:47 -Starting beans in phase 2147483647
2019-03-26 21:50:47 -Context refreshed
2019-03-26 21:50:47 -Found 1 custom documentation plugin(s)
2019-03-26 21:50:47 -Scanning for api listing references
2019-03-26 21:50:48 -Generating unique operation named: removeUsingPOST_1
2019-03-26 21:50:48 -Generating unique operation named: addUsingGET_1
2019-03-26 21:50:48 -Generating unique operation named: editUsingGET_1
2019-03-26 21:50:48 -Generating unique operation named: listUsingGET_1
2019-03-26 21:50:48 -Generating unique operation named: removeUsingPOST_2
2019-03-26 21:50:48 -Generating unique operation named: removeUsingPOST_3
2019-03-26 21:50:48 -Generating unique operation named: saveUsingPOST_1
2019-03-26 21:50:48 -Generating unique operation named: updateUsingGET_1
2019-03-26 21:50:48 -Generating unique operation named: updateUsingHEAD_1
2019-03-26 21:50:48 -Generating unique operation named: updateUsingPOST_1
2019-03-26 21:50:48 -Generating unique operation named: updateUsingPUT_1
2019-03-26 21:50:48 -Generating unique operation named: updateUsingPATCH_1
2019-03-26 21:50:48 -Generating unique operation named: updateUsingDELETE_1
2019-03-26 21:50:48 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-26 21:50:48 -Generating unique operation named: updateUsingTRACE_1
2019-03-26 21:50:48 -Generating unique operation named: addUsingGET_2
2019-03-26 21:50:48 -Generating unique operation named: editUsingGET_2
2019-03-26 21:50:48 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-26 21:50:49 -Generating unique operation named: listUsingGET_2
2019-03-26 21:50:49 -Generating unique operation named: removeUsingPOST_4
2019-03-26 21:50:49 -Generating unique operation named: removeUsingPOST_5
2019-03-26 21:50:49 -Generating unique operation named: saveUsingPOST_2
2019-03-26 21:50:49 -Generating unique operation named: updateUsingPOST_2
2019-03-26 21:50:49 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-26 21:50:49 -Generating unique operation named: addUsingGET_3
2019-03-26 21:50:49 -Generating unique operation named: editUsingGET_3
2019-03-26 21:50:49 -Generating unique operation named: listUsingGET_3
2019-03-26 21:50:49 -Generating unique operation named: removeUsingPOST_6
2019-03-26 21:50:49 -Generating unique operation named: removeUsingPOST_7
2019-03-26 21:50:49 -Generating unique operation named: saveUsingPOST_3
2019-03-26 21:50:49 -Generating unique operation named: updateUsingGET_2
2019-03-26 21:50:49 -Generating unique operation named: updateUsingHEAD_2
2019-03-26 21:50:49 -Generating unique operation named: updateUsingPOST_3
2019-03-26 21:50:49 -Generating unique operation named: updateUsingPUT_2
2019-03-26 21:50:49 -Generating unique operation named: updateUsingPATCH_2
2019-03-26 21:50:49 -Generating unique operation named: updateUsingDELETE_2
2019-03-26 21:50:49 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-26 21:50:49 -Generating unique operation named: updateUsingTRACE_2
2019-03-26 21:50:49 -Generating unique operation named: addUsingGET_4
2019-03-26 21:50:49 -Generating unique operation named: editUsingGET_4
2019-03-26 21:50:49 -Generating unique operation named: listUsingGET_4
2019-03-26 21:50:49 -Generating unique operation named: removeUsingPOST_8
2019-03-26 21:50:49 -Generating unique operation named: removeUsingPOST_9
2019-03-26 21:50:49 -Generating unique operation named: saveUsingPOST_4
2019-03-26 21:50:49 -Generating unique operation named: updateUsingGET_3
2019-03-26 21:50:49 -Generating unique operation named: updateUsingHEAD_3
2019-03-26 21:50:49 -Generating unique operation named: updateUsingPOST_4
2019-03-26 21:50:49 -Generating unique operation named: updateUsingPUT_3
2019-03-26 21:50:49 -Generating unique operation named: updateUsingPATCH_3
2019-03-26 21:50:49 -Generating unique operation named: updateUsingDELETE_3
2019-03-26 21:50:49 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-26 21:50:49 -Generating unique operation named: updateUsingTRACE_3
2019-03-26 21:50:49 -Generating unique operation named: ElecUsingGET_1
2019-03-26 21:50:49 -Generating unique operation named: addUsingGET_5
2019-03-26 21:50:49 -Generating unique operation named: editUsingGET_5
2019-03-26 21:50:49 -Generating unique operation named: listUsingGET_5
2019-03-26 21:50:49 -Generating unique operation named: removeUsingPOST_10
2019-03-26 21:50:49 -Generating unique operation named: removeUsingPOST_11
2019-03-26 21:50:49 -Generating unique operation named: saveUsingPOST_5
2019-03-26 21:50:49 -Generating unique operation named: updateUsingGET_4
2019-03-26 21:50:49 -Generating unique operation named: updateUsingHEAD_4
2019-03-26 21:50:49 -Generating unique operation named: updateUsingPOST_5
2019-03-26 21:50:49 -Generating unique operation named: updateUsingPUT_4
2019-03-26 21:50:49 -Generating unique operation named: updateUsingPATCH_4
2019-03-26 21:50:49 -Generating unique operation named: updateUsingDELETE_4
2019-03-26 21:50:49 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-26 21:50:49 -Generating unique operation named: updateUsingTRACE_4
2019-03-26 21:50:49 -Generating unique operation named: editUsingGET_6
2019-03-26 21:50:49 -Generating unique operation named: listUsingGET_6
2019-03-26 21:50:49 -Generating unique operation named: updateUsingPOST_6
2019-03-26 21:50:49 -Generating unique operation named: addUsingGET_6
2019-03-26 21:50:49 -Generating unique operation named: editUsingGET_7
2019-03-26 21:50:49 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-26 21:50:49 -Generating unique operation named: listUsingGET_7
2019-03-26 21:50:49 -Generating unique operation named: removeUsingPOST_12
2019-03-26 21:50:49 -Generating unique operation named: removeUsingPOST_13
2019-03-26 21:50:49 -Generating unique operation named: saveUsingPOST_6
2019-03-26 21:50:49 -Generating unique operation named: updateUsingGET_5
2019-03-26 21:50:49 -Generating unique operation named: updateUsingHEAD_5
2019-03-26 21:50:49 -Generating unique operation named: updateUsingPOST_7
2019-03-26 21:50:49 -Generating unique operation named: updateUsingPUT_5
2019-03-26 21:50:49 -Generating unique operation named: updateUsingPATCH_5
2019-03-26 21:50:49 -Generating unique operation named: updateUsingDELETE_5
2019-03-26 21:50:49 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-26 21:50:49 -Generating unique operation named: updateUsingTRACE_5
2019-03-26 21:50:49 -Generating unique operation named: exprotExcelUsingGET_4
2019-03-26 21:50:49 -Generating unique operation named: addUsingGET_7
2019-03-26 21:50:49 -Generating unique operation named: editUsingGET_8
2019-03-26 21:50:49 -Generating unique operation named: listUsingGET_8
2019-03-26 21:50:49 -Generating unique operation named: removeUsingPOST_14
2019-03-26 21:50:49 -Generating unique operation named: removeUsingPOST_15
2019-03-26 21:50:49 -Generating unique operation named: saveUsingPOST_7
2019-03-26 21:50:49 -Generating unique operation named: updateUsingGET_6
2019-03-26 21:50:49 -Generating unique operation named: updateUsingHEAD_6
2019-03-26 21:50:49 -Generating unique operation named: updateUsingPOST_8
2019-03-26 21:50:49 -Generating unique operation named: updateUsingPUT_6
2019-03-26 21:50:49 -Generating unique operation named: updateUsingPATCH_6
2019-03-26 21:50:49 -Generating unique operation named: updateUsingDELETE_6
2019-03-26 21:50:49 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-26 21:50:49 -Generating unique operation named: updateUsingTRACE_6
2019-03-26 21:50:50 -Generating unique operation named: addUsingGET_8
2019-03-26 21:50:50 -Generating unique operation named: editUsingGET_9
2019-03-26 21:50:50 -Generating unique operation named: listUsingGET_9
2019-03-26 21:50:50 -Generating unique operation named: removeUsingPOST_16
2019-03-26 21:50:50 -Generating unique operation named: removeUsingPOST_17
2019-03-26 21:50:50 -Generating unique operation named: saveUsingPOST_8
2019-03-26 21:50:50 -Generating unique operation named: updateUsingGET_7
2019-03-26 21:50:50 -Generating unique operation named: updateUsingHEAD_7
2019-03-26 21:50:50 -Generating unique operation named: updateUsingPOST_9
2019-03-26 21:50:50 -Generating unique operation named: updateUsingPUT_7
2019-03-26 21:50:50 -Generating unique operation named: updateUsingPATCH_7
2019-03-26 21:50:50 -Generating unique operation named: updateUsingDELETE_7
2019-03-26 21:50:50 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-26 21:50:50 -Generating unique operation named: updateUsingTRACE_7
2019-03-26 21:50:50 -Generating unique operation named: addUsingGET_9
2019-03-26 21:50:50 -Generating unique operation named: editUsingGET_10
2019-03-26 21:50:50 -Generating unique operation named: infoUsingGET_1
2019-03-26 21:50:50 -Generating unique operation named: infoUsingHEAD_1
2019-03-26 21:50:50 -Generating unique operation named: infoUsingPOST_1
2019-03-26 21:50:50 -Generating unique operation named: infoUsingPUT_1
2019-03-26 21:50:50 -Generating unique operation named: infoUsingPATCH_1
2019-03-26 21:50:50 -Generating unique operation named: infoUsingDELETE_1
2019-03-26 21:50:50 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-26 21:50:50 -Generating unique operation named: infoUsingTRACE_1
2019-03-26 21:50:50 -Generating unique operation named: listUsingGET_10
2019-03-26 21:50:50 -Generating unique operation named: removeUsingPOST_18
2019-03-26 21:50:50 -Generating unique operation named: removeUsingPOST_19
2019-03-26 21:50:50 -Generating unique operation named: saveUsingPOST_9
2019-03-26 21:50:50 -Generating unique operation named: updateUsingPOST_10
2019-03-26 21:50:50 -Generating unique operation named: listUsingGET_11
2019-03-26 21:50:50 -Generating unique operation named: removeUsingPOST_20
2019-03-26 21:50:50 -Generating unique operation named: welcomeUsingGET_1
2019-03-26 21:50:50 -Generating unique operation named: addUsingGET_10
2019-03-26 21:50:50 -Generating unique operation named: editUsingGET_11
2019-03-26 21:50:50 -Generating unique operation named: listUsingGET_12
2019-03-26 21:50:50 -Generating unique operation named: removeUsingPOST_21
2019-03-26 21:50:50 -Generating unique operation named: saveUsingPOST_10
2019-03-26 21:50:50 -Generating unique operation named: treeUsingGET_1
2019-03-26 21:50:50 -Generating unique operation named: treeUsingGET_2
2019-03-26 21:50:50 -Generating unique operation named: updateUsingPOST_11
2019-03-26 21:50:50 -Generating unique operation named: addUsingGET_11
2019-03-26 21:50:50 -Generating unique operation named: editUsingGET_12
2019-03-26 21:50:50 -Generating unique operation named: listUsingGET_13
2019-03-26 21:50:50 -Generating unique operation named: removeUsingPOST_22
2019-03-26 21:50:50 -Generating unique operation named: removeUsingPOST_23
2019-03-26 21:50:50 -Generating unique operation named: saveUsingPOST_11
2019-03-26 21:50:50 -Generating unique operation named: updateUsingGET_8
2019-03-26 21:50:50 -Generating unique operation named: updateUsingHEAD_8
2019-03-26 21:50:50 -Generating unique operation named: updateUsingPOST_12
2019-03-26 21:50:50 -Generating unique operation named: updateUsingPUT_8
2019-03-26 21:50:50 -Generating unique operation named: updateUsingPATCH_8
2019-03-26 21:50:50 -Generating unique operation named: updateUsingDELETE_8
2019-03-26 21:50:50 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-26 21:50:50 -Generating unique operation named: updateUsingTRACE_8
2019-03-26 21:50:50 -Generating unique operation named: addUsingGET_12
2019-03-26 21:50:50 -Generating unique operation named: editUsingGET_13
2019-03-26 21:50:50 -Generating unique operation named: listUsingGET_14
2019-03-26 21:50:50 -Generating unique operation named: removeUsingPOST_24
2019-03-26 21:50:50 -Generating unique operation named: removeUsingPOST_25
2019-03-26 21:50:50 -Generating unique operation named: saveUsingPOST_12
2019-03-26 21:50:50 -Generating unique operation named: updateUsingGET_9
2019-03-26 21:50:50 -Generating unique operation named: updateUsingHEAD_9
2019-03-26 21:50:50 -Generating unique operation named: updateUsingPOST_13
2019-03-26 21:50:50 -Generating unique operation named: updateUsingPUT_9
2019-03-26 21:50:50 -Generating unique operation named: updateUsingPATCH_9
2019-03-26 21:50:50 -Generating unique operation named: updateUsingDELETE_9
2019-03-26 21:50:50 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-26 21:50:50 -Generating unique operation named: updateUsingTRACE_9
2019-03-26 21:50:50 -Generating unique operation named: addUsingGET_13
2019-03-26 21:50:50 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-26 21:50:50 -Generating unique operation named: editUsingGET_14
2019-03-26 21:50:50 -Generating unique operation named: listUsingGET_15
2019-03-26 21:50:50 -Generating unique operation named: saveUsingPOST_13
2019-03-26 21:50:50 -Generating unique operation named: saveUsingPOST_14
2019-03-26 21:50:50 -Generating unique operation named: updateUsingPOST_14
2019-03-26 21:50:51 -Generating unique operation named: listUsingGET_16
2019-03-26 21:50:51 -Generating unique operation named: listUsingHEAD_1
2019-03-26 21:50:51 -Generating unique operation named: listUsingPOST_1
2019-03-26 21:50:51 -Generating unique operation named: listUsingPUT_1
2019-03-26 21:50:51 -Generating unique operation named: listUsingPATCH_1
2019-03-26 21:50:51 -Generating unique operation named: listUsingDELETE_1
2019-03-26 21:50:51 -Generating unique operation named: listUsingOPTIONS_1
2019-03-26 21:50:51 -Generating unique operation named: listUsingTRACE_1
2019-03-26 21:50:51 -Generating unique operation named: addUsingGET_14
2019-03-26 21:50:51 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-26 21:50:51 -Generating unique operation named: editUsingGET_15
2019-03-26 21:50:51 -Generating unique operation named: listUsingGET_17
2019-03-26 21:50:51 -Generating unique operation named: removeUsingPOST_26
2019-03-26 21:50:51 -Generating unique operation named: saveUsingPOST_15
2019-03-26 21:50:51 -Generating unique operation named: treeUsingGET_3
2019-03-26 21:50:51 -Generating unique operation named: treeViewUsingGET_1
2019-03-26 21:50:51 -Generating unique operation named: updateUsingPOST_15
2019-03-26 21:50:51 -Generating unique operation named: addUsingGET_15
2019-03-26 21:50:51 -Generating unique operation named: editUsingGET_16
2019-03-26 21:50:51 -Generating unique operation named: exprotExcelUsingGET_5
2019-03-26 21:50:51 -Generating unique operation named: listUsingGET_18
2019-03-26 21:50:51 -Generating unique operation named: removeUsingPOST_27
2019-03-26 21:50:51 -Generating unique operation named: removeUsingPOST_28
2019-03-26 21:50:51 -Generating unique operation named: saveUsingPOST_16
2019-03-26 21:50:51 -Generating unique operation named: updateUsingGET_10
2019-03-26 21:50:51 -Generating unique operation named: updateUsingHEAD_10
2019-03-26 21:50:51 -Generating unique operation named: updateUsingPOST_16
2019-03-26 21:50:51 -Generating unique operation named: updateUsingPUT_10
2019-03-26 21:50:51 -Generating unique operation named: updateUsingPATCH_10
2019-03-26 21:50:51 -Generating unique operation named: updateUsingDELETE_10
2019-03-26 21:50:51 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-26 21:50:51 -Generating unique operation named: updateUsingTRACE_10
2019-03-26 21:50:51 -Generating unique operation named: exprotExcelUsingGET_6
2019-03-26 21:50:51 -Generating unique operation named: addUsingGET_16
2019-03-26 21:50:51 -Generating unique operation named: editUsingGET_17
2019-03-26 21:50:51 -Generating unique operation named: listUsingGET_19
2019-03-26 21:50:51 -Generating unique operation named: removeUsingPOST_29
2019-03-26 21:50:51 -Generating unique operation named: removeUsingPOST_30
2019-03-26 21:50:51 -Generating unique operation named: saveUsingPOST_17
2019-03-26 21:50:51 -Generating unique operation named: updateUsingGET_11
2019-03-26 21:50:51 -Generating unique operation named: updateUsingHEAD_11
2019-03-26 21:50:51 -Generating unique operation named: updateUsingPOST_17
2019-03-26 21:50:51 -Generating unique operation named: updateUsingPUT_11
2019-03-26 21:50:51 -Generating unique operation named: updateUsingPATCH_11
2019-03-26 21:50:51 -Generating unique operation named: updateUsingDELETE_11
2019-03-26 21:50:51 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-26 21:50:51 -Generating unique operation named: updateUsingTRACE_11
2019-03-26 21:50:51 -Generating unique operation named: addUsingGET_17
2019-03-26 21:50:51 -Generating unique operation named: editUsingGET_18
2019-03-26 21:50:51 -Generating unique operation named: listUsingGET_20
2019-03-26 21:50:51 -Generating unique operation named: removeUsingPOST_31
2019-03-26 21:50:51 -Generating unique operation named: removeUsingPOST_32
2019-03-26 21:50:51 -Generating unique operation named: saveUsingPOST_18
2019-03-26 21:50:51 -Generating unique operation named: updateUsingGET_12
2019-03-26 21:50:51 -Generating unique operation named: updateUsingHEAD_12
2019-03-26 21:50:51 -Generating unique operation named: updateUsingPOST_18
2019-03-26 21:50:51 -Generating unique operation named: updateUsingPUT_12
2019-03-26 21:50:51 -Generating unique operation named: updateUsingPATCH_12
2019-03-26 21:50:51 -Generating unique operation named: updateUsingDELETE_12
2019-03-26 21:50:51 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-26 21:50:51 -Generating unique operation named: updateUsingTRACE_12
2019-03-26 21:50:52 -Starting Quartz Scheduler now
2019-03-26 21:50:52 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-26 21:50:52 -Starting...
2019-03-26 21:50:52 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-26 21:50:52 -Started.
2019-03-26 21:50:52 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-26 21:50:52 -Failed to start connector [Connector[HTTP/1.1-8081]]
org.apache.catalina.LifecycleException: Failed to start component [Connector[HTTP/1.1-8081]]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:167)
	at org.apache.catalina.core.StandardService.addConnector(StandardService.java:225)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.addPreviouslyRemovedConnectors(TomcatWebServer.java:256)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:198)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.startWebServer(ServletWebServerApplicationContext.java:300)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.finishRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:553)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.bootdo.BootdoApplication.main(BootdoApplication.java:21)
Caused by: org.apache.catalina.LifecycleException: Protocol handler start failed
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1020)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
	... 13 common frames omitted
Caused by: java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Unknown Source)
	at sun.nio.ch.Net.bind(Unknown Source)
	at sun.nio.ch.ServerSocketChannelImpl.bind(Unknown Source)
	at sun.nio.ch.ServerSocketAdaptor.bind(Unknown Source)
	at org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:210)
	at org.apache.tomcat.util.net.AbstractEndpoint.start(AbstractEndpoint.java:1150)
	at org.apache.coyote.AbstractProtocol.start(AbstractProtocol.java:591)
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1018)
	... 14 common frames omitted
2019-03-26 21:50:52 -Pausing ProtocolHandler ["http-nio-8081"]
2019-03-26 21:50:52 -Stopping service [Tomcat]
2019-03-26 21:50:52 -The stop() method was called on component [StandardServer[-1]] after stop() had already been called. The second call will be ignored.
2019-03-26 21:50:52 -Stopping ProtocolHandler ["http-nio-8081"]
2019-03-26 21:50:52 -Destroying ProtocolHandler ["http-nio-8081"]
2019-03-26 21:50:52 -

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2019-03-26 21:50:52 -

***************************
APPLICATION FAILED TO START
***************************

Description:

The Tomcat connector configured to listen on port 8081 failed to start. The port may already be in use or the connector may be misconfigured.

Action:

Verify the connector's configuration, identify and stop any process that's listening on port 8081, or configure this application to listen on another port.

2019-03-26 21:50:52 -Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1698fc68: startup date [Tue Mar 26 21:50:20 CST 2019]; root of context hierarchy
2019-03-26 21:50:52 -Stopping beans in phase 2147483647
2019-03-26 21:50:52 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2019-03-26 21:50:52 -Stopping...
2019-03-26 21:50:52 -BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-26 21:50:52 -Stopped.
2019-03-26 21:50:52 -Unregistering JMX-exposed beans on shutdown
2019-03-26 21:50:52 -Unregistering JMX-exposed beans
2019-03-26 21:50:52 -Shutting down ExecutorService 'brokerChannelExecutor'
2019-03-26 21:50:52 -Shutting down ExecutorService 'messageBrokerTaskScheduler'
2019-03-26 21:50:52 -Shutting down ExecutorService 'clientOutboundChannelExecutor'
2019-03-26 21:50:52 -Shutting down ExecutorService 'clientInboundChannelExecutor'
2019-03-26 21:50:52 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutting down.
2019-03-26 21:50:52 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2019-03-26 21:50:52 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutdown complete.
2019-03-26 21:50:52 -Shutting down Quartz Scheduler
2019-03-26 21:57:02 -Starting BootdoApplication on ZJZL-20180906VX with PID 2948 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-26 21:57:02 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-26 21:57:02 -The following profiles are active: dev
2019-03-26 21:57:02 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Tue Mar 26 21:57:02 CST 2019]; root of context hierarchy
2019-03-26 21:57:05 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-26 21:57:09 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ec7c61e8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 21:57:09 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$ded5908f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 21:57:10 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 21:57:10 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 21:57:10 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 21:57:10 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-26 21:57:10 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-26 21:57:10 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 21:57:10 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 21:57:10 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 21:57:10 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 21:57:11 -Tomcat initialized with port(s): 8081 (http)
2019-03-26 21:57:11 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-26 21:57:11 -Starting service [Tomcat]
2019-03-26 21:57:11 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-26 21:57:12 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-26 21:57:12 -Initializing Spring embedded WebApplicationContext
2019-03-26 21:57:12 -Root WebApplicationContext: initialization completed in 9954 ms
2019-03-26 21:57:12 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-26 21:57:12 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-26 21:57:12 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-26 21:57:12 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-26 21:57:12 -Filter xssFilter was not registered (disabled)
2019-03-26 21:57:12 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-26 21:57:12 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-26 21:57:12 -Servlet statViewServlet mapped to [/druid/*]
2019-03-26 21:57:12 -Servlet dispatcherServlet mapped to [/]
2019-03-26 21:57:15 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Tue Mar 26 21:57:02 CST 2019]; root of context hierarchy
2019-03-26 21:57:15 -Using default implementation for ThreadExecutor
2019-03-26 21:57:15 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-26 21:57:15 -Quartz Scheduler v.2.2.1 created.
2019-03-26 21:57:15 -RAMJobStore initialized.
2019-03-26 21:57:15 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-26 21:57:15 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-26 21:57:15 -Quartz scheduler version: 2.2.1
2019-03-26 21:57:15 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@53cddaf8
2019-03-26 21:57:16 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-26 21:57:16 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-26 21:57:18 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-03-26 21:57:18 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-26 21:57:18 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-26 21:57:18 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-26 21:57:18 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-26 21:57:18 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-26 21:57:18 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-26 21:57:18 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-26 21:57:18 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-26 21:57:18 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-26 21:57:18 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-26 21:57:18 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 21:57:18 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-26 21:57:18 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-26 21:57:18 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-26 21:57:18 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 21:57:18 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-26 21:57:18 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-26 21:57:18 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-26 21:57:18 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-26 21:57:18 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-26 21:57:18 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-26 21:57:18 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 21:57:18 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-26 21:57:18 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-26 21:57:18 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 21:57:18 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-26 21:57:18 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-26 21:57:18 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 21:57:18 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-26 21:57:18 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-26 21:57:18 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-26 21:57:18 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-26 21:57:18 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-26 21:57:18 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-26 21:57:18 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-26 21:57:18 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-26 21:57:18 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-26 21:57:18 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 21:57:18 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-26 21:57:18 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-26 21:57:18 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 21:57:18 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-26 21:57:18 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-26 21:57:18 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-26 21:57:18 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-26 21:57:18 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 21:57:18 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-26 21:57:18 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-03-26 21:57:18 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-26 21:57:18 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-26 21:57:18 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-26 21:57:18 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-26 21:57:18 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-26 21:57:18 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-26 21:57:18 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-26 21:57:18 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-26 21:57:18 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-26 21:57:18 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-26 21:57:18 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 21:57:18 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-26 21:57:18 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-03-26 21:57:18 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-26 21:57:18 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-26 21:57:18 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-26 21:57:18 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-26 21:57:18 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-26 21:57:18 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-26 21:57:18 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 21:57:18 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-03-26 21:57:18 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 21:57:18 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-26 21:57:18 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-26 21:57:18 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-26 21:57:18 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-26 21:57:18 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-26 21:57:18 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-26 21:57:18 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-26 21:57:18 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 21:57:18 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-26 21:57:18 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-26 21:57:18 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-26 21:57:18 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-26 21:57:18 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-26 21:57:18 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-26 21:57:18 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-26 21:57:18 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-26 21:57:18 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-26 21:57:18 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-26 21:57:18 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 21:57:18 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-26 21:57:18 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 21:57:18 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-26 21:57:18 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-26 21:57:18 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-03-26 21:57:18 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-26 21:57:18 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-03-26 21:57:18 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-26 21:57:18 -Mapped "{[/moneyList/moneyList/UserList],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-26 21:57:18 -Mapped "{[/moneyList/moneyList/LikeName],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.LikeName(org.springframework.ui.Model)
2019-03-26 21:57:18 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-26 21:57:18 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-26 21:57:18 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-26 21:57:18 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-26 21:57:18 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 21:57:18 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-26 21:57:18 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 21:57:18 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-26 21:57:18 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-26 21:57:18 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-26 21:57:18 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-26 21:57:18 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-26 21:57:18 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-26 21:57:18 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 21:57:18 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-26 21:57:18 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 21:57:18 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-26 21:57:18 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-26 21:57:18 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-26 21:57:18 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-26 21:57:18 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-26 21:57:18 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-26 21:57:18 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 21:57:18 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-26 21:57:18 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 21:57:18 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-26 21:57:18 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-26 21:57:18 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-26 21:57:18 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-26 21:57:18 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-26 21:57:18 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-26 21:57:18 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-26 21:57:18 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 21:57:18 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-26 21:57:18 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-26 21:57:18 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 21:57:18 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-26 21:57:18 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 21:57:18 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-26 21:57:18 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-26 21:57:18 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-26 21:57:18 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-26 21:57:18 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-26 21:57:18 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 21:57:18 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-26 21:57:18 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-26 21:57:18 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-26 21:57:18 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 21:57:18 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 21:57:18 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-26 21:57:18 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-26 21:57:18 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-26 21:57:18 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-26 21:57:18 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-26 21:57:18 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-26 21:57:18 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-26 21:57:18 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-26 21:57:18 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-26 21:57:18 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 21:57:18 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-26 21:57:18 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-26 21:57:18 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-26 21:57:18 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-26 21:57:18 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-26 21:57:18 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-26 21:57:18 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-26 21:57:18 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-26 21:57:18 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-26 21:57:18 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-26 21:57:18 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 21:57:18 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-26 21:57:18 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-26 21:57:18 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-26 21:57:18 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-26 21:57:18 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-26 21:57:18 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-26 21:57:18 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-26 21:57:18 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-26 21:57:18 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-26 21:57:18 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-26 21:57:18 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-26 21:57:18 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-26 21:57:18 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 21:57:18 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-26 21:57:18 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-26 21:57:18 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-26 21:57:18 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-26 21:57:18 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 21:57:18 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-26 21:57:18 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-26 21:57:18 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-26 21:57:18 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 21:57:18 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-26 21:57:18 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-26 21:57:18 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-26 21:57:18 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-26 21:57:18 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-26 21:57:18 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-26 21:57:18 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-26 21:57:18 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-26 21:57:18 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-26 21:57:18 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-26 21:57:18 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-26 21:57:18 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-26 21:57:18 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-26 21:57:18 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-26 21:57:18 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-26 21:57:18 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-26 21:57:18 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-26 21:57:18 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 21:57:18 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-26 21:57:19 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 21:57:19 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-26 21:57:19 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-26 21:57:19 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 21:57:19 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-26 21:57:19 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-26 21:57:19 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-26 21:57:19 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-26 21:57:19 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-26 21:57:19 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-26 21:57:19 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 21:57:19 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-26 21:57:19 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-26 21:57:19 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 21:57:19 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-26 21:57:19 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-03-26 21:57:19 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-03-26 21:57:19 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-26 21:57:19 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-26 21:57:19 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-26 21:57:19 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-26 21:57:19 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-26 21:57:19 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-26 21:57:19 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-26 21:57:19 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-26 21:57:19 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-26 21:57:20 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Tue Mar 26 21:57:02 CST 2019]; root of context hierarchy
2019-03-26 21:57:20 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-26 21:57:20 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-26 21:57:20 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-26 21:57:20 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-26 21:57:20 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-26 21:57:23 -Registering beans for JMX exposure on startup
2019-03-26 21:57:23 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-26 21:57:23 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-26 21:57:23 -Starting beans in phase 2147483647
2019-03-26 21:57:23 -Context refreshed
2019-03-26 21:57:23 -Found 1 custom documentation plugin(s)
2019-03-26 21:57:23 -Scanning for api listing references
2019-03-26 21:57:24 -Generating unique operation named: removeUsingPOST_1
2019-03-26 21:57:24 -Generating unique operation named: addUsingGET_1
2019-03-26 21:57:24 -Generating unique operation named: editUsingGET_1
2019-03-26 21:57:24 -Generating unique operation named: listUsingGET_1
2019-03-26 21:57:24 -Generating unique operation named: removeUsingPOST_2
2019-03-26 21:57:24 -Generating unique operation named: removeUsingPOST_3
2019-03-26 21:57:24 -Generating unique operation named: saveUsingPOST_1
2019-03-26 21:57:24 -Generating unique operation named: updateUsingGET_1
2019-03-26 21:57:24 -Generating unique operation named: updateUsingHEAD_1
2019-03-26 21:57:24 -Generating unique operation named: updateUsingPOST_1
2019-03-26 21:57:24 -Generating unique operation named: updateUsingPUT_1
2019-03-26 21:57:24 -Generating unique operation named: updateUsingPATCH_1
2019-03-26 21:57:24 -Generating unique operation named: updateUsingDELETE_1
2019-03-26 21:57:24 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-26 21:57:24 -Generating unique operation named: updateUsingTRACE_1
2019-03-26 21:57:24 -Generating unique operation named: addUsingGET_2
2019-03-26 21:57:24 -Generating unique operation named: editUsingGET_2
2019-03-26 21:57:24 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-26 21:57:24 -Generating unique operation named: listUsingGET_2
2019-03-26 21:57:24 -Generating unique operation named: removeUsingPOST_4
2019-03-26 21:57:24 -Generating unique operation named: removeUsingPOST_5
2019-03-26 21:57:24 -Generating unique operation named: saveUsingPOST_2
2019-03-26 21:57:24 -Generating unique operation named: updateUsingPOST_2
2019-03-26 21:57:24 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-26 21:57:24 -Generating unique operation named: addUsingGET_3
2019-03-26 21:57:24 -Generating unique operation named: editUsingGET_3
2019-03-26 21:57:24 -Generating unique operation named: listUsingGET_3
2019-03-26 21:57:24 -Generating unique operation named: removeUsingPOST_6
2019-03-26 21:57:24 -Generating unique operation named: removeUsingPOST_7
2019-03-26 21:57:24 -Generating unique operation named: saveUsingPOST_3
2019-03-26 21:57:24 -Generating unique operation named: updateUsingGET_2
2019-03-26 21:57:24 -Generating unique operation named: updateUsingHEAD_2
2019-03-26 21:57:24 -Generating unique operation named: updateUsingPOST_3
2019-03-26 21:57:24 -Generating unique operation named: updateUsingPUT_2
2019-03-26 21:57:24 -Generating unique operation named: updateUsingPATCH_2
2019-03-26 21:57:24 -Generating unique operation named: updateUsingDELETE_2
2019-03-26 21:57:24 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-26 21:57:24 -Generating unique operation named: updateUsingTRACE_2
2019-03-26 21:57:24 -Generating unique operation named: addUsingGET_4
2019-03-26 21:57:24 -Generating unique operation named: editUsingGET_4
2019-03-26 21:57:24 -Generating unique operation named: listUsingGET_4
2019-03-26 21:57:24 -Generating unique operation named: removeUsingPOST_8
2019-03-26 21:57:24 -Generating unique operation named: removeUsingPOST_9
2019-03-26 21:57:24 -Generating unique operation named: saveUsingPOST_4
2019-03-26 21:57:24 -Generating unique operation named: updateUsingGET_3
2019-03-26 21:57:24 -Generating unique operation named: updateUsingHEAD_3
2019-03-26 21:57:24 -Generating unique operation named: updateUsingPOST_4
2019-03-26 21:57:24 -Generating unique operation named: updateUsingPUT_3
2019-03-26 21:57:24 -Generating unique operation named: updateUsingPATCH_3
2019-03-26 21:57:24 -Generating unique operation named: updateUsingDELETE_3
2019-03-26 21:57:24 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-26 21:57:24 -Generating unique operation named: updateUsingTRACE_3
2019-03-26 21:57:24 -Generating unique operation named: ElecUsingGET_1
2019-03-26 21:57:24 -Generating unique operation named: addUsingGET_5
2019-03-26 21:57:24 -Generating unique operation named: editUsingGET_5
2019-03-26 21:57:25 -Generating unique operation named: listUsingGET_5
2019-03-26 21:57:25 -Generating unique operation named: removeUsingPOST_10
2019-03-26 21:57:25 -Generating unique operation named: removeUsingPOST_11
2019-03-26 21:57:25 -Generating unique operation named: saveUsingPOST_5
2019-03-26 21:57:25 -Generating unique operation named: updateUsingGET_4
2019-03-26 21:57:25 -Generating unique operation named: updateUsingHEAD_4
2019-03-26 21:57:25 -Generating unique operation named: updateUsingPOST_5
2019-03-26 21:57:25 -Generating unique operation named: updateUsingPUT_4
2019-03-26 21:57:25 -Generating unique operation named: updateUsingPATCH_4
2019-03-26 21:57:25 -Generating unique operation named: updateUsingDELETE_4
2019-03-26 21:57:25 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-26 21:57:25 -Generating unique operation named: updateUsingTRACE_4
2019-03-26 21:57:25 -Generating unique operation named: editUsingGET_6
2019-03-26 21:57:25 -Generating unique operation named: listUsingGET_6
2019-03-26 21:57:25 -Generating unique operation named: updateUsingPOST_6
2019-03-26 21:57:25 -Generating unique operation named: addUsingGET_6
2019-03-26 21:57:25 -Generating unique operation named: editUsingGET_7
2019-03-26 21:57:25 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-26 21:57:25 -Generating unique operation named: listUsingGET_7
2019-03-26 21:57:25 -Generating unique operation named: removeUsingPOST_12
2019-03-26 21:57:25 -Generating unique operation named: removeUsingPOST_13
2019-03-26 21:57:25 -Generating unique operation named: saveUsingPOST_6
2019-03-26 21:57:25 -Generating unique operation named: updateUsingGET_5
2019-03-26 21:57:25 -Generating unique operation named: updateUsingHEAD_5
2019-03-26 21:57:25 -Generating unique operation named: updateUsingPOST_7
2019-03-26 21:57:25 -Generating unique operation named: updateUsingPUT_5
2019-03-26 21:57:25 -Generating unique operation named: updateUsingPATCH_5
2019-03-26 21:57:25 -Generating unique operation named: updateUsingDELETE_5
2019-03-26 21:57:25 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-26 21:57:25 -Generating unique operation named: updateUsingTRACE_5
2019-03-26 21:57:25 -Generating unique operation named: exprotExcelUsingGET_4
2019-03-26 21:57:25 -Generating unique operation named: addUsingGET_7
2019-03-26 21:57:25 -Generating unique operation named: editUsingGET_8
2019-03-26 21:57:25 -Generating unique operation named: listUsingGET_8
2019-03-26 21:57:25 -Generating unique operation named: removeUsingPOST_14
2019-03-26 21:57:25 -Generating unique operation named: removeUsingPOST_15
2019-03-26 21:57:25 -Generating unique operation named: saveUsingPOST_7
2019-03-26 21:57:25 -Generating unique operation named: updateUsingGET_6
2019-03-26 21:57:25 -Generating unique operation named: updateUsingHEAD_6
2019-03-26 21:57:25 -Generating unique operation named: updateUsingPOST_8
2019-03-26 21:57:25 -Generating unique operation named: updateUsingPUT_6
2019-03-26 21:57:25 -Generating unique operation named: updateUsingPATCH_6
2019-03-26 21:57:25 -Generating unique operation named: updateUsingDELETE_6
2019-03-26 21:57:25 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-26 21:57:25 -Generating unique operation named: updateUsingTRACE_6
2019-03-26 21:57:25 -Generating unique operation named: addUsingGET_8
2019-03-26 21:57:25 -Generating unique operation named: editUsingGET_9
2019-03-26 21:57:25 -Generating unique operation named: listUsingGET_9
2019-03-26 21:57:25 -Generating unique operation named: removeUsingPOST_16
2019-03-26 21:57:25 -Generating unique operation named: removeUsingPOST_17
2019-03-26 21:57:25 -Generating unique operation named: saveUsingPOST_8
2019-03-26 21:57:25 -Generating unique operation named: updateUsingGET_7
2019-03-26 21:57:25 -Generating unique operation named: updateUsingHEAD_7
2019-03-26 21:57:25 -Generating unique operation named: updateUsingPOST_9
2019-03-26 21:57:25 -Generating unique operation named: updateUsingPUT_7
2019-03-26 21:57:25 -Generating unique operation named: updateUsingPATCH_7
2019-03-26 21:57:25 -Generating unique operation named: updateUsingDELETE_7
2019-03-26 21:57:25 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-26 21:57:25 -Generating unique operation named: updateUsingTRACE_7
2019-03-26 21:57:25 -Generating unique operation named: addUsingGET_9
2019-03-26 21:57:25 -Generating unique operation named: editUsingGET_10
2019-03-26 21:57:25 -Generating unique operation named: infoUsingGET_1
2019-03-26 21:57:25 -Generating unique operation named: infoUsingHEAD_1
2019-03-26 21:57:25 -Generating unique operation named: infoUsingPOST_1
2019-03-26 21:57:25 -Generating unique operation named: infoUsingPUT_1
2019-03-26 21:57:25 -Generating unique operation named: infoUsingPATCH_1
2019-03-26 21:57:25 -Generating unique operation named: infoUsingDELETE_1
2019-03-26 21:57:25 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-26 21:57:25 -Generating unique operation named: infoUsingTRACE_1
2019-03-26 21:57:25 -Generating unique operation named: listUsingGET_10
2019-03-26 21:57:25 -Generating unique operation named: removeUsingPOST_18
2019-03-26 21:57:25 -Generating unique operation named: removeUsingPOST_19
2019-03-26 21:57:25 -Generating unique operation named: saveUsingPOST_9
2019-03-26 21:57:25 -Generating unique operation named: updateUsingPOST_10
2019-03-26 21:57:25 -Generating unique operation named: listUsingGET_11
2019-03-26 21:57:25 -Generating unique operation named: removeUsingPOST_20
2019-03-26 21:57:25 -Generating unique operation named: welcomeUsingGET_1
2019-03-26 21:57:26 -Generating unique operation named: addUsingGET_10
2019-03-26 21:57:26 -Generating unique operation named: editUsingGET_11
2019-03-26 21:57:26 -Generating unique operation named: listUsingGET_12
2019-03-26 21:57:26 -Generating unique operation named: removeUsingPOST_21
2019-03-26 21:57:26 -Generating unique operation named: saveUsingPOST_10
2019-03-26 21:57:26 -Generating unique operation named: treeUsingGET_1
2019-03-26 21:57:26 -Generating unique operation named: treeUsingGET_2
2019-03-26 21:57:26 -Generating unique operation named: updateUsingPOST_11
2019-03-26 21:57:26 -Generating unique operation named: addUsingGET_11
2019-03-26 21:57:26 -Generating unique operation named: editUsingGET_12
2019-03-26 21:57:26 -Generating unique operation named: listUsingGET_13
2019-03-26 21:57:26 -Generating unique operation named: removeUsingPOST_22
2019-03-26 21:57:26 -Generating unique operation named: removeUsingPOST_23
2019-03-26 21:57:26 -Generating unique operation named: saveUsingPOST_11
2019-03-26 21:57:26 -Generating unique operation named: updateUsingGET_8
2019-03-26 21:57:26 -Generating unique operation named: updateUsingHEAD_8
2019-03-26 21:57:26 -Generating unique operation named: updateUsingPOST_12
2019-03-26 21:57:26 -Generating unique operation named: updateUsingPUT_8
2019-03-26 21:57:26 -Generating unique operation named: updateUsingPATCH_8
2019-03-26 21:57:26 -Generating unique operation named: updateUsingDELETE_8
2019-03-26 21:57:26 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-26 21:57:26 -Generating unique operation named: updateUsingTRACE_8
2019-03-26 21:57:26 -Generating unique operation named: addUsingGET_12
2019-03-26 21:57:26 -Generating unique operation named: editUsingGET_13
2019-03-26 21:57:26 -Generating unique operation named: listUsingGET_14
2019-03-26 21:57:26 -Generating unique operation named: removeUsingPOST_24
2019-03-26 21:57:26 -Generating unique operation named: removeUsingPOST_25
2019-03-26 21:57:26 -Generating unique operation named: saveUsingPOST_12
2019-03-26 21:57:26 -Generating unique operation named: updateUsingGET_9
2019-03-26 21:57:26 -Generating unique operation named: updateUsingHEAD_9
2019-03-26 21:57:26 -Generating unique operation named: updateUsingPOST_13
2019-03-26 21:57:26 -Generating unique operation named: updateUsingPUT_9
2019-03-26 21:57:26 -Generating unique operation named: updateUsingPATCH_9
2019-03-26 21:57:26 -Generating unique operation named: updateUsingDELETE_9
2019-03-26 21:57:26 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-26 21:57:26 -Generating unique operation named: updateUsingTRACE_9
2019-03-26 21:57:26 -Generating unique operation named: addUsingGET_13
2019-03-26 21:57:26 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-26 21:57:26 -Generating unique operation named: editUsingGET_14
2019-03-26 21:57:26 -Generating unique operation named: listUsingGET_15
2019-03-26 21:57:26 -Generating unique operation named: saveUsingPOST_13
2019-03-26 21:57:26 -Generating unique operation named: saveUsingPOST_14
2019-03-26 21:57:26 -Generating unique operation named: updateUsingPOST_14
2019-03-26 21:57:26 -Generating unique operation named: listUsingGET_16
2019-03-26 21:57:26 -Generating unique operation named: listUsingHEAD_1
2019-03-26 21:57:26 -Generating unique operation named: listUsingPOST_1
2019-03-26 21:57:26 -Generating unique operation named: listUsingPUT_1
2019-03-26 21:57:26 -Generating unique operation named: listUsingPATCH_1
2019-03-26 21:57:26 -Generating unique operation named: listUsingDELETE_1
2019-03-26 21:57:26 -Generating unique operation named: listUsingOPTIONS_1
2019-03-26 21:57:26 -Generating unique operation named: listUsingTRACE_1
2019-03-26 21:57:26 -Generating unique operation named: addUsingGET_14
2019-03-26 21:57:26 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-26 21:57:26 -Generating unique operation named: editUsingGET_15
2019-03-26 21:57:26 -Generating unique operation named: listUsingGET_17
2019-03-26 21:57:26 -Generating unique operation named: removeUsingPOST_26
2019-03-26 21:57:26 -Generating unique operation named: saveUsingPOST_15
2019-03-26 21:57:26 -Generating unique operation named: treeUsingGET_3
2019-03-26 21:57:26 -Generating unique operation named: treeViewUsingGET_1
2019-03-26 21:57:26 -Generating unique operation named: updateUsingPOST_15
2019-03-26 21:57:26 -Generating unique operation named: addUsingGET_15
2019-03-26 21:57:26 -Generating unique operation named: editUsingGET_16
2019-03-26 21:57:26 -Generating unique operation named: exprotExcelUsingGET_5
2019-03-26 21:57:26 -Generating unique operation named: listUsingGET_18
2019-03-26 21:57:26 -Generating unique operation named: removeUsingPOST_27
2019-03-26 21:57:26 -Generating unique operation named: removeUsingPOST_28
2019-03-26 21:57:26 -Generating unique operation named: saveUsingPOST_16
2019-03-26 21:57:26 -Generating unique operation named: updateUsingGET_10
2019-03-26 21:57:26 -Generating unique operation named: updateUsingHEAD_10
2019-03-26 21:57:26 -Generating unique operation named: updateUsingPOST_16
2019-03-26 21:57:26 -Generating unique operation named: updateUsingPUT_10
2019-03-26 21:57:26 -Generating unique operation named: updateUsingPATCH_10
2019-03-26 21:57:26 -Generating unique operation named: updateUsingDELETE_10
2019-03-26 21:57:26 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-26 21:57:26 -Generating unique operation named: updateUsingTRACE_10
2019-03-26 21:57:27 -Generating unique operation named: exprotExcelUsingGET_6
2019-03-26 21:57:27 -Generating unique operation named: addUsingGET_16
2019-03-26 21:57:27 -Generating unique operation named: editUsingGET_17
2019-03-26 21:57:27 -Generating unique operation named: listUsingGET_19
2019-03-26 21:57:27 -Generating unique operation named: removeUsingPOST_29
2019-03-26 21:57:27 -Generating unique operation named: removeUsingPOST_30
2019-03-26 21:57:27 -Generating unique operation named: saveUsingPOST_17
2019-03-26 21:57:27 -Generating unique operation named: updateUsingGET_11
2019-03-26 21:57:27 -Generating unique operation named: updateUsingHEAD_11
2019-03-26 21:57:27 -Generating unique operation named: updateUsingPOST_17
2019-03-26 21:57:27 -Generating unique operation named: updateUsingPUT_11
2019-03-26 21:57:27 -Generating unique operation named: updateUsingPATCH_11
2019-03-26 21:57:27 -Generating unique operation named: updateUsingDELETE_11
2019-03-26 21:57:27 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-26 21:57:27 -Generating unique operation named: updateUsingTRACE_11
2019-03-26 21:57:27 -Generating unique operation named: addUsingGET_17
2019-03-26 21:57:27 -Generating unique operation named: editUsingGET_18
2019-03-26 21:57:27 -Generating unique operation named: listUsingGET_20
2019-03-26 21:57:27 -Generating unique operation named: removeUsingPOST_31
2019-03-26 21:57:27 -Generating unique operation named: removeUsingPOST_32
2019-03-26 21:57:27 -Generating unique operation named: saveUsingPOST_18
2019-03-26 21:57:27 -Generating unique operation named: updateUsingGET_12
2019-03-26 21:57:27 -Generating unique operation named: updateUsingHEAD_12
2019-03-26 21:57:27 -Generating unique operation named: updateUsingPOST_18
2019-03-26 21:57:27 -Generating unique operation named: updateUsingPUT_12
2019-03-26 21:57:27 -Generating unique operation named: updateUsingPATCH_12
2019-03-26 21:57:27 -Generating unique operation named: updateUsingDELETE_12
2019-03-26 21:57:27 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-26 21:57:27 -Generating unique operation named: updateUsingTRACE_12
2019-03-26 21:57:27 -Starting Quartz Scheduler now
2019-03-26 21:57:27 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-26 21:57:27 -Starting...
2019-03-26 21:57:27 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-26 21:57:27 -Started.
2019-03-26 21:57:27 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-26 21:57:27 -Using a shared selector for servlet write/read
2019-03-26 21:57:27 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-26 21:57:27 -Started BootdoApplication in 26.463 seconds (JVM running for 27.372)
2019-03-26 21:57:27 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-26 21:57:28 -==> Parameters: 
2019-03-26 21:57:28 -<==      Total: 1
2019-03-26 21:57:56 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-26 21:57:56 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-26 21:57:56 -FrameworkServlet 'dispatcherServlet': initialization completed in 140 ms
2019-03-26 21:57:56 -Enabling session validation scheduler...
2019-03-26 21:57:56 -请求地址 : http://localhost:8081/login;JSESSIONID=9ee2d98a-5ac6-40d0-82bb-1f56fdd3c794
2019-03-26 21:57:56 -HTTP METHOD : GET
2019-03-26 21:57:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-26 21:57:56 -参数 : [{}]
2019-03-26 21:57:56 -耗时 : 5
2019-03-26 21:57:56 -返回值 : login
2019-03-26 21:57:58 -请求地址 : http://localhost:8081/getVerify
2019-03-26 21:57:58 -HTTP METHOD : GET
2019-03-26 21:57:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-26 21:57:58 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@7361591, org.apache.shiro.web.servlet.ShiroHttpServletResponse@307f05d6]
2019-03-26 21:58:01 -1334
2019-03-26 21:58:02 -耗时 : 3418
2019-03-26 21:58:02 -返回值 : null
2019-03-26 21:58:02 -请求地址 : http://localhost:8081/login
2019-03-26 21:58:02 -HTTP METHOD : GET
2019-03-26 21:58:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-26 21:58:02 -参数 : [{}]
2019-03-26 21:58:02 -耗时 : 1
2019-03-26 21:58:02 -返回值 : login
2019-03-26 21:58:11 -请求地址 : http://localhost:8081/login
2019-03-26 21:58:11 -HTTP METHOD : POST
2019-03-26 21:58:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-26 21:58:11 -参数 : [admin, 111111, 1334, org.apache.shiro.web.servlet.ShiroHttpServletRequest@710938b4]
2019-03-26 21:58:11 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-26 21:58:12 -==> Parameters: admin(String)
2019-03-26 21:58:12 -<==      Total: 1
2019-03-26 21:58:12 -耗时 : 245
2019-03-26 21:58:12 -返回值 : {msg=操作成功, code=0}
2019-03-26 21:58:12 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-03-26 21:58:12 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-26 21:58:12 -==> Parameters: 1(Long), admin(String), 登录(String), 246(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-26 21:58:12.188(Timestamp)
2019-03-26 21:58:12 -<==    Updates: 1
2019-03-26 21:58:12 -请求地址 : http://localhost:8081/index
2019-03-26 21:58:12 -HTTP METHOD : GET
2019-03-26 21:58:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-26 21:58:12 -参数 : [{}]
2019-03-26 21:58:12 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-26 21:58:12 -==> Parameters: 1(Long)
2019-03-26 21:58:12 -<==      Total: 46
2019-03-26 21:58:12 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-26 21:58:12 -==> Parameters: 138(Long)
2019-03-26 21:58:12 -<==      Total: 1
2019-03-26 21:58:12 -耗时 : 436
2019-03-26 21:58:12 -返回值 : index_v1
2019-03-26 21:58:12 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-26 21:58:12 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 436(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-26 21:58:12.981(Timestamp)
2019-03-26 21:58:13 -<==    Updates: 1
2019-03-26 21:58:13 -请求地址 : http://localhost:8081/main
2019-03-26 21:58:13 -HTTP METHOD : GET
2019-03-26 21:58:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-26 21:58:13 -参数 : []
2019-03-26 21:58:13 -耗时 : 0
2019-03-26 21:58:13 -返回值 : main
2019-03-26 21:58:13 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-26 21:58:13 -HTTP METHOD : GET
2019-03-26 21:58:13 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-26 21:58:13 -参数 : []
2019-03-26 21:58:13 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-26 21:58:13 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-26 21:58:14 -<==      Total: 0
2019-03-26 21:58:14 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-26 21:58:14 -==> Parameters: 1(Long), 0(String)
2019-03-26 21:58:14 -<==      Total: 1
2019-03-26 21:58:14 -耗时 : 105
2019-03-26 21:58:14 -返回值 : com.bootdo.common.utils.PageUtils@4064c6ee
2019-03-26 21:58:14 -请求地址 : http://localhost:8081/main
2019-03-26 21:58:14 -HTTP METHOD : GET
2019-03-26 21:58:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-26 21:58:14 -参数 : []
2019-03-26 21:58:14 -耗时 : 0
2019-03-26 21:58:14 -返回值 : main
2019-03-26 21:58:19 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 1]
2019-03-26 21:58:29 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-26 21:58:29 -==> Parameters: 1(Long)
2019-03-26 21:58:29 -<==      Total: 90
2019-03-26 21:58:29 -请求地址 : http://localhost:8081/elec/elec
2019-03-26 21:58:29 -HTTP METHOD : GET
2019-03-26 21:58:29 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-26 21:58:29 -参数 : []
2019-03-26 21:58:29 -耗时 : 0
2019-03-26 21:58:29 -返回值 : elec/elec/elec
2019-03-26 21:58:30 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-26 21:58:30 -HTTP METHOD : GET
2019-03-26 21:58:30 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-26 21:58:30 -参数 : [userType]
2019-03-26 21:58:30 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-26 21:58:30 -==> Parameters: userType(String)
2019-03-26 21:58:30 -<==      Total: 2
2019-03-26 21:58:30 -耗时 : 27
2019-03-26 21:58:30 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-26 21:58:30 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-26 21:58:30 -HTTP METHOD : GET
2019-03-26 21:58:30 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-26 21:58:30 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@78d236e2]
2019-03-26 21:58:30 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-26 21:58:30 -==> Parameters: 0(Integer), 10(Integer)
2019-03-26 21:58:30 -<==      Total: 10
2019-03-26 21:58:30 -==>  Preparing: select count(*) from elec 
2019-03-26 21:58:30 -==> Parameters: 
2019-03-26 21:58:30 -<==      Total: 1
2019-03-26 21:58:30 -耗时 : 188
2019-03-26 21:58:30 -返回值 : com.bootdo.common.utils.PageUtils@34f6e5da
2019-03-26 21:58:35 -请求地址 : http://localhost:8081/elec/elec/edit/1
2019-03-26 21:58:35 -HTTP METHOD : GET
2019-03-26 21:58:35 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.edit
2019-03-26 21:58:35 -参数 : [1, {}]
2019-03-26 21:58:35 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec where id = ? 
2019-03-26 21:58:35 -==> Parameters: 1(Long)
2019-03-26 21:58:35 -<==      Total: 1
2019-03-26 21:58:35 -耗时 : 14
2019-03-26 21:58:35 -返回值 : elec/elec/edit
2019-03-26 21:58:35 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-26 21:58:35 -HTTP METHOD : GET
2019-03-26 21:58:35 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-26 21:58:35 -参数 : [userType]
2019-03-26 21:58:35 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-26 21:58:35 -==> Parameters: userType(String)
2019-03-26 21:58:35 -<==      Total: 2
2019-03-26 21:58:35 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-03-26 21:58:35 -HTTP METHOD : GET
2019-03-26 21:58:35 -耗时 : 6
2019-03-26 21:58:35 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-26 21:58:35 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-03-26 21:58:35 -HTTP METHOD : GET
2019-03-26 21:58:35 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-26 21:58:35 -参数 : [userState]
2019-03-26 21:58:35 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-26 21:58:35 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-26 21:58:35 -==> Parameters: userState(String)
2019-03-26 21:58:35 -<==      Total: 2
2019-03-26 21:58:35 -参数 : [elecType]
2019-03-26 21:58:35 -耗时 : 10
2019-03-26 21:58:35 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-26 21:58:35 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-26 21:58:35 -==> Parameters: elecType(String)
2019-03-26 21:58:35 -<==      Total: 2
2019-03-26 21:58:35 -耗时 : 32
2019-03-26 21:58:35 -返回值 : [DictDO{id=139, name='民用电', value='1', type='elecType', description='电量性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='商业电', value='0', type='elecType', description='电量类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-26 21:58:40 -请求地址 : http://localhost:8081/elec/elec/update
2019-03-26 21:58:40 -HTTP METHOD : POST
2019-03-26 21:58:40 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.update
2019-03-26 21:58:40 -参数 : [com.bootdo.elec.domain.ElecDO@37d6ebd0]
2019-03-26 21:58:40 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-26 21:58:40 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/elec/elec/update(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error updating database.  Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
### Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String(String), null, 2019-03-26 21:58:40.58(Timestamp)
2019-03-26 21:58:40 -nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error updating database.  Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
### Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error updating database.  Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
### Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:295)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy119.update(Unknown Source)
	at com.bootdo.elec.service.impl.ElecServiceImpl.update(ElecServiceImpl.java:47)
	at com.bootdo.elec.controller.ElecController.update(ElecController.java:222)
	at com.bootdo.elec.controller.ElecController$$FastClassBySpringCGLIB$$b8b2b2ee.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.elec.controller.ElecController$$EnhancerBySpringCGLIB$$77c0e397.update(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.ibatis.exceptions.PersistenceException: 
### Error updating database.  Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
### Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
	at org.apache.ibatis.exceptions.ExceptionFactory.wrapException(ExceptionFactory.java:30)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:200)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 104 common frames omitted
Caused by: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
	at org.apache.ibatis.ognl.OgnlOps.compareWithConversion(OgnlOps.java:93)
	at org.apache.ibatis.ognl.OgnlOps.isEqual(OgnlOps.java:143)
	at org.apache.ibatis.ognl.OgnlOps.equal(OgnlOps.java:802)
	at org.apache.ibatis.ognl.ASTNotEq.getValueBody(ASTNotEq.java:53)
	at org.apache.ibatis.ognl.SimpleNode.evaluateGetValueBody(SimpleNode.java:212)
	at org.apache.ibatis.ognl.SimpleNode.getValue(SimpleNode.java:258)
	at org.apache.ibatis.ognl.ASTAnd.getValueBody(ASTAnd.java:61)
	at org.apache.ibatis.ognl.SimpleNode.evaluateGetValueBody(SimpleNode.java:212)
	at org.apache.ibatis.ognl.SimpleNode.getValue(SimpleNode.java:258)
	at org.apache.ibatis.ognl.Ognl.getValue(Ognl.java:470)
	at org.apache.ibatis.ognl.Ognl.getValue(Ognl.java:434)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:44)
	at org.apache.ibatis.scripting.xmltags.ExpressionEvaluator.evaluateBoolean(ExpressionEvaluator.java:32)
	at org.apache.ibatis.scripting.xmltags.IfSqlNode.apply(IfSqlNode.java:34)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.TrimSqlNode.apply(TrimSqlNode.java:55)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.DynamicSqlSource.getBoundSql(DynamicSqlSource.java:41)
	at org.apache.ibatis.mapping.MappedStatement.getBoundSql(MappedStatement.java:292)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.<init>(BaseStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.<init>(PreparedStatementHandler.java:40)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.<init>(RoutingStatementHandler.java:46)
	at org.apache.ibatis.session.Configuration.newStatementHandler(Configuration.java:545)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:48)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	... 109 common frames omitted
2019-03-26 21:58:40 -<==    Updates: 1
2019-03-26 22:09:58 -Starting BootdoApplication on ZJZL-20180906VX with PID 1028 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-26 22:09:58 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-26 22:09:58 -The following profiles are active: dev
2019-03-26 22:09:58 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2e11485: startup date [Tue Mar 26 22:09:58 CST 2019]; root of context hierarchy
2019-03-26 22:10:04 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-26 22:10:07 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$fdc6d90] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 22:10:07 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$2359c37] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 22:10:08 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 22:10:09 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 22:10:09 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 22:10:09 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-26 22:10:09 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-26 22:10:09 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 22:10:09 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 22:10:09 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 22:10:09 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 22:10:10 -Tomcat initialized with port(s): 8081 (http)
2019-03-26 22:10:10 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-26 22:10:10 -Starting service [Tomcat]
2019-03-26 22:10:10 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-26 22:10:11 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-26 22:10:11 -Initializing Spring embedded WebApplicationContext
2019-03-26 22:10:11 -Root WebApplicationContext: initialization completed in 12584 ms
2019-03-26 22:10:12 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-26 22:10:12 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-26 22:10:12 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-26 22:10:12 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-26 22:10:12 -Filter xssFilter was not registered (disabled)
2019-03-26 22:10:12 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-26 22:10:12 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-26 22:10:12 -Servlet statViewServlet mapped to [/druid/*]
2019-03-26 22:10:12 -Servlet dispatcherServlet mapped to [/]
2019-03-26 22:10:16 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2e11485: startup date [Tue Mar 26 22:09:58 CST 2019]; root of context hierarchy
2019-03-26 22:10:17 -Using default implementation for ThreadExecutor
2019-03-26 22:10:17 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-26 22:10:17 -Quartz Scheduler v.2.2.1 created.
2019-03-26 22:10:17 -RAMJobStore initialized.
2019-03-26 22:10:17 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-26 22:10:17 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-26 22:10:17 -Quartz scheduler version: 2.2.1
2019-03-26 22:10:17 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@3c116f26
2019-03-26 22:10:17 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-26 22:10:17 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-26 22:10:21 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-26 22:10:21 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-03-26 22:10:21 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-26 22:10:21 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-26 22:10:21 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-26 22:10:21 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-26 22:10:21 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-26 22:10:21 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-26 22:10:21 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-26 22:10:21 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-26 22:10:21 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-26 22:10:21 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 22:10:21 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-26 22:10:21 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 22:10:21 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-26 22:10:21 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-26 22:10:21 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-26 22:10:21 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-26 22:10:21 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-26 22:10:21 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-26 22:10:21 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-26 22:10:21 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-26 22:10:21 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 22:10:21 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-26 22:10:21 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-26 22:10:21 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 22:10:21 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-26 22:10:21 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-26 22:10:21 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 22:10:21 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-26 22:10:21 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-26 22:10:21 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-26 22:10:21 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-26 22:10:21 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-26 22:10:21 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-26 22:10:21 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-26 22:10:21 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-26 22:10:21 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-26 22:10:21 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 22:10:21 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-26 22:10:21 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-26 22:10:21 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 22:10:21 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-26 22:10:21 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-26 22:10:21 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-26 22:10:21 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-26 22:10:21 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 22:10:21 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-26 22:10:21 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-03-26 22:10:21 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-26 22:10:21 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-26 22:10:21 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-26 22:10:21 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-26 22:10:21 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-26 22:10:21 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-26 22:10:21 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-26 22:10:21 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-26 22:10:21 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-26 22:10:21 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-26 22:10:21 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 22:10:21 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-26 22:10:21 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-03-26 22:10:21 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-26 22:10:21 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-26 22:10:21 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-26 22:10:21 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-26 22:10:21 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-26 22:10:21 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-26 22:10:21 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 22:10:21 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-03-26 22:10:21 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 22:10:21 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-26 22:10:21 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-26 22:10:21 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-26 22:10:21 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-26 22:10:21 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-26 22:10:21 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-26 22:10:21 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-26 22:10:21 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 22:10:21 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-26 22:10:21 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-26 22:10:21 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-26 22:10:21 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-26 22:10:21 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-26 22:10:21 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-26 22:10:21 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-26 22:10:21 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-26 22:10:21 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-26 22:10:21 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-26 22:10:21 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 22:10:21 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-26 22:10:21 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 22:10:21 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-26 22:10:21 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-26 22:10:21 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-26 22:10:21 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-03-26 22:10:21 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-03-26 22:10:21 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-26 22:10:21 -Mapped "{[/moneyList/moneyList/LikeName],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.LikeName(org.springframework.ui.Model)
2019-03-26 22:10:21 -Mapped "{[/moneyList/moneyList/UserList],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-26 22:10:21 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-26 22:10:21 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-26 22:10:21 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-26 22:10:21 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-26 22:10:21 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 22:10:21 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-26 22:10:21 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 22:10:21 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-26 22:10:21 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-26 22:10:21 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-26 22:10:21 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-26 22:10:21 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-26 22:10:21 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-26 22:10:21 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 22:10:21 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-26 22:10:21 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 22:10:21 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-26 22:10:21 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-26 22:10:21 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-26 22:10:21 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-26 22:10:21 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-26 22:10:21 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-26 22:10:21 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 22:10:21 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-26 22:10:21 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 22:10:21 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-26 22:10:21 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-26 22:10:21 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-26 22:10:21 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-26 22:10:21 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-26 22:10:21 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-26 22:10:21 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-26 22:10:21 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 22:10:21 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-26 22:10:21 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-26 22:10:21 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 22:10:21 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 22:10:21 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-26 22:10:21 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-26 22:10:21 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-26 22:10:21 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-26 22:10:21 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-26 22:10:21 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-26 22:10:21 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 22:10:21 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-26 22:10:21 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 22:10:21 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-26 22:10:21 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-26 22:10:21 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 22:10:21 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-26 22:10:21 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-26 22:10:21 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-26 22:10:21 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-26 22:10:21 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-26 22:10:21 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-26 22:10:21 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-26 22:10:21 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 22:10:21 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-26 22:10:21 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-26 22:10:21 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-26 22:10:21 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-26 22:10:21 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-26 22:10:21 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-26 22:10:21 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-26 22:10:21 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-26 22:10:21 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-26 22:10:21 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-26 22:10:21 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-26 22:10:21 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-26 22:10:21 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 22:10:21 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-26 22:10:21 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-26 22:10:21 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-26 22:10:21 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-26 22:10:21 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-26 22:10:21 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-26 22:10:21 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-26 22:10:21 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-26 22:10:21 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-26 22:10:21 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-26 22:10:21 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-26 22:10:21 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 22:10:21 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-26 22:10:21 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-26 22:10:21 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-26 22:10:21 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-26 22:10:21 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-26 22:10:21 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 22:10:21 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-26 22:10:21 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-26 22:10:21 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-26 22:10:21 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 22:10:21 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-26 22:10:21 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-26 22:10:21 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-26 22:10:21 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-26 22:10:21 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-26 22:10:21 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-26 22:10:21 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-26 22:10:21 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-26 22:10:21 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-26 22:10:21 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-26 22:10:21 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-26 22:10:21 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-26 22:10:21 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-26 22:10:21 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-26 22:10:21 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-26 22:10:21 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-26 22:10:21 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-26 22:10:21 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 22:10:21 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-26 22:10:21 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-26 22:10:21 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 22:10:21 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 22:10:21 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-26 22:10:21 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-26 22:10:21 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-26 22:10:21 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-26 22:10:21 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-26 22:10:21 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-26 22:10:21 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-26 22:10:21 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 22:10:21 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-26 22:10:21 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 22:10:21 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-26 22:10:21 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-03-26 22:10:21 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-26 22:10:21 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-03-26 22:10:21 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-26 22:10:21 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-26 22:10:21 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-26 22:10:21 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-26 22:10:21 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-26 22:10:22 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-26 22:10:22 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-26 22:10:22 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-26 22:10:23 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-26 22:10:23 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2e11485: startup date [Tue Mar 26 22:09:58 CST 2019]; root of context hierarchy
2019-03-26 22:10:23 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-26 22:10:23 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-26 22:10:23 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-26 22:10:23 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-26 22:10:24 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-26 22:10:26 -Registering beans for JMX exposure on startup
2019-03-26 22:10:26 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-26 22:10:26 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-26 22:10:26 -Starting beans in phase 2147483647
2019-03-26 22:10:26 -Context refreshed
2019-03-26 22:10:26 -Found 1 custom documentation plugin(s)
2019-03-26 22:10:26 -Scanning for api listing references
2019-03-26 22:10:27 -Generating unique operation named: removeUsingPOST_1
2019-03-26 22:10:27 -Generating unique operation named: addUsingGET_1
2019-03-26 22:10:27 -Generating unique operation named: editUsingGET_1
2019-03-26 22:10:27 -Generating unique operation named: listUsingGET_1
2019-03-26 22:10:27 -Generating unique operation named: removeUsingPOST_2
2019-03-26 22:10:27 -Generating unique operation named: removeUsingPOST_3
2019-03-26 22:10:27 -Generating unique operation named: saveUsingPOST_1
2019-03-26 22:10:27 -Generating unique operation named: updateUsingGET_1
2019-03-26 22:10:27 -Generating unique operation named: updateUsingHEAD_1
2019-03-26 22:10:27 -Generating unique operation named: updateUsingPOST_1
2019-03-26 22:10:28 -Generating unique operation named: updateUsingPUT_1
2019-03-26 22:10:28 -Generating unique operation named: updateUsingPATCH_1
2019-03-26 22:10:28 -Generating unique operation named: updateUsingDELETE_1
2019-03-26 22:10:28 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-26 22:10:28 -Generating unique operation named: updateUsingTRACE_1
2019-03-26 22:10:28 -Generating unique operation named: addUsingGET_2
2019-03-26 22:10:28 -Generating unique operation named: editUsingGET_2
2019-03-26 22:10:28 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-26 22:10:28 -Generating unique operation named: listUsingGET_2
2019-03-26 22:10:28 -Generating unique operation named: removeUsingPOST_4
2019-03-26 22:10:28 -Generating unique operation named: removeUsingPOST_5
2019-03-26 22:10:28 -Generating unique operation named: saveUsingPOST_2
2019-03-26 22:10:28 -Generating unique operation named: updateUsingPOST_2
2019-03-26 22:10:28 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-26 22:10:28 -Generating unique operation named: addUsingGET_3
2019-03-26 22:10:28 -Generating unique operation named: editUsingGET_3
2019-03-26 22:10:28 -Generating unique operation named: listUsingGET_3
2019-03-26 22:10:28 -Generating unique operation named: removeUsingPOST_6
2019-03-26 22:10:28 -Generating unique operation named: removeUsingPOST_7
2019-03-26 22:10:28 -Generating unique operation named: saveUsingPOST_3
2019-03-26 22:10:28 -Generating unique operation named: updateUsingGET_2
2019-03-26 22:10:28 -Generating unique operation named: updateUsingHEAD_2
2019-03-26 22:10:28 -Generating unique operation named: updateUsingPOST_3
2019-03-26 22:10:28 -Generating unique operation named: updateUsingPUT_2
2019-03-26 22:10:28 -Generating unique operation named: updateUsingPATCH_2
2019-03-26 22:10:28 -Generating unique operation named: updateUsingDELETE_2
2019-03-26 22:10:28 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-26 22:10:28 -Generating unique operation named: updateUsingTRACE_2
2019-03-26 22:10:28 -Generating unique operation named: addUsingGET_4
2019-03-26 22:10:28 -Generating unique operation named: editUsingGET_4
2019-03-26 22:10:28 -Generating unique operation named: listUsingGET_4
2019-03-26 22:10:28 -Generating unique operation named: removeUsingPOST_8
2019-03-26 22:10:28 -Generating unique operation named: removeUsingPOST_9
2019-03-26 22:10:28 -Generating unique operation named: saveUsingPOST_4
2019-03-26 22:10:28 -Generating unique operation named: updateUsingGET_3
2019-03-26 22:10:28 -Generating unique operation named: updateUsingHEAD_3
2019-03-26 22:10:28 -Generating unique operation named: updateUsingPOST_4
2019-03-26 22:10:28 -Generating unique operation named: updateUsingPUT_3
2019-03-26 22:10:28 -Generating unique operation named: updateUsingPATCH_3
2019-03-26 22:10:28 -Generating unique operation named: updateUsingDELETE_3
2019-03-26 22:10:28 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-26 22:10:28 -Generating unique operation named: updateUsingTRACE_3
2019-03-26 22:10:28 -Generating unique operation named: ElecUsingGET_1
2019-03-26 22:10:28 -Generating unique operation named: addUsingGET_5
2019-03-26 22:10:28 -Generating unique operation named: editUsingGET_5
2019-03-26 22:10:28 -Generating unique operation named: listUsingGET_5
2019-03-26 22:10:28 -Generating unique operation named: removeUsingPOST_10
2019-03-26 22:10:28 -Generating unique operation named: removeUsingPOST_11
2019-03-26 22:10:28 -Generating unique operation named: saveUsingPOST_5
2019-03-26 22:10:28 -Generating unique operation named: updateUsingGET_4
2019-03-26 22:10:28 -Generating unique operation named: updateUsingHEAD_4
2019-03-26 22:10:28 -Generating unique operation named: updateUsingPOST_5
2019-03-26 22:10:28 -Generating unique operation named: updateUsingPUT_4
2019-03-26 22:10:28 -Generating unique operation named: updateUsingPATCH_4
2019-03-26 22:10:28 -Generating unique operation named: updateUsingDELETE_4
2019-03-26 22:10:28 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-26 22:10:28 -Generating unique operation named: updateUsingTRACE_4
2019-03-26 22:10:28 -Generating unique operation named: editUsingGET_6
2019-03-26 22:10:28 -Generating unique operation named: listUsingGET_6
2019-03-26 22:10:28 -Generating unique operation named: updateUsingPOST_6
2019-03-26 22:10:28 -Generating unique operation named: addUsingGET_6
2019-03-26 22:10:28 -Generating unique operation named: editUsingGET_7
2019-03-26 22:10:28 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-26 22:10:28 -Generating unique operation named: listUsingGET_7
2019-03-26 22:10:28 -Generating unique operation named: removeUsingPOST_12
2019-03-26 22:10:28 -Generating unique operation named: removeUsingPOST_13
2019-03-26 22:10:28 -Generating unique operation named: saveUsingPOST_6
2019-03-26 22:10:28 -Generating unique operation named: updateUsingGET_5
2019-03-26 22:10:28 -Generating unique operation named: updateUsingHEAD_5
2019-03-26 22:10:28 -Generating unique operation named: updateUsingPOST_7
2019-03-26 22:10:28 -Generating unique operation named: updateUsingPUT_5
2019-03-26 22:10:28 -Generating unique operation named: updateUsingPATCH_5
2019-03-26 22:10:28 -Generating unique operation named: updateUsingDELETE_5
2019-03-26 22:10:28 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-26 22:10:28 -Generating unique operation named: updateUsingTRACE_5
2019-03-26 22:10:28 -Generating unique operation named: exprotExcelUsingGET_4
2019-03-26 22:10:28 -Generating unique operation named: addUsingGET_7
2019-03-26 22:10:28 -Generating unique operation named: editUsingGET_8
2019-03-26 22:10:28 -Generating unique operation named: listUsingGET_8
2019-03-26 22:10:28 -Generating unique operation named: removeUsingPOST_14
2019-03-26 22:10:28 -Generating unique operation named: removeUsingPOST_15
2019-03-26 22:10:28 -Generating unique operation named: saveUsingPOST_7
2019-03-26 22:10:28 -Generating unique operation named: updateUsingGET_6
2019-03-26 22:10:28 -Generating unique operation named: updateUsingHEAD_6
2019-03-26 22:10:28 -Generating unique operation named: updateUsingPOST_8
2019-03-26 22:10:28 -Generating unique operation named: updateUsingPUT_6
2019-03-26 22:10:28 -Generating unique operation named: updateUsingPATCH_6
2019-03-26 22:10:28 -Generating unique operation named: updateUsingDELETE_6
2019-03-26 22:10:28 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-26 22:10:28 -Generating unique operation named: updateUsingTRACE_6
2019-03-26 22:10:28 -Generating unique operation named: addUsingGET_8
2019-03-26 22:10:28 -Generating unique operation named: editUsingGET_9
2019-03-26 22:10:28 -Generating unique operation named: listUsingGET_9
2019-03-26 22:10:28 -Generating unique operation named: removeUsingPOST_16
2019-03-26 22:10:28 -Generating unique operation named: removeUsingPOST_17
2019-03-26 22:10:28 -Generating unique operation named: saveUsingPOST_8
2019-03-26 22:10:28 -Generating unique operation named: updateUsingGET_7
2019-03-26 22:10:28 -Generating unique operation named: updateUsingHEAD_7
2019-03-26 22:10:28 -Generating unique operation named: updateUsingPOST_9
2019-03-26 22:10:28 -Generating unique operation named: updateUsingPUT_7
2019-03-26 22:10:28 -Generating unique operation named: updateUsingPATCH_7
2019-03-26 22:10:28 -Generating unique operation named: updateUsingDELETE_7
2019-03-26 22:10:28 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-26 22:10:28 -Generating unique operation named: updateUsingTRACE_7
2019-03-26 22:10:28 -Generating unique operation named: addUsingGET_9
2019-03-26 22:10:28 -Generating unique operation named: editUsingGET_10
2019-03-26 22:10:28 -Generating unique operation named: infoUsingGET_1
2019-03-26 22:10:28 -Generating unique operation named: infoUsingHEAD_1
2019-03-26 22:10:28 -Generating unique operation named: infoUsingPOST_1
2019-03-26 22:10:29 -Generating unique operation named: infoUsingPUT_1
2019-03-26 22:10:29 -Generating unique operation named: infoUsingPATCH_1
2019-03-26 22:10:29 -Generating unique operation named: infoUsingDELETE_1
2019-03-26 22:10:29 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-26 22:10:29 -Generating unique operation named: infoUsingTRACE_1
2019-03-26 22:10:29 -Generating unique operation named: listUsingGET_10
2019-03-26 22:10:29 -Generating unique operation named: removeUsingPOST_18
2019-03-26 22:10:29 -Generating unique operation named: removeUsingPOST_19
2019-03-26 22:10:29 -Generating unique operation named: saveUsingPOST_9
2019-03-26 22:10:29 -Generating unique operation named: updateUsingPOST_10
2019-03-26 22:10:29 -Generating unique operation named: listUsingGET_11
2019-03-26 22:10:29 -Generating unique operation named: removeUsingPOST_20
2019-03-26 22:10:29 -Generating unique operation named: welcomeUsingGET_1
2019-03-26 22:10:29 -Generating unique operation named: addUsingGET_10
2019-03-26 22:10:29 -Generating unique operation named: editUsingGET_11
2019-03-26 22:10:29 -Generating unique operation named: listUsingGET_12
2019-03-26 22:10:29 -Generating unique operation named: removeUsingPOST_21
2019-03-26 22:10:29 -Generating unique operation named: saveUsingPOST_10
2019-03-26 22:10:29 -Generating unique operation named: treeUsingGET_1
2019-03-26 22:10:29 -Generating unique operation named: treeUsingGET_2
2019-03-26 22:10:29 -Generating unique operation named: updateUsingPOST_11
2019-03-26 22:10:29 -Generating unique operation named: addUsingGET_11
2019-03-26 22:10:29 -Generating unique operation named: editUsingGET_12
2019-03-26 22:10:29 -Generating unique operation named: listUsingGET_13
2019-03-26 22:10:29 -Generating unique operation named: removeUsingPOST_22
2019-03-26 22:10:29 -Generating unique operation named: removeUsingPOST_23
2019-03-26 22:10:29 -Generating unique operation named: saveUsingPOST_11
2019-03-26 22:10:29 -Generating unique operation named: updateUsingGET_8
2019-03-26 22:10:29 -Generating unique operation named: updateUsingHEAD_8
2019-03-26 22:10:29 -Generating unique operation named: updateUsingPOST_12
2019-03-26 22:10:29 -Generating unique operation named: updateUsingPUT_8
2019-03-26 22:10:29 -Generating unique operation named: updateUsingPATCH_8
2019-03-26 22:10:29 -Generating unique operation named: updateUsingDELETE_8
2019-03-26 22:10:29 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-26 22:10:29 -Generating unique operation named: updateUsingTRACE_8
2019-03-26 22:10:29 -Generating unique operation named: addUsingGET_12
2019-03-26 22:10:29 -Generating unique operation named: editUsingGET_13
2019-03-26 22:10:29 -Generating unique operation named: listUsingGET_14
2019-03-26 22:10:29 -Generating unique operation named: removeUsingPOST_24
2019-03-26 22:10:29 -Generating unique operation named: removeUsingPOST_25
2019-03-26 22:10:29 -Generating unique operation named: saveUsingPOST_12
2019-03-26 22:10:29 -Generating unique operation named: updateUsingGET_9
2019-03-26 22:10:29 -Generating unique operation named: updateUsingHEAD_9
2019-03-26 22:10:29 -Generating unique operation named: updateUsingPOST_13
2019-03-26 22:10:29 -Generating unique operation named: updateUsingPUT_9
2019-03-26 22:10:29 -Generating unique operation named: updateUsingPATCH_9
2019-03-26 22:10:29 -Generating unique operation named: updateUsingDELETE_9
2019-03-26 22:10:29 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-26 22:10:29 -Generating unique operation named: updateUsingTRACE_9
2019-03-26 22:10:29 -Generating unique operation named: addUsingGET_13
2019-03-26 22:10:29 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-26 22:10:29 -Generating unique operation named: editUsingGET_14
2019-03-26 22:10:29 -Generating unique operation named: listUsingGET_15
2019-03-26 22:10:29 -Generating unique operation named: saveUsingPOST_13
2019-03-26 22:10:29 -Generating unique operation named: saveUsingPOST_14
2019-03-26 22:10:29 -Generating unique operation named: updateUsingPOST_14
2019-03-26 22:10:29 -Generating unique operation named: listUsingGET_16
2019-03-26 22:10:29 -Generating unique operation named: listUsingHEAD_1
2019-03-26 22:10:29 -Generating unique operation named: listUsingPOST_1
2019-03-26 22:10:29 -Generating unique operation named: listUsingPUT_1
2019-03-26 22:10:29 -Generating unique operation named: listUsingPATCH_1
2019-03-26 22:10:29 -Generating unique operation named: listUsingDELETE_1
2019-03-26 22:10:29 -Generating unique operation named: listUsingOPTIONS_1
2019-03-26 22:10:29 -Generating unique operation named: listUsingTRACE_1
2019-03-26 22:10:29 -Generating unique operation named: addUsingGET_14
2019-03-26 22:10:29 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-26 22:10:29 -Generating unique operation named: editUsingGET_15
2019-03-26 22:10:29 -Generating unique operation named: listUsingGET_17
2019-03-26 22:10:29 -Generating unique operation named: removeUsingPOST_26
2019-03-26 22:10:29 -Generating unique operation named: saveUsingPOST_15
2019-03-26 22:10:29 -Generating unique operation named: treeUsingGET_3
2019-03-26 22:10:29 -Generating unique operation named: treeViewUsingGET_1
2019-03-26 22:10:29 -Generating unique operation named: updateUsingPOST_15
2019-03-26 22:10:29 -Generating unique operation named: addUsingGET_15
2019-03-26 22:10:29 -Generating unique operation named: editUsingGET_16
2019-03-26 22:10:29 -Generating unique operation named: exprotExcelUsingGET_5
2019-03-26 22:10:29 -Generating unique operation named: listUsingGET_18
2019-03-26 22:10:29 -Generating unique operation named: removeUsingPOST_27
2019-03-26 22:10:29 -Generating unique operation named: removeUsingPOST_28
2019-03-26 22:10:29 -Generating unique operation named: saveUsingPOST_16
2019-03-26 22:10:29 -Generating unique operation named: updateUsingGET_10
2019-03-26 22:10:29 -Generating unique operation named: updateUsingHEAD_10
2019-03-26 22:10:30 -Generating unique operation named: updateUsingPOST_16
2019-03-26 22:10:30 -Generating unique operation named: updateUsingPUT_10
2019-03-26 22:10:30 -Generating unique operation named: updateUsingPATCH_10
2019-03-26 22:10:30 -Generating unique operation named: updateUsingDELETE_10
2019-03-26 22:10:30 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-26 22:10:30 -Generating unique operation named: updateUsingTRACE_10
2019-03-26 22:10:30 -Generating unique operation named: exprotExcelUsingGET_6
2019-03-26 22:10:30 -Generating unique operation named: addUsingGET_16
2019-03-26 22:10:30 -Generating unique operation named: editUsingGET_17
2019-03-26 22:10:30 -Generating unique operation named: listUsingGET_19
2019-03-26 22:10:30 -Generating unique operation named: removeUsingPOST_29
2019-03-26 22:10:30 -Generating unique operation named: removeUsingPOST_30
2019-03-26 22:10:30 -Generating unique operation named: saveUsingPOST_17
2019-03-26 22:10:30 -Generating unique operation named: updateUsingGET_11
2019-03-26 22:10:30 -Generating unique operation named: updateUsingHEAD_11
2019-03-26 22:10:30 -Generating unique operation named: updateUsingPOST_17
2019-03-26 22:10:30 -Generating unique operation named: updateUsingPUT_11
2019-03-26 22:10:30 -Generating unique operation named: updateUsingPATCH_11
2019-03-26 22:10:30 -Generating unique operation named: updateUsingDELETE_11
2019-03-26 22:10:30 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-26 22:10:30 -Generating unique operation named: updateUsingTRACE_11
2019-03-26 22:10:30 -Generating unique operation named: addUsingGET_17
2019-03-26 22:10:30 -Generating unique operation named: editUsingGET_18
2019-03-26 22:10:30 -Generating unique operation named: listUsingGET_20
2019-03-26 22:10:30 -Generating unique operation named: removeUsingPOST_31
2019-03-26 22:10:30 -Generating unique operation named: removeUsingPOST_32
2019-03-26 22:10:30 -Generating unique operation named: saveUsingPOST_18
2019-03-26 22:10:30 -Generating unique operation named: updateUsingGET_12
2019-03-26 22:10:30 -Generating unique operation named: updateUsingHEAD_12
2019-03-26 22:10:30 -Generating unique operation named: updateUsingPOST_18
2019-03-26 22:10:30 -Generating unique operation named: updateUsingPUT_12
2019-03-26 22:10:30 -Generating unique operation named: updateUsingPATCH_12
2019-03-26 22:10:30 -Generating unique operation named: updateUsingDELETE_12
2019-03-26 22:10:30 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-26 22:10:30 -Generating unique operation named: updateUsingTRACE_12
2019-03-26 22:10:30 -Starting Quartz Scheduler now
2019-03-26 22:10:30 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-26 22:10:30 -Starting...
2019-03-26 22:10:30 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-26 22:10:30 -Started.
2019-03-26 22:10:30 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-26 22:10:30 -Failed to start connector [Connector[HTTP/1.1-8081]]
org.apache.catalina.LifecycleException: Failed to start component [Connector[HTTP/1.1-8081]]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:167)
	at org.apache.catalina.core.StandardService.addConnector(StandardService.java:225)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.addPreviouslyRemovedConnectors(TomcatWebServer.java:256)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:198)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.startWebServer(ServletWebServerApplicationContext.java:300)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.finishRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:553)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.bootdo.BootdoApplication.main(BootdoApplication.java:21)
Caused by: org.apache.catalina.LifecycleException: Protocol handler start failed
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1020)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
	... 13 common frames omitted
Caused by: java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Unknown Source)
	at sun.nio.ch.Net.bind(Unknown Source)
	at sun.nio.ch.ServerSocketChannelImpl.bind(Unknown Source)
	at sun.nio.ch.ServerSocketAdaptor.bind(Unknown Source)
	at org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:210)
	at org.apache.tomcat.util.net.AbstractEndpoint.start(AbstractEndpoint.java:1150)
	at org.apache.coyote.AbstractProtocol.start(AbstractProtocol.java:591)
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1018)
	... 14 common frames omitted
2019-03-26 22:10:30 -Pausing ProtocolHandler ["http-nio-8081"]
2019-03-26 22:10:30 -Stopping service [Tomcat]
2019-03-26 22:10:30 -The stop() method was called on component [StandardServer[-1]] after stop() had already been called. The second call will be ignored.
2019-03-26 22:10:30 -Stopping ProtocolHandler ["http-nio-8081"]
2019-03-26 22:10:30 -Destroying ProtocolHandler ["http-nio-8081"]
2019-03-26 22:10:30 -

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2019-03-26 22:10:30 -

***************************
APPLICATION FAILED TO START
***************************

Description:

The Tomcat connector configured to listen on port 8081 failed to start. The port may already be in use or the connector may be misconfigured.

Action:

Verify the connector's configuration, identify and stop any process that's listening on port 8081, or configure this application to listen on another port.

2019-03-26 22:10:30 -Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2e11485: startup date [Tue Mar 26 22:09:58 CST 2019]; root of context hierarchy
2019-03-26 22:10:30 -Stopping beans in phase 2147483647
2019-03-26 22:10:30 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2019-03-26 22:10:30 -Stopping...
2019-03-26 22:10:30 -BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-26 22:10:30 -Stopped.
2019-03-26 22:10:30 -Unregistering JMX-exposed beans on shutdown
2019-03-26 22:10:30 -Unregistering JMX-exposed beans
2019-03-26 22:10:30 -Shutting down ExecutorService 'brokerChannelExecutor'
2019-03-26 22:10:30 -Shutting down ExecutorService 'messageBrokerTaskScheduler'
2019-03-26 22:10:30 -Shutting down ExecutorService 'clientOutboundChannelExecutor'
2019-03-26 22:10:30 -Shutting down ExecutorService 'clientInboundChannelExecutor'
2019-03-26 22:10:30 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutting down.
2019-03-26 22:10:30 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2019-03-26 22:10:30 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutdown complete.
2019-03-26 22:10:30 -Shutting down Quartz Scheduler
2019-03-26 22:11:10 -Starting BootdoApplication on ZJZL-20180906VX with PID 5960 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-26 22:11:10 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-26 22:11:10 -The following profiles are active: dev
2019-03-26 22:11:11 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@a38c7fe: startup date [Tue Mar 26 22:11:11 CST 2019]; root of context hierarchy
2019-03-26 22:11:14 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-26 22:11:16 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$99874f6f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 22:11:16 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$8be07e16] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 22:11:17 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 22:11:17 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 22:11:17 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 22:11:17 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-26 22:11:17 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-26 22:11:17 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 22:11:18 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 22:11:18 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 22:11:18 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 22:11:18 -Tomcat initialized with port(s): 8081 (http)
2019-03-26 22:11:18 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-26 22:11:18 -Starting service [Tomcat]
2019-03-26 22:11:18 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-26 22:11:18 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-26 22:11:19 -Initializing Spring embedded WebApplicationContext
2019-03-26 22:11:19 -Root WebApplicationContext: initialization completed in 8231 ms
2019-03-26 22:11:19 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-26 22:11:19 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-26 22:11:19 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-26 22:11:19 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-26 22:11:19 -Filter xssFilter was not registered (disabled)
2019-03-26 22:11:19 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-26 22:11:19 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-26 22:11:19 -Servlet statViewServlet mapped to [/druid/*]
2019-03-26 22:11:19 -Servlet dispatcherServlet mapped to [/]
2019-03-26 22:11:21 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@a38c7fe: startup date [Tue Mar 26 22:11:11 CST 2019]; root of context hierarchy
2019-03-26 22:11:22 -Using default implementation for ThreadExecutor
2019-03-26 22:11:22 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-26 22:11:22 -Quartz Scheduler v.2.2.1 created.
2019-03-26 22:11:22 -RAMJobStore initialized.
2019-03-26 22:11:22 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-26 22:11:22 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-26 22:11:22 -Quartz scheduler version: 2.2.1
2019-03-26 22:11:22 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@1a497286
2019-03-26 22:11:22 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-26 22:11:22 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-26 22:11:24 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-03-26 22:11:24 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-26 22:11:24 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-26 22:11:24 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-26 22:11:24 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-26 22:11:24 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-26 22:11:24 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-26 22:11:24 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-26 22:11:24 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-26 22:11:24 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-26 22:11:24 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-26 22:11:24 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 22:11:24 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-26 22:11:24 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-26 22:11:24 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 22:11:24 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-26 22:11:24 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-26 22:11:24 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-26 22:11:24 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-26 22:11:24 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-26 22:11:24 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-26 22:11:24 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-26 22:11:24 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 22:11:24 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-26 22:11:24 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-26 22:11:24 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 22:11:24 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-26 22:11:24 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-26 22:11:24 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 22:11:24 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-26 22:11:24 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-26 22:11:24 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-26 22:11:24 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-26 22:11:24 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-26 22:11:24 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-26 22:11:24 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-26 22:11:24 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-26 22:11:24 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-26 22:11:24 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 22:11:24 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-26 22:11:24 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-26 22:11:24 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 22:11:24 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-26 22:11:24 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-26 22:11:24 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-26 22:11:24 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-26 22:11:24 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 22:11:24 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-26 22:11:24 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-03-26 22:11:24 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-26 22:11:24 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-26 22:11:24 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-26 22:11:24 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-26 22:11:24 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-26 22:11:24 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-26 22:11:24 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-26 22:11:24 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-26 22:11:24 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-26 22:11:24 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-26 22:11:24 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-26 22:11:24 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 22:11:24 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-26 22:11:24 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-26 22:11:24 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-03-26 22:11:24 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-26 22:11:24 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-26 22:11:24 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-26 22:11:24 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-26 22:11:24 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 22:11:24 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-03-26 22:11:24 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-26 22:11:24 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 22:11:24 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-26 22:11:24 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-26 22:11:24 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-26 22:11:24 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-26 22:11:24 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-26 22:11:24 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-26 22:11:24 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 22:11:24 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-26 22:11:24 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-26 22:11:24 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-26 22:11:24 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-26 22:11:24 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-26 22:11:24 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-26 22:11:24 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-26 22:11:24 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-26 22:11:24 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-26 22:11:24 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-26 22:11:24 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 22:11:24 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-26 22:11:24 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-26 22:11:24 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 22:11:24 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-03-26 22:11:24 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-03-26 22:11:24 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-26 22:11:24 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-26 22:11:24 -Mapped "{[/moneyList/moneyList/LikeName],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.LikeName(org.springframework.ui.Model)
2019-03-26 22:11:24 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-26 22:11:24 -Mapped "{[/moneyList/moneyList/UserList],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-26 22:11:24 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-26 22:11:24 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-26 22:11:24 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-26 22:11:24 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-26 22:11:24 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 22:11:24 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-26 22:11:24 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-26 22:11:24 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-26 22:11:24 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 22:11:24 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-26 22:11:24 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-26 22:11:24 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-26 22:11:24 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-26 22:11:24 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 22:11:24 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-26 22:11:24 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-26 22:11:24 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-26 22:11:24 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 22:11:24 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-26 22:11:24 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-26 22:11:24 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-26 22:11:24 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-26 22:11:24 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 22:11:24 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-26 22:11:24 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-26 22:11:24 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-26 22:11:24 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 22:11:25 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-26 22:11:25 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-26 22:11:25 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-26 22:11:25 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-26 22:11:25 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-26 22:11:25 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 22:11:25 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-26 22:11:25 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-26 22:11:25 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-26 22:11:25 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 22:11:25 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-26 22:11:25 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 22:11:25 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-26 22:11:25 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-26 22:11:25 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-26 22:11:25 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-26 22:11:25 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 22:11:25 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-26 22:11:25 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 22:11:25 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-26 22:11:25 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-26 22:11:25 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 22:11:25 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-26 22:11:25 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-26 22:11:25 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-26 22:11:25 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-26 22:11:25 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-26 22:11:25 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-26 22:11:25 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-26 22:11:25 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-26 22:11:25 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-26 22:11:25 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 22:11:25 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-26 22:11:25 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-26 22:11:25 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-26 22:11:25 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-26 22:11:25 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-26 22:11:25 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-26 22:11:25 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-26 22:11:25 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-26 22:11:25 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-26 22:11:25 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-26 22:11:25 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 22:11:25 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-26 22:11:25 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-26 22:11:25 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-26 22:11:25 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-26 22:11:25 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-26 22:11:25 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-26 22:11:25 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-26 22:11:25 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-26 22:11:25 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-26 22:11:25 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-26 22:11:25 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-26 22:11:25 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-26 22:11:25 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 22:11:25 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-26 22:11:25 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-26 22:11:25 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-26 22:11:25 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-26 22:11:25 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 22:11:25 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-26 22:11:25 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-26 22:11:25 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-26 22:11:25 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 22:11:25 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-26 22:11:25 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-26 22:11:25 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-26 22:11:25 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-26 22:11:25 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-26 22:11:25 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-26 22:11:25 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-26 22:11:25 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-26 22:11:25 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-26 22:11:25 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-26 22:11:25 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-26 22:11:25 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-26 22:11:25 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-26 22:11:25 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-26 22:11:25 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-26 22:11:25 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-26 22:11:25 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-26 22:11:25 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 22:11:25 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-26 22:11:25 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 22:11:25 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-26 22:11:25 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-26 22:11:25 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 22:11:25 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-26 22:11:25 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-26 22:11:25 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-26 22:11:25 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-26 22:11:25 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-26 22:11:25 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-26 22:11:25 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 22:11:25 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-26 22:11:25 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-26 22:11:25 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 22:11:25 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-26 22:11:25 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-26 22:11:25 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-03-26 22:11:25 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-03-26 22:11:25 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-26 22:11:25 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-26 22:11:25 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-26 22:11:25 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-26 22:11:25 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-26 22:11:26 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-26 22:11:26 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-26 22:11:26 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-26 22:11:26 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@a38c7fe: startup date [Tue Mar 26 22:11:11 CST 2019]; root of context hierarchy
2019-03-26 22:11:27 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-26 22:11:27 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-26 22:11:27 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-26 22:11:27 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-26 22:11:27 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-26 22:11:28 -Registering beans for JMX exposure on startup
2019-03-26 22:11:28 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-26 22:11:28 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-26 22:11:28 -Starting beans in phase 2147483647
2019-03-26 22:11:28 -Context refreshed
2019-03-26 22:11:28 -Found 1 custom documentation plugin(s)
2019-03-26 22:11:29 -Scanning for api listing references
2019-03-26 22:11:29 -Generating unique operation named: removeUsingPOST_1
2019-03-26 22:11:29 -Generating unique operation named: addUsingGET_1
2019-03-26 22:11:29 -Generating unique operation named: editUsingGET_1
2019-03-26 22:11:29 -Generating unique operation named: listUsingGET_1
2019-03-26 22:11:29 -Generating unique operation named: removeUsingPOST_2
2019-03-26 22:11:29 -Generating unique operation named: removeUsingPOST_3
2019-03-26 22:11:29 -Generating unique operation named: saveUsingPOST_1
2019-03-26 22:11:29 -Generating unique operation named: updateUsingGET_1
2019-03-26 22:11:29 -Generating unique operation named: updateUsingHEAD_1
2019-03-26 22:11:29 -Generating unique operation named: updateUsingPOST_1
2019-03-26 22:11:29 -Generating unique operation named: updateUsingPUT_1
2019-03-26 22:11:29 -Generating unique operation named: updateUsingPATCH_1
2019-03-26 22:11:29 -Generating unique operation named: updateUsingDELETE_1
2019-03-26 22:11:29 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-26 22:11:29 -Generating unique operation named: updateUsingTRACE_1
2019-03-26 22:11:29 -Generating unique operation named: addUsingGET_2
2019-03-26 22:11:29 -Generating unique operation named: editUsingGET_2
2019-03-26 22:11:29 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-26 22:11:29 -Generating unique operation named: listUsingGET_2
2019-03-26 22:11:29 -Generating unique operation named: removeUsingPOST_4
2019-03-26 22:11:29 -Generating unique operation named: removeUsingPOST_5
2019-03-26 22:11:29 -Generating unique operation named: saveUsingPOST_2
2019-03-26 22:11:29 -Generating unique operation named: updateUsingPOST_2
2019-03-26 22:11:29 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-26 22:11:29 -Generating unique operation named: addUsingGET_3
2019-03-26 22:11:29 -Generating unique operation named: editUsingGET_3
2019-03-26 22:11:29 -Generating unique operation named: listUsingGET_3
2019-03-26 22:11:29 -Generating unique operation named: removeUsingPOST_6
2019-03-26 22:11:29 -Generating unique operation named: removeUsingPOST_7
2019-03-26 22:11:30 -Generating unique operation named: saveUsingPOST_3
2019-03-26 22:11:30 -Generating unique operation named: updateUsingGET_2
2019-03-26 22:11:30 -Generating unique operation named: updateUsingHEAD_2
2019-03-26 22:11:30 -Generating unique operation named: updateUsingPOST_3
2019-03-26 22:11:30 -Generating unique operation named: updateUsingPUT_2
2019-03-26 22:11:30 -Generating unique operation named: updateUsingPATCH_2
2019-03-26 22:11:30 -Generating unique operation named: updateUsingDELETE_2
2019-03-26 22:11:30 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-26 22:11:30 -Generating unique operation named: updateUsingTRACE_2
2019-03-26 22:11:30 -Generating unique operation named: addUsingGET_4
2019-03-26 22:11:30 -Generating unique operation named: editUsingGET_4
2019-03-26 22:11:30 -Generating unique operation named: listUsingGET_4
2019-03-26 22:11:30 -Generating unique operation named: removeUsingPOST_8
2019-03-26 22:11:30 -Generating unique operation named: removeUsingPOST_9
2019-03-26 22:11:30 -Generating unique operation named: saveUsingPOST_4
2019-03-26 22:11:30 -Generating unique operation named: updateUsingGET_3
2019-03-26 22:11:30 -Generating unique operation named: updateUsingHEAD_3
2019-03-26 22:11:30 -Generating unique operation named: updateUsingPOST_4
2019-03-26 22:11:30 -Generating unique operation named: updateUsingPUT_3
2019-03-26 22:11:30 -Generating unique operation named: updateUsingPATCH_3
2019-03-26 22:11:30 -Generating unique operation named: updateUsingDELETE_3
2019-03-26 22:11:30 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-26 22:11:30 -Generating unique operation named: updateUsingTRACE_3
2019-03-26 22:11:30 -Generating unique operation named: ElecUsingGET_1
2019-03-26 22:11:30 -Generating unique operation named: addUsingGET_5
2019-03-26 22:11:30 -Generating unique operation named: editUsingGET_5
2019-03-26 22:11:30 -Generating unique operation named: listUsingGET_5
2019-03-26 22:11:30 -Generating unique operation named: removeUsingPOST_10
2019-03-26 22:11:30 -Generating unique operation named: removeUsingPOST_11
2019-03-26 22:11:30 -Generating unique operation named: saveUsingPOST_5
2019-03-26 22:11:30 -Generating unique operation named: updateUsingGET_4
2019-03-26 22:11:30 -Generating unique operation named: updateUsingHEAD_4
2019-03-26 22:11:30 -Generating unique operation named: updateUsingPOST_5
2019-03-26 22:11:30 -Generating unique operation named: updateUsingPUT_4
2019-03-26 22:11:30 -Generating unique operation named: updateUsingPATCH_4
2019-03-26 22:11:30 -Generating unique operation named: updateUsingDELETE_4
2019-03-26 22:11:30 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-26 22:11:30 -Generating unique operation named: updateUsingTRACE_4
2019-03-26 22:11:30 -Generating unique operation named: editUsingGET_6
2019-03-26 22:11:30 -Generating unique operation named: listUsingGET_6
2019-03-26 22:11:30 -Generating unique operation named: updateUsingPOST_6
2019-03-26 22:11:30 -Generating unique operation named: addUsingGET_6
2019-03-26 22:11:30 -Generating unique operation named: editUsingGET_7
2019-03-26 22:11:30 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-26 22:11:30 -Generating unique operation named: listUsingGET_7
2019-03-26 22:11:30 -Generating unique operation named: removeUsingPOST_12
2019-03-26 22:11:30 -Generating unique operation named: removeUsingPOST_13
2019-03-26 22:11:30 -Generating unique operation named: saveUsingPOST_6
2019-03-26 22:11:30 -Generating unique operation named: updateUsingGET_5
2019-03-26 22:11:30 -Generating unique operation named: updateUsingHEAD_5
2019-03-26 22:11:30 -Generating unique operation named: updateUsingPOST_7
2019-03-26 22:11:30 -Generating unique operation named: updateUsingPUT_5
2019-03-26 22:11:30 -Generating unique operation named: updateUsingPATCH_5
2019-03-26 22:11:30 -Generating unique operation named: updateUsingDELETE_5
2019-03-26 22:11:30 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-26 22:11:30 -Generating unique operation named: updateUsingTRACE_5
2019-03-26 22:11:30 -Generating unique operation named: exprotExcelUsingGET_4
2019-03-26 22:11:30 -Generating unique operation named: addUsingGET_7
2019-03-26 22:11:30 -Generating unique operation named: editUsingGET_8
2019-03-26 22:11:30 -Generating unique operation named: listUsingGET_8
2019-03-26 22:11:30 -Generating unique operation named: removeUsingPOST_14
2019-03-26 22:11:30 -Generating unique operation named: removeUsingPOST_15
2019-03-26 22:11:30 -Generating unique operation named: saveUsingPOST_7
2019-03-26 22:11:30 -Generating unique operation named: updateUsingGET_6
2019-03-26 22:11:30 -Generating unique operation named: updateUsingHEAD_6
2019-03-26 22:11:30 -Generating unique operation named: updateUsingPOST_8
2019-03-26 22:11:30 -Generating unique operation named: updateUsingPUT_6
2019-03-26 22:11:30 -Generating unique operation named: updateUsingPATCH_6
2019-03-26 22:11:30 -Generating unique operation named: updateUsingDELETE_6
2019-03-26 22:11:30 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-26 22:11:30 -Generating unique operation named: updateUsingTRACE_6
2019-03-26 22:11:30 -Generating unique operation named: addUsingGET_8
2019-03-26 22:11:30 -Generating unique operation named: editUsingGET_9
2019-03-26 22:11:30 -Generating unique operation named: listUsingGET_9
2019-03-26 22:11:30 -Generating unique operation named: removeUsingPOST_16
2019-03-26 22:11:30 -Generating unique operation named: removeUsingPOST_17
2019-03-26 22:11:30 -Generating unique operation named: saveUsingPOST_8
2019-03-26 22:11:30 -Generating unique operation named: updateUsingGET_7
2019-03-26 22:11:30 -Generating unique operation named: updateUsingHEAD_7
2019-03-26 22:11:30 -Generating unique operation named: updateUsingPOST_9
2019-03-26 22:11:30 -Generating unique operation named: updateUsingPUT_7
2019-03-26 22:11:30 -Generating unique operation named: updateUsingPATCH_7
2019-03-26 22:11:30 -Generating unique operation named: updateUsingDELETE_7
2019-03-26 22:11:30 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-26 22:11:30 -Generating unique operation named: updateUsingTRACE_7
2019-03-26 22:11:30 -Generating unique operation named: addUsingGET_9
2019-03-26 22:11:30 -Generating unique operation named: editUsingGET_10
2019-03-26 22:11:30 -Generating unique operation named: infoUsingGET_1
2019-03-26 22:11:30 -Generating unique operation named: infoUsingHEAD_1
2019-03-26 22:11:30 -Generating unique operation named: infoUsingPOST_1
2019-03-26 22:11:30 -Generating unique operation named: infoUsingPUT_1
2019-03-26 22:11:30 -Generating unique operation named: infoUsingPATCH_1
2019-03-26 22:11:30 -Generating unique operation named: infoUsingDELETE_1
2019-03-26 22:11:30 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-26 22:11:30 -Generating unique operation named: infoUsingTRACE_1
2019-03-26 22:11:30 -Generating unique operation named: listUsingGET_10
2019-03-26 22:11:30 -Generating unique operation named: removeUsingPOST_18
2019-03-26 22:11:30 -Generating unique operation named: removeUsingPOST_19
2019-03-26 22:11:30 -Generating unique operation named: saveUsingPOST_9
2019-03-26 22:11:30 -Generating unique operation named: updateUsingPOST_10
2019-03-26 22:11:30 -Generating unique operation named: listUsingGET_11
2019-03-26 22:11:30 -Generating unique operation named: removeUsingPOST_20
2019-03-26 22:11:30 -Generating unique operation named: welcomeUsingGET_1
2019-03-26 22:11:30 -Generating unique operation named: addUsingGET_10
2019-03-26 22:11:30 -Generating unique operation named: editUsingGET_11
2019-03-26 22:11:30 -Generating unique operation named: listUsingGET_12
2019-03-26 22:11:30 -Generating unique operation named: removeUsingPOST_21
2019-03-26 22:11:30 -Generating unique operation named: saveUsingPOST_10
2019-03-26 22:11:30 -Generating unique operation named: treeUsingGET_1
2019-03-26 22:11:30 -Generating unique operation named: treeUsingGET_2
2019-03-26 22:11:30 -Generating unique operation named: updateUsingPOST_11
2019-03-26 22:11:30 -Generating unique operation named: addUsingGET_11
2019-03-26 22:11:30 -Generating unique operation named: editUsingGET_12
2019-03-26 22:11:30 -Generating unique operation named: listUsingGET_13
2019-03-26 22:11:30 -Generating unique operation named: removeUsingPOST_22
2019-03-26 22:11:30 -Generating unique operation named: removeUsingPOST_23
2019-03-26 22:11:30 -Generating unique operation named: saveUsingPOST_11
2019-03-26 22:11:31 -Generating unique operation named: updateUsingGET_8
2019-03-26 22:11:31 -Generating unique operation named: updateUsingHEAD_8
2019-03-26 22:11:31 -Generating unique operation named: updateUsingPOST_12
2019-03-26 22:11:31 -Generating unique operation named: updateUsingPUT_8
2019-03-26 22:11:31 -Generating unique operation named: updateUsingPATCH_8
2019-03-26 22:11:31 -Generating unique operation named: updateUsingDELETE_8
2019-03-26 22:11:31 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-26 22:11:31 -Generating unique operation named: updateUsingTRACE_8
2019-03-26 22:11:31 -Generating unique operation named: addUsingGET_12
2019-03-26 22:11:31 -Generating unique operation named: editUsingGET_13
2019-03-26 22:11:31 -Generating unique operation named: listUsingGET_14
2019-03-26 22:11:31 -Generating unique operation named: removeUsingPOST_24
2019-03-26 22:11:31 -Generating unique operation named: removeUsingPOST_25
2019-03-26 22:11:31 -Generating unique operation named: saveUsingPOST_12
2019-03-26 22:11:31 -Generating unique operation named: updateUsingGET_9
2019-03-26 22:11:31 -Generating unique operation named: updateUsingHEAD_9
2019-03-26 22:11:31 -Generating unique operation named: updateUsingPOST_13
2019-03-26 22:11:31 -Generating unique operation named: updateUsingPUT_9
2019-03-26 22:11:31 -Generating unique operation named: updateUsingPATCH_9
2019-03-26 22:11:31 -Generating unique operation named: updateUsingDELETE_9
2019-03-26 22:11:31 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-26 22:11:31 -Generating unique operation named: updateUsingTRACE_9
2019-03-26 22:11:31 -Generating unique operation named: addUsingGET_13
2019-03-26 22:11:31 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-26 22:11:31 -Generating unique operation named: editUsingGET_14
2019-03-26 22:11:31 -Generating unique operation named: listUsingGET_15
2019-03-26 22:11:31 -Generating unique operation named: saveUsingPOST_13
2019-03-26 22:11:31 -Generating unique operation named: saveUsingPOST_14
2019-03-26 22:11:31 -Generating unique operation named: updateUsingPOST_14
2019-03-26 22:11:31 -Generating unique operation named: listUsingGET_16
2019-03-26 22:11:31 -Generating unique operation named: listUsingHEAD_1
2019-03-26 22:11:31 -Generating unique operation named: listUsingPOST_1
2019-03-26 22:11:31 -Generating unique operation named: listUsingPUT_1
2019-03-26 22:11:31 -Generating unique operation named: listUsingPATCH_1
2019-03-26 22:11:31 -Generating unique operation named: listUsingDELETE_1
2019-03-26 22:11:31 -Generating unique operation named: listUsingOPTIONS_1
2019-03-26 22:11:31 -Generating unique operation named: listUsingTRACE_1
2019-03-26 22:11:31 -Generating unique operation named: addUsingGET_14
2019-03-26 22:11:31 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-26 22:11:31 -Generating unique operation named: editUsingGET_15
2019-03-26 22:11:31 -Generating unique operation named: listUsingGET_17
2019-03-26 22:11:31 -Generating unique operation named: removeUsingPOST_26
2019-03-26 22:11:31 -Generating unique operation named: saveUsingPOST_15
2019-03-26 22:11:31 -Generating unique operation named: treeUsingGET_3
2019-03-26 22:11:31 -Generating unique operation named: treeViewUsingGET_1
2019-03-26 22:11:31 -Generating unique operation named: updateUsingPOST_15
2019-03-26 22:11:31 -Generating unique operation named: addUsingGET_15
2019-03-26 22:11:31 -Generating unique operation named: editUsingGET_16
2019-03-26 22:11:31 -Generating unique operation named: exprotExcelUsingGET_5
2019-03-26 22:11:31 -Generating unique operation named: listUsingGET_18
2019-03-26 22:11:31 -Generating unique operation named: removeUsingPOST_27
2019-03-26 22:11:31 -Generating unique operation named: removeUsingPOST_28
2019-03-26 22:11:31 -Generating unique operation named: saveUsingPOST_16
2019-03-26 22:11:31 -Generating unique operation named: updateUsingGET_10
2019-03-26 22:11:31 -Generating unique operation named: updateUsingHEAD_10
2019-03-26 22:11:31 -Generating unique operation named: updateUsingPOST_16
2019-03-26 22:11:31 -Generating unique operation named: updateUsingPUT_10
2019-03-26 22:11:31 -Generating unique operation named: updateUsingPATCH_10
2019-03-26 22:11:31 -Generating unique operation named: updateUsingDELETE_10
2019-03-26 22:11:31 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-26 22:11:31 -Generating unique operation named: updateUsingTRACE_10
2019-03-26 22:11:31 -Generating unique operation named: exprotExcelUsingGET_6
2019-03-26 22:11:31 -Generating unique operation named: addUsingGET_16
2019-03-26 22:11:31 -Generating unique operation named: editUsingGET_17
2019-03-26 22:11:31 -Generating unique operation named: listUsingGET_19
2019-03-26 22:11:31 -Generating unique operation named: removeUsingPOST_29
2019-03-26 22:11:31 -Generating unique operation named: removeUsingPOST_30
2019-03-26 22:11:31 -Generating unique operation named: saveUsingPOST_17
2019-03-26 22:11:31 -Generating unique operation named: updateUsingGET_11
2019-03-26 22:11:31 -Generating unique operation named: updateUsingHEAD_11
2019-03-26 22:11:31 -Generating unique operation named: updateUsingPOST_17
2019-03-26 22:11:31 -Generating unique operation named: updateUsingPUT_11
2019-03-26 22:11:31 -Generating unique operation named: updateUsingPATCH_11
2019-03-26 22:11:31 -Generating unique operation named: updateUsingDELETE_11
2019-03-26 22:11:31 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-26 22:11:31 -Generating unique operation named: updateUsingTRACE_11
2019-03-26 22:11:31 -Generating unique operation named: addUsingGET_17
2019-03-26 22:11:31 -Generating unique operation named: editUsingGET_18
2019-03-26 22:11:31 -Generating unique operation named: listUsingGET_20
2019-03-26 22:11:31 -Generating unique operation named: removeUsingPOST_31
2019-03-26 22:11:31 -Generating unique operation named: removeUsingPOST_32
2019-03-26 22:11:31 -Generating unique operation named: saveUsingPOST_18
2019-03-26 22:11:31 -Generating unique operation named: updateUsingGET_12
2019-03-26 22:11:31 -Generating unique operation named: updateUsingHEAD_12
2019-03-26 22:11:31 -Generating unique operation named: updateUsingPOST_18
2019-03-26 22:11:31 -Generating unique operation named: updateUsingPUT_12
2019-03-26 22:11:31 -Generating unique operation named: updateUsingPATCH_12
2019-03-26 22:11:31 -Generating unique operation named: updateUsingDELETE_12
2019-03-26 22:11:31 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-26 22:11:31 -Generating unique operation named: updateUsingTRACE_12
2019-03-26 22:11:31 -Starting Quartz Scheduler now
2019-03-26 22:11:31 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-26 22:11:31 -Starting...
2019-03-26 22:11:31 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-26 22:11:31 -Started.
2019-03-26 22:11:31 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-26 22:11:31 -Failed to start connector [Connector[HTTP/1.1-8081]]
org.apache.catalina.LifecycleException: Failed to start component [Connector[HTTP/1.1-8081]]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:167)
	at org.apache.catalina.core.StandardService.addConnector(StandardService.java:225)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.addPreviouslyRemovedConnectors(TomcatWebServer.java:256)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:198)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.startWebServer(ServletWebServerApplicationContext.java:300)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.finishRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:553)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.bootdo.BootdoApplication.main(BootdoApplication.java:21)
Caused by: org.apache.catalina.LifecycleException: Protocol handler start failed
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1020)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
	... 13 common frames omitted
Caused by: java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Unknown Source)
	at sun.nio.ch.Net.bind(Unknown Source)
	at sun.nio.ch.ServerSocketChannelImpl.bind(Unknown Source)
	at sun.nio.ch.ServerSocketAdaptor.bind(Unknown Source)
	at org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:210)
	at org.apache.tomcat.util.net.AbstractEndpoint.start(AbstractEndpoint.java:1150)
	at org.apache.coyote.AbstractProtocol.start(AbstractProtocol.java:591)
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1018)
	... 14 common frames omitted
2019-03-26 22:11:31 -Pausing ProtocolHandler ["http-nio-8081"]
2019-03-26 22:11:31 -Stopping service [Tomcat]
2019-03-26 22:11:31 -The stop() method was called on component [StandardServer[-1]] after stop() had already been called. The second call will be ignored.
2019-03-26 22:11:31 -Stopping ProtocolHandler ["http-nio-8081"]
2019-03-26 22:11:31 -Destroying ProtocolHandler ["http-nio-8081"]
2019-03-26 22:11:31 -

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2019-03-26 22:11:31 -

***************************
APPLICATION FAILED TO START
***************************

Description:

The Tomcat connector configured to listen on port 8081 failed to start. The port may already be in use or the connector may be misconfigured.

Action:

Verify the connector's configuration, identify and stop any process that's listening on port 8081, or configure this application to listen on another port.

2019-03-26 22:11:31 -Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@a38c7fe: startup date [Tue Mar 26 22:11:11 CST 2019]; root of context hierarchy
2019-03-26 22:11:31 -Stopping beans in phase 2147483647
2019-03-26 22:11:31 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2019-03-26 22:11:31 -Stopping...
2019-03-26 22:11:31 -BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-26 22:11:31 -Stopped.
2019-03-26 22:11:31 -Unregistering JMX-exposed beans on shutdown
2019-03-26 22:11:31 -Unregistering JMX-exposed beans
2019-03-26 22:11:31 -Shutting down ExecutorService 'brokerChannelExecutor'
2019-03-26 22:11:31 -Shutting down ExecutorService 'messageBrokerTaskScheduler'
2019-03-26 22:11:31 -Shutting down ExecutorService 'clientOutboundChannelExecutor'
2019-03-26 22:11:31 -Shutting down ExecutorService 'clientInboundChannelExecutor'
2019-03-26 22:11:31 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutting down.
2019-03-26 22:11:31 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2019-03-26 22:11:31 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutdown complete.
2019-03-26 22:11:31 -Shutting down Quartz Scheduler
2019-03-26 22:15:44 -Starting BootdoApplication on ZJZL-20180906VX with PID 3872 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-26 22:15:44 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-26 22:15:44 -The following profiles are active: dev
2019-03-26 22:15:45 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@70e9c95d: startup date [Tue Mar 26 22:15:45 CST 2019]; root of context hierarchy
2019-03-26 22:15:47 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-26 22:15:49 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$6ba91869] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 22:15:49 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$5e024710] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 22:15:50 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 22:15:50 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 22:15:50 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 22:15:50 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-26 22:15:50 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-26 22:15:50 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 22:15:50 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 22:15:50 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 22:15:50 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 22:15:51 -Tomcat initialized with port(s): 8081 (http)
2019-03-26 22:15:51 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-26 22:15:51 -Starting service [Tomcat]
2019-03-26 22:15:51 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-26 22:15:51 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-26 22:15:51 -Initializing Spring embedded WebApplicationContext
2019-03-26 22:15:51 -Root WebApplicationContext: initialization completed in 6890 ms
2019-03-26 22:15:52 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-26 22:15:52 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-26 22:15:52 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-26 22:15:52 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-26 22:15:52 -Filter xssFilter was not registered (disabled)
2019-03-26 22:15:52 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-26 22:15:52 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-26 22:15:52 -Servlet statViewServlet mapped to [/druid/*]
2019-03-26 22:15:52 -Servlet dispatcherServlet mapped to [/]
2019-03-26 22:15:54 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@70e9c95d: startup date [Tue Mar 26 22:15:45 CST 2019]; root of context hierarchy
2019-03-26 22:15:55 -Using default implementation for ThreadExecutor
2019-03-26 22:15:55 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-26 22:15:55 -Quartz Scheduler v.2.2.1 created.
2019-03-26 22:15:55 -RAMJobStore initialized.
2019-03-26 22:15:55 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-26 22:15:55 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-26 22:15:55 -Quartz scheduler version: 2.2.1
2019-03-26 22:15:55 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@53cddaf8
2019-03-26 22:15:55 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-26 22:15:55 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-26 22:15:57 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-26 22:15:57 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-03-26 22:15:57 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-26 22:15:57 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-26 22:15:57 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-26 22:15:57 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-26 22:15:57 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-26 22:15:57 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-26 22:15:57 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-26 22:15:57 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-26 22:15:57 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-26 22:15:57 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 22:15:57 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-26 22:15:57 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-26 22:15:57 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 22:15:57 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-26 22:15:57 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-26 22:15:57 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-26 22:15:57 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-26 22:15:57 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-26 22:15:57 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-26 22:15:57 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-26 22:15:57 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 22:15:57 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-26 22:15:57 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-26 22:15:57 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-26 22:15:57 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 22:15:57 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-26 22:15:57 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 22:15:57 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-26 22:15:57 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-26 22:15:57 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-26 22:15:57 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-26 22:15:57 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-26 22:15:57 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-26 22:15:57 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-26 22:15:57 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-26 22:15:57 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-26 22:15:57 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 22:15:57 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-26 22:15:57 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-26 22:15:57 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 22:15:57 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-26 22:15:57 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-26 22:15:57 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-26 22:15:57 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-26 22:15:57 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 22:15:57 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-26 22:15:57 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-03-26 22:15:57 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-26 22:15:57 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-26 22:15:57 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-26 22:15:57 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-26 22:15:57 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-26 22:15:57 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-26 22:15:57 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-26 22:15:57 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-26 22:15:57 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-26 22:15:57 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-26 22:15:57 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 22:15:57 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-26 22:15:57 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-26 22:15:57 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-26 22:15:57 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-03-26 22:15:57 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-26 22:15:57 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-26 22:15:57 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-26 22:15:57 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-26 22:15:57 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 22:15:57 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-03-26 22:15:57 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 22:15:57 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-26 22:15:57 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-26 22:15:57 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-26 22:15:57 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-26 22:15:57 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-26 22:15:57 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-26 22:15:57 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-26 22:15:57 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 22:15:57 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-26 22:15:57 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-26 22:15:57 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-26 22:15:57 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-26 22:15:58 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-26 22:15:58 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-26 22:15:58 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-26 22:15:58 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-26 22:15:58 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-26 22:15:58 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-26 22:15:58 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 22:15:58 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-26 22:15:58 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 22:15:58 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-26 22:15:58 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-03-26 22:15:58 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-26 22:15:58 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-26 22:15:58 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-03-26 22:15:58 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-26 22:15:58 -Mapped "{[/moneyList/moneyList/UserList],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-26 22:15:58 -Mapped "{[/moneyList/moneyList/LikeName],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.LikeName(org.springframework.ui.Model)
2019-03-26 22:15:58 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-26 22:15:58 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-26 22:15:58 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-26 22:15:58 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-26 22:15:58 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 22:15:58 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-26 22:15:58 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 22:15:58 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-26 22:15:58 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-26 22:15:58 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-26 22:15:58 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-26 22:15:58 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-26 22:15:58 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-26 22:15:58 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 22:15:58 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-26 22:15:58 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 22:15:58 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-26 22:15:58 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-26 22:15:58 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-26 22:15:58 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-26 22:15:58 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-26 22:15:58 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-26 22:15:58 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 22:15:58 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-26 22:15:58 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 22:15:58 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-26 22:15:58 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-26 22:15:58 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-26 22:15:58 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-26 22:15:58 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-26 22:15:58 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-26 22:15:58 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-26 22:15:58 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 22:15:58 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-26 22:15:58 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-26 22:15:58 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 22:15:58 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 22:15:58 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-26 22:15:58 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-26 22:15:58 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-26 22:15:58 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-26 22:15:58 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-26 22:15:58 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-26 22:15:58 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 22:15:58 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-26 22:15:58 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 22:15:58 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-26 22:15:58 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-26 22:15:58 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 22:15:58 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-26 22:15:58 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-26 22:15:58 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-26 22:15:58 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-26 22:15:58 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-26 22:15:58 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-26 22:15:58 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-26 22:15:58 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 22:15:58 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-26 22:15:58 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-26 22:15:58 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-26 22:15:58 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-26 22:15:58 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-26 22:15:58 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-26 22:15:58 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-26 22:15:58 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-26 22:15:58 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-26 22:15:58 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-26 22:15:58 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-26 22:15:58 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-26 22:15:58 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 22:15:58 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-26 22:15:58 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-26 22:15:58 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-26 22:15:58 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-26 22:15:58 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-26 22:15:58 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-26 22:15:58 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-26 22:15:58 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-26 22:15:58 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-26 22:15:58 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-26 22:15:58 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-26 22:15:58 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-26 22:15:58 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 22:15:58 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-26 22:15:58 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-26 22:15:58 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-26 22:15:58 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-26 22:15:58 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 22:15:58 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-26 22:15:58 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-26 22:15:58 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-26 22:15:58 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 22:15:58 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-26 22:15:58 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-26 22:15:58 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-26 22:15:58 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-26 22:15:58 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-26 22:15:58 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-26 22:15:58 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-26 22:15:58 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-26 22:15:58 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-26 22:15:58 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-26 22:15:58 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-26 22:15:58 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-26 22:15:58 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-26 22:15:58 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-26 22:15:58 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-26 22:15:58 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-26 22:15:58 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-26 22:15:58 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 22:15:58 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-26 22:15:58 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-26 22:15:58 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 22:15:58 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 22:15:58 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-26 22:15:58 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-26 22:15:58 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-26 22:15:58 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-26 22:15:58 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-26 22:15:58 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-26 22:15:58 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-26 22:15:58 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 22:15:58 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-26 22:15:58 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 22:15:58 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-26 22:15:58 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-26 22:15:58 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-03-26 22:15:58 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-03-26 22:15:58 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-26 22:15:58 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-26 22:15:58 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-26 22:15:58 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-26 22:15:58 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-26 22:15:58 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-26 22:15:58 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-26 22:15:58 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-26 22:15:59 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-26 22:15:59 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@70e9c95d: startup date [Tue Mar 26 22:15:45 CST 2019]; root of context hierarchy
2019-03-26 22:15:59 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-26 22:15:59 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-26 22:15:59 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-26 22:15:59 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-26 22:15:59 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-26 22:16:01 -Registering beans for JMX exposure on startup
2019-03-26 22:16:01 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-26 22:16:01 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-26 22:16:01 -Starting beans in phase 2147483647
2019-03-26 22:16:01 -Context refreshed
2019-03-26 22:16:01 -Found 1 custom documentation plugin(s)
2019-03-26 22:16:01 -Scanning for api listing references
2019-03-26 22:16:02 -Generating unique operation named: removeUsingPOST_1
2019-03-26 22:16:02 -Generating unique operation named: addUsingGET_1
2019-03-26 22:16:02 -Generating unique operation named: editUsingGET_1
2019-03-26 22:16:02 -Generating unique operation named: listUsingGET_1
2019-03-26 22:16:02 -Generating unique operation named: removeUsingPOST_2
2019-03-26 22:16:02 -Generating unique operation named: removeUsingPOST_3
2019-03-26 22:16:02 -Generating unique operation named: saveUsingPOST_1
2019-03-26 22:16:02 -Generating unique operation named: updateUsingGET_1
2019-03-26 22:16:02 -Generating unique operation named: updateUsingHEAD_1
2019-03-26 22:16:02 -Generating unique operation named: updateUsingPOST_1
2019-03-26 22:16:02 -Generating unique operation named: updateUsingPUT_1
2019-03-26 22:16:02 -Generating unique operation named: updateUsingPATCH_1
2019-03-26 22:16:02 -Generating unique operation named: updateUsingDELETE_1
2019-03-26 22:16:02 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-26 22:16:02 -Generating unique operation named: updateUsingTRACE_1
2019-03-26 22:16:02 -Generating unique operation named: addUsingGET_2
2019-03-26 22:16:02 -Generating unique operation named: editUsingGET_2
2019-03-26 22:16:02 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-26 22:16:02 -Generating unique operation named: listUsingGET_2
2019-03-26 22:16:02 -Generating unique operation named: removeUsingPOST_4
2019-03-26 22:16:02 -Generating unique operation named: removeUsingPOST_5
2019-03-26 22:16:02 -Generating unique operation named: saveUsingPOST_2
2019-03-26 22:16:02 -Generating unique operation named: updateUsingPOST_2
2019-03-26 22:16:02 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-26 22:16:02 -Generating unique operation named: addUsingGET_3
2019-03-26 22:16:02 -Generating unique operation named: editUsingGET_3
2019-03-26 22:16:02 -Generating unique operation named: listUsingGET_3
2019-03-26 22:16:02 -Generating unique operation named: removeUsingPOST_6
2019-03-26 22:16:02 -Generating unique operation named: removeUsingPOST_7
2019-03-26 22:16:02 -Generating unique operation named: saveUsingPOST_3
2019-03-26 22:16:02 -Generating unique operation named: updateUsingGET_2
2019-03-26 22:16:02 -Generating unique operation named: updateUsingHEAD_2
2019-03-26 22:16:02 -Generating unique operation named: updateUsingPOST_3
2019-03-26 22:16:02 -Generating unique operation named: updateUsingPUT_2
2019-03-26 22:16:02 -Generating unique operation named: updateUsingPATCH_2
2019-03-26 22:16:02 -Generating unique operation named: updateUsingDELETE_2
2019-03-26 22:16:02 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-26 22:16:02 -Generating unique operation named: updateUsingTRACE_2
2019-03-26 22:16:02 -Generating unique operation named: addUsingGET_4
2019-03-26 22:16:02 -Generating unique operation named: editUsingGET_4
2019-03-26 22:16:02 -Generating unique operation named: listUsingGET_4
2019-03-26 22:16:02 -Generating unique operation named: removeUsingPOST_8
2019-03-26 22:16:02 -Generating unique operation named: removeUsingPOST_9
2019-03-26 22:16:02 -Generating unique operation named: saveUsingPOST_4
2019-03-26 22:16:02 -Generating unique operation named: updateUsingGET_3
2019-03-26 22:16:02 -Generating unique operation named: updateUsingHEAD_3
2019-03-26 22:16:02 -Generating unique operation named: updateUsingPOST_4
2019-03-26 22:16:02 -Generating unique operation named: updateUsingPUT_3
2019-03-26 22:16:02 -Generating unique operation named: updateUsingPATCH_3
2019-03-26 22:16:02 -Generating unique operation named: updateUsingDELETE_3
2019-03-26 22:16:02 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-26 22:16:02 -Generating unique operation named: updateUsingTRACE_3
2019-03-26 22:16:02 -Generating unique operation named: ElecUsingGET_1
2019-03-26 22:16:02 -Generating unique operation named: addUsingGET_5
2019-03-26 22:16:02 -Generating unique operation named: editUsingGET_5
2019-03-26 22:16:02 -Generating unique operation named: listUsingGET_5
2019-03-26 22:16:02 -Generating unique operation named: removeUsingPOST_10
2019-03-26 22:16:02 -Generating unique operation named: removeUsingPOST_11
2019-03-26 22:16:02 -Generating unique operation named: saveUsingPOST_5
2019-03-26 22:16:02 -Generating unique operation named: updateUsingGET_4
2019-03-26 22:16:02 -Generating unique operation named: updateUsingHEAD_4
2019-03-26 22:16:02 -Generating unique operation named: updateUsingPOST_5
2019-03-26 22:16:02 -Generating unique operation named: updateUsingPUT_4
2019-03-26 22:16:02 -Generating unique operation named: updateUsingPATCH_4
2019-03-26 22:16:02 -Generating unique operation named: updateUsingDELETE_4
2019-03-26 22:16:02 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-26 22:16:02 -Generating unique operation named: updateUsingTRACE_4
2019-03-26 22:16:02 -Generating unique operation named: editUsingGET_6
2019-03-26 22:16:02 -Generating unique operation named: listUsingGET_6
2019-03-26 22:16:02 -Generating unique operation named: updateUsingPOST_6
2019-03-26 22:16:02 -Generating unique operation named: addUsingGET_6
2019-03-26 22:16:02 -Generating unique operation named: editUsingGET_7
2019-03-26 22:16:02 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-26 22:16:02 -Generating unique operation named: listUsingGET_7
2019-03-26 22:16:02 -Generating unique operation named: removeUsingPOST_12
2019-03-26 22:16:02 -Generating unique operation named: removeUsingPOST_13
2019-03-26 22:16:02 -Generating unique operation named: saveUsingPOST_6
2019-03-26 22:16:02 -Generating unique operation named: updateUsingGET_5
2019-03-26 22:16:02 -Generating unique operation named: updateUsingHEAD_5
2019-03-26 22:16:02 -Generating unique operation named: updateUsingPOST_7
2019-03-26 22:16:02 -Generating unique operation named: updateUsingPUT_5
2019-03-26 22:16:02 -Generating unique operation named: updateUsingPATCH_5
2019-03-26 22:16:02 -Generating unique operation named: updateUsingDELETE_5
2019-03-26 22:16:02 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-26 22:16:02 -Generating unique operation named: updateUsingTRACE_5
2019-03-26 22:16:02 -Generating unique operation named: exprotExcelUsingGET_4
2019-03-26 22:16:02 -Generating unique operation named: addUsingGET_7
2019-03-26 22:16:02 -Generating unique operation named: editUsingGET_8
2019-03-26 22:16:02 -Generating unique operation named: listUsingGET_8
2019-03-26 22:16:02 -Generating unique operation named: removeUsingPOST_14
2019-03-26 22:16:02 -Generating unique operation named: removeUsingPOST_15
2019-03-26 22:16:02 -Generating unique operation named: saveUsingPOST_7
2019-03-26 22:16:02 -Generating unique operation named: updateUsingGET_6
2019-03-26 22:16:02 -Generating unique operation named: updateUsingHEAD_6
2019-03-26 22:16:02 -Generating unique operation named: updateUsingPOST_8
2019-03-26 22:16:02 -Generating unique operation named: updateUsingPUT_6
2019-03-26 22:16:02 -Generating unique operation named: updateUsingPATCH_6
2019-03-26 22:16:02 -Generating unique operation named: updateUsingDELETE_6
2019-03-26 22:16:02 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-26 22:16:02 -Generating unique operation named: updateUsingTRACE_6
2019-03-26 22:16:02 -Generating unique operation named: addUsingGET_8
2019-03-26 22:16:02 -Generating unique operation named: editUsingGET_9
2019-03-26 22:16:02 -Generating unique operation named: listUsingGET_9
2019-03-26 22:16:02 -Generating unique operation named: removeUsingPOST_16
2019-03-26 22:16:02 -Generating unique operation named: removeUsingPOST_17
2019-03-26 22:16:02 -Generating unique operation named: saveUsingPOST_8
2019-03-26 22:16:02 -Generating unique operation named: updateUsingGET_7
2019-03-26 22:16:02 -Generating unique operation named: updateUsingHEAD_7
2019-03-26 22:16:02 -Generating unique operation named: updateUsingPOST_9
2019-03-26 22:16:02 -Generating unique operation named: updateUsingPUT_7
2019-03-26 22:16:02 -Generating unique operation named: updateUsingPATCH_7
2019-03-26 22:16:02 -Generating unique operation named: updateUsingDELETE_7
2019-03-26 22:16:02 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-26 22:16:02 -Generating unique operation named: updateUsingTRACE_7
2019-03-26 22:16:03 -Generating unique operation named: addUsingGET_9
2019-03-26 22:16:03 -Generating unique operation named: editUsingGET_10
2019-03-26 22:16:03 -Generating unique operation named: infoUsingGET_1
2019-03-26 22:16:03 -Generating unique operation named: infoUsingHEAD_1
2019-03-26 22:16:03 -Generating unique operation named: infoUsingPOST_1
2019-03-26 22:16:03 -Generating unique operation named: infoUsingPUT_1
2019-03-26 22:16:03 -Generating unique operation named: infoUsingPATCH_1
2019-03-26 22:16:03 -Generating unique operation named: infoUsingDELETE_1
2019-03-26 22:16:03 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-26 22:16:03 -Generating unique operation named: infoUsingTRACE_1
2019-03-26 22:16:03 -Generating unique operation named: listUsingGET_10
2019-03-26 22:16:03 -Generating unique operation named: removeUsingPOST_18
2019-03-26 22:16:03 -Generating unique operation named: removeUsingPOST_19
2019-03-26 22:16:03 -Generating unique operation named: saveUsingPOST_9
2019-03-26 22:16:03 -Generating unique operation named: updateUsingPOST_10
2019-03-26 22:16:03 -Generating unique operation named: listUsingGET_11
2019-03-26 22:16:03 -Generating unique operation named: removeUsingPOST_20
2019-03-26 22:16:03 -Generating unique operation named: welcomeUsingGET_1
2019-03-26 22:16:03 -Generating unique operation named: addUsingGET_10
2019-03-26 22:16:03 -Generating unique operation named: editUsingGET_11
2019-03-26 22:16:03 -Generating unique operation named: listUsingGET_12
2019-03-26 22:16:03 -Generating unique operation named: removeUsingPOST_21
2019-03-26 22:16:03 -Generating unique operation named: saveUsingPOST_10
2019-03-26 22:16:03 -Generating unique operation named: treeUsingGET_1
2019-03-26 22:16:03 -Generating unique operation named: treeUsingGET_2
2019-03-26 22:16:03 -Generating unique operation named: updateUsingPOST_11
2019-03-26 22:16:03 -Generating unique operation named: addUsingGET_11
2019-03-26 22:16:03 -Generating unique operation named: editUsingGET_12
2019-03-26 22:16:03 -Generating unique operation named: listUsingGET_13
2019-03-26 22:16:03 -Generating unique operation named: removeUsingPOST_22
2019-03-26 22:16:03 -Generating unique operation named: removeUsingPOST_23
2019-03-26 22:16:03 -Generating unique operation named: saveUsingPOST_11
2019-03-26 22:16:03 -Generating unique operation named: updateUsingGET_8
2019-03-26 22:16:03 -Generating unique operation named: updateUsingHEAD_8
2019-03-26 22:16:03 -Generating unique operation named: updateUsingPOST_12
2019-03-26 22:16:03 -Generating unique operation named: updateUsingPUT_8
2019-03-26 22:16:03 -Generating unique operation named: updateUsingPATCH_8
2019-03-26 22:16:03 -Generating unique operation named: updateUsingDELETE_8
2019-03-26 22:16:03 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-26 22:16:03 -Generating unique operation named: updateUsingTRACE_8
2019-03-26 22:16:03 -Generating unique operation named: addUsingGET_12
2019-03-26 22:16:03 -Generating unique operation named: editUsingGET_13
2019-03-26 22:16:03 -Generating unique operation named: listUsingGET_14
2019-03-26 22:16:03 -Generating unique operation named: removeUsingPOST_24
2019-03-26 22:16:03 -Generating unique operation named: removeUsingPOST_25
2019-03-26 22:16:03 -Generating unique operation named: saveUsingPOST_12
2019-03-26 22:16:03 -Generating unique operation named: updateUsingGET_9
2019-03-26 22:16:03 -Generating unique operation named: updateUsingHEAD_9
2019-03-26 22:16:03 -Generating unique operation named: updateUsingPOST_13
2019-03-26 22:16:03 -Generating unique operation named: updateUsingPUT_9
2019-03-26 22:16:03 -Generating unique operation named: updateUsingPATCH_9
2019-03-26 22:16:03 -Generating unique operation named: updateUsingDELETE_9
2019-03-26 22:16:03 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-26 22:16:03 -Generating unique operation named: updateUsingTRACE_9
2019-03-26 22:16:03 -Generating unique operation named: addUsingGET_13
2019-03-26 22:16:03 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-26 22:16:03 -Generating unique operation named: editUsingGET_14
2019-03-26 22:16:03 -Generating unique operation named: listUsingGET_15
2019-03-26 22:16:03 -Generating unique operation named: saveUsingPOST_13
2019-03-26 22:16:03 -Generating unique operation named: saveUsingPOST_14
2019-03-26 22:16:03 -Generating unique operation named: updateUsingPOST_14
2019-03-26 22:16:03 -Generating unique operation named: listUsingGET_16
2019-03-26 22:16:03 -Generating unique operation named: listUsingHEAD_1
2019-03-26 22:16:03 -Generating unique operation named: listUsingPOST_1
2019-03-26 22:16:03 -Generating unique operation named: listUsingPUT_1
2019-03-26 22:16:03 -Generating unique operation named: listUsingPATCH_1
2019-03-26 22:16:03 -Generating unique operation named: listUsingDELETE_1
2019-03-26 22:16:03 -Generating unique operation named: listUsingOPTIONS_1
2019-03-26 22:16:03 -Generating unique operation named: listUsingTRACE_1
2019-03-26 22:16:03 -Generating unique operation named: addUsingGET_14
2019-03-26 22:16:03 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-26 22:16:03 -Generating unique operation named: editUsingGET_15
2019-03-26 22:16:03 -Generating unique operation named: listUsingGET_17
2019-03-26 22:16:03 -Generating unique operation named: removeUsingPOST_26
2019-03-26 22:16:03 -Generating unique operation named: saveUsingPOST_15
2019-03-26 22:16:03 -Generating unique operation named: treeUsingGET_3
2019-03-26 22:16:03 -Generating unique operation named: treeViewUsingGET_1
2019-03-26 22:16:03 -Generating unique operation named: updateUsingPOST_15
2019-03-26 22:16:03 -Generating unique operation named: addUsingGET_15
2019-03-26 22:16:03 -Generating unique operation named: editUsingGET_16
2019-03-26 22:16:03 -Generating unique operation named: exprotExcelUsingGET_5
2019-03-26 22:16:03 -Generating unique operation named: listUsingGET_18
2019-03-26 22:16:03 -Generating unique operation named: removeUsingPOST_27
2019-03-26 22:16:03 -Generating unique operation named: removeUsingPOST_28
2019-03-26 22:16:03 -Generating unique operation named: saveUsingPOST_16
2019-03-26 22:16:03 -Generating unique operation named: updateUsingGET_10
2019-03-26 22:16:03 -Generating unique operation named: updateUsingHEAD_10
2019-03-26 22:16:03 -Generating unique operation named: updateUsingPOST_16
2019-03-26 22:16:03 -Generating unique operation named: updateUsingPUT_10
2019-03-26 22:16:03 -Generating unique operation named: updateUsingPATCH_10
2019-03-26 22:16:03 -Generating unique operation named: updateUsingDELETE_10
2019-03-26 22:16:03 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-26 22:16:03 -Generating unique operation named: updateUsingTRACE_10
2019-03-26 22:16:03 -Generating unique operation named: exprotExcelUsingGET_6
2019-03-26 22:16:03 -Generating unique operation named: addUsingGET_16
2019-03-26 22:16:03 -Generating unique operation named: editUsingGET_17
2019-03-26 22:16:03 -Generating unique operation named: listUsingGET_19
2019-03-26 22:16:03 -Generating unique operation named: removeUsingPOST_29
2019-03-26 22:16:03 -Generating unique operation named: removeUsingPOST_30
2019-03-26 22:16:03 -Generating unique operation named: saveUsingPOST_17
2019-03-26 22:16:03 -Generating unique operation named: updateUsingGET_11
2019-03-26 22:16:03 -Generating unique operation named: updateUsingHEAD_11
2019-03-26 22:16:03 -Generating unique operation named: updateUsingPOST_17
2019-03-26 22:16:03 -Generating unique operation named: updateUsingPUT_11
2019-03-26 22:16:03 -Generating unique operation named: updateUsingPATCH_11
2019-03-26 22:16:03 -Generating unique operation named: updateUsingDELETE_11
2019-03-26 22:16:03 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-26 22:16:03 -Generating unique operation named: updateUsingTRACE_11
2019-03-26 22:16:03 -Generating unique operation named: addUsingGET_17
2019-03-26 22:16:03 -Generating unique operation named: editUsingGET_18
2019-03-26 22:16:03 -Generating unique operation named: listUsingGET_20
2019-03-26 22:16:03 -Generating unique operation named: removeUsingPOST_31
2019-03-26 22:16:03 -Generating unique operation named: removeUsingPOST_32
2019-03-26 22:16:03 -Generating unique operation named: saveUsingPOST_18
2019-03-26 22:16:04 -Generating unique operation named: updateUsingGET_12
2019-03-26 22:16:04 -Generating unique operation named: updateUsingHEAD_12
2019-03-26 22:16:04 -Generating unique operation named: updateUsingPOST_18
2019-03-26 22:16:04 -Generating unique operation named: updateUsingPUT_12
2019-03-26 22:16:04 -Generating unique operation named: updateUsingPATCH_12
2019-03-26 22:16:04 -Generating unique operation named: updateUsingDELETE_12
2019-03-26 22:16:04 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-26 22:16:04 -Generating unique operation named: updateUsingTRACE_12
2019-03-26 22:16:04 -Starting Quartz Scheduler now
2019-03-26 22:16:04 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-26 22:16:04 -Starting...
2019-03-26 22:16:04 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-26 22:16:04 -Started.
2019-03-26 22:16:04 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-26 22:16:04 -Using a shared selector for servlet write/read
2019-03-26 22:16:04 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-26 22:16:04 -Started BootdoApplication in 20.248 seconds (JVM running for 21.122)
2019-03-26 22:16:04 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-26 22:16:04 -==> Parameters: 
2019-03-26 22:16:04 -<==      Total: 1
2019-03-26 22:16:58 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-03-26 22:17:30 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-26 22:17:30 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-26 22:17:30 -FrameworkServlet 'dispatcherServlet': initialization completed in 89 ms
2019-03-26 22:17:30 -Enabling session validation scheduler...
2019-03-26 22:17:30 -请求地址 : http://localhost:8081/login;JSESSIONID=56ee5e94-b62e-42ce-b135-da701d9e58ca
2019-03-26 22:17:30 -HTTP METHOD : GET
2019-03-26 22:17:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-26 22:17:30 -参数 : [{}]
2019-03-26 22:17:30 -耗时 : 4
2019-03-26 22:17:30 -返回值 : login
2019-03-26 22:17:32 -请求地址 : http://localhost:8081/getVerify
2019-03-26 22:17:32 -HTTP METHOD : GET
2019-03-26 22:17:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-26 22:17:32 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@12b7fd7f, org.apache.shiro.web.servlet.ShiroHttpServletResponse@55f5f43d]
2019-03-26 22:17:36 -9193
2019-03-26 22:17:36 -耗时 : 4519
2019-03-26 22:17:36 -返回值 : null
2019-03-26 22:17:36 -请求地址 : http://localhost:8081/login
2019-03-26 22:17:36 -HTTP METHOD : GET
2019-03-26 22:17:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-26 22:17:36 -参数 : [{}]
2019-03-26 22:17:36 -耗时 : 1
2019-03-26 22:17:36 -返回值 : login
2019-03-26 22:17:41 -请求地址 : http://localhost:8081/login
2019-03-26 22:17:41 -HTTP METHOD : POST
2019-03-26 22:17:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-26 22:17:41 -参数 : [admin, 111111, 9193, org.apache.shiro.web.servlet.ShiroHttpServletRequest@181715a9]
2019-03-26 22:17:41 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-26 22:17:41 -==> Parameters: admin(String)
2019-03-26 22:17:41 -<==      Total: 1
2019-03-26 22:17:41 -耗时 : 234
2019-03-26 22:17:41 -返回值 : {msg=操作成功, code=0}
2019-03-26 22:17:42 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-03-26 22:17:42 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-26 22:17:42 -==> Parameters: 1(Long), admin(String), 登录(String), 234(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-26 22:17:42.116(Timestamp)
2019-03-26 22:17:42 -请求地址 : http://localhost:8081/index
2019-03-26 22:17:42 -HTTP METHOD : GET
2019-03-26 22:17:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-26 22:17:42 -参数 : [{}]
2019-03-26 22:17:42 -<==    Updates: 1
2019-03-26 22:17:42 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-26 22:17:42 -==> Parameters: 1(Long)
2019-03-26 22:17:42 -<==      Total: 46
2019-03-26 22:17:42 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-26 22:17:42 -==> Parameters: 138(Long)
2019-03-26 22:17:42 -<==      Total: 1
2019-03-26 22:17:42 -耗时 : 260
2019-03-26 22:17:42 -返回值 : index_v1
2019-03-26 22:17:42 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-26 22:17:42 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 260(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-26 22:17:42.596(Timestamp)
2019-03-26 22:17:42 -请求地址 : http://localhost:8081/main
2019-03-26 22:17:42 -HTTP METHOD : GET
2019-03-26 22:17:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-26 22:17:42 -参数 : []
2019-03-26 22:17:42 -耗时 : 0
2019-03-26 22:17:42 -返回值 : main
2019-03-26 22:17:42 -<==    Updates: 1
2019-03-26 22:17:43 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-26 22:17:43 -HTTP METHOD : GET
2019-03-26 22:17:43 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-26 22:17:43 -参数 : []
2019-03-26 22:17:43 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-26 22:17:43 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-26 22:17:43 -<==      Total: 0
2019-03-26 22:17:43 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-26 22:17:43 -==> Parameters: 1(Long), 0(String)
2019-03-26 22:17:43 -<==      Total: 1
2019-03-26 22:17:43 -耗时 : 52
2019-03-26 22:17:43 -返回值 : com.bootdo.common.utils.PageUtils@53d799d7
2019-03-26 22:17:43 -请求地址 : http://localhost:8081/main
2019-03-26 22:17:43 -HTTP METHOD : GET
2019-03-26 22:17:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-26 22:17:43 -参数 : []
2019-03-26 22:17:43 -耗时 : 1
2019-03-26 22:17:43 -返回值 : main
2019-03-26 22:17:52 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-26 22:17:52 -==> Parameters: 1(Long)
2019-03-26 22:17:52 -<==      Total: 90
2019-03-26 22:17:52 -请求地址 : http://localhost:8081/elec/elec
2019-03-26 22:17:52 -HTTP METHOD : GET
2019-03-26 22:17:52 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-26 22:17:52 -参数 : []
2019-03-26 22:17:52 -耗时 : 1
2019-03-26 22:17:52 -返回值 : elec/elec/elec
2019-03-26 22:17:53 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-26 22:17:53 -HTTP METHOD : GET
2019-03-26 22:17:53 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-26 22:17:53 -参数 : [userType]
2019-03-26 22:17:53 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-26 22:17:53 -==> Parameters: userType(String)
2019-03-26 22:17:53 -<==      Total: 2
2019-03-26 22:17:53 -耗时 : 21
2019-03-26 22:17:53 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-26 22:17:54 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-26 22:17:54 -HTTP METHOD : GET
2019-03-26 22:17:54 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-26 22:17:54 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@78c20702]
2019-03-26 22:17:54 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-26 22:17:54 -==> Parameters: 0(Integer), 10(Integer)
2019-03-26 22:17:54 -<==      Total: 10
2019-03-26 22:17:54 -==>  Preparing: select count(*) from elec 
2019-03-26 22:17:54 -==> Parameters: 
2019-03-26 22:17:54 -<==      Total: 1
2019-03-26 22:17:54 -耗时 : 82
2019-03-26 22:17:54 -返回值 : com.bootdo.common.utils.PageUtils@5739a9d5
2019-03-26 22:17:58 -请求地址 : http://localhost:8081/elec/elec/edit/2
2019-03-26 22:17:58 -HTTP METHOD : GET
2019-03-26 22:17:58 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.edit
2019-03-26 22:17:58 -参数 : [2, {}]
2019-03-26 22:17:59 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec where id = ? 
2019-03-26 22:17:59 -==> Parameters: 2(Long)
2019-03-26 22:17:59 -<==      Total: 1
2019-03-26 22:17:59 -耗时 : 7
2019-03-26 22:17:59 -返回值 : elec/elec/edit
2019-03-26 22:17:59 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-26 22:17:59 -HTTP METHOD : GET
2019-03-26 22:17:59 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-26 22:17:59 -参数 : [userType]
2019-03-26 22:17:59 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-26 22:17:59 -==> Parameters: userType(String)
2019-03-26 22:17:59 -<==      Total: 2
2019-03-26 22:17:59 -耗时 : 6
2019-03-26 22:17:59 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-26 22:17:59 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-03-26 22:17:59 -HTTP METHOD : GET
2019-03-26 22:17:59 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-26 22:17:59 -参数 : [userState]
2019-03-26 22:17:59 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-26 22:17:59 -==> Parameters: userState(String)
2019-03-26 22:17:59 -<==      Total: 2
2019-03-26 22:17:59 -耗时 : 7
2019-03-26 22:17:59 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-26 22:17:59 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-03-26 22:17:59 -HTTP METHOD : GET
2019-03-26 22:17:59 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-26 22:17:59 -参数 : [elecType]
2019-03-26 22:17:59 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-26 22:17:59 -==> Parameters: elecType(String)
2019-03-26 22:17:59 -<==      Total: 2
2019-03-26 22:17:59 -耗时 : 18
2019-03-26 22:17:59 -返回值 : [DictDO{id=139, name='民用电', value='1', type='elecType', description='电量性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='商业电', value='0', type='elecType', description='电量类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-26 22:18:08 -请求地址 : http://localhost:8081/elec/elec/update
2019-03-26 22:18:08 -HTTP METHOD : POST
2019-03-26 22:18:08 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.update
2019-03-26 22:18:08 -参数 : [com.bootdo.elec.domain.ElecDO@4dcf422e]
2019-03-26 22:18:08 -==>  Preparing: update elec SET and id = ? and user_id = ? and user_name = ? and user_type = ? and user_org = ? and user_tell = ? and user_state = ? and wages_id = ? and elec_type = ? and start = ? and end = ? and hu = ? and elec_amount = ? and elec_cost = ? and elec_sum = ? and CREATE_TIME = ? and create_by = ? and update_time = ? and update_by = ? where id = ? 
2019-03-26 22:18:08 -Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]
2019-03-26 22:18:08 -SQLErrorCodes loaded: [DB2, Derby, H2, HDB, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase]
2019-03-26 22:18:08 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-26 22:18:08 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/elec/elec/update(String), org.springframework.jdbc.UncategorizedSQLException: 
### Error updating database.  Cause: java.sql.SQLException: sql injection violation, syntax error: ERROR. token : AND, pos : 23 : update elec 
		 SET and id = ? 
	   and user_id = ? 
	   and user_name = ? 
	   and user_type = ? 
	   and user_org = ? 
	   and user_tell = ? 
	   and user_state = ? 
	   and wages_id = ? 
	   and elec_type = ? 
	  
	   and start = ?
	   and end = ? 
	   and hu = ?
	   and elec_amount = ? 
	   and elec_cost = ? 
	   and elec_sum = ? 
	   and CREATE_TIME = ?  
	   and create_by = ? 
	   and update_time = ? 
	   and update_by = ? 
		where id = ?
### SQL: update elec     SET and id = ?      and user_id = ?      and user_name = ?      and user_type = ?      and user_org = ?      and user_tell = ?      and user_state = ?      and wages_id = ?      and elec_type = ?          and start = ?     and end = ?      and hu = ?     and elec_amount = ?      and elec_cost = ?      and elec_sum = ?      and CREATE_TIME = ?       and create_by = ?      and update_time = ?      and update_by = ?    where id = ?
### Cause: java.sql.SQLException: sql injection violation, syntax error: ERROR. token : AND, pos : 23 : update elec 
		 SET and id = ? 
	   and user_id = ? 
	   and user_name = ? 
	   and user_type = ? 
	   and user_org = ? 
	   and user_tell = ? 
	   and user_state = ? 
	   and wages_id = ? 
	   and elec_type = ? 
	  
	   and start = ?
	   and end = ? 
	   and hu = ?
	   and elec_amount = ? 
	   and elec_cost = ? 
	   and elec_sum = ? 
	   and CREATE_TIME = ?  
	   and create_by = ? 
	   and update_time = ? 
	   and update_by = ? 
		where id = ?
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, syntax error: ERROR. token : AND, pos : 23 : update elec 
		 SET and id = ? 
	   and user_id = ? 
	   and user_name = ? 
	   and user_type = ? 
	   and user_org = ? 
	   and user_tell = ? 
	   and user_state = ? 
	   and wages_id = ? 
	   and elec_type = ? 
	  
	   and start = ?
	   and end = ? 
	   and hu = ?
	   and elec_amount = ? 
	   and elec_cost = ? 
	   and elec_sum = ? 
	   and CREATE_TIME = ?  
	   and create_by = ? 
	   and update_time = ? 
	   and update_by = ? 
		where id = ?; nested exception is java.sql.SQLException: sql injection violation, syntax error: ERROR. token : AND, pos : 23 : update elec 
		 SET and id = ? 
	   and user_id = ? 
	   and user_name = ? 
	   and user_type = ? 
	   and user_org = ? 
	   and user_tell = ? 
	   and user_state = ? 
	   and wages_id = ? 
	   and elec_type = ? 
	  
	   and start = ?
	   and end = ? 
	   and hu = ?
	   and elec_amount = ? 
	   and elec_cost = ? 
	   and elec_sum = ? 
	   and CREATE_TIME = ?  
	   and create_by = ? 
	   and update_time = ? 
	   and update_by = ? 
		where id = ?(String), null, 2019-03-26 22:18:08.262(Timestamp)
2019-03-26 22:18:08 -
### Error updating database.  Cause: java.sql.SQLException: sql injection violation, syntax error: ERROR. token : AND, pos : 23 : update elec 
		 SET and id = ? 
	   and user_id = ? 
	   and user_name = ? 
	   and user_type = ? 
	   and user_org = ? 
	   and user_tell = ? 
	   and user_state = ? 
	   and wages_id = ? 
	   and elec_type = ? 
	  
	   and start = ?
	   and end = ? 
	   and hu = ?
	   and elec_amount = ? 
	   and elec_cost = ? 
	   and elec_sum = ? 
	   and CREATE_TIME = ?  
	   and create_by = ? 
	   and update_time = ? 
	   and update_by = ? 
		where id = ?
### SQL: update elec     SET and id = ?      and user_id = ?      and user_name = ?      and user_type = ?      and user_org = ?      and user_tell = ?      and user_state = ?      and wages_id = ?      and elec_type = ?          and start = ?     and end = ?      and hu = ?     and elec_amount = ?      and elec_cost = ?      and elec_sum = ?      and CREATE_TIME = ?       and create_by = ?      and update_time = ?      and update_by = ?    where id = ?
### Cause: java.sql.SQLException: sql injection violation, syntax error: ERROR. token : AND, pos : 23 : update elec 
		 SET and id = ? 
	   and user_id = ? 
	   and user_name = ? 
	   and user_type = ? 
	   and user_org = ? 
	   and user_tell = ? 
	   and user_state = ? 
	   and wages_id = ? 
	   and elec_type = ? 
	  
	   and start = ?
	   and end = ? 
	   and hu = ?
	   and elec_amount = ? 
	   and elec_cost = ? 
	   and elec_sum = ? 
	   and CREATE_TIME = ?  
	   and create_by = ? 
	   and update_time = ? 
	   and update_by = ? 
		where id = ?
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, syntax error: ERROR. token : AND, pos : 23 : update elec 
		 SET and id = ? 
	   and user_id = ? 
	   and user_name = ? 
	   and user_type = ? 
	   and user_org = ? 
	   and user_tell = ? 
	   and user_state = ? 
	   and wages_id = ? 
	   and elec_type = ? 
	  
	   and start = ?
	   and end = ? 
	   and hu = ?
	   and elec_amount = ? 
	   and elec_cost = ? 
	   and elec_sum = ? 
	   and CREATE_TIME = ?  
	   and create_by = ? 
	   and update_time = ? 
	   and update_by = ? 
		where id = ?; nested exception is java.sql.SQLException: sql injection violation, syntax error: ERROR. token : AND, pos : 23 : update elec 
		 SET and id = ? 
	   and user_id = ? 
	   and user_name = ? 
	   and user_type = ? 
	   and user_org = ? 
	   and user_tell = ? 
	   and user_state = ? 
	   and wages_id = ? 
	   and elec_type = ? 
	  
	   and start = ?
	   and end = ? 
	   and hu = ?
	   and elec_amount = ? 
	   and elec_cost = ? 
	   and elec_sum = ? 
	   and CREATE_TIME = ?  
	   and create_by = ? 
	   and update_time = ? 
	   and update_by = ? 
		where id = ?
org.springframework.jdbc.UncategorizedSQLException: 
### Error updating database.  Cause: java.sql.SQLException: sql injection violation, syntax error: ERROR. token : AND, pos : 23 : update elec 
		 SET and id = ? 
	   and user_id = ? 
	   and user_name = ? 
	   and user_type = ? 
	   and user_org = ? 
	   and user_tell = ? 
	   and user_state = ? 
	   and wages_id = ? 
	   and elec_type = ? 
	  
	   and start = ?
	   and end = ? 
	   and hu = ?
	   and elec_amount = ? 
	   and elec_cost = ? 
	   and elec_sum = ? 
	   and CREATE_TIME = ?  
	   and create_by = ? 
	   and update_time = ? 
	   and update_by = ? 
		where id = ?
### SQL: update elec     SET and id = ?      and user_id = ?      and user_name = ?      and user_type = ?      and user_org = ?      and user_tell = ?      and user_state = ?      and wages_id = ?      and elec_type = ?          and start = ?     and end = ?      and hu = ?     and elec_amount = ?      and elec_cost = ?      and elec_sum = ?      and CREATE_TIME = ?       and create_by = ?      and update_time = ?      and update_by = ?    where id = ?
### Cause: java.sql.SQLException: sql injection violation, syntax error: ERROR. token : AND, pos : 23 : update elec 
		 SET and id = ? 
	   and user_id = ? 
	   and user_name = ? 
	   and user_type = ? 
	   and user_org = ? 
	   and user_tell = ? 
	   and user_state = ? 
	   and wages_id = ? 
	   and elec_type = ? 
	  
	   and start = ?
	   and end = ? 
	   and hu = ?
	   and elec_amount = ? 
	   and elec_cost = ? 
	   and elec_sum = ? 
	   and CREATE_TIME = ?  
	   and create_by = ? 
	   and update_time = ? 
	   and update_by = ? 
		where id = ?
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, syntax error: ERROR. token : AND, pos : 23 : update elec 
		 SET and id = ? 
	   and user_id = ? 
	   and user_name = ? 
	   and user_type = ? 
	   and user_org = ? 
	   and user_tell = ? 
	   and user_state = ? 
	   and wages_id = ? 
	   and elec_type = ? 
	  
	   and start = ?
	   and end = ? 
	   and hu = ?
	   and elec_amount = ? 
	   and elec_cost = ? 
	   and elec_sum = ? 
	   and CREATE_TIME = ?  
	   and create_by = ? 
	   and update_time = ? 
	   and update_by = ? 
		where id = ?; nested exception is java.sql.SQLException: sql injection violation, syntax error: ERROR. token : AND, pos : 23 : update elec 
		 SET and id = ? 
	   and user_id = ? 
	   and user_name = ? 
	   and user_type = ? 
	   and user_org = ? 
	   and user_tell = ? 
	   and user_state = ? 
	   and wages_id = ? 
	   and elec_type = ? 
	  
	   and start = ?
	   and end = ? 
	   and hu = ?
	   and elec_amount = ? 
	   and elec_cost = ? 
	   and elec_sum = ? 
	   and CREATE_TIME = ?  
	   and create_by = ? 
	   and update_time = ? 
	   and update_by = ? 
		where id = ?
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:89)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:295)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy119.update(Unknown Source)
	at com.bootdo.elec.service.impl.ElecServiceImpl.update(ElecServiceImpl.java:47)
	at com.bootdo.elec.controller.ElecController.update(ElecController.java:218)
	at com.bootdo.elec.controller.ElecController$$FastClassBySpringCGLIB$$b8b2b2ee.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.elec.controller.ElecController$$EnhancerBySpringCGLIB$$77c0e397.update(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.sql.SQLException: sql injection violation, syntax error: ERROR. token : AND, pos : 23 : update elec 
		 SET and id = ? 
	   and user_id = ? 
	   and user_name = ? 
	   and user_type = ? 
	   and user_org = ? 
	   and user_tell = ? 
	   and user_state = ? 
	   and wages_id = ? 
	   and elec_type = ? 
	  
	   and start = ?
	   and end = ? 
	   and hu = ?
	   and elec_amount = ? 
	   and elec_cost = ? 
	   and elec_sum = ? 
	   and CREATE_TIME = ?  
	   and create_by = ? 
	   and update_time = ? 
	   and update_by = ? 
		where id = ?
	at com.alibaba.druid.wall.WallFilter.check(WallFilter.java:725)
	at com.alibaba.druid.wall.WallFilter.connection_prepareStatement(WallFilter.java:253)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:448)
	at com.alibaba.druid.filter.FilterAdapter.connection_prepareStatement(FilterAdapter.java:928)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_prepareStatement(FilterEventAdapter.java:122)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:448)
	at com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl.prepareStatement(ConnectionProxyImpl.java:342)
	at com.alibaba.druid.pool.DruidPooledConnection.prepareStatement(DruidPooledConnection.java:331)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.ConnectionLogger.invoke(ConnectionLogger.java:55)
	at com.sun.proxy.$Proxy171.prepareStatement(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.instantiateStatement(PreparedStatementHandler.java:87)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.prepare(BaseStatementHandler.java:88)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.prepare(RoutingStatementHandler.java:59)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:85)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:49)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 104 common frames omitted
Caused by: com.alibaba.druid.sql.parser.ParserException: ERROR. token : AND, pos : 23
	at com.alibaba.druid.sql.parser.SQLExprParser.primary(SQLExprParser.java:600)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlExprParser.primary(MySqlExprParser.java:172)
	at com.alibaba.druid.sql.parser.SQLExprParser.parseUpdateSetItem(SQLExprParser.java:1236)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlSelectParser.parseUpdateStatment(MySqlSelectParser.java:291)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlStatementParser.parseUpdateStatement(MySqlStatementParser.java:257)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:119)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:79)
	at com.alibaba.druid.wall.WallProvider.checkInternal(WallProvider.java:620)
	at com.alibaba.druid.wall.WallProvider.check(WallProvider.java:574)
	at com.alibaba.druid.wall.WallFilter.check(WallFilter.java:712)
	... 130 common frames omitted
2019-03-26 22:18:08 -<==    Updates: 1
2019-03-26 22:25:48 -Starting BootdoApplication on ZJZL-20180906VX with PID 8284 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-26 22:25:48 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-26 22:25:48 -The following profiles are active: dev
2019-03-26 22:25:48 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1643d68f: startup date [Tue Mar 26 22:25:48 CST 2019]; root of context hierarchy
2019-03-26 22:25:54 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-26 22:25:56 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$9246d84a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 22:25:57 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$84a006f1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 22:25:57 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 22:25:58 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 22:25:58 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 22:25:58 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-26 22:25:58 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-26 22:25:58 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 22:25:58 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 22:25:58 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 22:25:59 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-26 22:26:00 -Tomcat initialized with port(s): 8081 (http)
2019-03-26 22:26:00 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-26 22:26:00 -Starting service [Tomcat]
2019-03-26 22:26:00 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-26 22:26:00 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-26 22:26:00 -Initializing Spring embedded WebApplicationContext
2019-03-26 22:26:00 -Root WebApplicationContext: initialization completed in 11891 ms
2019-03-26 22:26:01 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-26 22:26:01 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-26 22:26:01 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-26 22:26:01 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-26 22:26:01 -Filter xssFilter was not registered (disabled)
2019-03-26 22:26:01 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-26 22:26:01 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-26 22:26:01 -Servlet statViewServlet mapped to [/druid/*]
2019-03-26 22:26:01 -Servlet dispatcherServlet mapped to [/]
2019-03-26 22:26:04 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1643d68f: startup date [Tue Mar 26 22:25:48 CST 2019]; root of context hierarchy
2019-03-26 22:26:05 -Using default implementation for ThreadExecutor
2019-03-26 22:26:05 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-26 22:26:05 -Quartz Scheduler v.2.2.1 created.
2019-03-26 22:26:05 -RAMJobStore initialized.
2019-03-26 22:26:05 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-26 22:26:05 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-26 22:26:05 -Quartz scheduler version: 2.2.1
2019-03-26 22:26:05 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@4cfe9594
2019-03-26 22:26:06 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-26 22:26:06 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-26 22:26:09 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-26 22:26:09 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-26 22:26:09 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-03-26 22:26:09 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-26 22:26:09 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-26 22:26:09 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-26 22:26:09 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-26 22:26:09 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-26 22:26:09 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-26 22:26:09 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-26 22:26:09 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-26 22:26:09 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 22:26:09 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-26 22:26:09 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-26 22:26:09 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-26 22:26:09 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-26 22:26:09 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 22:26:09 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-26 22:26:09 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-26 22:26:09 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-26 22:26:09 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-26 22:26:09 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-26 22:26:09 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 22:26:09 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-26 22:26:09 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-26 22:26:09 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 22:26:09 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-26 22:26:09 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-26 22:26:09 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 22:26:09 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-26 22:26:09 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-26 22:26:09 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-26 22:26:09 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-26 22:26:09 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-26 22:26:09 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-26 22:26:09 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-26 22:26:09 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-26 22:26:09 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-26 22:26:09 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 22:26:09 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-26 22:26:09 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-26 22:26:09 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 22:26:09 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-26 22:26:09 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-26 22:26:09 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-26 22:26:09 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-26 22:26:09 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 22:26:09 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-26 22:26:09 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-03-26 22:26:09 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-26 22:26:09 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-26 22:26:09 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-26 22:26:09 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-26 22:26:09 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-26 22:26:09 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-26 22:26:09 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-26 22:26:09 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-26 22:26:09 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-26 22:26:09 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 22:26:09 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-26 22:26:09 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-26 22:26:09 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-26 22:26:09 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-26 22:26:09 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-03-26 22:26:09 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-26 22:26:09 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-26 22:26:09 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-26 22:26:09 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-26 22:26:09 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 22:26:09 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-03-26 22:26:09 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 22:26:09 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-26 22:26:09 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-26 22:26:09 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-26 22:26:09 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-26 22:26:09 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-26 22:26:09 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-26 22:26:09 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-26 22:26:09 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 22:26:09 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-26 22:26:09 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-26 22:26:09 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-26 22:26:09 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-26 22:26:09 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-26 22:26:09 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-26 22:26:09 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-26 22:26:09 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-26 22:26:09 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-26 22:26:09 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-26 22:26:09 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 22:26:09 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-26 22:26:09 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 22:26:09 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-26 22:26:09 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-26 22:26:09 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-03-26 22:26:09 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-26 22:26:09 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-03-26 22:26:09 -Mapped "{[/moneyList/moneyList/UserList],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-26 22:26:09 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-26 22:26:09 -Mapped "{[/moneyList/moneyList/LikeName],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.LikeName(org.springframework.ui.Model)
2019-03-26 22:26:10 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-26 22:26:10 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-26 22:26:10 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-26 22:26:10 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-26 22:26:10 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 22:26:10 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-26 22:26:10 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 22:26:10 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-26 22:26:10 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-26 22:26:10 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-26 22:26:10 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-26 22:26:10 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-26 22:26:10 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-26 22:26:10 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 22:26:10 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-26 22:26:10 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 22:26:10 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-26 22:26:10 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-26 22:26:10 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-26 22:26:10 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-26 22:26:10 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-26 22:26:10 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-26 22:26:10 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 22:26:10 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-26 22:26:10 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 22:26:10 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-26 22:26:10 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-26 22:26:10 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-26 22:26:10 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-26 22:26:10 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-26 22:26:10 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-26 22:26:10 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-26 22:26:10 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 22:26:10 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-26 22:26:10 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-26 22:26:10 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 22:26:10 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-26 22:26:10 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-26 22:26:10 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 22:26:10 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-26 22:26:10 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-26 22:26:10 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-26 22:26:10 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-26 22:26:10 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 22:26:10 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-26 22:26:10 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 22:26:10 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-26 22:26:10 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-26 22:26:10 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 22:26:10 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-26 22:26:10 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-26 22:26:10 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-26 22:26:10 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-26 22:26:10 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-26 22:26:10 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-26 22:26:10 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-26 22:26:10 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 22:26:10 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-26 22:26:10 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-26 22:26:10 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-26 22:26:10 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-26 22:26:10 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-26 22:26:10 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-26 22:26:10 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-26 22:26:10 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-26 22:26:10 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-26 22:26:10 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-26 22:26:10 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-26 22:26:10 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-26 22:26:10 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 22:26:10 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-26 22:26:10 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-26 22:26:10 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-26 22:26:10 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-26 22:26:10 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-26 22:26:10 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-26 22:26:10 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-26 22:26:10 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-26 22:26:10 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-26 22:26:10 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-26 22:26:10 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-26 22:26:10 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-26 22:26:10 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 22:26:10 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-26 22:26:10 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-26 22:26:10 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-26 22:26:10 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-26 22:26:10 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 22:26:10 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-26 22:26:10 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-26 22:26:10 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-26 22:26:10 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 22:26:10 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-26 22:26:10 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-26 22:26:10 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-26 22:26:10 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-26 22:26:10 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-26 22:26:10 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-26 22:26:10 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-26 22:26:10 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-26 22:26:10 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-26 22:26:10 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-26 22:26:10 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-26 22:26:10 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-26 22:26:10 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-26 22:26:10 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-26 22:26:10 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-26 22:26:10 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-26 22:26:10 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-26 22:26:10 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 22:26:10 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-26 22:26:10 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 22:26:10 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-26 22:26:10 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-26 22:26:10 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 22:26:10 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-26 22:26:10 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-26 22:26:10 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-26 22:26:10 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-26 22:26:10 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-26 22:26:10 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-26 22:26:10 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-26 22:26:10 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-26 22:26:10 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-26 22:26:10 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-26 22:26:10 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-26 22:26:10 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-03-26 22:26:10 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-26 22:26:10 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-03-26 22:26:10 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-26 22:26:10 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-26 22:26:10 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-26 22:26:10 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-26 22:26:10 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-26 22:26:10 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-26 22:26:10 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-26 22:26:11 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-26 22:26:12 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1643d68f: startup date [Tue Mar 26 22:25:48 CST 2019]; root of context hierarchy
2019-03-26 22:26:12 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-26 22:26:12 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-26 22:26:12 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-26 22:26:12 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-26 22:26:12 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-26 22:26:15 -Registering beans for JMX exposure on startup
2019-03-26 22:26:15 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-26 22:26:15 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-26 22:26:15 -Starting beans in phase 2147483647
2019-03-26 22:26:15 -Context refreshed
2019-03-26 22:26:15 -Found 1 custom documentation plugin(s)
2019-03-26 22:26:15 -Scanning for api listing references
2019-03-26 22:26:15 -Generating unique operation named: removeUsingPOST_1
2019-03-26 22:26:16 -Generating unique operation named: addUsingGET_1
2019-03-26 22:26:16 -Generating unique operation named: editUsingGET_1
2019-03-26 22:26:16 -Generating unique operation named: listUsingGET_1
2019-03-26 22:26:16 -Generating unique operation named: removeUsingPOST_2
2019-03-26 22:26:16 -Generating unique operation named: removeUsingPOST_3
2019-03-26 22:26:16 -Generating unique operation named: saveUsingPOST_1
2019-03-26 22:26:16 -Generating unique operation named: updateUsingGET_1
2019-03-26 22:26:16 -Generating unique operation named: updateUsingHEAD_1
2019-03-26 22:26:16 -Generating unique operation named: updateUsingPOST_1
2019-03-26 22:26:16 -Generating unique operation named: updateUsingPUT_1
2019-03-26 22:26:16 -Generating unique operation named: updateUsingPATCH_1
2019-03-26 22:26:16 -Generating unique operation named: updateUsingDELETE_1
2019-03-26 22:26:16 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-26 22:26:16 -Generating unique operation named: updateUsingTRACE_1
2019-03-26 22:26:16 -Generating unique operation named: addUsingGET_2
2019-03-26 22:26:16 -Generating unique operation named: editUsingGET_2
2019-03-26 22:26:16 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-26 22:26:16 -Generating unique operation named: listUsingGET_2
2019-03-26 22:26:16 -Generating unique operation named: removeUsingPOST_4
2019-03-26 22:26:16 -Generating unique operation named: removeUsingPOST_5
2019-03-26 22:26:16 -Generating unique operation named: saveUsingPOST_2
2019-03-26 22:26:16 -Generating unique operation named: updateUsingPOST_2
2019-03-26 22:26:16 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-26 22:26:16 -Generating unique operation named: addUsingGET_3
2019-03-26 22:26:16 -Generating unique operation named: editUsingGET_3
2019-03-26 22:26:16 -Generating unique operation named: listUsingGET_3
2019-03-26 22:26:16 -Generating unique operation named: removeUsingPOST_6
2019-03-26 22:26:16 -Generating unique operation named: removeUsingPOST_7
2019-03-26 22:26:16 -Generating unique operation named: saveUsingPOST_3
2019-03-26 22:26:16 -Generating unique operation named: updateUsingGET_2
2019-03-26 22:26:16 -Generating unique operation named: updateUsingHEAD_2
2019-03-26 22:26:16 -Generating unique operation named: updateUsingPOST_3
2019-03-26 22:26:16 -Generating unique operation named: updateUsingPUT_2
2019-03-26 22:26:16 -Generating unique operation named: updateUsingPATCH_2
2019-03-26 22:26:16 -Generating unique operation named: updateUsingDELETE_2
2019-03-26 22:26:16 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-26 22:26:16 -Generating unique operation named: updateUsingTRACE_2
2019-03-26 22:26:16 -Generating unique operation named: addUsingGET_4
2019-03-26 22:26:16 -Generating unique operation named: editUsingGET_4
2019-03-26 22:26:16 -Generating unique operation named: listUsingGET_4
2019-03-26 22:26:16 -Generating unique operation named: removeUsingPOST_8
2019-03-26 22:26:16 -Generating unique operation named: removeUsingPOST_9
2019-03-26 22:26:16 -Generating unique operation named: saveUsingPOST_4
2019-03-26 22:26:16 -Generating unique operation named: updateUsingGET_3
2019-03-26 22:26:16 -Generating unique operation named: updateUsingHEAD_3
2019-03-26 22:26:16 -Generating unique operation named: updateUsingPOST_4
2019-03-26 22:26:16 -Generating unique operation named: updateUsingPUT_3
2019-03-26 22:26:16 -Generating unique operation named: updateUsingPATCH_3
2019-03-26 22:26:16 -Generating unique operation named: updateUsingDELETE_3
2019-03-26 22:26:16 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-26 22:26:16 -Generating unique operation named: updateUsingTRACE_3
2019-03-26 22:26:16 -Generating unique operation named: ElecUsingGET_1
2019-03-26 22:26:16 -Generating unique operation named: addUsingGET_5
2019-03-26 22:26:16 -Generating unique operation named: editUsingGET_5
2019-03-26 22:26:16 -Generating unique operation named: listUsingGET_5
2019-03-26 22:26:16 -Generating unique operation named: removeUsingPOST_10
2019-03-26 22:26:16 -Generating unique operation named: removeUsingPOST_11
2019-03-26 22:26:16 -Generating unique operation named: saveUsingPOST_5
2019-03-26 22:26:16 -Generating unique operation named: updateUsingGET_4
2019-03-26 22:26:16 -Generating unique operation named: updateUsingHEAD_4
2019-03-26 22:26:16 -Generating unique operation named: updateUsingPOST_5
2019-03-26 22:26:16 -Generating unique operation named: updateUsingPUT_4
2019-03-26 22:26:17 -Generating unique operation named: updateUsingPATCH_4
2019-03-26 22:26:17 -Generating unique operation named: updateUsingDELETE_4
2019-03-26 22:26:17 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-26 22:26:17 -Generating unique operation named: updateUsingTRACE_4
2019-03-26 22:26:17 -Generating unique operation named: editUsingGET_6
2019-03-26 22:26:17 -Generating unique operation named: listUsingGET_6
2019-03-26 22:26:17 -Generating unique operation named: updateUsingPOST_6
2019-03-26 22:26:17 -Generating unique operation named: addUsingGET_6
2019-03-26 22:26:17 -Generating unique operation named: editUsingGET_7
2019-03-26 22:26:17 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-26 22:26:17 -Generating unique operation named: listUsingGET_7
2019-03-26 22:26:17 -Generating unique operation named: removeUsingPOST_12
2019-03-26 22:26:17 -Generating unique operation named: removeUsingPOST_13
2019-03-26 22:26:17 -Generating unique operation named: saveUsingPOST_6
2019-03-26 22:26:17 -Generating unique operation named: updateUsingGET_5
2019-03-26 22:26:17 -Generating unique operation named: updateUsingHEAD_5
2019-03-26 22:26:17 -Generating unique operation named: updateUsingPOST_7
2019-03-26 22:26:17 -Generating unique operation named: updateUsingPUT_5
2019-03-26 22:26:17 -Generating unique operation named: updateUsingPATCH_5
2019-03-26 22:26:17 -Generating unique operation named: updateUsingDELETE_5
2019-03-26 22:26:17 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-26 22:26:17 -Generating unique operation named: updateUsingTRACE_5
2019-03-26 22:26:17 -Generating unique operation named: exprotExcelUsingGET_4
2019-03-26 22:26:17 -Generating unique operation named: addUsingGET_7
2019-03-26 22:26:17 -Generating unique operation named: editUsingGET_8
2019-03-26 22:26:17 -Generating unique operation named: listUsingGET_8
2019-03-26 22:26:17 -Generating unique operation named: removeUsingPOST_14
2019-03-26 22:26:17 -Generating unique operation named: removeUsingPOST_15
2019-03-26 22:26:17 -Generating unique operation named: saveUsingPOST_7
2019-03-26 22:26:17 -Generating unique operation named: updateUsingGET_6
2019-03-26 22:26:17 -Generating unique operation named: updateUsingHEAD_6
2019-03-26 22:26:17 -Generating unique operation named: updateUsingPOST_8
2019-03-26 22:26:17 -Generating unique operation named: updateUsingPUT_6
2019-03-26 22:26:17 -Generating unique operation named: updateUsingPATCH_6
2019-03-26 22:26:17 -Generating unique operation named: updateUsingDELETE_6
2019-03-26 22:26:17 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-26 22:26:17 -Generating unique operation named: updateUsingTRACE_6
2019-03-26 22:26:17 -Generating unique operation named: addUsingGET_8
2019-03-26 22:26:17 -Generating unique operation named: editUsingGET_9
2019-03-26 22:26:17 -Generating unique operation named: listUsingGET_9
2019-03-26 22:26:17 -Generating unique operation named: removeUsingPOST_16
2019-03-26 22:26:17 -Generating unique operation named: removeUsingPOST_17
2019-03-26 22:26:17 -Generating unique operation named: saveUsingPOST_8
2019-03-26 22:26:17 -Generating unique operation named: updateUsingGET_7
2019-03-26 22:26:17 -Generating unique operation named: updateUsingHEAD_7
2019-03-26 22:26:17 -Generating unique operation named: updateUsingPOST_9
2019-03-26 22:26:17 -Generating unique operation named: updateUsingPUT_7
2019-03-26 22:26:17 -Generating unique operation named: updateUsingPATCH_7
2019-03-26 22:26:17 -Generating unique operation named: updateUsingDELETE_7
2019-03-26 22:26:17 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-26 22:26:17 -Generating unique operation named: updateUsingTRACE_7
2019-03-26 22:26:17 -Generating unique operation named: addUsingGET_9
2019-03-26 22:26:17 -Generating unique operation named: editUsingGET_10
2019-03-26 22:26:17 -Generating unique operation named: infoUsingGET_1
2019-03-26 22:26:17 -Generating unique operation named: infoUsingHEAD_1
2019-03-26 22:26:17 -Generating unique operation named: infoUsingPOST_1
2019-03-26 22:26:17 -Generating unique operation named: infoUsingPUT_1
2019-03-26 22:26:17 -Generating unique operation named: infoUsingPATCH_1
2019-03-26 22:26:17 -Generating unique operation named: infoUsingDELETE_1
2019-03-26 22:26:17 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-26 22:26:17 -Generating unique operation named: infoUsingTRACE_1
2019-03-26 22:26:17 -Generating unique operation named: listUsingGET_10
2019-03-26 22:26:17 -Generating unique operation named: removeUsingPOST_18
2019-03-26 22:26:17 -Generating unique operation named: removeUsingPOST_19
2019-03-26 22:26:17 -Generating unique operation named: saveUsingPOST_9
2019-03-26 22:26:17 -Generating unique operation named: updateUsingPOST_10
2019-03-26 22:26:17 -Generating unique operation named: listUsingGET_11
2019-03-26 22:26:17 -Generating unique operation named: removeUsingPOST_20
2019-03-26 22:26:17 -Generating unique operation named: welcomeUsingGET_1
2019-03-26 22:26:17 -Generating unique operation named: addUsingGET_10
2019-03-26 22:26:17 -Generating unique operation named: editUsingGET_11
2019-03-26 22:26:17 -Generating unique operation named: listUsingGET_12
2019-03-26 22:26:17 -Generating unique operation named: removeUsingPOST_21
2019-03-26 22:26:17 -Generating unique operation named: saveUsingPOST_10
2019-03-26 22:26:17 -Generating unique operation named: treeUsingGET_1
2019-03-26 22:26:17 -Generating unique operation named: treeUsingGET_2
2019-03-26 22:26:17 -Generating unique operation named: updateUsingPOST_11
2019-03-26 22:26:17 -Generating unique operation named: addUsingGET_11
2019-03-26 22:26:17 -Generating unique operation named: editUsingGET_12
2019-03-26 22:26:17 -Generating unique operation named: listUsingGET_13
2019-03-26 22:26:17 -Generating unique operation named: removeUsingPOST_22
2019-03-26 22:26:17 -Generating unique operation named: removeUsingPOST_23
2019-03-26 22:26:17 -Generating unique operation named: saveUsingPOST_11
2019-03-26 22:26:18 -Generating unique operation named: updateUsingGET_8
2019-03-26 22:26:18 -Generating unique operation named: updateUsingHEAD_8
2019-03-26 22:26:18 -Generating unique operation named: updateUsingPOST_12
2019-03-26 22:26:18 -Generating unique operation named: updateUsingPUT_8
2019-03-26 22:26:18 -Generating unique operation named: updateUsingPATCH_8
2019-03-26 22:26:18 -Generating unique operation named: updateUsingDELETE_8
2019-03-26 22:26:18 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-26 22:26:18 -Generating unique operation named: updateUsingTRACE_8
2019-03-26 22:26:18 -Generating unique operation named: addUsingGET_12
2019-03-26 22:26:18 -Generating unique operation named: editUsingGET_13
2019-03-26 22:26:18 -Generating unique operation named: listUsingGET_14
2019-03-26 22:26:18 -Generating unique operation named: removeUsingPOST_24
2019-03-26 22:26:18 -Generating unique operation named: removeUsingPOST_25
2019-03-26 22:26:18 -Generating unique operation named: saveUsingPOST_12
2019-03-26 22:26:18 -Generating unique operation named: updateUsingGET_9
2019-03-26 22:26:18 -Generating unique operation named: updateUsingHEAD_9
2019-03-26 22:26:18 -Generating unique operation named: updateUsingPOST_13
2019-03-26 22:26:18 -Generating unique operation named: updateUsingPUT_9
2019-03-26 22:26:18 -Generating unique operation named: updateUsingPATCH_9
2019-03-26 22:26:18 -Generating unique operation named: updateUsingDELETE_9
2019-03-26 22:26:18 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-26 22:26:18 -Generating unique operation named: updateUsingTRACE_9
2019-03-26 22:26:18 -Generating unique operation named: addUsingGET_13
2019-03-26 22:26:18 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-26 22:26:18 -Generating unique operation named: editUsingGET_14
2019-03-26 22:26:18 -Generating unique operation named: listUsingGET_15
2019-03-26 22:26:18 -Generating unique operation named: saveUsingPOST_13
2019-03-26 22:26:18 -Generating unique operation named: saveUsingPOST_14
2019-03-26 22:26:18 -Generating unique operation named: updateUsingPOST_14
2019-03-26 22:26:18 -Generating unique operation named: listUsingGET_16
2019-03-26 22:26:18 -Generating unique operation named: listUsingHEAD_1
2019-03-26 22:26:18 -Generating unique operation named: listUsingPOST_1
2019-03-26 22:26:18 -Generating unique operation named: listUsingPUT_1
2019-03-26 22:26:18 -Generating unique operation named: listUsingPATCH_1
2019-03-26 22:26:18 -Generating unique operation named: listUsingDELETE_1
2019-03-26 22:26:18 -Generating unique operation named: listUsingOPTIONS_1
2019-03-26 22:26:18 -Generating unique operation named: listUsingTRACE_1
2019-03-26 22:26:18 -Generating unique operation named: addUsingGET_14
2019-03-26 22:26:18 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-26 22:26:18 -Generating unique operation named: editUsingGET_15
2019-03-26 22:26:18 -Generating unique operation named: listUsingGET_17
2019-03-26 22:26:18 -Generating unique operation named: removeUsingPOST_26
2019-03-26 22:26:18 -Generating unique operation named: saveUsingPOST_15
2019-03-26 22:26:18 -Generating unique operation named: treeUsingGET_3
2019-03-26 22:26:18 -Generating unique operation named: treeViewUsingGET_1
2019-03-26 22:26:18 -Generating unique operation named: updateUsingPOST_15
2019-03-26 22:26:18 -Generating unique operation named: addUsingGET_15
2019-03-26 22:26:18 -Generating unique operation named: editUsingGET_16
2019-03-26 22:26:18 -Generating unique operation named: exprotExcelUsingGET_5
2019-03-26 22:26:18 -Generating unique operation named: listUsingGET_18
2019-03-26 22:26:18 -Generating unique operation named: removeUsingPOST_27
2019-03-26 22:26:18 -Generating unique operation named: removeUsingPOST_28
2019-03-26 22:26:18 -Generating unique operation named: saveUsingPOST_16
2019-03-26 22:26:18 -Generating unique operation named: updateUsingGET_10
2019-03-26 22:26:18 -Generating unique operation named: updateUsingHEAD_10
2019-03-26 22:26:18 -Generating unique operation named: updateUsingPOST_16
2019-03-26 22:26:18 -Generating unique operation named: updateUsingPUT_10
2019-03-26 22:26:18 -Generating unique operation named: updateUsingPATCH_10
2019-03-26 22:26:18 -Generating unique operation named: updateUsingDELETE_10
2019-03-26 22:26:18 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-26 22:26:18 -Generating unique operation named: updateUsingTRACE_10
2019-03-26 22:26:18 -Generating unique operation named: exprotExcelUsingGET_6
2019-03-26 22:26:18 -Generating unique operation named: addUsingGET_16
2019-03-26 22:26:18 -Generating unique operation named: editUsingGET_17
2019-03-26 22:26:18 -Generating unique operation named: listUsingGET_19
2019-03-26 22:26:18 -Generating unique operation named: removeUsingPOST_29
2019-03-26 22:26:18 -Generating unique operation named: removeUsingPOST_30
2019-03-26 22:26:18 -Generating unique operation named: saveUsingPOST_17
2019-03-26 22:26:18 -Generating unique operation named: updateUsingGET_11
2019-03-26 22:26:18 -Generating unique operation named: updateUsingHEAD_11
2019-03-26 22:26:18 -Generating unique operation named: updateUsingPOST_17
2019-03-26 22:26:18 -Generating unique operation named: updateUsingPUT_11
2019-03-26 22:26:18 -Generating unique operation named: updateUsingPATCH_11
2019-03-26 22:26:18 -Generating unique operation named: updateUsingDELETE_11
2019-03-26 22:26:18 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-26 22:26:18 -Generating unique operation named: updateUsingTRACE_11
2019-03-26 22:26:18 -Generating unique operation named: addUsingGET_17
2019-03-26 22:26:18 -Generating unique operation named: editUsingGET_18
2019-03-26 22:26:18 -Generating unique operation named: listUsingGET_20
2019-03-26 22:26:18 -Generating unique operation named: removeUsingPOST_31
2019-03-26 22:26:18 -Generating unique operation named: removeUsingPOST_32
2019-03-26 22:26:18 -Generating unique operation named: saveUsingPOST_18
2019-03-26 22:26:18 -Generating unique operation named: updateUsingGET_12
2019-03-26 22:26:18 -Generating unique operation named: updateUsingHEAD_12
2019-03-26 22:26:18 -Generating unique operation named: updateUsingPOST_18
2019-03-26 22:26:18 -Generating unique operation named: updateUsingPUT_12
2019-03-26 22:26:18 -Generating unique operation named: updateUsingPATCH_12
2019-03-26 22:26:18 -Generating unique operation named: updateUsingDELETE_12
2019-03-26 22:26:18 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-26 22:26:18 -Generating unique operation named: updateUsingTRACE_12
2019-03-26 22:26:19 -Starting Quartz Scheduler now
2019-03-26 22:26:19 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-26 22:26:19 -Starting...
2019-03-26 22:26:19 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-26 22:26:19 -Started.
2019-03-26 22:26:19 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-26 22:26:19 -Using a shared selector for servlet write/read
2019-03-26 22:26:19 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-26 22:26:19 -Started BootdoApplication in 33.056 seconds (JVM running for 34.864)
2019-03-26 22:26:19 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-26 22:26:19 -==> Parameters: 
2019-03-26 22:26:19 -<==      Total: 1
2019-03-26 22:26:33 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-26 22:26:33 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-26 22:26:34 -FrameworkServlet 'dispatcherServlet': initialization completed in 81 ms
2019-03-26 22:26:34 -Enabling session validation scheduler...
2019-03-26 22:26:34 -请求地址 : http://localhost:8081/login;JSESSIONID=2e0ac058-6851-44ff-a1b2-e1b109c6d47e
2019-03-26 22:26:34 -HTTP METHOD : GET
2019-03-26 22:26:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-26 22:26:34 -参数 : [{}]
2019-03-26 22:26:34 -耗时 : 4
2019-03-26 22:26:34 -返回值 : login
2019-03-26 22:26:36 -请求地址 : http://localhost:8081/getVerify
2019-03-26 22:26:36 -HTTP METHOD : GET
2019-03-26 22:26:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-26 22:26:36 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@5a188be6, org.apache.shiro.web.servlet.ShiroHttpServletResponse@5c14ef51]
2019-03-26 22:26:36 -3866
2019-03-26 22:26:36 -耗时 : 659
2019-03-26 22:26:36 -返回值 : null
2019-03-26 22:26:42 -请求地址 : http://localhost:8081/login
2019-03-26 22:26:42 -HTTP METHOD : POST
2019-03-26 22:26:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-26 22:26:42 -参数 : [admin, 111111, 3866, org.apache.shiro.web.servlet.ShiroHttpServletRequest@58d0cb4]
2019-03-26 22:26:42 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-26 22:26:42 -==> Parameters: admin(String)
2019-03-26 22:26:42 -<==      Total: 1
2019-03-26 22:26:42 -耗时 : 629
2019-03-26 22:26:42 -返回值 : {msg=操作成功, code=0}
2019-03-26 22:26:42 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-03-26 22:26:42 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-26 22:26:42 -==> Parameters: 1(Long), admin(String), 登录(String), 630(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-26 22:26:42.889(Timestamp)
2019-03-26 22:26:42 -请求地址 : http://localhost:8081/index
2019-03-26 22:26:42 -HTTP METHOD : GET
2019-03-26 22:26:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-26 22:26:42 -参数 : [{}]
2019-03-26 22:26:42 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-26 22:26:43 -==> Parameters: 1(Long)
2019-03-26 22:26:43 -<==    Updates: 1
2019-03-26 22:26:44 -<==      Total: 46
2019-03-26 22:26:44 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-26 22:26:44 -==> Parameters: 138(Long)
2019-03-26 22:26:44 -<==      Total: 1
2019-03-26 22:26:44 -耗时 : 1402
2019-03-26 22:26:44 -返回值 : index_v1
2019-03-26 22:26:44 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-26 22:26:44 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 1402(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-26 22:26:44.429(Timestamp)
2019-03-26 22:26:44 -请求地址 : http://localhost:8081/main
2019-03-26 22:26:44 -HTTP METHOD : GET
2019-03-26 22:26:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-26 22:26:44 -参数 : []
2019-03-26 22:26:44 -耗时 : 1
2019-03-26 22:26:44 -返回值 : main
2019-03-26 22:26:44 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-26 22:26:44 -HTTP METHOD : GET
2019-03-26 22:26:44 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-26 22:26:44 -参数 : []
2019-03-26 22:26:44 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-26 22:26:44 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-26 22:26:44 -请求地址 : http://localhost:8081/main
2019-03-26 22:26:44 -HTTP METHOD : GET
2019-03-26 22:26:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-26 22:26:44 -参数 : []
2019-03-26 22:26:44 -耗时 : 6
2019-03-26 22:26:44 -返回值 : main
2019-03-26 22:26:44 -<==      Total: 0
2019-03-26 22:26:44 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-26 22:26:44 -==> Parameters: 1(Long), 0(String)
2019-03-26 22:26:44 -<==      Total: 1
2019-03-26 22:26:44 -耗时 : 253
2019-03-26 22:26:44 -返回值 : com.bootdo.common.utils.PageUtils@593224d2
2019-03-26 22:26:45 -<==    Updates: 1
2019-03-26 22:27:10 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 7]
2019-03-26 22:27:35 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-26 22:27:35 -==> Parameters: 1(Long)
2019-03-26 22:27:35 -<==      Total: 90
2019-03-26 22:27:35 -请求地址 : http://localhost:8081/elec/elec
2019-03-26 22:27:35 -HTTP METHOD : GET
2019-03-26 22:27:35 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-26 22:27:35 -参数 : []
2019-03-26 22:27:35 -耗时 : 1
2019-03-26 22:27:35 -返回值 : elec/elec/elec
2019-03-26 22:27:36 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-26 22:27:36 -HTTP METHOD : GET
2019-03-26 22:27:36 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-26 22:27:36 -参数 : [userType]
2019-03-26 22:27:36 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-26 22:27:36 -==> Parameters: userType(String)
2019-03-26 22:27:36 -<==      Total: 2
2019-03-26 22:27:36 -耗时 : 49
2019-03-26 22:27:36 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-26 22:27:36 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-26 22:27:36 -HTTP METHOD : GET
2019-03-26 22:27:36 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-26 22:27:36 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@1c97be26]
2019-03-26 22:27:36 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-26 22:27:36 -==> Parameters: 0(Integer), 10(Integer)
2019-03-26 22:27:36 -<==      Total: 10
2019-03-26 22:27:36 -==>  Preparing: select count(*) from elec 
2019-03-26 22:27:36 -==> Parameters: 
2019-03-26 22:27:36 -<==      Total: 1
2019-03-26 22:27:36 -耗时 : 165
2019-03-26 22:27:36 -返回值 : com.bootdo.common.utils.PageUtils@83242d0
2019-03-26 22:27:41 -请求地址 : http://localhost:8081/elec/elec/edit/4
2019-03-26 22:27:41 -HTTP METHOD : GET
2019-03-26 22:27:41 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.edit
2019-03-26 22:27:41 -参数 : [4, {}]
2019-03-26 22:27:41 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec where id = ? 
2019-03-26 22:27:41 -==> Parameters: 4(Long)
2019-03-26 22:27:41 -<==      Total: 1
2019-03-26 22:27:41 -耗时 : 15
2019-03-26 22:27:41 -返回值 : elec/elec/edit
2019-03-26 22:27:41 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-26 22:27:41 -HTTP METHOD : GET
2019-03-26 22:27:41 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-26 22:27:41 -参数 : [userType]
2019-03-26 22:27:41 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-26 22:27:41 -==> Parameters: userType(String)
2019-03-26 22:27:41 -<==      Total: 2
2019-03-26 22:27:41 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-03-26 22:27:41 -HTTP METHOD : GET
2019-03-26 22:27:41 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-26 22:27:41 -参数 : [userState]
2019-03-26 22:27:41 -耗时 : 5
2019-03-26 22:27:41 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-26 22:27:41 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-26 22:27:41 -==> Parameters: userState(String)
2019-03-26 22:27:41 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-03-26 22:27:41 -HTTP METHOD : GET
2019-03-26 22:27:41 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-26 22:27:41 -<==      Total: 2
2019-03-26 22:27:41 -参数 : [elecType]
2019-03-26 22:27:41 -耗时 : 11
2019-03-26 22:27:41 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-26 22:27:41 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-26 22:27:41 -==> Parameters: elecType(String)
2019-03-26 22:27:41 -<==      Total: 2
2019-03-26 22:27:41 -耗时 : 8
2019-03-26 22:27:41 -返回值 : [DictDO{id=139, name='民用电', value='1', type='elecType', description='电量性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='商业电', value='0', type='elecType', description='电量类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-26 22:27:47 -请求地址 : http://localhost:8081/elec/elec/update
2019-03-26 22:27:47 -HTTP METHOD : POST
2019-03-26 22:27:47 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.update
2019-03-26 22:27:47 -参数 : [com.bootdo.elec.domain.ElecDO@55c8b74e]
2019-03-26 22:27:47 -==>  Preparing: update elec SET `user_id` = ?, `user_name` = ?, `user_type` = ?, `user_org` = ?, `user_tell` = ?, `user_state` = ?, `wages_id` = ?, `start` = ?, `end` = ?, `hu` = ?, `elec_amount` = ?, `elec_cost` = ?, `elec_sum` = ?, `create_time` = ?, `create_by` = ?, `update_time` = ?, `update_by` = ?, `remark` = ? where id = ? 
2019-03-26 22:27:47 -==> Parameters: 1-0003(String), 时代峰(String), A(String), 2(String), (String), 1(String), 1000(String), 50(String), 100(String), 2(Integer), 100.00(BigDecimal), 100.00(BigDecimal), 100.00(BigDecimal), 2019-03(String), 1(Long), 2019-03-26 22:27:47.564(Timestamp), 1(Long), (String), 4(Long)
2019-03-26 22:27:47 -<==    Updates: 1
2019-03-26 22:27:47 -耗时 : 224
2019-03-26 22:27:47 -返回值 : {msg=操作成功, code=0}
2019-03-26 22:27:47 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-26 22:27:47 -HTTP METHOD : GET
2019-03-26 22:27:47 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-26 22:27:47 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=2}, com.bootdo.elec.domain.ElecDO@70a670a8]
2019-03-26 22:27:47 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `elec_sum` < 0 order by id asc limit ?, ? 
2019-03-26 22:27:47 -==> Parameters: 0(Integer), 10(Integer)
2019-03-26 22:27:47 -<==      Total: 2
2019-03-26 22:27:47 -==>  Preparing: select count(*) from elec WHERE `elec_sum` < 0 
2019-03-26 22:27:47 -==> Parameters: 
2019-03-26 22:27:47 -<==      Total: 1
2019-03-26 22:27:47 -耗时 : 51
2019-03-26 22:27:47 -返回值 : com.bootdo.common.utils.PageUtils@a8d709c
2019-03-26 22:28:06 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-26 22:28:06 -HTTP METHOD : GET
2019-03-26 22:28:06 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-26 22:28:06 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@1cbed3b4]
2019-03-26 22:28:06 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-26 22:28:06 -==> Parameters: 0(Integer), 10(Integer)
2019-03-26 22:28:06 -<==      Total: 10
2019-03-26 22:28:06 -==>  Preparing: select count(*) from elec 
2019-03-26 22:28:06 -==> Parameters: 
2019-03-26 22:28:06 -<==      Total: 1
2019-03-26 22:28:06 -耗时 : 26
2019-03-26 22:28:06 -返回值 : com.bootdo.common.utils.PageUtils@78b35b30
2019-03-26 22:28:07 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-26 22:28:07 -HTTP METHOD : GET
2019-03-26 22:28:07 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-26 22:28:07 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=2}, com.bootdo.elec.domain.ElecDO@55b22236]
2019-03-26 22:28:07 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `elec_sum` < 0 order by id asc limit ?, ? 
2019-03-26 22:28:07 -==> Parameters: 0(Integer), 10(Integer)
2019-03-26 22:28:07 -<==      Total: 2
2019-03-26 22:28:07 -==>  Preparing: select count(*) from elec WHERE `elec_sum` < 0 
2019-03-26 22:28:07 -==> Parameters: 
2019-03-26 22:28:07 -<==      Total: 1
2019-03-26 22:28:07 -耗时 : 9
2019-03-26 22:28:07 -返回值 : com.bootdo.common.utils.PageUtils@619576ab
2019-03-26 22:28:08 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-26 22:28:08 -HTTP METHOD : GET
2019-03-26 22:28:08 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-26 22:28:08 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@3c7d38d7]
2019-03-26 22:28:08 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-26 22:28:08 -==> Parameters: 0(Integer), 10(Integer)
2019-03-26 22:28:08 -<==      Total: 10
2019-03-26 22:28:08 -==>  Preparing: select count(*) from elec 
2019-03-26 22:28:08 -==> Parameters: 
2019-03-26 22:28:08 -<==      Total: 1
2019-03-26 22:28:08 -耗时 : 12
2019-03-26 22:28:08 -返回值 : com.bootdo.common.utils.PageUtils@6a97875b

2019-05-23 08:48:30 -Starting BootdoApplication on PC-201905091110 with PID 33848 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-23 08:48:30 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-23 08:48:31 -The following profiles are active: dev
2019-05-23 08:48:31 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Thu May 23 08:48:31 CST 2019]; root of context hierarchy
2019-05-23 08:48:40 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-23 08:48:42 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$abc073ee] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 08:48:42 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$9e19a295] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 08:48:44 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 08:48:44 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 08:48:44 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 08:48:44 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-23 08:48:44 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-23 08:48:44 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 08:48:44 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 08:48:45 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 08:48:45 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 08:48:46 -Tomcat initialized with port(s): 8081 (http)
2019-05-23 08:48:46 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-23 08:48:46 -Starting service [Tomcat]
2019-05-23 08:48:46 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-23 08:48:46 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-23 08:48:47 -Initializing Spring embedded WebApplicationContext
2019-05-23 08:48:47 -Root WebApplicationContext: initialization completed in 15866 ms
2019-05-23 08:48:48 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-23 08:48:48 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-23 08:48:48 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-23 08:48:48 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-23 08:48:48 -Filter xssFilter was not registered (disabled)
2019-05-23 08:48:48 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-23 08:48:48 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-23 08:48:48 -Servlet statViewServlet mapped to [/druid/*]
2019-05-23 08:48:48 -Servlet dispatcherServlet mapped to [/]
2019-05-23 08:48:53 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Thu May 23 08:48:31 CST 2019]; root of context hierarchy
2019-05-23 08:48:54 -Using default implementation for ThreadExecutor
2019-05-23 08:48:54 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-23 08:48:54 -Quartz Scheduler v.2.2.1 created.
2019-05-23 08:48:54 -RAMJobStore initialized.
2019-05-23 08:48:54 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-23 08:48:54 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-23 08:48:54 -Quartz scheduler version: 2.2.1
2019-05-23 08:48:54 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@6009cd34
2019-05-23 08:48:55 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-23 08:48:55 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-23 08:48:58 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 08:48:58 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-23 08:48:58 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-23 08:48:58 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 08:48:58 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-23 08:48:58 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-23 08:48:58 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-23 08:48:58 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-23 08:48:58 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-23 08:48:58 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-23 08:48:58 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-23 08:48:58 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 08:48:58 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 08:48:58 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-23 08:48:58 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-23 08:48:58 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 08:48:58 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-23 08:48:58 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-23 08:48:58 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-23 08:48:58 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-23 08:48:58 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 08:48:58 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-23 08:48:58 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-23 08:48:58 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 08:48:58 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-23 08:48:58 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-23 08:48:58 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 08:48:58 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 08:48:58 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-23 08:48:58 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-23 08:48:58 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 08:48:58 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-23 08:48:58 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-23 08:48:58 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-23 08:48:58 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-23 08:48:58 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 08:48:58 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-23 08:48:58 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-23 08:48:58 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-23 08:48:58 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-23 08:48:58 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 08:48:58 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-23 08:48:58 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-23 08:48:58 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-23 08:48:58 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-23 08:48:58 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 08:48:58 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-23 08:48:58 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-23 08:48:58 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-23 08:48:58 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-23 08:48:58 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-23 08:48:58 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 08:48:58 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-23 08:48:58 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-23 08:48:58 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-23 08:48:58 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-23 08:48:58 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 08:48:58 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 08:48:58 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-23 08:48:58 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-23 08:48:58 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-23 08:48:58 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-23 08:48:58 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-23 08:48:58 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-23 08:48:58 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-23 08:48:58 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-23 08:48:58 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-23 08:48:58 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 08:48:58 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-23 08:48:58 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-23 08:48:58 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-23 08:48:58 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-23 08:48:58 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 08:48:58 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-23 08:48:58 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-23 08:48:58 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 08:48:58 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-23 08:48:58 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-23 08:48:58 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-23 08:48:58 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-23 08:48:58 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-23 08:48:58 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-23 08:48:58 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-23 08:48:58 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-23 08:48:58 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-23 08:48:58 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-23 08:48:58 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-23 08:48:58 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-23 08:48:58 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-23 08:48:58 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 08:48:58 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-23 08:48:58 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-23 08:48:58 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-23 08:48:58 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-23 08:48:58 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-23 08:48:58 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-23 08:48:58 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-23 08:48:58 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 08:48:58 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-23 08:48:58 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-23 08:48:58 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 08:48:58 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-23 08:48:58 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-23 08:48:58 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-23 08:48:58 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-23 08:48:58 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-23 08:48:58 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-23 08:48:58 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-23 08:48:58 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 08:48:58 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-23 08:48:58 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-23 08:48:58 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-23 08:48:58 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-23 08:48:58 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-23 08:48:58 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-23 08:48:58 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-23 08:48:58 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-23 08:48:58 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-23 08:48:58 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-23 08:48:58 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-23 08:48:58 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 08:48:58 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-23 08:48:58 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-23 08:48:58 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 08:48:58 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-23 08:48:58 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-23 08:48:58 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-23 08:48:58 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-23 08:48:58 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-23 08:48:58 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-23 08:48:58 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-23 08:48:58 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-23 08:48:58 -Mapped "{[/moneyList/moneyList/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 08:48:58 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-23 08:48:58 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-23 08:48:58 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-23 08:48:58 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-23 08:48:58 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 08:48:58 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-23 08:48:58 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-23 08:48:58 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-23 08:48:58 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 08:48:58 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-23 08:48:58 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-23 08:48:58 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-23 08:48:58 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-23 08:48:58 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 08:48:58 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-23 08:48:58 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-23 08:48:58 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-23 08:48:58 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 08:48:58 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-23 08:48:58 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-23 08:48:58 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-23 08:48:58 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-23 08:48:58 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 08:48:58 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-23 08:48:58 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-23 08:48:58 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-23 08:48:58 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 08:48:58 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-23 08:48:58 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-23 08:48:58 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-23 08:48:58 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-23 08:48:58 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-23 08:48:58 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 08:48:58 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-23 08:48:58 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-23 08:48:58 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-23 08:48:58 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-23 08:48:58 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 08:48:58 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 08:48:58 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-23 08:48:58 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-23 08:48:58 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-05-23 08:48:58 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-23 08:48:58 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 08:48:58 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-23 08:48:58 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-23 08:48:58 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 08:48:58 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-23 08:48:58 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-23 08:48:58 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 08:48:58 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-23 08:48:58 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-23 08:48:58 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-23 08:48:58 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-23 08:48:58 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-23 08:48:58 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-23 08:48:58 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-23 08:48:58 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-23 08:48:58 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-23 08:48:58 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 08:48:58 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-23 08:48:58 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-23 08:48:58 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-23 08:48:58 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-23 08:48:58 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-23 08:48:58 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-23 08:48:58 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-23 08:48:58 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-23 08:48:58 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-23 08:48:58 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-23 08:48:58 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 08:48:58 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-23 08:48:58 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-23 08:48:58 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-23 08:48:58 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-23 08:48:58 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-23 08:48:58 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-23 08:48:58 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-23 08:48:58 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-23 08:48:58 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-23 08:48:58 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-23 08:48:58 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-23 08:48:58 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-23 08:48:58 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 08:48:58 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-23 08:48:58 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-23 08:48:58 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-23 08:48:58 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-23 08:48:58 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 08:48:58 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-23 08:48:58 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-23 08:48:58 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-23 08:48:58 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 08:48:58 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-23 08:48:58 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-23 08:48:58 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-23 08:48:58 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-23 08:48:58 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-23 08:48:58 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-23 08:48:58 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-23 08:48:58 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-23 08:48:58 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-23 08:48:58 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-23 08:48:58 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-23 08:48:58 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-23 08:48:58 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-23 08:48:58 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-23 08:48:58 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-23 08:48:58 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-23 08:48:58 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-23 08:48:58 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 08:48:58 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-23 08:48:58 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-23 08:48:58 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-23 08:48:58 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 08:48:58 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-23 08:48:58 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-23 08:48:58 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-23 08:48:58 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-23 08:48:58 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-23 08:48:58 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-23 08:48:58 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-23 08:48:58 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 08:48:58 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-23 08:48:58 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-23 08:48:58 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 08:48:58 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-23 08:48:58 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-23 08:48:58 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-23 08:48:58 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-23 08:48:58 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-23 08:48:58 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-23 08:48:58 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-23 08:48:58 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-23 08:48:59 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-23 08:48:59 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-23 08:48:59 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-23 08:49:01 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-23 08:49:02 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Thu May 23 08:48:31 CST 2019]; root of context hierarchy
2019-05-23 08:49:02 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-23 08:49:02 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-23 08:49:02 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-23 08:49:02 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-23 08:49:02 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-23 08:49:05 -Registering beans for JMX exposure on startup
2019-05-23 08:49:05 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-23 08:49:05 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-23 08:49:05 -Starting beans in phase 2147483647
2019-05-23 08:49:05 -Context refreshed
2019-05-23 08:49:05 -Found 1 custom documentation plugin(s)
2019-05-23 08:49:05 -Scanning for api listing references
2019-05-23 08:49:06 -Generating unique operation named: getCountDUsingPOST_1
2019-05-23 08:49:06 -Generating unique operation named: removeUsingPOST_1
2019-05-23 08:49:06 -Generating unique operation named: addUsingGET_1
2019-05-23 08:49:06 -Generating unique operation named: editUsingGET_1
2019-05-23 08:49:06 -Generating unique operation named: listUsingGET_1
2019-05-23 08:49:06 -Generating unique operation named: removeUsingPOST_2
2019-05-23 08:49:06 -Generating unique operation named: removeUsingPOST_3
2019-05-23 08:49:06 -Generating unique operation named: saveUsingPOST_1
2019-05-23 08:49:06 -Generating unique operation named: updateUsingGET_1
2019-05-23 08:49:06 -Generating unique operation named: updateUsingHEAD_1
2019-05-23 08:49:06 -Generating unique operation named: updateUsingPOST_1
2019-05-23 08:49:06 -Generating unique operation named: updateUsingPUT_1
2019-05-23 08:49:06 -Generating unique operation named: updateUsingPATCH_1
2019-05-23 08:49:06 -Generating unique operation named: updateUsingDELETE_1
2019-05-23 08:49:06 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-23 08:49:06 -Generating unique operation named: updateUsingTRACE_1
2019-05-23 08:49:06 -Generating unique operation named: addUsingGET_2
2019-05-23 08:49:06 -Generating unique operation named: editUsingGET_2
2019-05-23 08:49:06 -Generating unique operation named: listUsingGET_2
2019-05-23 08:49:06 -Generating unique operation named: removeUsingPOST_4
2019-05-23 08:49:06 -Generating unique operation named: removeUsingPOST_5
2019-05-23 08:49:06 -Generating unique operation named: saveUsingPOST_2
2019-05-23 08:49:06 -Generating unique operation named: updateUsingPOST_2
2019-05-23 08:49:06 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-23 08:49:06 -Generating unique operation named: addUsingGET_3
2019-05-23 08:49:06 -Generating unique operation named: editUsingGET_3
2019-05-23 08:49:06 -Generating unique operation named: listUsingGET_3
2019-05-23 08:49:06 -Generating unique operation named: removeUsingPOST_6
2019-05-23 08:49:06 -Generating unique operation named: removeUsingPOST_7
2019-05-23 08:49:06 -Generating unique operation named: saveUsingPOST_3
2019-05-23 08:49:06 -Generating unique operation named: updateUsingGET_2
2019-05-23 08:49:06 -Generating unique operation named: updateUsingHEAD_2
2019-05-23 08:49:06 -Generating unique operation named: updateUsingPOST_3
2019-05-23 08:49:06 -Generating unique operation named: updateUsingPUT_2
2019-05-23 08:49:06 -Generating unique operation named: updateUsingPATCH_2
2019-05-23 08:49:06 -Generating unique operation named: updateUsingDELETE_2
2019-05-23 08:49:06 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-23 08:49:06 -Generating unique operation named: updateUsingTRACE_2
2019-05-23 08:49:06 -Generating unique operation named: addUsingGET_4
2019-05-23 08:49:06 -Generating unique operation named: editUsingGET_4
2019-05-23 08:49:06 -Generating unique operation named: listUsingGET_4
2019-05-23 08:49:06 -Generating unique operation named: removeUsingPOST_8
2019-05-23 08:49:06 -Generating unique operation named: removeUsingPOST_9
2019-05-23 08:49:06 -Generating unique operation named: saveUsingPOST_4
2019-05-23 08:49:06 -Generating unique operation named: updateUsingGET_3
2019-05-23 08:49:06 -Generating unique operation named: updateUsingHEAD_3
2019-05-23 08:49:06 -Generating unique operation named: updateUsingPOST_4
2019-05-23 08:49:07 -Generating unique operation named: updateUsingPUT_3
2019-05-23 08:49:07 -Generating unique operation named: updateUsingPATCH_3
2019-05-23 08:49:07 -Generating unique operation named: updateUsingDELETE_3
2019-05-23 08:49:07 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-23 08:49:07 -Generating unique operation named: updateUsingTRACE_3
2019-05-23 08:49:07 -Generating unique operation named: ElecUsingGET_1
2019-05-23 08:49:07 -Generating unique operation named: addUsingGET_5
2019-05-23 08:49:07 -Generating unique operation named: editUsingGET_5
2019-05-23 08:49:07 -Generating unique operation named: listUsingGET_5
2019-05-23 08:49:07 -Generating unique operation named: removeUsingPOST_10
2019-05-23 08:49:07 -Generating unique operation named: removeUsingPOST_11
2019-05-23 08:49:07 -Generating unique operation named: saveUsingPOST_5
2019-05-23 08:49:07 -Generating unique operation named: updateUsingGET_4
2019-05-23 08:49:07 -Generating unique operation named: updateUsingHEAD_4
2019-05-23 08:49:07 -Generating unique operation named: updateUsingPOST_5
2019-05-23 08:49:07 -Generating unique operation named: updateUsingPUT_4
2019-05-23 08:49:07 -Generating unique operation named: updateUsingPATCH_4
2019-05-23 08:49:07 -Generating unique operation named: updateUsingDELETE_4
2019-05-23 08:49:07 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-23 08:49:07 -Generating unique operation named: updateUsingTRACE_4
2019-05-23 08:49:07 -Generating unique operation named: editUsingGET_6
2019-05-23 08:49:07 -Generating unique operation named: listUsingGET_6
2019-05-23 08:49:07 -Generating unique operation named: updateUsingPOST_6
2019-05-23 08:49:07 -Generating unique operation named: addUsingGET_6
2019-05-23 08:49:07 -Generating unique operation named: editUsingGET_7
2019-05-23 08:49:07 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-23 08:49:07 -Generating unique operation named: listUsingGET_7
2019-05-23 08:49:07 -Generating unique operation named: removeUsingPOST_12
2019-05-23 08:49:07 -Generating unique operation named: removeUsingPOST_13
2019-05-23 08:49:07 -Generating unique operation named: saveUsingPOST_6
2019-05-23 08:49:07 -Generating unique operation named: updateUsingGET_5
2019-05-23 08:49:07 -Generating unique operation named: updateUsingHEAD_5
2019-05-23 08:49:07 -Generating unique operation named: updateUsingPOST_7
2019-05-23 08:49:07 -Generating unique operation named: updateUsingPUT_5
2019-05-23 08:49:07 -Generating unique operation named: updateUsingPATCH_5
2019-05-23 08:49:07 -Generating unique operation named: updateUsingDELETE_5
2019-05-23 08:49:07 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-23 08:49:07 -Generating unique operation named: updateUsingTRACE_5
2019-05-23 08:49:07 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-23 08:49:07 -Generating unique operation named: addUsingGET_7
2019-05-23 08:49:07 -Generating unique operation named: editUsingGET_8
2019-05-23 08:49:07 -Generating unique operation named: listUsingGET_8
2019-05-23 08:49:07 -Generating unique operation named: removeUsingPOST_14
2019-05-23 08:49:07 -Generating unique operation named: removeUsingPOST_15
2019-05-23 08:49:07 -Generating unique operation named: saveUsingPOST_7
2019-05-23 08:49:07 -Generating unique operation named: updateUsingGET_6
2019-05-23 08:49:07 -Generating unique operation named: updateUsingHEAD_6
2019-05-23 08:49:07 -Generating unique operation named: updateUsingPOST_8
2019-05-23 08:49:07 -Generating unique operation named: updateUsingPUT_6
2019-05-23 08:49:07 -Generating unique operation named: updateUsingPATCH_6
2019-05-23 08:49:07 -Generating unique operation named: updateUsingDELETE_6
2019-05-23 08:49:07 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-23 08:49:07 -Generating unique operation named: updateUsingTRACE_6
2019-05-23 08:49:07 -Generating unique operation named: addUsingGET_8
2019-05-23 08:49:07 -Generating unique operation named: editUsingGET_9
2019-05-23 08:49:07 -Generating unique operation named: listUsingGET_9
2019-05-23 08:49:07 -Generating unique operation named: removeUsingPOST_16
2019-05-23 08:49:07 -Generating unique operation named: removeUsingPOST_17
2019-05-23 08:49:07 -Generating unique operation named: saveUsingPOST_8
2019-05-23 08:49:07 -Generating unique operation named: updateUsingGET_7
2019-05-23 08:49:07 -Generating unique operation named: updateUsingHEAD_7
2019-05-23 08:49:07 -Generating unique operation named: updateUsingPOST_9
2019-05-23 08:49:07 -Generating unique operation named: updateUsingPUT_7
2019-05-23 08:49:07 -Generating unique operation named: updateUsingPATCH_7
2019-05-23 08:49:07 -Generating unique operation named: updateUsingDELETE_7
2019-05-23 08:49:07 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-23 08:49:07 -Generating unique operation named: updateUsingTRACE_7
2019-05-23 08:49:07 -Generating unique operation named: addUsingGET_9
2019-05-23 08:49:07 -Generating unique operation named: editUsingGET_10
2019-05-23 08:49:07 -Generating unique operation named: infoUsingGET_1
2019-05-23 08:49:07 -Generating unique operation named: infoUsingHEAD_1
2019-05-23 08:49:07 -Generating unique operation named: infoUsingPOST_1
2019-05-23 08:49:07 -Generating unique operation named: infoUsingPUT_1
2019-05-23 08:49:07 -Generating unique operation named: infoUsingPATCH_1
2019-05-23 08:49:07 -Generating unique operation named: infoUsingDELETE_1
2019-05-23 08:49:07 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-23 08:49:07 -Generating unique operation named: infoUsingTRACE_1
2019-05-23 08:49:07 -Generating unique operation named: listUsingGET_10
2019-05-23 08:49:07 -Generating unique operation named: removeUsingPOST_18
2019-05-23 08:49:07 -Generating unique operation named: removeUsingPOST_19
2019-05-23 08:49:07 -Generating unique operation named: saveUsingPOST_9
2019-05-23 08:49:07 -Generating unique operation named: updateUsingPOST_10
2019-05-23 08:49:07 -Generating unique operation named: listUsingGET_11
2019-05-23 08:49:07 -Generating unique operation named: removeUsingPOST_20
2019-05-23 08:49:07 -Generating unique operation named: welcomeUsingGET_1
2019-05-23 08:49:07 -Generating unique operation named: addUsingGET_10
2019-05-23 08:49:07 -Generating unique operation named: editUsingGET_11
2019-05-23 08:49:07 -Generating unique operation named: listUsingGET_12
2019-05-23 08:49:07 -Generating unique operation named: removeUsingPOST_21
2019-05-23 08:49:07 -Generating unique operation named: saveUsingPOST_10
2019-05-23 08:49:07 -Generating unique operation named: treeUsingGET_1
2019-05-23 08:49:07 -Generating unique operation named: treeUsingGET_2
2019-05-23 08:49:07 -Generating unique operation named: updateUsingPOST_11
2019-05-23 08:49:07 -Generating unique operation named: editUsingGET_12
2019-05-23 08:49:07 -Generating unique operation named: addUsingGET_11
2019-05-23 08:49:07 -Generating unique operation named: editUsingGET_13
2019-05-23 08:49:07 -Generating unique operation named: listUsingGET_13
2019-05-23 08:49:07 -Generating unique operation named: removeUsingPOST_22
2019-05-23 08:49:07 -Generating unique operation named: removeUsingPOST_23
2019-05-23 08:49:07 -Generating unique operation named: saveUsingPOST_11
2019-05-23 08:49:07 -Generating unique operation named: updateUsingGET_8
2019-05-23 08:49:08 -Generating unique operation named: updateUsingHEAD_8
2019-05-23 08:49:08 -Generating unique operation named: updateUsingPOST_12
2019-05-23 08:49:08 -Generating unique operation named: updateUsingPUT_8
2019-05-23 08:49:08 -Generating unique operation named: updateUsingPATCH_8
2019-05-23 08:49:08 -Generating unique operation named: updateUsingDELETE_8
2019-05-23 08:49:08 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-23 08:49:08 -Generating unique operation named: updateUsingTRACE_8
2019-05-23 08:49:08 -Generating unique operation named: addUsingGET_12
2019-05-23 08:49:08 -Generating unique operation named: editUsingGET_14
2019-05-23 08:49:08 -Generating unique operation named: listUsingGET_14
2019-05-23 08:49:08 -Generating unique operation named: removeUsingPOST_24
2019-05-23 08:49:08 -Generating unique operation named: removeUsingPOST_25
2019-05-23 08:49:08 -Generating unique operation named: saveUsingPOST_12
2019-05-23 08:49:08 -Generating unique operation named: updateUsingGET_9
2019-05-23 08:49:08 -Generating unique operation named: updateUsingHEAD_9
2019-05-23 08:49:08 -Generating unique operation named: updateUsingPOST_13
2019-05-23 08:49:08 -Generating unique operation named: updateUsingPUT_9
2019-05-23 08:49:08 -Generating unique operation named: updateUsingPATCH_9
2019-05-23 08:49:08 -Generating unique operation named: updateUsingDELETE_9
2019-05-23 08:49:08 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-23 08:49:08 -Generating unique operation named: updateUsingTRACE_9
2019-05-23 08:49:08 -Generating unique operation named: addUsingGET_13
2019-05-23 08:49:08 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-23 08:49:08 -Generating unique operation named: editUsingGET_15
2019-05-23 08:49:08 -Generating unique operation named: listUsingGET_15
2019-05-23 08:49:08 -Generating unique operation named: saveUsingPOST_13
2019-05-23 08:49:08 -Generating unique operation named: saveUsingPOST_14
2019-05-23 08:49:08 -Generating unique operation named: updateUsingPOST_14
2019-05-23 08:49:08 -Generating unique operation named: listUsingGET_16
2019-05-23 08:49:08 -Generating unique operation named: listUsingHEAD_1
2019-05-23 08:49:08 -Generating unique operation named: listUsingPOST_1
2019-05-23 08:49:08 -Generating unique operation named: listUsingPUT_1
2019-05-23 08:49:08 -Generating unique operation named: listUsingPATCH_1
2019-05-23 08:49:08 -Generating unique operation named: listUsingDELETE_1
2019-05-23 08:49:08 -Generating unique operation named: listUsingOPTIONS_1
2019-05-23 08:49:08 -Generating unique operation named: listUsingTRACE_1
2019-05-23 08:49:08 -Generating unique operation named: countDDUsingGET_1
2019-05-23 08:49:08 -Generating unique operation named: exportDDUsingGET_1
2019-05-23 08:49:08 -Generating unique operation named: addUsingGET_14
2019-05-23 08:49:08 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-23 08:49:08 -Generating unique operation named: editUsingGET_16
2019-05-23 08:49:08 -Generating unique operation named: listUsingGET_17
2019-05-23 08:49:08 -Generating unique operation named: removeUsingPOST_26
2019-05-23 08:49:08 -Generating unique operation named: saveUsingPOST_15
2019-05-23 08:49:08 -Generating unique operation named: treeUsingGET_3
2019-05-23 08:49:08 -Generating unique operation named: treeViewUsingGET_1
2019-05-23 08:49:08 -Generating unique operation named: updateUsingPOST_15
2019-05-23 08:49:08 -Generating unique operation named: addUsingGET_15
2019-05-23 08:49:08 -Generating unique operation named: editUsingGET_17
2019-05-23 08:49:08 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-23 08:49:08 -Generating unique operation named: listUsingGET_18
2019-05-23 08:49:09 -Generating unique operation named: removeUsingPOST_27
2019-05-23 08:49:09 -Generating unique operation named: removeUsingPOST_28
2019-05-23 08:49:09 -Generating unique operation named: saveUsingPOST_16
2019-05-23 08:49:09 -Generating unique operation named: updateUsingGET_10
2019-05-23 08:49:09 -Generating unique operation named: updateUsingHEAD_10
2019-05-23 08:49:09 -Generating unique operation named: updateUsingPOST_16
2019-05-23 08:49:09 -Generating unique operation named: updateUsingPUT_10
2019-05-23 08:49:09 -Generating unique operation named: updateUsingPATCH_10
2019-05-23 08:49:09 -Generating unique operation named: updateUsingDELETE_10
2019-05-23 08:49:09 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-23 08:49:09 -Generating unique operation named: updateUsingTRACE_10
2019-05-23 08:49:09 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-23 08:49:09 -Generating unique operation named: addUsingGET_16
2019-05-23 08:49:09 -Generating unique operation named: editUsingGET_18
2019-05-23 08:49:09 -Generating unique operation named: listUsingGET_19
2019-05-23 08:49:09 -Generating unique operation named: removeUsingPOST_29
2019-05-23 08:49:09 -Generating unique operation named: removeUsingPOST_30
2019-05-23 08:49:09 -Generating unique operation named: saveUsingPOST_17
2019-05-23 08:49:09 -Generating unique operation named: updateUsingGET_11
2019-05-23 08:49:09 -Generating unique operation named: updateUsingHEAD_11
2019-05-23 08:49:09 -Generating unique operation named: updateUsingPOST_17
2019-05-23 08:49:09 -Generating unique operation named: updateUsingPUT_11
2019-05-23 08:49:09 -Generating unique operation named: updateUsingPATCH_11
2019-05-23 08:49:09 -Generating unique operation named: updateUsingDELETE_11
2019-05-23 08:49:09 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-23 08:49:09 -Generating unique operation named: updateUsingTRACE_11
2019-05-23 08:49:09 -Generating unique operation named: addUsingGET_17
2019-05-23 08:49:09 -Generating unique operation named: editUsingGET_19
2019-05-23 08:49:09 -Generating unique operation named: listUsingGET_20
2019-05-23 08:49:09 -Generating unique operation named: removeUsingPOST_31
2019-05-23 08:49:09 -Generating unique operation named: removeUsingPOST_32
2019-05-23 08:49:09 -Generating unique operation named: saveUsingPOST_18
2019-05-23 08:49:09 -Generating unique operation named: updateUsingGET_12
2019-05-23 08:49:09 -Generating unique operation named: updateUsingHEAD_12
2019-05-23 08:49:09 -Generating unique operation named: updateUsingPOST_18
2019-05-23 08:49:09 -Generating unique operation named: updateUsingPUT_12
2019-05-23 08:49:09 -Generating unique operation named: updateUsingPATCH_12
2019-05-23 08:49:09 -Generating unique operation named: updateUsingDELETE_12
2019-05-23 08:49:09 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-23 08:49:09 -Generating unique operation named: updateUsingTRACE_12
2019-05-23 08:49:09 -Starting Quartz Scheduler now
2019-05-23 08:49:09 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-23 08:49:09 -Starting...
2019-05-23 08:49:09 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-23 08:49:09 -Started.
2019-05-23 08:49:09 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-23 08:49:09 -Using a shared selector for servlet write/read
2019-05-23 08:49:09 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-23 08:49:09 -Started BootdoApplication in 43.013 seconds (JVM running for 45.893)
2019-05-23 08:49:10 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-23 08:49:10 -==> Parameters: 
2019-05-23 08:49:10 -<==      Total: 1
2019-05-23 08:49:59 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-05-23 08:50:18 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-23 08:50:18 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-23 08:50:18 -FrameworkServlet 'dispatcherServlet': initialization completed in 78 ms
2019-05-23 08:50:19 -Enabling session validation scheduler...
2019-05-23 08:50:19 -请求地址 : http://localhost:8081/login;JSESSIONID=77cbb524-966a-48d5-8a3a-b0f385417596
2019-05-23 08:50:19 -HTTP METHOD : GET
2019-05-23 08:50:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-23 08:50:19 -参数 : [{}]
2019-05-23 08:50:19 -耗时 : 3
2019-05-23 08:50:19 -返回值 : login
2019-05-23 08:50:22 -请求地址 : http://localhost:8081/getVerify
2019-05-23 08:50:22 -HTTP METHOD : GET
2019-05-23 08:50:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-23 08:50:22 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@7ad579e1, org.apache.shiro.web.servlet.ShiroHttpServletResponse@33ebe247]
2019-05-23 08:50:27 -2880
2019-05-23 08:50:27 -耗时 : 5110
2019-05-23 08:50:27 -返回值 : null
2019-05-23 08:50:57 -请求地址 : http://localhost:8081/login
2019-05-23 08:50:57 -HTTP METHOD : POST
2019-05-23 08:50:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-23 08:50:57 -参数 : [admin, 111111, 2880, org.apache.shiro.web.servlet.ShiroHttpServletRequest@1c550dfa]
2019-05-23 08:50:57 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-23 08:50:57 -==> Parameters: admin(String)
2019-05-23 08:50:57 -<==      Total: 1
2019-05-23 08:50:57 -耗时 : 196
2019-05-23 08:50:57 -返回值 : {msg=操作成功, code=0}
2019-05-23 08:50:57 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-23 08:50:57 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-23 08:50:57 -==> Parameters: 1(Long), admin(String), 登录(String), 196(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-23 08:50:57.411(Timestamp)
2019-05-23 08:50:57 -<==    Updates: 1
2019-05-23 08:50:57 -请求地址 : http://localhost:8081/index
2019-05-23 08:50:57 -HTTP METHOD : GET
2019-05-23 08:50:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-23 08:50:57 -参数 : [{}]
2019-05-23 08:50:57 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-23 08:50:57 -==> Parameters: 1(Long)
2019-05-23 08:50:57 -<==      Total: 49
2019-05-23 08:50:57 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-23 08:50:57 -==> Parameters: 138(Long)
2019-05-23 08:50:57 -<==      Total: 1
2019-05-23 08:50:57 -耗时 : 222
2019-05-23 08:50:57 -返回值 : index_v1
2019-05-23 08:50:58 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-23 08:50:58 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 223(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-23 08:50:58.017(Timestamp)
2019-05-23 08:50:58 -<==    Updates: 1
2019-05-23 08:50:58 -请求地址 : http://localhost:8081/main
2019-05-23 08:50:58 -HTTP METHOD : GET
2019-05-23 08:50:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-23 08:50:58 -参数 : []
2019-05-23 08:50:58 -耗时 : 2
2019-05-23 08:50:58 -返回值 : main
2019-05-23 08:51:00 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-23 08:51:00 -HTTP METHOD : GET
2019-05-23 08:51:00 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-23 08:51:00 -参数 : []
2019-05-23 08:51:00 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-23 08:51:00 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-23 08:51:00 -<==      Total: 0
2019-05-23 08:51:00 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-23 08:51:00 -==> Parameters: 1(Long), 0(String)
2019-05-23 08:51:00 -<==      Total: 1
2019-05-23 08:51:00 -耗时 : 48
2019-05-23 08:51:00 -返回值 : com.bootdo.common.utils.PageUtils@7f930310
2019-05-23 08:51:01 -请求地址 : http://localhost:8081/main
2019-05-23 08:51:01 -HTTP METHOD : GET
2019-05-23 08:51:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-23 08:51:01 -参数 : []
2019-05-23 08:51:01 -耗时 : 0
2019-05-23 08:51:01 -返回值 : main
2019-05-23 08:52:08 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-23 08:52:08 -==> Parameters: 1(Long)
2019-05-23 08:52:08 -<==      Total: 93
2019-05-23 08:52:08 -请求地址 : http://localhost:8081/charts/countRun
2019-05-23 08:52:08 -HTTP METHOD : GET
2019-05-23 08:52:08 -CLASS_METHOD : com.bootdo.charts.controller.countRunController.countRun
2019-05-23 08:52:08 -参数 : []
2019-05-23 08:52:08 -耗时 : 1
2019-05-23 08:52:08 -返回值 : charts/countRun
2019-05-23 08:52:09 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-23 08:52:09 -HTTP METHOD : GET
2019-05-23 08:52:09 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-23 08:52:09 -参数 : [userType]
2019-05-23 08:52:09 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-23 08:52:09 -==> Parameters: userType(String)
2019-05-23 08:52:09 -<==      Total: 4
2019-05-23 08:52:09 -耗时 : 40
2019-05-23 08:52:09 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-23 08:52:16 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-23 08:52:16 -HTTP METHOD : GET
2019-05-23 08:52:16 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-23 08:52:16 -参数 : []
2019-05-23 08:52:16 -耗时 : 0
2019-05-23 08:52:16 -返回值 : system/dept/deptTree
2019-05-23 08:52:17 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-23 08:52:17 -HTTP METHOD : GET
2019-05-23 08:52:17 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-23 08:52:17 -参数 : []
2019-05-23 08:52:17 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-23 08:52:17 -==> Parameters: 
2019-05-23 08:52:17 -<==      Total: 3
2019-05-23 08:52:17 -耗时 : 26
2019-05-23 08:52:17 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-23 08:52:39 -请求地址 : http://localhost:8081/charts/countRun/getCountRun
2019-05-23 08:52:39 -HTTP METHOD : POST
2019-05-23 08:52:39 -CLASS_METHOD : com.bootdo.charts.controller.countRunController.getCountRun
2019-05-23 08:52:39 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@48d3bfed, com.bootdo.moneyLog.vo.WaterLogVo@7e2ff3d9, com.bootdo.moneyLog.vo.HeatLogVo@742f5dbe]
2019-05-23 08:52:39 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("?","-01") and user_org = ? 
2019-05-23 08:52:39 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-23 08:52:39 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/countRun/getCountRun(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).(String), null, 2019-05-23 08:52:39.935(Timestamp)
2019-05-23 08:52:39 -nested exception is org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:167)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:82)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy102.Count1ElecLog(Unknown Source)
	at com.bootdo.moneyLog.service.impl.ElecLogServiceImpl.Count1ElecLog(ElecLogServiceImpl.java:267)
	at com.bootdo.charts.controller.countRunController.getCountRun(countRunController.java:59)
	at com.bootdo.charts.controller.countRunController$$FastClassBySpringCGLIB$$3384ead5.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.countRunController$$EnhancerBySpringCGLIB$$671b9b04.getCountRun(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
	at org.apache.ibatis.scripting.defaults.DefaultParameterHandler.setParameters(DefaultParameterHandler.java:89)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.parameterize(PreparedStatementHandler.java:93)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.parameterize(RoutingStatementHandler.java:64)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:86)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:77)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 100 common frames omitted
Caused by: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
	at org.apache.ibatis.type.BaseTypeHandler.setParameter(BaseTypeHandler.java:55)
	at org.apache.ibatis.scripting.defaults.DefaultParameterHandler.setParameters(DefaultParameterHandler.java:87)
	... 116 common frames omitted
Caused by: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.PreparedStatement.checkBounds(PreparedStatement.java:3327)
	at com.mysql.jdbc.PreparedStatement.setInternal(PreparedStatement.java:3312)
	at com.mysql.jdbc.PreparedStatement.setString(PreparedStatement.java:4027)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2823)
	at com.alibaba.druid.filter.FilterAdapter.preparedStatement_setString(FilterAdapter.java:1340)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2820)
	at com.alibaba.druid.filter.FilterAdapter.preparedStatement_setString(FilterAdapter.java:1340)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2820)
	at com.alibaba.druid.filter.FilterAdapter.preparedStatement_setString(FilterAdapter.java:1340)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2820)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.setString(PreparedStatementProxyImpl.java:560)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.setString(DruidPooledPreparedStatement.java:365)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:67)
	at com.sun.proxy.$Proxy173.setString(Unknown Source)
	at org.apache.ibatis.type.StringTypeHandler.setNonNullParameter(StringTypeHandler.java:31)
	at org.apache.ibatis.type.StringTypeHandler.setNonNullParameter(StringTypeHandler.java:26)
	at org.apache.ibatis.type.BaseTypeHandler.setParameter(BaseTypeHandler.java:53)
	... 117 common frames omitted
2019-05-23 08:52:39 -<==    Updates: 1
2019-05-23 08:55:16 -请求地址 : http://localhost:8081/charts/countRun/exportRun
2019-05-23 08:55:16 -HTTP METHOD : GET
2019-05-23 08:55:16 -CLASS_METHOD : com.bootdo.charts.controller.countRunController.exportRun
2019-05-23 08:55:16 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@1a33088a, com.bootdo.moneyLog.vo.HeatLogVo@1ce19ee4, com.bootdo.moneyLog.vo.WaterLogVo@57325493, org.apache.shiro.web.servlet.ShiroHttpServletResponse@2c023cd9]
2019-05-23 08:55:16 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE `create_time` LIKE CONCAT('%',?,'%') and user_org = ? order by create_time asc 
2019-05-23 08:55:16 -==> Parameters: 2019(String), 2(String)
2019-05-23 08:55:16 -<==      Total: 23
2019-05-23 08:55:16 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log WHERE `create_time` LIKE CONCAT('%',?,'%') and user_org = ? order by create_time asc 
2019-05-23 08:55:16 -==> Parameters: 2019(String), 2(String)
2019-05-23 08:55:16 -<==      Total: 9
2019-05-23 08:55:16 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log WHERE `create_time` LIKE `?%` and user_org = ? 
2019-05-23 08:55:16 -耗时 : 715
2019-05-23 08:55:16 -返回值 : null
2019-05-23 08:59:40 -请求地址 : http://localhost:8081/charts/countOwe
2019-05-23 08:59:40 -HTTP METHOD : GET
2019-05-23 08:59:40 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.countOwe
2019-05-23 08:59:40 -参数 : []
2019-05-23 08:59:40 -耗时 : 0
2019-05-23 08:59:40 -返回值 : charts/countOwe
2019-05-23 08:59:40 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-23 08:59:40 -HTTP METHOD : GET
2019-05-23 08:59:40 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-23 08:59:40 -参数 : [userType]
2019-05-23 08:59:40 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-23 08:59:40 -==> Parameters: userType(String)
2019-05-23 08:59:40 -<==      Total: 4
2019-05-23 08:59:40 -耗时 : 6
2019-05-23 08:59:40 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-23 08:59:46 -请求地址 : http://localhost:8081/index
2019-05-23 08:59:46 -HTTP METHOD : GET
2019-05-23 08:59:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-23 08:59:46 -参数 : [{}]
2019-05-23 08:59:46 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-23 08:59:46 -==> Parameters: 1(Long)
2019-05-23 08:59:46 -<==      Total: 49
2019-05-23 08:59:46 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-23 08:59:46 -==> Parameters: 138(Long)
2019-05-23 08:59:46 -<==      Total: 1
2019-05-23 08:59:46 -耗时 : 27
2019-05-23 08:59:46 -返回值 : index_v1
2019-05-23 08:59:46 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-23 08:59:46 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 28(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-23 08:59:46.608(Timestamp)
2019-05-23 08:59:46 -<==    Updates: 1
2019-05-23 08:59:46 -请求地址 : http://localhost:8081/main
2019-05-23 08:59:46 -HTTP METHOD : GET
2019-05-23 08:59:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-23 08:59:46 -参数 : []
2019-05-23 08:59:46 -耗时 : 0
2019-05-23 08:59:46 -返回值 : main
2019-05-23 08:59:46 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-23 08:59:46 -HTTP METHOD : GET
2019-05-23 08:59:46 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-23 08:59:46 -参数 : []
2019-05-23 08:59:46 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-23 08:59:46 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-23 08:59:46 -<==      Total: 0
2019-05-23 08:59:46 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-23 08:59:46 -==> Parameters: 1(Long), 0(String)
2019-05-23 08:59:46 -<==      Total: 1
2019-05-23 08:59:46 -耗时 : 8
2019-05-23 08:59:46 -返回值 : com.bootdo.common.utils.PageUtils@2b64a72c
2019-05-23 08:59:46 -请求地址 : http://localhost:8081/main
2019-05-23 08:59:46 -HTTP METHOD : GET
2019-05-23 08:59:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-23 08:59:46 -参数 : []
2019-05-23 08:59:46 -耗时 : 0
2019-05-23 08:59:46 -返回值 : main
2019-05-23 08:59:49 -请求地址 : http://localhost:8081/charts/countRun
2019-05-23 08:59:49 -HTTP METHOD : GET
2019-05-23 08:59:49 -CLASS_METHOD : com.bootdo.charts.controller.countRunController.countRun
2019-05-23 08:59:49 -参数 : []
2019-05-23 08:59:49 -耗时 : 1
2019-05-23 08:59:49 -返回值 : charts/countRun
2019-05-23 08:59:49 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-23 08:59:49 -HTTP METHOD : GET
2019-05-23 08:59:49 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-23 08:59:49 -参数 : [userType]
2019-05-23 08:59:49 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-23 08:59:49 -==> Parameters: userType(String)
2019-05-23 08:59:49 -<==      Total: 4
2019-05-23 08:59:49 -耗时 : 6
2019-05-23 08:59:49 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-23 08:59:57 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-23 08:59:57 -HTTP METHOD : GET
2019-05-23 08:59:57 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-23 08:59:57 -参数 : []
2019-05-23 08:59:57 -耗时 : 0
2019-05-23 08:59:57 -返回值 : system/dept/deptTree
2019-05-23 08:59:57 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-23 08:59:57 -HTTP METHOD : GET
2019-05-23 08:59:57 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-23 08:59:57 -参数 : []
2019-05-23 08:59:57 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-23 08:59:57 -==> Parameters: 
2019-05-23 08:59:57 -<==      Total: 3
2019-05-23 08:59:57 -耗时 : 4
2019-05-23 08:59:57 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-23 08:59:59 -请求地址 : http://localhost:8081/charts/countRun/exportRun
2019-05-23 08:59:59 -HTTP METHOD : GET
2019-05-23 08:59:59 -CLASS_METHOD : com.bootdo.charts.controller.countRunController.exportRun
2019-05-23 08:59:59 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@656663ba, com.bootdo.moneyLog.vo.HeatLogVo@701db86c, com.bootdo.moneyLog.vo.WaterLogVo@629bf502, org.apache.shiro.web.servlet.ShiroHttpServletResponse@264bb1aa]
2019-05-23 08:59:59 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE `create_time` LIKE CONCAT('%',?,'%') and user_org = ? order by create_time asc 
2019-05-23 08:59:59 -==> Parameters: 2019(String), 2(String)
2019-05-23 08:59:59 -<==      Total: 23
2019-05-23 08:59:59 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log WHERE `create_time` LIKE CONCAT('%',?,'%') and user_org = ? order by create_time asc 
2019-05-23 08:59:59 -==> Parameters: 2019(String), 2(String)
2019-05-23 08:59:59 -<==      Total: 9
2019-05-23 08:59:59 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log WHERE `create_time` LIKE `?%` and user_org = ? 
2019-05-23 08:59:59 -耗时 : 52
2019-05-23 08:59:59 -返回值 : null
2019-05-23 09:00:13 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:20)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:23)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:424)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:232)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-23 09:09:01 -Starting BootdoApplication on PC-201905091110 with PID 17496 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-23 09:09:01 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-23 09:09:01 -The following profiles are active: dev
2019-05-23 09:09:02 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Thu May 23 09:09:02 CST 2019]; root of context hierarchy
2019-05-23 09:09:05 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-23 09:09:08 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d159fff6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 09:09:08 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$c3b32e9d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 09:09:09 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 09:09:09 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 09:09:10 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 09:09:10 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-23 09:09:10 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-23 09:09:10 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 09:09:10 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 09:09:10 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 09:09:10 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 09:09:11 -Tomcat initialized with port(s): 8081 (http)
2019-05-23 09:09:11 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-23 09:09:11 -Starting service [Tomcat]
2019-05-23 09:09:11 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-23 09:09:11 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-23 09:09:11 -Initializing Spring embedded WebApplicationContext
2019-05-23 09:09:11 -Root WebApplicationContext: initialization completed in 9522 ms
2019-05-23 09:09:12 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-23 09:09:12 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-23 09:09:12 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-23 09:09:12 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-23 09:09:12 -Filter xssFilter was not registered (disabled)
2019-05-23 09:09:12 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-23 09:09:12 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-23 09:09:12 -Servlet statViewServlet mapped to [/druid/*]
2019-05-23 09:09:12 -Servlet dispatcherServlet mapped to [/]
2019-05-23 09:09:17 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Thu May 23 09:09:02 CST 2019]; root of context hierarchy
2019-05-23 09:09:18 -Using default implementation for ThreadExecutor
2019-05-23 09:09:18 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-23 09:09:18 -Quartz Scheduler v.2.2.1 created.
2019-05-23 09:09:18 -RAMJobStore initialized.
2019-05-23 09:09:18 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-23 09:09:18 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-23 09:09:18 -Quartz scheduler version: 2.2.1
2019-05-23 09:09:18 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@60928a61
2019-05-23 09:09:19 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-23 09:09:19 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-23 09:09:22 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-23 09:09:22 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-23 09:09:22 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 09:09:22 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 09:09:22 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-23 09:09:22 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-23 09:09:22 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-23 09:09:22 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-23 09:09:22 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-23 09:09:22 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-23 09:09:22 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-23 09:09:22 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 09:09:22 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-23 09:09:22 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 09:09:22 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-23 09:09:22 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-23 09:09:22 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 09:09:22 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-23 09:09:22 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-23 09:09:22 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-23 09:09:22 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 09:09:22 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-23 09:09:22 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-23 09:09:22 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 09:09:22 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-23 09:09:22 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-23 09:09:22 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 09:09:22 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 09:09:22 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-23 09:09:22 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-23 09:09:22 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-23 09:09:22 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-23 09:09:22 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 09:09:22 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 09:09:22 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-23 09:09:22 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-23 09:09:22 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-23 09:09:22 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-23 09:09:22 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-23 09:09:22 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-23 09:09:22 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 09:09:22 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-23 09:09:22 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-23 09:09:22 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-23 09:09:22 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-23 09:09:22 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-23 09:09:22 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 09:09:22 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-23 09:09:22 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-23 09:09:22 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-23 09:09:22 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-23 09:09:22 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 09:09:22 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-23 09:09:22 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-23 09:09:22 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 09:09:22 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-23 09:09:22 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-23 09:09:22 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 09:09:22 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-23 09:09:22 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-23 09:09:22 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-23 09:09:22 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-23 09:09:22 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-23 09:09:22 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-23 09:09:22 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-23 09:09:22 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-23 09:09:22 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-23 09:09:22 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 09:09:22 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-23 09:09:22 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-23 09:09:22 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 09:09:22 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-23 09:09:22 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-23 09:09:22 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-23 09:09:22 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-23 09:09:22 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 09:09:22 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-23 09:09:22 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-23 09:09:22 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-23 09:09:22 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-23 09:09:22 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-23 09:09:22 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-23 09:09:22 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-23 09:09:22 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-23 09:09:22 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-23 09:09:22 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-23 09:09:22 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-23 09:09:22 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 09:09:22 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-23 09:09:22 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-23 09:09:22 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-23 09:09:22 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-23 09:09:22 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-23 09:09:22 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-23 09:09:22 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-23 09:09:22 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-23 09:09:22 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-23 09:09:22 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 09:09:22 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-23 09:09:22 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 09:09:22 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-23 09:09:22 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-23 09:09:22 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-23 09:09:22 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-23 09:09:22 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-23 09:09:22 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-23 09:09:22 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-23 09:09:22 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-23 09:09:22 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 09:09:22 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-23 09:09:22 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-23 09:09:22 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-23 09:09:22 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-23 09:09:22 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-23 09:09:22 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-23 09:09:22 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-23 09:09:22 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-23 09:09:22 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-23 09:09:22 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-23 09:09:22 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-23 09:09:22 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 09:09:22 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-23 09:09:22 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 09:09:22 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-23 09:09:22 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-23 09:09:22 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-23 09:09:22 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-23 09:09:22 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-23 09:09:22 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-23 09:09:22 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-23 09:09:22 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-23 09:09:22 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-23 09:09:22 -Mapped "{[/moneyList/moneyList/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 09:09:22 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-23 09:09:22 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-23 09:09:22 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-23 09:09:22 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-23 09:09:22 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 09:09:22 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-23 09:09:22 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-23 09:09:22 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-23 09:09:22 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 09:09:22 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-23 09:09:22 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-23 09:09:22 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-23 09:09:22 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-23 09:09:22 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 09:09:22 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-23 09:09:22 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-23 09:09:22 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-23 09:09:22 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 09:09:22 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-23 09:09:22 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-23 09:09:22 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-23 09:09:22 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-23 09:09:22 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 09:09:22 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-23 09:09:22 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-23 09:09:22 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-23 09:09:22 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 09:09:22 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-23 09:09:22 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-23 09:09:22 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-23 09:09:22 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-23 09:09:22 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-23 09:09:22 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 09:09:22 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-23 09:09:22 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-23 09:09:22 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 09:09:22 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-23 09:09:22 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-23 09:09:22 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 09:09:22 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-23 09:09:22 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-23 09:09:22 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-05-23 09:09:22 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-23 09:09:22 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 09:09:22 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-23 09:09:22 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-23 09:09:22 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-23 09:09:22 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 09:09:22 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-23 09:09:22 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 09:09:22 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-23 09:09:22 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-23 09:09:22 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-23 09:09:22 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-23 09:09:22 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-23 09:09:22 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-23 09:09:22 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-23 09:09:22 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-23 09:09:22 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-23 09:09:22 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 09:09:22 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-23 09:09:22 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-23 09:09:22 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-23 09:09:22 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-23 09:09:22 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-23 09:09:22 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-23 09:09:22 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-23 09:09:22 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-23 09:09:22 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-23 09:09:22 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-23 09:09:22 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 09:09:22 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-23 09:09:22 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-23 09:09:22 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-23 09:09:22 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-23 09:09:22 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-23 09:09:22 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-23 09:09:22 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-23 09:09:22 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-23 09:09:22 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-23 09:09:22 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-23 09:09:22 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-23 09:09:22 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-23 09:09:22 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 09:09:22 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-23 09:09:22 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-23 09:09:22 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-23 09:09:22 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-23 09:09:22 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 09:09:22 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-23 09:09:22 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-23 09:09:22 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-23 09:09:22 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 09:09:22 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-23 09:09:22 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-23 09:09:22 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-23 09:09:22 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-23 09:09:22 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-23 09:09:22 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-23 09:09:22 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-23 09:09:22 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-23 09:09:22 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-23 09:09:22 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-23 09:09:22 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-23 09:09:22 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-23 09:09:22 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-23 09:09:22 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-23 09:09:22 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-23 09:09:22 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-23 09:09:22 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-23 09:09:22 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 09:09:22 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-23 09:09:22 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-23 09:09:22 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 09:09:22 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-23 09:09:22 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-23 09:09:22 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-23 09:09:22 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-23 09:09:22 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-23 09:09:22 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-23 09:09:22 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-23 09:09:22 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-23 09:09:22 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 09:09:22 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-23 09:09:22 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 09:09:22 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-23 09:09:22 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-23 09:09:22 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-23 09:09:22 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-23 09:09:22 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-23 09:09:22 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-23 09:09:22 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-23 09:09:22 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-23 09:09:22 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-23 09:09:23 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-23 09:09:23 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-23 09:09:23 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-23 09:09:24 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-23 09:09:24 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Thu May 23 09:09:02 CST 2019]; root of context hierarchy
2019-05-23 09:09:24 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-23 09:09:24 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-23 09:09:24 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-23 09:09:24 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-23 09:09:25 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-23 09:09:26 -Registering beans for JMX exposure on startup
2019-05-23 09:09:27 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-23 09:09:27 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-23 09:09:27 -Starting beans in phase 2147483647
2019-05-23 09:09:27 -Context refreshed
2019-05-23 09:09:27 -Found 1 custom documentation plugin(s)
2019-05-23 09:09:27 -Scanning for api listing references
2019-05-23 09:09:27 -Generating unique operation named: getCountDUsingPOST_1
2019-05-23 09:09:27 -Generating unique operation named: removeUsingPOST_1
2019-05-23 09:09:27 -Generating unique operation named: addUsingGET_1
2019-05-23 09:09:27 -Generating unique operation named: editUsingGET_1
2019-05-23 09:09:27 -Generating unique operation named: listUsingGET_1
2019-05-23 09:09:27 -Generating unique operation named: removeUsingPOST_2
2019-05-23 09:09:27 -Generating unique operation named: removeUsingPOST_3
2019-05-23 09:09:27 -Generating unique operation named: saveUsingPOST_1
2019-05-23 09:09:27 -Generating unique operation named: updateUsingGET_1
2019-05-23 09:09:27 -Generating unique operation named: updateUsingHEAD_1
2019-05-23 09:09:27 -Generating unique operation named: updateUsingPOST_1
2019-05-23 09:09:27 -Generating unique operation named: updateUsingPUT_1
2019-05-23 09:09:27 -Generating unique operation named: updateUsingPATCH_1
2019-05-23 09:09:27 -Generating unique operation named: updateUsingDELETE_1
2019-05-23 09:09:27 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-23 09:09:27 -Generating unique operation named: updateUsingTRACE_1
2019-05-23 09:09:27 -Generating unique operation named: addUsingGET_2
2019-05-23 09:09:27 -Generating unique operation named: editUsingGET_2
2019-05-23 09:09:27 -Generating unique operation named: listUsingGET_2
2019-05-23 09:09:27 -Generating unique operation named: removeUsingPOST_4
2019-05-23 09:09:27 -Generating unique operation named: removeUsingPOST_5
2019-05-23 09:09:27 -Generating unique operation named: saveUsingPOST_2
2019-05-23 09:09:27 -Generating unique operation named: updateUsingPOST_2
2019-05-23 09:09:28 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-23 09:09:28 -Generating unique operation named: addUsingGET_3
2019-05-23 09:09:28 -Generating unique operation named: editUsingGET_3
2019-05-23 09:09:28 -Generating unique operation named: listUsingGET_3
2019-05-23 09:09:28 -Generating unique operation named: removeUsingPOST_6
2019-05-23 09:09:28 -Generating unique operation named: removeUsingPOST_7
2019-05-23 09:09:28 -Generating unique operation named: saveUsingPOST_3
2019-05-23 09:09:28 -Generating unique operation named: updateUsingGET_2
2019-05-23 09:09:28 -Generating unique operation named: updateUsingHEAD_2
2019-05-23 09:09:28 -Generating unique operation named: updateUsingPOST_3
2019-05-23 09:09:28 -Generating unique operation named: updateUsingPUT_2
2019-05-23 09:09:28 -Generating unique operation named: updateUsingPATCH_2
2019-05-23 09:09:28 -Generating unique operation named: updateUsingDELETE_2
2019-05-23 09:09:28 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-23 09:09:28 -Generating unique operation named: updateUsingTRACE_2
2019-05-23 09:09:28 -Generating unique operation named: addUsingGET_4
2019-05-23 09:09:28 -Generating unique operation named: editUsingGET_4
2019-05-23 09:09:28 -Generating unique operation named: listUsingGET_4
2019-05-23 09:09:28 -Generating unique operation named: removeUsingPOST_8
2019-05-23 09:09:28 -Generating unique operation named: removeUsingPOST_9
2019-05-23 09:09:28 -Generating unique operation named: saveUsingPOST_4
2019-05-23 09:09:28 -Generating unique operation named: updateUsingGET_3
2019-05-23 09:09:28 -Generating unique operation named: updateUsingHEAD_3
2019-05-23 09:09:28 -Generating unique operation named: updateUsingPOST_4
2019-05-23 09:09:28 -Generating unique operation named: updateUsingPUT_3
2019-05-23 09:09:28 -Generating unique operation named: updateUsingPATCH_3
2019-05-23 09:09:28 -Generating unique operation named: updateUsingDELETE_3
2019-05-23 09:09:28 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-23 09:09:28 -Generating unique operation named: updateUsingTRACE_3
2019-05-23 09:09:28 -Generating unique operation named: ElecUsingGET_1
2019-05-23 09:09:28 -Generating unique operation named: addUsingGET_5
2019-05-23 09:09:28 -Generating unique operation named: editUsingGET_5
2019-05-23 09:09:28 -Generating unique operation named: listUsingGET_5
2019-05-23 09:09:28 -Generating unique operation named: removeUsingPOST_10
2019-05-23 09:09:28 -Generating unique operation named: removeUsingPOST_11
2019-05-23 09:09:28 -Generating unique operation named: saveUsingPOST_5
2019-05-23 09:09:28 -Generating unique operation named: updateUsingGET_4
2019-05-23 09:09:28 -Generating unique operation named: updateUsingHEAD_4
2019-05-23 09:09:28 -Generating unique operation named: updateUsingPOST_5
2019-05-23 09:09:28 -Generating unique operation named: updateUsingPUT_4
2019-05-23 09:09:28 -Generating unique operation named: updateUsingPATCH_4
2019-05-23 09:09:28 -Generating unique operation named: updateUsingDELETE_4
2019-05-23 09:09:28 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-23 09:09:28 -Generating unique operation named: updateUsingTRACE_4
2019-05-23 09:09:28 -Generating unique operation named: editUsingGET_6
2019-05-23 09:09:28 -Generating unique operation named: listUsingGET_6
2019-05-23 09:09:28 -Generating unique operation named: updateUsingPOST_6
2019-05-23 09:09:28 -Generating unique operation named: addUsingGET_6
2019-05-23 09:09:28 -Generating unique operation named: editUsingGET_7
2019-05-23 09:09:28 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-23 09:09:28 -Generating unique operation named: listUsingGET_7
2019-05-23 09:09:28 -Generating unique operation named: removeUsingPOST_12
2019-05-23 09:09:28 -Generating unique operation named: removeUsingPOST_13
2019-05-23 09:09:28 -Generating unique operation named: saveUsingPOST_6
2019-05-23 09:09:28 -Generating unique operation named: updateUsingGET_5
2019-05-23 09:09:28 -Generating unique operation named: updateUsingHEAD_5
2019-05-23 09:09:28 -Generating unique operation named: updateUsingPOST_7
2019-05-23 09:09:28 -Generating unique operation named: updateUsingPUT_5
2019-05-23 09:09:28 -Generating unique operation named: updateUsingPATCH_5
2019-05-23 09:09:28 -Generating unique operation named: updateUsingDELETE_5
2019-05-23 09:09:28 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-23 09:09:28 -Generating unique operation named: updateUsingTRACE_5
2019-05-23 09:09:28 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-23 09:09:28 -Generating unique operation named: addUsingGET_7
2019-05-23 09:09:28 -Generating unique operation named: editUsingGET_8
2019-05-23 09:09:28 -Generating unique operation named: listUsingGET_8
2019-05-23 09:09:28 -Generating unique operation named: removeUsingPOST_14
2019-05-23 09:09:28 -Generating unique operation named: removeUsingPOST_15
2019-05-23 09:09:28 -Generating unique operation named: saveUsingPOST_7
2019-05-23 09:09:28 -Generating unique operation named: updateUsingGET_6
2019-05-23 09:09:28 -Generating unique operation named: updateUsingHEAD_6
2019-05-23 09:09:28 -Generating unique operation named: updateUsingPOST_8
2019-05-23 09:09:28 -Generating unique operation named: updateUsingPUT_6
2019-05-23 09:09:28 -Generating unique operation named: updateUsingPATCH_6
2019-05-23 09:09:28 -Generating unique operation named: updateUsingDELETE_6
2019-05-23 09:09:28 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-23 09:09:28 -Generating unique operation named: updateUsingTRACE_6
2019-05-23 09:09:28 -Generating unique operation named: addUsingGET_8
2019-05-23 09:09:28 -Generating unique operation named: editUsingGET_9
2019-05-23 09:09:28 -Generating unique operation named: listUsingGET_9
2019-05-23 09:09:28 -Generating unique operation named: removeUsingPOST_16
2019-05-23 09:09:28 -Generating unique operation named: removeUsingPOST_17
2019-05-23 09:09:28 -Generating unique operation named: saveUsingPOST_8
2019-05-23 09:09:28 -Generating unique operation named: updateUsingGET_7
2019-05-23 09:09:28 -Generating unique operation named: updateUsingHEAD_7
2019-05-23 09:09:28 -Generating unique operation named: updateUsingPOST_9
2019-05-23 09:09:28 -Generating unique operation named: updateUsingPUT_7
2019-05-23 09:09:28 -Generating unique operation named: updateUsingPATCH_7
2019-05-23 09:09:28 -Generating unique operation named: updateUsingDELETE_7
2019-05-23 09:09:28 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-23 09:09:28 -Generating unique operation named: updateUsingTRACE_7
2019-05-23 09:09:28 -Generating unique operation named: addUsingGET_9
2019-05-23 09:09:28 -Generating unique operation named: editUsingGET_10
2019-05-23 09:09:28 -Generating unique operation named: infoUsingGET_1
2019-05-23 09:09:28 -Generating unique operation named: infoUsingHEAD_1
2019-05-23 09:09:28 -Generating unique operation named: infoUsingPOST_1
2019-05-23 09:09:28 -Generating unique operation named: infoUsingPUT_1
2019-05-23 09:09:28 -Generating unique operation named: infoUsingPATCH_1
2019-05-23 09:09:28 -Generating unique operation named: infoUsingDELETE_1
2019-05-23 09:09:28 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-23 09:09:28 -Generating unique operation named: infoUsingTRACE_1
2019-05-23 09:09:28 -Generating unique operation named: listUsingGET_10
2019-05-23 09:09:28 -Generating unique operation named: removeUsingPOST_18
2019-05-23 09:09:28 -Generating unique operation named: removeUsingPOST_19
2019-05-23 09:09:28 -Generating unique operation named: saveUsingPOST_9
2019-05-23 09:09:28 -Generating unique operation named: updateUsingPOST_10
2019-05-23 09:09:28 -Generating unique operation named: listUsingGET_11
2019-05-23 09:09:28 -Generating unique operation named: removeUsingPOST_20
2019-05-23 09:09:28 -Generating unique operation named: welcomeUsingGET_1
2019-05-23 09:09:28 -Generating unique operation named: addUsingGET_10
2019-05-23 09:09:28 -Generating unique operation named: editUsingGET_11
2019-05-23 09:09:28 -Generating unique operation named: listUsingGET_12
2019-05-23 09:09:29 -Generating unique operation named: removeUsingPOST_21
2019-05-23 09:09:29 -Generating unique operation named: saveUsingPOST_10
2019-05-23 09:09:29 -Generating unique operation named: treeUsingGET_1
2019-05-23 09:09:29 -Generating unique operation named: treeUsingGET_2
2019-05-23 09:09:29 -Generating unique operation named: updateUsingPOST_11
2019-05-23 09:09:29 -Generating unique operation named: editUsingGET_12
2019-05-23 09:09:29 -Generating unique operation named: addUsingGET_11
2019-05-23 09:09:29 -Generating unique operation named: editUsingGET_13
2019-05-23 09:09:29 -Generating unique operation named: listUsingGET_13
2019-05-23 09:09:29 -Generating unique operation named: removeUsingPOST_22
2019-05-23 09:09:29 -Generating unique operation named: removeUsingPOST_23
2019-05-23 09:09:29 -Generating unique operation named: saveUsingPOST_11
2019-05-23 09:09:29 -Generating unique operation named: updateUsingGET_8
2019-05-23 09:09:29 -Generating unique operation named: updateUsingHEAD_8
2019-05-23 09:09:29 -Generating unique operation named: updateUsingPOST_12
2019-05-23 09:09:29 -Generating unique operation named: updateUsingPUT_8
2019-05-23 09:09:29 -Generating unique operation named: updateUsingPATCH_8
2019-05-23 09:09:29 -Generating unique operation named: updateUsingDELETE_8
2019-05-23 09:09:29 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-23 09:09:29 -Generating unique operation named: updateUsingTRACE_8
2019-05-23 09:09:29 -Generating unique operation named: addUsingGET_12
2019-05-23 09:09:29 -Generating unique operation named: editUsingGET_14
2019-05-23 09:09:29 -Generating unique operation named: listUsingGET_14
2019-05-23 09:09:29 -Generating unique operation named: removeUsingPOST_24
2019-05-23 09:09:29 -Generating unique operation named: removeUsingPOST_25
2019-05-23 09:09:29 -Generating unique operation named: saveUsingPOST_12
2019-05-23 09:09:29 -Generating unique operation named: updateUsingGET_9
2019-05-23 09:09:29 -Generating unique operation named: updateUsingHEAD_9
2019-05-23 09:09:29 -Generating unique operation named: updateUsingPOST_13
2019-05-23 09:09:29 -Generating unique operation named: updateUsingPUT_9
2019-05-23 09:09:29 -Generating unique operation named: updateUsingPATCH_9
2019-05-23 09:09:29 -Generating unique operation named: updateUsingDELETE_9
2019-05-23 09:09:29 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-23 09:09:29 -Generating unique operation named: updateUsingTRACE_9
2019-05-23 09:09:29 -Generating unique operation named: addUsingGET_13
2019-05-23 09:09:29 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-23 09:09:29 -Generating unique operation named: editUsingGET_15
2019-05-23 09:09:29 -Generating unique operation named: listUsingGET_15
2019-05-23 09:09:29 -Generating unique operation named: saveUsingPOST_13
2019-05-23 09:09:29 -Generating unique operation named: saveUsingPOST_14
2019-05-23 09:09:29 -Generating unique operation named: updateUsingPOST_14
2019-05-23 09:09:29 -Generating unique operation named: listUsingGET_16
2019-05-23 09:09:29 -Generating unique operation named: listUsingHEAD_1
2019-05-23 09:09:29 -Generating unique operation named: listUsingPOST_1
2019-05-23 09:09:29 -Generating unique operation named: listUsingPUT_1
2019-05-23 09:09:29 -Generating unique operation named: listUsingPATCH_1
2019-05-23 09:09:29 -Generating unique operation named: listUsingDELETE_1
2019-05-23 09:09:29 -Generating unique operation named: listUsingOPTIONS_1
2019-05-23 09:09:29 -Generating unique operation named: listUsingTRACE_1
2019-05-23 09:09:29 -Generating unique operation named: countDDUsingGET_1
2019-05-23 09:09:29 -Generating unique operation named: exportDDUsingGET_1
2019-05-23 09:09:29 -Generating unique operation named: addUsingGET_14
2019-05-23 09:09:29 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-23 09:09:29 -Generating unique operation named: editUsingGET_16
2019-05-23 09:09:29 -Generating unique operation named: listUsingGET_17
2019-05-23 09:09:29 -Generating unique operation named: removeUsingPOST_26
2019-05-23 09:09:29 -Generating unique operation named: saveUsingPOST_15
2019-05-23 09:09:29 -Generating unique operation named: treeUsingGET_3
2019-05-23 09:09:29 -Generating unique operation named: treeViewUsingGET_1
2019-05-23 09:09:29 -Generating unique operation named: updateUsingPOST_15
2019-05-23 09:09:29 -Generating unique operation named: addUsingGET_15
2019-05-23 09:09:29 -Generating unique operation named: editUsingGET_17
2019-05-23 09:09:29 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-23 09:09:29 -Generating unique operation named: listUsingGET_18
2019-05-23 09:09:29 -Generating unique operation named: removeUsingPOST_27
2019-05-23 09:09:29 -Generating unique operation named: removeUsingPOST_28
2019-05-23 09:09:29 -Generating unique operation named: saveUsingPOST_16
2019-05-23 09:09:29 -Generating unique operation named: updateUsingGET_10
2019-05-23 09:09:29 -Generating unique operation named: updateUsingHEAD_10
2019-05-23 09:09:29 -Generating unique operation named: updateUsingPOST_16
2019-05-23 09:09:29 -Generating unique operation named: updateUsingPUT_10
2019-05-23 09:09:29 -Generating unique operation named: updateUsingPATCH_10
2019-05-23 09:09:29 -Generating unique operation named: updateUsingDELETE_10
2019-05-23 09:09:29 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-23 09:09:29 -Generating unique operation named: updateUsingTRACE_10
2019-05-23 09:09:29 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-23 09:09:29 -Generating unique operation named: addUsingGET_16
2019-05-23 09:09:29 -Generating unique operation named: editUsingGET_18
2019-05-23 09:09:29 -Generating unique operation named: listUsingGET_19
2019-05-23 09:09:29 -Generating unique operation named: removeUsingPOST_29
2019-05-23 09:09:29 -Generating unique operation named: removeUsingPOST_30
2019-05-23 09:09:29 -Generating unique operation named: saveUsingPOST_17
2019-05-23 09:09:29 -Generating unique operation named: updateUsingGET_11
2019-05-23 09:09:29 -Generating unique operation named: updateUsingHEAD_11
2019-05-23 09:09:29 -Generating unique operation named: updateUsingPOST_17
2019-05-23 09:09:29 -Generating unique operation named: updateUsingPUT_11
2019-05-23 09:09:29 -Generating unique operation named: updateUsingPATCH_11
2019-05-23 09:09:29 -Generating unique operation named: updateUsingDELETE_11
2019-05-23 09:09:29 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-23 09:09:29 -Generating unique operation named: updateUsingTRACE_11
2019-05-23 09:09:29 -Generating unique operation named: addUsingGET_17
2019-05-23 09:09:29 -Generating unique operation named: editUsingGET_19
2019-05-23 09:09:29 -Generating unique operation named: listUsingGET_20
2019-05-23 09:09:29 -Generating unique operation named: removeUsingPOST_31
2019-05-23 09:09:29 -Generating unique operation named: removeUsingPOST_32
2019-05-23 09:09:29 -Generating unique operation named: saveUsingPOST_18
2019-05-23 09:09:29 -Generating unique operation named: updateUsingGET_12
2019-05-23 09:09:29 -Generating unique operation named: updateUsingHEAD_12
2019-05-23 09:09:29 -Generating unique operation named: updateUsingPOST_18
2019-05-23 09:09:29 -Generating unique operation named: updateUsingPUT_12
2019-05-23 09:09:29 -Generating unique operation named: updateUsingPATCH_12
2019-05-23 09:09:29 -Generating unique operation named: updateUsingDELETE_12
2019-05-23 09:09:29 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-23 09:09:29 -Generating unique operation named: updateUsingTRACE_12
2019-05-23 09:09:29 -Starting Quartz Scheduler now
2019-05-23 09:09:29 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-23 09:09:29 -Starting...
2019-05-23 09:09:29 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-23 09:09:29 -Started.
2019-05-23 09:09:30 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-23 09:09:30 -Using a shared selector for servlet write/read
2019-05-23 09:09:30 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-23 09:09:30 -Started BootdoApplication in 29.236 seconds (JVM running for 30.036)
2019-05-23 09:09:30 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-23 09:09:30 -==> Parameters: 
2019-05-23 09:09:30 -<==      Total: 1
2019-05-23 09:09:36 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-23 09:09:36 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-23 09:09:36 -FrameworkServlet 'dispatcherServlet': initialization completed in 72 ms
2019-05-23 09:09:36 -Enabling session validation scheduler...
2019-05-23 09:09:36 -请求地址 : http://localhost:8081/login;JSESSIONID=d4fe1f67-9bb9-437a-8bc6-bd241a5409a9
2019-05-23 09:09:36 -HTTP METHOD : GET
2019-05-23 09:09:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-23 09:09:36 -参数 : [{}]
2019-05-23 09:09:36 -耗时 : 6
2019-05-23 09:09:36 -返回值 : login
2019-05-23 09:09:38 -请求地址 : http://localhost:8081/getVerify
2019-05-23 09:09:38 -HTTP METHOD : GET
2019-05-23 09:09:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-23 09:09:38 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@7c60c2b6, org.apache.shiro.web.servlet.ShiroHttpServletResponse@1e9c03e4]
2019-05-23 09:09:44 -3651
2019-05-23 09:09:45 -耗时 : 6266
2019-05-23 09:09:45 -返回值 : null
2019-05-23 09:09:50 -请求地址 : http://localhost:8081/login
2019-05-23 09:09:50 -HTTP METHOD : POST
2019-05-23 09:09:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-23 09:09:50 -参数 : [admin, 111111, 3651, org.apache.shiro.web.servlet.ShiroHttpServletRequest@7b8313d3]
2019-05-23 09:09:50 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-23 09:09:50 -==> Parameters: admin(String)
2019-05-23 09:09:50 -<==      Total: 1
2019-05-23 09:09:50 -耗时 : 289
2019-05-23 09:09:50 -返回值 : {msg=操作成功, code=0}
2019-05-23 09:09:51 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-23 09:09:51 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-23 09:09:51 -==> Parameters: 1(Long), admin(String), 登录(String), 289(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-23 09:09:51.071(Timestamp)
2019-05-23 09:09:51 -请求地址 : http://localhost:8081/index
2019-05-23 09:09:51 -HTTP METHOD : GET
2019-05-23 09:09:51 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-23 09:09:51 -参数 : [{}]
2019-05-23 09:09:51 -<==    Updates: 1
2019-05-23 09:09:51 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-23 09:09:51 -==> Parameters: 1(Long)
2019-05-23 09:09:52 -<==      Total: 49
2019-05-23 09:09:52 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-23 09:09:52 -==> Parameters: 138(Long)
2019-05-23 09:09:52 -<==      Total: 1
2019-05-23 09:09:52 -耗时 : 933
2019-05-23 09:09:52 -返回值 : index_v1
2019-05-23 09:09:52 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-23 09:09:52 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 933(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-23 09:09:52.164(Timestamp)
2019-05-23 09:09:52 -<==    Updates: 1
2019-05-23 09:09:52 -请求地址 : http://localhost:8081/main
2019-05-23 09:09:52 -HTTP METHOD : GET
2019-05-23 09:09:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-23 09:09:52 -参数 : []
2019-05-23 09:09:52 -耗时 : 0
2019-05-23 09:09:52 -返回值 : main
2019-05-23 09:09:53 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-23 09:09:53 -HTTP METHOD : GET
2019-05-23 09:09:53 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-23 09:09:53 -参数 : []
2019-05-23 09:09:53 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-23 09:09:53 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-23 09:09:53 -请求地址 : http://localhost:8081/main
2019-05-23 09:09:53 -HTTP METHOD : GET
2019-05-23 09:09:53 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-23 09:09:53 -参数 : []
2019-05-23 09:09:53 -耗时 : 0
2019-05-23 09:09:53 -返回值 : main
2019-05-23 09:09:53 -<==      Total: 0
2019-05-23 09:09:53 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-23 09:09:53 -==> Parameters: 1(Long), 0(String)
2019-05-23 09:09:53 -<==      Total: 1
2019-05-23 09:09:53 -耗时 : 298
2019-05-23 09:09:53 -返回值 : com.bootdo.common.utils.PageUtils@77136f40
2019-05-23 09:10:00 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-23 09:10:00 -==> Parameters: 1(Long)
2019-05-23 09:10:00 -<==      Total: 93
2019-05-23 09:10:00 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-23 09:10:00 -HTTP METHOD : GET
2019-05-23 09:10:00 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-23 09:10:00 -参数 : []
2019-05-23 09:10:00 -耗时 : 14
2019-05-23 09:10:00 -返回值 : charts/tableElecYY
2019-05-23 09:10:01 -请求地址 : http://localhost:8081/charts/countOwe
2019-05-23 09:10:01 -HTTP METHOD : GET
2019-05-23 09:10:01 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.countOwe
2019-05-23 09:10:01 -参数 : []
2019-05-23 09:10:01 -耗时 : 0
2019-05-23 09:10:01 -返回值 : charts/countOwe
2019-05-23 09:10:01 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-23 09:10:01 -HTTP METHOD : GET
2019-05-23 09:10:01 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-23 09:10:01 -参数 : [userType]
2019-05-23 09:10:01 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-23 09:10:01 -==> Parameters: userType(String)
2019-05-23 09:10:01 -<==      Total: 4
2019-05-23 09:10:01 -耗时 : 71
2019-05-23 09:10:01 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-23 09:10:01 -请求地址 : http://localhost:8081/charts/countRun
2019-05-23 09:10:01 -HTTP METHOD : GET
2019-05-23 09:10:01 -CLASS_METHOD : com.bootdo.charts.controller.countRunController.countRun
2019-05-23 09:10:01 -参数 : []
2019-05-23 09:10:01 -耗时 : 1
2019-05-23 09:10:01 -返回值 : charts/countRun
2019-05-23 09:10:01 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-23 09:10:01 -HTTP METHOD : GET
2019-05-23 09:10:01 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-23 09:10:01 -参数 : [userType]
2019-05-23 09:10:01 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-23 09:10:01 -==> Parameters: userType(String)
2019-05-23 09:10:01 -<==      Total: 4
2019-05-23 09:10:01 -耗时 : 7
2019-05-23 09:10:01 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-23 09:10:02 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-23 09:10:02 -HTTP METHOD : GET
2019-05-23 09:10:02 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-23 09:10:02 -参数 : [userType]
2019-05-23 09:10:02 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-23 09:10:02 -==> Parameters: userType(String)
2019-05-23 09:10:02 -<==      Total: 4
2019-05-23 09:10:02 -耗时 : 14
2019-05-23 09:10:02 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-23 09:10:06 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-23 09:10:06 -HTTP METHOD : GET
2019-05-23 09:10:06 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-23 09:10:06 -参数 : []
2019-05-23 09:10:06 -耗时 : 1
2019-05-23 09:10:06 -返回值 : system/dept/deptTree
2019-05-23 09:10:06 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-23 09:10:06 -HTTP METHOD : GET
2019-05-23 09:10:06 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-23 09:10:06 -参数 : []
2019-05-23 09:10:06 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-23 09:10:06 -==> Parameters: 
2019-05-23 09:10:06 -<==      Total: 3
2019-05-23 09:10:06 -耗时 : 43
2019-05-23 09:10:06 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-23 09:10:08 -请求地址 : http://localhost:8081/charts/countRun/exportRun
2019-05-23 09:10:08 -HTTP METHOD : GET
2019-05-23 09:10:08 -CLASS_METHOD : com.bootdo.charts.controller.countRunController.exportRun
2019-05-23 09:10:08 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@39ed4bad, com.bootdo.moneyLog.vo.HeatLogVo@e6d2e20, com.bootdo.moneyLog.vo.WaterLogVo@29d2f54c, org.apache.shiro.web.servlet.ShiroHttpServletResponse@42b53dba]
2019-05-23 09:10:09 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE `create_time` LIKE CONCAT('%',?,'%') and user_org = ? order by create_time asc 
2019-05-23 09:10:09 -==> Parameters: 2019(String), 2(String)
2019-05-23 09:10:09 -<==      Total: 23
2019-05-23 09:10:09 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log WHERE `create_time` LIKE CONCAT('%',?,'%') and user_org = ? order by create_time asc 
2019-05-23 09:10:09 -==> Parameters: 2019(String), 2(String)
2019-05-23 09:10:09 -<==      Total: 9
2019-05-23 09:10:09 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log WHERE `create_time` LIKE CONCAT('%',?,'%') and user_org = ? order by create_time asc 
2019-05-23 09:10:09 -==> Parameters: 2019(String), 2(String)
2019-05-23 09:10:09 -<==      Total: 20
2019-05-23 09:10:09 -耗时 : 1085
2019-05-23 09:10:09 -返回值 : null
2019-05-23 09:10:23 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 8]
2019-05-23 09:31:06 -请求地址 : http://localhost:8081/index
2019-05-23 09:31:06 -HTTP METHOD : GET
2019-05-23 09:31:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-23 09:31:06 -参数 : [{}]
2019-05-23 09:31:06 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-23 09:31:06 -==> Parameters: 1(Long)
2019-05-23 09:31:06 -<==      Total: 49
2019-05-23 09:31:06 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-23 09:31:06 -==> Parameters: 138(Long)
2019-05-23 09:31:06 -<==      Total: 1
2019-05-23 09:31:06 -耗时 : 115
2019-05-23 09:31:06 -返回值 : index_v1
2019-05-23 09:31:06 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-23 09:31:06 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 116(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-23 09:31:06.606(Timestamp)
2019-05-23 09:31:06 -<==    Updates: 1
2019-05-23 09:31:06 -请求地址 : http://localhost:8081/main
2019-05-23 09:31:06 -HTTP METHOD : GET
2019-05-23 09:31:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-23 09:31:06 -参数 : []
2019-05-23 09:31:06 -耗时 : 1
2019-05-23 09:31:06 -返回值 : main
2019-05-23 09:31:06 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-23 09:31:06 -HTTP METHOD : GET
2019-05-23 09:31:06 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-23 09:31:06 -参数 : []
2019-05-23 09:31:07 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-23 09:31:07 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-23 09:31:07 -<==      Total: 0
2019-05-23 09:31:07 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-23 09:31:07 -==> Parameters: 1(Long), 0(String)
2019-05-23 09:31:07 -<==      Total: 1
2019-05-23 09:31:07 -耗时 : 62
2019-05-23 09:31:07 -返回值 : com.bootdo.common.utils.PageUtils@691b846
2019-05-23 09:31:07 -请求地址 : http://localhost:8081/main
2019-05-23 09:31:07 -HTTP METHOD : GET
2019-05-23 09:31:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-23 09:31:07 -参数 : []
2019-05-23 09:31:07 -耗时 : 1
2019-05-23 09:31:07 -返回值 : main
2019-05-23 09:31:10 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-23 09:31:10 -==> Parameters: 1(Long)
2019-05-23 09:31:10 -<==      Total: 93
2019-05-23 09:31:10 -请求地址 : http://localhost:8081/charts/countRun
2019-05-23 09:31:10 -HTTP METHOD : GET
2019-05-23 09:31:10 -CLASS_METHOD : com.bootdo.charts.controller.countRunController.countRun
2019-05-23 09:31:10 -参数 : []
2019-05-23 09:31:10 -耗时 : 0
2019-05-23 09:31:10 -返回值 : charts/countRun
2019-05-23 09:31:10 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-23 09:31:10 -HTTP METHOD : GET
2019-05-23 09:31:10 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-23 09:31:10 -参数 : [userType]
2019-05-23 09:31:10 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-23 09:31:10 -==> Parameters: userType(String)
2019-05-23 09:31:10 -<==      Total: 4
2019-05-23 09:31:10 -耗时 : 20
2019-05-23 09:31:10 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-23 09:31:15 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-23 09:31:15 -HTTP METHOD : GET
2019-05-23 09:31:15 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-23 09:31:15 -参数 : []
2019-05-23 09:31:15 -耗时 : 1
2019-05-23 09:31:15 -返回值 : system/dept/deptTree
2019-05-23 09:31:15 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-23 09:31:15 -HTTP METHOD : GET
2019-05-23 09:31:15 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-23 09:31:15 -参数 : []
2019-05-23 09:31:15 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-23 09:31:15 -==> Parameters: 
2019-05-23 09:31:15 -<==      Total: 3
2019-05-23 09:31:15 -耗时 : 7
2019-05-23 09:31:15 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-23 09:31:22 -请求地址 : http://localhost:8081/charts/countRun/exportRun
2019-05-23 09:31:22 -HTTP METHOD : GET
2019-05-23 09:31:22 -CLASS_METHOD : com.bootdo.charts.controller.countRunController.exportRun
2019-05-23 09:31:22 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@fb6a756, com.bootdo.moneyLog.vo.HeatLogVo@33f56eba, com.bootdo.moneyLog.vo.WaterLogVo@7da71c9e, org.apache.shiro.web.servlet.ShiroHttpServletResponse@e47276d]
2019-05-23 09:31:22 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE `create_time` LIKE CONCAT('%',?,'%') and user_org = ? order by create_time asc 
2019-05-23 09:31:22 -==> Parameters: 2019(String), 2(String)
2019-05-23 09:31:22 -<==      Total: 23
2019-05-23 09:31:22 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log WHERE `create_time` LIKE CONCAT('%',?,'%') and user_org = ? order by create_time asc 
2019-05-23 09:31:22 -==> Parameters: 2019(String), 2(String)
2019-05-23 09:31:22 -<==      Total: 9
2019-05-23 09:31:22 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log WHERE `create_time` LIKE CONCAT('%',?,'%') and user_org = ? order by create_time asc 
2019-05-23 09:31:22 -==> Parameters: 2019(String), 2(String)
2019-05-23 09:31:22 -<==      Total: 20
2019-05-23 09:31:22 -耗时 : 82
2019-05-23 09:31:22 -返回值 : null
2019-05-23 09:35:09 -Starting BootdoApplication on PC-201905091110 with PID 2136 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-23 09:35:09 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-23 09:35:09 -The following profiles are active: dev
2019-05-23 09:35:09 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@70e9c95d: startup date [Thu May 23 09:35:09 CST 2019]; root of context hierarchy
2019-05-23 09:35:13 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-23 09:35:15 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$84ee3cb9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 09:35:15 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$77476b60] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 09:35:17 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 09:35:17 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 09:35:17 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 09:35:17 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-23 09:35:17 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-23 09:35:17 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 09:35:17 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 09:35:17 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 09:35:17 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 09:35:19 -Tomcat initialized with port(s): 8081 (http)
2019-05-23 09:35:19 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-23 09:35:19 -Starting service [Tomcat]
2019-05-23 09:35:19 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-23 09:35:19 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-23 09:35:19 -Initializing Spring embedded WebApplicationContext
2019-05-23 09:35:19 -Root WebApplicationContext: initialization completed in 10188 ms
2019-05-23 09:35:20 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-23 09:35:20 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-23 09:35:20 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-23 09:35:20 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-23 09:35:20 -Filter xssFilter was not registered (disabled)
2019-05-23 09:35:20 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-23 09:35:20 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-23 09:35:20 -Servlet statViewServlet mapped to [/druid/*]
2019-05-23 09:35:20 -Servlet dispatcherServlet mapped to [/]
2019-05-23 09:35:28 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@70e9c95d: startup date [Thu May 23 09:35:09 CST 2019]; root of context hierarchy
2019-05-23 09:35:28 -Using default implementation for ThreadExecutor
2019-05-23 09:35:28 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-23 09:35:28 -Quartz Scheduler v.2.2.1 created.
2019-05-23 09:35:28 -RAMJobStore initialized.
2019-05-23 09:35:28 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-23 09:35:28 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-23 09:35:28 -Quartz scheduler version: 2.2.1
2019-05-23 09:35:28 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@c212536
2019-05-23 09:35:29 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-23 09:35:29 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-23 09:35:32 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-23 09:35:32 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 09:35:32 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-23 09:35:32 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-23 09:35:32 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-23 09:35:32 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 09:35:32 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-23 09:35:32 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-23 09:35:32 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-23 09:35:32 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 09:35:32 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-23 09:35:32 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-23 09:35:32 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 09:35:32 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-23 09:35:32 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-23 09:35:32 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-23 09:35:32 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 09:35:32 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-23 09:35:32 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-23 09:35:32 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-23 09:35:32 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 09:35:32 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-23 09:35:32 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-23 09:35:32 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 09:35:32 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-23 09:35:32 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-23 09:35:32 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 09:35:32 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-23 09:35:32 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-23 09:35:32 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 09:35:32 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-23 09:35:32 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-23 09:35:32 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 09:35:32 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 09:35:32 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-23 09:35:32 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-23 09:35:32 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-23 09:35:32 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-23 09:35:32 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-23 09:35:32 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-23 09:35:32 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 09:35:32 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-23 09:35:32 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-23 09:35:32 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-23 09:35:32 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-23 09:35:32 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-23 09:35:32 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 09:35:32 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-23 09:35:32 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-23 09:35:32 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-23 09:35:32 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-23 09:35:32 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 09:35:32 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-23 09:35:32 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-23 09:35:32 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-23 09:35:32 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-23 09:35:32 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 09:35:32 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 09:35:32 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-23 09:35:32 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-23 09:35:32 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-23 09:35:32 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-23 09:35:32 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-23 09:35:32 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-23 09:35:32 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-23 09:35:32 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-23 09:35:32 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-23 09:35:32 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 09:35:32 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-23 09:35:32 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-23 09:35:32 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-23 09:35:32 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-23 09:35:32 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 09:35:32 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-23 09:35:32 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-23 09:35:32 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 09:35:32 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-23 09:35:32 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-23 09:35:32 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-23 09:35:32 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-23 09:35:32 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-23 09:35:32 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-23 09:35:32 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-23 09:35:32 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-23 09:35:32 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-23 09:35:32 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-23 09:35:32 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-23 09:35:32 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-23 09:35:32 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-23 09:35:32 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 09:35:32 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-23 09:35:32 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-23 09:35:32 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-23 09:35:32 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-23 09:35:32 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-23 09:35:32 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-23 09:35:32 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-23 09:35:32 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 09:35:32 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-23 09:35:32 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-23 09:35:32 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 09:35:32 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-23 09:35:32 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-23 09:35:32 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-23 09:35:32 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-23 09:35:32 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-23 09:35:32 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-23 09:35:32 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-23 09:35:32 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 09:35:32 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-23 09:35:32 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-23 09:35:32 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-23 09:35:32 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-23 09:35:32 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-23 09:35:32 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-23 09:35:32 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-23 09:35:32 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-23 09:35:32 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-23 09:35:32 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-23 09:35:32 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-23 09:35:32 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 09:35:32 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-23 09:35:32 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-23 09:35:32 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 09:35:32 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-23 09:35:32 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-23 09:35:32 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-23 09:35:32 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-23 09:35:32 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-23 09:35:32 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-23 09:35:32 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-23 09:35:32 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-23 09:35:32 -Mapped "{[/moneyList/moneyList/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 09:35:32 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-23 09:35:32 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-23 09:35:32 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-23 09:35:32 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-23 09:35:32 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 09:35:32 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-23 09:35:32 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-23 09:35:32 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-23 09:35:32 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 09:35:32 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-23 09:35:32 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-23 09:35:32 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-23 09:35:32 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-23 09:35:32 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 09:35:32 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-23 09:35:32 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-23 09:35:32 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-23 09:35:32 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 09:35:32 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-23 09:35:32 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-23 09:35:32 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-23 09:35:32 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-23 09:35:32 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 09:35:32 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-23 09:35:32 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-23 09:35:32 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-23 09:35:32 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 09:35:32 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-23 09:35:32 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-23 09:35:32 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-23 09:35:32 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-23 09:35:32 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-23 09:35:32 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 09:35:32 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-23 09:35:32 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-23 09:35:32 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-23 09:35:32 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-23 09:35:32 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 09:35:32 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 09:35:32 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-23 09:35:32 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-23 09:35:32 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-05-23 09:35:32 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-23 09:35:32 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 09:35:32 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-23 09:35:32 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-23 09:35:32 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-23 09:35:32 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 09:35:32 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-23 09:35:32 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 09:35:32 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-23 09:35:32 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-23 09:35:32 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-23 09:35:32 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-23 09:35:32 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-23 09:35:32 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-23 09:35:32 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-23 09:35:32 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-23 09:35:32 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-23 09:35:32 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 09:35:32 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-23 09:35:32 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-23 09:35:32 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-23 09:35:32 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-23 09:35:32 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-23 09:35:32 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-23 09:35:32 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-23 09:35:32 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-23 09:35:32 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-23 09:35:32 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-23 09:35:32 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 09:35:32 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-23 09:35:32 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-23 09:35:32 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-23 09:35:32 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-23 09:35:32 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-23 09:35:32 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-23 09:35:32 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-23 09:35:32 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-23 09:35:32 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-23 09:35:32 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-23 09:35:32 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-23 09:35:32 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-23 09:35:32 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 09:35:32 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-23 09:35:32 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-23 09:35:32 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-23 09:35:32 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-23 09:35:32 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 09:35:32 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-23 09:35:32 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-23 09:35:32 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-23 09:35:32 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 09:35:32 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-23 09:35:32 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-23 09:35:32 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-23 09:35:32 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-23 09:35:32 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-23 09:35:32 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-23 09:35:32 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-23 09:35:32 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-23 09:35:32 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-23 09:35:32 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-23 09:35:32 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-23 09:35:32 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-23 09:35:32 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-23 09:35:32 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-23 09:35:32 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-23 09:35:32 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-23 09:35:32 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-23 09:35:32 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 09:35:32 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-23 09:35:32 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-23 09:35:32 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 09:35:32 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-23 09:35:32 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-23 09:35:32 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-23 09:35:32 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-23 09:35:32 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-23 09:35:32 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-23 09:35:32 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-23 09:35:32 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-23 09:35:32 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 09:35:32 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-23 09:35:32 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-23 09:35:32 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 09:35:32 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-23 09:35:32 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-23 09:35:32 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-23 09:35:32 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-23 09:35:32 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-23 09:35:32 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-23 09:35:32 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-23 09:35:32 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-23 09:35:33 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-23 09:35:33 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-23 09:35:33 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-23 09:35:33 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-23 09:35:34 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@70e9c95d: startup date [Thu May 23 09:35:09 CST 2019]; root of context hierarchy
2019-05-23 09:35:34 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-23 09:35:34 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-23 09:35:34 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-23 09:35:34 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-23 09:35:34 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-23 09:35:36 -Registering beans for JMX exposure on startup
2019-05-23 09:35:36 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-23 09:35:36 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-23 09:35:36 -Starting beans in phase 2147483647
2019-05-23 09:35:36 -Context refreshed
2019-05-23 09:35:36 -Found 1 custom documentation plugin(s)
2019-05-23 09:35:36 -Scanning for api listing references
2019-05-23 09:35:37 -Generating unique operation named: getCountDUsingPOST_1
2019-05-23 09:35:37 -Generating unique operation named: removeUsingPOST_1
2019-05-23 09:35:37 -Generating unique operation named: addUsingGET_1
2019-05-23 09:35:37 -Generating unique operation named: editUsingGET_1
2019-05-23 09:35:37 -Generating unique operation named: listUsingGET_1
2019-05-23 09:35:37 -Generating unique operation named: removeUsingPOST_2
2019-05-23 09:35:37 -Generating unique operation named: removeUsingPOST_3
2019-05-23 09:35:37 -Generating unique operation named: saveUsingPOST_1
2019-05-23 09:35:37 -Generating unique operation named: updateUsingGET_1
2019-05-23 09:35:37 -Generating unique operation named: updateUsingHEAD_1
2019-05-23 09:35:37 -Generating unique operation named: updateUsingPOST_1
2019-05-23 09:35:37 -Generating unique operation named: updateUsingPUT_1
2019-05-23 09:35:37 -Generating unique operation named: updateUsingPATCH_1
2019-05-23 09:35:37 -Generating unique operation named: updateUsingDELETE_1
2019-05-23 09:35:37 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-23 09:35:37 -Generating unique operation named: updateUsingTRACE_1
2019-05-23 09:35:37 -Generating unique operation named: addUsingGET_2
2019-05-23 09:35:37 -Generating unique operation named: editUsingGET_2
2019-05-23 09:35:37 -Generating unique operation named: listUsingGET_2
2019-05-23 09:35:37 -Generating unique operation named: removeUsingPOST_4
2019-05-23 09:35:37 -Generating unique operation named: removeUsingPOST_5
2019-05-23 09:35:37 -Generating unique operation named: saveUsingPOST_2
2019-05-23 09:35:37 -Generating unique operation named: updateUsingPOST_2
2019-05-23 09:35:38 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-23 09:35:38 -Generating unique operation named: addUsingGET_3
2019-05-23 09:35:38 -Generating unique operation named: editUsingGET_3
2019-05-23 09:35:38 -Generating unique operation named: listUsingGET_3
2019-05-23 09:35:38 -Generating unique operation named: removeUsingPOST_6
2019-05-23 09:35:38 -Generating unique operation named: removeUsingPOST_7
2019-05-23 09:35:38 -Generating unique operation named: saveUsingPOST_3
2019-05-23 09:35:38 -Generating unique operation named: updateUsingGET_2
2019-05-23 09:35:38 -Generating unique operation named: updateUsingHEAD_2
2019-05-23 09:35:38 -Generating unique operation named: updateUsingPOST_3
2019-05-23 09:35:38 -Generating unique operation named: updateUsingPUT_2
2019-05-23 09:35:38 -Generating unique operation named: updateUsingPATCH_2
2019-05-23 09:35:38 -Generating unique operation named: updateUsingDELETE_2
2019-05-23 09:35:38 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-23 09:35:38 -Generating unique operation named: updateUsingTRACE_2
2019-05-23 09:35:38 -Generating unique operation named: addUsingGET_4
2019-05-23 09:35:38 -Generating unique operation named: editUsingGET_4
2019-05-23 09:35:38 -Generating unique operation named: listUsingGET_4
2019-05-23 09:35:38 -Generating unique operation named: removeUsingPOST_8
2019-05-23 09:35:38 -Generating unique operation named: removeUsingPOST_9
2019-05-23 09:35:38 -Generating unique operation named: saveUsingPOST_4
2019-05-23 09:35:38 -Generating unique operation named: updateUsingGET_3
2019-05-23 09:35:38 -Generating unique operation named: updateUsingHEAD_3
2019-05-23 09:35:38 -Generating unique operation named: updateUsingPOST_4
2019-05-23 09:35:38 -Generating unique operation named: updateUsingPUT_3
2019-05-23 09:35:38 -Generating unique operation named: updateUsingPATCH_3
2019-05-23 09:35:38 -Generating unique operation named: updateUsingDELETE_3
2019-05-23 09:35:38 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-23 09:35:38 -Generating unique operation named: updateUsingTRACE_3
2019-05-23 09:35:38 -Generating unique operation named: ElecUsingGET_1
2019-05-23 09:35:38 -Generating unique operation named: addUsingGET_5
2019-05-23 09:35:38 -Generating unique operation named: editUsingGET_5
2019-05-23 09:35:38 -Generating unique operation named: listUsingGET_5
2019-05-23 09:35:38 -Generating unique operation named: removeUsingPOST_10
2019-05-23 09:35:38 -Generating unique operation named: removeUsingPOST_11
2019-05-23 09:35:38 -Generating unique operation named: saveUsingPOST_5
2019-05-23 09:35:38 -Generating unique operation named: updateUsingGET_4
2019-05-23 09:35:38 -Generating unique operation named: updateUsingHEAD_4
2019-05-23 09:35:38 -Generating unique operation named: updateUsingPOST_5
2019-05-23 09:35:38 -Generating unique operation named: updateUsingPUT_4
2019-05-23 09:35:38 -Generating unique operation named: updateUsingPATCH_4
2019-05-23 09:35:38 -Generating unique operation named: updateUsingDELETE_4
2019-05-23 09:35:38 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-23 09:35:38 -Generating unique operation named: updateUsingTRACE_4
2019-05-23 09:35:38 -Generating unique operation named: editUsingGET_6
2019-05-23 09:35:38 -Generating unique operation named: listUsingGET_6
2019-05-23 09:35:38 -Generating unique operation named: updateUsingPOST_6
2019-05-23 09:35:38 -Generating unique operation named: addUsingGET_6
2019-05-23 09:35:38 -Generating unique operation named: editUsingGET_7
2019-05-23 09:35:38 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-23 09:35:38 -Generating unique operation named: listUsingGET_7
2019-05-23 09:35:38 -Generating unique operation named: removeUsingPOST_12
2019-05-23 09:35:38 -Generating unique operation named: removeUsingPOST_13
2019-05-23 09:35:38 -Generating unique operation named: saveUsingPOST_6
2019-05-23 09:35:38 -Generating unique operation named: updateUsingGET_5
2019-05-23 09:35:38 -Generating unique operation named: updateUsingHEAD_5
2019-05-23 09:35:38 -Generating unique operation named: updateUsingPOST_7
2019-05-23 09:35:38 -Generating unique operation named: updateUsingPUT_5
2019-05-23 09:35:38 -Generating unique operation named: updateUsingPATCH_5
2019-05-23 09:35:38 -Generating unique operation named: updateUsingDELETE_5
2019-05-23 09:35:38 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-23 09:35:38 -Generating unique operation named: updateUsingTRACE_5
2019-05-23 09:35:38 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-23 09:35:38 -Generating unique operation named: addUsingGET_7
2019-05-23 09:35:38 -Generating unique operation named: editUsingGET_8
2019-05-23 09:35:38 -Generating unique operation named: listUsingGET_8
2019-05-23 09:35:38 -Generating unique operation named: removeUsingPOST_14
2019-05-23 09:35:38 -Generating unique operation named: removeUsingPOST_15
2019-05-23 09:35:39 -Generating unique operation named: saveUsingPOST_7
2019-05-23 09:35:39 -Generating unique operation named: updateUsingGET_6
2019-05-23 09:35:39 -Generating unique operation named: updateUsingHEAD_6
2019-05-23 09:35:39 -Generating unique operation named: updateUsingPOST_8
2019-05-23 09:35:39 -Generating unique operation named: updateUsingPUT_6
2019-05-23 09:35:39 -Generating unique operation named: updateUsingPATCH_6
2019-05-23 09:35:39 -Generating unique operation named: updateUsingDELETE_6
2019-05-23 09:35:39 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-23 09:35:39 -Generating unique operation named: updateUsingTRACE_6
2019-05-23 09:35:39 -Generating unique operation named: addUsingGET_8
2019-05-23 09:35:39 -Generating unique operation named: editUsingGET_9
2019-05-23 09:35:39 -Generating unique operation named: listUsingGET_9
2019-05-23 09:35:39 -Generating unique operation named: removeUsingPOST_16
2019-05-23 09:35:39 -Generating unique operation named: removeUsingPOST_17
2019-05-23 09:35:39 -Generating unique operation named: saveUsingPOST_8
2019-05-23 09:35:39 -Generating unique operation named: updateUsingGET_7
2019-05-23 09:35:39 -Generating unique operation named: updateUsingHEAD_7
2019-05-23 09:35:39 -Generating unique operation named: updateUsingPOST_9
2019-05-23 09:35:39 -Generating unique operation named: updateUsingPUT_7
2019-05-23 09:35:39 -Generating unique operation named: updateUsingPATCH_7
2019-05-23 09:35:39 -Generating unique operation named: updateUsingDELETE_7
2019-05-23 09:35:39 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-23 09:35:39 -Generating unique operation named: updateUsingTRACE_7
2019-05-23 09:35:39 -Generating unique operation named: addUsingGET_9
2019-05-23 09:35:39 -Generating unique operation named: editUsingGET_10
2019-05-23 09:35:39 -Generating unique operation named: infoUsingGET_1
2019-05-23 09:35:39 -Generating unique operation named: infoUsingHEAD_1
2019-05-23 09:35:39 -Generating unique operation named: infoUsingPOST_1
2019-05-23 09:35:39 -Generating unique operation named: infoUsingPUT_1
2019-05-23 09:35:39 -Generating unique operation named: infoUsingPATCH_1
2019-05-23 09:35:39 -Generating unique operation named: infoUsingDELETE_1
2019-05-23 09:35:39 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-23 09:35:39 -Generating unique operation named: infoUsingTRACE_1
2019-05-23 09:35:39 -Generating unique operation named: listUsingGET_10
2019-05-23 09:35:39 -Generating unique operation named: removeUsingPOST_18
2019-05-23 09:35:39 -Generating unique operation named: removeUsingPOST_19
2019-05-23 09:35:39 -Generating unique operation named: saveUsingPOST_9
2019-05-23 09:35:39 -Generating unique operation named: updateUsingPOST_10
2019-05-23 09:35:39 -Generating unique operation named: listUsingGET_11
2019-05-23 09:35:39 -Generating unique operation named: removeUsingPOST_20
2019-05-23 09:35:39 -Generating unique operation named: welcomeUsingGET_1
2019-05-23 09:35:39 -Generating unique operation named: addUsingGET_10
2019-05-23 09:35:39 -Generating unique operation named: editUsingGET_11
2019-05-23 09:35:39 -Generating unique operation named: listUsingGET_12
2019-05-23 09:35:39 -Generating unique operation named: removeUsingPOST_21
2019-05-23 09:35:39 -Generating unique operation named: saveUsingPOST_10
2019-05-23 09:35:39 -Generating unique operation named: treeUsingGET_1
2019-05-23 09:35:39 -Generating unique operation named: treeUsingGET_2
2019-05-23 09:35:39 -Generating unique operation named: updateUsingPOST_11
2019-05-23 09:35:39 -Generating unique operation named: editUsingGET_12
2019-05-23 09:35:39 -Generating unique operation named: addUsingGET_11
2019-05-23 09:35:39 -Generating unique operation named: editUsingGET_13
2019-05-23 09:35:39 -Generating unique operation named: listUsingGET_13
2019-05-23 09:35:39 -Generating unique operation named: removeUsingPOST_22
2019-05-23 09:35:39 -Generating unique operation named: removeUsingPOST_23
2019-05-23 09:35:39 -Generating unique operation named: saveUsingPOST_11
2019-05-23 09:35:39 -Generating unique operation named: updateUsingGET_8
2019-05-23 09:35:39 -Generating unique operation named: updateUsingHEAD_8
2019-05-23 09:35:39 -Generating unique operation named: updateUsingPOST_12
2019-05-23 09:35:39 -Generating unique operation named: updateUsingPUT_8
2019-05-23 09:35:39 -Generating unique operation named: updateUsingPATCH_8
2019-05-23 09:35:39 -Generating unique operation named: updateUsingDELETE_8
2019-05-23 09:35:39 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-23 09:35:39 -Generating unique operation named: updateUsingTRACE_8
2019-05-23 09:35:39 -Generating unique operation named: addUsingGET_12
2019-05-23 09:35:39 -Generating unique operation named: editUsingGET_14
2019-05-23 09:35:39 -Generating unique operation named: listUsingGET_14
2019-05-23 09:35:39 -Generating unique operation named: removeUsingPOST_24
2019-05-23 09:35:39 -Generating unique operation named: removeUsingPOST_25
2019-05-23 09:35:39 -Generating unique operation named: saveUsingPOST_12
2019-05-23 09:35:39 -Generating unique operation named: updateUsingGET_9
2019-05-23 09:35:39 -Generating unique operation named: updateUsingHEAD_9
2019-05-23 09:35:39 -Generating unique operation named: updateUsingPOST_13
2019-05-23 09:35:39 -Generating unique operation named: updateUsingPUT_9
2019-05-23 09:35:39 -Generating unique operation named: updateUsingPATCH_9
2019-05-23 09:35:39 -Generating unique operation named: updateUsingDELETE_9
2019-05-23 09:35:40 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-23 09:35:40 -Generating unique operation named: updateUsingTRACE_9
2019-05-23 09:35:40 -Generating unique operation named: addUsingGET_13
2019-05-23 09:35:40 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-23 09:35:40 -Generating unique operation named: editUsingGET_15
2019-05-23 09:35:40 -Generating unique operation named: listUsingGET_15
2019-05-23 09:35:40 -Generating unique operation named: saveUsingPOST_13
2019-05-23 09:35:40 -Generating unique operation named: saveUsingPOST_14
2019-05-23 09:35:40 -Generating unique operation named: updateUsingPOST_14
2019-05-23 09:35:40 -Generating unique operation named: listUsingGET_16
2019-05-23 09:35:40 -Generating unique operation named: listUsingHEAD_1
2019-05-23 09:35:40 -Generating unique operation named: listUsingPOST_1
2019-05-23 09:35:40 -Generating unique operation named: listUsingPUT_1
2019-05-23 09:35:40 -Generating unique operation named: listUsingPATCH_1
2019-05-23 09:35:40 -Generating unique operation named: listUsingDELETE_1
2019-05-23 09:35:40 -Generating unique operation named: listUsingOPTIONS_1
2019-05-23 09:35:40 -Generating unique operation named: listUsingTRACE_1
2019-05-23 09:35:40 -Generating unique operation named: countDDUsingGET_1
2019-05-23 09:35:40 -Generating unique operation named: exportDDUsingGET_1
2019-05-23 09:35:40 -Generating unique operation named: addUsingGET_14
2019-05-23 09:35:40 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-23 09:35:40 -Generating unique operation named: editUsingGET_16
2019-05-23 09:35:40 -Generating unique operation named: listUsingGET_17
2019-05-23 09:35:40 -Generating unique operation named: removeUsingPOST_26
2019-05-23 09:35:40 -Generating unique operation named: saveUsingPOST_15
2019-05-23 09:35:40 -Generating unique operation named: treeUsingGET_3
2019-05-23 09:35:40 -Generating unique operation named: treeViewUsingGET_1
2019-05-23 09:35:40 -Generating unique operation named: updateUsingPOST_15
2019-05-23 09:35:40 -Generating unique operation named: addUsingGET_15
2019-05-23 09:35:40 -Generating unique operation named: editUsingGET_17
2019-05-23 09:35:40 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-23 09:35:40 -Generating unique operation named: listUsingGET_18
2019-05-23 09:35:40 -Generating unique operation named: removeUsingPOST_27
2019-05-23 09:35:40 -Generating unique operation named: removeUsingPOST_28
2019-05-23 09:35:40 -Generating unique operation named: saveUsingPOST_16
2019-05-23 09:35:40 -Generating unique operation named: updateUsingGET_10
2019-05-23 09:35:40 -Generating unique operation named: updateUsingHEAD_10
2019-05-23 09:35:40 -Generating unique operation named: updateUsingPOST_16
2019-05-23 09:35:40 -Generating unique operation named: updateUsingPUT_10
2019-05-23 09:35:40 -Generating unique operation named: updateUsingPATCH_10
2019-05-23 09:35:40 -Generating unique operation named: updateUsingDELETE_10
2019-05-23 09:35:40 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-23 09:35:40 -Generating unique operation named: updateUsingTRACE_10
2019-05-23 09:35:40 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-23 09:35:40 -Generating unique operation named: addUsingGET_16
2019-05-23 09:35:40 -Generating unique operation named: editUsingGET_18
2019-05-23 09:35:40 -Generating unique operation named: listUsingGET_19
2019-05-23 09:35:40 -Generating unique operation named: removeUsingPOST_29
2019-05-23 09:35:40 -Generating unique operation named: removeUsingPOST_30
2019-05-23 09:35:40 -Generating unique operation named: saveUsingPOST_17
2019-05-23 09:35:40 -Generating unique operation named: updateUsingGET_11
2019-05-23 09:35:40 -Generating unique operation named: updateUsingHEAD_11
2019-05-23 09:35:40 -Generating unique operation named: updateUsingPOST_17
2019-05-23 09:35:40 -Generating unique operation named: updateUsingPUT_11
2019-05-23 09:35:40 -Generating unique operation named: updateUsingPATCH_11
2019-05-23 09:35:40 -Generating unique operation named: updateUsingDELETE_11
2019-05-23 09:35:40 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-23 09:35:40 -Generating unique operation named: updateUsingTRACE_11
2019-05-23 09:35:40 -Generating unique operation named: addUsingGET_17
2019-05-23 09:35:40 -Generating unique operation named: editUsingGET_19
2019-05-23 09:35:40 -Generating unique operation named: listUsingGET_20
2019-05-23 09:35:40 -Generating unique operation named: removeUsingPOST_31
2019-05-23 09:35:40 -Generating unique operation named: removeUsingPOST_32
2019-05-23 09:35:40 -Generating unique operation named: saveUsingPOST_18
2019-05-23 09:35:40 -Generating unique operation named: updateUsingGET_12
2019-05-23 09:35:40 -Generating unique operation named: updateUsingHEAD_12
2019-05-23 09:35:40 -Generating unique operation named: updateUsingPOST_18
2019-05-23 09:35:40 -Generating unique operation named: updateUsingPUT_12
2019-05-23 09:35:40 -Generating unique operation named: updateUsingPATCH_12
2019-05-23 09:35:40 -Generating unique operation named: updateUsingDELETE_12
2019-05-23 09:35:40 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-23 09:35:40 -Generating unique operation named: updateUsingTRACE_12
2019-05-23 09:35:40 -Starting Quartz Scheduler now
2019-05-23 09:35:40 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-23 09:35:40 -Starting...
2019-05-23 09:35:40 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-23 09:35:40 -Started.
2019-05-23 09:35:41 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-23 09:35:41 -Using a shared selector for servlet write/read
2019-05-23 09:35:41 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-23 09:35:41 -Started BootdoApplication in 33.013 seconds (JVM running for 33.745)
2019-05-23 09:35:41 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-23 09:35:42 -==> Parameters: 
2019-05-23 09:35:42 -<==      Total: 1
2019-05-23 09:36:12 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-23 09:36:12 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-23 09:36:13 -FrameworkServlet 'dispatcherServlet': initialization completed in 84 ms
2019-05-23 09:36:13 -Enabling session validation scheduler...
2019-05-23 09:36:13 -请求地址 : http://localhost:8081/login;JSESSIONID=be8a5a12-3945-442b-bed3-1d990c78d3c1
2019-05-23 09:36:13 -HTTP METHOD : GET
2019-05-23 09:36:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-23 09:36:13 -参数 : [{}]
2019-05-23 09:36:13 -耗时 : 3
2019-05-23 09:36:13 -返回值 : login
2019-05-23 09:36:14 -请求地址 : http://localhost:8081/getVerify
2019-05-23 09:36:14 -HTTP METHOD : GET
2019-05-23 09:36:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-23 09:36:14 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@5b9f2b45, org.apache.shiro.web.servlet.ShiroHttpServletResponse@5558de46]
2019-05-23 09:36:19 -9079
2019-05-23 09:36:20 -耗时 : 5697
2019-05-23 09:36:20 -返回值 : null
2019-05-23 09:36:24 -请求地址 : http://localhost:8081/login
2019-05-23 09:36:24 -HTTP METHOD : POST
2019-05-23 09:36:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-23 09:36:24 -参数 : [admin, 111111, 9079, org.apache.shiro.web.servlet.ShiroHttpServletRequest@43de608e]
2019-05-23 09:36:24 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-23 09:36:24 -==> Parameters: admin(String)
2019-05-23 09:36:25 -<==      Total: 1
2019-05-23 09:36:25 -耗时 : 274
2019-05-23 09:36:25 -返回值 : {msg=操作成功, code=0}
2019-05-23 09:36:25 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-23 09:36:25 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-23 09:36:25 -==> Parameters: 1(Long), admin(String), 登录(String), 274(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-23 09:36:25.249(Timestamp)
2019-05-23 09:36:25 -请求地址 : http://localhost:8081/index
2019-05-23 09:36:25 -HTTP METHOD : GET
2019-05-23 09:36:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-23 09:36:25 -参数 : [{}]
2019-05-23 09:36:25 -<==    Updates: 1
2019-05-23 09:36:25 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-23 09:36:25 -==> Parameters: 1(Long)
2019-05-23 09:36:25 -<==      Total: 49
2019-05-23 09:36:25 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-23 09:36:25 -==> Parameters: 138(Long)
2019-05-23 09:36:25 -<==      Total: 1
2019-05-23 09:36:25 -耗时 : 374
2019-05-23 09:36:25 -返回值 : index_v1
2019-05-23 09:36:25 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-23 09:36:25 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 374(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-23 09:36:25.944(Timestamp)
2019-05-23 09:36:26 -<==    Updates: 1
2019-05-23 09:36:26 -请求地址 : http://localhost:8081/main
2019-05-23 09:36:26 -HTTP METHOD : GET
2019-05-23 09:36:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-23 09:36:26 -参数 : []
2019-05-23 09:36:26 -耗时 : 0
2019-05-23 09:36:26 -返回值 : main
2019-05-23 09:36:26 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-23 09:36:26 -HTTP METHOD : GET
2019-05-23 09:36:26 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-23 09:36:26 -参数 : []
2019-05-23 09:36:26 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-23 09:36:26 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-23 09:36:26 -请求地址 : http://localhost:8081/main
2019-05-23 09:36:26 -HTTP METHOD : GET
2019-05-23 09:36:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-23 09:36:26 -参数 : []
2019-05-23 09:36:26 -耗时 : 0
2019-05-23 09:36:26 -返回值 : main
2019-05-23 09:36:27 -<==      Total: 0
2019-05-23 09:36:27 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-23 09:36:27 -==> Parameters: 1(Long), 0(String)
2019-05-23 09:36:27 -<==      Total: 1
2019-05-23 09:36:27 -耗时 : 158
2019-05-23 09:36:27 -返回值 : com.bootdo.common.utils.PageUtils@4cd7050b
2019-05-23 09:36:33 -WebSocketSession[1 current WS(0)-HttpStream(1)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 12], outboundChannelpool size = 2, active threads = 0, queued tasks = 0, completed tasks = 2], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 2]
2019-05-23 09:36:38 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-23 09:36:38 -==> Parameters: 1(Long)
2019-05-23 09:36:38 -<==      Total: 93
2019-05-23 09:36:38 -请求地址 : http://localhost:8081/charts/countRun
2019-05-23 09:36:38 -HTTP METHOD : GET
2019-05-23 09:36:38 -CLASS_METHOD : com.bootdo.charts.controller.countRunController.countRun
2019-05-23 09:36:38 -参数 : []
2019-05-23 09:36:38 -耗时 : 0
2019-05-23 09:36:38 -返回值 : charts/countRun
2019-05-23 09:36:39 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-23 09:36:39 -HTTP METHOD : GET
2019-05-23 09:36:39 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-23 09:36:39 -参数 : [userType]
2019-05-23 09:36:39 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-23 09:36:39 -==> Parameters: userType(String)
2019-05-23 09:36:39 -<==      Total: 4
2019-05-23 09:36:39 -耗时 : 46
2019-05-23 09:36:39 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-23 09:36:51 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-23 09:36:51 -HTTP METHOD : GET
2019-05-23 09:36:51 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-23 09:36:51 -参数 : []
2019-05-23 09:36:51 -耗时 : 0
2019-05-23 09:36:51 -返回值 : system/dept/deptTree
2019-05-23 09:36:51 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-23 09:36:51 -HTTP METHOD : GET
2019-05-23 09:36:51 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-23 09:36:51 -参数 : []
2019-05-23 09:36:51 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-23 09:36:51 -==> Parameters: 
2019-05-23 09:36:51 -<==      Total: 3
2019-05-23 09:36:51 -耗时 : 72
2019-05-23 09:36:51 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-23 09:36:54 -请求地址 : http://localhost:8081/charts/countRun/exportRun
2019-05-23 09:36:54 -HTTP METHOD : GET
2019-05-23 09:36:54 -CLASS_METHOD : com.bootdo.charts.controller.countRunController.exportRun
2019-05-23 09:36:54 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@30af065c, com.bootdo.moneyLog.vo.HeatLogVo@40a398f6, com.bootdo.moneyLog.vo.WaterLogVo@7692b8d5, org.apache.shiro.web.servlet.ShiroHttpServletResponse@3f0b12b]
2019-05-23 09:36:54 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE `create_time` LIKE CONCAT('%',?,'%') and user_org = ? order by create_time asc 
2019-05-23 09:36:54 -==> Parameters: 2019(String), 2(String)
2019-05-23 09:36:54 -<==      Total: 23
2019-05-23 09:36:54 -耗时 : 837
2019-05-23 09:36:54 -返回值 : null
2019-05-23 09:42:12 -Starting BootdoApplication on PC-201905091110 with PID 9720 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-23 09:42:12 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-23 09:42:12 -The following profiles are active: dev
2019-05-23 09:42:12 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@70e9c95d: startup date [Thu May 23 09:42:12 CST 2019]; root of context hierarchy
2019-05-23 09:42:16 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-23 09:42:19 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$84ee3cb9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 09:42:19 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$77476b60] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 09:42:21 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 09:42:22 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 09:42:22 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 09:42:22 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-23 09:42:22 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-23 09:42:22 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 09:42:22 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 09:42:22 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 09:42:22 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 09:42:24 -Tomcat initialized with port(s): 8081 (http)
2019-05-23 09:42:24 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-23 09:42:24 -Starting service [Tomcat]
2019-05-23 09:42:24 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-23 09:42:24 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-23 09:42:24 -Initializing Spring embedded WebApplicationContext
2019-05-23 09:42:24 -Root WebApplicationContext: initialization completed in 12568 ms
2019-05-23 09:42:25 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-23 09:42:25 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-23 09:42:25 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-23 09:42:25 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-23 09:42:25 -Filter xssFilter was not registered (disabled)
2019-05-23 09:42:25 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-23 09:42:25 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-23 09:42:25 -Servlet statViewServlet mapped to [/druid/*]
2019-05-23 09:42:25 -Servlet dispatcherServlet mapped to [/]
2019-05-23 09:42:31 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@70e9c95d: startup date [Thu May 23 09:42:12 CST 2019]; root of context hierarchy
2019-05-23 09:42:31 -Using default implementation for ThreadExecutor
2019-05-23 09:42:31 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-23 09:42:31 -Quartz Scheduler v.2.2.1 created.
2019-05-23 09:42:31 -RAMJobStore initialized.
2019-05-23 09:42:31 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-23 09:42:31 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-23 09:42:31 -Quartz scheduler version: 2.2.1
2019-05-23 09:42:31 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@c212536
2019-05-23 09:42:32 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-23 09:42:32 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-23 09:42:35 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-23 09:42:35 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-23 09:42:35 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 09:42:35 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-23 09:42:35 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-23 09:42:35 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 09:42:35 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-23 09:42:35 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-23 09:42:35 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-23 09:42:35 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 09:42:35 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-23 09:42:35 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-23 09:42:35 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-23 09:42:35 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-23 09:42:35 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 09:42:35 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-23 09:42:35 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-23 09:42:35 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 09:42:35 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 09:42:35 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-23 09:42:35 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-23 09:42:35 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 09:42:35 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-23 09:42:35 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-23 09:42:35 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 09:42:35 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-23 09:42:35 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-23 09:42:35 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 09:42:35 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-23 09:42:35 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-23 09:42:35 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 09:42:35 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-23 09:42:35 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-23 09:42:35 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 09:42:35 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-23 09:42:35 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-23 09:42:35 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-23 09:42:35 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-23 09:42:35 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-23 09:42:35 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-23 09:42:35 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 09:42:35 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-23 09:42:35 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-23 09:42:35 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-23 09:42:35 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 09:42:35 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-23 09:42:35 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-23 09:42:35 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-23 09:42:35 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-23 09:42:35 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-23 09:42:35 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-23 09:42:35 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 09:42:35 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-23 09:42:35 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-23 09:42:35 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-23 09:42:35 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 09:42:35 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-23 09:42:35 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 09:42:35 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-23 09:42:35 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-23 09:42:35 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-23 09:42:35 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-23 09:42:35 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-23 09:42:35 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-23 09:42:35 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-23 09:42:35 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-23 09:42:35 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-23 09:42:35 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 09:42:35 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-23 09:42:35 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-23 09:42:35 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 09:42:35 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-23 09:42:35 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-23 09:42:35 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-23 09:42:35 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-23 09:42:35 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 09:42:35 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-23 09:42:35 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-23 09:42:35 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-23 09:42:35 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-23 09:42:35 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-23 09:42:35 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-23 09:42:35 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-23 09:42:35 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-23 09:42:35 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-23 09:42:35 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-23 09:42:35 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-23 09:42:35 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 09:42:35 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-23 09:42:35 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-23 09:42:35 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-23 09:42:35 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-23 09:42:35 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-23 09:42:35 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-23 09:42:35 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-23 09:42:35 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-23 09:42:35 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-23 09:42:35 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 09:42:35 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-23 09:42:35 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 09:42:35 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-23 09:42:35 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-23 09:42:35 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-23 09:42:35 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-23 09:42:35 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-23 09:42:35 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-23 09:42:35 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-23 09:42:35 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-23 09:42:35 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 09:42:35 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-23 09:42:35 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-23 09:42:35 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-23 09:42:35 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-23 09:42:35 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-23 09:42:35 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-23 09:42:35 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-23 09:42:35 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-23 09:42:35 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-23 09:42:35 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-23 09:42:35 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-23 09:42:35 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 09:42:35 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-23 09:42:35 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-23 09:42:35 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 09:42:35 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-23 09:42:35 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-23 09:42:35 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-23 09:42:35 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-23 09:42:35 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-23 09:42:35 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-23 09:42:35 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-23 09:42:35 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-23 09:42:36 -Mapped "{[/moneyList/moneyList/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 09:42:36 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-23 09:42:36 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-23 09:42:36 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-23 09:42:36 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-23 09:42:36 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 09:42:36 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-23 09:42:36 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-23 09:42:36 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-23 09:42:36 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 09:42:36 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-23 09:42:36 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-23 09:42:36 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-23 09:42:36 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-23 09:42:36 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 09:42:36 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-23 09:42:36 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-23 09:42:36 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-23 09:42:36 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 09:42:36 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-23 09:42:36 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-23 09:42:36 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-23 09:42:36 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-23 09:42:36 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 09:42:36 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-23 09:42:36 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-23 09:42:36 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-23 09:42:36 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 09:42:36 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-23 09:42:36 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-23 09:42:36 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-23 09:42:36 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-23 09:42:36 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-23 09:42:36 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 09:42:36 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-23 09:42:36 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-23 09:42:36 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 09:42:36 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-23 09:42:36 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-23 09:42:36 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 09:42:36 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-23 09:42:36 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-23 09:42:36 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-05-23 09:42:36 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-23 09:42:36 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 09:42:36 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-23 09:42:36 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-23 09:42:36 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 09:42:36 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-23 09:42:36 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-23 09:42:36 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 09:42:36 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-23 09:42:36 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-23 09:42:36 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-23 09:42:36 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-23 09:42:36 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-23 09:42:36 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-23 09:42:36 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-23 09:42:36 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 09:42:36 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-23 09:42:36 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-23 09:42:36 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-23 09:42:36 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-23 09:42:36 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-23 09:42:36 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-23 09:42:36 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-23 09:42:36 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-23 09:42:36 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-23 09:42:36 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-23 09:42:36 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-23 09:42:36 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-23 09:42:36 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 09:42:36 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-23 09:42:36 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-23 09:42:36 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-23 09:42:36 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-23 09:42:36 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-23 09:42:36 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-23 09:42:36 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-23 09:42:36 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-23 09:42:36 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-23 09:42:36 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-23 09:42:36 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-23 09:42:36 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-23 09:42:36 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 09:42:36 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-23 09:42:36 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-23 09:42:36 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-23 09:42:36 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-23 09:42:36 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 09:42:36 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-23 09:42:36 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-23 09:42:36 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-23 09:42:36 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 09:42:36 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-23 09:42:36 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-23 09:42:36 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-23 09:42:36 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-23 09:42:36 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-23 09:42:36 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-23 09:42:36 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-23 09:42:36 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-23 09:42:36 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-23 09:42:36 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-23 09:42:36 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-23 09:42:36 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-23 09:42:36 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-23 09:42:36 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-23 09:42:36 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-23 09:42:36 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-23 09:42:36 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-23 09:42:36 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 09:42:36 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-23 09:42:36 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 09:42:36 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-23 09:42:36 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-23 09:42:36 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-23 09:42:36 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-23 09:42:36 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-23 09:42:36 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-23 09:42:36 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-23 09:42:36 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-23 09:42:36 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-23 09:42:36 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 09:42:36 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-23 09:42:36 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-23 09:42:36 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 09:42:36 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-23 09:42:36 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-23 09:42:36 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-23 09:42:36 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-23 09:42:36 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-23 09:42:36 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-23 09:42:36 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-23 09:42:36 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-23 09:42:36 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-23 09:42:36 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-23 09:42:37 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-23 09:42:37 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-23 09:42:37 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@70e9c95d: startup date [Thu May 23 09:42:12 CST 2019]; root of context hierarchy
2019-05-23 09:42:38 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-23 09:42:38 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-23 09:42:38 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-23 09:42:38 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-23 09:42:38 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-23 09:42:40 -Registering beans for JMX exposure on startup
2019-05-23 09:42:40 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-23 09:42:40 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-23 09:42:40 -Starting beans in phase 2147483647
2019-05-23 09:42:40 -Context refreshed
2019-05-23 09:42:40 -Found 1 custom documentation plugin(s)
2019-05-23 09:42:40 -Scanning for api listing references
2019-05-23 09:42:41 -Generating unique operation named: getCountDUsingPOST_1
2019-05-23 09:42:41 -Generating unique operation named: removeUsingPOST_1
2019-05-23 09:42:41 -Generating unique operation named: addUsingGET_1
2019-05-23 09:42:41 -Generating unique operation named: editUsingGET_1
2019-05-23 09:42:41 -Generating unique operation named: listUsingGET_1
2019-05-23 09:42:41 -Generating unique operation named: removeUsingPOST_2
2019-05-23 09:42:41 -Generating unique operation named: removeUsingPOST_3
2019-05-23 09:42:41 -Generating unique operation named: saveUsingPOST_1
2019-05-23 09:42:41 -Generating unique operation named: updateUsingGET_1
2019-05-23 09:42:41 -Generating unique operation named: updateUsingHEAD_1
2019-05-23 09:42:41 -Generating unique operation named: updateUsingPOST_1
2019-05-23 09:42:41 -Generating unique operation named: updateUsingPUT_1
2019-05-23 09:42:41 -Generating unique operation named: updateUsingPATCH_1
2019-05-23 09:42:41 -Generating unique operation named: updateUsingDELETE_1
2019-05-23 09:42:41 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-23 09:42:41 -Generating unique operation named: updateUsingTRACE_1
2019-05-23 09:42:41 -Generating unique operation named: addUsingGET_2
2019-05-23 09:42:41 -Generating unique operation named: editUsingGET_2
2019-05-23 09:42:41 -Generating unique operation named: listUsingGET_2
2019-05-23 09:42:41 -Generating unique operation named: removeUsingPOST_4
2019-05-23 09:42:41 -Generating unique operation named: removeUsingPOST_5
2019-05-23 09:42:41 -Generating unique operation named: saveUsingPOST_2
2019-05-23 09:42:41 -Generating unique operation named: updateUsingPOST_2
2019-05-23 09:42:41 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-23 09:42:41 -Generating unique operation named: addUsingGET_3
2019-05-23 09:42:41 -Generating unique operation named: editUsingGET_3
2019-05-23 09:42:41 -Generating unique operation named: listUsingGET_3
2019-05-23 09:42:41 -Generating unique operation named: removeUsingPOST_6
2019-05-23 09:42:41 -Generating unique operation named: removeUsingPOST_7
2019-05-23 09:42:41 -Generating unique operation named: saveUsingPOST_3
2019-05-23 09:42:41 -Generating unique operation named: updateUsingGET_2
2019-05-23 09:42:41 -Generating unique operation named: updateUsingHEAD_2
2019-05-23 09:42:41 -Generating unique operation named: updateUsingPOST_3
2019-05-23 09:42:41 -Generating unique operation named: updateUsingPUT_2
2019-05-23 09:42:41 -Generating unique operation named: updateUsingPATCH_2
2019-05-23 09:42:41 -Generating unique operation named: updateUsingDELETE_2
2019-05-23 09:42:41 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-23 09:42:41 -Generating unique operation named: updateUsingTRACE_2
2019-05-23 09:42:41 -Generating unique operation named: addUsingGET_4
2019-05-23 09:42:41 -Generating unique operation named: editUsingGET_4
2019-05-23 09:42:41 -Generating unique operation named: listUsingGET_4
2019-05-23 09:42:41 -Generating unique operation named: removeUsingPOST_8
2019-05-23 09:42:41 -Generating unique operation named: removeUsingPOST_9
2019-05-23 09:42:41 -Generating unique operation named: saveUsingPOST_4
2019-05-23 09:42:41 -Generating unique operation named: updateUsingGET_3
2019-05-23 09:42:41 -Generating unique operation named: updateUsingHEAD_3
2019-05-23 09:42:41 -Generating unique operation named: updateUsingPOST_4
2019-05-23 09:42:41 -Generating unique operation named: updateUsingPUT_3
2019-05-23 09:42:41 -Generating unique operation named: updateUsingPATCH_3
2019-05-23 09:42:41 -Generating unique operation named: updateUsingDELETE_3
2019-05-23 09:42:41 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-23 09:42:41 -Generating unique operation named: updateUsingTRACE_3
2019-05-23 09:42:41 -Generating unique operation named: ElecUsingGET_1
2019-05-23 09:42:41 -Generating unique operation named: addUsingGET_5
2019-05-23 09:42:41 -Generating unique operation named: editUsingGET_5
2019-05-23 09:42:41 -Generating unique operation named: listUsingGET_5
2019-05-23 09:42:41 -Generating unique operation named: removeUsingPOST_10
2019-05-23 09:42:41 -Generating unique operation named: removeUsingPOST_11
2019-05-23 09:42:41 -Generating unique operation named: saveUsingPOST_5
2019-05-23 09:42:41 -Generating unique operation named: updateUsingGET_4
2019-05-23 09:42:41 -Generating unique operation named: updateUsingHEAD_4
2019-05-23 09:42:41 -Generating unique operation named: updateUsingPOST_5
2019-05-23 09:42:41 -Generating unique operation named: updateUsingPUT_4
2019-05-23 09:42:41 -Generating unique operation named: updateUsingPATCH_4
2019-05-23 09:42:41 -Generating unique operation named: updateUsingDELETE_4
2019-05-23 09:42:42 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-23 09:42:42 -Generating unique operation named: updateUsingTRACE_4
2019-05-23 09:42:42 -Generating unique operation named: editUsingGET_6
2019-05-23 09:42:42 -Generating unique operation named: listUsingGET_6
2019-05-23 09:42:42 -Generating unique operation named: updateUsingPOST_6
2019-05-23 09:42:42 -Generating unique operation named: addUsingGET_6
2019-05-23 09:42:42 -Generating unique operation named: editUsingGET_7
2019-05-23 09:42:42 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-23 09:42:42 -Generating unique operation named: listUsingGET_7
2019-05-23 09:42:42 -Generating unique operation named: removeUsingPOST_12
2019-05-23 09:42:42 -Generating unique operation named: removeUsingPOST_13
2019-05-23 09:42:42 -Generating unique operation named: saveUsingPOST_6
2019-05-23 09:42:42 -Generating unique operation named: updateUsingGET_5
2019-05-23 09:42:42 -Generating unique operation named: updateUsingHEAD_5
2019-05-23 09:42:42 -Generating unique operation named: updateUsingPOST_7
2019-05-23 09:42:42 -Generating unique operation named: updateUsingPUT_5
2019-05-23 09:42:42 -Generating unique operation named: updateUsingPATCH_5
2019-05-23 09:42:42 -Generating unique operation named: updateUsingDELETE_5
2019-05-23 09:42:42 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-23 09:42:42 -Generating unique operation named: updateUsingTRACE_5
2019-05-23 09:42:42 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-23 09:42:42 -Generating unique operation named: addUsingGET_7
2019-05-23 09:42:42 -Generating unique operation named: editUsingGET_8
2019-05-23 09:42:42 -Generating unique operation named: listUsingGET_8
2019-05-23 09:42:42 -Generating unique operation named: removeUsingPOST_14
2019-05-23 09:42:42 -Generating unique operation named: removeUsingPOST_15
2019-05-23 09:42:42 -Generating unique operation named: saveUsingPOST_7
2019-05-23 09:42:42 -Generating unique operation named: updateUsingGET_6
2019-05-23 09:42:42 -Generating unique operation named: updateUsingHEAD_6
2019-05-23 09:42:42 -Generating unique operation named: updateUsingPOST_8
2019-05-23 09:42:42 -Generating unique operation named: updateUsingPUT_6
2019-05-23 09:42:42 -Generating unique operation named: updateUsingPATCH_6
2019-05-23 09:42:42 -Generating unique operation named: updateUsingDELETE_6
2019-05-23 09:42:42 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-23 09:42:42 -Generating unique operation named: updateUsingTRACE_6
2019-05-23 09:42:42 -Generating unique operation named: addUsingGET_8
2019-05-23 09:42:42 -Generating unique operation named: editUsingGET_9
2019-05-23 09:42:42 -Generating unique operation named: listUsingGET_9
2019-05-23 09:42:42 -Generating unique operation named: removeUsingPOST_16
2019-05-23 09:42:42 -Generating unique operation named: removeUsingPOST_17
2019-05-23 09:42:42 -Generating unique operation named: saveUsingPOST_8
2019-05-23 09:42:42 -Generating unique operation named: updateUsingGET_7
2019-05-23 09:42:42 -Generating unique operation named: updateUsingHEAD_7
2019-05-23 09:42:42 -Generating unique operation named: updateUsingPOST_9
2019-05-23 09:42:42 -Generating unique operation named: updateUsingPUT_7
2019-05-23 09:42:42 -Generating unique operation named: updateUsingPATCH_7
2019-05-23 09:42:42 -Generating unique operation named: updateUsingDELETE_7
2019-05-23 09:42:42 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-23 09:42:42 -Generating unique operation named: updateUsingTRACE_7
2019-05-23 09:42:42 -Generating unique operation named: addUsingGET_9
2019-05-23 09:42:42 -Generating unique operation named: editUsingGET_10
2019-05-23 09:42:42 -Generating unique operation named: infoUsingGET_1
2019-05-23 09:42:42 -Generating unique operation named: infoUsingHEAD_1
2019-05-23 09:42:42 -Generating unique operation named: infoUsingPOST_1
2019-05-23 09:42:42 -Generating unique operation named: infoUsingPUT_1
2019-05-23 09:42:42 -Generating unique operation named: infoUsingPATCH_1
2019-05-23 09:42:42 -Generating unique operation named: infoUsingDELETE_1
2019-05-23 09:42:42 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-23 09:42:42 -Generating unique operation named: infoUsingTRACE_1
2019-05-23 09:42:42 -Generating unique operation named: listUsingGET_10
2019-05-23 09:42:42 -Generating unique operation named: removeUsingPOST_18
2019-05-23 09:42:42 -Generating unique operation named: removeUsingPOST_19
2019-05-23 09:42:42 -Generating unique operation named: saveUsingPOST_9
2019-05-23 09:42:42 -Generating unique operation named: updateUsingPOST_10
2019-05-23 09:42:42 -Generating unique operation named: listUsingGET_11
2019-05-23 09:42:42 -Generating unique operation named: removeUsingPOST_20
2019-05-23 09:42:42 -Generating unique operation named: welcomeUsingGET_1
2019-05-23 09:42:42 -Generating unique operation named: addUsingGET_10
2019-05-23 09:42:42 -Generating unique operation named: editUsingGET_11
2019-05-23 09:42:42 -Generating unique operation named: listUsingGET_12
2019-05-23 09:42:42 -Generating unique operation named: removeUsingPOST_21
2019-05-23 09:42:42 -Generating unique operation named: saveUsingPOST_10
2019-05-23 09:42:42 -Generating unique operation named: treeUsingGET_1
2019-05-23 09:42:42 -Generating unique operation named: treeUsingGET_2
2019-05-23 09:42:42 -Generating unique operation named: updateUsingPOST_11
2019-05-23 09:42:42 -Generating unique operation named: editUsingGET_12
2019-05-23 09:42:42 -Generating unique operation named: addUsingGET_11
2019-05-23 09:42:42 -Generating unique operation named: editUsingGET_13
2019-05-23 09:42:42 -Generating unique operation named: listUsingGET_13
2019-05-23 09:42:42 -Generating unique operation named: removeUsingPOST_22
2019-05-23 09:42:42 -Generating unique operation named: removeUsingPOST_23
2019-05-23 09:42:42 -Generating unique operation named: saveUsingPOST_11
2019-05-23 09:42:42 -Generating unique operation named: updateUsingGET_8
2019-05-23 09:42:42 -Generating unique operation named: updateUsingHEAD_8
2019-05-23 09:42:42 -Generating unique operation named: updateUsingPOST_12
2019-05-23 09:42:43 -Generating unique operation named: updateUsingPUT_8
2019-05-23 09:42:43 -Generating unique operation named: updateUsingPATCH_8
2019-05-23 09:42:43 -Generating unique operation named: updateUsingDELETE_8
2019-05-23 09:42:43 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-23 09:42:43 -Generating unique operation named: updateUsingTRACE_8
2019-05-23 09:42:43 -Generating unique operation named: addUsingGET_12
2019-05-23 09:42:43 -Generating unique operation named: editUsingGET_14
2019-05-23 09:42:43 -Generating unique operation named: listUsingGET_14
2019-05-23 09:42:43 -Generating unique operation named: removeUsingPOST_24
2019-05-23 09:42:43 -Generating unique operation named: removeUsingPOST_25
2019-05-23 09:42:43 -Generating unique operation named: saveUsingPOST_12
2019-05-23 09:42:43 -Generating unique operation named: updateUsingGET_9
2019-05-23 09:42:43 -Generating unique operation named: updateUsingHEAD_9
2019-05-23 09:42:43 -Generating unique operation named: updateUsingPOST_13
2019-05-23 09:42:43 -Generating unique operation named: updateUsingPUT_9
2019-05-23 09:42:43 -Generating unique operation named: updateUsingPATCH_9
2019-05-23 09:42:43 -Generating unique operation named: updateUsingDELETE_9
2019-05-23 09:42:43 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-23 09:42:43 -Generating unique operation named: updateUsingTRACE_9
2019-05-23 09:42:43 -Generating unique operation named: addUsingGET_13
2019-05-23 09:42:43 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-23 09:42:43 -Generating unique operation named: editUsingGET_15
2019-05-23 09:42:43 -Generating unique operation named: listUsingGET_15
2019-05-23 09:42:43 -Generating unique operation named: saveUsingPOST_13
2019-05-23 09:42:43 -Generating unique operation named: saveUsingPOST_14
2019-05-23 09:42:43 -Generating unique operation named: updateUsingPOST_14
2019-05-23 09:42:43 -Generating unique operation named: listUsingGET_16
2019-05-23 09:42:43 -Generating unique operation named: listUsingHEAD_1
2019-05-23 09:42:43 -Generating unique operation named: listUsingPOST_1
2019-05-23 09:42:43 -Generating unique operation named: listUsingPUT_1
2019-05-23 09:42:43 -Generating unique operation named: listUsingPATCH_1
2019-05-23 09:42:43 -Generating unique operation named: listUsingDELETE_1
2019-05-23 09:42:43 -Generating unique operation named: listUsingOPTIONS_1
2019-05-23 09:42:43 -Generating unique operation named: listUsingTRACE_1
2019-05-23 09:42:43 -Generating unique operation named: countDDUsingGET_1
2019-05-23 09:42:43 -Generating unique operation named: exportDDUsingGET_1
2019-05-23 09:42:43 -Generating unique operation named: addUsingGET_14
2019-05-23 09:42:43 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-23 09:42:43 -Generating unique operation named: editUsingGET_16
2019-05-23 09:42:43 -Generating unique operation named: listUsingGET_17
2019-05-23 09:42:43 -Generating unique operation named: removeUsingPOST_26
2019-05-23 09:42:43 -Generating unique operation named: saveUsingPOST_15
2019-05-23 09:42:43 -Generating unique operation named: treeUsingGET_3
2019-05-23 09:42:43 -Generating unique operation named: treeViewUsingGET_1
2019-05-23 09:42:43 -Generating unique operation named: updateUsingPOST_15
2019-05-23 09:42:43 -Generating unique operation named: addUsingGET_15
2019-05-23 09:42:43 -Generating unique operation named: editUsingGET_17
2019-05-23 09:42:43 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-23 09:42:43 -Generating unique operation named: listUsingGET_18
2019-05-23 09:42:43 -Generating unique operation named: removeUsingPOST_27
2019-05-23 09:42:43 -Generating unique operation named: removeUsingPOST_28
2019-05-23 09:42:43 -Generating unique operation named: saveUsingPOST_16
2019-05-23 09:42:43 -Generating unique operation named: updateUsingGET_10
2019-05-23 09:42:43 -Generating unique operation named: updateUsingHEAD_10
2019-05-23 09:42:43 -Generating unique operation named: updateUsingPOST_16
2019-05-23 09:42:43 -Generating unique operation named: updateUsingPUT_10
2019-05-23 09:42:43 -Generating unique operation named: updateUsingPATCH_10
2019-05-23 09:42:43 -Generating unique operation named: updateUsingDELETE_10
2019-05-23 09:42:43 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-23 09:42:43 -Generating unique operation named: updateUsingTRACE_10
2019-05-23 09:42:43 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-23 09:42:43 -Generating unique operation named: addUsingGET_16
2019-05-23 09:42:43 -Generating unique operation named: editUsingGET_18
2019-05-23 09:42:43 -Generating unique operation named: listUsingGET_19
2019-05-23 09:42:43 -Generating unique operation named: removeUsingPOST_29
2019-05-23 09:42:43 -Generating unique operation named: removeUsingPOST_30
2019-05-23 09:42:43 -Generating unique operation named: saveUsingPOST_17
2019-05-23 09:42:43 -Generating unique operation named: updateUsingGET_11
2019-05-23 09:42:43 -Generating unique operation named: updateUsingHEAD_11
2019-05-23 09:42:43 -Generating unique operation named: updateUsingPOST_17
2019-05-23 09:42:43 -Generating unique operation named: updateUsingPUT_11
2019-05-23 09:42:43 -Generating unique operation named: updateUsingPATCH_11
2019-05-23 09:42:43 -Generating unique operation named: updateUsingDELETE_11
2019-05-23 09:42:43 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-23 09:42:43 -Generating unique operation named: updateUsingTRACE_11
2019-05-23 09:42:43 -Generating unique operation named: addUsingGET_17
2019-05-23 09:42:43 -Generating unique operation named: editUsingGET_19
2019-05-23 09:42:43 -Generating unique operation named: listUsingGET_20
2019-05-23 09:42:43 -Generating unique operation named: removeUsingPOST_31
2019-05-23 09:42:43 -Generating unique operation named: removeUsingPOST_32
2019-05-23 09:42:43 -Generating unique operation named: saveUsingPOST_18
2019-05-23 09:42:43 -Generating unique operation named: updateUsingGET_12
2019-05-23 09:42:43 -Generating unique operation named: updateUsingHEAD_12
2019-05-23 09:42:43 -Generating unique operation named: updateUsingPOST_18
2019-05-23 09:42:43 -Generating unique operation named: updateUsingPUT_12
2019-05-23 09:42:43 -Generating unique operation named: updateUsingPATCH_12
2019-05-23 09:42:43 -Generating unique operation named: updateUsingDELETE_12
2019-05-23 09:42:43 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-23 09:42:43 -Generating unique operation named: updateUsingTRACE_12
2019-05-23 09:42:43 -Starting Quartz Scheduler now
2019-05-23 09:42:43 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-23 09:42:43 -Starting...
2019-05-23 09:42:43 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-23 09:42:43 -Started.
2019-05-23 09:42:43 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-23 09:42:43 -Using a shared selector for servlet write/read
2019-05-23 09:42:43 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-23 09:42:43 -Started BootdoApplication in 32.865 seconds (JVM running for 33.617)
2019-05-23 09:42:43 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-23 09:42:44 -==> Parameters: 
2019-05-23 09:42:44 -<==      Total: 1
2019-05-23 09:43:04 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-23 09:43:04 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-23 09:43:04 -FrameworkServlet 'dispatcherServlet': initialization completed in 80 ms
2019-05-23 09:43:04 -Enabling session validation scheduler...
2019-05-23 09:43:04 -请求地址 : http://localhost:8081/login;JSESSIONID=f7b75f29-c5b7-4a4f-b9b5-1f6aba893586
2019-05-23 09:43:04 -HTTP METHOD : GET
2019-05-23 09:43:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-23 09:43:04 -参数 : [{}]
2019-05-23 09:43:04 -耗时 : 6
2019-05-23 09:43:04 -返回值 : login
2019-05-23 09:43:06 -请求地址 : http://localhost:8081/getVerify
2019-05-23 09:43:06 -HTTP METHOD : GET
2019-05-23 09:43:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-23 09:43:06 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@4fec8458, org.apache.shiro.web.servlet.ShiroHttpServletResponse@6f85f0f0]
2019-05-23 09:43:11 -8532
2019-05-23 09:43:12 -耗时 : 5733
2019-05-23 09:43:12 -返回值 : null
2019-05-23 09:43:17 -请求地址 : http://localhost:8081/login
2019-05-23 09:43:17 -HTTP METHOD : POST
2019-05-23 09:43:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-23 09:43:17 -参数 : [admin, 111111, 8532, org.apache.shiro.web.servlet.ShiroHttpServletRequest@6b61afce]
2019-05-23 09:43:17 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-23 09:43:17 -==> Parameters: admin(String)
2019-05-23 09:43:17 -<==      Total: 1
2019-05-23 09:43:17 -耗时 : 240
2019-05-23 09:43:17 -返回值 : {msg=操作成功, code=0}
2019-05-23 09:43:17 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-23 09:43:17 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-23 09:43:17 -==> Parameters: 1(Long), admin(String), 登录(String), 240(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-23 09:43:17.77(Timestamp)
2019-05-23 09:43:17 -请求地址 : http://localhost:8081/index
2019-05-23 09:43:17 -HTTP METHOD : GET
2019-05-23 09:43:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-23 09:43:17 -参数 : [{}]
2019-05-23 09:43:17 -<==    Updates: 1
2019-05-23 09:43:18 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-23 09:43:18 -==> Parameters: 1(Long)
2019-05-23 09:43:18 -<==      Total: 49
2019-05-23 09:43:18 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-23 09:43:18 -==> Parameters: 138(Long)
2019-05-23 09:43:18 -<==      Total: 1
2019-05-23 09:43:18 -耗时 : 591
2019-05-23 09:43:18 -返回值 : index_v1
2019-05-23 09:43:18 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-23 09:43:18 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 591(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-23 09:43:18.638(Timestamp)
2019-05-23 09:43:18 -<==    Updates: 1
2019-05-23 09:43:19 -请求地址 : http://localhost:8081/main
2019-05-23 09:43:19 -HTTP METHOD : GET
2019-05-23 09:43:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-23 09:43:19 -参数 : []
2019-05-23 09:43:19 -耗时 : 0
2019-05-23 09:43:19 -返回值 : main
2019-05-23 09:43:20 -请求地址 : http://localhost:8081/main
2019-05-23 09:43:20 -HTTP METHOD : GET
2019-05-23 09:43:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-23 09:43:20 -参数 : []
2019-05-23 09:43:20 -耗时 : 0
2019-05-23 09:43:20 -返回值 : main
2019-05-23 09:43:20 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-23 09:43:20 -HTTP METHOD : GET
2019-05-23 09:43:20 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-23 09:43:20 -参数 : []
2019-05-23 09:43:20 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-23 09:43:20 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-23 09:43:20 -<==      Total: 0
2019-05-23 09:43:20 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-23 09:43:20 -==> Parameters: 1(Long), 0(String)
2019-05-23 09:43:20 -<==      Total: 1
2019-05-23 09:43:20 -耗时 : 150
2019-05-23 09:43:20 -返回值 : com.bootdo.common.utils.PageUtils@6896a131
2019-05-23 09:43:37 -WebSocketSession[1 current WS(0)-HttpStream(1)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 12], outboundChannelpool size = 2, active threads = 0, queued tasks = 0, completed tasks = 2], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 4]
2019-05-23 09:43:37 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-23 09:43:37 -==> Parameters: 1(Long)
2019-05-23 09:43:37 -<==      Total: 93
2019-05-23 09:43:37 -请求地址 : http://localhost:8081/charts/countRun
2019-05-23 09:43:37 -HTTP METHOD : GET
2019-05-23 09:43:37 -CLASS_METHOD : com.bootdo.charts.controller.countRunController.countRun
2019-05-23 09:43:37 -参数 : []
2019-05-23 09:43:37 -耗时 : 1
2019-05-23 09:43:37 -返回值 : charts/countRun
2019-05-23 09:43:38 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-23 09:43:38 -HTTP METHOD : GET
2019-05-23 09:43:38 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-23 09:43:38 -参数 : [userType]
2019-05-23 09:43:38 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-23 09:43:38 -==> Parameters: userType(String)
2019-05-23 09:43:38 -<==      Total: 4
2019-05-23 09:43:38 -耗时 : 118
2019-05-23 09:43:38 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-23 09:43:42 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-23 09:43:42 -HTTP METHOD : GET
2019-05-23 09:43:42 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-23 09:43:42 -参数 : []
2019-05-23 09:43:42 -耗时 : 0
2019-05-23 09:43:42 -返回值 : system/dept/deptTree
2019-05-23 09:43:42 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-23 09:43:42 -HTTP METHOD : GET
2019-05-23 09:43:42 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-23 09:43:42 -参数 : []
2019-05-23 09:43:42 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-23 09:43:42 -==> Parameters: 
2019-05-23 09:43:42 -<==      Total: 3
2019-05-23 09:43:42 -耗时 : 62
2019-05-23 09:43:42 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-23 09:43:44 -请求地址 : http://localhost:8081/charts/countRun/exportRun
2019-05-23 09:43:44 -HTTP METHOD : GET
2019-05-23 09:43:44 -CLASS_METHOD : com.bootdo.charts.controller.countRunController.exportRun
2019-05-23 09:43:44 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@1d47515a, com.bootdo.moneyLog.vo.HeatLogVo@25ce5168, com.bootdo.moneyLog.vo.WaterLogVo@7c6df1d8, org.apache.shiro.web.servlet.ShiroHttpServletResponse@457c9bd3]
2019-05-23 09:43:45 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE `create_time` LIKE CONCAT('%',?,'%') and user_org = ? order by create_time asc 
2019-05-23 09:43:45 -==> Parameters: 2019(String), 2(String)
2019-05-23 09:43:45 -<==      Total: 23
2019-05-23 09:43:45 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log WHERE `create_time` LIKE CONCAT('%',?,'%') and user_org = ? order by create_time asc 
2019-05-23 09:43:45 -==> Parameters: 2019(String), 2(String)
2019-05-23 09:43:45 -<==      Total: 9
2019-05-23 09:43:45 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log WHERE `create_time` LIKE CONCAT('%',?,'%') and user_org = ? order by create_time asc 
2019-05-23 09:43:45 -==> Parameters: 2019(String), 2(String)
2019-05-23 09:43:45 -<==      Total: 20
2019-05-23 09:43:45 -耗时 : 1139
2019-05-23 09:43:45 -返回值 : null
2019-05-23 09:46:13 -请求地址 : http://localhost:8081/index
2019-05-23 09:46:13 -HTTP METHOD : GET
2019-05-23 09:46:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-23 09:46:13 -参数 : [{}]
2019-05-23 09:46:13 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-23 09:46:13 -==> Parameters: 1(Long)
2019-05-23 09:46:13 -<==      Total: 49
2019-05-23 09:46:13 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-23 09:46:13 -==> Parameters: 138(Long)
2019-05-23 09:46:13 -<==      Total: 1
2019-05-23 09:46:13 -耗时 : 32
2019-05-23 09:46:13 -返回值 : index_v1
2019-05-23 09:46:13 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-23 09:46:13 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 32(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-23 09:46:13.763(Timestamp)
2019-05-23 09:46:13 -请求地址 : http://localhost:8081/main
2019-05-23 09:46:13 -HTTP METHOD : GET
2019-05-23 09:46:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-23 09:46:13 -参数 : []
2019-05-23 09:46:13 -耗时 : 1
2019-05-23 09:46:13 -返回值 : main
2019-05-23 09:46:13 -<==    Updates: 1
2019-05-23 09:46:13 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-23 09:46:13 -HTTP METHOD : GET
2019-05-23 09:46:13 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-23 09:46:13 -参数 : []
2019-05-23 09:46:13 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-23 09:46:13 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-23 09:46:13 -<==      Total: 0
2019-05-23 09:46:13 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-23 09:46:13 -==> Parameters: 1(Long), 0(String)
2019-05-23 09:46:13 -<==      Total: 1
2019-05-23 09:46:13 -耗时 : 12
2019-05-23 09:46:13 -返回值 : com.bootdo.common.utils.PageUtils@7ff2175f
2019-05-23 09:46:14 -请求地址 : http://localhost:8081/main
2019-05-23 09:46:14 -HTTP METHOD : GET
2019-05-23 09:46:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-23 09:46:14 -参数 : []
2019-05-23 09:46:14 -耗时 : 0
2019-05-23 09:46:14 -返回值 : main
2019-05-23 09:46:23 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-23 09:46:23 -HTTP METHOD : GET
2019-05-23 09:46:23 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-23 09:46:23 -参数 : []
2019-05-23 09:46:23 -耗时 : 12
2019-05-23 09:46:23 -返回值 : charts/tableElecYY
2019-05-23 09:46:23 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-23 09:46:23 -HTTP METHOD : GET
2019-05-23 09:46:23 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-23 09:46:23 -参数 : [userType]
2019-05-23 09:46:23 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-23 09:46:23 -==> Parameters: userType(String)
2019-05-23 09:46:23 -<==      Total: 4
2019-05-23 09:46:23 -耗时 : 5
2019-05-23 09:46:23 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-23 09:46:25 -请求地址 : http://localhost:8081/charts/countOwe
2019-05-23 09:46:25 -HTTP METHOD : GET
2019-05-23 09:46:25 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.countOwe
2019-05-23 09:46:25 -参数 : []
2019-05-23 09:46:25 -耗时 : 1
2019-05-23 09:46:25 -返回值 : charts/countOwe
2019-05-23 09:46:25 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-23 09:46:25 -HTTP METHOD : GET
2019-05-23 09:46:25 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-23 09:46:25 -参数 : [userType]
2019-05-23 09:46:25 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-23 09:46:25 -==> Parameters: userType(String)
2019-05-23 09:46:25 -<==      Total: 4
2019-05-23 09:46:25 -耗时 : 6
2019-05-23 09:46:25 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-23 09:46:25 -请求地址 : http://localhost:8081/charts/countRun
2019-05-23 09:46:25 -HTTP METHOD : GET
2019-05-23 09:46:25 -CLASS_METHOD : com.bootdo.charts.controller.countRunController.countRun
2019-05-23 09:46:25 -参数 : []
2019-05-23 09:46:25 -耗时 : 0
2019-05-23 09:46:25 -返回值 : charts/countRun
2019-05-23 09:46:25 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-23 09:46:25 -HTTP METHOD : GET
2019-05-23 09:46:25 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-23 09:46:25 -参数 : [userType]
2019-05-23 09:46:25 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-23 09:46:25 -==> Parameters: userType(String)
2019-05-23 09:46:25 -<==      Total: 4
2019-05-23 09:46:25 -耗时 : 9
2019-05-23 09:46:25 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-23 09:46:29 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-23 09:46:29 -HTTP METHOD : GET
2019-05-23 09:46:29 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-23 09:46:29 -参数 : []
2019-05-23 09:46:29 -耗时 : 0
2019-05-23 09:46:29 -返回值 : system/dept/deptTree
2019-05-23 09:46:29 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-23 09:46:29 -HTTP METHOD : GET
2019-05-23 09:46:29 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-23 09:46:29 -参数 : []
2019-05-23 09:46:29 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-23 09:46:29 -==> Parameters: 
2019-05-23 09:46:29 -<==      Total: 3
2019-05-23 09:46:29 -耗时 : 4
2019-05-23 09:46:29 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-23 09:46:42 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:20)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:23)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:424)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:232)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-23 09:48:47 -请求地址 : http://localhost:8081/index
2019-05-23 09:48:47 -HTTP METHOD : GET
2019-05-23 09:48:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-23 09:48:47 -参数 : [{}]
2019-05-23 09:48:47 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-23 09:48:47 -==> Parameters: 1(Long)
2019-05-23 09:48:47 -<==      Total: 49
2019-05-23 09:48:47 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-23 09:48:47 -==> Parameters: 138(Long)
2019-05-23 09:48:47 -<==      Total: 1
2019-05-23 09:48:47 -耗时 : 27
2019-05-23 09:48:47 -返回值 : index_v1
2019-05-23 09:48:47 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-23 09:48:47 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 27(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-23 09:48:47.923(Timestamp)
2019-05-23 09:48:48 -<==    Updates: 1
2019-05-23 09:48:48 -请求地址 : http://localhost:8081/main
2019-05-23 09:48:48 -HTTP METHOD : GET
2019-05-23 09:48:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-23 09:48:48 -参数 : []
2019-05-23 09:48:48 -耗时 : 0
2019-05-23 09:48:48 -返回值 : main
2019-05-23 09:48:48 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-23 09:48:48 -HTTP METHOD : GET
2019-05-23 09:48:48 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-23 09:48:48 -参数 : []
2019-05-23 09:48:48 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-23 09:48:48 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-23 09:48:48 -<==      Total: 0
2019-05-23 09:48:48 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-23 09:48:48 -==> Parameters: 1(Long), 0(String)
2019-05-23 09:48:48 -<==      Total: 1
2019-05-23 09:48:48 -耗时 : 8
2019-05-23 09:48:48 -返回值 : com.bootdo.common.utils.PageUtils@110bc849
2019-05-23 09:48:48 -请求地址 : http://localhost:8081/main
2019-05-23 09:48:48 -HTTP METHOD : GET
2019-05-23 09:48:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-23 09:48:48 -参数 : []
2019-05-23 09:48:48 -耗时 : 1
2019-05-23 09:48:48 -返回值 : main
2019-05-23 09:48:52 -请求地址 : http://localhost:8081/charts/countRun
2019-05-23 09:48:52 -HTTP METHOD : GET
2019-05-23 09:48:52 -CLASS_METHOD : com.bootdo.charts.controller.countRunController.countRun
2019-05-23 09:48:52 -参数 : []
2019-05-23 09:48:52 -耗时 : 0
2019-05-23 09:48:52 -返回值 : charts/countRun
2019-05-23 09:48:52 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-23 09:48:52 -HTTP METHOD : GET
2019-05-23 09:48:52 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-23 09:48:52 -参数 : [userType]
2019-05-23 09:48:52 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-23 09:48:52 -==> Parameters: userType(String)
2019-05-23 09:48:52 -<==      Total: 4
2019-05-23 09:48:52 -耗时 : 5
2019-05-23 09:48:52 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-23 09:48:55 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-23 09:48:55 -HTTP METHOD : GET
2019-05-23 09:48:55 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-23 09:48:55 -参数 : []
2019-05-23 09:48:55 -耗时 : 2
2019-05-23 09:48:55 -返回值 : system/dept/deptTree
2019-05-23 09:48:56 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-23 09:48:56 -HTTP METHOD : GET
2019-05-23 09:48:56 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-23 09:48:56 -参数 : []
2019-05-23 09:48:56 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-23 09:48:56 -==> Parameters: 
2019-05-23 09:48:56 -<==      Total: 3
2019-05-23 09:48:56 -耗时 : 2
2019-05-23 09:48:56 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-23 09:48:57 -请求地址 : http://localhost:8081/charts/countRun/exportRun
2019-05-23 09:48:57 -HTTP METHOD : GET
2019-05-23 09:48:57 -CLASS_METHOD : com.bootdo.charts.controller.countRunController.exportRun
2019-05-23 09:48:57 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@2f295d95, com.bootdo.moneyLog.vo.HeatLogVo@61bfd21e, com.bootdo.moneyLog.vo.WaterLogVo@20745090, org.apache.shiro.web.servlet.ShiroHttpServletResponse@741f7a82]
2019-05-23 09:48:57 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE `create_time` LIKE CONCAT('%',?,'%') and user_org = ? order by create_time asc 
2019-05-23 09:48:57 -==> Parameters: 2019(String), 2(String)
2019-05-23 09:48:57 -<==      Total: 23
2019-05-23 09:48:57 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log WHERE `create_time` LIKE CONCAT('%',?,'%') and user_org = ? order by create_time asc 
2019-05-23 09:48:57 -==> Parameters: 2019(String), 2(String)
2019-05-23 09:48:58 -<==      Total: 9
2019-05-23 09:48:58 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log WHERE `create_time` LIKE CONCAT('%',?,'%') and user_org = ? order by create_time asc 
2019-05-23 09:48:58 -==> Parameters: 2019(String), 2(String)
2019-05-23 09:48:58 -<==      Total: 20
2019-05-23 09:48:58 -耗时 : 75
2019-05-23 09:48:58 -返回值 : null
2019-05-23 09:50:47 -请求地址 : http://localhost:8081/charts/countRun/exportRun
2019-05-23 09:50:47 -HTTP METHOD : GET
2019-05-23 09:50:47 -CLASS_METHOD : com.bootdo.charts.controller.countRunController.exportRun
2019-05-23 09:50:47 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@194dd2f9, com.bootdo.moneyLog.vo.HeatLogVo@b536936, com.bootdo.moneyLog.vo.WaterLogVo@66943164, org.apache.shiro.web.servlet.ShiroHttpServletResponse@5119f667]
2019-05-23 09:50:47 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE `create_time` LIKE CONCAT('%',?,'%') and user_org = ? order by create_time asc 
2019-05-23 09:50:47 -==> Parameters: 2019(String), 2(String)
2019-05-23 09:50:47 -<==      Total: 23
2019-05-23 09:50:47 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log WHERE `create_time` LIKE CONCAT('%',?,'%') and user_org = ? order by create_time asc 
2019-05-23 09:50:47 -==> Parameters: 2019(String), 2(String)
2019-05-23 09:50:47 -<==      Total: 9
2019-05-23 09:50:47 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log WHERE `create_time` LIKE CONCAT('%',?,'%') and user_org = ? order by create_time asc 
2019-05-23 09:50:47 -==> Parameters: 2019(String), 2(String)
2019-05-23 09:50:47 -<==      Total: 20
2019-05-23 09:50:47 -耗时 : 50
2019-05-23 09:50:47 -返回值 : null
2019-05-23 09:52:13 -请求地址 : http://localhost:8081/charts/countRun/getCountRun
2019-05-23 09:52:13 -HTTP METHOD : POST
2019-05-23 09:52:13 -CLASS_METHOD : com.bootdo.charts.controller.countRunController.getCountRun
2019-05-23 09:52:14 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@4ac12cb6, com.bootdo.moneyLog.vo.WaterLogVo@78c939f3, com.bootdo.moneyLog.vo.HeatLogVo@43cf360d]
2019-05-23 09:52:14 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("?","-01") and user_org = ? 
2019-05-23 09:52:14 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-23 09:52:14 -nested exception is org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:167)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:82)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy102.Count1ElecLog(Unknown Source)
	at com.bootdo.moneyLog.service.impl.ElecLogServiceImpl.Count1ElecLog(ElecLogServiceImpl.java:267)
	at com.bootdo.charts.controller.countRunController.getCountRun(countRunController.java:59)
	at com.bootdo.charts.controller.countRunController$$FastClassBySpringCGLIB$$3384ead5.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor163.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.countRunController$$EnhancerBySpringCGLIB$$24d3d635.getCountRun(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
	at org.apache.ibatis.scripting.defaults.DefaultParameterHandler.setParameters(DefaultParameterHandler.java:89)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.parameterize(PreparedStatementHandler.java:93)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.parameterize(RoutingStatementHandler.java:64)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:86)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:77)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 99 common frames omitted
Caused by: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
	at org.apache.ibatis.type.BaseTypeHandler.setParameter(BaseTypeHandler.java:55)
	at org.apache.ibatis.scripting.defaults.DefaultParameterHandler.setParameters(DefaultParameterHandler.java:87)
	... 115 common frames omitted
Caused by: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.PreparedStatement.checkBounds(PreparedStatement.java:3327)
	at com.mysql.jdbc.PreparedStatement.setInternal(PreparedStatement.java:3312)
	at com.mysql.jdbc.PreparedStatement.setString(PreparedStatement.java:4027)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2823)
	at com.alibaba.druid.filter.FilterAdapter.preparedStatement_setString(FilterAdapter.java:1340)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2820)
	at com.alibaba.druid.filter.FilterAdapter.preparedStatement_setString(FilterAdapter.java:1340)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2820)
	at com.alibaba.druid.filter.FilterAdapter.preparedStatement_setString(FilterAdapter.java:1340)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2820)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.setString(PreparedStatementProxyImpl.java:560)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.setString(DruidPooledPreparedStatement.java:365)
	at sun.reflect.GeneratedMethodAccessor138.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:67)
	at com.sun.proxy.$Proxy173.setString(Unknown Source)
	at org.apache.ibatis.type.StringTypeHandler.setNonNullParameter(StringTypeHandler.java:31)
	at org.apache.ibatis.type.StringTypeHandler.setNonNullParameter(StringTypeHandler.java:26)
	at org.apache.ibatis.type.BaseTypeHandler.setParameter(BaseTypeHandler.java:53)
	... 116 common frames omitted
2019-05-23 09:52:14 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/countRun/getCountRun(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).(String), null, 2019-05-23 09:52:14.061(Timestamp)
2019-05-23 09:52:14 -<==    Updates: 1
2019-05-23 10:12:37 -Starting BootdoApplication on PC-201905091110 with PID 14172 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-23 10:12:37 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-23 10:12:37 -The following profiles are active: dev
2019-05-23 10:12:37 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@70e9c95d: startup date [Thu May 23 10:12:37 CST 2019]; root of context hierarchy
2019-05-23 10:12:41 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-23 10:12:43 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$e01c8274] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 10:12:43 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$d275b11b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 10:12:49 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 10:12:50 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 10:12:50 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 10:12:50 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-23 10:12:50 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-23 10:12:50 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 10:12:50 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 10:12:50 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 10:12:50 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 10:12:51 -Tomcat initialized with port(s): 8081 (http)
2019-05-23 10:12:51 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-23 10:12:51 -Starting service [Tomcat]
2019-05-23 10:12:51 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-23 10:12:51 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-23 10:12:52 -Initializing Spring embedded WebApplicationContext
2019-05-23 10:12:52 -Root WebApplicationContext: initialization completed in 14514 ms
2019-05-23 10:12:53 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-23 10:12:53 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-23 10:12:53 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-23 10:12:53 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-23 10:12:53 -Filter xssFilter was not registered (disabled)
2019-05-23 10:12:53 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-23 10:12:53 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-23 10:12:53 -Servlet statViewServlet mapped to [/druid/*]
2019-05-23 10:12:53 -Servlet dispatcherServlet mapped to [/]
2019-05-23 10:12:56 -Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'countDDController': Unsatisfied dependency expressed through field 'elecLogService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogServiceImpl': Unsatisfied dependency expressed through field 'elecLogDao'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogDao' defined in file [D:\eclipse2018-work\bootdo\target\classes\com\bootdo\moneyLog\dao\ElecLogDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\ElecLogMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'java.lang.Intege'.  Cause: java.lang.ClassNotFoundException: Cannot find class: java.lang.Intege
2019-05-23 10:12:56 -Stopping service [Tomcat]
2019-05-23 10:12:56 -

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2019-05-23 10:12:56 -Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'countDDController': Unsatisfied dependency expressed through field 'elecLogService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogServiceImpl': Unsatisfied dependency expressed through field 'elecLogDao'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogDao' defined in file [D:\eclipse2018-work\bootdo\target\classes\com\bootdo\moneyLog\dao\ElecLogDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\ElecLogMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'java.lang.Intege'.  Cause: java.lang.ClassNotFoundException: Cannot find class: java.lang.Intege
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:587)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:91)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:373)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1350)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:580)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:760)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:869)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.bootdo.BootdoApplication.main(BootdoApplication.java:22)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogServiceImpl': Unsatisfied dependency expressed through field 'elecLogDao'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogDao' defined in file [D:\eclipse2018-work\bootdo\target\classes\com\bootdo\moneyLog\dao\ElecLogDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\ElecLogMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'java.lang.Intege'.  Cause: java.lang.ClassNotFoundException: Cannot find class: java.lang.Intege
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:587)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:91)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:373)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1350)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:580)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:251)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1065)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:584)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogDao' defined in file [D:\eclipse2018-work\bootdo\target\classes\com\bootdo\moneyLog\dao\ElecLogDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\ElecLogMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'java.lang.Intege'.  Cause: java.lang.ClassNotFoundException: Cannot find class: java.lang.Intege
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1445)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1332)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:580)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:251)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1065)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:584)
	... 32 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\ElecLogMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'java.lang.Intege'.  Cause: java.lang.ClassNotFoundException: Cannot find class: java.lang.Intege
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:590)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1256)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1105)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:251)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1065)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1430)
	... 43 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\ElecLogMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'java.lang.Intege'.  Cause: java.lang.ClassNotFoundException: Cannot find class: java.lang.Intege
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:582)
	... 55 common frames omitted
Caused by: org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\ElecLogMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'java.lang.Intege'.  Cause: java.lang.ClassNotFoundException: Cannot find class: java.lang.Intege
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:522)
	at org.mybatis.spring.SqlSessionFactoryBean.afterPropertiesSet(SqlSessionFactoryBean.java:381)
	at org.mybatis.spring.SqlSessionFactoryBean.getObject(SqlSessionFactoryBean.java:546)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration.sqlSessionFactory(MybatisAutoConfiguration.java:130)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$12f0d3a4.CGLIB$sqlSessionFactory$0(<generated>)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$12f0d3a4$$FastClassBySpringCGLIB$$b6dd579b.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:361)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$12f0d3a4.sqlSessionFactory(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 56 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'java.lang.Intege'.  Cause: java.lang.ClassNotFoundException: Cannot find class: java.lang.Intege
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:120)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.parse(XMLMapperBuilder.java:92)
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:520)
	... 69 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'java.lang.Intege'.  Cause: java.lang.ClassNotFoundException: Cannot find class: java.lang.Intege
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:118)
	at org.apache.ibatis.builder.xml.XMLStatementBuilder.parseStatementNode(XMLStatementBuilder.java:74)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.buildStatementFromContext(XMLMapperBuilder.java:135)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.buildStatementFromContext(XMLMapperBuilder.java:128)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:118)
	... 71 common frames omitted
Caused by: org.apache.ibatis.type.TypeException: Could not resolve type alias 'java.lang.Intege'.  Cause: java.lang.ClassNotFoundException: Cannot find class: java.lang.Intege
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:120)
	at org.apache.ibatis.builder.BaseBuilder.resolveAlias(BaseBuilder.java:149)
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:116)
	... 75 common frames omitted
Caused by: java.lang.ClassNotFoundException: Cannot find class: java.lang.Intege
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:200)
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:89)
	at org.apache.ibatis.io.Resources.classForName(Resources.java:261)
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:116)
	... 77 common frames omitted
2019-05-23 10:22:42 -Starting BootdoApplication on PC-201905091110 with PID 5360 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-23 10:22:42 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-23 10:22:42 -The following profiles are active: dev
2019-05-23 10:22:42 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Thu May 23 10:22:42 CST 2019]; root of context hierarchy
2019-05-23 10:22:45 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-23 10:22:47 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$71fd8325] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 10:22:47 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$6456b1cc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 10:22:48 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 10:22:48 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 10:22:48 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 10:22:48 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-23 10:22:48 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-23 10:22:48 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 10:22:48 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 10:22:48 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 10:22:49 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 10:22:49 -Tomcat initialized with port(s): 8081 (http)
2019-05-23 10:22:49 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-23 10:22:49 -Starting service [Tomcat]
2019-05-23 10:22:49 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-23 10:22:49 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-23 10:22:50 -Initializing Spring embedded WebApplicationContext
2019-05-23 10:22:50 -Root WebApplicationContext: initialization completed in 7961 ms
2019-05-23 10:22:50 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-23 10:22:50 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-23 10:22:50 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-23 10:22:50 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-23 10:22:50 -Filter xssFilter was not registered (disabled)
2019-05-23 10:22:50 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-23 10:22:50 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-23 10:22:50 -Servlet statViewServlet mapped to [/druid/*]
2019-05-23 10:22:50 -Servlet dispatcherServlet mapped to [/]
2019-05-23 10:22:56 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Thu May 23 10:22:42 CST 2019]; root of context hierarchy
2019-05-23 10:22:57 -Using default implementation for ThreadExecutor
2019-05-23 10:22:57 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-23 10:22:57 -Quartz Scheduler v.2.2.1 created.
2019-05-23 10:22:57 -RAMJobStore initialized.
2019-05-23 10:22:57 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-23 10:22:57 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-23 10:22:57 -Quartz scheduler version: 2.2.1
2019-05-23 10:22:57 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@305b43ca
2019-05-23 10:22:58 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-23 10:22:58 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-23 10:23:01 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-23 10:23:01 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-23 10:23:01 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 10:23:01 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-23 10:23:01 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-23 10:23:01 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 10:23:01 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-23 10:23:01 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-23 10:23:01 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-23 10:23:01 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-23 10:23:01 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-23 10:23:01 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 10:23:01 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 10:23:01 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-23 10:23:01 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-23 10:23:01 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-23 10:23:01 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 10:23:01 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-23 10:23:01 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-23 10:23:01 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-23 10:23:01 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 10:23:01 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-23 10:23:01 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-23 10:23:01 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 10:23:01 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 10:23:01 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-23 10:23:01 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-23 10:23:01 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-23 10:23:01 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-23 10:23:01 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 10:23:01 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-23 10:23:01 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-23 10:23:01 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 10:23:01 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-23 10:23:01 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-23 10:23:01 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 10:23:01 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-23 10:23:01 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-23 10:23:01 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-23 10:23:01 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-23 10:23:01 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 10:23:01 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-23 10:23:01 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-23 10:23:01 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-23 10:23:01 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 10:23:01 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-23 10:23:01 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-23 10:23:01 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-23 10:23:01 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-23 10:23:01 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-23 10:23:01 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-23 10:23:01 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 10:23:01 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-23 10:23:01 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-23 10:23:01 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 10:23:01 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-23 10:23:01 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-23 10:23:01 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 10:23:01 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-23 10:23:01 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-23 10:23:01 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-23 10:23:01 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-23 10:23:01 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-23 10:23:01 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-23 10:23:01 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-23 10:23:01 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-23 10:23:01 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-23 10:23:01 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 10:23:01 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-23 10:23:01 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-23 10:23:01 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 10:23:01 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-23 10:23:01 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-23 10:23:01 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-23 10:23:01 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-23 10:23:01 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 10:23:01 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-23 10:23:01 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-23 10:23:01 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-23 10:23:01 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-23 10:23:01 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-23 10:23:01 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-23 10:23:01 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-23 10:23:01 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-23 10:23:01 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-23 10:23:01 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-23 10:23:01 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-23 10:23:01 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 10:23:01 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-23 10:23:01 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-23 10:23:01 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-23 10:23:01 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-23 10:23:01 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-23 10:23:01 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-23 10:23:01 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-23 10:23:01 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-23 10:23:01 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-23 10:23:01 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 10:23:01 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-23 10:23:01 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 10:23:01 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-23 10:23:01 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-23 10:23:01 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-23 10:23:01 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-23 10:23:01 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-23 10:23:01 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-23 10:23:01 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-23 10:23:01 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-23 10:23:01 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 10:23:01 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-23 10:23:01 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-23 10:23:01 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-23 10:23:01 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-23 10:23:01 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-23 10:23:01 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-23 10:23:01 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-23 10:23:01 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-23 10:23:01 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-23 10:23:01 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-23 10:23:01 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-23 10:23:01 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 10:23:01 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-23 10:23:01 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-23 10:23:01 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 10:23:01 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-23 10:23:01 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-23 10:23:01 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-23 10:23:01 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-23 10:23:01 -Mapped "{[/moneyList/moneyList/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 10:23:01 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-23 10:23:01 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-23 10:23:01 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-23 10:23:01 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-23 10:23:01 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-23 10:23:01 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-23 10:23:01 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-23 10:23:01 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-23 10:23:01 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 10:23:01 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-23 10:23:01 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-23 10:23:01 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-23 10:23:01 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 10:23:01 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-23 10:23:01 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-23 10:23:01 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-23 10:23:01 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-23 10:23:01 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 10:23:01 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-23 10:23:01 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-23 10:23:01 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-23 10:23:01 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 10:23:01 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-23 10:23:01 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-23 10:23:01 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-23 10:23:01 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-23 10:23:01 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 10:23:01 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-23 10:23:01 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-23 10:23:01 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-23 10:23:01 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 10:23:01 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-23 10:23:01 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-23 10:23:01 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-23 10:23:01 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-23 10:23:01 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-23 10:23:01 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 10:23:01 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-23 10:23:01 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-23 10:23:01 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-23 10:23:01 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-23 10:23:01 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 10:23:01 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 10:23:01 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-23 10:23:01 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-23 10:23:01 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-05-23 10:23:01 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-23 10:23:01 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 10:23:01 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-23 10:23:01 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-23 10:23:01 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 10:23:01 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-23 10:23:01 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-23 10:23:01 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 10:23:01 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-23 10:23:01 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-23 10:23:01 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-23 10:23:01 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-23 10:23:01 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-23 10:23:01 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-23 10:23:01 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-23 10:23:01 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 10:23:01 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-23 10:23:01 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-23 10:23:01 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-23 10:23:01 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-23 10:23:01 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-23 10:23:01 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-23 10:23:01 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-23 10:23:01 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-23 10:23:01 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-23 10:23:01 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-23 10:23:01 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-23 10:23:01 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-23 10:23:01 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 10:23:01 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-23 10:23:01 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-23 10:23:01 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-23 10:23:01 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-23 10:23:01 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-23 10:23:01 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-23 10:23:01 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-23 10:23:01 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-23 10:23:01 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-23 10:23:01 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-23 10:23:01 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-23 10:23:01 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-23 10:23:01 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 10:23:01 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-23 10:23:01 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-23 10:23:01 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-23 10:23:01 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-23 10:23:01 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 10:23:01 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-23 10:23:01 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-23 10:23:01 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-23 10:23:01 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 10:23:01 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-23 10:23:01 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-23 10:23:01 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-23 10:23:01 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-23 10:23:01 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-23 10:23:01 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-23 10:23:01 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-23 10:23:01 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-23 10:23:01 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-23 10:23:01 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-23 10:23:01 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-23 10:23:01 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-23 10:23:01 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-23 10:23:01 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-23 10:23:01 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-23 10:23:01 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-23 10:23:01 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-23 10:23:01 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 10:23:01 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-23 10:23:01 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-23 10:23:01 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 10:23:01 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-23 10:23:01 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-23 10:23:01 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-23 10:23:01 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-23 10:23:01 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-23 10:23:01 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-23 10:23:01 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-23 10:23:01 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-23 10:23:01 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 10:23:01 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-23 10:23:01 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-23 10:23:01 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 10:23:01 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-23 10:23:01 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-23 10:23:01 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-23 10:23:01 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-23 10:23:01 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-23 10:23:01 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-23 10:23:01 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-23 10:23:01 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-23 10:23:02 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-23 10:23:02 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-23 10:23:02 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-23 10:23:03 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-23 10:23:03 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Thu May 23 10:22:42 CST 2019]; root of context hierarchy
2019-05-23 10:23:04 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-23 10:23:04 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-23 10:23:04 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-23 10:23:04 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-23 10:23:04 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-23 10:23:08 -Registering beans for JMX exposure on startup
2019-05-23 10:23:08 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-23 10:23:08 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-23 10:23:08 -Starting beans in phase 2147483647
2019-05-23 10:23:08 -Context refreshed
2019-05-23 10:23:08 -Found 1 custom documentation plugin(s)
2019-05-23 10:23:08 -Scanning for api listing references
2019-05-23 10:23:09 -Generating unique operation named: getCountDUsingPOST_1
2019-05-23 10:23:09 -Generating unique operation named: removeUsingPOST_1
2019-05-23 10:23:09 -Generating unique operation named: addUsingGET_1
2019-05-23 10:23:09 -Generating unique operation named: editUsingGET_1
2019-05-23 10:23:09 -Generating unique operation named: listUsingGET_1
2019-05-23 10:23:09 -Generating unique operation named: removeUsingPOST_2
2019-05-23 10:23:09 -Generating unique operation named: removeUsingPOST_3
2019-05-23 10:23:09 -Generating unique operation named: saveUsingPOST_1
2019-05-23 10:23:09 -Generating unique operation named: updateUsingGET_1
2019-05-23 10:23:09 -Generating unique operation named: updateUsingHEAD_1
2019-05-23 10:23:09 -Generating unique operation named: updateUsingPOST_1
2019-05-23 10:23:09 -Generating unique operation named: updateUsingPUT_1
2019-05-23 10:23:09 -Generating unique operation named: updateUsingPATCH_1
2019-05-23 10:23:09 -Generating unique operation named: updateUsingDELETE_1
2019-05-23 10:23:09 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-23 10:23:09 -Generating unique operation named: updateUsingTRACE_1
2019-05-23 10:23:09 -Generating unique operation named: addUsingGET_2
2019-05-23 10:23:09 -Generating unique operation named: editUsingGET_2
2019-05-23 10:23:10 -Generating unique operation named: listUsingGET_2
2019-05-23 10:23:10 -Generating unique operation named: removeUsingPOST_4
2019-05-23 10:23:10 -Generating unique operation named: removeUsingPOST_5
2019-05-23 10:23:10 -Generating unique operation named: saveUsingPOST_2
2019-05-23 10:23:10 -Generating unique operation named: updateUsingPOST_2
2019-05-23 10:23:10 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-23 10:23:10 -Generating unique operation named: addUsingGET_3
2019-05-23 10:23:10 -Generating unique operation named: editUsingGET_3
2019-05-23 10:23:10 -Generating unique operation named: listUsingGET_3
2019-05-23 10:23:10 -Generating unique operation named: removeUsingPOST_6
2019-05-23 10:23:10 -Generating unique operation named: removeUsingPOST_7
2019-05-23 10:23:10 -Generating unique operation named: saveUsingPOST_3
2019-05-23 10:23:10 -Generating unique operation named: updateUsingGET_2
2019-05-23 10:23:10 -Generating unique operation named: updateUsingHEAD_2
2019-05-23 10:23:10 -Generating unique operation named: updateUsingPOST_3
2019-05-23 10:23:10 -Generating unique operation named: updateUsingPUT_2
2019-05-23 10:23:10 -Generating unique operation named: updateUsingPATCH_2
2019-05-23 10:23:10 -Generating unique operation named: updateUsingDELETE_2
2019-05-23 10:23:10 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-23 10:23:10 -Generating unique operation named: updateUsingTRACE_2
2019-05-23 10:23:10 -Generating unique operation named: addUsingGET_4
2019-05-23 10:23:10 -Generating unique operation named: editUsingGET_4
2019-05-23 10:23:10 -Generating unique operation named: listUsingGET_4
2019-05-23 10:23:10 -Generating unique operation named: removeUsingPOST_8
2019-05-23 10:23:10 -Generating unique operation named: removeUsingPOST_9
2019-05-23 10:23:10 -Generating unique operation named: saveUsingPOST_4
2019-05-23 10:23:10 -Generating unique operation named: updateUsingGET_3
2019-05-23 10:23:10 -Generating unique operation named: updateUsingHEAD_3
2019-05-23 10:23:10 -Generating unique operation named: updateUsingPOST_4
2019-05-23 10:23:10 -Generating unique operation named: updateUsingPUT_3
2019-05-23 10:23:10 -Generating unique operation named: updateUsingPATCH_3
2019-05-23 10:23:10 -Generating unique operation named: updateUsingDELETE_3
2019-05-23 10:23:10 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-23 10:23:10 -Generating unique operation named: updateUsingTRACE_3
2019-05-23 10:23:10 -Generating unique operation named: ElecUsingGET_1
2019-05-23 10:23:10 -Generating unique operation named: addUsingGET_5
2019-05-23 10:23:10 -Generating unique operation named: editUsingGET_5
2019-05-23 10:23:10 -Generating unique operation named: listUsingGET_5
2019-05-23 10:23:10 -Generating unique operation named: removeUsingPOST_10
2019-05-23 10:23:10 -Generating unique operation named: removeUsingPOST_11
2019-05-23 10:23:10 -Generating unique operation named: saveUsingPOST_5
2019-05-23 10:23:10 -Generating unique operation named: updateUsingGET_4
2019-05-23 10:23:10 -Generating unique operation named: updateUsingHEAD_4
2019-05-23 10:23:10 -Generating unique operation named: updateUsingPOST_5
2019-05-23 10:23:10 -Generating unique operation named: updateUsingPUT_4
2019-05-23 10:23:10 -Generating unique operation named: updateUsingPATCH_4
2019-05-23 10:23:10 -Generating unique operation named: updateUsingDELETE_4
2019-05-23 10:23:10 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-23 10:23:10 -Generating unique operation named: updateUsingTRACE_4
2019-05-23 10:23:10 -Generating unique operation named: editUsingGET_6
2019-05-23 10:23:10 -Generating unique operation named: listUsingGET_6
2019-05-23 10:23:10 -Generating unique operation named: updateUsingPOST_6
2019-05-23 10:23:10 -Generating unique operation named: addUsingGET_6
2019-05-23 10:23:10 -Generating unique operation named: editUsingGET_7
2019-05-23 10:23:10 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-23 10:23:10 -Generating unique operation named: listUsingGET_7
2019-05-23 10:23:10 -Generating unique operation named: removeUsingPOST_12
2019-05-23 10:23:10 -Generating unique operation named: removeUsingPOST_13
2019-05-23 10:23:10 -Generating unique operation named: saveUsingPOST_6
2019-05-23 10:23:10 -Generating unique operation named: updateUsingGET_5
2019-05-23 10:23:10 -Generating unique operation named: updateUsingHEAD_5
2019-05-23 10:23:10 -Generating unique operation named: updateUsingPOST_7
2019-05-23 10:23:10 -Generating unique operation named: updateUsingPUT_5
2019-05-23 10:23:10 -Generating unique operation named: updateUsingPATCH_5
2019-05-23 10:23:10 -Generating unique operation named: updateUsingDELETE_5
2019-05-23 10:23:10 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-23 10:23:10 -Generating unique operation named: updateUsingTRACE_5
2019-05-23 10:23:10 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-23 10:23:10 -Generating unique operation named: addUsingGET_7
2019-05-23 10:23:10 -Generating unique operation named: editUsingGET_8
2019-05-23 10:23:10 -Generating unique operation named: listUsingGET_8
2019-05-23 10:23:11 -Generating unique operation named: removeUsingPOST_14
2019-05-23 10:23:11 -Generating unique operation named: removeUsingPOST_15
2019-05-23 10:23:11 -Generating unique operation named: saveUsingPOST_7
2019-05-23 10:23:11 -Generating unique operation named: updateUsingGET_6
2019-05-23 10:23:11 -Generating unique operation named: updateUsingHEAD_6
2019-05-23 10:23:11 -Generating unique operation named: updateUsingPOST_8
2019-05-23 10:23:11 -Generating unique operation named: updateUsingPUT_6
2019-05-23 10:23:11 -Generating unique operation named: updateUsingPATCH_6
2019-05-23 10:23:11 -Generating unique operation named: updateUsingDELETE_6
2019-05-23 10:23:11 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-23 10:23:11 -Generating unique operation named: updateUsingTRACE_6
2019-05-23 10:23:11 -Generating unique operation named: addUsingGET_8
2019-05-23 10:23:11 -Generating unique operation named: editUsingGET_9
2019-05-23 10:23:11 -Generating unique operation named: listUsingGET_9
2019-05-23 10:23:11 -Generating unique operation named: removeUsingPOST_16
2019-05-23 10:23:11 -Generating unique operation named: removeUsingPOST_17
2019-05-23 10:23:11 -Generating unique operation named: saveUsingPOST_8
2019-05-23 10:23:11 -Generating unique operation named: updateUsingGET_7
2019-05-23 10:23:11 -Generating unique operation named: updateUsingHEAD_7
2019-05-23 10:23:11 -Generating unique operation named: updateUsingPOST_9
2019-05-23 10:23:11 -Generating unique operation named: updateUsingPUT_7
2019-05-23 10:23:11 -Generating unique operation named: updateUsingPATCH_7
2019-05-23 10:23:11 -Generating unique operation named: updateUsingDELETE_7
2019-05-23 10:23:11 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-23 10:23:11 -Generating unique operation named: updateUsingTRACE_7
2019-05-23 10:23:11 -Generating unique operation named: addUsingGET_9
2019-05-23 10:23:11 -Generating unique operation named: editUsingGET_10
2019-05-23 10:23:11 -Generating unique operation named: infoUsingGET_1
2019-05-23 10:23:11 -Generating unique operation named: infoUsingHEAD_1
2019-05-23 10:23:11 -Generating unique operation named: infoUsingPOST_1
2019-05-23 10:23:11 -Generating unique operation named: infoUsingPUT_1
2019-05-23 10:23:11 -Generating unique operation named: infoUsingPATCH_1
2019-05-23 10:23:11 -Generating unique operation named: infoUsingDELETE_1
2019-05-23 10:23:11 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-23 10:23:11 -Generating unique operation named: infoUsingTRACE_1
2019-05-23 10:23:11 -Generating unique operation named: listUsingGET_10
2019-05-23 10:23:11 -Generating unique operation named: removeUsingPOST_18
2019-05-23 10:23:11 -Generating unique operation named: removeUsingPOST_19
2019-05-23 10:23:11 -Generating unique operation named: saveUsingPOST_9
2019-05-23 10:23:11 -Generating unique operation named: updateUsingPOST_10
2019-05-23 10:23:11 -Generating unique operation named: listUsingGET_11
2019-05-23 10:23:11 -Generating unique operation named: removeUsingPOST_20
2019-05-23 10:23:11 -Generating unique operation named: welcomeUsingGET_1
2019-05-23 10:23:11 -Generating unique operation named: addUsingGET_10
2019-05-23 10:23:11 -Generating unique operation named: editUsingGET_11
2019-05-23 10:23:11 -Generating unique operation named: listUsingGET_12
2019-05-23 10:23:11 -Generating unique operation named: removeUsingPOST_21
2019-05-23 10:23:11 -Generating unique operation named: saveUsingPOST_10
2019-05-23 10:23:11 -Generating unique operation named: treeUsingGET_1
2019-05-23 10:23:11 -Generating unique operation named: treeUsingGET_2
2019-05-23 10:23:11 -Generating unique operation named: updateUsingPOST_11
2019-05-23 10:23:11 -Generating unique operation named: editUsingGET_12
2019-05-23 10:23:11 -Generating unique operation named: addUsingGET_11
2019-05-23 10:23:11 -Generating unique operation named: editUsingGET_13
2019-05-23 10:23:11 -Generating unique operation named: listUsingGET_13
2019-05-23 10:23:11 -Generating unique operation named: removeUsingPOST_22
2019-05-23 10:23:11 -Generating unique operation named: removeUsingPOST_23
2019-05-23 10:23:11 -Generating unique operation named: saveUsingPOST_11
2019-05-23 10:23:11 -Generating unique operation named: updateUsingGET_8
2019-05-23 10:23:11 -Generating unique operation named: updateUsingHEAD_8
2019-05-23 10:23:11 -Generating unique operation named: updateUsingPOST_12
2019-05-23 10:23:11 -Generating unique operation named: updateUsingPUT_8
2019-05-23 10:23:11 -Generating unique operation named: updateUsingPATCH_8
2019-05-23 10:23:11 -Generating unique operation named: updateUsingDELETE_8
2019-05-23 10:23:11 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-23 10:23:11 -Generating unique operation named: updateUsingTRACE_8
2019-05-23 10:23:11 -Generating unique operation named: addUsingGET_12
2019-05-23 10:23:11 -Generating unique operation named: editUsingGET_14
2019-05-23 10:23:12 -Generating unique operation named: listUsingGET_14
2019-05-23 10:23:12 -Generating unique operation named: removeUsingPOST_24
2019-05-23 10:23:12 -Generating unique operation named: removeUsingPOST_25
2019-05-23 10:23:12 -Generating unique operation named: saveUsingPOST_12
2019-05-23 10:23:12 -Generating unique operation named: updateUsingGET_9
2019-05-23 10:23:12 -Generating unique operation named: updateUsingHEAD_9
2019-05-23 10:23:12 -Generating unique operation named: updateUsingPOST_13
2019-05-23 10:23:12 -Generating unique operation named: updateUsingPUT_9
2019-05-23 10:23:12 -Generating unique operation named: updateUsingPATCH_9
2019-05-23 10:23:12 -Generating unique operation named: updateUsingDELETE_9
2019-05-23 10:23:12 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-23 10:23:12 -Generating unique operation named: updateUsingTRACE_9
2019-05-23 10:23:12 -Generating unique operation named: addUsingGET_13
2019-05-23 10:23:12 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-23 10:23:12 -Generating unique operation named: editUsingGET_15
2019-05-23 10:23:12 -Generating unique operation named: listUsingGET_15
2019-05-23 10:23:12 -Generating unique operation named: saveUsingPOST_13
2019-05-23 10:23:12 -Generating unique operation named: saveUsingPOST_14
2019-05-23 10:23:12 -Generating unique operation named: updateUsingPOST_14
2019-05-23 10:23:12 -Generating unique operation named: listUsingGET_16
2019-05-23 10:23:12 -Generating unique operation named: listUsingHEAD_1
2019-05-23 10:23:12 -Generating unique operation named: listUsingPOST_1
2019-05-23 10:23:12 -Generating unique operation named: listUsingPUT_1
2019-05-23 10:23:12 -Generating unique operation named: listUsingPATCH_1
2019-05-23 10:23:12 -Generating unique operation named: listUsingDELETE_1
2019-05-23 10:23:12 -Generating unique operation named: listUsingOPTIONS_1
2019-05-23 10:23:12 -Generating unique operation named: listUsingTRACE_1
2019-05-23 10:23:12 -Generating unique operation named: countDDUsingGET_1
2019-05-23 10:23:12 -Generating unique operation named: exportDDUsingGET_1
2019-05-23 10:23:12 -Generating unique operation named: addUsingGET_14
2019-05-23 10:23:12 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-23 10:23:12 -Generating unique operation named: editUsingGET_16
2019-05-23 10:23:12 -Generating unique operation named: listUsingGET_17
2019-05-23 10:23:12 -Generating unique operation named: removeUsingPOST_26
2019-05-23 10:23:12 -Generating unique operation named: saveUsingPOST_15
2019-05-23 10:23:12 -Generating unique operation named: treeUsingGET_3
2019-05-23 10:23:12 -Generating unique operation named: treeViewUsingGET_1
2019-05-23 10:23:12 -Generating unique operation named: updateUsingPOST_15
2019-05-23 10:23:12 -Generating unique operation named: addUsingGET_15
2019-05-23 10:23:12 -Generating unique operation named: editUsingGET_17
2019-05-23 10:23:12 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-23 10:23:12 -Generating unique operation named: listUsingGET_18
2019-05-23 10:23:12 -Generating unique operation named: removeUsingPOST_27
2019-05-23 10:23:12 -Generating unique operation named: removeUsingPOST_28
2019-05-23 10:23:12 -Generating unique operation named: saveUsingPOST_16
2019-05-23 10:23:12 -Generating unique operation named: updateUsingGET_10
2019-05-23 10:23:12 -Generating unique operation named: updateUsingHEAD_10
2019-05-23 10:23:12 -Generating unique operation named: updateUsingPOST_16
2019-05-23 10:23:12 -Generating unique operation named: updateUsingPUT_10
2019-05-23 10:23:12 -Generating unique operation named: updateUsingPATCH_10
2019-05-23 10:23:12 -Generating unique operation named: updateUsingDELETE_10
2019-05-23 10:23:12 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-23 10:23:12 -Generating unique operation named: updateUsingTRACE_10
2019-05-23 10:23:12 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-23 10:23:12 -Generating unique operation named: addUsingGET_16
2019-05-23 10:23:12 -Generating unique operation named: editUsingGET_18
2019-05-23 10:23:12 -Generating unique operation named: listUsingGET_19
2019-05-23 10:23:12 -Generating unique operation named: removeUsingPOST_29
2019-05-23 10:23:12 -Generating unique operation named: removeUsingPOST_30
2019-05-23 10:23:12 -Generating unique operation named: saveUsingPOST_17
2019-05-23 10:23:12 -Generating unique operation named: updateUsingGET_11
2019-05-23 10:23:12 -Generating unique operation named: updateUsingHEAD_11
2019-05-23 10:23:12 -Generating unique operation named: updateUsingPOST_17
2019-05-23 10:23:12 -Generating unique operation named: updateUsingPUT_11
2019-05-23 10:23:12 -Generating unique operation named: updateUsingPATCH_11
2019-05-23 10:23:12 -Generating unique operation named: updateUsingDELETE_11
2019-05-23 10:23:12 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-23 10:23:12 -Generating unique operation named: updateUsingTRACE_11
2019-05-23 10:23:12 -Generating unique operation named: addUsingGET_17
2019-05-23 10:23:12 -Generating unique operation named: editUsingGET_19
2019-05-23 10:23:12 -Generating unique operation named: listUsingGET_20
2019-05-23 10:23:12 -Generating unique operation named: removeUsingPOST_31
2019-05-23 10:23:12 -Generating unique operation named: removeUsingPOST_32
2019-05-23 10:23:12 -Generating unique operation named: saveUsingPOST_18
2019-05-23 10:23:12 -Generating unique operation named: updateUsingGET_12
2019-05-23 10:23:12 -Generating unique operation named: updateUsingHEAD_12
2019-05-23 10:23:12 -Generating unique operation named: updateUsingPOST_18
2019-05-23 10:23:12 -Generating unique operation named: updateUsingPUT_12
2019-05-23 10:23:12 -Generating unique operation named: updateUsingPATCH_12
2019-05-23 10:23:12 -Generating unique operation named: updateUsingDELETE_12
2019-05-23 10:23:12 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-23 10:23:12 -Generating unique operation named: updateUsingTRACE_12
2019-05-23 10:23:12 -Starting Quartz Scheduler now
2019-05-23 10:23:12 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-23 10:23:12 -Starting...
2019-05-23 10:23:12 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-23 10:23:12 -Started.
2019-05-23 10:23:13 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-23 10:23:13 -Using a shared selector for servlet write/read
2019-05-23 10:23:13 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-23 10:23:13 -Started BootdoApplication in 32.36 seconds (JVM running for 33.087)
2019-05-23 10:23:13 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-23 10:23:13 -==> Parameters: 
2019-05-23 10:23:14 -<==      Total: 1
2019-05-23 10:24:02 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-05-23 10:35:41 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-23 10:35:41 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-23 10:35:41 -FrameworkServlet 'dispatcherServlet': initialization completed in 113 ms
2019-05-23 10:35:41 -Enabling session validation scheduler...
2019-05-23 10:35:42 -请求地址 : http://localhost:8081/login;JSESSIONID=027c4a01-402d-4cd4-bcfe-6d3795e86ea3
2019-05-23 10:35:42 -HTTP METHOD : GET
2019-05-23 10:35:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-23 10:35:42 -参数 : [{}]
2019-05-23 10:35:42 -耗时 : 6
2019-05-23 10:35:42 -返回值 : login
2019-05-23 10:35:46 -请求地址 : http://localhost:8081/getVerify
2019-05-23 10:35:46 -HTTP METHOD : GET
2019-05-23 10:35:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-23 10:35:46 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@5c79700, org.apache.shiro.web.servlet.ShiroHttpServletResponse@11f340c6]
2019-05-23 10:35:51 -5855
2019-05-23 10:35:52 -耗时 : 5928
2019-05-23 10:35:52 -返回值 : null
2019-05-23 10:35:57 -请求地址 : http://localhost:8081/login
2019-05-23 10:35:57 -HTTP METHOD : POST
2019-05-23 10:35:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-23 10:35:57 -参数 : [admin, 111111, 5885, org.apache.shiro.web.servlet.ShiroHttpServletRequest@2202ec2f]
2019-05-23 10:35:57 -耗时 : 32
2019-05-23 10:35:57 -返回值 : {msg=请输入正确的验证码, code=500}
2019-05-23 10:35:58 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-23 10:35:58 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-23 10:35:58 -==> Parameters: -1(Long), 获取用户信息为空(String), 登录(String), 32(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-23 10:35:58.259(Timestamp)
2019-05-23 10:35:58 -<==    Updates: 1
2019-05-23 10:36:01 -请求地址 : http://localhost:8081/getVerify
2019-05-23 10:36:01 -HTTP METHOD : GET
2019-05-23 10:36:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-23 10:36:01 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@352bdde, org.apache.shiro.web.servlet.ShiroHttpServletResponse@3e1e658f]
2019-05-23 10:36:01 -8448
2019-05-23 10:36:01 -耗时 : 10
2019-05-23 10:36:01 -返回值 : null
2019-05-23 10:36:01 -请求地址 : http://localhost:8081/getVerify
2019-05-23 10:36:01 -HTTP METHOD : GET
2019-05-23 10:36:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-23 10:36:01 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@72a2df69, org.apache.shiro.web.servlet.ShiroHttpServletResponse@66e1fa38]
2019-05-23 10:36:01 -4951
2019-05-23 10:36:01 -耗时 : 8
2019-05-23 10:36:01 -返回值 : null
2019-05-23 10:36:08 -请求地址 : http://localhost:8081/login
2019-05-23 10:36:08 -HTTP METHOD : POST
2019-05-23 10:36:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-23 10:36:08 -参数 : [admin, 111111, 4951, org.apache.shiro.web.servlet.ShiroHttpServletRequest@5ed06ce4]
2019-05-23 10:36:08 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-23 10:36:08 -==> Parameters: admin(String)
2019-05-23 10:36:09 -<==      Total: 1
2019-05-23 10:36:09 -耗时 : 268
2019-05-23 10:36:09 -返回值 : {msg=操作成功, code=0}
2019-05-23 10:36:09 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-23 10:36:09 -==> Parameters: 1(Long), admin(String), 登录(String), 268(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-23 10:36:09.077(Timestamp)
2019-05-23 10:36:09 -请求地址 : http://localhost:8081/index
2019-05-23 10:36:09 -HTTP METHOD : GET
2019-05-23 10:36:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-23 10:36:09 -参数 : [{}]
2019-05-23 10:36:09 -<==    Updates: 1
2019-05-23 10:36:09 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-23 10:36:09 -==> Parameters: 1(Long)
2019-05-23 10:36:09 -<==      Total: 49
2019-05-23 10:36:09 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-23 10:36:09 -==> Parameters: 138(Long)
2019-05-23 10:36:09 -<==      Total: 1
2019-05-23 10:36:09 -耗时 : 675
2019-05-23 10:36:09 -返回值 : index_v1
2019-05-23 10:36:09 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-23 10:36:09 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 676(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-23 10:36:09.943(Timestamp)
2019-05-23 10:36:10 -请求地址 : http://localhost:8081/main
2019-05-23 10:36:10 -HTTP METHOD : GET
2019-05-23 10:36:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-23 10:36:10 -参数 : []
2019-05-23 10:36:10 -耗时 : 1
2019-05-23 10:36:10 -返回值 : main
2019-05-23 10:36:10 -<==    Updates: 1
2019-05-23 10:36:11 -请求地址 : http://localhost:8081/main
2019-05-23 10:36:11 -HTTP METHOD : GET
2019-05-23 10:36:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-23 10:36:11 -参数 : []
2019-05-23 10:36:11 -耗时 : 1
2019-05-23 10:36:11 -返回值 : main
2019-05-23 10:36:11 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-23 10:36:11 -HTTP METHOD : GET
2019-05-23 10:36:11 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-23 10:36:11 -参数 : []
2019-05-23 10:36:11 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-23 10:36:11 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-23 10:36:12 -<==      Total: 0
2019-05-23 10:36:12 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-23 10:36:12 -==> Parameters: 1(Long), 0(String)
2019-05-23 10:36:12 -<==      Total: 1
2019-05-23 10:36:12 -耗时 : 808
2019-05-23 10:36:12 -返回值 : com.bootdo.common.utils.PageUtils@361870aa
2019-05-23 10:36:24 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-23 10:36:24 -==> Parameters: 1(Long)
2019-05-23 10:36:24 -<==      Total: 93
2019-05-23 10:36:24 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-23 10:36:24 -HTTP METHOD : GET
2019-05-23 10:36:24 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-23 10:36:24 -参数 : []
2019-05-23 10:36:24 -耗时 : 9
2019-05-23 10:36:24 -返回值 : charts/tableElecYY
2019-05-23 10:36:25 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-23 10:36:25 -HTTP METHOD : GET
2019-05-23 10:36:25 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-23 10:36:25 -参数 : [userType]
2019-05-23 10:36:25 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-23 10:36:25 -==> Parameters: userType(String)
2019-05-23 10:36:25 -<==      Total: 4
2019-05-23 10:36:25 -耗时 : 64
2019-05-23 10:36:25 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-23 10:36:27 -请求地址 : http://localhost:8081/charts/countRun
2019-05-23 10:36:27 -HTTP METHOD : GET
2019-05-23 10:36:27 -CLASS_METHOD : com.bootdo.charts.controller.countRunController.countRun
2019-05-23 10:36:27 -参数 : []
2019-05-23 10:36:27 -耗时 : 1
2019-05-23 10:36:27 -返回值 : charts/countRun
2019-05-23 10:36:27 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-23 10:36:27 -HTTP METHOD : GET
2019-05-23 10:36:27 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-23 10:36:27 -参数 : [userType]
2019-05-23 10:36:27 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-23 10:36:27 -==> Parameters: userType(String)
2019-05-23 10:36:27 -<==      Total: 4
2019-05-23 10:36:27 -耗时 : 10
2019-05-23 10:36:27 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-23 10:36:32 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-23 10:36:32 -HTTP METHOD : GET
2019-05-23 10:36:32 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-23 10:36:32 -参数 : []
2019-05-23 10:36:32 -耗时 : 1
2019-05-23 10:36:32 -返回值 : system/dept/deptTree
2019-05-23 10:36:32 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-23 10:36:32 -HTTP METHOD : GET
2019-05-23 10:36:32 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-23 10:36:32 -参数 : []
2019-05-23 10:36:32 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-23 10:36:32 -==> Parameters: 
2019-05-23 10:36:32 -<==      Total: 3
2019-05-23 10:36:32 -耗时 : 109
2019-05-23 10:36:32 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-23 10:36:34 -请求地址 : http://localhost:8081/charts/countRun/getCountRun
2019-05-23 10:36:34 -HTTP METHOD : POST
2019-05-23 10:36:34 -CLASS_METHOD : com.bootdo.charts.controller.countRunController.getCountRun
2019-05-23 10:36:34 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@58622c54, com.bootdo.moneyLog.vo.WaterLogVo@798e9a9c, com.bootdo.moneyLog.vo.HeatLogVo@160dc7ea]
2019-05-23 10:36:34 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("?","-01") and user_org = ? 
2019-05-23 10:36:34 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-23 10:36:34 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/countRun/getCountRun(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).(String), null, 2019-05-23 10:36:34.565(Timestamp)
2019-05-23 10:36:34 -nested exception is org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:167)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:82)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy102.Count1ElecLog(Unknown Source)
	at com.bootdo.moneyLog.service.impl.ElecLogServiceImpl.Count1ElecLog(ElecLogServiceImpl.java:266)
	at com.bootdo.charts.controller.countRunController.getCountRun(countRunController.java:59)
	at com.bootdo.charts.controller.countRunController$$FastClassBySpringCGLIB$$3384ead5.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor125.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.countRunController$$EnhancerBySpringCGLIB$$6c6966de.getCountRun(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
	at org.apache.ibatis.scripting.defaults.DefaultParameterHandler.setParameters(DefaultParameterHandler.java:89)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.parameterize(PreparedStatementHandler.java:93)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.parameterize(RoutingStatementHandler.java:64)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:86)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:77)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 99 common frames omitted
Caused by: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
	at org.apache.ibatis.type.BaseTypeHandler.setParameter(BaseTypeHandler.java:55)
	at org.apache.ibatis.scripting.defaults.DefaultParameterHandler.setParameters(DefaultParameterHandler.java:87)
	... 115 common frames omitted
Caused by: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.PreparedStatement.checkBounds(PreparedStatement.java:3327)
	at com.mysql.jdbc.PreparedStatement.setInternal(PreparedStatement.java:3312)
	at com.mysql.jdbc.PreparedStatement.setString(PreparedStatement.java:4027)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2823)
	at com.alibaba.druid.filter.FilterAdapter.preparedStatement_setString(FilterAdapter.java:1340)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2820)
	at com.alibaba.druid.filter.FilterAdapter.preparedStatement_setString(FilterAdapter.java:1340)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2820)
	at com.alibaba.druid.filter.FilterAdapter.preparedStatement_setString(FilterAdapter.java:1340)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2820)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.setString(PreparedStatementProxyImpl.java:560)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.setString(DruidPooledPreparedStatement.java:365)
	at sun.reflect.GeneratedMethodAccessor124.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:67)
	at com.sun.proxy.$Proxy173.setString(Unknown Source)
	at org.apache.ibatis.type.StringTypeHandler.setNonNullParameter(StringTypeHandler.java:31)
	at org.apache.ibatis.type.StringTypeHandler.setNonNullParameter(StringTypeHandler.java:26)
	at org.apache.ibatis.type.BaseTypeHandler.setParameter(BaseTypeHandler.java:53)
	... 116 common frames omitted
2019-05-23 10:36:34 -<==    Updates: 1
2019-05-23 10:43:52 -Starting BootdoApplication on PC-201905091110 with PID 15656 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-23 10:43:52 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-23 10:43:52 -The following profiles are active: dev
2019-05-23 10:43:52 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Thu May 23 10:43:52 CST 2019]; root of context hierarchy
2019-05-23 10:43:57 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-23 10:44:01 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$71fd8325] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 10:44:01 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$6456b1cc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 10:44:03 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 10:44:04 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 10:44:04 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 10:44:04 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-23 10:44:04 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-23 10:44:04 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 10:44:04 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 10:44:04 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 10:44:05 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 10:44:07 -Tomcat initialized with port(s): 8081 (http)
2019-05-23 10:44:07 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-23 10:44:07 -Starting service [Tomcat]
2019-05-23 10:44:07 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-23 10:44:07 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-23 10:44:07 -Initializing Spring embedded WebApplicationContext
2019-05-23 10:44:07 -Root WebApplicationContext: initialization completed in 15454 ms
2019-05-23 10:44:08 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-23 10:44:08 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-23 10:44:08 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-23 10:44:08 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-23 10:44:08 -Filter xssFilter was not registered (disabled)
2019-05-23 10:44:08 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-23 10:44:08 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-23 10:44:08 -Servlet statViewServlet mapped to [/druid/*]
2019-05-23 10:44:08 -Servlet dispatcherServlet mapped to [/]
2019-05-23 10:44:14 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Thu May 23 10:43:52 CST 2019]; root of context hierarchy
2019-05-23 10:44:14 -Using default implementation for ThreadExecutor
2019-05-23 10:44:15 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-23 10:44:15 -Quartz Scheduler v.2.2.1 created.
2019-05-23 10:44:15 -RAMJobStore initialized.
2019-05-23 10:44:15 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-23 10:44:15 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-23 10:44:15 -Quartz scheduler version: 2.2.1
2019-05-23 10:44:15 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@25e8e59
2019-05-23 10:44:15 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-23 10:44:15 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-23 10:44:18 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-23 10:44:18 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-23 10:44:18 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 10:44:18 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 10:44:18 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-23 10:44:18 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-23 10:44:18 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-23 10:44:18 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-23 10:44:18 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-23 10:44:18 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 10:44:18 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-23 10:44:18 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-23 10:44:18 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-23 10:44:18 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 10:44:18 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-23 10:44:18 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-23 10:44:18 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-23 10:44:18 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 10:44:18 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-23 10:44:18 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-23 10:44:18 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 10:44:18 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-23 10:44:18 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-23 10:44:18 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 10:44:18 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 10:44:18 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-23 10:44:18 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-23 10:44:18 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-23 10:44:18 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-23 10:44:18 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 10:44:18 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-23 10:44:18 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-23 10:44:18 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 10:44:18 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-23 10:44:18 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-23 10:44:18 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 10:44:18 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-23 10:44:18 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-23 10:44:18 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-23 10:44:18 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-23 10:44:18 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 10:44:18 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-23 10:44:18 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-23 10:44:18 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 10:44:18 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-23 10:44:18 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-23 10:44:18 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-23 10:44:18 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-23 10:44:18 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-23 10:44:18 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-23 10:44:18 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-23 10:44:18 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 10:44:18 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-23 10:44:18 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-23 10:44:18 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 10:44:18 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-23 10:44:18 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-23 10:44:18 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 10:44:18 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-23 10:44:18 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-23 10:44:18 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-23 10:44:18 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-23 10:44:18 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-23 10:44:18 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-23 10:44:18 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-23 10:44:18 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-23 10:44:18 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-23 10:44:18 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 10:44:18 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-23 10:44:18 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-23 10:44:18 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 10:44:18 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-23 10:44:18 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-23 10:44:18 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-23 10:44:18 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-23 10:44:18 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 10:44:18 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-23 10:44:18 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-23 10:44:18 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-23 10:44:18 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-23 10:44:18 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-23 10:44:18 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-23 10:44:18 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-23 10:44:18 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-23 10:44:18 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-23 10:44:18 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-23 10:44:18 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-23 10:44:18 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-23 10:44:18 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-23 10:44:18 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 10:44:18 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-23 10:44:18 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-23 10:44:18 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-23 10:44:18 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-23 10:44:18 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-23 10:44:18 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-23 10:44:18 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-23 10:44:18 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 10:44:18 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-23 10:44:18 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-23 10:44:18 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 10:44:18 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-23 10:44:18 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-23 10:44:18 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-23 10:44:18 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-23 10:44:18 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-23 10:44:18 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-23 10:44:18 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-23 10:44:18 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 10:44:18 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-23 10:44:18 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-23 10:44:18 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-23 10:44:18 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-23 10:44:18 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-23 10:44:18 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-23 10:44:18 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-23 10:44:18 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-23 10:44:18 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-23 10:44:18 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-23 10:44:18 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-23 10:44:18 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 10:44:18 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-23 10:44:18 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-23 10:44:18 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 10:44:18 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-23 10:44:18 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-23 10:44:18 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-23 10:44:18 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-23 10:44:18 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-23 10:44:18 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-23 10:44:18 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-23 10:44:18 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-23 10:44:18 -Mapped "{[/moneyList/moneyList/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 10:44:18 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-23 10:44:18 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-23 10:44:18 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-23 10:44:18 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-23 10:44:18 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 10:44:18 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-23 10:44:18 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-23 10:44:18 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-23 10:44:18 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 10:44:18 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-23 10:44:18 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-23 10:44:18 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-23 10:44:18 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-23 10:44:18 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 10:44:18 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-23 10:44:18 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-23 10:44:18 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-23 10:44:18 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 10:44:18 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-23 10:44:18 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-23 10:44:18 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-23 10:44:18 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-23 10:44:18 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 10:44:18 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-23 10:44:18 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-23 10:44:18 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-23 10:44:18 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 10:44:18 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-23 10:44:18 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-23 10:44:18 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-23 10:44:18 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-23 10:44:18 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-23 10:44:18 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 10:44:18 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-23 10:44:18 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-23 10:44:18 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-23 10:44:18 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-23 10:44:18 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 10:44:18 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 10:44:18 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-23 10:44:18 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-23 10:44:18 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-05-23 10:44:18 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-23 10:44:18 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 10:44:18 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-23 10:44:18 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-23 10:44:18 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-23 10:44:18 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 10:44:18 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-23 10:44:18 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 10:44:18 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-23 10:44:18 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-23 10:44:18 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-23 10:44:18 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-23 10:44:18 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-23 10:44:18 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-23 10:44:18 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-23 10:44:18 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-23 10:44:18 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-23 10:44:18 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 10:44:18 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-23 10:44:18 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-23 10:44:18 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-23 10:44:18 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-23 10:44:18 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-23 10:44:18 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-23 10:44:18 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-23 10:44:18 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-23 10:44:18 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-23 10:44:18 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-23 10:44:18 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 10:44:18 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-23 10:44:18 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-23 10:44:18 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-23 10:44:18 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-23 10:44:18 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-23 10:44:18 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-23 10:44:18 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-23 10:44:18 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-23 10:44:18 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-23 10:44:18 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-23 10:44:18 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-23 10:44:18 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-23 10:44:18 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 10:44:18 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-23 10:44:18 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-23 10:44:18 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-23 10:44:18 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-23 10:44:18 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 10:44:18 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-23 10:44:18 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-23 10:44:18 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-23 10:44:18 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 10:44:18 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-23 10:44:18 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-23 10:44:18 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-23 10:44:18 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-23 10:44:18 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-23 10:44:18 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-23 10:44:18 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-23 10:44:18 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-23 10:44:18 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-23 10:44:18 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-23 10:44:18 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-23 10:44:18 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-23 10:44:18 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-23 10:44:18 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-23 10:44:18 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-23 10:44:18 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-23 10:44:18 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-23 10:44:18 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 10:44:18 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-23 10:44:18 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-23 10:44:18 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-23 10:44:18 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 10:44:18 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-23 10:44:18 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-23 10:44:18 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-23 10:44:18 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-23 10:44:18 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-23 10:44:18 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-23 10:44:18 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-23 10:44:18 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 10:44:18 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-23 10:44:18 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-23 10:44:18 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 10:44:19 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-23 10:44:19 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-23 10:44:19 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-23 10:44:19 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-23 10:44:19 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-23 10:44:19 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-23 10:44:19 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-23 10:44:19 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-23 10:44:19 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-23 10:44:19 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-23 10:44:19 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-23 10:44:20 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-23 10:44:20 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Thu May 23 10:43:52 CST 2019]; root of context hierarchy
2019-05-23 10:44:20 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-23 10:44:20 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-23 10:44:20 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-23 10:44:20 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-23 10:44:20 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-23 10:44:23 -Registering beans for JMX exposure on startup
2019-05-23 10:44:23 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-23 10:44:23 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-23 10:44:23 -Starting beans in phase 2147483647
2019-05-23 10:44:23 -Context refreshed
2019-05-23 10:44:23 -Found 1 custom documentation plugin(s)
2019-05-23 10:44:23 -Scanning for api listing references
2019-05-23 10:44:24 -Generating unique operation named: getCountDUsingPOST_1
2019-05-23 10:44:24 -Generating unique operation named: removeUsingPOST_1
2019-05-23 10:44:24 -Generating unique operation named: addUsingGET_1
2019-05-23 10:44:24 -Generating unique operation named: editUsingGET_1
2019-05-23 10:44:24 -Generating unique operation named: listUsingGET_1
2019-05-23 10:44:24 -Generating unique operation named: removeUsingPOST_2
2019-05-23 10:44:24 -Generating unique operation named: removeUsingPOST_3
2019-05-23 10:44:24 -Generating unique operation named: saveUsingPOST_1
2019-05-23 10:44:24 -Generating unique operation named: updateUsingGET_1
2019-05-23 10:44:24 -Generating unique operation named: updateUsingHEAD_1
2019-05-23 10:44:24 -Generating unique operation named: updateUsingPOST_1
2019-05-23 10:44:24 -Generating unique operation named: updateUsingPUT_1
2019-05-23 10:44:24 -Generating unique operation named: updateUsingPATCH_1
2019-05-23 10:44:24 -Generating unique operation named: updateUsingDELETE_1
2019-05-23 10:44:24 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-23 10:44:24 -Generating unique operation named: updateUsingTRACE_1
2019-05-23 10:44:24 -Generating unique operation named: addUsingGET_2
2019-05-23 10:44:24 -Generating unique operation named: editUsingGET_2
2019-05-23 10:44:24 -Generating unique operation named: listUsingGET_2
2019-05-23 10:44:24 -Generating unique operation named: removeUsingPOST_4
2019-05-23 10:44:24 -Generating unique operation named: removeUsingPOST_5
2019-05-23 10:44:24 -Generating unique operation named: saveUsingPOST_2
2019-05-23 10:44:24 -Generating unique operation named: updateUsingPOST_2
2019-05-23 10:44:24 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-23 10:44:24 -Generating unique operation named: addUsingGET_3
2019-05-23 10:44:24 -Generating unique operation named: editUsingGET_3
2019-05-23 10:44:24 -Generating unique operation named: listUsingGET_3
2019-05-23 10:44:24 -Generating unique operation named: removeUsingPOST_6
2019-05-23 10:44:24 -Generating unique operation named: removeUsingPOST_7
2019-05-23 10:44:24 -Generating unique operation named: saveUsingPOST_3
2019-05-23 10:44:24 -Generating unique operation named: updateUsingGET_2
2019-05-23 10:44:24 -Generating unique operation named: updateUsingHEAD_2
2019-05-23 10:44:24 -Generating unique operation named: updateUsingPOST_3
2019-05-23 10:44:24 -Generating unique operation named: updateUsingPUT_2
2019-05-23 10:44:24 -Generating unique operation named: updateUsingPATCH_2
2019-05-23 10:44:24 -Generating unique operation named: updateUsingDELETE_2
2019-05-23 10:44:24 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-23 10:44:24 -Generating unique operation named: updateUsingTRACE_2
2019-05-23 10:44:24 -Generating unique operation named: addUsingGET_4
2019-05-23 10:44:24 -Generating unique operation named: editUsingGET_4
2019-05-23 10:44:24 -Generating unique operation named: listUsingGET_4
2019-05-23 10:44:24 -Generating unique operation named: removeUsingPOST_8
2019-05-23 10:44:24 -Generating unique operation named: removeUsingPOST_9
2019-05-23 10:44:24 -Generating unique operation named: saveUsingPOST_4
2019-05-23 10:44:24 -Generating unique operation named: updateUsingGET_3
2019-05-23 10:44:24 -Generating unique operation named: updateUsingHEAD_3
2019-05-23 10:44:24 -Generating unique operation named: updateUsingPOST_4
2019-05-23 10:44:24 -Generating unique operation named: updateUsingPUT_3
2019-05-23 10:44:24 -Generating unique operation named: updateUsingPATCH_3
2019-05-23 10:44:24 -Generating unique operation named: updateUsingDELETE_3
2019-05-23 10:44:24 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-23 10:44:24 -Generating unique operation named: updateUsingTRACE_3
2019-05-23 10:44:24 -Generating unique operation named: ElecUsingGET_1
2019-05-23 10:44:24 -Generating unique operation named: addUsingGET_5
2019-05-23 10:44:24 -Generating unique operation named: editUsingGET_5
2019-05-23 10:44:24 -Generating unique operation named: listUsingGET_5
2019-05-23 10:44:24 -Generating unique operation named: removeUsingPOST_10
2019-05-23 10:44:24 -Generating unique operation named: removeUsingPOST_11
2019-05-23 10:44:24 -Generating unique operation named: saveUsingPOST_5
2019-05-23 10:44:24 -Generating unique operation named: updateUsingGET_4
2019-05-23 10:44:25 -Generating unique operation named: updateUsingHEAD_4
2019-05-23 10:44:25 -Generating unique operation named: updateUsingPOST_5
2019-05-23 10:44:25 -Generating unique operation named: updateUsingPUT_4
2019-05-23 10:44:25 -Generating unique operation named: updateUsingPATCH_4
2019-05-23 10:44:25 -Generating unique operation named: updateUsingDELETE_4
2019-05-23 10:44:25 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-23 10:44:25 -Generating unique operation named: updateUsingTRACE_4
2019-05-23 10:44:25 -Generating unique operation named: editUsingGET_6
2019-05-23 10:44:25 -Generating unique operation named: listUsingGET_6
2019-05-23 10:44:25 -Generating unique operation named: updateUsingPOST_6
2019-05-23 10:44:25 -Generating unique operation named: addUsingGET_6
2019-05-23 10:44:25 -Generating unique operation named: editUsingGET_7
2019-05-23 10:44:25 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-23 10:44:25 -Generating unique operation named: listUsingGET_7
2019-05-23 10:44:25 -Generating unique operation named: removeUsingPOST_12
2019-05-23 10:44:25 -Generating unique operation named: removeUsingPOST_13
2019-05-23 10:44:25 -Generating unique operation named: saveUsingPOST_6
2019-05-23 10:44:25 -Generating unique operation named: updateUsingGET_5
2019-05-23 10:44:25 -Generating unique operation named: updateUsingHEAD_5
2019-05-23 10:44:25 -Generating unique operation named: updateUsingPOST_7
2019-05-23 10:44:25 -Generating unique operation named: updateUsingPUT_5
2019-05-23 10:44:25 -Generating unique operation named: updateUsingPATCH_5
2019-05-23 10:44:25 -Generating unique operation named: updateUsingDELETE_5
2019-05-23 10:44:25 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-23 10:44:25 -Generating unique operation named: updateUsingTRACE_5
2019-05-23 10:44:25 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-23 10:44:25 -Generating unique operation named: addUsingGET_7
2019-05-23 10:44:25 -Generating unique operation named: editUsingGET_8
2019-05-23 10:44:25 -Generating unique operation named: listUsingGET_8
2019-05-23 10:44:25 -Generating unique operation named: removeUsingPOST_14
2019-05-23 10:44:25 -Generating unique operation named: removeUsingPOST_15
2019-05-23 10:44:25 -Generating unique operation named: saveUsingPOST_7
2019-05-23 10:44:25 -Generating unique operation named: updateUsingGET_6
2019-05-23 10:44:25 -Generating unique operation named: updateUsingHEAD_6
2019-05-23 10:44:25 -Generating unique operation named: updateUsingPOST_8
2019-05-23 10:44:25 -Generating unique operation named: updateUsingPUT_6
2019-05-23 10:44:25 -Generating unique operation named: updateUsingPATCH_6
2019-05-23 10:44:25 -Generating unique operation named: updateUsingDELETE_6
2019-05-23 10:44:25 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-23 10:44:25 -Generating unique operation named: updateUsingTRACE_6
2019-05-23 10:44:25 -Generating unique operation named: addUsingGET_8
2019-05-23 10:44:25 -Generating unique operation named: editUsingGET_9
2019-05-23 10:44:25 -Generating unique operation named: listUsingGET_9
2019-05-23 10:44:25 -Generating unique operation named: removeUsingPOST_16
2019-05-23 10:44:25 -Generating unique operation named: removeUsingPOST_17
2019-05-23 10:44:25 -Generating unique operation named: saveUsingPOST_8
2019-05-23 10:44:25 -Generating unique operation named: updateUsingGET_7
2019-05-23 10:44:25 -Generating unique operation named: updateUsingHEAD_7
2019-05-23 10:44:25 -Generating unique operation named: updateUsingPOST_9
2019-05-23 10:44:25 -Generating unique operation named: updateUsingPUT_7
2019-05-23 10:44:25 -Generating unique operation named: updateUsingPATCH_7
2019-05-23 10:44:25 -Generating unique operation named: updateUsingDELETE_7
2019-05-23 10:44:25 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-23 10:44:25 -Generating unique operation named: updateUsingTRACE_7
2019-05-23 10:44:25 -Generating unique operation named: addUsingGET_9
2019-05-23 10:44:25 -Generating unique operation named: editUsingGET_10
2019-05-23 10:44:25 -Generating unique operation named: infoUsingGET_1
2019-05-23 10:44:25 -Generating unique operation named: infoUsingHEAD_1
2019-05-23 10:44:25 -Generating unique operation named: infoUsingPOST_1
2019-05-23 10:44:25 -Generating unique operation named: infoUsingPUT_1
2019-05-23 10:44:25 -Generating unique operation named: infoUsingPATCH_1
2019-05-23 10:44:25 -Generating unique operation named: infoUsingDELETE_1
2019-05-23 10:44:25 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-23 10:44:25 -Generating unique operation named: infoUsingTRACE_1
2019-05-23 10:44:25 -Generating unique operation named: listUsingGET_10
2019-05-23 10:44:25 -Generating unique operation named: removeUsingPOST_18
2019-05-23 10:44:25 -Generating unique operation named: removeUsingPOST_19
2019-05-23 10:44:25 -Generating unique operation named: saveUsingPOST_9
2019-05-23 10:44:25 -Generating unique operation named: updateUsingPOST_10
2019-05-23 10:44:25 -Generating unique operation named: listUsingGET_11
2019-05-23 10:44:25 -Generating unique operation named: removeUsingPOST_20
2019-05-23 10:44:25 -Generating unique operation named: welcomeUsingGET_1
2019-05-23 10:44:25 -Generating unique operation named: addUsingGET_10
2019-05-23 10:44:25 -Generating unique operation named: editUsingGET_11
2019-05-23 10:44:25 -Generating unique operation named: listUsingGET_12
2019-05-23 10:44:25 -Generating unique operation named: removeUsingPOST_21
2019-05-23 10:44:25 -Generating unique operation named: saveUsingPOST_10
2019-05-23 10:44:25 -Generating unique operation named: treeUsingGET_1
2019-05-23 10:44:25 -Generating unique operation named: treeUsingGET_2
2019-05-23 10:44:25 -Generating unique operation named: updateUsingPOST_11
2019-05-23 10:44:25 -Generating unique operation named: editUsingGET_12
2019-05-23 10:44:25 -Generating unique operation named: addUsingGET_11
2019-05-23 10:44:25 -Generating unique operation named: editUsingGET_13
2019-05-23 10:44:25 -Generating unique operation named: listUsingGET_13
2019-05-23 10:44:25 -Generating unique operation named: removeUsingPOST_22
2019-05-23 10:44:25 -Generating unique operation named: removeUsingPOST_23
2019-05-23 10:44:25 -Generating unique operation named: saveUsingPOST_11
2019-05-23 10:44:25 -Generating unique operation named: updateUsingGET_8
2019-05-23 10:44:25 -Generating unique operation named: updateUsingHEAD_8
2019-05-23 10:44:25 -Generating unique operation named: updateUsingPOST_12
2019-05-23 10:44:25 -Generating unique operation named: updateUsingPUT_8
2019-05-23 10:44:26 -Generating unique operation named: updateUsingPATCH_8
2019-05-23 10:44:26 -Generating unique operation named: updateUsingDELETE_8
2019-05-23 10:44:26 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-23 10:44:26 -Generating unique operation named: updateUsingTRACE_8
2019-05-23 10:44:26 -Generating unique operation named: addUsingGET_12
2019-05-23 10:44:26 -Generating unique operation named: editUsingGET_14
2019-05-23 10:44:26 -Generating unique operation named: listUsingGET_14
2019-05-23 10:44:26 -Generating unique operation named: removeUsingPOST_24
2019-05-23 10:44:26 -Generating unique operation named: removeUsingPOST_25
2019-05-23 10:44:26 -Generating unique operation named: saveUsingPOST_12
2019-05-23 10:44:26 -Generating unique operation named: updateUsingGET_9
2019-05-23 10:44:26 -Generating unique operation named: updateUsingHEAD_9
2019-05-23 10:44:26 -Generating unique operation named: updateUsingPOST_13
2019-05-23 10:44:26 -Generating unique operation named: updateUsingPUT_9
2019-05-23 10:44:26 -Generating unique operation named: updateUsingPATCH_9
2019-05-23 10:44:26 -Generating unique operation named: updateUsingDELETE_9
2019-05-23 10:44:26 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-23 10:44:26 -Generating unique operation named: updateUsingTRACE_9
2019-05-23 10:44:26 -Generating unique operation named: addUsingGET_13
2019-05-23 10:44:26 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-23 10:44:26 -Generating unique operation named: editUsingGET_15
2019-05-23 10:44:26 -Generating unique operation named: listUsingGET_15
2019-05-23 10:44:26 -Generating unique operation named: saveUsingPOST_13
2019-05-23 10:44:26 -Generating unique operation named: saveUsingPOST_14
2019-05-23 10:44:26 -Generating unique operation named: updateUsingPOST_14
2019-05-23 10:44:26 -Generating unique operation named: listUsingGET_16
2019-05-23 10:44:26 -Generating unique operation named: listUsingHEAD_1
2019-05-23 10:44:26 -Generating unique operation named: listUsingPOST_1
2019-05-23 10:44:26 -Generating unique operation named: listUsingPUT_1
2019-05-23 10:44:26 -Generating unique operation named: listUsingPATCH_1
2019-05-23 10:44:26 -Generating unique operation named: listUsingDELETE_1
2019-05-23 10:44:26 -Generating unique operation named: listUsingOPTIONS_1
2019-05-23 10:44:26 -Generating unique operation named: listUsingTRACE_1
2019-05-23 10:44:26 -Generating unique operation named: countDDUsingGET_1
2019-05-23 10:44:26 -Generating unique operation named: exportDDUsingGET_1
2019-05-23 10:44:26 -Generating unique operation named: addUsingGET_14
2019-05-23 10:44:26 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-23 10:44:26 -Generating unique operation named: editUsingGET_16
2019-05-23 10:44:26 -Generating unique operation named: listUsingGET_17
2019-05-23 10:44:26 -Generating unique operation named: removeUsingPOST_26
2019-05-23 10:44:26 -Generating unique operation named: saveUsingPOST_15
2019-05-23 10:44:26 -Generating unique operation named: treeUsingGET_3
2019-05-23 10:44:26 -Generating unique operation named: treeViewUsingGET_1
2019-05-23 10:44:26 -Generating unique operation named: updateUsingPOST_15
2019-05-23 10:44:26 -Generating unique operation named: addUsingGET_15
2019-05-23 10:44:26 -Generating unique operation named: editUsingGET_17
2019-05-23 10:44:26 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-23 10:44:26 -Generating unique operation named: listUsingGET_18
2019-05-23 10:44:26 -Generating unique operation named: removeUsingPOST_27
2019-05-23 10:44:26 -Generating unique operation named: removeUsingPOST_28
2019-05-23 10:44:26 -Generating unique operation named: saveUsingPOST_16
2019-05-23 10:44:26 -Generating unique operation named: updateUsingGET_10
2019-05-23 10:44:26 -Generating unique operation named: updateUsingHEAD_10
2019-05-23 10:44:26 -Generating unique operation named: updateUsingPOST_16
2019-05-23 10:44:26 -Generating unique operation named: updateUsingPUT_10
2019-05-23 10:44:26 -Generating unique operation named: updateUsingPATCH_10
2019-05-23 10:44:26 -Generating unique operation named: updateUsingDELETE_10
2019-05-23 10:44:26 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-23 10:44:26 -Generating unique operation named: updateUsingTRACE_10
2019-05-23 10:44:26 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-23 10:44:26 -Generating unique operation named: addUsingGET_16
2019-05-23 10:44:26 -Generating unique operation named: editUsingGET_18
2019-05-23 10:44:26 -Generating unique operation named: listUsingGET_19
2019-05-23 10:44:26 -Generating unique operation named: removeUsingPOST_29
2019-05-23 10:44:26 -Generating unique operation named: removeUsingPOST_30
2019-05-23 10:44:26 -Generating unique operation named: saveUsingPOST_17
2019-05-23 10:44:26 -Generating unique operation named: updateUsingGET_11
2019-05-23 10:44:26 -Generating unique operation named: updateUsingHEAD_11
2019-05-23 10:44:26 -Generating unique operation named: updateUsingPOST_17
2019-05-23 10:44:26 -Generating unique operation named: updateUsingPUT_11
2019-05-23 10:44:26 -Generating unique operation named: updateUsingPATCH_11
2019-05-23 10:44:26 -Generating unique operation named: updateUsingDELETE_11
2019-05-23 10:44:26 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-23 10:44:26 -Generating unique operation named: updateUsingTRACE_11
2019-05-23 10:44:27 -Generating unique operation named: addUsingGET_17
2019-05-23 10:44:27 -Generating unique operation named: editUsingGET_19
2019-05-23 10:44:27 -Generating unique operation named: listUsingGET_20
2019-05-23 10:44:27 -Generating unique operation named: removeUsingPOST_31
2019-05-23 10:44:27 -Generating unique operation named: removeUsingPOST_32
2019-05-23 10:44:27 -Generating unique operation named: saveUsingPOST_18
2019-05-23 10:44:27 -Generating unique operation named: updateUsingGET_12
2019-05-23 10:44:27 -Generating unique operation named: updateUsingHEAD_12
2019-05-23 10:44:27 -Generating unique operation named: updateUsingPOST_18
2019-05-23 10:44:27 -Generating unique operation named: updateUsingPUT_12
2019-05-23 10:44:27 -Generating unique operation named: updateUsingPATCH_12
2019-05-23 10:44:27 -Generating unique operation named: updateUsingDELETE_12
2019-05-23 10:44:27 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-23 10:44:27 -Generating unique operation named: updateUsingTRACE_12
2019-05-23 10:44:27 -Starting Quartz Scheduler now
2019-05-23 10:44:27 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-23 10:44:27 -Starting...
2019-05-23 10:44:27 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-23 10:44:27 -Started.
2019-05-23 10:44:27 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-23 10:44:27 -Using a shared selector for servlet write/read
2019-05-23 10:44:27 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-23 10:44:27 -Started BootdoApplication in 36.946 seconds (JVM running for 37.982)
2019-05-23 10:44:27 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-23 10:44:28 -==> Parameters: 
2019-05-23 10:44:28 -<==      Total: 1
2019-05-23 10:44:58 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-23 10:44:58 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-23 10:44:58 -FrameworkServlet 'dispatcherServlet': initialization completed in 87 ms
2019-05-23 10:44:58 -Enabling session validation scheduler...
2019-05-23 10:44:58 -请求地址 : http://localhost:8081/login;JSESSIONID=33c8f24a-33da-4191-95c8-31b13c77ad11
2019-05-23 10:44:58 -HTTP METHOD : GET
2019-05-23 10:44:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-23 10:44:58 -参数 : [{}]
2019-05-23 10:44:58 -耗时 : 5
2019-05-23 10:44:58 -返回值 : login
2019-05-23 10:45:00 -请求地址 : http://localhost:8081/getVerify
2019-05-23 10:45:00 -HTTP METHOD : GET
2019-05-23 10:45:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-23 10:45:00 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@51bcd421, org.apache.shiro.web.servlet.ShiroHttpServletResponse@2d6aefd3]
2019-05-23 10:45:00 -3189
2019-05-23 10:45:00 -耗时 : 557
2019-05-23 10:45:00 -返回值 : null
2019-05-23 10:45:04 -请求地址 : http://localhost:8081/login
2019-05-23 10:45:04 -HTTP METHOD : POST
2019-05-23 10:45:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-23 10:45:04 -参数 : [admin, 111111, 3189, org.apache.shiro.web.servlet.ShiroHttpServletRequest@3c8ef7f0]
2019-05-23 10:45:04 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-23 10:45:04 -==> Parameters: admin(String)
2019-05-23 10:45:04 -<==      Total: 1
2019-05-23 10:45:04 -耗时 : 184
2019-05-23 10:45:04 -返回值 : {msg=操作成功, code=0}
2019-05-23 10:45:04 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-23 10:45:04 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-23 10:45:04 -==> Parameters: 1(Long), admin(String), 登录(String), 184(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-23 10:45:04.595(Timestamp)
2019-05-23 10:45:04 -请求地址 : http://localhost:8081/index
2019-05-23 10:45:04 -HTTP METHOD : GET
2019-05-23 10:45:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-23 10:45:04 -参数 : [{}]
2019-05-23 10:45:05 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-23 10:45:05 -==> Parameters: 1(Long)
2019-05-23 10:45:05 -<==    Updates: 1
2019-05-23 10:45:06 -<==      Total: 49
2019-05-23 10:45:06 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-23 10:45:06 -==> Parameters: 138(Long)
2019-05-23 10:45:06 -<==      Total: 1
2019-05-23 10:45:06 -耗时 : 1474
2019-05-23 10:45:06 -返回值 : index_v1
2019-05-23 10:45:06 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-23 10:45:06 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 1475(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-23 10:45:06.192(Timestamp)
2019-05-23 10:45:06 -请求地址 : http://localhost:8081/main
2019-05-23 10:45:06 -HTTP METHOD : GET
2019-05-23 10:45:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-23 10:45:06 -参数 : []
2019-05-23 10:45:06 -耗时 : 1
2019-05-23 10:45:06 -返回值 : main
2019-05-23 10:45:06 -<==    Updates: 1
2019-05-23 10:45:06 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-23 10:45:06 -HTTP METHOD : GET
2019-05-23 10:45:06 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-23 10:45:06 -参数 : []
2019-05-23 10:45:06 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-23 10:45:06 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-23 10:45:06 -<==      Total: 0
2019-05-23 10:45:06 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-23 10:45:06 -==> Parameters: 1(Long), 0(String)
2019-05-23 10:45:06 -<==      Total: 1
2019-05-23 10:45:06 -耗时 : 124
2019-05-23 10:45:06 -返回值 : com.bootdo.common.utils.PageUtils@38d993d5
2019-05-23 10:45:06 -请求地址 : http://localhost:8081/main
2019-05-23 10:45:06 -HTTP METHOD : GET
2019-05-23 10:45:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-23 10:45:06 -参数 : []
2019-05-23 10:45:06 -耗时 : 1
2019-05-23 10:45:06 -返回值 : main
2019-05-23 10:45:10 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-23 10:45:10 -==> Parameters: 1(Long)
2019-05-23 10:45:10 -<==      Total: 93
2019-05-23 10:45:10 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-23 10:45:10 -HTTP METHOD : GET
2019-05-23 10:45:10 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-23 10:45:10 -参数 : []
2019-05-23 10:45:10 -耗时 : 14
2019-05-23 10:45:10 -返回值 : charts/tableElecYY
2019-05-23 10:45:10 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-23 10:45:10 -HTTP METHOD : GET
2019-05-23 10:45:10 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-23 10:45:10 -参数 : [userType]
2019-05-23 10:45:10 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-23 10:45:10 -==> Parameters: userType(String)
2019-05-23 10:45:10 -<==      Total: 4
2019-05-23 10:45:10 -耗时 : 36
2019-05-23 10:45:10 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-23 10:45:11 -请求地址 : http://localhost:8081/charts/countRun
2019-05-23 10:45:11 -HTTP METHOD : GET
2019-05-23 10:45:11 -CLASS_METHOD : com.bootdo.charts.controller.countRunController.countRun
2019-05-23 10:45:11 -参数 : []
2019-05-23 10:45:11 -耗时 : 0
2019-05-23 10:45:11 -返回值 : charts/countRun
2019-05-23 10:45:12 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-23 10:45:12 -HTTP METHOD : GET
2019-05-23 10:45:12 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-23 10:45:12 -参数 : [userType]
2019-05-23 10:45:12 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-23 10:45:12 -==> Parameters: userType(String)
2019-05-23 10:45:12 -<==      Total: 4
2019-05-23 10:45:12 -耗时 : 8
2019-05-23 10:45:12 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-23 10:45:15 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-23 10:45:15 -HTTP METHOD : GET
2019-05-23 10:45:15 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-23 10:45:15 -参数 : []
2019-05-23 10:45:15 -耗时 : 0
2019-05-23 10:45:15 -返回值 : system/dept/deptTree
2019-05-23 10:45:15 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-23 10:45:15 -HTTP METHOD : GET
2019-05-23 10:45:15 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-23 10:45:15 -参数 : []
2019-05-23 10:45:15 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-23 10:45:15 -==> Parameters: 
2019-05-23 10:45:15 -<==      Total: 3
2019-05-23 10:45:15 -耗时 : 39
2019-05-23 10:45:15 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-23 10:45:18 -请求地址 : http://localhost:8081/charts/countRun/getCountRun
2019-05-23 10:45:18 -HTTP METHOD : POST
2019-05-23 10:45:18 -CLASS_METHOD : com.bootdo.charts.controller.countRunController.getCountRun
2019-05-23 10:45:18 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@13c10f, com.bootdo.moneyLog.vo.WaterLogVo@4f1741bf, com.bootdo.moneyLog.vo.HeatLogVo@66cea1de]
2019-05-23 10:45:18 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("2019","-01") and user_org = ? 
2019-05-23 10:45:18 -==> Parameters: 2(String)
2019-05-23 10:45:18 -<==      Total: 1
2019-05-23 10:45:18 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("2019","-01") and user_org = ? 
2019-05-23 10:45:18 -==> Parameters: 2(String)
2019-05-23 10:45:18 -<==      Total: 1
2019-05-23 10:45:18 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("2019","-02") and user_org = ? 
2019-05-23 10:45:18 -==> Parameters: 2(String)
2019-05-23 10:45:18 -<==      Total: 1
2019-05-23 10:45:18 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("2019","-02") and user_org = ? 
2019-05-23 10:45:18 -==> Parameters: 2(String)
2019-05-23 10:45:18 -<==      Total: 1
2019-05-23 10:45:18 -==>  Preparing: SELECT ifnull (COUNT(ID),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("2019","-03") and user_org = ? 
2019-05-23 10:45:18 -==> Parameters: 2(String)
2019-05-23 10:45:18 -<==      Total: 1
2019-05-23 10:45:18 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("2019","-03") and user_org = ? 
2019-05-23 10:45:18 -==> Parameters: 2(String)
2019-05-23 10:45:18 -<==      Total: 1
2019-05-23 10:45:18 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("2019","-04") and user_org = ? 
2019-05-23 10:45:18 -==> Parameters: 2(String)
2019-05-23 10:45:18 -<==      Total: 1
2019-05-23 10:45:18 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("2019","-04") and user_org = ? 
2019-05-23 10:45:18 -==> Parameters: 2(String)
2019-05-23 10:45:18 -<==      Total: 1
2019-05-23 10:45:18 -==>  Preparing: SELECT ifnull (COUNT(ID),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("2019","-05") and user_org = ? 
2019-05-23 10:45:18 -==> Parameters: 2(String)
2019-05-23 10:45:18 -<==      Total: 1
2019-05-23 10:45:18 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("2019","-05") and user_org = ? 
2019-05-23 10:45:18 -==> Parameters: 2(String)
2019-05-23 10:45:18 -<==      Total: 1
2019-05-23 10:45:18 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("2019","-06") and user_org = ? 
2019-05-23 10:45:18 -==> Parameters: 2(String)
2019-05-23 10:45:18 -<==      Total: 1
2019-05-23 10:45:18 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("2019","-06") and user_org = ? 
2019-05-23 10:45:18 -==> Parameters: 2(String)
2019-05-23 10:45:18 -<==      Total: 1
2019-05-23 10:45:18 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("2019","-07") and user_org = ? 
2019-05-23 10:45:18 -==> Parameters: 2(String)
2019-05-23 10:45:18 -<==      Total: 1
2019-05-23 10:45:18 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("2019","-07") and user_org = ? 
2019-05-23 10:45:18 -==> Parameters: 2(String)
2019-05-23 10:45:18 -<==      Total: 1
2019-05-23 10:45:18 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("2019","-08") and user_org = ? 
2019-05-23 10:45:18 -==> Parameters: 2(String)
2019-05-23 10:45:18 -<==      Total: 1
2019-05-23 10:45:18 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("2019","-08") and user_org = ? 
2019-05-23 10:45:18 -==> Parameters: 2(String)
2019-05-23 10:45:18 -<==      Total: 1
2019-05-23 10:45:18 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("2019","-09") and user_org = ? 
2019-05-23 10:45:18 -==> Parameters: 2(String)
2019-05-23 10:45:18 -<==      Total: 1
2019-05-23 10:45:18 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("2019","-09") and user_org = ? 
2019-05-23 10:45:18 -==> Parameters: 2(String)
2019-05-23 10:45:18 -<==      Total: 1
2019-05-23 10:45:18 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("2019","-10") and user_org = ? 
2019-05-23 10:45:18 -==> Parameters: 2(String)
2019-05-23 10:45:18 -<==      Total: 1
2019-05-23 10:45:18 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("2019","-10") and user_org = ? 
2019-05-23 10:45:18 -==> Parameters: 2(String)
2019-05-23 10:45:18 -<==      Total: 1
2019-05-23 10:45:18 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("2019","-11") and user_org = ? 
2019-05-23 10:45:18 -==> Parameters: 2(String)
2019-05-23 10:45:18 -<==      Total: 1
2019-05-23 10:45:18 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("2019","-11") and user_org = ? 
2019-05-23 10:45:18 -==> Parameters: 2(String)
2019-05-23 10:45:18 -<==      Total: 1
2019-05-23 10:45:18 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("2019","-12") and user_org = ? 
2019-05-23 10:45:18 -==> Parameters: 2(String)
2019-05-23 10:45:18 -<==      Total: 1
2019-05-23 10:45:18 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("2019","-12") and user_org = ? 
2019-05-23 10:45:18 -==> Parameters: 2(String)
2019-05-23 10:45:18 -<==      Total: 1
2019-05-23 10:45:18 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM HEAT_LOG WHERE `create_time` = CONCAT("?","-01") and user_org = ? 
2019-05-23 10:45:18 -nested exception is org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:167)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:82)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy103.Count1HeatLog(Unknown Source)
	at com.bootdo.moneyLog.service.impl.HeatLogServiceImpl.Count1HeatLog(HeatLogServiceImpl.java:142)
	at com.bootdo.charts.controller.countRunController.getCountRun(countRunController.java:85)
	at com.bootdo.charts.controller.countRunController$$FastClassBySpringCGLIB$$3384ead5.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.countRunController$$EnhancerBySpringCGLIB$$a544d9cb.getCountRun(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
	at org.apache.ibatis.scripting.defaults.DefaultParameterHandler.setParameters(DefaultParameterHandler.java:89)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.parameterize(PreparedStatementHandler.java:93)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.parameterize(RoutingStatementHandler.java:64)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:86)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:77)
	at sun.reflect.GeneratedMethodAccessor139.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 100 common frames omitted
Caused by: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
	at org.apache.ibatis.type.BaseTypeHandler.setParameter(BaseTypeHandler.java:55)
	at org.apache.ibatis.scripting.defaults.DefaultParameterHandler.setParameters(DefaultParameterHandler.java:87)
	... 115 common frames omitted
Caused by: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.PreparedStatement.checkBounds(PreparedStatement.java:3327)
	at com.mysql.jdbc.PreparedStatement.setInternal(PreparedStatement.java:3312)
	at com.mysql.jdbc.PreparedStatement.setString(PreparedStatement.java:4027)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2823)
	at com.alibaba.druid.filter.FilterAdapter.preparedStatement_setString(FilterAdapter.java:1340)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2820)
	at com.alibaba.druid.filter.FilterAdapter.preparedStatement_setString(FilterAdapter.java:1340)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2820)
	at com.alibaba.druid.filter.FilterAdapter.preparedStatement_setString(FilterAdapter.java:1340)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2820)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.setString(PreparedStatementProxyImpl.java:560)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.setString(DruidPooledPreparedStatement.java:365)
	at sun.reflect.GeneratedMethodAccessor124.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:67)
	at com.sun.proxy.$Proxy173.setString(Unknown Source)
	at org.apache.ibatis.type.StringTypeHandler.setNonNullParameter(StringTypeHandler.java:31)
	at org.apache.ibatis.type.StringTypeHandler.setNonNullParameter(StringTypeHandler.java:26)
	at org.apache.ibatis.type.BaseTypeHandler.setParameter(BaseTypeHandler.java:53)
	... 116 common frames omitted
2019-05-23 10:45:18 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-23 10:45:18 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/countRun/getCountRun(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).(String), null, 2019-05-23 10:45:18.805(Timestamp)
2019-05-23 10:45:19 -<==    Updates: 1
2019-05-23 10:45:19 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 3]
2019-05-23 10:53:24 -Starting BootdoApplication on PC-201905091110 with PID 35884 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-23 10:53:24 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-23 10:53:24 -The following profiles are active: dev
2019-05-23 10:53:25 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Thu May 23 10:53:25 CST 2019]; root of context hierarchy
2019-05-23 10:53:31 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-23 10:53:33 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d159fff6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 10:53:33 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$c3b32e9d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 10:53:34 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 10:53:34 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 10:53:34 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 10:53:34 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-23 10:53:34 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-23 10:53:34 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 10:53:34 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 10:53:34 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 10:53:35 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 10:53:35 -Tomcat initialized with port(s): 8081 (http)
2019-05-23 10:53:35 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-23 10:53:35 -Starting service [Tomcat]
2019-05-23 10:53:35 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-23 10:53:35 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-23 10:53:36 -Initializing Spring embedded WebApplicationContext
2019-05-23 10:53:36 -Root WebApplicationContext: initialization completed in 11041 ms
2019-05-23 10:53:37 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-23 10:53:37 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-23 10:53:37 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-23 10:53:37 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-23 10:53:37 -Filter xssFilter was not registered (disabled)
2019-05-23 10:53:37 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-23 10:53:37 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-23 10:53:37 -Servlet statViewServlet mapped to [/druid/*]
2019-05-23 10:53:37 -Servlet dispatcherServlet mapped to [/]
2019-05-23 10:53:42 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Thu May 23 10:53:25 CST 2019]; root of context hierarchy
2019-05-23 10:53:43 -Using default implementation for ThreadExecutor
2019-05-23 10:53:43 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-23 10:53:43 -Quartz Scheduler v.2.2.1 created.
2019-05-23 10:53:43 -RAMJobStore initialized.
2019-05-23 10:53:43 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-23 10:53:43 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-23 10:53:43 -Quartz scheduler version: 2.2.1
2019-05-23 10:53:43 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@25214797
2019-05-23 10:53:44 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-23 10:53:44 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-23 10:53:49 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-23 10:53:49 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-23 10:53:49 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 10:53:49 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-23 10:53:49 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-23 10:53:49 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 10:53:49 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-23 10:53:49 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-23 10:53:49 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-23 10:53:49 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-23 10:53:49 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-23 10:53:49 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 10:53:49 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 10:53:49 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-23 10:53:49 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-23 10:53:49 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-23 10:53:49 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-23 10:53:49 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 10:53:49 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 10:53:49 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-23 10:53:49 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-23 10:53:49 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-23 10:53:49 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-23 10:53:49 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 10:53:49 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-23 10:53:49 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-23 10:53:49 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 10:53:49 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-23 10:53:49 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-23 10:53:49 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 10:53:49 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-23 10:53:49 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-23 10:53:49 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 10:53:49 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-23 10:53:49 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-23 10:53:49 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 10:53:49 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-23 10:53:49 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-23 10:53:49 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-23 10:53:49 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-23 10:53:49 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 10:53:49 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-23 10:53:49 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-23 10:53:49 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 10:53:49 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-23 10:53:49 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-23 10:53:49 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-23 10:53:49 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-23 10:53:49 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-23 10:53:49 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-23 10:53:49 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-23 10:53:49 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 10:53:49 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-23 10:53:49 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-23 10:53:49 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-23 10:53:49 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-23 10:53:49 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 10:53:49 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 10:53:49 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-23 10:53:49 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-23 10:53:49 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-23 10:53:49 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-23 10:53:49 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-23 10:53:49 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-23 10:53:49 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-23 10:53:49 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-23 10:53:49 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-23 10:53:49 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 10:53:49 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-23 10:53:49 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-23 10:53:49 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-23 10:53:49 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-23 10:53:49 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 10:53:49 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-23 10:53:49 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-23 10:53:49 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 10:53:49 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-23 10:53:49 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-23 10:53:49 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-23 10:53:49 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-23 10:53:49 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-23 10:53:49 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-23 10:53:49 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-23 10:53:49 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-23 10:53:49 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-23 10:53:49 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-23 10:53:49 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-23 10:53:49 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-23 10:53:49 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-23 10:53:49 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 10:53:49 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-23 10:53:49 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-23 10:53:49 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-23 10:53:49 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-23 10:53:49 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-23 10:53:49 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-23 10:53:49 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-23 10:53:49 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 10:53:49 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-23 10:53:49 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 10:53:49 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-23 10:53:49 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-23 10:53:49 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-23 10:53:49 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-23 10:53:49 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-23 10:53:49 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-23 10:53:49 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-23 10:53:49 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-23 10:53:49 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 10:53:49 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-23 10:53:49 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-23 10:53:49 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-23 10:53:49 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-23 10:53:49 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-23 10:53:49 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-23 10:53:49 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-23 10:53:49 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-23 10:53:49 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-23 10:53:49 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-23 10:53:49 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-23 10:53:49 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 10:53:49 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-23 10:53:49 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-23 10:53:49 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 10:53:49 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-23 10:53:49 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-23 10:53:49 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-23 10:53:49 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-23 10:53:49 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-23 10:53:49 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-23 10:53:49 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-23 10:53:49 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-23 10:53:49 -Mapped "{[/moneyList/moneyList/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 10:53:49 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-23 10:53:49 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-23 10:53:49 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-23 10:53:49 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-23 10:53:49 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 10:53:49 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-23 10:53:49 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-23 10:53:49 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-23 10:53:49 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 10:53:50 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-23 10:53:50 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-23 10:53:50 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-23 10:53:50 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-23 10:53:50 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 10:53:50 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-23 10:53:50 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-23 10:53:50 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-23 10:53:50 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 10:53:50 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-23 10:53:50 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-23 10:53:50 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-23 10:53:50 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-23 10:53:50 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 10:53:50 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-23 10:53:50 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-23 10:53:50 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-23 10:53:50 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 10:53:50 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-23 10:53:50 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-23 10:53:50 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-23 10:53:50 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-23 10:53:50 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-23 10:53:50 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 10:53:50 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-23 10:53:50 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-23 10:53:50 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-23 10:53:50 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-23 10:53:50 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 10:53:50 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 10:53:50 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-23 10:53:50 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-23 10:53:50 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-05-23 10:53:50 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-23 10:53:50 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 10:53:50 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-23 10:53:50 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-23 10:53:50 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-23 10:53:50 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-23 10:53:50 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 10:53:50 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 10:53:50 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-23 10:53:50 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-23 10:53:50 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-23 10:53:50 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-23 10:53:50 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-23 10:53:50 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-23 10:53:50 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-23 10:53:50 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-23 10:53:50 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 10:53:50 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-23 10:53:50 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-23 10:53:50 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-23 10:53:50 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-23 10:53:50 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-23 10:53:50 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-23 10:53:50 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-23 10:53:50 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-23 10:53:50 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-23 10:53:50 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-23 10:53:50 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-23 10:53:50 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 10:53:50 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-23 10:53:50 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-23 10:53:50 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-23 10:53:50 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-23 10:53:50 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-23 10:53:50 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-23 10:53:50 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-23 10:53:50 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-23 10:53:50 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-23 10:53:50 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-23 10:53:50 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-23 10:53:50 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 10:53:50 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-23 10:53:50 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-23 10:53:50 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-23 10:53:50 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-23 10:53:50 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-23 10:53:50 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 10:53:50 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-23 10:53:50 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-23 10:53:50 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-23 10:53:50 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 10:53:50 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-23 10:53:50 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-23 10:53:50 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-23 10:53:50 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-23 10:53:50 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-23 10:53:50 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-23 10:53:50 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-23 10:53:50 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-23 10:53:50 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-23 10:53:50 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-23 10:53:50 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-23 10:53:50 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-23 10:53:50 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-23 10:53:50 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-23 10:53:50 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-23 10:53:50 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-23 10:53:50 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-23 10:53:50 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 10:53:50 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-23 10:53:50 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-23 10:53:50 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 10:53:50 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-23 10:53:50 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-23 10:53:50 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-23 10:53:50 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-23 10:53:50 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-23 10:53:50 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-23 10:53:50 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-23 10:53:50 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-23 10:53:50 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 10:53:50 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-23 10:53:50 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-23 10:53:50 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 10:53:50 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-23 10:53:50 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-23 10:53:50 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-23 10:53:50 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-23 10:53:50 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-23 10:53:50 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-23 10:53:50 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-23 10:53:50 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-23 10:53:51 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-23 10:53:51 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-23 10:53:51 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-23 10:53:52 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-23 10:53:53 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Thu May 23 10:53:25 CST 2019]; root of context hierarchy
2019-05-23 10:53:53 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-23 10:53:53 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-23 10:53:53 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-23 10:53:53 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-23 10:53:53 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-23 10:53:56 -Registering beans for JMX exposure on startup
2019-05-23 10:53:56 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-23 10:53:56 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-23 10:53:56 -Starting beans in phase 2147483647
2019-05-23 10:53:56 -Context refreshed
2019-05-23 10:53:56 -Found 1 custom documentation plugin(s)
2019-05-23 10:53:56 -Scanning for api listing references
2019-05-23 10:53:57 -Generating unique operation named: getCountDUsingPOST_1
2019-05-23 10:53:57 -Generating unique operation named: removeUsingPOST_1
2019-05-23 10:53:57 -Generating unique operation named: addUsingGET_1
2019-05-23 10:53:57 -Generating unique operation named: editUsingGET_1
2019-05-23 10:53:57 -Generating unique operation named: listUsingGET_1
2019-05-23 10:53:57 -Generating unique operation named: removeUsingPOST_2
2019-05-23 10:53:57 -Generating unique operation named: removeUsingPOST_3
2019-05-23 10:53:57 -Generating unique operation named: saveUsingPOST_1
2019-05-23 10:53:57 -Generating unique operation named: updateUsingGET_1
2019-05-23 10:53:57 -Generating unique operation named: updateUsingHEAD_1
2019-05-23 10:53:57 -Generating unique operation named: updateUsingPOST_1
2019-05-23 10:53:57 -Generating unique operation named: updateUsingPUT_1
2019-05-23 10:53:57 -Generating unique operation named: updateUsingPATCH_1
2019-05-23 10:53:57 -Generating unique operation named: updateUsingDELETE_1
2019-05-23 10:53:57 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-23 10:53:57 -Generating unique operation named: updateUsingTRACE_1
2019-05-23 10:53:57 -Generating unique operation named: addUsingGET_2
2019-05-23 10:53:57 -Generating unique operation named: editUsingGET_2
2019-05-23 10:53:57 -Generating unique operation named: listUsingGET_2
2019-05-23 10:53:57 -Generating unique operation named: removeUsingPOST_4
2019-05-23 10:53:57 -Generating unique operation named: removeUsingPOST_5
2019-05-23 10:53:57 -Generating unique operation named: saveUsingPOST_2
2019-05-23 10:53:57 -Generating unique operation named: updateUsingPOST_2
2019-05-23 10:53:57 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-23 10:53:57 -Generating unique operation named: addUsingGET_3
2019-05-23 10:53:57 -Generating unique operation named: editUsingGET_3
2019-05-23 10:53:57 -Generating unique operation named: listUsingGET_3
2019-05-23 10:53:57 -Generating unique operation named: removeUsingPOST_6
2019-05-23 10:53:57 -Generating unique operation named: removeUsingPOST_7
2019-05-23 10:53:57 -Generating unique operation named: saveUsingPOST_3
2019-05-23 10:53:57 -Generating unique operation named: updateUsingGET_2
2019-05-23 10:53:57 -Generating unique operation named: updateUsingHEAD_2
2019-05-23 10:53:57 -Generating unique operation named: updateUsingPOST_3
2019-05-23 10:53:57 -Generating unique operation named: updateUsingPUT_2
2019-05-23 10:53:57 -Generating unique operation named: updateUsingPATCH_2
2019-05-23 10:53:57 -Generating unique operation named: updateUsingDELETE_2
2019-05-23 10:53:57 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-23 10:53:58 -Generating unique operation named: updateUsingTRACE_2
2019-05-23 10:53:58 -Generating unique operation named: addUsingGET_4
2019-05-23 10:53:58 -Generating unique operation named: editUsingGET_4
2019-05-23 10:53:58 -Generating unique operation named: listUsingGET_4
2019-05-23 10:53:58 -Generating unique operation named: removeUsingPOST_8
2019-05-23 10:53:58 -Generating unique operation named: removeUsingPOST_9
2019-05-23 10:53:58 -Generating unique operation named: saveUsingPOST_4
2019-05-23 10:53:58 -Generating unique operation named: updateUsingGET_3
2019-05-23 10:53:58 -Generating unique operation named: updateUsingHEAD_3
2019-05-23 10:53:58 -Generating unique operation named: updateUsingPOST_4
2019-05-23 10:53:58 -Generating unique operation named: updateUsingPUT_3
2019-05-23 10:53:58 -Generating unique operation named: updateUsingPATCH_3
2019-05-23 10:53:58 -Generating unique operation named: updateUsingDELETE_3
2019-05-23 10:53:58 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-23 10:53:58 -Generating unique operation named: updateUsingTRACE_3
2019-05-23 10:53:58 -Generating unique operation named: ElecUsingGET_1
2019-05-23 10:53:58 -Generating unique operation named: addUsingGET_5
2019-05-23 10:53:58 -Generating unique operation named: editUsingGET_5
2019-05-23 10:53:58 -Generating unique operation named: listUsingGET_5
2019-05-23 10:53:58 -Generating unique operation named: removeUsingPOST_10
2019-05-23 10:53:58 -Generating unique operation named: removeUsingPOST_11
2019-05-23 10:53:58 -Generating unique operation named: saveUsingPOST_5
2019-05-23 10:53:58 -Generating unique operation named: updateUsingGET_4
2019-05-23 10:53:58 -Generating unique operation named: updateUsingHEAD_4
2019-05-23 10:53:58 -Generating unique operation named: updateUsingPOST_5
2019-05-23 10:53:58 -Generating unique operation named: updateUsingPUT_4
2019-05-23 10:53:58 -Generating unique operation named: updateUsingPATCH_4
2019-05-23 10:53:58 -Generating unique operation named: updateUsingDELETE_4
2019-05-23 10:53:58 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-23 10:53:58 -Generating unique operation named: updateUsingTRACE_4
2019-05-23 10:53:58 -Generating unique operation named: editUsingGET_6
2019-05-23 10:53:58 -Generating unique operation named: listUsingGET_6
2019-05-23 10:53:58 -Generating unique operation named: updateUsingPOST_6
2019-05-23 10:53:58 -Generating unique operation named: addUsingGET_6
2019-05-23 10:53:58 -Generating unique operation named: editUsingGET_7
2019-05-23 10:53:58 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-23 10:53:58 -Generating unique operation named: listUsingGET_7
2019-05-23 10:53:58 -Generating unique operation named: removeUsingPOST_12
2019-05-23 10:53:58 -Generating unique operation named: removeUsingPOST_13
2019-05-23 10:53:58 -Generating unique operation named: saveUsingPOST_6
2019-05-23 10:53:58 -Generating unique operation named: updateUsingGET_5
2019-05-23 10:53:58 -Generating unique operation named: updateUsingHEAD_5
2019-05-23 10:53:58 -Generating unique operation named: updateUsingPOST_7
2019-05-23 10:53:58 -Generating unique operation named: updateUsingPUT_5
2019-05-23 10:53:58 -Generating unique operation named: updateUsingPATCH_5
2019-05-23 10:53:58 -Generating unique operation named: updateUsingDELETE_5
2019-05-23 10:53:58 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-23 10:53:58 -Generating unique operation named: updateUsingTRACE_5
2019-05-23 10:53:58 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-23 10:53:58 -Generating unique operation named: addUsingGET_7
2019-05-23 10:53:58 -Generating unique operation named: editUsingGET_8
2019-05-23 10:53:58 -Generating unique operation named: listUsingGET_8
2019-05-23 10:53:58 -Generating unique operation named: removeUsingPOST_14
2019-05-23 10:53:58 -Generating unique operation named: removeUsingPOST_15
2019-05-23 10:53:58 -Generating unique operation named: saveUsingPOST_7
2019-05-23 10:53:58 -Generating unique operation named: updateUsingGET_6
2019-05-23 10:53:58 -Generating unique operation named: updateUsingHEAD_6
2019-05-23 10:53:58 -Generating unique operation named: updateUsingPOST_8
2019-05-23 10:53:58 -Generating unique operation named: updateUsingPUT_6
2019-05-23 10:53:58 -Generating unique operation named: updateUsingPATCH_6
2019-05-23 10:53:58 -Generating unique operation named: updateUsingDELETE_6
2019-05-23 10:53:58 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-23 10:53:58 -Generating unique operation named: updateUsingTRACE_6
2019-05-23 10:53:58 -Generating unique operation named: addUsingGET_8
2019-05-23 10:53:58 -Generating unique operation named: editUsingGET_9
2019-05-23 10:53:58 -Generating unique operation named: listUsingGET_9
2019-05-23 10:53:58 -Generating unique operation named: removeUsingPOST_16
2019-05-23 10:53:58 -Generating unique operation named: removeUsingPOST_17
2019-05-23 10:53:58 -Generating unique operation named: saveUsingPOST_8
2019-05-23 10:53:58 -Generating unique operation named: updateUsingGET_7
2019-05-23 10:53:58 -Generating unique operation named: updateUsingHEAD_7
2019-05-23 10:53:58 -Generating unique operation named: updateUsingPOST_9
2019-05-23 10:53:58 -Generating unique operation named: updateUsingPUT_7
2019-05-23 10:53:58 -Generating unique operation named: updateUsingPATCH_7
2019-05-23 10:53:58 -Generating unique operation named: updateUsingDELETE_7
2019-05-23 10:53:58 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-23 10:53:58 -Generating unique operation named: updateUsingTRACE_7
2019-05-23 10:53:58 -Generating unique operation named: addUsingGET_9
2019-05-23 10:53:58 -Generating unique operation named: editUsingGET_10
2019-05-23 10:53:58 -Generating unique operation named: infoUsingGET_1
2019-05-23 10:53:58 -Generating unique operation named: infoUsingHEAD_1
2019-05-23 10:53:58 -Generating unique operation named: infoUsingPOST_1
2019-05-23 10:53:58 -Generating unique operation named: infoUsingPUT_1
2019-05-23 10:53:58 -Generating unique operation named: infoUsingPATCH_1
2019-05-23 10:53:58 -Generating unique operation named: infoUsingDELETE_1
2019-05-23 10:53:58 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-23 10:53:58 -Generating unique operation named: infoUsingTRACE_1
2019-05-23 10:53:58 -Generating unique operation named: listUsingGET_10
2019-05-23 10:53:58 -Generating unique operation named: removeUsingPOST_18
2019-05-23 10:53:58 -Generating unique operation named: removeUsingPOST_19
2019-05-23 10:53:58 -Generating unique operation named: saveUsingPOST_9
2019-05-23 10:53:58 -Generating unique operation named: updateUsingPOST_10
2019-05-23 10:53:58 -Generating unique operation named: listUsingGET_11
2019-05-23 10:53:58 -Generating unique operation named: removeUsingPOST_20
2019-05-23 10:53:58 -Generating unique operation named: welcomeUsingGET_1
2019-05-23 10:53:59 -Generating unique operation named: addUsingGET_10
2019-05-23 10:53:59 -Generating unique operation named: editUsingGET_11
2019-05-23 10:53:59 -Generating unique operation named: listUsingGET_12
2019-05-23 10:53:59 -Generating unique operation named: removeUsingPOST_21
2019-05-23 10:53:59 -Generating unique operation named: saveUsingPOST_10
2019-05-23 10:53:59 -Generating unique operation named: treeUsingGET_1
2019-05-23 10:53:59 -Generating unique operation named: treeUsingGET_2
2019-05-23 10:53:59 -Generating unique operation named: updateUsingPOST_11
2019-05-23 10:53:59 -Generating unique operation named: editUsingGET_12
2019-05-23 10:53:59 -Generating unique operation named: addUsingGET_11
2019-05-23 10:53:59 -Generating unique operation named: editUsingGET_13
2019-05-23 10:53:59 -Generating unique operation named: listUsingGET_13
2019-05-23 10:53:59 -Generating unique operation named: removeUsingPOST_22
2019-05-23 10:53:59 -Generating unique operation named: removeUsingPOST_23
2019-05-23 10:53:59 -Generating unique operation named: saveUsingPOST_11
2019-05-23 10:53:59 -Generating unique operation named: updateUsingGET_8
2019-05-23 10:53:59 -Generating unique operation named: updateUsingHEAD_8
2019-05-23 10:53:59 -Generating unique operation named: updateUsingPOST_12
2019-05-23 10:53:59 -Generating unique operation named: updateUsingPUT_8
2019-05-23 10:53:59 -Generating unique operation named: updateUsingPATCH_8
2019-05-23 10:53:59 -Generating unique operation named: updateUsingDELETE_8
2019-05-23 10:53:59 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-23 10:53:59 -Generating unique operation named: updateUsingTRACE_8
2019-05-23 10:53:59 -Generating unique operation named: addUsingGET_12
2019-05-23 10:53:59 -Generating unique operation named: editUsingGET_14
2019-05-23 10:53:59 -Generating unique operation named: listUsingGET_14
2019-05-23 10:53:59 -Generating unique operation named: removeUsingPOST_24
2019-05-23 10:53:59 -Generating unique operation named: removeUsingPOST_25
2019-05-23 10:53:59 -Generating unique operation named: saveUsingPOST_12
2019-05-23 10:53:59 -Generating unique operation named: updateUsingGET_9
2019-05-23 10:53:59 -Generating unique operation named: updateUsingHEAD_9
2019-05-23 10:53:59 -Generating unique operation named: updateUsingPOST_13
2019-05-23 10:53:59 -Generating unique operation named: updateUsingPUT_9
2019-05-23 10:53:59 -Generating unique operation named: updateUsingPATCH_9
2019-05-23 10:53:59 -Generating unique operation named: updateUsingDELETE_9
2019-05-23 10:53:59 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-23 10:53:59 -Generating unique operation named: updateUsingTRACE_9
2019-05-23 10:53:59 -Generating unique operation named: addUsingGET_13
2019-05-23 10:53:59 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-23 10:53:59 -Generating unique operation named: editUsingGET_15
2019-05-23 10:53:59 -Generating unique operation named: listUsingGET_15
2019-05-23 10:53:59 -Generating unique operation named: saveUsingPOST_13
2019-05-23 10:53:59 -Generating unique operation named: saveUsingPOST_14
2019-05-23 10:53:59 -Generating unique operation named: updateUsingPOST_14
2019-05-23 10:53:59 -Generating unique operation named: listUsingGET_16
2019-05-23 10:53:59 -Generating unique operation named: listUsingHEAD_1
2019-05-23 10:53:59 -Generating unique operation named: listUsingPOST_1
2019-05-23 10:53:59 -Generating unique operation named: listUsingPUT_1
2019-05-23 10:53:59 -Generating unique operation named: listUsingPATCH_1
2019-05-23 10:53:59 -Generating unique operation named: listUsingDELETE_1
2019-05-23 10:53:59 -Generating unique operation named: listUsingOPTIONS_1
2019-05-23 10:53:59 -Generating unique operation named: listUsingTRACE_1
2019-05-23 10:53:59 -Generating unique operation named: countDDUsingGET_1
2019-05-23 10:53:59 -Generating unique operation named: exportDDUsingGET_1
2019-05-23 10:53:59 -Generating unique operation named: addUsingGET_14
2019-05-23 10:53:59 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-23 10:53:59 -Generating unique operation named: editUsingGET_16
2019-05-23 10:53:59 -Generating unique operation named: listUsingGET_17
2019-05-23 10:53:59 -Generating unique operation named: removeUsingPOST_26
2019-05-23 10:53:59 -Generating unique operation named: saveUsingPOST_15
2019-05-23 10:53:59 -Generating unique operation named: treeUsingGET_3
2019-05-23 10:53:59 -Generating unique operation named: treeViewUsingGET_1
2019-05-23 10:53:59 -Generating unique operation named: updateUsingPOST_15
2019-05-23 10:53:59 -Generating unique operation named: addUsingGET_15
2019-05-23 10:53:59 -Generating unique operation named: editUsingGET_17
2019-05-23 10:53:59 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-23 10:53:59 -Generating unique operation named: listUsingGET_18
2019-05-23 10:53:59 -Generating unique operation named: removeUsingPOST_27
2019-05-23 10:53:59 -Generating unique operation named: removeUsingPOST_28
2019-05-23 10:53:59 -Generating unique operation named: saveUsingPOST_16
2019-05-23 10:53:59 -Generating unique operation named: updateUsingGET_10
2019-05-23 10:53:59 -Generating unique operation named: updateUsingHEAD_10
2019-05-23 10:53:59 -Generating unique operation named: updateUsingPOST_16
2019-05-23 10:53:59 -Generating unique operation named: updateUsingPUT_10
2019-05-23 10:53:59 -Generating unique operation named: updateUsingPATCH_10
2019-05-23 10:53:59 -Generating unique operation named: updateUsingDELETE_10
2019-05-23 10:53:59 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-23 10:53:59 -Generating unique operation named: updateUsingTRACE_10
2019-05-23 10:53:59 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-23 10:53:59 -Generating unique operation named: addUsingGET_16
2019-05-23 10:53:59 -Generating unique operation named: editUsingGET_18
2019-05-23 10:53:59 -Generating unique operation named: listUsingGET_19
2019-05-23 10:54:00 -Generating unique operation named: removeUsingPOST_29
2019-05-23 10:54:00 -Generating unique operation named: removeUsingPOST_30
2019-05-23 10:54:00 -Generating unique operation named: saveUsingPOST_17
2019-05-23 10:54:00 -Generating unique operation named: updateUsingGET_11
2019-05-23 10:54:00 -Generating unique operation named: updateUsingHEAD_11
2019-05-23 10:54:00 -Generating unique operation named: updateUsingPOST_17
2019-05-23 10:54:00 -Generating unique operation named: updateUsingPUT_11
2019-05-23 10:54:00 -Generating unique operation named: updateUsingPATCH_11
2019-05-23 10:54:00 -Generating unique operation named: updateUsingDELETE_11
2019-05-23 10:54:00 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-23 10:54:00 -Generating unique operation named: updateUsingTRACE_11
2019-05-23 10:54:00 -Generating unique operation named: addUsingGET_17
2019-05-23 10:54:00 -Generating unique operation named: editUsingGET_19
2019-05-23 10:54:00 -Generating unique operation named: listUsingGET_20
2019-05-23 10:54:00 -Generating unique operation named: removeUsingPOST_31
2019-05-23 10:54:00 -Generating unique operation named: removeUsingPOST_32
2019-05-23 10:54:00 -Generating unique operation named: saveUsingPOST_18
2019-05-23 10:54:00 -Generating unique operation named: updateUsingGET_12
2019-05-23 10:54:00 -Generating unique operation named: updateUsingHEAD_12
2019-05-23 10:54:00 -Generating unique operation named: updateUsingPOST_18
2019-05-23 10:54:00 -Generating unique operation named: updateUsingPUT_12
2019-05-23 10:54:00 -Generating unique operation named: updateUsingPATCH_12
2019-05-23 10:54:00 -Generating unique operation named: updateUsingDELETE_12
2019-05-23 10:54:00 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-23 10:54:00 -Generating unique operation named: updateUsingTRACE_12
2019-05-23 10:54:00 -Starting Quartz Scheduler now
2019-05-23 10:54:00 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-23 10:54:00 -Starting...
2019-05-23 10:54:00 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-23 10:54:00 -Started.
2019-05-23 10:54:00 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-23 10:54:00 -Using a shared selector for servlet write/read
2019-05-23 10:54:00 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-23 10:54:00 -Started BootdoApplication in 39.65 seconds (JVM running for 42.097)
2019-05-23 10:54:01 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-23 10:54:01 -==> Parameters: 
2019-05-23 10:54:02 -<==      Total: 1
2019-05-23 10:54:51 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-05-23 10:55:09 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-23 10:55:09 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-23 10:55:09 -FrameworkServlet 'dispatcherServlet': initialization completed in 124 ms
2019-05-23 10:55:09 -Enabling session validation scheduler...
2019-05-23 10:55:10 -请求地址 : http://localhost:8081/login;JSESSIONID=9257b6de-4a34-48b6-aa7b-705a4f5c15f1
2019-05-23 10:55:10 -HTTP METHOD : GET
2019-05-23 10:55:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-23 10:55:10 -参数 : [{}]
2019-05-23 10:55:10 -耗时 : 6
2019-05-23 10:55:10 -返回值 : login
2019-05-23 10:55:12 -请求地址 : http://localhost:8081/getVerify
2019-05-23 10:55:12 -HTTP METHOD : GET
2019-05-23 10:55:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-23 10:55:12 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@30cfae0b, org.apache.shiro.web.servlet.ShiroHttpServletResponse@68a17130]
2019-05-23 10:55:18 -7662
2019-05-23 10:55:18 -耗时 : 6105
2019-05-23 10:55:18 -返回值 : null
2019-05-23 10:55:19 -请求地址 : http://localhost:8081/login
2019-05-23 10:55:19 -HTTP METHOD : GET
2019-05-23 10:55:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-23 10:55:19 -参数 : [{}]
2019-05-23 10:55:19 -耗时 : 1
2019-05-23 10:55:19 -返回值 : login
2019-05-23 10:55:23 -请求地址 : http://localhost:8081/login
2019-05-23 10:55:23 -HTTP METHOD : POST
2019-05-23 10:55:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-23 10:55:23 -参数 : [admin, 111111, 7662, org.apache.shiro.web.servlet.ShiroHttpServletRequest@59ff11fa]
2019-05-23 10:55:23 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-23 10:55:23 -==> Parameters: admin(String)
2019-05-23 10:55:23 -<==      Total: 1
2019-05-23 10:55:23 -耗时 : 364
2019-05-23 10:55:23 -返回值 : {msg=操作成功, code=0}
2019-05-23 10:55:24 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-23 10:55:24 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-23 10:55:24 -==> Parameters: 1(Long), admin(String), 登录(String), 364(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-23 10:55:24.018(Timestamp)
2019-05-23 10:55:24 -<==    Updates: 1
2019-05-23 10:55:24 -请求地址 : http://localhost:8081/index
2019-05-23 10:55:24 -HTTP METHOD : GET
2019-05-23 10:55:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-23 10:55:24 -参数 : [{}]
2019-05-23 10:55:24 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-23 10:55:24 -==> Parameters: 1(Long)
2019-05-23 10:55:24 -<==      Total: 49
2019-05-23 10:55:24 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-23 10:55:24 -==> Parameters: 138(Long)
2019-05-23 10:55:25 -<==      Total: 1
2019-05-23 10:55:25 -耗时 : 342
2019-05-23 10:55:25 -返回值 : index_v1
2019-05-23 10:55:25 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-23 10:55:25 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 342(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-23 10:55:25.235(Timestamp)
2019-05-23 10:55:25 -<==    Updates: 1
2019-05-23 10:55:25 -请求地址 : http://localhost:8081/main
2019-05-23 10:55:25 -HTTP METHOD : GET
2019-05-23 10:55:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-23 10:55:25 -参数 : []
2019-05-23 10:55:25 -耗时 : 1
2019-05-23 10:55:25 -返回值 : main
2019-05-23 10:55:28 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-23 10:55:28 -HTTP METHOD : GET
2019-05-23 10:55:28 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-23 10:55:28 -参数 : []
2019-05-23 10:55:28 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-23 10:55:28 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-23 10:55:28 -<==      Total: 0
2019-05-23 10:55:28 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-23 10:55:28 -==> Parameters: 1(Long), 0(String)
2019-05-23 10:55:28 -<==      Total: 1
2019-05-23 10:55:28 -耗时 : 105
2019-05-23 10:55:28 -返回值 : com.bootdo.common.utils.PageUtils@1d90808c
2019-05-23 10:55:28 -请求地址 : http://localhost:8081/main
2019-05-23 10:55:28 -HTTP METHOD : GET
2019-05-23 10:55:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-23 10:55:28 -参数 : []
2019-05-23 10:55:28 -耗时 : 0
2019-05-23 10:55:28 -返回值 : main
2019-05-23 10:55:51 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-23 10:55:51 -==> Parameters: 1(Long)
2019-05-23 10:55:51 -<==      Total: 93
2019-05-23 10:55:51 -请求地址 : http://localhost:8081/charts/countRun
2019-05-23 10:55:51 -HTTP METHOD : GET
2019-05-23 10:55:51 -CLASS_METHOD : com.bootdo.charts.controller.countRunController.countRun
2019-05-23 10:55:51 -参数 : []
2019-05-23 10:55:51 -耗时 : 0
2019-05-23 10:55:51 -返回值 : charts/countRun
2019-05-23 10:55:53 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-23 10:55:53 -HTTP METHOD : GET
2019-05-23 10:55:53 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-23 10:55:53 -参数 : [userType]
2019-05-23 10:55:53 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-23 10:55:53 -==> Parameters: userType(String)
2019-05-23 10:55:53 -<==      Total: 4
2019-05-23 10:55:53 -耗时 : 39
2019-05-23 10:55:53 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-23 10:55:57 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-23 10:55:57 -HTTP METHOD : GET
2019-05-23 10:55:57 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-23 10:55:57 -参数 : []
2019-05-23 10:55:57 -耗时 : 1
2019-05-23 10:55:57 -返回值 : system/dept/deptTree
2019-05-23 10:55:57 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-23 10:55:57 -HTTP METHOD : GET
2019-05-23 10:55:57 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-23 10:55:57 -参数 : []
2019-05-23 10:55:57 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-23 10:55:57 -==> Parameters: 
2019-05-23 10:55:57 -<==      Total: 3
2019-05-23 10:55:57 -耗时 : 27
2019-05-23 10:55:57 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-23 10:56:00 -请求地址 : http://localhost:8081/charts/countRun/getCountRun
2019-05-23 10:56:00 -HTTP METHOD : POST
2019-05-23 10:56:00 -CLASS_METHOD : com.bootdo.charts.controller.countRunController.getCountRun
2019-05-23 10:56:00 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@2079d54e, com.bootdo.moneyLog.vo.WaterLogVo@529f8952, com.bootdo.moneyLog.vo.HeatLogVo@fa1756d]
2019-05-23 10:56:00 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("2019","-01") and user_org = ? 
2019-05-23 10:56:00 -==> Parameters: 2(String)
2019-05-23 10:56:00 -<==      Total: 1
2019-05-23 10:56:00 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("2019","-01") and user_org = ? 
2019-05-23 10:56:00 -==> Parameters: 2(String)
2019-05-23 10:56:00 -<==      Total: 1
2019-05-23 10:56:00 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("2019","-02") and user_org = ? 
2019-05-23 10:56:00 -==> Parameters: 2(String)
2019-05-23 10:56:00 -<==      Total: 1
2019-05-23 10:56:00 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("2019","-02") and user_org = ? 
2019-05-23 10:56:00 -==> Parameters: 2(String)
2019-05-23 10:56:00 -<==      Total: 1
2019-05-23 10:56:00 -==>  Preparing: SELECT ifnull (COUNT(ID),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("2019","-03") and user_org = ? 
2019-05-23 10:56:00 -==> Parameters: 2(String)
2019-05-23 10:56:00 -<==      Total: 1
2019-05-23 10:56:00 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("2019","-03") and user_org = ? 
2019-05-23 10:56:00 -==> Parameters: 2(String)
2019-05-23 10:56:00 -<==      Total: 1
2019-05-23 10:56:00 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("2019","-04") and user_org = ? 
2019-05-23 10:56:00 -==> Parameters: 2(String)
2019-05-23 10:56:00 -<==      Total: 1
2019-05-23 10:56:00 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("2019","-04") and user_org = ? 
2019-05-23 10:56:00 -==> Parameters: 2(String)
2019-05-23 10:56:00 -<==      Total: 1
2019-05-23 10:56:00 -==>  Preparing: SELECT ifnull (COUNT(ID),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("2019","-05") and user_org = ? 
2019-05-23 10:56:00 -==> Parameters: 2(String)
2019-05-23 10:56:00 -<==      Total: 1
2019-05-23 10:56:00 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("2019","-05") and user_org = ? 
2019-05-23 10:56:00 -==> Parameters: 2(String)
2019-05-23 10:56:00 -<==      Total: 1
2019-05-23 10:56:00 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("2019","-06") and user_org = ? 
2019-05-23 10:56:00 -==> Parameters: 2(String)
2019-05-23 10:56:00 -<==      Total: 1
2019-05-23 10:56:00 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("2019","-06") and user_org = ? 
2019-05-23 10:56:00 -==> Parameters: 2(String)
2019-05-23 10:56:00 -<==      Total: 1
2019-05-23 10:56:00 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("2019","-07") and user_org = ? 
2019-05-23 10:56:00 -==> Parameters: 2(String)
2019-05-23 10:56:00 -<==      Total: 1
2019-05-23 10:56:00 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("2019","-07") and user_org = ? 
2019-05-23 10:56:00 -==> Parameters: 2(String)
2019-05-23 10:56:00 -<==      Total: 1
2019-05-23 10:56:00 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("2019","-08") and user_org = ? 
2019-05-23 10:56:00 -==> Parameters: 2(String)
2019-05-23 10:56:00 -<==      Total: 1
2019-05-23 10:56:00 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("2019","-08") and user_org = ? 
2019-05-23 10:56:00 -==> Parameters: 2(String)
2019-05-23 10:56:00 -<==      Total: 1
2019-05-23 10:56:00 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("2019","-09") and user_org = ? 
2019-05-23 10:56:00 -==> Parameters: 2(String)
2019-05-23 10:56:00 -<==      Total: 1
2019-05-23 10:56:00 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("2019","-09") and user_org = ? 
2019-05-23 10:56:00 -==> Parameters: 2(String)
2019-05-23 10:56:00 -<==      Total: 1
2019-05-23 10:56:00 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("2019","-10") and user_org = ? 
2019-05-23 10:56:00 -==> Parameters: 2(String)
2019-05-23 10:56:00 -<==      Total: 1
2019-05-23 10:56:00 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("2019","-10") and user_org = ? 
2019-05-23 10:56:00 -==> Parameters: 2(String)
2019-05-23 10:56:00 -<==      Total: 1
2019-05-23 10:56:00 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("2019","-11") and user_org = ? 
2019-05-23 10:56:00 -==> Parameters: 2(String)
2019-05-23 10:56:00 -<==      Total: 1
2019-05-23 10:56:00 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("2019","-11") and user_org = ? 
2019-05-23 10:56:00 -==> Parameters: 2(String)
2019-05-23 10:56:00 -<==      Total: 1
2019-05-23 10:56:00 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("2019","-12") and user_org = ? 
2019-05-23 10:56:00 -==> Parameters: 2(String)
2019-05-23 10:56:00 -<==      Total: 1
2019-05-23 10:56:00 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("2019","-12") and user_org = ? 
2019-05-23 10:56:00 -==> Parameters: 2(String)
2019-05-23 10:56:00 -<==      Total: 1
2019-05-23 10:56:00 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM HEAT_LOG WHERE `create_time` = CONCAT("2019","-01") and user_org = ? 
2019-05-23 10:56:00 -==> Parameters: 2(String)
2019-05-23 10:56:00 -<==      Total: 1
2019-05-23 10:56:00 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE `create_time` = CONCAT("2019","-01") 
2019-05-23 10:56:00 -==> Parameters: 
2019-05-23 10:56:00 -<==      Total: 1
2019-05-23 10:56:00 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM HEAT_LOG WHERE `create_time` = CONCAT("2019","-02") and user_org = ? 
2019-05-23 10:56:00 -==> Parameters: 2(String)
2019-05-23 10:56:00 -<==      Total: 1
2019-05-23 10:56:00 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE `create_time` = CONCAT("2019","-02") and user_org = ? 
2019-05-23 10:56:00 -==> Parameters: 2(String)
2019-05-23 10:56:00 -<==      Total: 1
2019-05-23 10:56:00 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM HEAT_LOG WHERE `create_time` = CONCAT("2019","-03") and user_org = ? 
2019-05-23 10:56:00 -==> Parameters: 2(String)
2019-05-23 10:56:00 -<==      Total: 1
2019-05-23 10:56:00 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE `create_time` = CONCAT("2019","-03") and user_org = ? 
2019-05-23 10:56:00 -==> Parameters: 2(String)
2019-05-23 10:56:00 -<==      Total: 1
2019-05-23 10:56:00 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM HEAT_LOG WHERE `create_time` = CONCAT("2019","-04") and user_org = ? 
2019-05-23 10:56:00 -==> Parameters: 2(String)
2019-05-23 10:56:00 -<==      Total: 1
2019-05-23 10:56:00 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE `create_time` = CONCAT("2019","-04") and user_org = ? 
2019-05-23 10:56:00 -==> Parameters: 2(String)
2019-05-23 10:56:00 -<==      Total: 1
2019-05-23 10:56:00 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM HEAT_LOG WHERE `create_time` = CONCAT("2019","-05") and user_org = ? 
2019-05-23 10:56:00 -==> Parameters: 2(String)
2019-05-23 10:56:00 -<==      Total: 1
2019-05-23 10:56:00 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE `create_time` = CONCAT("2019","-05") and user_org = ? 
2019-05-23 10:56:00 -==> Parameters: 2(String)
2019-05-23 10:56:00 -<==      Total: 1
2019-05-23 10:56:00 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM HEAT_LOG WHERE `create_time` = CONCAT("2019","-06") and user_org = ? 
2019-05-23 10:56:00 -==> Parameters: 2(String)
2019-05-23 10:56:00 -<==      Total: 1
2019-05-23 10:56:00 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE `create_time` = CONCAT("2019","-06") and user_org = ? 
2019-05-23 10:56:00 -==> Parameters: 2(String)
2019-05-23 10:56:00 -<==      Total: 1
2019-05-23 10:56:00 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM HEAT_LOG WHERE `create_time` = CONCAT("2019","-07") and user_org = ? 
2019-05-23 10:56:00 -==> Parameters: 2(String)
2019-05-23 10:56:00 -<==      Total: 1
2019-05-23 10:56:00 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE `create_time` = CONCAT("2019","-07") and user_org = ? 
2019-05-23 10:56:00 -==> Parameters: 2(String)
2019-05-23 10:56:00 -<==      Total: 1
2019-05-23 10:56:00 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM HEAT_LOG WHERE `create_time` = CONCAT("2019","-08") and user_org = ? 
2019-05-23 10:56:00 -==> Parameters: 2(String)
2019-05-23 10:56:00 -<==      Total: 1
2019-05-23 10:56:00 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE `create_time` = CONCAT("2019","-08") and user_org = ? 
2019-05-23 10:56:00 -==> Parameters: 2(String)
2019-05-23 10:56:00 -<==      Total: 1
2019-05-23 10:56:00 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM HEAT_LOG WHERE `create_time` = CONCAT("2019","-09") and user_org = ? 
2019-05-23 10:56:00 -==> Parameters: 2(String)
2019-05-23 10:56:00 -<==      Total: 1
2019-05-23 10:56:00 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE `create_time` = CONCAT("2019","-09") and user_org = ? 
2019-05-23 10:56:00 -==> Parameters: 2(String)
2019-05-23 10:56:00 -<==      Total: 1
2019-05-23 10:56:00 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM HEAT_LOG WHERE `create_time` = CONCAT("2019","-10") and user_org = ? 
2019-05-23 10:56:00 -==> Parameters: 2(String)
2019-05-23 10:56:00 -<==      Total: 1
2019-05-23 10:56:00 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE `create_time` = CONCAT("2019","-10") and user_org = ? 
2019-05-23 10:56:00 -==> Parameters: 2(String)
2019-05-23 10:56:00 -<==      Total: 1
2019-05-23 10:56:00 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM HEAT_LOG WHERE `create_time` = CONCAT("2019","-11") and user_org = ? 
2019-05-23 10:56:00 -==> Parameters: 2(String)
2019-05-23 10:56:00 -<==      Total: 1
2019-05-23 10:56:00 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE `create_time` = CONCAT("2019","-11") and user_org = ? 
2019-05-23 10:56:00 -==> Parameters: 2(String)
2019-05-23 10:56:00 -<==      Total: 1
2019-05-23 10:56:00 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM HEAT_LOG WHERE `create_time` = CONCAT("2019","-12") and user_org = ? 
2019-05-23 10:56:00 -==> Parameters: 2(String)
2019-05-23 10:56:00 -<==      Total: 1
2019-05-23 10:56:00 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE `create_time` = CONCAT("2019","-12") and user_org = ? 
2019-05-23 10:56:00 -==> Parameters: 2(String)
2019-05-23 10:56:00 -<==      Total: 1
2019-05-23 10:56:00 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM WATER_LOG WHERE `create_time` = CONCAT("2019","-01") and user_org = ? 
2019-05-23 10:56:00 -==> Parameters: 2(String)
2019-05-23 10:56:01 -<==      Total: 1
2019-05-23 10:56:01 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `create_time` = CONCAT("2019","-01") and user_org = ? 
2019-05-23 10:56:01 -==> Parameters: 2(String)
2019-05-23 10:56:01 -<==      Total: 1
2019-05-23 10:56:01 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM WATER_LOG WHERE `create_time` = CONCAT("2019","-02") and user_org = ? 
2019-05-23 10:56:01 -==> Parameters: 2(String)
2019-05-23 10:56:01 -<==      Total: 1
2019-05-23 10:56:01 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `create_time` = CONCAT("2019","-02") and user_org = ? 
2019-05-23 10:56:01 -==> Parameters: 2(String)
2019-05-23 10:56:01 -<==      Total: 1
2019-05-23 10:56:01 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM WATER_LOG WHERE `create_time` = CONCAT("2019","-03") and user_org = ? 
2019-05-23 10:56:01 -==> Parameters: 2(String)
2019-05-23 10:56:01 -<==      Total: 1
2019-05-23 10:56:01 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `create_time` = CONCAT("2019","-03") and user_org = ? 
2019-05-23 10:56:01 -==> Parameters: 2(String)
2019-05-23 10:56:01 -<==      Total: 1
2019-05-23 10:56:01 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM WATER_LOG WHERE `create_time` = CONCAT("2019","-04") and user_org = ? 
2019-05-23 10:56:01 -==> Parameters: 2(String)
2019-05-23 10:56:01 -<==      Total: 1
2019-05-23 10:56:01 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `create_time` = CONCAT("2019","-04") and user_org = ? 
2019-05-23 10:56:01 -==> Parameters: 2(String)
2019-05-23 10:56:01 -<==      Total: 1
2019-05-23 10:56:01 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM WATER_LOG WHERE `create_time` = CONCAT("2019","-05") and user_org = ? 
2019-05-23 10:56:01 -==> Parameters: 2(String)
2019-05-23 10:56:01 -<==      Total: 1
2019-05-23 10:56:01 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `create_time` = CONCAT("2019","-05") and user_org = ? 
2019-05-23 10:56:01 -==> Parameters: 2(String)
2019-05-23 10:56:01 -<==      Total: 1
2019-05-23 10:56:01 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM WATER_LOG WHERE `create_time` = CONCAT("2019","-06") and user_org = ? 
2019-05-23 10:56:01 -==> Parameters: 2(String)
2019-05-23 10:56:01 -<==      Total: 1
2019-05-23 10:56:01 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `create_time` = CONCAT("2019","-06") and user_org = ? 
2019-05-23 10:56:01 -==> Parameters: 2(String)
2019-05-23 10:56:01 -<==      Total: 1
2019-05-23 10:56:01 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM WATER_LOG WHERE `create_time` = CONCAT("2019","-07") and user_org = ? 
2019-05-23 10:56:01 -==> Parameters: 2(String)
2019-05-23 10:56:01 -<==      Total: 1
2019-05-23 10:56:01 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `create_time` = CONCAT("2019","-07") and user_org = ? 
2019-05-23 10:56:01 -==> Parameters: 2(String)
2019-05-23 10:56:01 -<==      Total: 1
2019-05-23 10:56:01 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM WATER_LOG WHERE `create_time` = CONCAT("2019","-08") and user_org = ? 
2019-05-23 10:56:01 -==> Parameters: 2(String)
2019-05-23 10:56:01 -<==      Total: 1
2019-05-23 10:56:01 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `create_time` = CONCAT("2019","-08") and user_org = ? 
2019-05-23 10:56:01 -==> Parameters: 2(String)
2019-05-23 10:56:01 -<==      Total: 1
2019-05-23 10:56:01 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM WATER_LOG WHERE `create_time` = CONCAT("2019","-09") and user_org = ? 
2019-05-23 10:56:01 -==> Parameters: 2(String)
2019-05-23 10:56:01 -<==      Total: 1
2019-05-23 10:56:01 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `create_time` = CONCAT("2019","-09") and user_org = ? 
2019-05-23 10:56:01 -==> Parameters: 2(String)
2019-05-23 10:56:01 -<==      Total: 1
2019-05-23 10:56:01 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM WATER_LOG WHERE `create_time` = CONCAT("2019","-10") and user_org = ? 
2019-05-23 10:56:01 -==> Parameters: 2(String)
2019-05-23 10:56:01 -<==      Total: 1
2019-05-23 10:56:01 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `create_time` = CONCAT("2019","-10") and user_org = ? 
2019-05-23 10:56:01 -==> Parameters: 2(String)
2019-05-23 10:56:01 -<==      Total: 1
2019-05-23 10:56:01 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM WATER_LOG WHERE `create_time` = CONCAT("2019","-11") and user_org = ? 
2019-05-23 10:56:01 -==> Parameters: 2(String)
2019-05-23 10:56:01 -<==      Total: 1
2019-05-23 10:56:01 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `create_time` = CONCAT("2019","-11") and user_org = ? 
2019-05-23 10:56:01 -==> Parameters: 2(String)
2019-05-23 10:56:01 -<==      Total: 1
2019-05-23 10:56:01 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM WATER_LOG WHERE `create_time` = CONCAT("2019","-12") and user_org = ? 
2019-05-23 10:56:01 -==> Parameters: 2(String)
2019-05-23 10:56:01 -<==      Total: 1
2019-05-23 10:56:01 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `create_time` = CONCAT("2019","-12") and user_org = ? 
2019-05-23 10:56:01 -==> Parameters: 2(String)
2019-05-23 10:56:01 -<==      Total: 1
2019-05-23 10:56:01 -耗时 : 844
2019-05-23 10:56:01 -返回值 : {waterLogSum9=0, elecLogSum1=0, waterLogSum8=0, elecLogSum2=4244, waterLogSum7=0, elecLogSum3=392, waterLogSum6=0, elecLogSum4=0, waterLogSum5=0, elecLogSum5=0, waterLogSum4=112, elecLogSum6=0, waterLogSum3=273, elecLogSum7=0, waterLogSum2=0, elecLogSum8=0, waterLogSum1=0, totalCount=52, elecLogSum9=0, heatLogSum9=0, heatLogSum8=0, heatLogSum7=0, elecLogSum10=0, elecLogSum11=0, elecLogSum12=0, heatLogSum10=0, heatLogSum11=0, heatLogSum12=0, heatLogSum6=0, totalSum=5266, heatLogSum5=0, heatLogSum4=1, heatLogSum3=244, heatLogSum2=0, heatLogSum1=0, waterLogSum10=0, waterLogSum11=0, waterLogSum12=0}
2019-05-23 11:01:31 -请求地址 : http://localhost:8081/index
2019-05-23 11:01:31 -HTTP METHOD : GET
2019-05-23 11:01:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-23 11:01:31 -参数 : [{}]
2019-05-23 11:01:31 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-23 11:01:31 -==> Parameters: 1(Long)
2019-05-23 11:01:31 -<==      Total: 49
2019-05-23 11:01:31 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-23 11:01:31 -==> Parameters: 138(Long)
2019-05-23 11:01:31 -<==      Total: 1
2019-05-23 11:01:31 -耗时 : 96
2019-05-23 11:01:31 -返回值 : index_v1
2019-05-23 11:01:31 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-23 11:01:31 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 96(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-23 11:01:31.311(Timestamp)
2019-05-23 11:01:31 -请求地址 : http://localhost:8081/main
2019-05-23 11:01:31 -HTTP METHOD : GET
2019-05-23 11:01:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-23 11:01:31 -参数 : []
2019-05-23 11:01:31 -耗时 : 0
2019-05-23 11:01:31 -返回值 : main
2019-05-23 11:01:31 -<==    Updates: 1
2019-05-23 11:01:31 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-23 11:01:31 -HTTP METHOD : GET
2019-05-23 11:01:31 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-23 11:01:31 -参数 : []
2019-05-23 11:01:31 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-23 11:01:31 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-23 11:01:31 -<==      Total: 0
2019-05-23 11:01:31 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-23 11:01:31 -==> Parameters: 1(Long), 0(String)
2019-05-23 11:01:31 -<==      Total: 1
2019-05-23 11:01:31 -耗时 : 29
2019-05-23 11:01:31 -返回值 : com.bootdo.common.utils.PageUtils@22cf422e
2019-05-23 11:01:31 -请求地址 : http://localhost:8081/main
2019-05-23 11:01:31 -HTTP METHOD : GET
2019-05-23 11:01:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-23 11:01:31 -参数 : []
2019-05-23 11:01:31 -耗时 : 1
2019-05-23 11:01:31 -返回值 : main
2019-05-23 11:01:45 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-23 11:01:45 -HTTP METHOD : GET
2019-05-23 11:01:45 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-23 11:01:45 -参数 : []
2019-05-23 11:01:45 -耗时 : 20
2019-05-23 11:01:45 -返回值 : charts/tableElecYY
2019-05-23 11:01:45 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-23 11:01:45 -HTTP METHOD : GET
2019-05-23 11:01:45 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-23 11:01:45 -参数 : [userType]
2019-05-23 11:01:45 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-23 11:01:45 -==> Parameters: userType(String)
2019-05-23 11:01:45 -<==      Total: 4
2019-05-23 11:01:45 -耗时 : 5
2019-05-23 11:01:45 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-23 11:02:07 -请求地址 : http://localhost:8081/index
2019-05-23 11:02:07 -HTTP METHOD : GET
2019-05-23 11:02:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-23 11:02:07 -参数 : [{}]
2019-05-23 11:02:07 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-23 11:02:07 -==> Parameters: 1(Long)
2019-05-23 11:02:07 -<==      Total: 49
2019-05-23 11:02:07 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-23 11:02:07 -==> Parameters: 138(Long)
2019-05-23 11:02:07 -<==      Total: 1
2019-05-23 11:02:07 -耗时 : 105
2019-05-23 11:02:07 -返回值 : index_v1
2019-05-23 11:02:07 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-23 11:02:07 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 106(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-23 11:02:07.122(Timestamp)
2019-05-23 11:02:07 -请求地址 : http://localhost:8081/main
2019-05-23 11:02:07 -HTTP METHOD : GET
2019-05-23 11:02:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-23 11:02:07 -参数 : []
2019-05-23 11:02:07 -耗时 : 1
2019-05-23 11:02:07 -返回值 : main
2019-05-23 11:02:07 -<==    Updates: 1
2019-05-23 11:02:07 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-23 11:02:07 -HTTP METHOD : GET
2019-05-23 11:02:07 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-23 11:02:07 -参数 : []
2019-05-23 11:02:07 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-23 11:02:07 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-23 11:02:07 -<==      Total: 0
2019-05-23 11:02:07 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-23 11:02:07 -==> Parameters: 1(Long), 0(String)
2019-05-23 11:02:07 -<==      Total: 1
2019-05-23 11:02:07 -耗时 : 32
2019-05-23 11:02:07 -返回值 : com.bootdo.common.utils.PageUtils@28f1ff4c
2019-05-23 11:02:07 -请求地址 : http://localhost:8081/main
2019-05-23 11:02:07 -HTTP METHOD : GET
2019-05-23 11:02:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-23 11:02:07 -参数 : []
2019-05-23 11:02:07 -耗时 : 0
2019-05-23 11:02:07 -返回值 : main
2019-05-23 11:02:09 -请求地址 : http://localhost:8081/charts/countRun
2019-05-23 11:02:09 -HTTP METHOD : GET
2019-05-23 11:02:09 -CLASS_METHOD : com.bootdo.charts.controller.countRunController.countRun
2019-05-23 11:02:09 -参数 : []
2019-05-23 11:02:09 -耗时 : 1
2019-05-23 11:02:09 -返回值 : charts/countRun
2019-05-23 11:02:09 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-23 11:02:09 -HTTP METHOD : GET
2019-05-23 11:02:09 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-23 11:02:09 -参数 : [userType]
2019-05-23 11:02:09 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-23 11:02:09 -==> Parameters: userType(String)
2019-05-23 11:02:09 -<==      Total: 4
2019-05-23 11:02:09 -耗时 : 5
2019-05-23 11:02:09 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-23 11:02:11 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:20)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:23)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:424)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:232)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-23 11:02:12 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-23 11:02:12 -HTTP METHOD : GET
2019-05-23 11:02:12 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-23 11:02:12 -参数 : []
2019-05-23 11:02:12 -耗时 : 0
2019-05-23 11:02:12 -返回值 : system/dept/deptTree
2019-05-23 11:02:13 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-23 11:02:13 -HTTP METHOD : GET
2019-05-23 11:02:13 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-23 11:02:13 -参数 : []
2019-05-23 11:02:13 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-23 11:02:13 -==> Parameters: 
2019-05-23 11:02:13 -<==      Total: 3
2019-05-23 11:02:13 -耗时 : 6
2019-05-23 11:02:13 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-23 11:02:15 -请求地址 : http://localhost:8081/charts/countRun/getCountRun
2019-05-23 11:02:15 -HTTP METHOD : POST
2019-05-23 11:02:15 -CLASS_METHOD : com.bootdo.charts.controller.countRunController.getCountRun
2019-05-23 11:02:15 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@61cdc311, com.bootdo.moneyLog.vo.WaterLogVo@484ef743, com.bootdo.moneyLog.vo.HeatLogVo@16250d8e]
2019-05-23 11:02:15 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("2019","-01") and user_org = ? 
2019-05-23 11:02:15 -==> Parameters: 2(String)
2019-05-23 11:02:15 -<==      Total: 1
2019-05-23 11:02:15 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("2019","-01") and user_org = ? 
2019-05-23 11:02:15 -==> Parameters: 2(String)
2019-05-23 11:02:15 -<==      Total: 1
2019-05-23 11:02:15 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("2019","-02") and user_org = ? 
2019-05-23 11:02:15 -==> Parameters: 2(String)
2019-05-23 11:02:15 -<==      Total: 1
2019-05-23 11:02:15 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("2019","-02") and user_org = ? 
2019-05-23 11:02:15 -==> Parameters: 2(String)
2019-05-23 11:02:15 -<==      Total: 1
2019-05-23 11:02:15 -==>  Preparing: SELECT ifnull (COUNT(ID),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("2019","-03") and user_org = ? 
2019-05-23 11:02:15 -==> Parameters: 2(String)
2019-05-23 11:02:15 -<==      Total: 1
2019-05-23 11:02:15 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("2019","-03") and user_org = ? 
2019-05-23 11:02:15 -==> Parameters: 2(String)
2019-05-23 11:02:15 -<==      Total: 1
2019-05-23 11:02:15 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("2019","-04") and user_org = ? 
2019-05-23 11:02:15 -==> Parameters: 2(String)
2019-05-23 11:02:15 -<==      Total: 1
2019-05-23 11:02:15 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("2019","-04") and user_org = ? 
2019-05-23 11:02:15 -==> Parameters: 2(String)
2019-05-23 11:02:15 -<==      Total: 1
2019-05-23 11:02:15 -==>  Preparing: SELECT ifnull (COUNT(ID),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("2019","-05") and user_org = ? 
2019-05-23 11:02:15 -==> Parameters: 2(String)
2019-05-23 11:02:15 -<==      Total: 1
2019-05-23 11:02:15 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("2019","-05") and user_org = ? 
2019-05-23 11:02:15 -==> Parameters: 2(String)
2019-05-23 11:02:15 -<==      Total: 1
2019-05-23 11:02:15 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("2019","-06") and user_org = ? 
2019-05-23 11:02:15 -==> Parameters: 2(String)
2019-05-23 11:02:15 -<==      Total: 1
2019-05-23 11:02:15 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("2019","-06") and user_org = ? 
2019-05-23 11:02:15 -==> Parameters: 2(String)
2019-05-23 11:02:15 -<==      Total: 1
2019-05-23 11:02:15 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("2019","-07") and user_org = ? 
2019-05-23 11:02:15 -==> Parameters: 2(String)
2019-05-23 11:02:15 -<==      Total: 1
2019-05-23 11:02:15 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("2019","-07") and user_org = ? 
2019-05-23 11:02:15 -==> Parameters: 2(String)
2019-05-23 11:02:15 -<==      Total: 1
2019-05-23 11:02:15 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("2019","-08") and user_org = ? 
2019-05-23 11:02:15 -==> Parameters: 2(String)
2019-05-23 11:02:15 -<==      Total: 1
2019-05-23 11:02:15 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("2019","-08") and user_org = ? 
2019-05-23 11:02:15 -==> Parameters: 2(String)
2019-05-23 11:02:15 -<==      Total: 1
2019-05-23 11:02:15 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("2019","-09") and user_org = ? 
2019-05-23 11:02:15 -==> Parameters: 2(String)
2019-05-23 11:02:15 -<==      Total: 1
2019-05-23 11:02:15 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("2019","-09") and user_org = ? 
2019-05-23 11:02:15 -==> Parameters: 2(String)
2019-05-23 11:02:15 -<==      Total: 1
2019-05-23 11:02:15 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("2019","-10") and user_org = ? 
2019-05-23 11:02:15 -==> Parameters: 2(String)
2019-05-23 11:02:15 -<==      Total: 1
2019-05-23 11:02:15 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("2019","-10") and user_org = ? 
2019-05-23 11:02:15 -==> Parameters: 2(String)
2019-05-23 11:02:15 -<==      Total: 1
2019-05-23 11:02:15 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("2019","-11") and user_org = ? 
2019-05-23 11:02:15 -==> Parameters: 2(String)
2019-05-23 11:02:15 -<==      Total: 1
2019-05-23 11:02:15 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("2019","-11") and user_org = ? 
2019-05-23 11:02:15 -==> Parameters: 2(String)
2019-05-23 11:02:15 -<==      Total: 1
2019-05-23 11:02:15 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("2019","-12") and user_org = ? 
2019-05-23 11:02:15 -==> Parameters: 2(String)
2019-05-23 11:02:15 -<==      Total: 1
2019-05-23 11:02:15 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("2019","-12") and user_org = ? 
2019-05-23 11:02:15 -==> Parameters: 2(String)
2019-05-23 11:02:15 -<==      Total: 1
2019-05-23 11:02:15 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM HEAT_LOG WHERE `create_time` = CONCAT("2019","-01") and user_org = ? 
2019-05-23 11:02:15 -==> Parameters: 2(String)
2019-05-23 11:02:15 -<==      Total: 1
2019-05-23 11:02:15 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE `create_time` = CONCAT("2019","-01") 
2019-05-23 11:02:15 -==> Parameters: 
2019-05-23 11:02:15 -<==      Total: 1
2019-05-23 11:02:15 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM HEAT_LOG WHERE `create_time` = CONCAT("2019","-02") and user_org = ? 
2019-05-23 11:02:15 -==> Parameters: 2(String)
2019-05-23 11:02:15 -<==      Total: 1
2019-05-23 11:02:15 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE `create_time` = CONCAT("2019","-02") and user_org = ? 
2019-05-23 11:02:15 -==> Parameters: 2(String)
2019-05-23 11:02:15 -<==      Total: 1
2019-05-23 11:02:15 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM HEAT_LOG WHERE `create_time` = CONCAT("2019","-03") and user_org = ? 
2019-05-23 11:02:15 -==> Parameters: 2(String)
2019-05-23 11:02:15 -<==      Total: 1
2019-05-23 11:02:15 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE `create_time` = CONCAT("2019","-03") and user_org = ? 
2019-05-23 11:02:15 -==> Parameters: 2(String)
2019-05-23 11:02:15 -<==      Total: 1
2019-05-23 11:02:15 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM HEAT_LOG WHERE `create_time` = CONCAT("2019","-04") and user_org = ? 
2019-05-23 11:02:15 -==> Parameters: 2(String)
2019-05-23 11:02:15 -<==      Total: 1
2019-05-23 11:02:15 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE `create_time` = CONCAT("2019","-04") and user_org = ? 
2019-05-23 11:02:15 -==> Parameters: 2(String)
2019-05-23 11:02:15 -<==      Total: 1
2019-05-23 11:02:15 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM HEAT_LOG WHERE `create_time` = CONCAT("2019","-05") and user_org = ? 
2019-05-23 11:02:15 -==> Parameters: 2(String)
2019-05-23 11:02:15 -<==      Total: 1
2019-05-23 11:02:15 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE `create_time` = CONCAT("2019","-05") and user_org = ? 
2019-05-23 11:02:15 -==> Parameters: 2(String)
2019-05-23 11:02:15 -<==      Total: 1
2019-05-23 11:02:15 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM HEAT_LOG WHERE `create_time` = CONCAT("2019","-06") and user_org = ? 
2019-05-23 11:02:15 -==> Parameters: 2(String)
2019-05-23 11:02:15 -<==      Total: 1
2019-05-23 11:02:15 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE `create_time` = CONCAT("2019","-06") and user_org = ? 
2019-05-23 11:02:15 -==> Parameters: 2(String)
2019-05-23 11:02:15 -<==      Total: 1
2019-05-23 11:02:15 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM HEAT_LOG WHERE `create_time` = CONCAT("2019","-07") and user_org = ? 
2019-05-23 11:02:15 -==> Parameters: 2(String)
2019-05-23 11:02:15 -<==      Total: 1
2019-05-23 11:02:15 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE `create_time` = CONCAT("2019","-07") and user_org = ? 
2019-05-23 11:02:15 -==> Parameters: 2(String)
2019-05-23 11:02:15 -<==      Total: 1
2019-05-23 11:02:15 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM HEAT_LOG WHERE `create_time` = CONCAT("2019","-08") and user_org = ? 
2019-05-23 11:02:15 -==> Parameters: 2(String)
2019-05-23 11:02:15 -<==      Total: 1
2019-05-23 11:02:15 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE `create_time` = CONCAT("2019","-08") and user_org = ? 
2019-05-23 11:02:15 -==> Parameters: 2(String)
2019-05-23 11:02:15 -<==      Total: 1
2019-05-23 11:02:15 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM HEAT_LOG WHERE `create_time` = CONCAT("2019","-09") and user_org = ? 
2019-05-23 11:02:15 -==> Parameters: 2(String)
2019-05-23 11:02:15 -<==      Total: 1
2019-05-23 11:02:15 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE `create_time` = CONCAT("2019","-09") and user_org = ? 
2019-05-23 11:02:15 -==> Parameters: 2(String)
2019-05-23 11:02:15 -<==      Total: 1
2019-05-23 11:02:15 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM HEAT_LOG WHERE `create_time` = CONCAT("2019","-10") and user_org = ? 
2019-05-23 11:02:15 -==> Parameters: 2(String)
2019-05-23 11:02:15 -<==      Total: 1
2019-05-23 11:02:15 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE `create_time` = CONCAT("2019","-10") and user_org = ? 
2019-05-23 11:02:15 -==> Parameters: 2(String)
2019-05-23 11:02:15 -<==      Total: 1
2019-05-23 11:02:15 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM HEAT_LOG WHERE `create_time` = CONCAT("2019","-11") and user_org = ? 
2019-05-23 11:02:15 -==> Parameters: 2(String)
2019-05-23 11:02:15 -<==      Total: 1
2019-05-23 11:02:15 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE `create_time` = CONCAT("2019","-11") and user_org = ? 
2019-05-23 11:02:15 -==> Parameters: 2(String)
2019-05-23 11:02:15 -<==      Total: 1
2019-05-23 11:02:15 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM HEAT_LOG WHERE `create_time` = CONCAT("2019","-12") and user_org = ? 
2019-05-23 11:02:15 -==> Parameters: 2(String)
2019-05-23 11:02:15 -<==      Total: 1
2019-05-23 11:02:15 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE `create_time` = CONCAT("2019","-12") and user_org = ? 
2019-05-23 11:02:15 -==> Parameters: 2(String)
2019-05-23 11:02:15 -<==      Total: 1
2019-05-23 11:02:15 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM WATER_LOG WHERE `create_time` = CONCAT("2019","-01") and user_org = ? 
2019-05-23 11:02:15 -==> Parameters: 2(String)
2019-05-23 11:02:15 -<==      Total: 1
2019-05-23 11:02:15 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `create_time` = CONCAT("2019","-01") and user_org = ? 
2019-05-23 11:02:15 -==> Parameters: 2(String)
2019-05-23 11:02:15 -<==      Total: 1
2019-05-23 11:02:15 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM WATER_LOG WHERE `create_time` = CONCAT("2019","-02") and user_org = ? 
2019-05-23 11:02:15 -==> Parameters: 2(String)
2019-05-23 11:02:15 -<==      Total: 1
2019-05-23 11:02:15 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `create_time` = CONCAT("2019","-02") and user_org = ? 
2019-05-23 11:02:15 -==> Parameters: 2(String)
2019-05-23 11:02:15 -<==      Total: 1
2019-05-23 11:02:15 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM WATER_LOG WHERE `create_time` = CONCAT("2019","-03") and user_org = ? 
2019-05-23 11:02:15 -==> Parameters: 2(String)
2019-05-23 11:02:15 -<==      Total: 1
2019-05-23 11:02:15 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `create_time` = CONCAT("2019","-03") and user_org = ? 
2019-05-23 11:02:15 -==> Parameters: 2(String)
2019-05-23 11:02:15 -<==      Total: 1
2019-05-23 11:02:15 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM WATER_LOG WHERE `create_time` = CONCAT("2019","-04") and user_org = ? 
2019-05-23 11:02:15 -==> Parameters: 2(String)
2019-05-23 11:02:15 -<==      Total: 1
2019-05-23 11:02:15 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `create_time` = CONCAT("2019","-04") and user_org = ? 
2019-05-23 11:02:15 -==> Parameters: 2(String)
2019-05-23 11:02:15 -<==      Total: 1
2019-05-23 11:02:15 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM WATER_LOG WHERE `create_time` = CONCAT("2019","-05") and user_org = ? 
2019-05-23 11:02:15 -==> Parameters: 2(String)
2019-05-23 11:02:15 -<==      Total: 1
2019-05-23 11:02:15 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `create_time` = CONCAT("2019","-05") and user_org = ? 
2019-05-23 11:02:15 -==> Parameters: 2(String)
2019-05-23 11:02:15 -<==      Total: 1
2019-05-23 11:02:15 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM WATER_LOG WHERE `create_time` = CONCAT("2019","-06") and user_org = ? 
2019-05-23 11:02:15 -==> Parameters: 2(String)
2019-05-23 11:02:15 -<==      Total: 1
2019-05-23 11:02:15 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `create_time` = CONCAT("2019","-06") and user_org = ? 
2019-05-23 11:02:15 -==> Parameters: 2(String)
2019-05-23 11:02:15 -<==      Total: 1
2019-05-23 11:02:15 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM WATER_LOG WHERE `create_time` = CONCAT("2019","-07") and user_org = ? 
2019-05-23 11:02:15 -==> Parameters: 2(String)
2019-05-23 11:02:15 -<==      Total: 1
2019-05-23 11:02:15 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `create_time` = CONCAT("2019","-07") and user_org = ? 
2019-05-23 11:02:15 -==> Parameters: 2(String)
2019-05-23 11:02:15 -<==      Total: 1
2019-05-23 11:02:15 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM WATER_LOG WHERE `create_time` = CONCAT("2019","-08") and user_org = ? 
2019-05-23 11:02:15 -==> Parameters: 2(String)
2019-05-23 11:02:15 -<==      Total: 1
2019-05-23 11:02:15 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `create_time` = CONCAT("2019","-08") and user_org = ? 
2019-05-23 11:02:15 -==> Parameters: 2(String)
2019-05-23 11:02:15 -<==      Total: 1
2019-05-23 11:02:15 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM WATER_LOG WHERE `create_time` = CONCAT("2019","-09") and user_org = ? 
2019-05-23 11:02:15 -==> Parameters: 2(String)
2019-05-23 11:02:15 -<==      Total: 1
2019-05-23 11:02:15 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `create_time` = CONCAT("2019","-09") and user_org = ? 
2019-05-23 11:02:15 -==> Parameters: 2(String)
2019-05-23 11:02:15 -<==      Total: 1
2019-05-23 11:02:15 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM WATER_LOG WHERE `create_time` = CONCAT("2019","-10") and user_org = ? 
2019-05-23 11:02:15 -==> Parameters: 2(String)
2019-05-23 11:02:15 -<==      Total: 1
2019-05-23 11:02:15 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `create_time` = CONCAT("2019","-10") and user_org = ? 
2019-05-23 11:02:15 -==> Parameters: 2(String)
2019-05-23 11:02:15 -<==      Total: 1
2019-05-23 11:02:15 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM WATER_LOG WHERE `create_time` = CONCAT("2019","-11") and user_org = ? 
2019-05-23 11:02:15 -==> Parameters: 2(String)
2019-05-23 11:02:15 -<==      Total: 1
2019-05-23 11:02:15 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `create_time` = CONCAT("2019","-11") and user_org = ? 
2019-05-23 11:02:15 -==> Parameters: 2(String)
2019-05-23 11:02:15 -<==      Total: 1
2019-05-23 11:02:15 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM WATER_LOG WHERE `create_time` = CONCAT("2019","-12") and user_org = ? 
2019-05-23 11:02:15 -==> Parameters: 2(String)
2019-05-23 11:02:15 -<==      Total: 1
2019-05-23 11:02:15 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `create_time` = CONCAT("2019","-12") and user_org = ? 
2019-05-23 11:02:15 -==> Parameters: 2(String)
2019-05-23 11:02:15 -<==      Total: 1
2019-05-23 11:02:15 -耗时 : 214
2019-05-23 11:02:15 -返回值 : {waterLogSum9=0, elecLogSum1=0, waterLogSum8=0, elecLogSum2=4244, waterLogSum7=0, elecLogSum3=392, waterLogSum6=0, elecLogSum4=0, waterLogSum5=0, elecLogSum5=0, waterLogSum4=112, elecLogSum6=0, waterLogSum3=273, elecLogSum7=0, waterLogSum2=0, elecLogSum8=0, waterLogSum1=0, totalCount=52, elecLogSum9=0, heatLogSum9=0, heatLogSum8=0, heatLogSum7=0, elecLogSum10=0, elecLogSum11=0, elecLogSum12=0, heatLogSum10=0, heatLogSum11=0, heatLogSum12=0, heatLogSum6=0, totalSum=5266, heatLogSum5=0, heatLogSum4=1, heatLogSum3=244, heatLogSum2=0, heatLogSum1=0, waterLogSum10=0, waterLogSum11=0, waterLogSum12=0}
2019-05-23 11:02:59 -请求地址 : http://localhost:8081/login;JSESSIONID=91a9fcc3-99e2-4389-864d-19cec6536fdb
2019-05-23 11:02:59 -HTTP METHOD : GET
2019-05-23 11:02:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-23 11:02:59 -参数 : [{}]
2019-05-23 11:02:59 -耗时 : 0
2019-05-23 11:02:59 -返回值 : login
2019-05-23 11:02:59 -请求地址 : http://localhost:8081/getVerify
2019-05-23 11:02:59 -HTTP METHOD : GET
2019-05-23 11:02:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-23 11:02:59 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@1dc91f4, org.apache.shiro.web.servlet.ShiroHttpServletResponse@4ea077a0]
2019-05-23 11:02:59 -2453
2019-05-23 11:02:59 -耗时 : 34
2019-05-23 11:02:59 -返回值 : null
2019-05-23 11:02:59 -请求地址 : http://localhost:8081/login
2019-05-23 11:02:59 -HTTP METHOD : GET
2019-05-23 11:02:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-23 11:02:59 -参数 : [{}]
2019-05-23 11:02:59 -耗时 : 0
2019-05-23 11:02:59 -返回值 : login
2019-05-23 11:03:08 -请求地址 : http://localhost:8081/login
2019-05-23 11:03:08 -HTTP METHOD : POST
2019-05-23 11:03:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-23 11:03:08 -参数 : [admin, 111111, 2453, org.apache.shiro.web.servlet.ShiroHttpServletRequest@4302e58d]
2019-05-23 11:03:08 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-23 11:03:08 -==> Parameters: admin(String)
2019-05-23 11:03:08 -<==      Total: 1
2019-05-23 11:03:08 -耗时 : 9
2019-05-23 11:03:08 -返回值 : {msg=操作成功, code=0}
2019-05-23 11:03:08 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-23 11:03:08 -==> Parameters: 1(Long), admin(String), 登录(String), 9(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-23 11:03:08.784(Timestamp)
2019-05-23 11:03:08 -请求地址 : http://localhost:8081/index
2019-05-23 11:03:08 -HTTP METHOD : GET
2019-05-23 11:03:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-23 11:03:08 -参数 : [{}]
2019-05-23 11:03:08 -<==    Updates: 1
2019-05-23 11:03:08 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-23 11:03:08 -==> Parameters: 1(Long)
2019-05-23 11:03:08 -<==      Total: 49
2019-05-23 11:03:08 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-23 11:03:08 -==> Parameters: 138(Long)
2019-05-23 11:03:08 -<==      Total: 1
2019-05-23 11:03:08 -耗时 : 149
2019-05-23 11:03:08 -返回值 : index_v1
2019-05-23 11:03:09 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-23 11:03:09 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 150(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-23 11:03:08.966(Timestamp)
2019-05-23 11:03:09 -请求地址 : http://localhost:8081/main
2019-05-23 11:03:09 -HTTP METHOD : GET
2019-05-23 11:03:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-23 11:03:09 -参数 : []
2019-05-23 11:03:09 -耗时 : 0
2019-05-23 11:03:09 -返回值 : main
2019-05-23 11:03:09 -<==    Updates: 1
2019-05-23 11:03:16 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-23 11:03:16 -请求地址 : http://localhost:8081/main
2019-05-23 11:03:16 -HTTP METHOD : GET
2019-05-23 11:03:16 -HTTP METHOD : GET
2019-05-23 11:03:16 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-23 11:03:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-23 11:03:16 -参数 : []
2019-05-23 11:03:16 -参数 : []
2019-05-23 11:03:16 -耗时 : 0
2019-05-23 11:03:16 -返回值 : main
2019-05-23 11:03:16 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-23 11:03:16 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-23 11:03:16 -<==      Total: 0
2019-05-23 11:03:16 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-23 11:03:16 -==> Parameters: 1(Long), 0(String)
2019-05-23 11:03:16 -<==      Total: 1
2019-05-23 11:03:16 -耗时 : 6
2019-05-23 11:03:16 -返回值 : com.bootdo.common.utils.PageUtils@51cb6d9
2019-05-23 11:03:23 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-23 11:03:23 -==> Parameters: 1(Long)
2019-05-23 11:03:23 -<==      Total: 93
2019-05-23 11:03:23 -请求地址 : http://localhost:8081/charts/countRun
2019-05-23 11:03:23 -HTTP METHOD : GET
2019-05-23 11:03:23 -CLASS_METHOD : com.bootdo.charts.controller.countRunController.countRun
2019-05-23 11:03:23 -参数 : []
2019-05-23 11:03:23 -耗时 : 0
2019-05-23 11:03:23 -返回值 : charts/countRun
2019-05-23 11:03:24 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-23 11:03:24 -HTTP METHOD : GET
2019-05-23 11:03:24 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-23 11:03:24 -参数 : [userType]
2019-05-23 11:03:24 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-23 11:03:24 -==> Parameters: userType(String)
2019-05-23 11:03:24 -<==      Total: 4
2019-05-23 11:03:24 -耗时 : 8
2019-05-23 11:03:24 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-23 11:03:26 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-23 11:03:26 -HTTP METHOD : GET
2019-05-23 11:03:26 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-23 11:03:26 -参数 : []
2019-05-23 11:03:26 -耗时 : 1
2019-05-23 11:03:26 -返回值 : system/dept/deptTree
2019-05-23 11:03:27 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-23 11:03:27 -HTTP METHOD : GET
2019-05-23 11:03:27 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-23 11:03:27 -参数 : []
2019-05-23 11:03:27 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-23 11:03:27 -==> Parameters: 
2019-05-23 11:03:27 -<==      Total: 3
2019-05-23 11:03:27 -耗时 : 4
2019-05-23 11:03:27 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-23 11:03:29 -请求地址 : http://localhost:8081/charts/countRun/getCountRun
2019-05-23 11:03:29 -HTTP METHOD : POST
2019-05-23 11:03:29 -CLASS_METHOD : com.bootdo.charts.controller.countRunController.getCountRun
2019-05-23 11:03:29 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@43340ccd, com.bootdo.moneyLog.vo.WaterLogVo@4e23cad3, com.bootdo.moneyLog.vo.HeatLogVo@220beb39]
2019-05-23 11:03:29 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("2019","-01") and user_org = ? 
2019-05-23 11:03:29 -==> Parameters: 2(String)
2019-05-23 11:03:29 -<==      Total: 1
2019-05-23 11:03:29 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("2019","-01") and user_org = ? 
2019-05-23 11:03:29 -==> Parameters: 2(String)
2019-05-23 11:03:29 -<==      Total: 1
2019-05-23 11:03:29 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("2019","-02") and user_org = ? 
2019-05-23 11:03:29 -==> Parameters: 2(String)
2019-05-23 11:03:29 -<==      Total: 1
2019-05-23 11:03:29 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("2019","-02") and user_org = ? 
2019-05-23 11:03:29 -==> Parameters: 2(String)
2019-05-23 11:03:29 -<==      Total: 1
2019-05-23 11:03:29 -==>  Preparing: SELECT ifnull (COUNT(ID),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("2019","-03") and user_org = ? 
2019-05-23 11:03:29 -==> Parameters: 2(String)
2019-05-23 11:03:29 -<==      Total: 1
2019-05-23 11:03:29 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("2019","-03") and user_org = ? 
2019-05-23 11:03:29 -==> Parameters: 2(String)
2019-05-23 11:03:29 -<==      Total: 1
2019-05-23 11:03:29 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("2019","-04") and user_org = ? 
2019-05-23 11:03:29 -==> Parameters: 2(String)
2019-05-23 11:03:29 -<==      Total: 1
2019-05-23 11:03:29 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("2019","-04") and user_org = ? 
2019-05-23 11:03:29 -==> Parameters: 2(String)
2019-05-23 11:03:29 -<==      Total: 1
2019-05-23 11:03:29 -==>  Preparing: SELECT ifnull (COUNT(ID),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("2019","-05") and user_org = ? 
2019-05-23 11:03:29 -==> Parameters: 2(String)
2019-05-23 11:03:29 -<==      Total: 1
2019-05-23 11:03:29 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("2019","-05") and user_org = ? 
2019-05-23 11:03:29 -==> Parameters: 2(String)
2019-05-23 11:03:29 -<==      Total: 1
2019-05-23 11:03:29 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("2019","-06") and user_org = ? 
2019-05-23 11:03:29 -==> Parameters: 2(String)
2019-05-23 11:03:29 -<==      Total: 1
2019-05-23 11:03:29 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("2019","-06") and user_org = ? 
2019-05-23 11:03:29 -==> Parameters: 2(String)
2019-05-23 11:03:29 -<==      Total: 1
2019-05-23 11:03:29 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("2019","-07") and user_org = ? 
2019-05-23 11:03:29 -==> Parameters: 2(String)
2019-05-23 11:03:29 -<==      Total: 1
2019-05-23 11:03:29 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("2019","-07") and user_org = ? 
2019-05-23 11:03:29 -==> Parameters: 2(String)
2019-05-23 11:03:29 -<==      Total: 1
2019-05-23 11:03:29 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("2019","-08") and user_org = ? 
2019-05-23 11:03:29 -==> Parameters: 2(String)
2019-05-23 11:03:29 -<==      Total: 1
2019-05-23 11:03:29 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("2019","-08") and user_org = ? 
2019-05-23 11:03:29 -==> Parameters: 2(String)
2019-05-23 11:03:29 -<==      Total: 1
2019-05-23 11:03:29 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("2019","-09") and user_org = ? 
2019-05-23 11:03:29 -==> Parameters: 2(String)
2019-05-23 11:03:29 -<==      Total: 1
2019-05-23 11:03:29 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("2019","-09") and user_org = ? 
2019-05-23 11:03:29 -==> Parameters: 2(String)
2019-05-23 11:03:29 -<==      Total: 1
2019-05-23 11:03:29 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("2019","-10") and user_org = ? 
2019-05-23 11:03:29 -==> Parameters: 2(String)
2019-05-23 11:03:29 -<==      Total: 1
2019-05-23 11:03:29 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("2019","-10") and user_org = ? 
2019-05-23 11:03:29 -==> Parameters: 2(String)
2019-05-23 11:03:29 -<==      Total: 1
2019-05-23 11:03:29 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("2019","-11") and user_org = ? 
2019-05-23 11:03:29 -==> Parameters: 2(String)
2019-05-23 11:03:29 -<==      Total: 1
2019-05-23 11:03:29 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("2019","-11") and user_org = ? 
2019-05-23 11:03:29 -==> Parameters: 2(String)
2019-05-23 11:03:29 -<==      Total: 1
2019-05-23 11:03:29 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("2019","-12") and user_org = ? 
2019-05-23 11:03:29 -==> Parameters: 2(String)
2019-05-23 11:03:29 -<==      Total: 1
2019-05-23 11:03:29 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("2019","-12") and user_org = ? 
2019-05-23 11:03:29 -==> Parameters: 2(String)
2019-05-23 11:03:29 -<==      Total: 1
2019-05-23 11:03:29 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM HEAT_LOG WHERE `create_time` = CONCAT("2019","-01") and user_org = ? 
2019-05-23 11:03:29 -==> Parameters: 2(String)
2019-05-23 11:03:29 -<==      Total: 1
2019-05-23 11:03:29 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE `create_time` = CONCAT("2019","-01") 
2019-05-23 11:03:29 -==> Parameters: 
2019-05-23 11:03:29 -<==      Total: 1
2019-05-23 11:03:29 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM HEAT_LOG WHERE `create_time` = CONCAT("2019","-02") and user_org = ? 
2019-05-23 11:03:29 -==> Parameters: 2(String)
2019-05-23 11:03:29 -<==      Total: 1
2019-05-23 11:03:29 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE `create_time` = CONCAT("2019","-02") and user_org = ? 
2019-05-23 11:03:29 -==> Parameters: 2(String)
2019-05-23 11:03:29 -<==      Total: 1
2019-05-23 11:03:29 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM HEAT_LOG WHERE `create_time` = CONCAT("2019","-03") and user_org = ? 
2019-05-23 11:03:29 -==> Parameters: 2(String)
2019-05-23 11:03:29 -<==      Total: 1
2019-05-23 11:03:29 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE `create_time` = CONCAT("2019","-03") and user_org = ? 
2019-05-23 11:03:29 -==> Parameters: 2(String)
2019-05-23 11:03:29 -<==      Total: 1
2019-05-23 11:03:29 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM HEAT_LOG WHERE `create_time` = CONCAT("2019","-04") and user_org = ? 
2019-05-23 11:03:29 -==> Parameters: 2(String)
2019-05-23 11:03:29 -<==      Total: 1
2019-05-23 11:03:29 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE `create_time` = CONCAT("2019","-04") and user_org = ? 
2019-05-23 11:03:29 -==> Parameters: 2(String)
2019-05-23 11:03:29 -<==      Total: 1
2019-05-23 11:03:29 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM HEAT_LOG WHERE `create_time` = CONCAT("2019","-05") and user_org = ? 
2019-05-23 11:03:29 -==> Parameters: 2(String)
2019-05-23 11:03:29 -<==      Total: 1
2019-05-23 11:03:29 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE `create_time` = CONCAT("2019","-05") and user_org = ? 
2019-05-23 11:03:29 -==> Parameters: 2(String)
2019-05-23 11:03:29 -<==      Total: 1
2019-05-23 11:03:29 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM HEAT_LOG WHERE `create_time` = CONCAT("2019","-06") and user_org = ? 
2019-05-23 11:03:29 -==> Parameters: 2(String)
2019-05-23 11:03:29 -<==      Total: 1
2019-05-23 11:03:29 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE `create_time` = CONCAT("2019","-06") and user_org = ? 
2019-05-23 11:03:29 -==> Parameters: 2(String)
2019-05-23 11:03:29 -<==      Total: 1
2019-05-23 11:03:29 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM HEAT_LOG WHERE `create_time` = CONCAT("2019","-07") and user_org = ? 
2019-05-23 11:03:29 -==> Parameters: 2(String)
2019-05-23 11:03:29 -<==      Total: 1
2019-05-23 11:03:29 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE `create_time` = CONCAT("2019","-07") and user_org = ? 
2019-05-23 11:03:29 -==> Parameters: 2(String)
2019-05-23 11:03:29 -<==      Total: 1
2019-05-23 11:03:29 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM HEAT_LOG WHERE `create_time` = CONCAT("2019","-08") and user_org = ? 
2019-05-23 11:03:29 -==> Parameters: 2(String)
2019-05-23 11:03:29 -<==      Total: 1
2019-05-23 11:03:29 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE `create_time` = CONCAT("2019","-08") and user_org = ? 
2019-05-23 11:03:29 -==> Parameters: 2(String)
2019-05-23 11:03:29 -<==      Total: 1
2019-05-23 11:03:29 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM HEAT_LOG WHERE `create_time` = CONCAT("2019","-09") and user_org = ? 
2019-05-23 11:03:29 -==> Parameters: 2(String)
2019-05-23 11:03:29 -<==      Total: 1
2019-05-23 11:03:29 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE `create_time` = CONCAT("2019","-09") and user_org = ? 
2019-05-23 11:03:29 -==> Parameters: 2(String)
2019-05-23 11:03:29 -<==      Total: 1
2019-05-23 11:03:29 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM HEAT_LOG WHERE `create_time` = CONCAT("2019","-10") and user_org = ? 
2019-05-23 11:03:29 -==> Parameters: 2(String)
2019-05-23 11:03:29 -<==      Total: 1
2019-05-23 11:03:29 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE `create_time` = CONCAT("2019","-10") and user_org = ? 
2019-05-23 11:03:29 -==> Parameters: 2(String)
2019-05-23 11:03:29 -<==      Total: 1
2019-05-23 11:03:29 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM HEAT_LOG WHERE `create_time` = CONCAT("2019","-11") and user_org = ? 
2019-05-23 11:03:29 -==> Parameters: 2(String)
2019-05-23 11:03:29 -<==      Total: 1
2019-05-23 11:03:29 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE `create_time` = CONCAT("2019","-11") and user_org = ? 
2019-05-23 11:03:29 -==> Parameters: 2(String)
2019-05-23 11:03:29 -<==      Total: 1
2019-05-23 11:03:29 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM HEAT_LOG WHERE `create_time` = CONCAT("2019","-12") and user_org = ? 
2019-05-23 11:03:29 -==> Parameters: 2(String)
2019-05-23 11:03:29 -<==      Total: 1
2019-05-23 11:03:29 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE `create_time` = CONCAT("2019","-12") and user_org = ? 
2019-05-23 11:03:29 -==> Parameters: 2(String)
2019-05-23 11:03:29 -<==      Total: 1
2019-05-23 11:03:29 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM WATER_LOG WHERE `create_time` = CONCAT("2019","-01") and user_org = ? 
2019-05-23 11:03:29 -==> Parameters: 2(String)
2019-05-23 11:03:29 -<==      Total: 1
2019-05-23 11:03:29 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `create_time` = CONCAT("2019","-01") and user_org = ? 
2019-05-23 11:03:29 -==> Parameters: 2(String)
2019-05-23 11:03:29 -<==      Total: 1
2019-05-23 11:03:29 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM WATER_LOG WHERE `create_time` = CONCAT("2019","-02") and user_org = ? 
2019-05-23 11:03:29 -==> Parameters: 2(String)
2019-05-23 11:03:29 -<==      Total: 1
2019-05-23 11:03:29 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `create_time` = CONCAT("2019","-02") and user_org = ? 
2019-05-23 11:03:29 -==> Parameters: 2(String)
2019-05-23 11:03:29 -<==      Total: 1
2019-05-23 11:03:29 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM WATER_LOG WHERE `create_time` = CONCAT("2019","-03") and user_org = ? 
2019-05-23 11:03:29 -==> Parameters: 2(String)
2019-05-23 11:03:29 -<==      Total: 1
2019-05-23 11:03:29 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `create_time` = CONCAT("2019","-03") and user_org = ? 
2019-05-23 11:03:29 -==> Parameters: 2(String)
2019-05-23 11:03:29 -<==      Total: 1
2019-05-23 11:03:29 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM WATER_LOG WHERE `create_time` = CONCAT("2019","-04") and user_org = ? 
2019-05-23 11:03:29 -==> Parameters: 2(String)
2019-05-23 11:03:29 -<==      Total: 1
2019-05-23 11:03:29 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `create_time` = CONCAT("2019","-04") and user_org = ? 
2019-05-23 11:03:29 -==> Parameters: 2(String)
2019-05-23 11:03:29 -<==      Total: 1
2019-05-23 11:03:29 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM WATER_LOG WHERE `create_time` = CONCAT("2019","-05") and user_org = ? 
2019-05-23 11:03:29 -==> Parameters: 2(String)
2019-05-23 11:03:29 -<==      Total: 1
2019-05-23 11:03:29 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `create_time` = CONCAT("2019","-05") and user_org = ? 
2019-05-23 11:03:29 -==> Parameters: 2(String)
2019-05-23 11:03:29 -<==      Total: 1
2019-05-23 11:03:29 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM WATER_LOG WHERE `create_time` = CONCAT("2019","-06") and user_org = ? 
2019-05-23 11:03:29 -==> Parameters: 2(String)
2019-05-23 11:03:29 -<==      Total: 1
2019-05-23 11:03:29 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `create_time` = CONCAT("2019","-06") and user_org = ? 
2019-05-23 11:03:29 -==> Parameters: 2(String)
2019-05-23 11:03:29 -<==      Total: 1
2019-05-23 11:03:29 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM WATER_LOG WHERE `create_time` = CONCAT("2019","-07") and user_org = ? 
2019-05-23 11:03:29 -==> Parameters: 2(String)
2019-05-23 11:03:29 -<==      Total: 1
2019-05-23 11:03:29 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `create_time` = CONCAT("2019","-07") and user_org = ? 
2019-05-23 11:03:29 -==> Parameters: 2(String)
2019-05-23 11:03:29 -<==      Total: 1
2019-05-23 11:03:29 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM WATER_LOG WHERE `create_time` = CONCAT("2019","-08") and user_org = ? 
2019-05-23 11:03:29 -==> Parameters: 2(String)
2019-05-23 11:03:29 -<==      Total: 1
2019-05-23 11:03:29 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `create_time` = CONCAT("2019","-08") and user_org = ? 
2019-05-23 11:03:29 -==> Parameters: 2(String)
2019-05-23 11:03:29 -<==      Total: 1
2019-05-23 11:03:29 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM WATER_LOG WHERE `create_time` = CONCAT("2019","-09") and user_org = ? 
2019-05-23 11:03:29 -==> Parameters: 2(String)
2019-05-23 11:03:29 -<==      Total: 1
2019-05-23 11:03:29 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `create_time` = CONCAT("2019","-09") and user_org = ? 
2019-05-23 11:03:29 -==> Parameters: 2(String)
2019-05-23 11:03:29 -<==      Total: 1
2019-05-23 11:03:29 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM WATER_LOG WHERE `create_time` = CONCAT("2019","-10") and user_org = ? 
2019-05-23 11:03:29 -==> Parameters: 2(String)
2019-05-23 11:03:29 -<==      Total: 1
2019-05-23 11:03:29 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `create_time` = CONCAT("2019","-10") and user_org = ? 
2019-05-23 11:03:29 -==> Parameters: 2(String)
2019-05-23 11:03:29 -<==      Total: 1
2019-05-23 11:03:29 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM WATER_LOG WHERE `create_time` = CONCAT("2019","-11") and user_org = ? 
2019-05-23 11:03:29 -==> Parameters: 2(String)
2019-05-23 11:03:29 -<==      Total: 1
2019-05-23 11:03:29 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `create_time` = CONCAT("2019","-11") and user_org = ? 
2019-05-23 11:03:29 -==> Parameters: 2(String)
2019-05-23 11:03:29 -<==      Total: 1
2019-05-23 11:03:29 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM WATER_LOG WHERE `create_time` = CONCAT("2019","-12") and user_org = ? 
2019-05-23 11:03:29 -==> Parameters: 2(String)
2019-05-23 11:03:29 -<==      Total: 1
2019-05-23 11:03:29 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `create_time` = CONCAT("2019","-12") and user_org = ? 
2019-05-23 11:03:29 -==> Parameters: 2(String)
2019-05-23 11:03:29 -<==      Total: 1
2019-05-23 11:03:29 -耗时 : 236
2019-05-23 11:03:29 -返回值 : {waterLogSum9=0, elecLogSum1=0, waterLogSum8=0, elecLogSum2=4244, waterLogSum7=0, elecLogSum3=392, waterLogSum6=0, elecLogSum4=0, waterLogSum5=0, elecLogSum5=0, waterLogSum4=112, elecLogSum6=0, waterLogSum3=273, elecLogSum7=0, waterLogSum2=0, elecLogSum8=0, waterLogSum1=0, totalCount=52, elecLogSum9=0, heatLogSum9=0, heatLogSum8=0, heatLogSum7=0, elecLogSum10=0, elecLogSum11=0, elecLogSum12=0, heatLogSum10=0, heatLogSum11=0, heatLogSum12=0, heatLogSum6=0, totalSum=5266, heatLogSum5=0, heatLogSum4=1, heatLogSum3=244, heatLogSum2=0, heatLogSum1=0, waterLogSum10=0, waterLogSum11=0, waterLogSum12=0}
2019-05-23 11:04:20 -请求地址 : http://localhost:8081/charts/countOwe
2019-05-23 11:04:20 -HTTP METHOD : GET
2019-05-23 11:04:20 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.countOwe
2019-05-23 11:04:20 -参数 : []
2019-05-23 11:04:20 -耗时 : 1
2019-05-23 11:04:20 -返回值 : charts/countOwe
2019-05-23 11:04:20 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-23 11:04:20 -HTTP METHOD : GET
2019-05-23 11:04:20 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-23 11:04:20 -参数 : [userType]
2019-05-23 11:04:20 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-23 11:04:20 -==> Parameters: userType(String)
2019-05-23 11:04:20 -<==      Total: 4
2019-05-23 11:04:20 -耗时 : 5
2019-05-23 11:04:20 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-23 11:04:24 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-23 11:04:24 -HTTP METHOD : GET
2019-05-23 11:04:24 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-23 11:04:24 -参数 : []
2019-05-23 11:04:24 -耗时 : 0
2019-05-23 11:04:24 -返回值 : system/dept/deptTree
2019-05-23 11:04:24 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-23 11:04:24 -HTTP METHOD : GET
2019-05-23 11:04:24 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-23 11:04:24 -参数 : []
2019-05-23 11:04:24 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-23 11:04:24 -==> Parameters: 
2019-05-23 11:04:24 -<==      Total: 3
2019-05-23 11:04:24 -耗时 : 3
2019-05-23 11:04:24 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-23 11:04:26 -请求地址 : http://localhost:8081/charts/countOwe/getCountOwe
2019-05-23 11:04:26 -HTTP METHOD : POST
2019-05-23 11:04:26 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.getCountD
2019-05-23 11:04:26 -参数 : [com.bootdo.elec.vo.ElecVo@47ee13e2, com.bootdo.water.vo.WaterVo@7f5de614, com.bootdo.heat.vo.HeatVo@7d7aac72]
2019-05-23 11:04:26 -==>  Preparing: SELECT COUNT(ID) FROM ELEC WHERE `elec_sum` < 0 
2019-05-23 11:04:26 -==> Parameters: 
2019-05-23 11:04:26 -<==      Total: 1
2019-05-23 11:04:26 -==>  Preparing: SELECT SUM(ELEC_SUM) FROM ELEC WHERE `elec_sum` < 0 
2019-05-23 11:04:26 -==> Parameters: 
2019-05-23 11:04:26 -<==      Total: 1
2019-05-23 11:04:26 -==>  Preparing: SELECT COUNT(ID) FROM WATER WHERE `water_sum` < 0 
2019-05-23 11:04:26 -==> Parameters: 
2019-05-23 11:04:26 -<==      Total: 1
2019-05-23 11:04:26 -==>  Preparing: SELECT SUM(WATER_SUM) FROM WATER WHERE `water_sum` < 0 
2019-05-23 11:04:26 -==> Parameters: 
2019-05-23 11:04:26 -<==      Total: 1
2019-05-23 11:04:26 -==>  Preparing: SELECT COUNT(ID) FROM HEAT WHERE `heat_sum` < 0 
2019-05-23 11:04:26 -==> Parameters: 
2019-05-23 11:04:27 -<==      Total: 1
2019-05-23 11:04:27 -==>  Preparing: SELECT SUM(HEAT_SUM) FROM HEAT WHERE `heat_sum` < 0 
2019-05-23 11:04:27 -==> Parameters: 
2019-05-23 11:04:27 -<==      Total: 1
2019-05-23 11:04:27 -耗时 : 514
2019-05-23 11:04:27 -返回值 : com.bootdo.charts.vo.CountOweVo@45d9372
2019-05-23 11:04:35 -请求地址 : http://localhost:8081/charts/countOwe/getCountOwe
2019-05-23 11:04:35 -HTTP METHOD : POST
2019-05-23 11:04:35 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.getCountD
2019-05-23 11:04:35 -参数 : [com.bootdo.elec.vo.ElecVo@18a1c1ce, com.bootdo.water.vo.WaterVo@4279c796, com.bootdo.heat.vo.HeatVo@4786606]
2019-05-23 11:04:35 -==>  Preparing: SELECT COUNT(ID) FROM ELEC WHERE `elec_sum` < 0 
2019-05-23 11:04:35 -==> Parameters: 
2019-05-23 11:04:35 -<==      Total: 1
2019-05-23 11:04:35 -==>  Preparing: SELECT SUM(ELEC_SUM) FROM ELEC WHERE `elec_sum` < 0 
2019-05-23 11:04:35 -==> Parameters: 
2019-05-23 11:04:35 -<==      Total: 1
2019-05-23 11:04:35 -==>  Preparing: SELECT COUNT(ID) FROM WATER WHERE `water_sum` < 0 
2019-05-23 11:04:35 -==> Parameters: 
2019-05-23 11:04:35 -<==      Total: 1
2019-05-23 11:04:35 -==>  Preparing: SELECT SUM(WATER_SUM) FROM WATER WHERE `water_sum` < 0 
2019-05-23 11:04:35 -==> Parameters: 
2019-05-23 11:04:35 -<==      Total: 1
2019-05-23 11:04:35 -==>  Preparing: SELECT COUNT(ID) FROM HEAT WHERE `heat_sum` < 0 
2019-05-23 11:04:35 -==> Parameters: 
2019-05-23 11:04:35 -<==      Total: 1
2019-05-23 11:04:35 -==>  Preparing: SELECT SUM(HEAT_SUM) FROM HEAT WHERE `heat_sum` < 0 
2019-05-23 11:04:35 -==> Parameters: 
2019-05-23 11:04:35 -<==      Total: 1
2019-05-23 11:04:35 -耗时 : 14
2019-05-23 11:04:35 -返回值 : com.bootdo.charts.vo.CountOweVo@74ca9a84
2019-05-23 11:04:39 -请求地址 : http://localhost:8081/charts/countOwe/getCountOwe
2019-05-23 11:04:39 -HTTP METHOD : POST
2019-05-23 11:04:39 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.getCountD
2019-05-23 11:04:39 -参数 : [com.bootdo.elec.vo.ElecVo@7256094a, com.bootdo.water.vo.WaterVo@2eb79d24, com.bootdo.heat.vo.HeatVo@6b0eaa51]
2019-05-23 11:04:39 -==>  Preparing: SELECT COUNT(ID) FROM ELEC WHERE `elec_sum` < 0 
2019-05-23 11:04:39 -==> Parameters: 
2019-05-23 11:04:39 -<==      Total: 1
2019-05-23 11:04:39 -==>  Preparing: SELECT SUM(ELEC_SUM) FROM ELEC WHERE `elec_sum` < 0 
2019-05-23 11:04:39 -==> Parameters: 
2019-05-23 11:04:39 -<==      Total: 1
2019-05-23 11:04:39 -==>  Preparing: SELECT COUNT(ID) FROM WATER WHERE `water_sum` < 0 
2019-05-23 11:04:39 -==> Parameters: 
2019-05-23 11:04:39 -<==      Total: 1
2019-05-23 11:04:39 -==>  Preparing: SELECT SUM(WATER_SUM) FROM WATER WHERE `water_sum` < 0 
2019-05-23 11:04:39 -==> Parameters: 
2019-05-23 11:04:39 -<==      Total: 1
2019-05-23 11:04:39 -==>  Preparing: SELECT COUNT(ID) FROM HEAT WHERE `heat_sum` < 0 
2019-05-23 11:04:39 -==> Parameters: 
2019-05-23 11:04:39 -<==      Total: 1
2019-05-23 11:04:39 -==>  Preparing: SELECT SUM(HEAT_SUM) FROM HEAT WHERE `heat_sum` < 0 
2019-05-23 11:04:39 -==> Parameters: 
2019-05-23 11:04:39 -<==      Total: 1
2019-05-23 11:04:39 -耗时 : 9
2019-05-23 11:04:39 -返回值 : com.bootdo.charts.vo.CountOweVo@4835558a
2019-05-23 11:04:40 -请求地址 : http://localhost:8081/charts/countOwe/getCountOwe
2019-05-23 11:04:40 -HTTP METHOD : POST
2019-05-23 11:04:40 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.getCountD
2019-05-23 11:04:40 -参数 : [com.bootdo.elec.vo.ElecVo@458397cf, com.bootdo.water.vo.WaterVo@141da00e, com.bootdo.heat.vo.HeatVo@310b6310]
2019-05-23 11:04:40 -==>  Preparing: SELECT COUNT(ID) FROM ELEC WHERE `elec_sum` < 0 
2019-05-23 11:04:40 -==> Parameters: 
2019-05-23 11:04:40 -<==      Total: 1
2019-05-23 11:04:40 -==>  Preparing: SELECT SUM(ELEC_SUM) FROM ELEC WHERE `elec_sum` < 0 
2019-05-23 11:04:40 -==> Parameters: 
2019-05-23 11:04:40 -<==      Total: 1
2019-05-23 11:04:40 -==>  Preparing: SELECT COUNT(ID) FROM WATER WHERE `water_sum` < 0 
2019-05-23 11:04:40 -==> Parameters: 
2019-05-23 11:04:40 -<==      Total: 1
2019-05-23 11:04:40 -==>  Preparing: SELECT SUM(WATER_SUM) FROM WATER WHERE `water_sum` < 0 
2019-05-23 11:04:40 -==> Parameters: 
2019-05-23 11:04:40 -<==      Total: 1
2019-05-23 11:04:40 -==>  Preparing: SELECT COUNT(ID) FROM HEAT WHERE `heat_sum` < 0 
2019-05-23 11:04:40 -==> Parameters: 
2019-05-23 11:04:40 -<==      Total: 1
2019-05-23 11:04:40 -==>  Preparing: SELECT SUM(HEAT_SUM) FROM HEAT WHERE `heat_sum` < 0 
2019-05-23 11:04:40 -==> Parameters: 
2019-05-23 11:04:40 -<==      Total: 1
2019-05-23 11:04:40 -耗时 : 13
2019-05-23 11:04:40 -返回值 : com.bootdo.charts.vo.CountOweVo@373c080a
2019-05-23 11:04:41 -请求地址 : http://localhost:8081/charts/countOwe/getCountOwe
2019-05-23 11:04:41 -HTTP METHOD : POST
2019-05-23 11:04:41 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.getCountD
2019-05-23 11:04:41 -参数 : [com.bootdo.elec.vo.ElecVo@4c3190c6, com.bootdo.water.vo.WaterVo@5ee047ec, com.bootdo.heat.vo.HeatVo@25a3ab03]
2019-05-23 11:04:41 -==>  Preparing: SELECT COUNT(ID) FROM ELEC WHERE `elec_sum` < 0 
2019-05-23 11:04:41 -==> Parameters: 
2019-05-23 11:04:41 -<==      Total: 1
2019-05-23 11:04:41 -==>  Preparing: SELECT SUM(ELEC_SUM) FROM ELEC WHERE `elec_sum` < 0 
2019-05-23 11:04:41 -==> Parameters: 
2019-05-23 11:04:41 -<==      Total: 1
2019-05-23 11:04:41 -==>  Preparing: SELECT COUNT(ID) FROM WATER WHERE `water_sum` < 0 
2019-05-23 11:04:41 -==> Parameters: 
2019-05-23 11:04:41 -<==      Total: 1
2019-05-23 11:04:41 -==>  Preparing: SELECT SUM(WATER_SUM) FROM WATER WHERE `water_sum` < 0 
2019-05-23 11:04:41 -==> Parameters: 
2019-05-23 11:04:41 -<==      Total: 1
2019-05-23 11:04:41 -==>  Preparing: SELECT COUNT(ID) FROM HEAT WHERE `heat_sum` < 0 
2019-05-23 11:04:41 -==> Parameters: 
2019-05-23 11:04:41 -<==      Total: 1
2019-05-23 11:04:41 -==>  Preparing: SELECT SUM(HEAT_SUM) FROM HEAT WHERE `heat_sum` < 0 
2019-05-23 11:04:41 -==> Parameters: 
2019-05-23 11:04:41 -<==      Total: 1
2019-05-23 11:04:41 -耗时 : 12
2019-05-23 11:04:41 -返回值 : com.bootdo.charts.vo.CountOweVo@749fac0a
2019-05-23 11:04:48 -请求地址 : http://localhost:8081/index
2019-05-23 11:04:48 -HTTP METHOD : GET
2019-05-23 11:04:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-23 11:04:48 -参数 : [{}]
2019-05-23 11:04:48 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-23 11:04:48 -==> Parameters: 1(Long)
2019-05-23 11:04:48 -<==      Total: 49
2019-05-23 11:04:48 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-23 11:04:48 -==> Parameters: 138(Long)
2019-05-23 11:04:48 -<==      Total: 1
2019-05-23 11:04:48 -耗时 : 35
2019-05-23 11:04:48 -返回值 : index_v1
2019-05-23 11:04:48 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-23 11:04:48 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 36(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-23 11:04:48.591(Timestamp)
2019-05-23 11:04:48 -<==    Updates: 1
2019-05-23 11:04:48 -请求地址 : http://localhost:8081/main
2019-05-23 11:04:48 -HTTP METHOD : GET
2019-05-23 11:04:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-23 11:04:48 -参数 : []
2019-05-23 11:04:48 -耗时 : 0
2019-05-23 11:04:48 -返回值 : main
2019-05-23 11:04:48 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-23 11:04:48 -HTTP METHOD : GET
2019-05-23 11:04:48 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-23 11:04:48 -参数 : []
2019-05-23 11:04:48 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-23 11:04:48 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-23 11:04:48 -<==      Total: 0
2019-05-23 11:04:48 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-23 11:04:48 -==> Parameters: 1(Long), 0(String)
2019-05-23 11:04:48 -<==      Total: 1
2019-05-23 11:04:48 -耗时 : 6
2019-05-23 11:04:48 -返回值 : com.bootdo.common.utils.PageUtils@c5675c0
2019-05-23 11:04:48 -请求地址 : http://localhost:8081/main
2019-05-23 11:04:48 -HTTP METHOD : GET
2019-05-23 11:04:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-23 11:04:48 -参数 : []
2019-05-23 11:04:48 -耗时 : 1
2019-05-23 11:04:48 -返回值 : main
2019-05-23 11:04:51 -请求地址 : http://localhost:8081/charts/countOwe
2019-05-23 11:04:51 -HTTP METHOD : GET
2019-05-23 11:04:51 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.countOwe
2019-05-23 11:04:51 -参数 : []
2019-05-23 11:04:51 -耗时 : 0
2019-05-23 11:04:51 -返回值 : charts/countOwe
2019-05-23 11:04:51 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-23 11:04:51 -HTTP METHOD : GET
2019-05-23 11:04:51 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-23 11:04:51 -参数 : [userType]
2019-05-23 11:04:51 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-23 11:04:51 -==> Parameters: userType(String)
2019-05-23 11:04:51 -<==      Total: 4
2019-05-23 11:04:51 -耗时 : 4
2019-05-23 11:04:51 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-23 11:04:56 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-23 11:04:56 -HTTP METHOD : GET
2019-05-23 11:04:56 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-23 11:04:56 -参数 : []
2019-05-23 11:04:56 -耗时 : 0
2019-05-23 11:04:56 -返回值 : system/dept/deptTree
2019-05-23 11:04:56 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-23 11:04:56 -HTTP METHOD : GET
2019-05-23 11:04:56 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-23 11:04:56 -参数 : []
2019-05-23 11:04:56 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-23 11:04:56 -==> Parameters: 
2019-05-23 11:04:56 -<==      Total: 3
2019-05-23 11:04:56 -耗时 : 4
2019-05-23 11:04:56 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-23 11:04:59 -请求地址 : http://localhost:8081/charts/countOwe/getCountOwe
2019-05-23 11:04:59 -HTTP METHOD : POST
2019-05-23 11:04:59 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.getCountD
2019-05-23 11:04:59 -参数 : [com.bootdo.elec.vo.ElecVo@59cb7241, com.bootdo.water.vo.WaterVo@1dddaf11, com.bootdo.heat.vo.HeatVo@282d76ae]
2019-05-23 11:04:59 -==>  Preparing: SELECT COUNT(ID) FROM ELEC WHERE `elec_sum` < 0 
2019-05-23 11:04:59 -==> Parameters: 
2019-05-23 11:04:59 -<==      Total: 1
2019-05-23 11:04:59 -==>  Preparing: SELECT SUM(ELEC_SUM) FROM ELEC WHERE `elec_sum` < 0 
2019-05-23 11:04:59 -==> Parameters: 
2019-05-23 11:04:59 -<==      Total: 1
2019-05-23 11:04:59 -==>  Preparing: SELECT COUNT(ID) FROM WATER WHERE `water_sum` < 0 
2019-05-23 11:04:59 -==> Parameters: 
2019-05-23 11:04:59 -<==      Total: 1
2019-05-23 11:04:59 -==>  Preparing: SELECT SUM(WATER_SUM) FROM WATER WHERE `water_sum` < 0 
2019-05-23 11:04:59 -==> Parameters: 
2019-05-23 11:04:59 -<==      Total: 1
2019-05-23 11:04:59 -==>  Preparing: SELECT COUNT(ID) FROM HEAT WHERE `heat_sum` < 0 
2019-05-23 11:04:59 -==> Parameters: 
2019-05-23 11:04:59 -<==      Total: 1
2019-05-23 11:04:59 -==>  Preparing: SELECT SUM(HEAT_SUM) FROM HEAT WHERE `heat_sum` < 0 
2019-05-23 11:04:59 -==> Parameters: 
2019-05-23 11:04:59 -<==      Total: 1
2019-05-23 11:04:59 -耗时 : 9
2019-05-23 11:04:59 -返回值 : com.bootdo.charts.vo.CountOweVo@4ba22960
2019-05-23 11:05:17 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-23 11:05:17 -HTTP METHOD : GET
2019-05-23 11:05:17 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-23 11:05:17 -参数 : []
2019-05-23 11:05:17 -耗时 : 2
2019-05-23 11:05:17 -返回值 : system/dept/deptTree
2019-05-23 11:05:17 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-23 11:05:17 -HTTP METHOD : GET
2019-05-23 11:05:17 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-23 11:05:17 -参数 : []
2019-05-23 11:05:17 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-23 11:05:17 -==> Parameters: 
2019-05-23 11:05:17 -<==      Total: 3
2019-05-23 11:05:17 -耗时 : 7
2019-05-23 11:05:17 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-23 11:05:19 -请求地址 : http://localhost:8081/charts/countOwe/getCountOwe
2019-05-23 11:05:19 -HTTP METHOD : POST
2019-05-23 11:05:19 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.getCountD
2019-05-23 11:05:19 -参数 : [com.bootdo.elec.vo.ElecVo@3b9a2fad, com.bootdo.water.vo.WaterVo@314b694b, com.bootdo.heat.vo.HeatVo@d701557]
2019-05-23 11:05:19 -==>  Preparing: SELECT COUNT(ID) FROM ELEC WHERE `elec_sum` < 0 
2019-05-23 11:05:19 -==> Parameters: 
2019-05-23 11:05:19 -<==      Total: 1
2019-05-23 11:05:19 -==>  Preparing: SELECT SUM(ELEC_SUM) FROM ELEC WHERE `elec_sum` < 0 
2019-05-23 11:05:19 -==> Parameters: 
2019-05-23 11:05:19 -<==      Total: 1
2019-05-23 11:05:19 -==>  Preparing: SELECT COUNT(ID) FROM WATER WHERE `water_sum` < 0 
2019-05-23 11:05:19 -==> Parameters: 
2019-05-23 11:05:19 -<==      Total: 1
2019-05-23 11:05:19 -==>  Preparing: SELECT SUM(WATER_SUM) FROM WATER WHERE `water_sum` < 0 
2019-05-23 11:05:19 -==> Parameters: 
2019-05-23 11:05:19 -<==      Total: 1
2019-05-23 11:05:19 -==>  Preparing: SELECT COUNT(ID) FROM HEAT WHERE `heat_sum` < 0 
2019-05-23 11:05:19 -==> Parameters: 
2019-05-23 11:05:19 -<==      Total: 1
2019-05-23 11:05:19 -==>  Preparing: SELECT SUM(HEAT_SUM) FROM HEAT WHERE `heat_sum` < 0 
2019-05-23 11:05:19 -==> Parameters: 
2019-05-23 11:05:19 -<==      Total: 1
2019-05-23 11:05:19 -耗时 : 12
2019-05-23 11:05:19 -返回值 : com.bootdo.charts.vo.CountOweVo@54499084
2019-05-23 11:05:20 -请求地址 : http://localhost:8081/charts/countOwe/getCountOwe
2019-05-23 11:05:20 -HTTP METHOD : POST
2019-05-23 11:05:20 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.getCountD
2019-05-23 11:05:20 -参数 : [com.bootdo.elec.vo.ElecVo@57fb6ce4, com.bootdo.water.vo.WaterVo@5e8d75ed, com.bootdo.heat.vo.HeatVo@6bc6be74]
2019-05-23 11:05:20 -==>  Preparing: SELECT COUNT(ID) FROM ELEC WHERE `elec_sum` < 0 
2019-05-23 11:05:20 -==> Parameters: 
2019-05-23 11:05:20 -<==      Total: 1
2019-05-23 11:05:20 -==>  Preparing: SELECT SUM(ELEC_SUM) FROM ELEC WHERE `elec_sum` < 0 
2019-05-23 11:05:20 -==> Parameters: 
2019-05-23 11:05:20 -<==      Total: 1
2019-05-23 11:05:20 -==>  Preparing: SELECT COUNT(ID) FROM WATER WHERE `water_sum` < 0 
2019-05-23 11:05:20 -==> Parameters: 
2019-05-23 11:05:20 -<==      Total: 1
2019-05-23 11:05:20 -==>  Preparing: SELECT SUM(WATER_SUM) FROM WATER WHERE `water_sum` < 0 
2019-05-23 11:05:20 -==> Parameters: 
2019-05-23 11:05:20 -<==      Total: 1
2019-05-23 11:05:20 -==>  Preparing: SELECT COUNT(ID) FROM HEAT WHERE `heat_sum` < 0 
2019-05-23 11:05:20 -==> Parameters: 
2019-05-23 11:05:20 -<==      Total: 1
2019-05-23 11:05:20 -==>  Preparing: SELECT SUM(HEAT_SUM) FROM HEAT WHERE `heat_sum` < 0 
2019-05-23 11:05:20 -==> Parameters: 
2019-05-23 11:05:20 -<==      Total: 1
2019-05-23 11:05:20 -耗时 : 12
2019-05-23 11:05:20 -返回值 : com.bootdo.charts.vo.CountOweVo@52ed88ae
2019-05-23 11:05:21 -请求地址 : http://localhost:8081/charts/countOwe/getCountOwe
2019-05-23 11:05:21 -HTTP METHOD : POST
2019-05-23 11:05:21 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.getCountD
2019-05-23 11:05:21 -参数 : [com.bootdo.elec.vo.ElecVo@2b9e8be3, com.bootdo.water.vo.WaterVo@1db85b0c, com.bootdo.heat.vo.HeatVo@59481a1d]
2019-05-23 11:05:21 -==>  Preparing: SELECT COUNT(ID) FROM ELEC WHERE `elec_sum` < 0 
2019-05-23 11:05:21 -==> Parameters: 
2019-05-23 11:05:21 -<==      Total: 1
2019-05-23 11:05:21 -==>  Preparing: SELECT SUM(ELEC_SUM) FROM ELEC WHERE `elec_sum` < 0 
2019-05-23 11:05:21 -==> Parameters: 
2019-05-23 11:05:21 -<==      Total: 1
2019-05-23 11:05:21 -==>  Preparing: SELECT COUNT(ID) FROM WATER WHERE `water_sum` < 0 
2019-05-23 11:05:21 -==> Parameters: 
2019-05-23 11:05:21 -<==      Total: 1
2019-05-23 11:05:21 -==>  Preparing: SELECT SUM(WATER_SUM) FROM WATER WHERE `water_sum` < 0 
2019-05-23 11:05:21 -==> Parameters: 
2019-05-23 11:05:21 -<==      Total: 1
2019-05-23 11:05:21 -==>  Preparing: SELECT COUNT(ID) FROM HEAT WHERE `heat_sum` < 0 
2019-05-23 11:05:21 -==> Parameters: 
2019-05-23 11:05:21 -<==      Total: 1
2019-05-23 11:05:21 -==>  Preparing: SELECT SUM(HEAT_SUM) FROM HEAT WHERE `heat_sum` < 0 
2019-05-23 11:05:21 -==> Parameters: 
2019-05-23 11:05:21 -<==      Total: 1
2019-05-23 11:05:21 -耗时 : 13
2019-05-23 11:05:21 -返回值 : com.bootdo.charts.vo.CountOweVo@67262fd0
2019-05-23 11:05:22 -请求地址 : http://localhost:8081/charts/countOwe/getCountOwe
2019-05-23 11:05:22 -HTTP METHOD : POST
2019-05-23 11:05:22 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.getCountD
2019-05-23 11:05:22 -参数 : [com.bootdo.elec.vo.ElecVo@77e2644d, com.bootdo.water.vo.WaterVo@1f4cafc0, com.bootdo.heat.vo.HeatVo@6dcb184]
2019-05-23 11:05:22 -==>  Preparing: SELECT COUNT(ID) FROM ELEC WHERE `elec_sum` < 0 
2019-05-23 11:05:22 -==> Parameters: 
2019-05-23 11:05:22 -<==      Total: 1
2019-05-23 11:05:22 -==>  Preparing: SELECT SUM(ELEC_SUM) FROM ELEC WHERE `elec_sum` < 0 
2019-05-23 11:05:22 -==> Parameters: 
2019-05-23 11:05:22 -<==      Total: 1
2019-05-23 11:05:22 -==>  Preparing: SELECT COUNT(ID) FROM WATER WHERE `water_sum` < 0 
2019-05-23 11:05:22 -==> Parameters: 
2019-05-23 11:05:22 -<==      Total: 1
2019-05-23 11:05:22 -==>  Preparing: SELECT SUM(WATER_SUM) FROM WATER WHERE `water_sum` < 0 
2019-05-23 11:05:22 -==> Parameters: 
2019-05-23 11:05:22 -<==      Total: 1
2019-05-23 11:05:22 -==>  Preparing: SELECT COUNT(ID) FROM HEAT WHERE `heat_sum` < 0 
2019-05-23 11:05:22 -==> Parameters: 
2019-05-23 11:05:22 -<==      Total: 1
2019-05-23 11:05:22 -==>  Preparing: SELECT SUM(HEAT_SUM) FROM HEAT WHERE `heat_sum` < 0 
2019-05-23 11:05:22 -==> Parameters: 
2019-05-23 11:05:22 -<==      Total: 1
2019-05-23 11:05:22 -耗时 : 11
2019-05-23 11:05:22 -返回值 : com.bootdo.charts.vo.CountOweVo@17523ed2
2019-05-23 11:05:29 -请求地址 : http://localhost:8081/charts/countOwe/getCountOwe
2019-05-23 11:05:29 -HTTP METHOD : POST
2019-05-23 11:05:29 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.getCountD
2019-05-23 11:05:29 -参数 : [com.bootdo.elec.vo.ElecVo@460108a7, com.bootdo.water.vo.WaterVo@7dc1348f, com.bootdo.heat.vo.HeatVo@4bb4cbf2]
2019-05-23 11:05:29 -==>  Preparing: SELECT COUNT(ID) FROM ELEC WHERE `elec_sum` < 0 
2019-05-23 11:05:29 -==> Parameters: 
2019-05-23 11:05:29 -<==      Total: 1
2019-05-23 11:05:29 -==>  Preparing: SELECT SUM(ELEC_SUM) FROM ELEC WHERE `elec_sum` < 0 
2019-05-23 11:05:29 -==> Parameters: 
2019-05-23 11:05:29 -<==      Total: 1
2019-05-23 11:05:29 -==>  Preparing: SELECT COUNT(ID) FROM WATER WHERE `water_sum` < 0 
2019-05-23 11:05:29 -==> Parameters: 
2019-05-23 11:05:29 -<==      Total: 1
2019-05-23 11:05:29 -==>  Preparing: SELECT SUM(WATER_SUM) FROM WATER WHERE `water_sum` < 0 
2019-05-23 11:05:29 -==> Parameters: 
2019-05-23 11:05:29 -<==      Total: 1
2019-05-23 11:05:29 -==>  Preparing: SELECT COUNT(ID) FROM HEAT WHERE `heat_sum` < 0 
2019-05-23 11:05:29 -==> Parameters: 
2019-05-23 11:05:29 -<==      Total: 1
2019-05-23 11:05:29 -==>  Preparing: SELECT SUM(HEAT_SUM) FROM HEAT WHERE `heat_sum` < 0 
2019-05-23 11:05:29 -==> Parameters: 
2019-05-23 11:05:29 -<==      Total: 1
2019-05-23 11:05:29 -耗时 : 11
2019-05-23 11:05:29 -返回值 : com.bootdo.charts.vo.CountOweVo@5a6b27e1
2019-05-23 11:05:30 -请求地址 : http://localhost:8081/charts/countOwe/getCountOwe
2019-05-23 11:05:30 -HTTP METHOD : POST
2019-05-23 11:05:30 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.getCountD
2019-05-23 11:05:30 -参数 : [com.bootdo.elec.vo.ElecVo@54600654, com.bootdo.water.vo.WaterVo@43f47122, com.bootdo.heat.vo.HeatVo@266e5ff3]
2019-05-23 11:05:30 -==>  Preparing: SELECT COUNT(ID) FROM ELEC WHERE `elec_sum` < 0 
2019-05-23 11:05:30 -==> Parameters: 
2019-05-23 11:05:30 -<==      Total: 1
2019-05-23 11:05:30 -==>  Preparing: SELECT SUM(ELEC_SUM) FROM ELEC WHERE `elec_sum` < 0 
2019-05-23 11:05:30 -==> Parameters: 
2019-05-23 11:05:30 -<==      Total: 1
2019-05-23 11:05:30 -==>  Preparing: SELECT COUNT(ID) FROM WATER WHERE `water_sum` < 0 
2019-05-23 11:05:30 -==> Parameters: 
2019-05-23 11:05:30 -<==      Total: 1
2019-05-23 11:05:30 -==>  Preparing: SELECT SUM(WATER_SUM) FROM WATER WHERE `water_sum` < 0 
2019-05-23 11:05:30 -==> Parameters: 
2019-05-23 11:05:30 -<==      Total: 1
2019-05-23 11:05:30 -==>  Preparing: SELECT COUNT(ID) FROM HEAT WHERE `heat_sum` < 0 
2019-05-23 11:05:30 -==> Parameters: 
2019-05-23 11:05:30 -<==      Total: 1
2019-05-23 11:05:30 -==>  Preparing: SELECT SUM(HEAT_SUM) FROM HEAT WHERE `heat_sum` < 0 
2019-05-23 11:05:30 -==> Parameters: 
2019-05-23 11:05:30 -<==      Total: 1
2019-05-23 11:05:30 -耗时 : 11
2019-05-23 11:05:30 -返回值 : com.bootdo.charts.vo.CountOweVo@153f6899
2019-05-23 11:05:31 -请求地址 : http://localhost:8081/charts/countOwe/getCountOwe
2019-05-23 11:05:31 -HTTP METHOD : POST
2019-05-23 11:05:31 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.getCountD
2019-05-23 11:05:31 -参数 : [com.bootdo.elec.vo.ElecVo@517e11fd, com.bootdo.water.vo.WaterVo@333f4911, com.bootdo.heat.vo.HeatVo@c62574]
2019-05-23 11:05:31 -==>  Preparing: SELECT COUNT(ID) FROM ELEC WHERE `elec_sum` < 0 
2019-05-23 11:05:31 -==> Parameters: 
2019-05-23 11:05:31 -<==      Total: 1
2019-05-23 11:05:31 -==>  Preparing: SELECT SUM(ELEC_SUM) FROM ELEC WHERE `elec_sum` < 0 
2019-05-23 11:05:31 -==> Parameters: 
2019-05-23 11:05:31 -<==      Total: 1
2019-05-23 11:05:31 -==>  Preparing: SELECT COUNT(ID) FROM WATER WHERE `water_sum` < 0 
2019-05-23 11:05:31 -==> Parameters: 
2019-05-23 11:05:31 -<==      Total: 1
2019-05-23 11:05:31 -==>  Preparing: SELECT SUM(WATER_SUM) FROM WATER WHERE `water_sum` < 0 
2019-05-23 11:05:31 -==> Parameters: 
2019-05-23 11:05:31 -<==      Total: 1
2019-05-23 11:05:31 -==>  Preparing: SELECT COUNT(ID) FROM HEAT WHERE `heat_sum` < 0 
2019-05-23 11:05:31 -==> Parameters: 
2019-05-23 11:05:31 -<==      Total: 1
2019-05-23 11:05:31 -==>  Preparing: SELECT SUM(HEAT_SUM) FROM HEAT WHERE `heat_sum` < 0 
2019-05-23 11:05:31 -==> Parameters: 
2019-05-23 11:05:31 -<==      Total: 1
2019-05-23 11:05:31 -耗时 : 12
2019-05-23 11:05:31 -返回值 : com.bootdo.charts.vo.CountOweVo@21e9b97e
2019-05-23 11:05:33 -请求地址 : http://localhost:8081/charts/countOwe/exportOwe
2019-05-23 11:05:33 -HTTP METHOD : GET
2019-05-23 11:05:33 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.exportOwe
2019-05-23 11:05:33 -参数 : [com.bootdo.elec.vo.ElecVo@3df7a0d, com.bootdo.heat.vo.HeatVo@5baa422e, com.bootdo.water.vo.WaterVo@189db418, org.apache.shiro.web.servlet.ShiroHttpServletResponse@48ca3f]
2019-05-23 11:05:34 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `elec_sum` < 0 and `create_time` = ? and user_org = ? 
2019-05-23 11:05:34 -==> Parameters: 2019-03(String), 3(String)
2019-05-23 11:05:34 -<==      Total: 0
2019-05-23 11:05:34 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`heat_type`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat WHERE `heat_sum` < 0 and `create_time` = ? and user_org = ? 
2019-05-23 11:05:34 -==> Parameters: 2019-03(String), 3(String)
2019-05-23 11:05:34 -<==      Total: 0
2019-05-23 11:05:34 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_cost`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water WHERE `water_sum` < 0 and `create_time` = ? and user_org = ? 
2019-05-23 11:05:34 -==> Parameters: 2019-03(String), 3(String)
2019-05-23 11:05:34 -<==      Total: 0
2019-05-23 11:05:34 -耗时 : 1184
2019-05-23 11:05:34 -返回值 : null
2019-05-23 11:06:26 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-23 11:06:26 -HTTP METHOD : GET
2019-05-23 11:06:26 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-23 11:06:26 -参数 : []
2019-05-23 11:06:26 -耗时 : 0
2019-05-23 11:06:26 -返回值 : system/dept/deptTree
2019-05-23 11:06:26 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-23 11:06:26 -HTTP METHOD : GET
2019-05-23 11:06:26 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-23 11:06:26 -参数 : []
2019-05-23 11:06:26 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-23 11:06:26 -==> Parameters: 
2019-05-23 11:06:26 -<==      Total: 3
2019-05-23 11:06:26 -耗时 : 4
2019-05-23 11:06:26 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-23 11:06:28 -请求地址 : http://localhost:8081/charts/countOwe/getCountOwe
2019-05-23 11:06:28 -HTTP METHOD : POST
2019-05-23 11:06:28 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.getCountD
2019-05-23 11:06:28 -参数 : [com.bootdo.elec.vo.ElecVo@6c51413d, com.bootdo.water.vo.WaterVo@4ab2b23, com.bootdo.heat.vo.HeatVo@477fc76d]
2019-05-23 11:06:28 -==>  Preparing: SELECT COUNT(ID) FROM ELEC WHERE `elec_sum` < 0 
2019-05-23 11:06:28 -==> Parameters: 
2019-05-23 11:06:28 -<==      Total: 1
2019-05-23 11:06:28 -==>  Preparing: SELECT SUM(ELEC_SUM) FROM ELEC WHERE `elec_sum` < 0 
2019-05-23 11:06:28 -==> Parameters: 
2019-05-23 11:06:28 -<==      Total: 1
2019-05-23 11:06:28 -==>  Preparing: SELECT COUNT(ID) FROM WATER WHERE `water_sum` < 0 
2019-05-23 11:06:28 -==> Parameters: 
2019-05-23 11:06:28 -<==      Total: 1
2019-05-23 11:06:28 -==>  Preparing: SELECT SUM(WATER_SUM) FROM WATER WHERE `water_sum` < 0 
2019-05-23 11:06:28 -==> Parameters: 
2019-05-23 11:06:28 -<==      Total: 1
2019-05-23 11:06:28 -==>  Preparing: SELECT COUNT(ID) FROM HEAT WHERE `heat_sum` < 0 
2019-05-23 11:06:28 -==> Parameters: 
2019-05-23 11:06:28 -<==      Total: 1
2019-05-23 11:06:28 -==>  Preparing: SELECT SUM(HEAT_SUM) FROM HEAT WHERE `heat_sum` < 0 
2019-05-23 11:06:28 -==> Parameters: 
2019-05-23 11:06:28 -<==      Total: 1
2019-05-23 11:06:28 -耗时 : 15
2019-05-23 11:06:28 -返回值 : com.bootdo.charts.vo.CountOweVo@6469e8e0
2019-05-23 11:06:29 -请求地址 : http://localhost:8081/charts/countOwe/getCountOwe
2019-05-23 11:06:29 -HTTP METHOD : POST
2019-05-23 11:06:29 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.getCountD
2019-05-23 11:06:29 -参数 : [com.bootdo.elec.vo.ElecVo@75db66fa, com.bootdo.water.vo.WaterVo@174a48d5, com.bootdo.heat.vo.HeatVo@af8415e]
2019-05-23 11:06:29 -==>  Preparing: SELECT COUNT(ID) FROM ELEC WHERE `elec_sum` < 0 
2019-05-23 11:06:29 -==> Parameters: 
2019-05-23 11:06:29 -<==      Total: 1
2019-05-23 11:06:29 -==>  Preparing: SELECT SUM(ELEC_SUM) FROM ELEC WHERE `elec_sum` < 0 
2019-05-23 11:06:29 -==> Parameters: 
2019-05-23 11:06:29 -<==      Total: 1
2019-05-23 11:06:29 -==>  Preparing: SELECT COUNT(ID) FROM WATER WHERE `water_sum` < 0 
2019-05-23 11:06:29 -==> Parameters: 
2019-05-23 11:06:29 -<==      Total: 1
2019-05-23 11:06:29 -==>  Preparing: SELECT SUM(WATER_SUM) FROM WATER WHERE `water_sum` < 0 
2019-05-23 11:06:29 -==> Parameters: 
2019-05-23 11:06:29 -<==      Total: 1
2019-05-23 11:06:29 -==>  Preparing: SELECT COUNT(ID) FROM HEAT WHERE `heat_sum` < 0 
2019-05-23 11:06:29 -==> Parameters: 
2019-05-23 11:06:29 -<==      Total: 1
2019-05-23 11:06:29 -==>  Preparing: SELECT SUM(HEAT_SUM) FROM HEAT WHERE `heat_sum` < 0 
2019-05-23 11:06:29 -==> Parameters: 
2019-05-23 11:06:29 -<==      Total: 1
2019-05-23 11:06:29 -耗时 : 10
2019-05-23 11:06:29 -返回值 : com.bootdo.charts.vo.CountOweVo@417f97a1
2019-05-23 11:06:30 -请求地址 : http://localhost:8081/charts/countOwe/getCountOwe
2019-05-23 11:06:30 -HTTP METHOD : POST
2019-05-23 11:06:30 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.getCountD
2019-05-23 11:06:30 -参数 : [com.bootdo.elec.vo.ElecVo@764b75ce, com.bootdo.water.vo.WaterVo@730196b7, com.bootdo.heat.vo.HeatVo@1fcfe3e0]
2019-05-23 11:06:30 -==>  Preparing: SELECT COUNT(ID) FROM ELEC WHERE `elec_sum` < 0 
2019-05-23 11:06:30 -==> Parameters: 
2019-05-23 11:06:30 -<==      Total: 1
2019-05-23 11:06:30 -==>  Preparing: SELECT SUM(ELEC_SUM) FROM ELEC WHERE `elec_sum` < 0 
2019-05-23 11:06:30 -==> Parameters: 
2019-05-23 11:06:30 -<==      Total: 1
2019-05-23 11:06:30 -==>  Preparing: SELECT COUNT(ID) FROM WATER WHERE `water_sum` < 0 
2019-05-23 11:06:30 -==> Parameters: 
2019-05-23 11:06:30 -<==      Total: 1
2019-05-23 11:06:30 -==>  Preparing: SELECT SUM(WATER_SUM) FROM WATER WHERE `water_sum` < 0 
2019-05-23 11:06:30 -==> Parameters: 
2019-05-23 11:06:30 -<==      Total: 1
2019-05-23 11:06:30 -==>  Preparing: SELECT COUNT(ID) FROM HEAT WHERE `heat_sum` < 0 
2019-05-23 11:06:30 -==> Parameters: 
2019-05-23 11:06:30 -<==      Total: 1
2019-05-23 11:06:30 -==>  Preparing: SELECT SUM(HEAT_SUM) FROM HEAT WHERE `heat_sum` < 0 
2019-05-23 11:06:30 -==> Parameters: 
2019-05-23 11:06:30 -<==      Total: 1
2019-05-23 11:06:30 -耗时 : 12
2019-05-23 11:06:30 -返回值 : com.bootdo.charts.vo.CountOweVo@2213b3fb
2019-05-23 11:06:31 -请求地址 : http://localhost:8081/charts/countOwe/getCountOwe
2019-05-23 11:06:31 -HTTP METHOD : POST
2019-05-23 11:06:31 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.getCountD
2019-05-23 11:06:31 -参数 : [com.bootdo.elec.vo.ElecVo@296fbe46, com.bootdo.water.vo.WaterVo@556f0b86, com.bootdo.heat.vo.HeatVo@175a425e]
2019-05-23 11:06:31 -==>  Preparing: SELECT COUNT(ID) FROM ELEC WHERE `elec_sum` < 0 
2019-05-23 11:06:31 -==> Parameters: 
2019-05-23 11:06:31 -<==      Total: 1
2019-05-23 11:06:31 -==>  Preparing: SELECT SUM(ELEC_SUM) FROM ELEC WHERE `elec_sum` < 0 
2019-05-23 11:06:31 -==> Parameters: 
2019-05-23 11:06:31 -<==      Total: 1
2019-05-23 11:06:31 -==>  Preparing: SELECT COUNT(ID) FROM WATER WHERE `water_sum` < 0 
2019-05-23 11:06:31 -==> Parameters: 
2019-05-23 11:06:31 -<==      Total: 1
2019-05-23 11:06:31 -==>  Preparing: SELECT SUM(WATER_SUM) FROM WATER WHERE `water_sum` < 0 
2019-05-23 11:06:31 -==> Parameters: 
2019-05-23 11:06:31 -<==      Total: 1
2019-05-23 11:06:31 -==>  Preparing: SELECT COUNT(ID) FROM HEAT WHERE `heat_sum` < 0 
2019-05-23 11:06:31 -==> Parameters: 
2019-05-23 11:06:31 -<==      Total: 1
2019-05-23 11:06:31 -==>  Preparing: SELECT SUM(HEAT_SUM) FROM HEAT WHERE `heat_sum` < 0 
2019-05-23 11:06:31 -==> Parameters: 
2019-05-23 11:06:31 -<==      Total: 1
2019-05-23 11:06:31 -耗时 : 11
2019-05-23 11:06:31 -返回值 : com.bootdo.charts.vo.CountOweVo@b94fa5d
2019-05-23 11:06:32 -请求地址 : http://localhost:8081/index
2019-05-23 11:06:32 -HTTP METHOD : GET
2019-05-23 11:06:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-23 11:06:32 -参数 : [{}]
2019-05-23 11:06:32 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-23 11:06:32 -==> Parameters: 1(Long)
2019-05-23 11:06:32 -<==      Total: 49
2019-05-23 11:06:32 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-23 11:06:32 -==> Parameters: 138(Long)
2019-05-23 11:06:32 -<==      Total: 1
2019-05-23 11:06:32 -耗时 : 18
2019-05-23 11:06:32 -返回值 : index_v1
2019-05-23 11:06:32 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-23 11:06:32 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 18(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-23 11:06:32.527(Timestamp)
2019-05-23 11:06:32 -请求地址 : http://localhost:8081/main
2019-05-23 11:06:32 -HTTP METHOD : GET
2019-05-23 11:06:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-23 11:06:32 -参数 : []
2019-05-23 11:06:32 -耗时 : 0
2019-05-23 11:06:32 -返回值 : main
2019-05-23 11:06:32 -<==    Updates: 1
2019-05-23 11:06:32 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-23 11:06:32 -HTTP METHOD : GET
2019-05-23 11:06:32 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-23 11:06:32 -参数 : []
2019-05-23 11:06:32 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-23 11:06:32 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-23 11:06:32 -<==      Total: 0
2019-05-23 11:06:32 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-23 11:06:32 -==> Parameters: 1(Long), 0(String)
2019-05-23 11:06:32 -<==      Total: 1
2019-05-23 11:06:32 -耗时 : 4
2019-05-23 11:06:32 -返回值 : com.bootdo.common.utils.PageUtils@3c740223
2019-05-23 11:06:32 -请求地址 : http://localhost:8081/main
2019-05-23 11:06:32 -HTTP METHOD : GET
2019-05-23 11:06:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-23 11:06:32 -参数 : []
2019-05-23 11:06:32 -耗时 : 1
2019-05-23 11:06:32 -返回值 : main
2019-05-23 11:06:35 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-05-23 11:06:35 -HTTP METHOD : GET
2019-05-23 11:06:35 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-23 11:06:35 -参数 : []
2019-05-23 11:06:35 -耗时 : 9
2019-05-23 11:06:35 -返回值 : charts/tableElecMM
2019-05-23 11:06:36 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-23 11:06:36 -HTTP METHOD : GET
2019-05-23 11:06:36 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-23 11:06:36 -参数 : [userType]
2019-05-23 11:06:36 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-23 11:06:36 -==> Parameters: userType(String)
2019-05-23 11:06:36 -<==      Total: 4
2019-05-23 11:06:36 -耗时 : 4
2019-05-23 11:06:36 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-23 11:06:36 -请求地址 : http://localhost:8081/charts/countYY
2019-05-23 11:06:36 -HTTP METHOD : GET
2019-05-23 11:06:36 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.countYY
2019-05-23 11:06:36 -参数 : []
2019-05-23 11:06:36 -耗时 : 0
2019-05-23 11:06:36 -返回值 : charts/countYY
2019-05-23 11:06:36 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-23 11:06:36 -HTTP METHOD : GET
2019-05-23 11:06:36 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-23 11:06:36 -参数 : [userType]
2019-05-23 11:06:36 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-23 11:06:36 -==> Parameters: userType(String)
2019-05-23 11:06:36 -<==      Total: 4
2019-05-23 11:06:36 -耗时 : 14
2019-05-23 11:06:36 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-23 11:06:38 -请求地址 : http://localhost:8081/charts/countOwe
2019-05-23 11:06:38 -HTTP METHOD : GET
2019-05-23 11:06:38 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.countOwe
2019-05-23 11:06:38 -参数 : []
2019-05-23 11:06:38 -耗时 : 1
2019-05-23 11:06:38 -返回值 : charts/countOwe
2019-05-23 11:06:38 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-23 11:06:38 -HTTP METHOD : GET
2019-05-23 11:06:38 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-23 11:06:38 -参数 : [userType]
2019-05-23 11:06:38 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-23 11:06:38 -==> Parameters: userType(String)
2019-05-23 11:06:38 -<==      Total: 4
2019-05-23 11:06:38 -耗时 : 5
2019-05-23 11:06:38 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-23 11:06:41 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-23 11:06:41 -HTTP METHOD : GET
2019-05-23 11:06:41 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-23 11:06:41 -参数 : []
2019-05-23 11:06:41 -耗时 : 1
2019-05-23 11:06:41 -返回值 : system/dept/deptTree
2019-05-23 11:06:41 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-23 11:06:41 -HTTP METHOD : GET
2019-05-23 11:06:41 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-23 11:06:41 -参数 : []
2019-05-23 11:06:41 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-23 11:06:41 -==> Parameters: 
2019-05-23 11:06:41 -<==      Total: 3
2019-05-23 11:06:41 -耗时 : 2
2019-05-23 11:06:41 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-23 11:06:43 -请求地址 : http://localhost:8081/charts/countOwe/getCountOwe
2019-05-23 11:06:43 -HTTP METHOD : POST
2019-05-23 11:06:43 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.getCountD
2019-05-23 11:06:43 -参数 : [com.bootdo.elec.vo.ElecVo@376059ef, com.bootdo.water.vo.WaterVo@528470f6, com.bootdo.heat.vo.HeatVo@3c0f362c]
2019-05-23 11:06:43 -==>  Preparing: SELECT COUNT(ID) FROM ELEC WHERE `elec_sum` < 0 
2019-05-23 11:06:43 -==> Parameters: 
2019-05-23 11:06:43 -<==      Total: 1
2019-05-23 11:06:43 -==>  Preparing: SELECT SUM(ELEC_SUM) FROM ELEC WHERE `elec_sum` < 0 
2019-05-23 11:06:43 -==> Parameters: 
2019-05-23 11:06:43 -<==      Total: 1
2019-05-23 11:06:43 -==>  Preparing: SELECT COUNT(ID) FROM WATER WHERE `water_sum` < 0 
2019-05-23 11:06:43 -==> Parameters: 
2019-05-23 11:06:43 -<==      Total: 1
2019-05-23 11:06:43 -==>  Preparing: SELECT SUM(WATER_SUM) FROM WATER WHERE `water_sum` < 0 
2019-05-23 11:06:43 -==> Parameters: 
2019-05-23 11:06:43 -<==      Total: 1
2019-05-23 11:06:43 -==>  Preparing: SELECT COUNT(ID) FROM HEAT WHERE `heat_sum` < 0 
2019-05-23 11:06:43 -==> Parameters: 
2019-05-23 11:06:43 -<==      Total: 1
2019-05-23 11:06:43 -==>  Preparing: SELECT SUM(HEAT_SUM) FROM HEAT WHERE `heat_sum` < 0 
2019-05-23 11:06:43 -==> Parameters: 
2019-05-23 11:06:43 -<==      Total: 1
2019-05-23 11:06:43 -耗时 : 10
2019-05-23 11:06:43 -返回值 : com.bootdo.charts.vo.CountOweVo@4071ee77
2019-05-23 11:06:45 -请求地址 : http://localhost:8081/charts/countOwe/exportOwe
2019-05-23 11:06:45 -HTTP METHOD : GET
2019-05-23 11:06:45 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.exportOwe
2019-05-23 11:06:45 -参数 : [com.bootdo.elec.vo.ElecVo@7d07dcde, com.bootdo.heat.vo.HeatVo@595e232c, com.bootdo.water.vo.WaterVo@36a1ea95, org.apache.shiro.web.servlet.ShiroHttpServletResponse@2a588378]
2019-05-23 11:06:45 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `elec_sum` < 0 and `create_time` = ? and user_org = ? 
2019-05-23 11:06:45 -==> Parameters: 2019-05(String), 2(String)
2019-05-23 11:06:45 -<==      Total: 0
2019-05-23 11:06:45 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`heat_type`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat WHERE `heat_sum` < 0 and `create_time` = ? and user_org = ? 
2019-05-23 11:06:45 -==> Parameters: 2019-05(String), 2(String)
2019-05-23 11:06:45 -<==      Total: 0
2019-05-23 11:06:45 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_cost`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water WHERE `water_sum` < 0 and `create_time` = ? and user_org = ? 
2019-05-23 11:06:45 -==> Parameters: 2019-05(String), 2(String)
2019-05-23 11:06:45 -<==      Total: 0
2019-05-23 11:06:45 -耗时 : 19
2019-05-23 11:06:45 -返回值 : null
2019-05-23 11:16:46 -Starting BootdoApplication on PC-201905091110 with PID 30872 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-23 11:16:46 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-23 11:16:46 -The following profiles are active: dev
2019-05-23 11:16:46 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Thu May 23 11:16:46 CST 2019]; root of context hierarchy
2019-05-23 11:16:50 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-23 11:16:52 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d4b53e4c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 11:16:52 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$c70e6cf3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 11:16:53 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 11:16:54 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 11:16:54 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 11:16:54 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-23 11:16:54 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-23 11:16:54 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 11:16:54 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 11:16:54 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 11:16:54 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 11:16:55 -Tomcat initialized with port(s): 8081 (http)
2019-05-23 11:16:56 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-23 11:16:56 -Starting service [Tomcat]
2019-05-23 11:16:56 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-23 11:16:56 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-23 11:16:56 -Initializing Spring embedded WebApplicationContext
2019-05-23 11:16:56 -Root WebApplicationContext: initialization completed in 9601 ms
2019-05-23 11:16:57 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-23 11:16:57 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-23 11:16:57 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-23 11:16:57 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-23 11:16:57 -Filter xssFilter was not registered (disabled)
2019-05-23 11:16:57 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-23 11:16:57 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-23 11:16:57 -Servlet statViewServlet mapped to [/druid/*]
2019-05-23 11:16:57 -Servlet dispatcherServlet mapped to [/]
2019-05-23 11:17:08 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Thu May 23 11:16:46 CST 2019]; root of context hierarchy
2019-05-23 11:17:09 -Using default implementation for ThreadExecutor
2019-05-23 11:17:09 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-23 11:17:09 -Quartz Scheduler v.2.2.1 created.
2019-05-23 11:17:09 -RAMJobStore initialized.
2019-05-23 11:17:09 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-23 11:17:09 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-23 11:17:09 -Quartz scheduler version: 2.2.1
2019-05-23 11:17:09 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@60928a61
2019-05-23 11:17:09 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-23 11:17:10 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-23 11:17:13 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-23 11:17:13 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-23 11:17:13 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 11:17:13 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-23 11:17:13 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-23 11:17:13 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 11:17:13 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-23 11:17:13 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-23 11:17:13 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-23 11:17:13 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-23 11:17:13 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-23 11:17:13 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 11:17:13 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-23 11:17:13 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 11:17:13 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-23 11:17:13 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-23 11:17:13 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-23 11:17:13 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 11:17:13 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-23 11:17:13 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-23 11:17:13 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 11:17:13 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-23 11:17:13 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-23 11:17:13 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 11:17:13 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 11:17:13 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-23 11:17:13 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-23 11:17:13 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 11:17:13 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-23 11:17:13 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-23 11:17:13 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-23 11:17:13 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-23 11:17:13 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 11:17:13 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 11:17:13 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-23 11:17:13 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-23 11:17:13 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-23 11:17:13 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-23 11:17:13 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-23 11:17:13 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-23 11:17:13 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 11:17:13 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-23 11:17:13 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-23 11:17:13 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 11:17:13 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-23 11:17:13 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-23 11:17:13 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-23 11:17:13 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-23 11:17:13 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-23 11:17:13 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-23 11:17:13 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-23 11:17:13 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 11:17:13 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-23 11:17:13 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-23 11:17:13 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 11:17:13 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-23 11:17:13 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-23 11:17:13 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 11:17:13 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-23 11:17:13 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-23 11:17:13 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-23 11:17:13 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-23 11:17:13 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-23 11:17:13 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-23 11:17:13 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-23 11:17:13 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-23 11:17:13 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-23 11:17:13 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 11:17:13 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-23 11:17:13 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-23 11:17:13 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 11:17:13 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-23 11:17:13 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-23 11:17:13 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-23 11:17:13 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-23 11:17:13 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 11:17:13 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-23 11:17:13 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-23 11:17:13 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-23 11:17:13 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-23 11:17:13 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-23 11:17:13 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-23 11:17:13 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-23 11:17:13 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-23 11:17:13 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-23 11:17:13 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-23 11:17:13 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-23 11:17:13 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-23 11:17:13 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-23 11:17:13 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 11:17:13 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-23 11:17:13 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-23 11:17:13 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-23 11:17:13 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-23 11:17:13 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-23 11:17:13 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-23 11:17:13 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-23 11:17:13 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 11:17:13 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-23 11:17:13 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 11:17:13 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-23 11:17:13 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-23 11:17:13 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-23 11:17:13 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-23 11:17:13 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-23 11:17:13 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-23 11:17:13 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-23 11:17:13 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-23 11:17:13 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 11:17:13 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-23 11:17:13 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-23 11:17:13 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-23 11:17:13 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-23 11:17:13 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-23 11:17:13 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-23 11:17:13 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-23 11:17:13 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-23 11:17:13 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-23 11:17:13 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-23 11:17:13 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-23 11:17:13 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 11:17:13 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-23 11:17:13 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 11:17:13 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-23 11:17:13 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-23 11:17:13 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-23 11:17:13 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-23 11:17:13 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-23 11:17:13 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-23 11:17:13 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-23 11:17:13 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-23 11:17:13 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-23 11:17:13 -Mapped "{[/moneyList/moneyList/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 11:17:13 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-23 11:17:13 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-23 11:17:13 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-23 11:17:13 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-23 11:17:13 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 11:17:13 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-23 11:17:13 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-23 11:17:13 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 11:17:13 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-23 11:17:13 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-23 11:17:13 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-23 11:17:13 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-23 11:17:13 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-23 11:17:13 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 11:17:13 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-23 11:17:13 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-23 11:17:13 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-23 11:17:13 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 11:17:13 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-23 11:17:13 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-23 11:17:13 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-23 11:17:13 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-23 11:17:13 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 11:17:13 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-23 11:17:13 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-23 11:17:13 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-23 11:17:13 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 11:17:13 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-23 11:17:13 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-23 11:17:13 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-23 11:17:13 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-23 11:17:13 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-23 11:17:13 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 11:17:13 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-23 11:17:13 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-23 11:17:13 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 11:17:13 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-23 11:17:13 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-23 11:17:13 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 11:17:13 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-23 11:17:13 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-23 11:17:13 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-05-23 11:17:13 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-23 11:17:13 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 11:17:13 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-23 11:17:13 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-23 11:17:13 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-23 11:17:13 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 11:17:13 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-23 11:17:13 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 11:17:13 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-23 11:17:13 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-23 11:17:13 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-23 11:17:13 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-23 11:17:13 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-23 11:17:13 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-23 11:17:13 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-23 11:17:13 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-23 11:17:13 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-23 11:17:13 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 11:17:13 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-23 11:17:13 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-23 11:17:13 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-23 11:17:13 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-23 11:17:13 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-23 11:17:14 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-23 11:17:14 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-23 11:17:14 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-23 11:17:14 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-23 11:17:14 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-23 11:17:14 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 11:17:14 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-23 11:17:14 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-23 11:17:14 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-23 11:17:14 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-23 11:17:14 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-23 11:17:14 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-23 11:17:14 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-23 11:17:14 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-23 11:17:14 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-23 11:17:14 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-23 11:17:14 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-23 11:17:14 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-23 11:17:14 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 11:17:14 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-23 11:17:14 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-23 11:17:14 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-23 11:17:14 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-23 11:17:14 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 11:17:14 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-23 11:17:14 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-23 11:17:14 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-23 11:17:14 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 11:17:14 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-23 11:17:14 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-23 11:17:14 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-23 11:17:14 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-23 11:17:14 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-23 11:17:14 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-23 11:17:14 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-23 11:17:14 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-23 11:17:14 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-23 11:17:14 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-23 11:17:14 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-23 11:17:14 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-23 11:17:14 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-23 11:17:14 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-23 11:17:14 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-23 11:17:14 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-23 11:17:14 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-23 11:17:14 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 11:17:14 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-23 11:17:14 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-23 11:17:14 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-23 11:17:14 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 11:17:14 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-23 11:17:14 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-23 11:17:14 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-23 11:17:14 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-23 11:17:14 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-23 11:17:14 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-23 11:17:14 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-23 11:17:14 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 11:17:14 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-23 11:17:14 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 11:17:14 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-23 11:17:14 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-23 11:17:14 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-23 11:17:14 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-23 11:17:14 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-23 11:17:14 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-23 11:17:14 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-23 11:17:14 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-23 11:17:14 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-23 11:17:14 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-23 11:17:14 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-23 11:17:14 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-23 11:17:15 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-23 11:17:16 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Thu May 23 11:16:46 CST 2019]; root of context hierarchy
2019-05-23 11:17:16 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-23 11:17:16 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-23 11:17:16 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-23 11:17:16 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-23 11:17:16 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-23 11:17:19 -Registering beans for JMX exposure on startup
2019-05-23 11:17:19 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-23 11:17:19 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-23 11:17:19 -Starting beans in phase 2147483647
2019-05-23 11:17:19 -Context refreshed
2019-05-23 11:17:19 -Found 1 custom documentation plugin(s)
2019-05-23 11:17:19 -Scanning for api listing references
2019-05-23 11:17:20 -Generating unique operation named: getCountDUsingPOST_1
2019-05-23 11:17:20 -Generating unique operation named: removeUsingPOST_1
2019-05-23 11:17:20 -Generating unique operation named: addUsingGET_1
2019-05-23 11:17:20 -Generating unique operation named: editUsingGET_1
2019-05-23 11:17:20 -Generating unique operation named: listUsingGET_1
2019-05-23 11:17:20 -Generating unique operation named: removeUsingPOST_2
2019-05-23 11:17:20 -Generating unique operation named: removeUsingPOST_3
2019-05-23 11:17:20 -Generating unique operation named: saveUsingPOST_1
2019-05-23 11:17:20 -Generating unique operation named: updateUsingGET_1
2019-05-23 11:17:20 -Generating unique operation named: updateUsingHEAD_1
2019-05-23 11:17:20 -Generating unique operation named: updateUsingPOST_1
2019-05-23 11:17:20 -Generating unique operation named: updateUsingPUT_1
2019-05-23 11:17:20 -Generating unique operation named: updateUsingPATCH_1
2019-05-23 11:17:20 -Generating unique operation named: updateUsingDELETE_1
2019-05-23 11:17:20 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-23 11:17:20 -Generating unique operation named: updateUsingTRACE_1
2019-05-23 11:17:20 -Generating unique operation named: addUsingGET_2
2019-05-23 11:17:20 -Generating unique operation named: editUsingGET_2
2019-05-23 11:17:20 -Generating unique operation named: listUsingGET_2
2019-05-23 11:17:20 -Generating unique operation named: removeUsingPOST_4
2019-05-23 11:17:20 -Generating unique operation named: removeUsingPOST_5
2019-05-23 11:17:20 -Generating unique operation named: saveUsingPOST_2
2019-05-23 11:17:20 -Generating unique operation named: updateUsingPOST_2
2019-05-23 11:17:20 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-23 11:17:20 -Generating unique operation named: addUsingGET_3
2019-05-23 11:17:20 -Generating unique operation named: editUsingGET_3
2019-05-23 11:17:20 -Generating unique operation named: listUsingGET_3
2019-05-23 11:17:20 -Generating unique operation named: removeUsingPOST_6
2019-05-23 11:17:20 -Generating unique operation named: removeUsingPOST_7
2019-05-23 11:17:20 -Generating unique operation named: saveUsingPOST_3
2019-05-23 11:17:20 -Generating unique operation named: updateUsingGET_2
2019-05-23 11:17:21 -Generating unique operation named: updateUsingHEAD_2
2019-05-23 11:17:21 -Generating unique operation named: updateUsingPOST_3
2019-05-23 11:17:21 -Generating unique operation named: updateUsingPUT_2
2019-05-23 11:17:21 -Generating unique operation named: updateUsingPATCH_2
2019-05-23 11:17:21 -Generating unique operation named: updateUsingDELETE_2
2019-05-23 11:17:21 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-23 11:17:21 -Generating unique operation named: updateUsingTRACE_2
2019-05-23 11:17:21 -Generating unique operation named: addUsingGET_4
2019-05-23 11:17:21 -Generating unique operation named: editUsingGET_4
2019-05-23 11:17:21 -Generating unique operation named: listUsingGET_4
2019-05-23 11:17:21 -Generating unique operation named: removeUsingPOST_8
2019-05-23 11:17:21 -Generating unique operation named: removeUsingPOST_9
2019-05-23 11:17:21 -Generating unique operation named: saveUsingPOST_4
2019-05-23 11:17:21 -Generating unique operation named: updateUsingGET_3
2019-05-23 11:17:21 -Generating unique operation named: updateUsingHEAD_3
2019-05-23 11:17:21 -Generating unique operation named: updateUsingPOST_4
2019-05-23 11:17:21 -Generating unique operation named: updateUsingPUT_3
2019-05-23 11:17:21 -Generating unique operation named: updateUsingPATCH_3
2019-05-23 11:17:21 -Generating unique operation named: updateUsingDELETE_3
2019-05-23 11:17:21 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-23 11:17:21 -Generating unique operation named: updateUsingTRACE_3
2019-05-23 11:17:21 -Generating unique operation named: ElecUsingGET_1
2019-05-23 11:17:21 -Generating unique operation named: addUsingGET_5
2019-05-23 11:17:21 -Generating unique operation named: editUsingGET_5
2019-05-23 11:17:21 -Generating unique operation named: listUsingGET_5
2019-05-23 11:17:21 -Generating unique operation named: removeUsingPOST_10
2019-05-23 11:17:21 -Generating unique operation named: removeUsingPOST_11
2019-05-23 11:17:21 -Generating unique operation named: saveUsingPOST_5
2019-05-23 11:17:21 -Generating unique operation named: updateUsingGET_4
2019-05-23 11:17:21 -Generating unique operation named: updateUsingHEAD_4
2019-05-23 11:17:21 -Generating unique operation named: updateUsingPOST_5
2019-05-23 11:17:21 -Generating unique operation named: updateUsingPUT_4
2019-05-23 11:17:21 -Generating unique operation named: updateUsingPATCH_4
2019-05-23 11:17:21 -Generating unique operation named: updateUsingDELETE_4
2019-05-23 11:17:21 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-23 11:17:21 -Generating unique operation named: updateUsingTRACE_4
2019-05-23 11:17:21 -Generating unique operation named: editUsingGET_6
2019-05-23 11:17:21 -Generating unique operation named: listUsingGET_6
2019-05-23 11:17:21 -Generating unique operation named: updateUsingPOST_6
2019-05-23 11:17:21 -Generating unique operation named: addUsingGET_6
2019-05-23 11:17:21 -Generating unique operation named: editUsingGET_7
2019-05-23 11:17:21 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-23 11:17:21 -Generating unique operation named: listUsingGET_7
2019-05-23 11:17:21 -Generating unique operation named: removeUsingPOST_12
2019-05-23 11:17:21 -Generating unique operation named: removeUsingPOST_13
2019-05-23 11:17:21 -Generating unique operation named: saveUsingPOST_6
2019-05-23 11:17:21 -Generating unique operation named: updateUsingGET_5
2019-05-23 11:17:21 -Generating unique operation named: updateUsingHEAD_5
2019-05-23 11:17:21 -Generating unique operation named: updateUsingPOST_7
2019-05-23 11:17:21 -Generating unique operation named: updateUsingPUT_5
2019-05-23 11:17:21 -Generating unique operation named: updateUsingPATCH_5
2019-05-23 11:17:21 -Generating unique operation named: updateUsingDELETE_5
2019-05-23 11:17:21 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-23 11:17:21 -Generating unique operation named: updateUsingTRACE_5
2019-05-23 11:17:21 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-23 11:17:21 -Generating unique operation named: addUsingGET_7
2019-05-23 11:17:21 -Generating unique operation named: editUsingGET_8
2019-05-23 11:17:21 -Generating unique operation named: listUsingGET_8
2019-05-23 11:17:21 -Generating unique operation named: removeUsingPOST_14
2019-05-23 11:17:21 -Generating unique operation named: removeUsingPOST_15
2019-05-23 11:17:21 -Generating unique operation named: saveUsingPOST_7
2019-05-23 11:17:21 -Generating unique operation named: updateUsingGET_6
2019-05-23 11:17:21 -Generating unique operation named: updateUsingHEAD_6
2019-05-23 11:17:21 -Generating unique operation named: updateUsingPOST_8
2019-05-23 11:17:21 -Generating unique operation named: updateUsingPUT_6
2019-05-23 11:17:21 -Generating unique operation named: updateUsingPATCH_6
2019-05-23 11:17:21 -Generating unique operation named: updateUsingDELETE_6
2019-05-23 11:17:21 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-23 11:17:21 -Generating unique operation named: updateUsingTRACE_6
2019-05-23 11:17:21 -Generating unique operation named: addUsingGET_8
2019-05-23 11:17:21 -Generating unique operation named: editUsingGET_9
2019-05-23 11:17:21 -Generating unique operation named: listUsingGET_9
2019-05-23 11:17:21 -Generating unique operation named: removeUsingPOST_16
2019-05-23 11:17:21 -Generating unique operation named: removeUsingPOST_17
2019-05-23 11:17:21 -Generating unique operation named: saveUsingPOST_8
2019-05-23 11:17:21 -Generating unique operation named: updateUsingGET_7
2019-05-23 11:17:21 -Generating unique operation named: updateUsingHEAD_7
2019-05-23 11:17:21 -Generating unique operation named: updateUsingPOST_9
2019-05-23 11:17:21 -Generating unique operation named: updateUsingPUT_7
2019-05-23 11:17:21 -Generating unique operation named: updateUsingPATCH_7
2019-05-23 11:17:21 -Generating unique operation named: updateUsingDELETE_7
2019-05-23 11:17:21 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-23 11:17:21 -Generating unique operation named: updateUsingTRACE_7
2019-05-23 11:17:21 -Generating unique operation named: addUsingGET_9
2019-05-23 11:17:21 -Generating unique operation named: editUsingGET_10
2019-05-23 11:17:21 -Generating unique operation named: infoUsingGET_1
2019-05-23 11:17:21 -Generating unique operation named: infoUsingHEAD_1
2019-05-23 11:17:21 -Generating unique operation named: infoUsingPOST_1
2019-05-23 11:17:21 -Generating unique operation named: infoUsingPUT_1
2019-05-23 11:17:21 -Generating unique operation named: infoUsingPATCH_1
2019-05-23 11:17:22 -Generating unique operation named: infoUsingDELETE_1
2019-05-23 11:17:22 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-23 11:17:22 -Generating unique operation named: infoUsingTRACE_1
2019-05-23 11:17:22 -Generating unique operation named: listUsingGET_10
2019-05-23 11:17:22 -Generating unique operation named: removeUsingPOST_18
2019-05-23 11:17:22 -Generating unique operation named: removeUsingPOST_19
2019-05-23 11:17:22 -Generating unique operation named: saveUsingPOST_9
2019-05-23 11:17:22 -Generating unique operation named: updateUsingPOST_10
2019-05-23 11:17:22 -Generating unique operation named: listUsingGET_11
2019-05-23 11:17:22 -Generating unique operation named: removeUsingPOST_20
2019-05-23 11:17:22 -Generating unique operation named: welcomeUsingGET_1
2019-05-23 11:17:22 -Generating unique operation named: addUsingGET_10
2019-05-23 11:17:22 -Generating unique operation named: editUsingGET_11
2019-05-23 11:17:22 -Generating unique operation named: listUsingGET_12
2019-05-23 11:17:22 -Generating unique operation named: removeUsingPOST_21
2019-05-23 11:17:22 -Generating unique operation named: saveUsingPOST_10
2019-05-23 11:17:22 -Generating unique operation named: treeUsingGET_1
2019-05-23 11:17:22 -Generating unique operation named: treeUsingGET_2
2019-05-23 11:17:22 -Generating unique operation named: updateUsingPOST_11
2019-05-23 11:17:22 -Generating unique operation named: editUsingGET_12
2019-05-23 11:17:22 -Generating unique operation named: addUsingGET_11
2019-05-23 11:17:22 -Generating unique operation named: editUsingGET_13
2019-05-23 11:17:22 -Generating unique operation named: listUsingGET_13
2019-05-23 11:17:22 -Generating unique operation named: removeUsingPOST_22
2019-05-23 11:17:22 -Generating unique operation named: removeUsingPOST_23
2019-05-23 11:17:22 -Generating unique operation named: saveUsingPOST_11
2019-05-23 11:17:22 -Generating unique operation named: updateUsingGET_8
2019-05-23 11:17:22 -Generating unique operation named: updateUsingHEAD_8
2019-05-23 11:17:22 -Generating unique operation named: updateUsingPOST_12
2019-05-23 11:17:22 -Generating unique operation named: updateUsingPUT_8
2019-05-23 11:17:22 -Generating unique operation named: updateUsingPATCH_8
2019-05-23 11:17:22 -Generating unique operation named: updateUsingDELETE_8
2019-05-23 11:17:22 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-23 11:17:22 -Generating unique operation named: updateUsingTRACE_8
2019-05-23 11:17:22 -Generating unique operation named: addUsingGET_12
2019-05-23 11:17:22 -Generating unique operation named: editUsingGET_14
2019-05-23 11:17:22 -Generating unique operation named: listUsingGET_14
2019-05-23 11:17:22 -Generating unique operation named: removeUsingPOST_24
2019-05-23 11:17:22 -Generating unique operation named: removeUsingPOST_25
2019-05-23 11:17:22 -Generating unique operation named: saveUsingPOST_12
2019-05-23 11:17:22 -Generating unique operation named: updateUsingGET_9
2019-05-23 11:17:22 -Generating unique operation named: updateUsingHEAD_9
2019-05-23 11:17:22 -Generating unique operation named: updateUsingPOST_13
2019-05-23 11:17:22 -Generating unique operation named: updateUsingPUT_9
2019-05-23 11:17:22 -Generating unique operation named: updateUsingPATCH_9
2019-05-23 11:17:22 -Generating unique operation named: updateUsingDELETE_9
2019-05-23 11:17:22 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-23 11:17:22 -Generating unique operation named: updateUsingTRACE_9
2019-05-23 11:17:22 -Generating unique operation named: addUsingGET_13
2019-05-23 11:17:22 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-23 11:17:22 -Generating unique operation named: editUsingGET_15
2019-05-23 11:17:22 -Generating unique operation named: listUsingGET_15
2019-05-23 11:17:22 -Generating unique operation named: saveUsingPOST_13
2019-05-23 11:17:22 -Generating unique operation named: saveUsingPOST_14
2019-05-23 11:17:22 -Generating unique operation named: updateUsingPOST_14
2019-05-23 11:17:22 -Generating unique operation named: listUsingGET_16
2019-05-23 11:17:22 -Generating unique operation named: listUsingHEAD_1
2019-05-23 11:17:22 -Generating unique operation named: listUsingPOST_1
2019-05-23 11:17:22 -Generating unique operation named: listUsingPUT_1
2019-05-23 11:17:22 -Generating unique operation named: listUsingPATCH_1
2019-05-23 11:17:22 -Generating unique operation named: listUsingDELETE_1
2019-05-23 11:17:22 -Generating unique operation named: listUsingOPTIONS_1
2019-05-23 11:17:22 -Generating unique operation named: listUsingTRACE_1
2019-05-23 11:17:22 -Generating unique operation named: countDDUsingGET_1
2019-05-23 11:17:22 -Generating unique operation named: exportDDUsingGET_1
2019-05-23 11:17:23 -Generating unique operation named: addUsingGET_14
2019-05-23 11:17:23 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-23 11:17:23 -Generating unique operation named: editUsingGET_16
2019-05-23 11:17:23 -Generating unique operation named: listUsingGET_17
2019-05-23 11:17:23 -Generating unique operation named: removeUsingPOST_26
2019-05-23 11:17:23 -Generating unique operation named: saveUsingPOST_15
2019-05-23 11:17:23 -Generating unique operation named: treeUsingGET_3
2019-05-23 11:17:23 -Generating unique operation named: treeViewUsingGET_1
2019-05-23 11:17:23 -Generating unique operation named: updateUsingPOST_15
2019-05-23 11:17:23 -Generating unique operation named: addUsingGET_15
2019-05-23 11:17:23 -Generating unique operation named: editUsingGET_17
2019-05-23 11:17:23 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-23 11:17:23 -Generating unique operation named: listUsingGET_18
2019-05-23 11:17:23 -Generating unique operation named: removeUsingPOST_27
2019-05-23 11:17:23 -Generating unique operation named: removeUsingPOST_28
2019-05-23 11:17:23 -Generating unique operation named: saveUsingPOST_16
2019-05-23 11:17:23 -Generating unique operation named: updateUsingGET_10
2019-05-23 11:17:23 -Generating unique operation named: updateUsingHEAD_10
2019-05-23 11:17:23 -Generating unique operation named: updateUsingPOST_16
2019-05-23 11:17:23 -Generating unique operation named: updateUsingPUT_10
2019-05-23 11:17:23 -Generating unique operation named: updateUsingPATCH_10
2019-05-23 11:17:23 -Generating unique operation named: updateUsingDELETE_10
2019-05-23 11:17:23 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-23 11:17:23 -Generating unique operation named: updateUsingTRACE_10
2019-05-23 11:17:23 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-23 11:17:23 -Generating unique operation named: addUsingGET_16
2019-05-23 11:17:23 -Generating unique operation named: editUsingGET_18
2019-05-23 11:17:23 -Generating unique operation named: listUsingGET_19
2019-05-23 11:17:23 -Generating unique operation named: removeUsingPOST_29
2019-05-23 11:17:23 -Generating unique operation named: removeUsingPOST_30
2019-05-23 11:17:23 -Generating unique operation named: saveUsingPOST_17
2019-05-23 11:17:23 -Generating unique operation named: updateUsingGET_11
2019-05-23 11:17:23 -Generating unique operation named: updateUsingHEAD_11
2019-05-23 11:17:23 -Generating unique operation named: updateUsingPOST_17
2019-05-23 11:17:23 -Generating unique operation named: updateUsingPUT_11
2019-05-23 11:17:23 -Generating unique operation named: updateUsingPATCH_11
2019-05-23 11:17:23 -Generating unique operation named: updateUsingDELETE_11
2019-05-23 11:17:23 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-23 11:17:23 -Generating unique operation named: updateUsingTRACE_11
2019-05-23 11:17:23 -Generating unique operation named: addUsingGET_17
2019-05-23 11:17:23 -Generating unique operation named: editUsingGET_19
2019-05-23 11:17:23 -Generating unique operation named: listUsingGET_20
2019-05-23 11:17:23 -Generating unique operation named: removeUsingPOST_31
2019-05-23 11:17:23 -Generating unique operation named: removeUsingPOST_32
2019-05-23 11:17:23 -Generating unique operation named: saveUsingPOST_18
2019-05-23 11:17:23 -Generating unique operation named: updateUsingGET_12
2019-05-23 11:17:23 -Generating unique operation named: updateUsingHEAD_12
2019-05-23 11:17:23 -Generating unique operation named: updateUsingPOST_18
2019-05-23 11:17:23 -Generating unique operation named: updateUsingPUT_12
2019-05-23 11:17:23 -Generating unique operation named: updateUsingPATCH_12
2019-05-23 11:17:23 -Generating unique operation named: updateUsingDELETE_12
2019-05-23 11:17:23 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-23 11:17:23 -Generating unique operation named: updateUsingTRACE_12
2019-05-23 11:17:23 -Starting Quartz Scheduler now
2019-05-23 11:17:23 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-23 11:17:23 -Starting...
2019-05-23 11:17:23 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-23 11:17:23 -Started.
2019-05-23 11:17:23 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-23 11:17:23 -Using a shared selector for servlet write/read
2019-05-23 11:17:23 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-23 11:17:24 -Started BootdoApplication in 38.474 seconds (JVM running for 39.288)
2019-05-23 11:17:24 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-23 11:17:24 -==> Parameters: 
2019-05-23 11:17:24 -<==      Total: 1
2019-05-23 11:18:14 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-05-23 11:18:39 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-23 11:18:39 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-23 11:18:39 -FrameworkServlet 'dispatcherServlet': initialization completed in 78 ms
2019-05-23 11:18:40 -Enabling session validation scheduler...
2019-05-23 11:18:41 -请求地址 : http://localhost:8081/login;JSESSIONID=3daa6956-aa50-421d-ba3d-2b10c44e4446
2019-05-23 11:18:41 -HTTP METHOD : GET
2019-05-23 11:18:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-23 11:18:41 -参数 : [{}]
2019-05-23 11:18:41 -耗时 : 8
2019-05-23 11:18:41 -返回值 : login
2019-05-23 11:18:44 -请求地址 : http://localhost:8081/getVerify
2019-05-23 11:18:44 -HTTP METHOD : GET
2019-05-23 11:18:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-23 11:18:44 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@632841a, org.apache.shiro.web.servlet.ShiroHttpServletResponse@8f57aac]
2019-05-23 11:18:51 -8207
2019-05-23 11:18:51 -耗时 : 7235
2019-05-23 11:18:51 -返回值 : null
2019-05-23 11:18:59 -请求地址 : http://localhost:8081/login
2019-05-23 11:18:59 -HTTP METHOD : POST
2019-05-23 11:18:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-23 11:18:59 -参数 : [admin, 111111, 8207, org.apache.shiro.web.servlet.ShiroHttpServletRequest@2322d225]
2019-05-23 11:18:59 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-23 11:18:59 -==> Parameters: admin(String)
2019-05-23 11:19:00 -<==      Total: 1
2019-05-23 11:19:00 -耗时 : 164
2019-05-23 11:19:00 -返回值 : {msg=操作成功, code=0}
2019-05-23 11:19:00 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-23 11:19:00 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-23 11:19:00 -==> Parameters: 1(Long), admin(String), 登录(String), 164(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-23 11:19:00.206(Timestamp)
2019-05-23 11:19:00 -请求地址 : http://localhost:8081/index
2019-05-23 11:19:00 -HTTP METHOD : GET
2019-05-23 11:19:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-23 11:19:00 -参数 : [{}]
2019-05-23 11:19:00 -<==    Updates: 1
2019-05-23 11:19:00 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-23 11:19:00 -==> Parameters: 1(Long)
2019-05-23 11:19:00 -<==      Total: 49
2019-05-23 11:19:00 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-23 11:19:00 -==> Parameters: 138(Long)
2019-05-23 11:19:00 -<==      Total: 1
2019-05-23 11:19:00 -耗时 : 381
2019-05-23 11:19:00 -返回值 : index_v1
2019-05-23 11:19:00 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-23 11:19:00 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 381(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-23 11:19:00.844(Timestamp)
2019-05-23 11:19:00 -<==    Updates: 1
2019-05-23 11:19:01 -请求地址 : http://localhost:8081/main
2019-05-23 11:19:01 -HTTP METHOD : GET
2019-05-23 11:19:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-23 11:19:01 -参数 : []
2019-05-23 11:19:01 -耗时 : 1
2019-05-23 11:19:01 -返回值 : main
2019-05-23 11:19:01 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-23 11:19:01 -HTTP METHOD : GET
2019-05-23 11:19:01 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-23 11:19:01 -参数 : []
2019-05-23 11:19:01 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-23 11:19:01 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-23 11:19:01 -请求地址 : http://localhost:8081/main
2019-05-23 11:19:01 -HTTP METHOD : GET
2019-05-23 11:19:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-23 11:19:01 -参数 : []
2019-05-23 11:19:01 -耗时 : 0
2019-05-23 11:19:01 -返回值 : main
2019-05-23 11:19:01 -<==      Total: 0
2019-05-23 11:19:01 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-23 11:19:01 -==> Parameters: 1(Long), 0(String)
2019-05-23 11:19:01 -<==      Total: 1
2019-05-23 11:19:01 -耗时 : 232
2019-05-23 11:19:01 -返回值 : com.bootdo.common.utils.PageUtils@4e3c8cf2
2019-05-23 11:19:18 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-23 11:19:18 -==> Parameters: 1(Long)
2019-05-23 11:19:18 -<==      Total: 93
2019-05-23 11:19:18 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-23 11:19:18 -HTTP METHOD : GET
2019-05-23 11:19:18 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-23 11:19:18 -参数 : []
2019-05-23 11:19:18 -耗时 : 11
2019-05-23 11:19:18 -返回值 : charts/tableElecYY
2019-05-23 11:19:19 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-23 11:19:19 -HTTP METHOD : GET
2019-05-23 11:19:19 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-23 11:19:19 -参数 : [userType]
2019-05-23 11:19:19 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-23 11:19:19 -==> Parameters: userType(String)
2019-05-23 11:19:19 -<==      Total: 4
2019-05-23 11:19:19 -耗时 : 58
2019-05-23 11:19:19 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-23 11:19:22 -请求地址 : http://localhost:8081/charts/countOwe
2019-05-23 11:19:22 -HTTP METHOD : GET
2019-05-23 11:19:22 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.countOwe
2019-05-23 11:19:22 -参数 : []
2019-05-23 11:19:22 -耗时 : 0
2019-05-23 11:19:22 -返回值 : charts/countOwe
2019-05-23 11:19:23 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-23 11:19:23 -HTTP METHOD : GET
2019-05-23 11:19:23 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-23 11:19:23 -参数 : [userType]
2019-05-23 11:19:23 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-23 11:19:23 -==> Parameters: userType(String)
2019-05-23 11:19:23 -<==      Total: 4
2019-05-23 11:19:23 -耗时 : 7
2019-05-23 11:19:23 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-23 11:19:26 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-23 11:19:26 -HTTP METHOD : GET
2019-05-23 11:19:26 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-23 11:19:26 -参数 : []
2019-05-23 11:19:26 -耗时 : 0
2019-05-23 11:19:26 -返回值 : system/dept/deptTree
2019-05-23 11:19:26 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-23 11:19:26 -HTTP METHOD : GET
2019-05-23 11:19:26 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-23 11:19:26 -参数 : []
2019-05-23 11:19:26 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-23 11:19:26 -==> Parameters: 
2019-05-23 11:19:26 -<==      Total: 3
2019-05-23 11:19:26 -耗时 : 21
2019-05-23 11:19:26 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-23 11:19:32 -请求地址 : http://localhost:8081/charts/countOwe/getCountOwe
2019-05-23 11:19:32 -HTTP METHOD : POST
2019-05-23 11:19:32 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.getCountD
2019-05-23 11:19:32 -参数 : [com.bootdo.elec.vo.ElecVo@15468bc5, com.bootdo.water.vo.WaterVo@4f25c917, com.bootdo.heat.vo.HeatVo@8037cbf]
2019-05-23 11:19:32 -==>  Preparing: SELECT COUNT(ID) FROM ELEC WHERE `elec_sum` < 0 
2019-05-23 11:19:32 -==> Parameters: 
2019-05-23 11:19:32 -<==      Total: 1
2019-05-23 11:19:32 -==>  Preparing: SELECT SUM(ELEC_SUM) FROM ELEC WHERE `elec_sum` < 0 
2019-05-23 11:19:32 -==> Parameters: 
2019-05-23 11:19:32 -<==      Total: 1
2019-05-23 11:19:32 -==>  Preparing: SELECT COUNT(ID) FROM WATER WHERE `water_sum` < 0 
2019-05-23 11:19:32 -==> Parameters: 
2019-05-23 11:19:32 -<==      Total: 1
2019-05-23 11:19:32 -==>  Preparing: SELECT SUM(WATER_SUM) FROM WATER WHERE `water_sum` < 0 
2019-05-23 11:19:32 -==> Parameters: 
2019-05-23 11:19:32 -<==      Total: 1
2019-05-23 11:19:32 -==>  Preparing: SELECT COUNT(ID) FROM HEAT WHERE `heat_sum` < 0 
2019-05-23 11:19:32 -==> Parameters: 
2019-05-23 11:19:32 -<==      Total: 1
2019-05-23 11:19:32 -==>  Preparing: SELECT SUM(HEAT_SUM) FROM HEAT WHERE `heat_sum` < 0 
2019-05-23 11:19:32 -==> Parameters: 
2019-05-23 11:19:32 -<==      Total: 1
2019-05-23 11:19:32 -耗时 : 279
2019-05-23 11:19:32 -返回值 : com.bootdo.charts.vo.CountOweVo@f67746a
2019-05-23 11:19:35 -请求地址 : http://localhost:8081/charts/countOwe/exportOwe
2019-05-23 11:19:35 -HTTP METHOD : GET
2019-05-23 11:19:35 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.exportOwe
2019-05-23 11:19:35 -参数 : [com.bootdo.elec.vo.ElecVo@2e9a6e98, com.bootdo.heat.vo.HeatVo@5ab5e164, com.bootdo.water.vo.WaterVo@56cb7f37, org.apache.shiro.web.servlet.ShiroHttpServletResponse@4d0017b8]
2019-05-23 11:19:36 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `elec_sum` < 0 and `create_time` = ? and user_org = ? 
2019-05-23 11:19:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-23 11:19:36 -<==      Total: 2
2019-05-23 11:19:36 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`heat_type`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat WHERE `heat_sum` < 0 and `create_time` = ? and user_org = ? 
2019-05-23 11:19:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-23 11:19:36 -<==      Total: 1
2019-05-23 11:19:36 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_cost`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water WHERE `water_sum` < 0 and `create_time` = ? and user_org = ? 
2019-05-23 11:19:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-23 11:19:36 -<==      Total: 2
2019-05-23 11:19:36 -耗时 : 1093
2019-05-23 11:19:36 -返回值 : null
2019-05-23 11:28:05 -请求地址 : http://localhost:8081/index
2019-05-23 11:28:05 -HTTP METHOD : GET
2019-05-23 11:28:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-23 11:28:05 -参数 : [{}]
2019-05-23 11:28:05 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-23 11:28:05 -==> Parameters: 1(Long)
2019-05-23 11:28:05 -<==      Total: 49
2019-05-23 11:28:05 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-23 11:28:05 -==> Parameters: 138(Long)
2019-05-23 11:28:05 -<==      Total: 1
2019-05-23 11:28:05 -耗时 : 25
2019-05-23 11:28:05 -返回值 : index_v1
2019-05-23 11:28:05 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-23 11:28:05 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 26(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-23 11:28:05.955(Timestamp)
2019-05-23 11:28:06 -<==    Updates: 1
2019-05-23 11:28:06 -请求地址 : http://localhost:8081/main
2019-05-23 11:28:06 -HTTP METHOD : GET
2019-05-23 11:28:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-23 11:28:06 -参数 : []
2019-05-23 11:28:06 -耗时 : 1
2019-05-23 11:28:06 -返回值 : main
2019-05-23 11:28:06 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-23 11:28:06 -HTTP METHOD : GET
2019-05-23 11:28:06 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-23 11:28:06 -参数 : []
2019-05-23 11:28:06 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-23 11:28:06 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-23 11:28:06 -<==      Total: 0
2019-05-23 11:28:06 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-23 11:28:06 -==> Parameters: 1(Long), 0(String)
2019-05-23 11:28:06 -<==      Total: 1
2019-05-23 11:28:06 -耗时 : 7
2019-05-23 11:28:06 -返回值 : com.bootdo.common.utils.PageUtils@299e442e
2019-05-23 11:28:06 -请求地址 : http://localhost:8081/main
2019-05-23 11:28:06 -HTTP METHOD : GET
2019-05-23 11:28:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-23 11:28:06 -参数 : []
2019-05-23 11:28:06 -耗时 : 0
2019-05-23 11:28:06 -返回值 : main
2019-05-23 11:28:09 -请求地址 : http://localhost:8081/charts/countOwe
2019-05-23 11:28:09 -HTTP METHOD : GET
2019-05-23 11:28:09 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.countOwe
2019-05-23 11:28:09 -参数 : []
2019-05-23 11:28:09 -耗时 : 0
2019-05-23 11:28:09 -返回值 : charts/countOwe
2019-05-23 11:28:09 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-23 11:28:09 -HTTP METHOD : GET
2019-05-23 11:28:09 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-23 11:28:09 -参数 : [userType]
2019-05-23 11:28:09 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-23 11:28:09 -==> Parameters: userType(String)
2019-05-23 11:28:09 -<==      Total: 4
2019-05-23 11:28:09 -耗时 : 16
2019-05-23 11:28:09 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-23 11:28:12 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-23 11:28:12 -HTTP METHOD : GET
2019-05-23 11:28:12 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-23 11:28:12 -参数 : []
2019-05-23 11:28:12 -耗时 : 0
2019-05-23 11:28:12 -返回值 : system/dept/deptTree
2019-05-23 11:28:13 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-23 11:28:13 -HTTP METHOD : GET
2019-05-23 11:28:13 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-23 11:28:13 -参数 : []
2019-05-23 11:28:13 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-23 11:28:13 -==> Parameters: 
2019-05-23 11:28:13 -<==      Total: 3
2019-05-23 11:28:13 -耗时 : 3
2019-05-23 11:28:13 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-23 11:28:18 -请求地址 : http://localhost:8081/charts/countOwe/getCountOwe
2019-05-23 11:28:18 -HTTP METHOD : POST
2019-05-23 11:28:18 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.getCountD
2019-05-23 11:28:18 -参数 : [com.bootdo.elec.vo.ElecVo@545ac345, com.bootdo.water.vo.WaterVo@590ae453, com.bootdo.heat.vo.HeatVo@25362ec8]
2019-05-23 11:28:18 -==>  Preparing: SELECT COUNT(ID) FROM ELEC WHERE `elec_sum` < 0 
2019-05-23 11:28:18 -==> Parameters: 
2019-05-23 11:28:18 -<==      Total: 1
2019-05-23 11:28:18 -==>  Preparing: SELECT SUM(ELEC_SUM) FROM ELEC WHERE `elec_sum` < 0 
2019-05-23 11:28:18 -==> Parameters: 
2019-05-23 11:28:18 -<==      Total: 1
2019-05-23 11:28:18 -==>  Preparing: SELECT COUNT(ID) FROM WATER WHERE `water_sum` < 0 
2019-05-23 11:28:18 -==> Parameters: 
2019-05-23 11:28:18 -<==      Total: 1
2019-05-23 11:28:18 -==>  Preparing: SELECT SUM(WATER_SUM) FROM WATER WHERE `water_sum` < 0 
2019-05-23 11:28:18 -==> Parameters: 
2019-05-23 11:28:18 -<==      Total: 1
2019-05-23 11:28:18 -==>  Preparing: SELECT COUNT(ID) FROM HEAT WHERE `heat_sum` < 0 
2019-05-23 11:28:18 -==> Parameters: 
2019-05-23 11:28:18 -<==      Total: 1
2019-05-23 11:28:18 -==>  Preparing: SELECT SUM(HEAT_SUM) FROM HEAT WHERE `heat_sum` < 0 
2019-05-23 11:28:18 -==> Parameters: 
2019-05-23 11:28:18 -<==      Total: 1
2019-05-23 11:28:18 -耗时 : 12
2019-05-23 11:28:18 -返回值 : com.bootdo.charts.vo.CountOweVo@70e168f1
2019-05-23 11:36:51 -Starting BootdoApplication on PC-201905091110 with PID 26320 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-23 11:36:51 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-23 11:36:51 -The following profiles are active: dev
2019-05-23 11:36:51 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@abf688e: startup date [Thu May 23 11:36:51 CST 2019]; root of context hierarchy
2019-05-23 11:36:55 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-23 11:36:58 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$6981fd49] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 11:36:59 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$5bdb2bf0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 11:37:00 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 11:37:00 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 11:37:00 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 11:37:00 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-23 11:37:00 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-23 11:37:00 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 11:37:01 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 11:37:01 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 11:37:01 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 11:37:02 -Tomcat initialized with port(s): 8081 (http)
2019-05-23 11:37:02 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-23 11:37:02 -Starting service [Tomcat]
2019-05-23 11:37:02 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-23 11:37:02 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:\Java\JDK\jdk1.8.0_102\jre\bin;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-23 11:37:03 -Initializing Spring embedded WebApplicationContext
2019-05-23 11:37:03 -Root WebApplicationContext: initialization completed in 11346 ms
2019-05-23 11:37:04 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-23 11:37:04 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-23 11:37:04 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-23 11:37:04 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-23 11:37:04 -Filter xssFilter was not registered (disabled)
2019-05-23 11:37:04 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-23 11:37:04 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-23 11:37:04 -Servlet statViewServlet mapped to [/druid/*]
2019-05-23 11:37:04 -Servlet dispatcherServlet mapped to [/]
2019-05-23 11:37:08 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@abf688e: startup date [Thu May 23 11:36:51 CST 2019]; root of context hierarchy
2019-05-23 11:37:09 -Using default implementation for ThreadExecutor
2019-05-23 11:37:09 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-23 11:37:09 -Quartz Scheduler v.2.2.1 created.
2019-05-23 11:37:09 -RAMJobStore initialized.
2019-05-23 11:37:09 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-23 11:37:09 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-23 11:37:09 -Quartz scheduler version: 2.2.1
2019-05-23 11:37:09 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@7096d451
2019-05-23 11:37:10 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-23 11:37:10 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-23 11:37:17 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-23 11:37:17 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-23 11:37:17 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 11:37:17 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 11:37:17 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-23 11:37:17 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-23 11:37:17 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-23 11:37:17 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-23 11:37:17 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-23 11:37:17 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-23 11:37:17 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-23 11:37:17 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 11:37:17 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 11:37:17 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-23 11:37:17 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-23 11:37:17 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-23 11:37:17 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-23 11:37:17 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 11:37:17 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 11:37:17 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-23 11:37:17 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-23 11:37:17 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 11:37:17 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-23 11:37:17 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-23 11:37:17 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-23 11:37:17 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-23 11:37:17 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 11:37:17 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-23 11:37:17 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-23 11:37:17 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 11:37:17 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-23 11:37:17 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-23 11:37:17 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 11:37:17 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-23 11:37:17 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-23 11:37:17 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 11:37:17 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-23 11:37:17 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-23 11:37:17 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-23 11:37:17 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-23 11:37:17 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 11:37:17 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-23 11:37:17 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-23 11:37:17 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-23 11:37:17 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 11:37:17 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-23 11:37:17 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-23 11:37:17 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-23 11:37:17 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-23 11:37:17 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-23 11:37:17 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-23 11:37:17 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 11:37:17 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-23 11:37:17 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-23 11:37:17 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-23 11:37:17 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-23 11:37:17 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 11:37:17 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 11:37:17 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-23 11:37:17 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-23 11:37:17 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-23 11:37:17 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-23 11:37:17 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-23 11:37:17 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-23 11:37:17 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-23 11:37:17 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-23 11:37:17 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-23 11:37:17 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 11:37:17 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-23 11:37:17 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-23 11:37:17 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 11:37:17 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-23 11:37:17 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-23 11:37:17 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-23 11:37:17 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-23 11:37:17 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 11:37:17 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-23 11:37:17 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-23 11:37:17 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-23 11:37:17 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-23 11:37:17 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-23 11:37:17 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-23 11:37:17 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-23 11:37:17 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-23 11:37:17 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-23 11:37:17 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-23 11:37:17 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-23 11:37:17 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 11:37:17 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-23 11:37:17 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-23 11:37:17 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-23 11:37:17 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-23 11:37:17 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-23 11:37:17 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-23 11:37:17 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-23 11:37:17 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-23 11:37:17 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-23 11:37:17 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 11:37:17 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-23 11:37:17 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-23 11:37:17 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 11:37:17 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-23 11:37:17 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-23 11:37:17 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-23 11:37:17 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-23 11:37:17 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-23 11:37:17 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-23 11:37:17 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-23 11:37:17 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 11:37:17 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-23 11:37:17 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-23 11:37:17 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-23 11:37:17 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-23 11:37:17 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-23 11:37:17 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-23 11:37:17 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-23 11:37:17 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-23 11:37:17 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-23 11:37:17 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-23 11:37:17 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-23 11:37:17 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 11:37:17 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-23 11:37:17 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-23 11:37:17 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 11:37:17 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-23 11:37:17 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-23 11:37:17 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-23 11:37:17 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-23 11:37:17 -Mapped "{[/moneyList/moneyList/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 11:37:17 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-23 11:37:17 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-23 11:37:17 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-23 11:37:17 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-23 11:37:17 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-23 11:37:17 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-23 11:37:17 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-23 11:37:17 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-23 11:37:17 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 11:37:17 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-23 11:37:17 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 11:37:17 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-23 11:37:17 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-23 11:37:17 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-23 11:37:17 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-23 11:37:17 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-23 11:37:17 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-23 11:37:17 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 11:37:17 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-23 11:37:17 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 11:37:17 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-23 11:37:17 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-23 11:37:17 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-23 11:37:17 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-23 11:37:17 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-23 11:37:17 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-23 11:37:17 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 11:37:17 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-23 11:37:17 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 11:37:17 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-23 11:37:17 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-23 11:37:17 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-23 11:37:17 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-23 11:37:17 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-23 11:37:17 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-23 11:37:17 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-23 11:37:17 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 11:37:17 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-23 11:37:17 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-23 11:37:17 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 11:37:17 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-23 11:37:17 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 11:37:17 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-23 11:37:17 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-23 11:37:17 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-23 11:37:17 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-05-23 11:37:17 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-23 11:37:17 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 11:37:17 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-23 11:37:17 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 11:37:17 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-23 11:37:17 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-23 11:37:17 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 11:37:17 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-23 11:37:17 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-23 11:37:17 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-23 11:37:17 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-23 11:37:17 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-23 11:37:17 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-23 11:37:17 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-23 11:37:17 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-23 11:37:17 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-23 11:37:17 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-23 11:37:17 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 11:37:17 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-23 11:37:17 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-23 11:37:17 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-23 11:37:17 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-23 11:37:17 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-23 11:37:17 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-23 11:37:17 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-23 11:37:17 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-23 11:37:17 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-23 11:37:17 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-23 11:37:17 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 11:37:17 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-23 11:37:17 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-23 11:37:17 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-23 11:37:17 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-23 11:37:17 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-23 11:37:17 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-23 11:37:17 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-23 11:37:17 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-23 11:37:17 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-23 11:37:18 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-23 11:37:18 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-23 11:37:18 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-23 11:37:18 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 11:37:18 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-23 11:37:18 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-23 11:37:18 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-23 11:37:18 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-23 11:37:18 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 11:37:18 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-23 11:37:18 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-23 11:37:18 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-23 11:37:18 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 11:37:18 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-23 11:37:18 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-23 11:37:18 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-23 11:37:18 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-23 11:37:18 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-23 11:37:18 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-23 11:37:18 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-23 11:37:18 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-23 11:37:18 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-23 11:37:18 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-23 11:37:18 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-23 11:37:18 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-23 11:37:18 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-23 11:37:18 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-23 11:37:18 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-23 11:37:18 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-23 11:37:18 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-23 11:37:18 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 11:37:18 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-23 11:37:18 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-23 11:37:18 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 11:37:18 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-23 11:37:18 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-23 11:37:18 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-23 11:37:18 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-23 11:37:18 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-23 11:37:18 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-23 11:37:18 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-23 11:37:18 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-23 11:37:18 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 11:37:18 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-23 11:37:18 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-23 11:37:18 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 11:37:18 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-23 11:37:18 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-23 11:37:18 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-23 11:37:18 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-23 11:37:18 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-23 11:37:18 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-23 11:37:18 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-23 11:37:18 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-23 11:37:18 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-23 11:37:18 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-23 11:37:18 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-23 11:37:19 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-23 11:37:19 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@abf688e: startup date [Thu May 23 11:36:51 CST 2019]; root of context hierarchy
2019-05-23 11:37:20 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-23 11:37:20 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-23 11:37:20 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-23 11:37:20 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-23 11:37:20 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-23 11:37:22 -Registering beans for JMX exposure on startup
2019-05-23 11:37:22 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-23 11:37:22 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-23 11:37:22 -Starting beans in phase 2147483647
2019-05-23 11:37:22 -Context refreshed
2019-05-23 11:37:22 -Found 1 custom documentation plugin(s)
2019-05-23 11:37:22 -Scanning for api listing references
2019-05-23 11:37:23 -Generating unique operation named: getCountDUsingPOST_1
2019-05-23 11:37:23 -Generating unique operation named: removeUsingPOST_1
2019-05-23 11:37:23 -Generating unique operation named: addUsingGET_1
2019-05-23 11:37:24 -Generating unique operation named: editUsingGET_1
2019-05-23 11:37:24 -Generating unique operation named: listUsingGET_1
2019-05-23 11:37:24 -Generating unique operation named: removeUsingPOST_2
2019-05-23 11:37:24 -Generating unique operation named: removeUsingPOST_3
2019-05-23 11:37:24 -Generating unique operation named: saveUsingPOST_1
2019-05-23 11:37:24 -Generating unique operation named: updateUsingGET_1
2019-05-23 11:37:24 -Generating unique operation named: updateUsingHEAD_1
2019-05-23 11:37:24 -Generating unique operation named: updateUsingPOST_1
2019-05-23 11:37:24 -Generating unique operation named: updateUsingPUT_1
2019-05-23 11:37:24 -Generating unique operation named: updateUsingPATCH_1
2019-05-23 11:37:24 -Generating unique operation named: updateUsingDELETE_1
2019-05-23 11:37:24 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-23 11:37:24 -Generating unique operation named: updateUsingTRACE_1
2019-05-23 11:37:24 -Generating unique operation named: addUsingGET_2
2019-05-23 11:37:24 -Generating unique operation named: editUsingGET_2
2019-05-23 11:37:24 -Generating unique operation named: listUsingGET_2
2019-05-23 11:37:24 -Generating unique operation named: removeUsingPOST_4
2019-05-23 11:37:24 -Generating unique operation named: removeUsingPOST_5
2019-05-23 11:37:24 -Generating unique operation named: saveUsingPOST_2
2019-05-23 11:37:24 -Generating unique operation named: updateUsingPOST_2
2019-05-23 11:37:24 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-23 11:37:24 -Generating unique operation named: addUsingGET_3
2019-05-23 11:37:24 -Generating unique operation named: editUsingGET_3
2019-05-23 11:37:24 -Generating unique operation named: listUsingGET_3
2019-05-23 11:37:24 -Generating unique operation named: removeUsingPOST_6
2019-05-23 11:37:24 -Generating unique operation named: removeUsingPOST_7
2019-05-23 11:37:24 -Generating unique operation named: saveUsingPOST_3
2019-05-23 11:37:24 -Generating unique operation named: updateUsingGET_2
2019-05-23 11:37:24 -Generating unique operation named: updateUsingHEAD_2
2019-05-23 11:37:24 -Generating unique operation named: updateUsingPOST_3
2019-05-23 11:37:24 -Generating unique operation named: updateUsingPUT_2
2019-05-23 11:37:24 -Generating unique operation named: updateUsingPATCH_2
2019-05-23 11:37:24 -Generating unique operation named: updateUsingDELETE_2
2019-05-23 11:37:24 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-23 11:37:24 -Generating unique operation named: updateUsingTRACE_2
2019-05-23 11:37:24 -Generating unique operation named: addUsingGET_4
2019-05-23 11:37:24 -Generating unique operation named: editUsingGET_4
2019-05-23 11:37:24 -Generating unique operation named: listUsingGET_4
2019-05-23 11:37:24 -Generating unique operation named: removeUsingPOST_8
2019-05-23 11:37:24 -Generating unique operation named: removeUsingPOST_9
2019-05-23 11:37:24 -Generating unique operation named: saveUsingPOST_4
2019-05-23 11:37:24 -Generating unique operation named: updateUsingGET_3
2019-05-23 11:37:24 -Generating unique operation named: updateUsingHEAD_3
2019-05-23 11:37:24 -Generating unique operation named: updateUsingPOST_4
2019-05-23 11:37:24 -Generating unique operation named: updateUsingPUT_3
2019-05-23 11:37:24 -Generating unique operation named: updateUsingPATCH_3
2019-05-23 11:37:24 -Generating unique operation named: updateUsingDELETE_3
2019-05-23 11:37:24 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-23 11:37:24 -Generating unique operation named: updateUsingTRACE_3
2019-05-23 11:37:24 -Generating unique operation named: ElecUsingGET_1
2019-05-23 11:37:24 -Generating unique operation named: addUsingGET_5
2019-05-23 11:37:24 -Generating unique operation named: editUsingGET_5
2019-05-23 11:37:24 -Generating unique operation named: listUsingGET_5
2019-05-23 11:37:24 -Generating unique operation named: removeUsingPOST_10
2019-05-23 11:37:24 -Generating unique operation named: removeUsingPOST_11
2019-05-23 11:37:24 -Generating unique operation named: saveUsingPOST_5
2019-05-23 11:37:24 -Generating unique operation named: updateUsingGET_4
2019-05-23 11:37:24 -Generating unique operation named: updateUsingHEAD_4
2019-05-23 11:37:24 -Generating unique operation named: updateUsingPOST_5
2019-05-23 11:37:24 -Generating unique operation named: updateUsingPUT_4
2019-05-23 11:37:24 -Generating unique operation named: updateUsingPATCH_4
2019-05-23 11:37:24 -Generating unique operation named: updateUsingDELETE_4
2019-05-23 11:37:24 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-23 11:37:24 -Generating unique operation named: updateUsingTRACE_4
2019-05-23 11:37:24 -Generating unique operation named: editUsingGET_6
2019-05-23 11:37:24 -Generating unique operation named: listUsingGET_6
2019-05-23 11:37:25 -Generating unique operation named: updateUsingPOST_6
2019-05-23 11:37:25 -Generating unique operation named: addUsingGET_6
2019-05-23 11:37:25 -Generating unique operation named: editUsingGET_7
2019-05-23 11:37:25 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-23 11:37:25 -Generating unique operation named: listUsingGET_7
2019-05-23 11:37:25 -Generating unique operation named: removeUsingPOST_12
2019-05-23 11:37:25 -Generating unique operation named: removeUsingPOST_13
2019-05-23 11:37:25 -Generating unique operation named: saveUsingPOST_6
2019-05-23 11:37:25 -Generating unique operation named: updateUsingGET_5
2019-05-23 11:37:25 -Generating unique operation named: updateUsingHEAD_5
2019-05-23 11:37:25 -Generating unique operation named: updateUsingPOST_7
2019-05-23 11:37:25 -Generating unique operation named: updateUsingPUT_5
2019-05-23 11:37:25 -Generating unique operation named: updateUsingPATCH_5
2019-05-23 11:37:25 -Generating unique operation named: updateUsingDELETE_5
2019-05-23 11:37:25 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-23 11:37:25 -Generating unique operation named: updateUsingTRACE_5
2019-05-23 11:37:25 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-23 11:37:25 -Generating unique operation named: addUsingGET_7
2019-05-23 11:37:25 -Generating unique operation named: editUsingGET_8
2019-05-23 11:37:25 -Generating unique operation named: listUsingGET_8
2019-05-23 11:37:25 -Generating unique operation named: removeUsingPOST_14
2019-05-23 11:37:25 -Generating unique operation named: removeUsingPOST_15
2019-05-23 11:37:25 -Generating unique operation named: saveUsingPOST_7
2019-05-23 11:37:25 -Generating unique operation named: updateUsingGET_6
2019-05-23 11:37:25 -Generating unique operation named: updateUsingHEAD_6
2019-05-23 11:37:25 -Generating unique operation named: updateUsingPOST_8
2019-05-23 11:37:25 -Generating unique operation named: updateUsingPUT_6
2019-05-23 11:37:25 -Generating unique operation named: updateUsingPATCH_6
2019-05-23 11:37:25 -Generating unique operation named: updateUsingDELETE_6
2019-05-23 11:37:25 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-23 11:37:25 -Generating unique operation named: updateUsingTRACE_6
2019-05-23 11:37:25 -Generating unique operation named: addUsingGET_8
2019-05-23 11:37:25 -Generating unique operation named: editUsingGET_9
2019-05-23 11:37:25 -Generating unique operation named: listUsingGET_9
2019-05-23 11:37:25 -Generating unique operation named: removeUsingPOST_16
2019-05-23 11:37:25 -Generating unique operation named: removeUsingPOST_17
2019-05-23 11:37:25 -Generating unique operation named: saveUsingPOST_8
2019-05-23 11:37:25 -Generating unique operation named: updateUsingGET_7
2019-05-23 11:37:25 -Generating unique operation named: updateUsingHEAD_7
2019-05-23 11:37:25 -Generating unique operation named: updateUsingPOST_9
2019-05-23 11:37:25 -Generating unique operation named: updateUsingPUT_7
2019-05-23 11:37:25 -Generating unique operation named: updateUsingPATCH_7
2019-05-23 11:37:25 -Generating unique operation named: updateUsingDELETE_7
2019-05-23 11:37:25 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-23 11:37:25 -Generating unique operation named: updateUsingTRACE_7
2019-05-23 11:37:25 -Generating unique operation named: addUsingGET_9
2019-05-23 11:37:25 -Generating unique operation named: editUsingGET_10
2019-05-23 11:37:25 -Generating unique operation named: infoUsingGET_1
2019-05-23 11:37:25 -Generating unique operation named: infoUsingHEAD_1
2019-05-23 11:37:25 -Generating unique operation named: infoUsingPOST_1
2019-05-23 11:37:25 -Generating unique operation named: infoUsingPUT_1
2019-05-23 11:37:25 -Generating unique operation named: infoUsingPATCH_1
2019-05-23 11:37:25 -Generating unique operation named: infoUsingDELETE_1
2019-05-23 11:37:25 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-23 11:37:25 -Generating unique operation named: infoUsingTRACE_1
2019-05-23 11:37:25 -Generating unique operation named: listUsingGET_10
2019-05-23 11:37:25 -Generating unique operation named: removeUsingPOST_18
2019-05-23 11:37:25 -Generating unique operation named: removeUsingPOST_19
2019-05-23 11:37:25 -Generating unique operation named: saveUsingPOST_9
2019-05-23 11:37:25 -Generating unique operation named: updateUsingPOST_10
2019-05-23 11:37:25 -Generating unique operation named: listUsingGET_11
2019-05-23 11:37:25 -Generating unique operation named: removeUsingPOST_20
2019-05-23 11:37:25 -Generating unique operation named: welcomeUsingGET_1
2019-05-23 11:37:25 -Generating unique operation named: addUsingGET_10
2019-05-23 11:37:25 -Generating unique operation named: editUsingGET_11
2019-05-23 11:37:25 -Generating unique operation named: listUsingGET_12
2019-05-23 11:37:25 -Generating unique operation named: removeUsingPOST_21
2019-05-23 11:37:25 -Generating unique operation named: saveUsingPOST_10
2019-05-23 11:37:25 -Generating unique operation named: treeUsingGET_1
2019-05-23 11:37:25 -Generating unique operation named: treeUsingGET_2
2019-05-23 11:37:25 -Generating unique operation named: updateUsingPOST_11
2019-05-23 11:37:25 -Generating unique operation named: editUsingGET_12
2019-05-23 11:37:25 -Generating unique operation named: addUsingGET_11
2019-05-23 11:37:25 -Generating unique operation named: editUsingGET_13
2019-05-23 11:37:25 -Generating unique operation named: listUsingGET_13
2019-05-23 11:37:25 -Generating unique operation named: removeUsingPOST_22
2019-05-23 11:37:25 -Generating unique operation named: removeUsingPOST_23
2019-05-23 11:37:25 -Generating unique operation named: saveUsingPOST_11
2019-05-23 11:37:25 -Generating unique operation named: updateUsingGET_8
2019-05-23 11:37:25 -Generating unique operation named: updateUsingHEAD_8
2019-05-23 11:37:25 -Generating unique operation named: updateUsingPOST_12
2019-05-23 11:37:25 -Generating unique operation named: updateUsingPUT_8
2019-05-23 11:37:25 -Generating unique operation named: updateUsingPATCH_8
2019-05-23 11:37:26 -Generating unique operation named: updateUsingDELETE_8
2019-05-23 11:37:26 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-23 11:37:26 -Generating unique operation named: updateUsingTRACE_8
2019-05-23 11:37:26 -Generating unique operation named: addUsingGET_12
2019-05-23 11:37:26 -Generating unique operation named: editUsingGET_14
2019-05-23 11:37:26 -Generating unique operation named: listUsingGET_14
2019-05-23 11:37:26 -Generating unique operation named: removeUsingPOST_24
2019-05-23 11:37:26 -Generating unique operation named: removeUsingPOST_25
2019-05-23 11:37:26 -Generating unique operation named: saveUsingPOST_12
2019-05-23 11:37:26 -Generating unique operation named: updateUsingGET_9
2019-05-23 11:37:26 -Generating unique operation named: updateUsingHEAD_9
2019-05-23 11:37:26 -Generating unique operation named: updateUsingPOST_13
2019-05-23 11:37:26 -Generating unique operation named: updateUsingPUT_9
2019-05-23 11:37:26 -Generating unique operation named: updateUsingPATCH_9
2019-05-23 11:37:26 -Generating unique operation named: updateUsingDELETE_9
2019-05-23 11:37:26 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-23 11:37:26 -Generating unique operation named: updateUsingTRACE_9
2019-05-23 11:37:26 -Generating unique operation named: addUsingGET_13
2019-05-23 11:37:26 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-23 11:37:26 -Generating unique operation named: editUsingGET_15
2019-05-23 11:37:26 -Generating unique operation named: listUsingGET_15
2019-05-23 11:37:26 -Generating unique operation named: saveUsingPOST_13
2019-05-23 11:37:26 -Generating unique operation named: saveUsingPOST_14
2019-05-23 11:37:26 -Generating unique operation named: updateUsingPOST_14
2019-05-23 11:37:26 -Generating unique operation named: listUsingGET_16
2019-05-23 11:37:26 -Generating unique operation named: listUsingHEAD_1
2019-05-23 11:37:26 -Generating unique operation named: listUsingPOST_1
2019-05-23 11:37:26 -Generating unique operation named: listUsingPUT_1
2019-05-23 11:37:26 -Generating unique operation named: listUsingPATCH_1
2019-05-23 11:37:26 -Generating unique operation named: listUsingDELETE_1
2019-05-23 11:37:26 -Generating unique operation named: listUsingOPTIONS_1
2019-05-23 11:37:26 -Generating unique operation named: listUsingTRACE_1
2019-05-23 11:37:26 -Generating unique operation named: countDDUsingGET_1
2019-05-23 11:37:26 -Generating unique operation named: exportDDUsingGET_1
2019-05-23 11:37:26 -Generating unique operation named: addUsingGET_14
2019-05-23 11:37:26 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-23 11:37:26 -Generating unique operation named: editUsingGET_16
2019-05-23 11:37:26 -Generating unique operation named: listUsingGET_17
2019-05-23 11:37:26 -Generating unique operation named: removeUsingPOST_26
2019-05-23 11:37:26 -Generating unique operation named: saveUsingPOST_15
2019-05-23 11:37:26 -Generating unique operation named: treeUsingGET_3
2019-05-23 11:37:26 -Generating unique operation named: treeViewUsingGET_1
2019-05-23 11:37:26 -Generating unique operation named: updateUsingPOST_15
2019-05-23 11:37:26 -Generating unique operation named: addUsingGET_15
2019-05-23 11:37:26 -Generating unique operation named: editUsingGET_17
2019-05-23 11:37:26 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-23 11:37:26 -Generating unique operation named: listUsingGET_18
2019-05-23 11:37:26 -Generating unique operation named: removeUsingPOST_27
2019-05-23 11:37:26 -Generating unique operation named: removeUsingPOST_28
2019-05-23 11:37:26 -Generating unique operation named: saveUsingPOST_16
2019-05-23 11:37:26 -Generating unique operation named: updateUsingGET_10
2019-05-23 11:37:26 -Generating unique operation named: updateUsingHEAD_10
2019-05-23 11:37:26 -Generating unique operation named: updateUsingPOST_16
2019-05-23 11:37:26 -Generating unique operation named: updateUsingPUT_10
2019-05-23 11:37:26 -Generating unique operation named: updateUsingPATCH_10
2019-05-23 11:37:26 -Generating unique operation named: updateUsingDELETE_10
2019-05-23 11:37:26 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-23 11:37:26 -Generating unique operation named: updateUsingTRACE_10
2019-05-23 11:37:26 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-23 11:37:26 -Generating unique operation named: addUsingGET_16
2019-05-23 11:37:26 -Generating unique operation named: editUsingGET_18
2019-05-23 11:37:26 -Generating unique operation named: listUsingGET_19
2019-05-23 11:37:26 -Generating unique operation named: removeUsingPOST_29
2019-05-23 11:37:26 -Generating unique operation named: removeUsingPOST_30
2019-05-23 11:37:26 -Generating unique operation named: saveUsingPOST_17
2019-05-23 11:37:26 -Generating unique operation named: updateUsingGET_11
2019-05-23 11:37:26 -Generating unique operation named: updateUsingHEAD_11
2019-05-23 11:37:26 -Generating unique operation named: updateUsingPOST_17
2019-05-23 11:37:26 -Generating unique operation named: updateUsingPUT_11
2019-05-23 11:37:26 -Generating unique operation named: updateUsingPATCH_11
2019-05-23 11:37:26 -Generating unique operation named: updateUsingDELETE_11
2019-05-23 11:37:26 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-23 11:37:26 -Generating unique operation named: updateUsingTRACE_11
2019-05-23 11:37:26 -Generating unique operation named: addUsingGET_17
2019-05-23 11:37:26 -Generating unique operation named: editUsingGET_19
2019-05-23 11:37:26 -Generating unique operation named: listUsingGET_20
2019-05-23 11:37:26 -Generating unique operation named: removeUsingPOST_31
2019-05-23 11:37:26 -Generating unique operation named: removeUsingPOST_32
2019-05-23 11:37:26 -Generating unique operation named: saveUsingPOST_18
2019-05-23 11:37:26 -Generating unique operation named: updateUsingGET_12
2019-05-23 11:37:26 -Generating unique operation named: updateUsingHEAD_12
2019-05-23 11:37:26 -Generating unique operation named: updateUsingPOST_18
2019-05-23 11:37:26 -Generating unique operation named: updateUsingPUT_12
2019-05-23 11:37:26 -Generating unique operation named: updateUsingPATCH_12
2019-05-23 11:37:26 -Generating unique operation named: updateUsingDELETE_12
2019-05-23 11:37:26 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-23 11:37:26 -Generating unique operation named: updateUsingTRACE_12
2019-05-23 11:37:26 -Starting Quartz Scheduler now
2019-05-23 11:37:26 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-23 11:37:26 -Starting...
2019-05-23 11:37:26 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-23 11:37:26 -Started.
2019-05-23 11:37:26 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-23 11:37:26 -Using a shared selector for servlet write/read
2019-05-23 11:37:26 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-23 11:37:26 -Started BootdoApplication in 37.985 seconds (JVM running for 42.028)
2019-05-23 11:37:27 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-23 11:37:27 -==> Parameters: 
2019-05-23 11:37:27 -<==      Total: 1
2019-05-23 11:37:51 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-23 11:37:51 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-23 11:37:51 -FrameworkServlet 'dispatcherServlet': initialization completed in 95 ms
2019-05-23 11:37:51 -Enabling session validation scheduler...
2019-05-23 11:37:51 -请求地址 : http://localhost:8081/login;JSESSIONID=e14cf455-9af8-4813-9a6d-24de884ae382
2019-05-23 11:37:51 -HTTP METHOD : GET
2019-05-23 11:37:51 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-23 11:37:51 -参数 : [{}]
2019-05-23 11:37:51 -耗时 : 11
2019-05-23 11:37:51 -返回值 : login
2019-05-23 11:37:54 -请求地址 : http://localhost:8081/getVerify
2019-05-23 11:37:54 -HTTP METHOD : GET
2019-05-23 11:37:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-23 11:37:54 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@3426ee73, org.apache.shiro.web.servlet.ShiroHttpServletResponse@2fcb83b9]
2019-05-23 11:37:58 -2271
2019-05-23 11:37:59 -耗时 : 5121
2019-05-23 11:37:59 -返回值 : null
2019-05-23 11:38:03 -请求地址 : http://localhost:8081/login
2019-05-23 11:38:03 -HTTP METHOD : POST
2019-05-23 11:38:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-23 11:38:03 -参数 : [admin, 111111, 2271, org.apache.shiro.web.servlet.ShiroHttpServletRequest@4c5bd8a2]
2019-05-23 11:38:03 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-23 11:38:03 -==> Parameters: admin(String)
2019-05-23 11:38:03 -<==      Total: 1
2019-05-23 11:38:03 -耗时 : 238
2019-05-23 11:38:03 -返回值 : {msg=操作成功, code=0}
2019-05-23 11:38:03 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-23 11:38:03 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-23 11:38:03 -==> Parameters: 1(Long), admin(String), 登录(String), 238(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-23 11:38:03.936(Timestamp)
2019-05-23 11:38:04 -请求地址 : http://localhost:8081/index
2019-05-23 11:38:04 -HTTP METHOD : GET
2019-05-23 11:38:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-23 11:38:04 -参数 : [{}]
2019-05-23 11:38:04 -<==    Updates: 1
2019-05-23 11:38:04 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-23 11:38:04 -==> Parameters: 1(Long)
2019-05-23 11:38:04 -<==      Total: 49
2019-05-23 11:38:04 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-23 11:38:04 -==> Parameters: 138(Long)
2019-05-23 11:38:04 -<==      Total: 1
2019-05-23 11:38:04 -耗时 : 845
2019-05-23 11:38:04 -返回值 : index_v1
2019-05-23 11:38:05 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-23 11:38:05 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 846(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-23 11:38:05.095(Timestamp)
2019-05-23 11:38:05 -<==    Updates: 1
2019-05-23 11:38:05 -请求地址 : http://localhost:8081/main
2019-05-23 11:38:05 -HTTP METHOD : GET
2019-05-23 11:38:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-23 11:38:05 -参数 : []
2019-05-23 11:38:05 -耗时 : 0
2019-05-23 11:38:05 -返回值 : main
2019-05-23 11:38:05 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-23 11:38:05 -HTTP METHOD : GET
2019-05-23 11:38:05 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-23 11:38:05 -参数 : []
2019-05-23 11:38:05 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-23 11:38:05 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-23 11:38:05 -请求地址 : http://localhost:8081/main
2019-05-23 11:38:05 -HTTP METHOD : GET
2019-05-23 11:38:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-23 11:38:05 -参数 : []
2019-05-23 11:38:05 -耗时 : 0
2019-05-23 11:38:05 -返回值 : main
2019-05-23 11:38:06 -<==      Total: 0
2019-05-23 11:38:06 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-23 11:38:06 -==> Parameters: 1(Long), 0(String)
2019-05-23 11:38:06 -<==      Total: 1
2019-05-23 11:38:06 -耗时 : 472
2019-05-23 11:38:06 -返回值 : com.bootdo.common.utils.PageUtils@3cf5e3fe
2019-05-23 11:38:11 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-23 11:38:11 -==> Parameters: 1(Long)
2019-05-23 11:38:11 -<==      Total: 93
2019-05-23 11:38:11 -请求地址 : http://localhost:8081/charts/countOwe
2019-05-23 11:38:11 -HTTP METHOD : GET
2019-05-23 11:38:11 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.countOwe
2019-05-23 11:38:11 -参数 : []
2019-05-23 11:38:11 -耗时 : 0
2019-05-23 11:38:11 -返回值 : charts/countOwe
2019-05-23 11:38:12 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-23 11:38:12 -HTTP METHOD : GET
2019-05-23 11:38:12 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-23 11:38:12 -参数 : [userType]
2019-05-23 11:38:12 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-23 11:38:12 -==> Parameters: userType(String)
2019-05-23 11:38:12 -<==      Total: 4
2019-05-23 11:38:12 -耗时 : 96
2019-05-23 11:38:12 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-23 11:38:18 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-23 11:38:18 -HTTP METHOD : GET
2019-05-23 11:38:18 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-23 11:38:18 -参数 : []
2019-05-23 11:38:18 -耗时 : 0
2019-05-23 11:38:18 -返回值 : system/dept/deptTree
2019-05-23 11:38:18 -WebSocketSession[1 current WS(0)-HttpStream(1)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 12], outboundChannelpool size = 2, active threads = 0, queued tasks = 0, completed tasks = 2], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 3]
2019-05-23 11:38:19 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-23 11:38:19 -HTTP METHOD : GET
2019-05-23 11:38:19 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-23 11:38:19 -参数 : []
2019-05-23 11:38:19 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-23 11:38:19 -==> Parameters: 
2019-05-23 11:38:19 -<==      Total: 3
2019-05-23 11:38:19 -耗时 : 45
2019-05-23 11:38:19 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-23 11:38:21 -请求地址 : http://localhost:8081/charts/countOwe/getCountOwe
2019-05-23 11:38:21 -HTTP METHOD : POST
2019-05-23 11:38:21 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.getCountD
2019-05-23 11:38:21 -参数 : [com.bootdo.elec.vo.ElecVo@7038c38c, com.bootdo.water.vo.WaterVo@183074f4, com.bootdo.heat.vo.HeatVo@26eb4bb9]
2019-05-23 11:38:21 -==>  Preparing: SELECT COUNT(ID) FROM ELEC WHERE `elec_sum` < 0 
2019-05-23 11:38:21 -==> Parameters: 
2019-05-23 11:38:21 -<==      Total: 1
2019-05-23 11:38:21 -==>  Preparing: SELECT SUM(ELEC_SUM) FROM ELEC WHERE `elec_sum` < 0 
2019-05-23 11:38:21 -==> Parameters: 
2019-05-23 11:38:21 -<==      Total: 1
2019-05-23 11:38:45 -==>  Preparing: SELECT COUNT(ID) FROM WATER WHERE `water_sum` < 0 
2019-05-23 11:38:45 -==> Parameters: 
2019-05-23 11:38:45 -<==      Total: 1
2019-05-23 11:39:20 -==>  Preparing: SELECT SUM(WATER_SUM) FROM WATER WHERE `water_sum` < 0 
2019-05-23 11:39:20 -==> Parameters: 
2019-05-23 11:39:21 -<==      Total: 1
2019-05-23 11:39:22 -==>  Preparing: SELECT COUNT(ID) FROM HEAT WHERE `heat_sum` < 0 
2019-05-23 11:39:23 -==> Parameters: 
2019-05-23 11:39:23 -<==      Total: 1
2019-05-23 11:39:59 -==>  Preparing: SELECT SUM(HEAT_SUM) FROM HEAT WHERE `heat_sum` < 0 
2019-05-23 11:39:59 -==> Parameters: 
2019-05-23 11:39:59 -<==      Total: 1
2019-05-23 11:39:59 -耗时 : 98641
2019-05-23 11:39:59 -返回值 : com.bootdo.charts.vo.CountOweVo@f6f9251
2019-05-23 12:08:18 -WebSocketSession[1 current WS(0)-HttpStream(1)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 12], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 2], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 436]
2019-05-23 12:37:51 -Validating all active sessions...
2019-05-23 12:37:51 -Finished session validation.  [1] sessions were stopped.
2019-05-23 12:38:18 -WebSocketSession[1 current WS(0)-HttpStream(1)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 12], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 2], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 869]
2019-05-23 13:08:18 -WebSocketSession[1 current WS(0)-HttpStream(1)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 12], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 2], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 1302]
2019-05-23 13:37:51 -Validating all active sessions...
2019-05-23 13:37:51 -Finished session validation.  No sessions were stopped.
2019-05-23 13:38:18 -WebSocketSession[1 current WS(0)-HttpStream(1)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 12], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 2], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 1735]
2019-05-23 14:08:18 -WebSocketSession[1 current WS(0)-HttpStream(1)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 12], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 2], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 2168]
2019-05-23 14:29:26 -请求地址 : http://localhost:8081/login;JSESSIONID=321946e7-2101-4e95-907d-3a55da3a1bd8
2019-05-23 14:29:26 -HTTP METHOD : GET
2019-05-23 14:29:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-23 14:29:26 -参数 : [{}]
2019-05-23 14:29:26 -耗时 : 1
2019-05-23 14:29:26 -返回值 : login
2019-05-23 14:29:27 -请求地址 : http://localhost:8081/getVerify
2019-05-23 14:29:27 -HTTP METHOD : GET
2019-05-23 14:29:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-23 14:29:27 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@2f5a96b3, org.apache.shiro.web.servlet.ShiroHttpServletResponse@1e066ae8]
2019-05-23 14:29:27 -4766
2019-05-23 14:29:27 -耗时 : 26
2019-05-23 14:29:27 -返回值 : null
2019-05-23 14:29:27 -请求地址 : http://localhost:8081/login
2019-05-23 14:29:27 -HTTP METHOD : GET
2019-05-23 14:29:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-23 14:29:27 -参数 : [{}]
2019-05-23 14:29:27 -耗时 : 0
2019-05-23 14:29:27 -返回值 : login
2019-05-23 14:29:32 -请求地址 : http://localhost:8081/login
2019-05-23 14:29:32 -HTTP METHOD : POST
2019-05-23 14:29:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-23 14:29:32 -参数 : [admin, 111111, 4766, org.apache.shiro.web.servlet.ShiroHttpServletRequest@57431d62]
2019-05-23 14:29:32 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-23 14:29:32 -==> Parameters: admin(String)
2019-05-23 14:29:32 -<==      Total: 1
2019-05-23 14:29:32 -耗时 : 305
2019-05-23 14:29:32 -返回值 : {msg=操作成功, code=0}
2019-05-23 14:29:32 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-23 14:29:32 -==> Parameters: 1(Long), admin(String), 登录(String), 308(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-23 14:29:32.551(Timestamp)
2019-05-23 14:29:32 -请求地址 : http://localhost:8081/index
2019-05-23 14:29:32 -HTTP METHOD : GET
2019-05-23 14:29:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-23 14:29:32 -参数 : [{}]
2019-05-23 14:29:32 -<==    Updates: 1
2019-05-23 14:29:33 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-23 14:29:33 -==> Parameters: 1(Long)
2019-05-23 14:29:33 -<==      Total: 49
2019-05-23 14:29:33 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-23 14:29:33 -==> Parameters: 138(Long)
2019-05-23 14:29:33 -<==      Total: 1
2019-05-23 14:29:33 -耗时 : 933
2019-05-23 14:29:33 -返回值 : index_v1
2019-05-23 14:29:33 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-23 14:29:33 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 933(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-23 14:29:33.517(Timestamp)
2019-05-23 14:29:33 -请求地址 : http://localhost:8081/main
2019-05-23 14:29:33 -HTTP METHOD : GET
2019-05-23 14:29:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-23 14:29:33 -参数 : []
2019-05-23 14:29:33 -耗时 : 0
2019-05-23 14:29:33 -返回值 : main
2019-05-23 14:29:33 -<==    Updates: 1
2019-05-23 14:29:34 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-23 14:29:34 -HTTP METHOD : GET
2019-05-23 14:29:34 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-23 14:29:34 -参数 : []
2019-05-23 14:29:34 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-23 14:29:34 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-23 14:29:34 -请求地址 : http://localhost:8081/main
2019-05-23 14:29:34 -HTTP METHOD : GET
2019-05-23 14:29:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-23 14:29:34 -参数 : []
2019-05-23 14:29:34 -耗时 : 0
2019-05-23 14:29:34 -返回值 : main
2019-05-23 14:29:34 -<==      Total: 0
2019-05-23 14:29:34 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-23 14:29:34 -==> Parameters: 1(Long), 0(String)
2019-05-23 14:29:34 -<==      Total: 1
2019-05-23 14:29:34 -耗时 : 198
2019-05-23 14:29:34 -返回值 : com.bootdo.common.utils.PageUtils@4baddfb6
2019-05-23 14:29:55 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-23 14:29:55 -==> Parameters: 1(Long)
2019-05-23 14:29:55 -<==      Total: 93
2019-05-23 14:29:55 -请求地址 : http://localhost:8081/charts/countOwe
2019-05-23 14:29:55 -HTTP METHOD : GET
2019-05-23 14:29:55 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.countOwe
2019-05-23 14:29:55 -参数 : []
2019-05-23 14:29:55 -耗时 : 0
2019-05-23 14:29:55 -返回值 : charts/countOwe
2019-05-23 14:29:56 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-23 14:29:56 -HTTP METHOD : GET
2019-05-23 14:29:56 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-23 14:29:56 -参数 : [userType]
2019-05-23 14:29:56 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-23 14:29:56 -==> Parameters: userType(String)
2019-05-23 14:29:57 -<==      Total: 4
2019-05-23 14:29:57 -耗时 : 433
2019-05-23 14:29:57 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-23 14:30:00 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-23 14:30:00 -HTTP METHOD : GET
2019-05-23 14:30:00 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-23 14:30:00 -参数 : []
2019-05-23 14:30:00 -耗时 : 1
2019-05-23 14:30:00 -返回值 : system/dept/deptTree
2019-05-23 14:30:01 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-23 14:30:01 -HTTP METHOD : GET
2019-05-23 14:30:01 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-23 14:30:01 -参数 : []
2019-05-23 14:30:01 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-23 14:30:01 -==> Parameters: 
2019-05-23 14:30:01 -<==      Total: 3
2019-05-23 14:30:01 -耗时 : 5
2019-05-23 14:30:01 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-23 14:30:08 -请求地址 : http://localhost:8081/charts/countOwe/getCountOwe
2019-05-23 14:30:08 -HTTP METHOD : POST
2019-05-23 14:30:08 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.getCountD
2019-05-23 14:30:08 -参数 : [com.bootdo.elec.vo.ElecVo@404e5eb3, com.bootdo.water.vo.WaterVo@62d92e90, com.bootdo.heat.vo.HeatVo@220fb74]
2019-05-23 14:30:08 -==>  Preparing: SELECT COUNT(ID) FROM ELEC WHERE `elec_sum` < 0 and `create_time` = ? and user_org = ? 
2019-05-23 14:30:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-23 14:30:09 -<==      Total: 1
2019-05-23 14:30:09 -==>  Preparing: SELECT SUM(ELEC_SUM) FROM ELEC WHERE `elec_sum` < 0 and `create_time` = ? and user_org = ? 
2019-05-23 14:30:09 -==> Parameters: 2019-03(String), 2(String)
2019-05-23 14:30:09 -<==      Total: 1
2019-05-23 14:30:09 -==>  Preparing: SELECT COUNT(ID) FROM WATER WHERE `water_sum` < 0 and `create_time` = ? and user_org = ? 
2019-05-23 14:30:09 -==> Parameters: 2019-03(String), 2(String)
2019-05-23 14:30:09 -<==      Total: 1
2019-05-23 14:30:09 -==>  Preparing: SELECT SUM(WATER_SUM) FROM WATER WHERE `water_sum` < 0 and `create_time` = ? and user_org = ? 
2019-05-23 14:30:09 -==> Parameters: 2019-03(String), 2(String)
2019-05-23 14:30:09 -<==      Total: 1
2019-05-23 14:30:09 -==>  Preparing: SELECT COUNT(ID) FROM HEAT WHERE `heat_sum` < 0 and `create_time` = ? and user_org = ? 
2019-05-23 14:30:09 -==> Parameters: 2019-03(String), 2(String)
2019-05-23 14:30:09 -<==      Total: 1
2019-05-23 14:30:09 -==>  Preparing: SELECT SUM(HEAT_SUM) FROM HEAT WHERE `heat_sum` < 0 and `create_time` = ? and user_org = ? 
2019-05-23 14:30:09 -==> Parameters: 2019-03(String), 2(String)
2019-05-23 14:30:09 -<==      Total: 1
2019-05-23 14:30:09 -耗时 : 427
2019-05-23 14:30:09 -返回值 : com.bootdo.charts.vo.CountOweVo@4ed891e9
2019-05-23 14:30:12 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:20)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:23)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:424)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:232)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-23 14:34:44 -请求地址 : http://localhost:8081/index
2019-05-23 14:34:44 -HTTP METHOD : GET
2019-05-23 14:34:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-23 14:34:44 -参数 : [{}]
2019-05-23 14:34:44 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-23 14:34:44 -==> Parameters: 1(Long)
2019-05-23 14:34:44 -<==      Total: 49
2019-05-23 14:34:44 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-23 14:34:44 -==> Parameters: 138(Long)
2019-05-23 14:34:44 -<==      Total: 1
2019-05-23 14:34:44 -耗时 : 104
2019-05-23 14:34:44 -返回值 : index_v1
2019-05-23 14:34:44 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-23 14:34:44 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 104(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-23 14:34:44.806(Timestamp)
2019-05-23 14:34:44 -请求地址 : http://localhost:8081/main
2019-05-23 14:34:44 -HTTP METHOD : GET
2019-05-23 14:34:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-23 14:34:44 -参数 : []
2019-05-23 14:34:44 -耗时 : 0
2019-05-23 14:34:44 -返回值 : main
2019-05-23 14:34:44 -<==    Updates: 1
2019-05-23 14:34:45 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-23 14:34:45 -HTTP METHOD : GET
2019-05-23 14:34:45 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-23 14:34:45 -参数 : []
2019-05-23 14:34:45 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-23 14:34:45 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-23 14:34:45 -<==      Total: 0
2019-05-23 14:34:45 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-23 14:34:45 -==> Parameters: 1(Long), 0(String)
2019-05-23 14:34:45 -<==      Total: 1
2019-05-23 14:34:45 -耗时 : 7
2019-05-23 14:34:45 -返回值 : com.bootdo.common.utils.PageUtils@24cbc18
2019-05-23 14:34:45 -请求地址 : http://localhost:8081/main
2019-05-23 14:34:45 -HTTP METHOD : GET
2019-05-23 14:34:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-23 14:34:45 -参数 : []
2019-05-23 14:34:45 -耗时 : 0
2019-05-23 14:34:45 -返回值 : main
2019-05-23 14:34:48 -请求地址 : http://localhost:8081/charts/countOwe
2019-05-23 14:34:48 -HTTP METHOD : GET
2019-05-23 14:34:48 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.countOwe
2019-05-23 14:34:48 -参数 : []
2019-05-23 14:34:48 -耗时 : 0
2019-05-23 14:34:48 -返回值 : charts/countOwe
2019-05-23 14:34:49 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-23 14:34:49 -HTTP METHOD : GET
2019-05-23 14:34:49 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-23 14:34:49 -参数 : [userType]
2019-05-23 14:34:49 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-23 14:34:49 -==> Parameters: userType(String)
2019-05-23 14:34:49 -<==      Total: 4
2019-05-23 14:34:49 -耗时 : 9
2019-05-23 14:34:49 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-23 14:34:52 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-23 14:34:52 -HTTP METHOD : GET
2019-05-23 14:34:52 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-23 14:34:52 -参数 : []
2019-05-23 14:34:52 -耗时 : 0
2019-05-23 14:34:52 -返回值 : system/dept/deptTree
2019-05-23 14:34:52 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-23 14:34:52 -HTTP METHOD : GET
2019-05-23 14:34:52 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-23 14:34:52 -参数 : []
2019-05-23 14:34:52 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-23 14:34:52 -==> Parameters: 
2019-05-23 14:34:52 -<==      Total: 3
2019-05-23 14:34:52 -耗时 : 6
2019-05-23 14:34:52 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-23 14:34:58 -请求地址 : http://localhost:8081/charts/countOwe/getCountOwe
2019-05-23 14:34:58 -HTTP METHOD : POST
2019-05-23 14:34:58 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.getCountD
2019-05-23 14:34:58 -参数 : [com.bootdo.elec.vo.ElecVo@7deab617, com.bootdo.water.vo.WaterVo@7374ac11, com.bootdo.heat.vo.HeatVo@5e114417]
2019-05-23 14:34:58 -==>  Preparing: SELECT COUNT(ID) FROM ELEC WHERE `elec_sum` < 0 and `create_time` = ? and user_org = ? 
2019-05-23 14:34:58 -==> Parameters: 2019-03(String), 2(String)
2019-05-23 14:34:58 -<==      Total: 1
2019-05-23 14:34:58 -==>  Preparing: SELECT SUM(ELEC_SUM) FROM ELEC WHERE `elec_sum` < 0 and `create_time` = ? and user_org = ? 
2019-05-23 14:34:58 -==> Parameters: 2019-03(String), 2(String)
2019-05-23 14:34:58 -<==      Total: 1
2019-05-23 14:34:58 -==>  Preparing: SELECT COUNT(ID) FROM WATER WHERE `water_sum` < 0 and `create_time` = ? and user_org = ? 
2019-05-23 14:34:58 -==> Parameters: 2019-03(String), 2(String)
2019-05-23 14:34:58 -<==      Total: 1
2019-05-23 14:34:58 -==>  Preparing: SELECT SUM(WATER_SUM) FROM WATER WHERE `water_sum` < 0 and `create_time` = ? and user_org = ? 
2019-05-23 14:34:58 -==> Parameters: 2019-03(String), 2(String)
2019-05-23 14:34:58 -<==      Total: 1
2019-05-23 14:34:58 -==>  Preparing: SELECT COUNT(ID) FROM HEAT WHERE `heat_sum` < 0 and `create_time` = ? and user_org = ? 
2019-05-23 14:34:58 -==> Parameters: 2019-03(String), 2(String)
2019-05-23 14:34:58 -<==      Total: 1
2019-05-23 14:34:58 -==>  Preparing: SELECT SUM(HEAT_SUM) FROM HEAT WHERE `heat_sum` < 0 and `create_time` = ? and user_org = ? 
2019-05-23 14:34:58 -==> Parameters: 2019-03(String), 2(String)
2019-05-23 14:34:58 -<==      Total: 1
2019-05-23 14:34:58 -耗时 : 34
2019-05-23 14:34:58 -返回值 : com.bootdo.charts.vo.CountOweVo@4b7be628
2019-05-23 14:35:32 -请求地址 : http://localhost:8081/login;JSESSIONID=3030e9e8-b57b-463a-9735-631f38d05858
2019-05-23 14:35:32 -HTTP METHOD : GET
2019-05-23 14:35:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-23 14:35:32 -参数 : [{}]
2019-05-23 14:35:32 -耗时 : 0
2019-05-23 14:35:32 -返回值 : login
2019-05-23 14:35:32 -请求地址 : http://localhost:8081/getVerify
2019-05-23 14:35:32 -HTTP METHOD : GET
2019-05-23 14:35:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-23 14:35:32 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@114090c3, org.apache.shiro.web.servlet.ShiroHttpServletResponse@6f25982d]
2019-05-23 14:35:32 -4156
2019-05-23 14:35:32 -耗时 : 33
2019-05-23 14:35:32 -返回值 : null
2019-05-23 14:35:33 -请求地址 : http://localhost:8081/login
2019-05-23 14:35:33 -HTTP METHOD : GET
2019-05-23 14:35:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-23 14:35:33 -参数 : [{}]
2019-05-23 14:35:33 -耗时 : 0
2019-05-23 14:35:33 -返回值 : login
2019-05-23 14:35:37 -请求地址 : http://localhost:8081/login
2019-05-23 14:35:37 -HTTP METHOD : POST
2019-05-23 14:35:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-23 14:35:37 -参数 : [admin, 111111, 4156, org.apache.shiro.web.servlet.ShiroHttpServletRequest@330dbbcf]
2019-05-23 14:35:37 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-23 14:35:37 -==> Parameters: admin(String)
2019-05-23 14:35:37 -<==      Total: 1
2019-05-23 14:35:37 -耗时 : 99
2019-05-23 14:35:37 -返回值 : {msg=操作成功, code=0}
2019-05-23 14:35:37 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-23 14:35:37 -==> Parameters: 1(Long), admin(String), 登录(String), 99(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-23 14:35:37.785(Timestamp)
2019-05-23 14:35:37 -请求地址 : http://localhost:8081/index
2019-05-23 14:35:37 -HTTP METHOD : GET
2019-05-23 14:35:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-23 14:35:37 -参数 : [{}]
2019-05-23 14:35:37 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-23 14:35:37 -==> Parameters: 1(Long)
2019-05-23 14:35:37 -<==      Total: 49
2019-05-23 14:35:37 -<==    Updates: 1
2019-05-23 14:35:37 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-23 14:35:37 -==> Parameters: 138(Long)
2019-05-23 14:35:37 -<==      Total: 1
2019-05-23 14:35:37 -耗时 : 32
2019-05-23 14:35:37 -返回值 : index_v1
2019-05-23 14:35:37 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-23 14:35:37 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 33(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-23 14:35:37.845(Timestamp)
2019-05-23 14:35:37 -<==    Updates: 1
2019-05-23 14:35:37 -请求地址 : http://localhost:8081/main
2019-05-23 14:35:37 -HTTP METHOD : GET
2019-05-23 14:35:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-23 14:35:37 -参数 : []
2019-05-23 14:35:37 -耗时 : 1
2019-05-23 14:35:37 -返回值 : main
2019-05-23 14:35:38 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-23 14:35:38 -HTTP METHOD : GET
2019-05-23 14:35:38 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-23 14:35:38 -参数 : []
2019-05-23 14:35:38 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-23 14:35:38 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-23 14:35:38 -请求地址 : http://localhost:8081/main
2019-05-23 14:35:38 -HTTP METHOD : GET
2019-05-23 14:35:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-23 14:35:38 -参数 : []
2019-05-23 14:35:38 -<==      Total: 0
2019-05-23 14:35:38 -耗时 : 0
2019-05-23 14:35:38 -返回值 : main
2019-05-23 14:35:38 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-23 14:35:38 -==> Parameters: 1(Long), 0(String)
2019-05-23 14:35:38 -<==      Total: 1
2019-05-23 14:35:38 -耗时 : 8
2019-05-23 14:35:38 -返回值 : com.bootdo.common.utils.PageUtils@46036ded
2019-05-23 14:35:42 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-23 14:35:42 -==> Parameters: 1(Long)
2019-05-23 14:35:42 -<==      Total: 93
2019-05-23 14:35:42 -请求地址 : http://localhost:8081/charts/countOwe
2019-05-23 14:35:42 -HTTP METHOD : GET
2019-05-23 14:35:42 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.countOwe
2019-05-23 14:35:42 -参数 : []
2019-05-23 14:35:42 -耗时 : 0
2019-05-23 14:35:42 -返回值 : charts/countOwe
2019-05-23 14:35:43 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-23 14:35:43 -HTTP METHOD : GET
2019-05-23 14:35:43 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-23 14:35:43 -参数 : [userType]
2019-05-23 14:35:43 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-23 14:35:43 -==> Parameters: userType(String)
2019-05-23 14:35:43 -<==      Total: 4
2019-05-23 14:35:43 -耗时 : 7
2019-05-23 14:35:43 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-23 14:35:47 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-23 14:35:47 -HTTP METHOD : GET
2019-05-23 14:35:47 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-23 14:35:47 -参数 : []
2019-05-23 14:35:47 -耗时 : 17
2019-05-23 14:35:47 -返回值 : system/dept/deptTree
2019-05-23 14:35:47 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-23 14:35:47 -HTTP METHOD : GET
2019-05-23 14:35:47 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-23 14:35:47 -参数 : []
2019-05-23 14:35:47 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-23 14:35:47 -==> Parameters: 
2019-05-23 14:35:47 -<==      Total: 3
2019-05-23 14:35:47 -耗时 : 4
2019-05-23 14:35:47 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-23 14:35:52 -请求地址 : http://localhost:8081/charts/countOwe/getCountOwe
2019-05-23 14:35:52 -HTTP METHOD : POST
2019-05-23 14:35:52 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.getCountD
2019-05-23 14:35:52 -参数 : [com.bootdo.elec.vo.ElecVo@1a275781, com.bootdo.water.vo.WaterVo@2bff34b2, com.bootdo.heat.vo.HeatVo@576cc97a]
2019-05-23 14:35:52 -==>  Preparing: SELECT COUNT(ID) FROM ELEC WHERE `elec_sum` < 0 and `create_time` = ? and user_org = ? 
2019-05-23 14:35:52 -==> Parameters: 2019-05(String), 2(String)
2019-05-23 14:35:52 -<==      Total: 1
2019-05-23 14:35:52 -==>  Preparing: SELECT SUM(ELEC_SUM) FROM ELEC WHERE `elec_sum` < 0 and `create_time` = ? and user_org = ? 
2019-05-23 14:35:52 -==> Parameters: 2019-05(String), 2(String)
2019-05-23 14:35:52 -<==      Total: 1
2019-05-23 14:35:52 -Mapper method 'com.bootdo.elec.dao.ElecDao.ElecSumOwe attempted to return null from a method with a primitive return type (int).
org.apache.ibatis.binding.BindingException: Mapper method 'com.bootdo.elec.dao.ElecDao.ElecSumOwe attempted to return null from a method with a primitive return type (int).
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:93)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy105.ElecSumOwe(Unknown Source)
	at com.bootdo.elec.service.impl.ElecServiceImpl.ElecSumOwe(ElecServiceImpl.java:85)
	at com.bootdo.charts.controller.countOweController.getCountD(countOweController.java:57)
	at com.bootdo.charts.controller.countOweController$$FastClassBySpringCGLIB$$3b54d947.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor127.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.countOweController$$EnhancerBySpringCGLIB$$a68c4752.getCountD(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-23 14:35:52 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-23 14:35:52 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/countOwe/getCountOwe(String), org.apache.ibatis.binding.BindingException: Mapper method 'com.bootdo.elec.dao.ElecDao.ElecSumOwe attempted to return null from a method with a primitive return type (int).(String), null, 2019-05-23 14:35:52.712(Timestamp)
2019-05-23 14:35:52 -<==    Updates: 1
2019-05-23 14:36:01 -请求地址 : http://localhost:8081/charts/countOwe/getCountOwe
2019-05-23 14:36:01 -HTTP METHOD : POST
2019-05-23 14:36:01 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.getCountD
2019-05-23 14:36:01 -参数 : [com.bootdo.elec.vo.ElecVo@6f340660, com.bootdo.water.vo.WaterVo@5a4886d9, com.bootdo.heat.vo.HeatVo@5bf92928]
2019-05-23 14:36:01 -==>  Preparing: SELECT COUNT(ID) FROM ELEC WHERE `elec_sum` < 0 and `create_time` = ? and user_org = ? 
2019-05-23 14:36:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-23 14:36:01 -<==      Total: 1
2019-05-23 14:36:01 -==>  Preparing: SELECT SUM(ELEC_SUM) FROM ELEC WHERE `elec_sum` < 0 and `create_time` = ? and user_org = ? 
2019-05-23 14:36:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-23 14:36:01 -<==      Total: 1
2019-05-23 14:36:01 -==>  Preparing: SELECT COUNT(ID) FROM WATER WHERE `water_sum` < 0 and `create_time` = ? and user_org = ? 
2019-05-23 14:36:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-23 14:36:01 -<==      Total: 1
2019-05-23 14:36:01 -==>  Preparing: SELECT SUM(WATER_SUM) FROM WATER WHERE `water_sum` < 0 and `create_time` = ? and user_org = ? 
2019-05-23 14:36:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-23 14:36:01 -<==      Total: 1
2019-05-23 14:36:01 -==>  Preparing: SELECT COUNT(ID) FROM HEAT WHERE `heat_sum` < 0 and `create_time` = ? and user_org = ? 
2019-05-23 14:36:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-23 14:36:01 -<==      Total: 1
2019-05-23 14:36:01 -==>  Preparing: SELECT SUM(HEAT_SUM) FROM HEAT WHERE `heat_sum` < 0 and `create_time` = ? and user_org = ? 
2019-05-23 14:36:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-23 14:36:01 -<==      Total: 1
2019-05-23 14:36:01 -耗时 : 21
2019-05-23 14:36:01 -返回值 : com.bootdo.charts.vo.CountOweVo@4a5d11a3
2019-05-23 14:36:33 -请求地址 : http://localhost:8081/index
2019-05-23 14:36:33 -HTTP METHOD : GET
2019-05-23 14:36:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-23 14:36:33 -参数 : [{}]
2019-05-23 14:36:33 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-23 14:36:33 -==> Parameters: 1(Long)
2019-05-23 14:36:33 -<==      Total: 49
2019-05-23 14:36:33 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-23 14:36:33 -==> Parameters: 138(Long)
2019-05-23 14:36:33 -<==      Total: 1
2019-05-23 14:36:33 -耗时 : 23
2019-05-23 14:36:33 -返回值 : index_v1
2019-05-23 14:36:33 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-23 14:36:33 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 23(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-23 14:36:33.443(Timestamp)
2019-05-23 14:36:33 -<==    Updates: 1
2019-05-23 14:36:33 -请求地址 : http://localhost:8081/main
2019-05-23 14:36:33 -HTTP METHOD : GET
2019-05-23 14:36:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-23 14:36:33 -参数 : []
2019-05-23 14:36:33 -耗时 : 1
2019-05-23 14:36:33 -返回值 : main
2019-05-23 14:36:33 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-23 14:36:33 -HTTP METHOD : GET
2019-05-23 14:36:33 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-23 14:36:33 -参数 : []
2019-05-23 14:36:33 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-23 14:36:33 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-23 14:36:33 -<==      Total: 0
2019-05-23 14:36:33 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-23 14:36:33 -==> Parameters: 1(Long), 0(String)
2019-05-23 14:36:33 -<==      Total: 1
2019-05-23 14:36:33 -耗时 : 31
2019-05-23 14:36:33 -返回值 : com.bootdo.common.utils.PageUtils@2e21532a
2019-05-23 14:36:33 -请求地址 : http://localhost:8081/main
2019-05-23 14:36:33 -HTTP METHOD : GET
2019-05-23 14:36:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-23 14:36:33 -参数 : []
2019-05-23 14:36:33 -耗时 : 0
2019-05-23 14:36:33 -返回值 : main
2019-05-23 14:37:29 -请求地址 : http://localhost:8081/charts/countYY
2019-05-23 14:37:29 -HTTP METHOD : GET
2019-05-23 14:37:29 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.countYY
2019-05-23 14:37:29 -参数 : []
2019-05-23 14:37:29 -耗时 : 1
2019-05-23 14:37:29 -返回值 : charts/countYY
2019-05-23 14:37:30 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-23 14:37:30 -HTTP METHOD : GET
2019-05-23 14:37:30 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-23 14:37:30 -参数 : [userType]
2019-05-23 14:37:30 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-23 14:37:30 -==> Parameters: userType(String)
2019-05-23 14:37:30 -<==      Total: 4
2019-05-23 14:37:30 -耗时 : 6
2019-05-23 14:37:30 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-23 14:37:33 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-23 14:37:33 -HTTP METHOD : GET
2019-05-23 14:37:33 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-23 14:37:33 -参数 : []
2019-05-23 14:37:33 -耗时 : 1
2019-05-23 14:37:33 -返回值 : system/dept/deptTree
2019-05-23 14:37:34 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-23 14:37:34 -HTTP METHOD : GET
2019-05-23 14:37:34 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-23 14:37:34 -参数 : []
2019-05-23 14:37:34 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-23 14:37:34 -==> Parameters: 
2019-05-23 14:37:34 -<==      Total: 3
2019-05-23 14:37:34 -耗时 : 3
2019-05-23 14:37:34 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-23 14:37:35 -请求地址 : http://localhost:8081/charts/countYY/getCountYY
2019-05-23 14:37:35 -HTTP METHOD : POST
2019-05-23 14:37:35 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.getCountYY
2019-05-23 14:37:35 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@7ab67f60, com.bootdo.moneyLog.vo.WaterLogVo@7edf9235, com.bootdo.moneyLog.vo.HeatLogVo@5017a3c0]
2019-05-23 14:37:35 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("2019","-01") and user_org = ? 
2019-05-23 14:37:36 -==> Parameters: 2(String)
2019-05-23 14:37:36 -<==      Total: 1
2019-05-23 14:37:36 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("2019","-01") and user_org = ? 
2019-05-23 14:37:36 -==> Parameters: 2(String)
2019-05-23 14:37:36 -<==      Total: 1
2019-05-23 14:37:36 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("2019","-02") and user_org = ? 
2019-05-23 14:37:36 -==> Parameters: 2(String)
2019-05-23 14:37:36 -<==      Total: 1
2019-05-23 14:37:36 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("2019","-02") and user_org = ? 
2019-05-23 14:37:36 -==> Parameters: 2(String)
2019-05-23 14:37:36 -<==      Total: 1
2019-05-23 14:37:36 -==>  Preparing: SELECT ifnull (COUNT(ID),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("2019","-03") and user_org = ? 
2019-05-23 14:37:36 -==> Parameters: 2(String)
2019-05-23 14:37:36 -<==      Total: 1
2019-05-23 14:37:36 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("2019","-03") and user_org = ? 
2019-05-23 14:37:36 -==> Parameters: 2(String)
2019-05-23 14:37:36 -<==      Total: 1
2019-05-23 14:37:36 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("2019","-04") and user_org = ? 
2019-05-23 14:37:36 -==> Parameters: 2(String)
2019-05-23 14:37:36 -<==      Total: 1
2019-05-23 14:37:36 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("2019","-04") and user_org = ? 
2019-05-23 14:37:36 -==> Parameters: 2(String)
2019-05-23 14:37:36 -<==      Total: 1
2019-05-23 14:37:36 -==>  Preparing: SELECT ifnull (COUNT(ID),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("2019","-05") and user_org = ? 
2019-05-23 14:37:36 -==> Parameters: 2(String)
2019-05-23 14:37:36 -<==      Total: 1
2019-05-23 14:37:36 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("2019","-05") and user_org = ? 
2019-05-23 14:37:36 -==> Parameters: 2(String)
2019-05-23 14:37:36 -<==      Total: 1
2019-05-23 14:37:36 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("2019","-06") and user_org = ? 
2019-05-23 14:37:36 -==> Parameters: 2(String)
2019-05-23 14:37:36 -<==      Total: 1
2019-05-23 14:37:36 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("2019","-06") and user_org = ? 
2019-05-23 14:37:36 -==> Parameters: 2(String)
2019-05-23 14:37:36 -<==      Total: 1
2019-05-23 14:37:36 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("2019","-07") and user_org = ? 
2019-05-23 14:37:36 -==> Parameters: 2(String)
2019-05-23 14:37:36 -<==      Total: 1
2019-05-23 14:37:36 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("2019","-07") and user_org = ? 
2019-05-23 14:37:36 -==> Parameters: 2(String)
2019-05-23 14:37:36 -<==      Total: 1
2019-05-23 14:37:36 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("2019","-08") and user_org = ? 
2019-05-23 14:37:36 -==> Parameters: 2(String)
2019-05-23 14:37:36 -<==      Total: 1
2019-05-23 14:37:36 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("2019","-08") and user_org = ? 
2019-05-23 14:37:36 -==> Parameters: 2(String)
2019-05-23 14:37:36 -<==      Total: 1
2019-05-23 14:37:36 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("2019","-09") and user_org = ? 
2019-05-23 14:37:36 -==> Parameters: 2(String)
2019-05-23 14:37:36 -<==      Total: 1
2019-05-23 14:37:36 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("2019","-09") and user_org = ? 
2019-05-23 14:37:36 -==> Parameters: 2(String)
2019-05-23 14:37:36 -<==      Total: 1
2019-05-23 14:37:36 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("2019","-10") and user_org = ? 
2019-05-23 14:37:36 -==> Parameters: 2(String)
2019-05-23 14:37:36 -<==      Total: 1
2019-05-23 14:37:36 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("2019","-10") and user_org = ? 
2019-05-23 14:37:36 -==> Parameters: 2(String)
2019-05-23 14:37:36 -<==      Total: 1
2019-05-23 14:37:36 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("2019","-11") and user_org = ? 
2019-05-23 14:37:36 -==> Parameters: 2(String)
2019-05-23 14:37:36 -<==      Total: 1
2019-05-23 14:37:36 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("2019","-11") and user_org = ? 
2019-05-23 14:37:36 -==> Parameters: 2(String)
2019-05-23 14:37:36 -<==      Total: 1
2019-05-23 14:37:36 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("2019","-12") and user_org = ? 
2019-05-23 14:37:36 -==> Parameters: 2(String)
2019-05-23 14:37:36 -<==      Total: 1
2019-05-23 14:37:36 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("2019","-12") and user_org = ? 
2019-05-23 14:37:36 -==> Parameters: 2(String)
2019-05-23 14:37:36 -<==      Total: 1
2019-05-23 14:37:36 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM HEAT_LOG WHERE `create_time` = CONCAT("2019","-01") and user_org = ? 
2019-05-23 14:37:36 -==> Parameters: 2(String)
2019-05-23 14:37:36 -<==      Total: 1
2019-05-23 14:37:36 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE `create_time` = CONCAT("2019","-01") 
2019-05-23 14:37:36 -==> Parameters: 
2019-05-23 14:37:36 -<==      Total: 1
2019-05-23 14:37:36 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM HEAT_LOG WHERE `create_time` = CONCAT("2019","-02") and user_org = ? 
2019-05-23 14:37:36 -==> Parameters: 2(String)
2019-05-23 14:37:36 -<==      Total: 1
2019-05-23 14:37:36 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE `create_time` = CONCAT("2019","-02") and user_org = ? 
2019-05-23 14:37:36 -==> Parameters: 2(String)
2019-05-23 14:37:36 -<==      Total: 1
2019-05-23 14:37:36 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM HEAT_LOG WHERE `create_time` = CONCAT("2019","-03") and user_org = ? 
2019-05-23 14:37:36 -==> Parameters: 2(String)
2019-05-23 14:37:36 -<==      Total: 1
2019-05-23 14:37:36 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE `create_time` = CONCAT("2019","-03") and user_org = ? 
2019-05-23 14:37:36 -==> Parameters: 2(String)
2019-05-23 14:37:36 -<==      Total: 1
2019-05-23 14:37:36 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM HEAT_LOG WHERE `create_time` = CONCAT("2019","-04") and user_org = ? 
2019-05-23 14:37:36 -==> Parameters: 2(String)
2019-05-23 14:37:36 -<==      Total: 1
2019-05-23 14:37:36 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE `create_time` = CONCAT("2019","-04") and user_org = ? 
2019-05-23 14:37:36 -==> Parameters: 2(String)
2019-05-23 14:37:36 -<==      Total: 1
2019-05-23 14:37:36 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM HEAT_LOG WHERE `create_time` = CONCAT("2019","-05") and user_org = ? 
2019-05-23 14:37:36 -==> Parameters: 2(String)
2019-05-23 14:37:36 -<==      Total: 1
2019-05-23 14:37:36 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE `create_time` = CONCAT("2019","-05") and user_org = ? 
2019-05-23 14:37:36 -==> Parameters: 2(String)
2019-05-23 14:37:36 -<==      Total: 1
2019-05-23 14:37:36 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM HEAT_LOG WHERE `create_time` = CONCAT("2019","-06") and user_org = ? 
2019-05-23 14:37:36 -==> Parameters: 2(String)
2019-05-23 14:37:36 -<==      Total: 1
2019-05-23 14:37:36 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE `create_time` = CONCAT("2019","-06") and user_org = ? 
2019-05-23 14:37:36 -==> Parameters: 2(String)
2019-05-23 14:37:36 -<==      Total: 1
2019-05-23 14:37:36 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM HEAT_LOG WHERE `create_time` = CONCAT("2019","-07") and user_org = ? 
2019-05-23 14:37:36 -==> Parameters: 2(String)
2019-05-23 14:37:36 -<==      Total: 1
2019-05-23 14:37:36 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE `create_time` = CONCAT("2019","-07") and user_org = ? 
2019-05-23 14:37:36 -==> Parameters: 2(String)
2019-05-23 14:37:36 -<==      Total: 1
2019-05-23 14:37:36 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM HEAT_LOG WHERE `create_time` = CONCAT("2019","-08") and user_org = ? 
2019-05-23 14:37:36 -==> Parameters: 2(String)
2019-05-23 14:37:36 -<==      Total: 1
2019-05-23 14:37:36 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE `create_time` = CONCAT("2019","-08") and user_org = ? 
2019-05-23 14:37:36 -==> Parameters: 2(String)
2019-05-23 14:37:36 -<==      Total: 1
2019-05-23 14:37:36 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM HEAT_LOG WHERE `create_time` = CONCAT("2019","-09") and user_org = ? 
2019-05-23 14:37:36 -==> Parameters: 2(String)
2019-05-23 14:37:36 -<==      Total: 1
2019-05-23 14:37:36 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE `create_time` = CONCAT("2019","-09") and user_org = ? 
2019-05-23 14:37:36 -==> Parameters: 2(String)
2019-05-23 14:37:36 -<==      Total: 1
2019-05-23 14:37:36 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM HEAT_LOG WHERE `create_time` = CONCAT("2019","-10") and user_org = ? 
2019-05-23 14:37:36 -==> Parameters: 2(String)
2019-05-23 14:37:36 -<==      Total: 1
2019-05-23 14:37:36 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE `create_time` = CONCAT("2019","-10") and user_org = ? 
2019-05-23 14:37:36 -==> Parameters: 2(String)
2019-05-23 14:37:36 -<==      Total: 1
2019-05-23 14:37:36 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM HEAT_LOG WHERE `create_time` = CONCAT("2019","-11") and user_org = ? 
2019-05-23 14:37:36 -==> Parameters: 2(String)
2019-05-23 14:37:36 -<==      Total: 1
2019-05-23 14:37:36 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE `create_time` = CONCAT("2019","-11") and user_org = ? 
2019-05-23 14:37:36 -==> Parameters: 2(String)
2019-05-23 14:37:36 -<==      Total: 1
2019-05-23 14:37:36 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM HEAT_LOG WHERE `create_time` = CONCAT("2019","-12") and user_org = ? 
2019-05-23 14:37:36 -==> Parameters: 2(String)
2019-05-23 14:37:36 -<==      Total: 1
2019-05-23 14:37:36 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE `create_time` = CONCAT("2019","-12") and user_org = ? 
2019-05-23 14:37:36 -==> Parameters: 2(String)
2019-05-23 14:37:36 -<==      Total: 1
2019-05-23 14:37:36 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM WATER_LOG WHERE `create_time` = CONCAT("2019","-01") and user_org = ? 
2019-05-23 14:37:36 -==> Parameters: 2(String)
2019-05-23 14:37:36 -<==      Total: 1
2019-05-23 14:37:36 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `create_time` = CONCAT("2019","-01") and user_org = ? 
2019-05-23 14:37:36 -==> Parameters: 2(String)
2019-05-23 14:37:36 -<==      Total: 1
2019-05-23 14:37:36 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM WATER_LOG WHERE `create_time` = CONCAT("2019","-02") and user_org = ? 
2019-05-23 14:37:36 -==> Parameters: 2(String)
2019-05-23 14:37:36 -<==      Total: 1
2019-05-23 14:37:36 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `create_time` = CONCAT("2019","-02") and user_org = ? 
2019-05-23 14:37:36 -==> Parameters: 2(String)
2019-05-23 14:37:36 -<==      Total: 1
2019-05-23 14:37:36 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM WATER_LOG WHERE `create_time` = CONCAT("2019","-03") and user_org = ? 
2019-05-23 14:37:36 -==> Parameters: 2(String)
2019-05-23 14:37:36 -<==      Total: 1
2019-05-23 14:37:36 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `create_time` = CONCAT("2019","-03") and user_org = ? 
2019-05-23 14:37:36 -==> Parameters: 2(String)
2019-05-23 14:37:36 -<==      Total: 1
2019-05-23 14:37:36 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM WATER_LOG WHERE `create_time` = CONCAT("2019","-04") and user_org = ? 
2019-05-23 14:37:36 -==> Parameters: 2(String)
2019-05-23 14:37:36 -<==      Total: 1
2019-05-23 14:37:36 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `create_time` = CONCAT("2019","-04") and user_org = ? 
2019-05-23 14:37:36 -==> Parameters: 2(String)
2019-05-23 14:37:36 -<==      Total: 1
2019-05-23 14:37:36 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM WATER_LOG WHERE `create_time` = CONCAT("2019","-05") and user_org = ? 
2019-05-23 14:37:36 -==> Parameters: 2(String)
2019-05-23 14:37:36 -<==      Total: 1
2019-05-23 14:37:36 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `create_time` = CONCAT("2019","-05") and user_org = ? 
2019-05-23 14:37:36 -==> Parameters: 2(String)
2019-05-23 14:37:36 -<==      Total: 1
2019-05-23 14:37:36 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM WATER_LOG WHERE `create_time` = CONCAT("2019","-06") and user_org = ? 
2019-05-23 14:37:36 -==> Parameters: 2(String)
2019-05-23 14:37:36 -<==      Total: 1
2019-05-23 14:37:36 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `create_time` = CONCAT("2019","-06") and user_org = ? 
2019-05-23 14:37:36 -==> Parameters: 2(String)
2019-05-23 14:37:36 -<==      Total: 1
2019-05-23 14:37:36 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM WATER_LOG WHERE `create_time` = CONCAT("2019","-07") and user_org = ? 
2019-05-23 14:37:36 -==> Parameters: 2(String)
2019-05-23 14:37:36 -<==      Total: 1
2019-05-23 14:37:36 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `create_time` = CONCAT("2019","-07") and user_org = ? 
2019-05-23 14:37:36 -==> Parameters: 2(String)
2019-05-23 14:37:36 -<==      Total: 1
2019-05-23 14:37:36 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM WATER_LOG WHERE `create_time` = CONCAT("2019","-08") and user_org = ? 
2019-05-23 14:37:36 -==> Parameters: 2(String)
2019-05-23 14:37:36 -<==      Total: 1
2019-05-23 14:37:36 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `create_time` = CONCAT("2019","-08") and user_org = ? 
2019-05-23 14:37:36 -==> Parameters: 2(String)
2019-05-23 14:37:36 -<==      Total: 1
2019-05-23 14:37:36 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM WATER_LOG WHERE `create_time` = CONCAT("2019","-09") and user_org = ? 
2019-05-23 14:37:36 -==> Parameters: 2(String)
2019-05-23 14:37:36 -<==      Total: 1
2019-05-23 14:37:36 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `create_time` = CONCAT("2019","-09") and user_org = ? 
2019-05-23 14:37:36 -==> Parameters: 2(String)
2019-05-23 14:37:36 -<==      Total: 1
2019-05-23 14:37:36 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM WATER_LOG WHERE `create_time` = CONCAT("2019","-10") and user_org = ? 
2019-05-23 14:37:36 -==> Parameters: 2(String)
2019-05-23 14:37:36 -<==      Total: 1
2019-05-23 14:37:36 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `create_time` = CONCAT("2019","-10") and user_org = ? 
2019-05-23 14:37:36 -==> Parameters: 2(String)
2019-05-23 14:37:36 -<==      Total: 1
2019-05-23 14:37:36 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM WATER_LOG WHERE `create_time` = CONCAT("2019","-11") and user_org = ? 
2019-05-23 14:37:36 -==> Parameters: 2(String)
2019-05-23 14:37:36 -<==      Total: 1
2019-05-23 14:37:36 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `create_time` = CONCAT("2019","-11") and user_org = ? 
2019-05-23 14:37:36 -==> Parameters: 2(String)
2019-05-23 14:37:36 -<==      Total: 1
2019-05-23 14:37:36 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM WATER_LOG WHERE `create_time` = CONCAT("2019","-12") and user_org = ? 
2019-05-23 14:37:36 -==> Parameters: 2(String)
2019-05-23 14:37:36 -<==      Total: 1
2019-05-23 14:37:36 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `create_time` = CONCAT("2019","-12") and user_org = ? 
2019-05-23 14:37:36 -==> Parameters: 2(String)
2019-05-23 14:37:36 -<==      Total: 1
2019-05-23 14:37:36 -耗时 : 496
2019-05-23 14:37:36 -返回值 : {waterLogSum9=0, elecLogSum1=0, waterLogSum8=0, elecLogSum2=4244, waterLogSum7=0, elecLogSum3=392, waterLogSum6=0, elecLogSum4=0, waterLogSum5=0, elecLogSum5=0, waterLogSum4=112, elecLogSum6=0, waterLogSum3=273, elecLogSum7=0, waterLogSum2=0, elecLogSum8=0, waterLogSum1=0, totalCount=52, elecLogSum9=0, heatLogSum9=0, heatLogSum8=0, heatLogSum7=0, elecLogSum10=0, elecLogSum11=0, elecLogSum12=0, heatLogSum10=0, heatLogSum11=0, heatLogSum12=0, heatLogSum6=0, totalSum=5266, heatLogSum5=0, heatLogSum4=1, heatLogSum3=244, heatLogSum2=0, heatLogSum1=0, waterLogSum10=0, waterLogSum11=0, waterLogSum12=0}
2019-05-23 14:37:51 -Validating all active sessions...
2019-05-23 14:37:51 -Finished session validation.  No sessions were stopped.
2019-05-23 14:38:18 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 6 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(5)-CONNECTED(5)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 60], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 10], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 2601]
2019-05-23 14:38:32 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-05-23 14:38:32 -HTTP METHOD : GET
2019-05-23 14:38:32 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-23 14:38:32 -参数 : []
2019-05-23 14:38:32 -耗时 : 22
2019-05-23 14:38:32 -返回值 : charts/tableElecMM
2019-05-23 14:38:33 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-23 14:38:33 -HTTP METHOD : GET
2019-05-23 14:38:33 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-23 14:38:33 -参数 : [userType]
2019-05-23 14:38:33 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-23 14:38:33 -==> Parameters: userType(String)
2019-05-23 14:38:33 -<==      Total: 4
2019-05-23 14:38:33 -耗时 : 5
2019-05-23 14:38:33 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-23 14:38:35 -请求地址 : http://localhost:8081/charts/countMM
2019-05-23 14:38:35 -HTTP METHOD : GET
2019-05-23 14:38:35 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-05-23 14:38:35 -参数 : []
2019-05-23 14:38:35 -耗时 : 22
2019-05-23 14:38:35 -返回值 : charts/countMM
2019-05-23 14:38:35 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-23 14:38:35 -HTTP METHOD : GET
2019-05-23 14:38:35 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-23 14:38:35 -参数 : [userType]
2019-05-23 14:38:35 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-23 14:38:35 -==> Parameters: userType(String)
2019-05-23 14:38:35 -<==      Total: 4
2019-05-23 14:38:35 -耗时 : 5
2019-05-23 14:38:35 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-23 14:38:38 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-23 14:38:38 -HTTP METHOD : GET
2019-05-23 14:38:38 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-23 14:38:38 -参数 : []
2019-05-23 14:38:38 -耗时 : 1
2019-05-23 14:38:38 -返回值 : system/dept/deptTree
2019-05-23 14:38:38 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-23 14:38:38 -HTTP METHOD : GET
2019-05-23 14:38:38 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-23 14:38:38 -参数 : []
2019-05-23 14:38:38 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-23 14:38:38 -==> Parameters: 
2019-05-23 14:38:38 -<==      Total: 3
2019-05-23 14:38:38 -耗时 : 9
2019-05-23 14:38:38 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-23 14:38:58 -请求地址 : http://localhost:8081/charts/countMM/getCountMM
2019-05-23 14:38:58 -HTTP METHOD : POST
2019-05-23 14:38:58 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.getCountMM
2019-05-23 14:38:58 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@64df8fca, com.bootdo.moneyLog.vo.WaterLogVo@2d87c3b, com.bootdo.moneyLog.vo.HeatLogVo@3d07896e]
2019-05-23 14:38:58 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-23 14:38:58 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 14:38:58 -<==      Total: 1
2019-05-23 14:38:58 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-23 14:38:58 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 14:38:58 -<==      Total: 1
2019-05-23 14:38:58 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-23 14:38:58 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 14:38:58 -<==      Total: 1
2019-05-23 14:38:58 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-23 14:38:58 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 14:38:58 -<==      Total: 1
2019-05-23 14:38:58 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-23 14:38:58 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 14:38:58 -<==      Total: 1
2019-05-23 14:38:58 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-23 14:38:58 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 14:38:58 -<==      Total: 1
2019-05-23 14:38:58 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-23 14:38:58 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 14:38:58 -<==      Total: 1
2019-05-23 14:38:58 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-23 14:38:58 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 14:38:58 -<==      Total: 1
2019-05-23 14:38:58 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-05-23 14:38:58 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 14:38:58 -<==      Total: 1
2019-05-23 14:38:58 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-05-23 14:38:58 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 14:38:58 -<==      Total: 1
2019-05-23 14:38:58 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-05-23 14:38:58 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 14:38:58 -<==      Total: 1
2019-05-23 14:38:58 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-05-23 14:38:58 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 14:38:58 -<==      Total: 1
2019-05-23 14:38:58 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-05-23 14:38:58 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 14:38:58 -<==      Total: 1
2019-05-23 14:38:58 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-05-23 14:38:58 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 14:38:58 -<==      Total: 1
2019-05-23 14:38:58 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-05-23 14:38:58 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 14:38:58 -<==      Total: 1
2019-05-23 14:38:58 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-05-23 14:38:58 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 14:38:58 -<==      Total: 1
2019-05-23 14:38:58 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-05-23 14:38:58 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 14:38:58 -<==      Total: 1
2019-05-23 14:38:58 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-05-23 14:38:58 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 14:38:58 -<==      Total: 1
2019-05-23 14:38:58 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-05-23 14:38:58 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 14:38:58 -<==      Total: 1
2019-05-23 14:38:58 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-05-23 14:38:58 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 14:38:58 -<==      Total: 1
2019-05-23 14:38:58 -==>  Preparing: SELECT ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-05-23 14:38:58 -Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]
2019-05-23 14:38:59 -SQLErrorCodes loaded: [DB2, Derby, H2, HDB, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase]
2019-05-23 14:38:59 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-23 14:38:59 -
### Error querying database.  Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :'),0),0) FROM ELEC_LOG
	   	  WHERE ',expect RPAREN, actual RPAREN ID : SELECT ifnull(COUNT(ID),0),0) FROM ELEC_LOG
	   	  WHERE ELEC_TYPE = "11"
 			 
	   and `create_time` = ?
	  
	  
	  
	   and user_org = ?
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\ElecLogMapper.xml]
### The error may involve com.bootdo.moneyLog.dao.ElecLogDao.CountZElecLog
### The error occurred while executing a query
### SQL: SELECT ifnull(COUNT(ID),0),0) FROM ELEC_LOG        WHERE ELEC_TYPE = "11"           and `create_time` = ?                 and user_org = ?
### Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :'),0),0) FROM ELEC_LOG
	   	  WHERE ',expect RPAREN, actual RPAREN ID : SELECT ifnull(COUNT(ID),0),0) FROM ELEC_LOG
	   	  WHERE ELEC_TYPE = "11"
 			 
	   and `create_time` = ?
	  
	  
	  
	   and user_org = ?
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, syntax error: syntax error, error in :'),0),0) FROM ELEC_LOG
	   	  WHERE ',expect RPAREN, actual RPAREN ID : SELECT ifnull(COUNT(ID),0),0) FROM ELEC_LOG
	   	  WHERE ELEC_TYPE = "11"
 			 
	   and `create_time` = ?
	  
	  
	  
	   and user_org = ?; nested exception is java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :'),0),0) FROM ELEC_LOG
	   	  WHERE ',expect RPAREN, actual RPAREN ID : SELECT ifnull(COUNT(ID),0),0) FROM ELEC_LOG
	   	  WHERE ELEC_TYPE = "11"
 			 
	   and `create_time` = ?
	  
	  
	  
	   and user_org = ?
org.springframework.jdbc.UncategorizedSQLException: 
### Error querying database.  Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :'),0),0) FROM ELEC_LOG
	   	  WHERE ',expect RPAREN, actual RPAREN ID : SELECT ifnull(COUNT(ID),0),0) FROM ELEC_LOG
	   	  WHERE ELEC_TYPE = "11"
 			 
	   and `create_time` = ?
	  
	  
	  
	   and user_org = ?
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\ElecLogMapper.xml]
### The error may involve com.bootdo.moneyLog.dao.ElecLogDao.CountZElecLog
### The error occurred while executing a query
### SQL: SELECT ifnull(COUNT(ID),0),0) FROM ELEC_LOG        WHERE ELEC_TYPE = "11"           and `create_time` = ?                 and user_org = ?
### Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :'),0),0) FROM ELEC_LOG
	   	  WHERE ',expect RPAREN, actual RPAREN ID : SELECT ifnull(COUNT(ID),0),0) FROM ELEC_LOG
	   	  WHERE ELEC_TYPE = "11"
 			 
	   and `create_time` = ?
	  
	  
	  
	   and user_org = ?
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, syntax error: syntax error, error in :'),0),0) FROM ELEC_LOG
	   	  WHERE ',expect RPAREN, actual RPAREN ID : SELECT ifnull(COUNT(ID),0),0) FROM ELEC_LOG
	   	  WHERE ELEC_TYPE = "11"
 			 
	   and `create_time` = ?
	  
	  
	  
	   and user_org = ?; nested exception is java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :'),0),0) FROM ELEC_LOG
	   	  WHERE ',expect RPAREN, actual RPAREN ID : SELECT ifnull(COUNT(ID),0),0) FROM ELEC_LOG
	   	  WHERE ELEC_TYPE = "11"
 			 
	   and `create_time` = ?
	  
	  
	  
	   and user_org = ?
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:89)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:167)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:82)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy102.CountZElecLog(Unknown Source)
	at com.bootdo.moneyLog.service.impl.ElecLogServiceImpl.CountZElecLog(ElecLogServiceImpl.java:253)
	at com.bootdo.charts.controller.countMMController.getCountMM(countMMController.java:77)
	at com.bootdo.charts.controller.countMMController$$FastClassBySpringCGLIB$$81fa892e.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor127.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.countMMController$$EnhancerBySpringCGLIB$$4d5aff67.getCountMM(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :'),0),0) FROM ELEC_LOG
	   	  WHERE ',expect RPAREN, actual RPAREN ID : SELECT ifnull(COUNT(ID),0),0) FROM ELEC_LOG
	   	  WHERE ELEC_TYPE = "11"
 			 
	   and `create_time` = ?
	  
	  
	  
	   and user_org = ?
	at com.alibaba.druid.wall.WallFilter.check(WallFilter.java:725)
	at com.alibaba.druid.wall.WallFilter.connection_prepareStatement(WallFilter.java:253)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:448)
	at com.alibaba.druid.filter.FilterAdapter.connection_prepareStatement(FilterAdapter.java:928)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_prepareStatement(FilterEventAdapter.java:122)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:448)
	at com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl.prepareStatement(ConnectionProxyImpl.java:342)
	at com.alibaba.druid.pool.DruidPooledConnection.prepareStatement(DruidPooledConnection.java:331)
	at sun.reflect.GeneratedMethodAccessor129.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.ConnectionLogger.invoke(ConnectionLogger.java:55)
	at com.sun.proxy.$Proxy172.prepareStatement(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.instantiateStatement(PreparedStatementHandler.java:87)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.prepare(BaseStatementHandler.java:88)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.prepare(RoutingStatementHandler.java:59)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:85)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:77)
	at sun.reflect.GeneratedMethodAccessor139.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 99 common frames omitted
Caused by: com.alibaba.druid.sql.parser.ParserException: syntax error, error in :'),0),0) FROM ELEC_LOG
	   	  WHERE ',expect RPAREN, actual RPAREN ID
	at com.alibaba.druid.sql.parser.SQLParser.printError(SQLParser.java:239)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:362)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:79)
	at com.alibaba.druid.wall.WallProvider.checkInternal(WallProvider.java:620)
	at com.alibaba.druid.wall.WallProvider.check(WallProvider.java:574)
	at com.alibaba.druid.wall.WallFilter.check(WallFilter.java:712)
	... 127 common frames omitted
2019-05-23 14:38:59 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/countMM/getCountMM(String), org.springframework.jdbc.UncategorizedSQLException: 
### Error querying database.  Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :'),0),0) FROM ELEC_LOG
	   	  WHERE ',expect RPAREN, actual RPAREN ID : SELECT ifnull(COUNT(ID),0),0) FROM ELEC_LOG
	   	  WHERE ELEC_TYPE = "11"
 			 
	   and `create_time` = ?
	  
	  
	  
	   and user_org = ?
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\ElecLogMapper.xml]
### The error may involve com.bootdo.moneyLog.dao.ElecLogDao.CountZElecLog
### The error occurred while executing a query
### SQL: SELECT ifnull(COUNT(ID),0),0) FROM ELEC_LOG        WHERE ELEC_TYPE = "11"           and `create_time` = ?                 and user_org = ?
### Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :'),0),0) FROM ELEC_LOG
	   	  WHERE ',expect RPAREN, actual RPAREN ID : SELECT ifnull(COUNT(ID),0),0) FROM ELEC_LOG
	   	  WHERE ELEC_TYPE = "11"
 			 
	   and `create_time` = ?
	  
	  
	  
	   and user_org = ?
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, syntax error: syntax error, error in :'),0),0) FROM ELEC_LOG
	   	  WHERE ',expect RPAREN, actual RPAREN ID : SELECT ifnull(COUNT(ID),0),0) FROM ELEC_LOG
	   	  WHERE ELEC_TYPE = "11"
 			 
	   and `create_time` = ?
	  
	  
	  
	   and user_org = ?; nested exception is java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :'),0),0) FROM ELEC_LOG
	   	  WHERE ',expect RPAREN, actual RPAREN ID : SELECT ifnull(COUNT(ID),0),0) FROM ELEC_LOG
	   	  WHERE ELEC_TYPE = "11"
 			 
	   and `create_time` = ?
	  
	  
	  
	   and user_org = ?(String), null, 2019-05-23 14:38:59.097(Timestamp)
2019-05-23 14:38:59 -<==    Updates: 1
2019-05-23 14:39:00 -请求地址 : http://localhost:8081/charts/countMM/getCountMM
2019-05-23 14:39:00 -HTTP METHOD : POST
2019-05-23 14:39:00 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.getCountMM
2019-05-23 14:39:00 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@437d1f67, com.bootdo.moneyLog.vo.WaterLogVo@20276919, com.bootdo.moneyLog.vo.HeatLogVo@500ba0c1]
2019-05-23 14:39:00 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-23 14:39:00 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 14:39:00 -<==      Total: 1
2019-05-23 14:39:00 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-23 14:39:00 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 14:39:00 -<==      Total: 1
2019-05-23 14:39:00 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-23 14:39:00 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 14:39:00 -<==      Total: 1
2019-05-23 14:39:00 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-23 14:39:00 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 14:39:00 -<==      Total: 1
2019-05-23 14:39:00 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-23 14:39:00 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 14:39:00 -<==      Total: 1
2019-05-23 14:39:00 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-23 14:39:00 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 14:39:00 -<==      Total: 1
2019-05-23 14:39:00 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-23 14:39:00 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 14:39:00 -<==      Total: 1
2019-05-23 14:39:00 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-23 14:39:00 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 14:39:00 -<==      Total: 1
2019-05-23 14:39:00 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-05-23 14:39:00 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 14:39:00 -<==      Total: 1
2019-05-23 14:39:00 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-05-23 14:39:00 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 14:39:00 -<==      Total: 1
2019-05-23 14:39:00 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-05-23 14:39:00 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 14:39:00 -<==      Total: 1
2019-05-23 14:39:00 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-05-23 14:39:00 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 14:39:00 -<==      Total: 1
2019-05-23 14:39:00 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-05-23 14:39:00 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 14:39:00 -<==      Total: 1
2019-05-23 14:39:00 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-05-23 14:39:00 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 14:39:00 -<==      Total: 1
2019-05-23 14:39:00 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-05-23 14:39:00 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 14:39:00 -<==      Total: 1
2019-05-23 14:39:00 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-05-23 14:39:00 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 14:39:00 -<==      Total: 1
2019-05-23 14:39:00 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-05-23 14:39:00 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 14:39:00 -<==      Total: 1
2019-05-23 14:39:00 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-05-23 14:39:00 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 14:39:00 -<==      Total: 1
2019-05-23 14:39:00 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-05-23 14:39:00 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 14:39:00 -<==      Total: 1
2019-05-23 14:39:00 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-05-23 14:39:00 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 14:39:00 -<==      Total: 1
2019-05-23 14:39:00 -==>  Preparing: SELECT ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-05-23 14:39:00 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-23 14:39:00 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/countMM/getCountMM(String), org.springframework.jdbc.UncategorizedSQLException: 
### Error querying database.  Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :'),0),0) FROM ELEC_LOG
	   	  WHERE ',expect RPAREN, actual RPAREN ID : SELECT ifnull(COUNT(ID),0),0) FROM ELEC_LOG
	   	  WHERE ELEC_TYPE = "11"
 			 
	   and `create_time` = ?
	  
	  
	  
	   and user_org = ?
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\ElecLogMapper.xml]
### The error may involve com.bootdo.moneyLog.dao.ElecLogDao.CountZElecLog
### The error occurred while executing a query
### SQL: SELECT ifnull(COUNT(ID),0),0) FROM ELEC_LOG        WHERE ELEC_TYPE = "11"           and `create_time` = ?                 and user_org = ?
### Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :'),0),0) FROM ELEC_LOG
	   	  WHERE ',expect RPAREN, actual RPAREN ID : SELECT ifnull(COUNT(ID),0),0) FROM ELEC_LOG
	   	  WHERE ELEC_TYPE = "11"
 			 
	   and `create_time` = ?
	  
	  
	  
	   and user_org = ?
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, syntax error: syntax error, error in :'),0),0) FROM ELEC_LOG
	   	  WHERE ',expect RPAREN, actual RPAREN ID : SELECT ifnull(COUNT(ID),0),0) FROM ELEC_LOG
	   	  WHERE ELEC_TYPE = "11"
 			 
	   and `create_time` = ?
	  
	  
	  
	   and user_org = ?; nested exception is java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :'),0),0) FROM ELEC_LOG
	   	  WHERE ',expect RPAREN, actual RPAREN ID : SELECT ifnull(COUNT(ID),0),0) FROM ELEC_LOG
	   	  WHERE ELEC_TYPE = "11"
 			 
	   and `create_time` = ?
	  
	  
	  
	   and user_org = ?(String), null, 2019-05-23 14:39:00.409(Timestamp)
2019-05-23 14:39:00 -
### Error querying database.  Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :'),0),0) FROM ELEC_LOG
	   	  WHERE ',expect RPAREN, actual RPAREN ID : SELECT ifnull(COUNT(ID),0),0) FROM ELEC_LOG
	   	  WHERE ELEC_TYPE = "11"
 			 
	   and `create_time` = ?
	  
	  
	  
	   and user_org = ?
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\ElecLogMapper.xml]
### The error may involve com.bootdo.moneyLog.dao.ElecLogDao.CountZElecLog
### The error occurred while executing a query
### SQL: SELECT ifnull(COUNT(ID),0),0) FROM ELEC_LOG        WHERE ELEC_TYPE = "11"           and `create_time` = ?                 and user_org = ?
### Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :'),0),0) FROM ELEC_LOG
	   	  WHERE ',expect RPAREN, actual RPAREN ID : SELECT ifnull(COUNT(ID),0),0) FROM ELEC_LOG
	   	  WHERE ELEC_TYPE = "11"
 			 
	   and `create_time` = ?
	  
	  
	  
	   and user_org = ?
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, syntax error: syntax error, error in :'),0),0) FROM ELEC_LOG
	   	  WHERE ',expect RPAREN, actual RPAREN ID : SELECT ifnull(COUNT(ID),0),0) FROM ELEC_LOG
	   	  WHERE ELEC_TYPE = "11"
 			 
	   and `create_time` = ?
	  
	  
	  
	   and user_org = ?; nested exception is java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :'),0),0) FROM ELEC_LOG
	   	  WHERE ',expect RPAREN, actual RPAREN ID : SELECT ifnull(COUNT(ID),0),0) FROM ELEC_LOG
	   	  WHERE ELEC_TYPE = "11"
 			 
	   and `create_time` = ?
	  
	  
	  
	   and user_org = ?
org.springframework.jdbc.UncategorizedSQLException: 
### Error querying database.  Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :'),0),0) FROM ELEC_LOG
	   	  WHERE ',expect RPAREN, actual RPAREN ID : SELECT ifnull(COUNT(ID),0),0) FROM ELEC_LOG
	   	  WHERE ELEC_TYPE = "11"
 			 
	   and `create_time` = ?
	  
	  
	  
	   and user_org = ?
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\ElecLogMapper.xml]
### The error may involve com.bootdo.moneyLog.dao.ElecLogDao.CountZElecLog
### The error occurred while executing a query
### SQL: SELECT ifnull(COUNT(ID),0),0) FROM ELEC_LOG        WHERE ELEC_TYPE = "11"           and `create_time` = ?                 and user_org = ?
### Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :'),0),0) FROM ELEC_LOG
	   	  WHERE ',expect RPAREN, actual RPAREN ID : SELECT ifnull(COUNT(ID),0),0) FROM ELEC_LOG
	   	  WHERE ELEC_TYPE = "11"
 			 
	   and `create_time` = ?
	  
	  
	  
	   and user_org = ?
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, syntax error: syntax error, error in :'),0),0) FROM ELEC_LOG
	   	  WHERE ',expect RPAREN, actual RPAREN ID : SELECT ifnull(COUNT(ID),0),0) FROM ELEC_LOG
	   	  WHERE ELEC_TYPE = "11"
 			 
	   and `create_time` = ?
	  
	  
	  
	   and user_org = ?; nested exception is java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :'),0),0) FROM ELEC_LOG
	   	  WHERE ',expect RPAREN, actual RPAREN ID : SELECT ifnull(COUNT(ID),0),0) FROM ELEC_LOG
	   	  WHERE ELEC_TYPE = "11"
 			 
	   and `create_time` = ?
	  
	  
	  
	   and user_org = ?
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:89)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:167)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:82)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy102.CountZElecLog(Unknown Source)
	at com.bootdo.moneyLog.service.impl.ElecLogServiceImpl.CountZElecLog(ElecLogServiceImpl.java:253)
	at com.bootdo.charts.controller.countMMController.getCountMM(countMMController.java:77)
	at com.bootdo.charts.controller.countMMController$$FastClassBySpringCGLIB$$81fa892e.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor127.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.countMMController$$EnhancerBySpringCGLIB$$4d5aff67.getCountMM(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :'),0),0) FROM ELEC_LOG
	   	  WHERE ',expect RPAREN, actual RPAREN ID : SELECT ifnull(COUNT(ID),0),0) FROM ELEC_LOG
	   	  WHERE ELEC_TYPE = "11"
 			 
	   and `create_time` = ?
	  
	  
	  
	   and user_org = ?
	at com.alibaba.druid.wall.WallFilter.check(WallFilter.java:725)
	at com.alibaba.druid.wall.WallFilter.connection_prepareStatement(WallFilter.java:253)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:448)
	at com.alibaba.druid.filter.FilterAdapter.connection_prepareStatement(FilterAdapter.java:928)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_prepareStatement(FilterEventAdapter.java:122)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:448)
	at com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl.prepareStatement(ConnectionProxyImpl.java:342)
	at com.alibaba.druid.pool.DruidPooledConnection.prepareStatement(DruidPooledConnection.java:331)
	at sun.reflect.GeneratedMethodAccessor129.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.ConnectionLogger.invoke(ConnectionLogger.java:55)
	at com.sun.proxy.$Proxy172.prepareStatement(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.instantiateStatement(PreparedStatementHandler.java:87)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.prepare(BaseStatementHandler.java:88)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.prepare(RoutingStatementHandler.java:59)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:85)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:77)
	at sun.reflect.GeneratedMethodAccessor139.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 99 common frames omitted
Caused by: com.alibaba.druid.sql.parser.ParserException: syntax error, error in :'),0),0) FROM ELEC_LOG
	   	  WHERE ',expect RPAREN, actual RPAREN ID
	at com.alibaba.druid.sql.parser.SQLParser.printError(SQLParser.java:239)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:362)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:79)
	at com.alibaba.druid.wall.WallProvider.checkInternal(WallProvider.java:620)
	at com.alibaba.druid.wall.WallProvider.check(WallProvider.java:574)
	at com.alibaba.druid.wall.WallFilter.check(WallFilter.java:712)
	... 127 common frames omitted
2019-05-23 14:39:00 -<==    Updates: 1
2019-05-23 14:39:01 -请求地址 : http://localhost:8081/charts/countMM/getCountMM
2019-05-23 14:39:01 -HTTP METHOD : POST
2019-05-23 14:39:01 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.getCountMM
2019-05-23 14:39:01 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@69ec1a10, com.bootdo.moneyLog.vo.WaterLogVo@26b720ad, com.bootdo.moneyLog.vo.HeatLogVo@692f3abb]
2019-05-23 14:39:01 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-23 14:39:01 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 14:39:01 -<==      Total: 1
2019-05-23 14:39:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-23 14:39:01 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 14:39:01 -<==      Total: 1
2019-05-23 14:39:01 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-23 14:39:01 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 14:39:01 -<==      Total: 1
2019-05-23 14:39:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-23 14:39:01 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 14:39:01 -<==      Total: 1
2019-05-23 14:39:01 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-23 14:39:01 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 14:39:01 -<==      Total: 1
2019-05-23 14:39:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-23 14:39:01 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 14:39:01 -<==      Total: 1
2019-05-23 14:39:01 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-23 14:39:01 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 14:39:01 -<==      Total: 1
2019-05-23 14:39:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-23 14:39:01 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 14:39:01 -<==      Total: 1
2019-05-23 14:39:01 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-05-23 14:39:01 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 14:39:01 -<==      Total: 1
2019-05-23 14:39:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-05-23 14:39:01 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 14:39:01 -<==      Total: 1
2019-05-23 14:39:01 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-05-23 14:39:01 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 14:39:01 -<==      Total: 1
2019-05-23 14:39:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-05-23 14:39:01 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 14:39:01 -<==      Total: 1
2019-05-23 14:39:01 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-05-23 14:39:01 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 14:39:01 -<==      Total: 1
2019-05-23 14:39:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-05-23 14:39:01 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 14:39:01 -<==      Total: 1
2019-05-23 14:39:01 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-05-23 14:39:01 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 14:39:01 -<==      Total: 1
2019-05-23 14:39:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-05-23 14:39:01 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 14:39:01 -<==      Total: 1
2019-05-23 14:39:01 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-05-23 14:39:01 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 14:39:01 -<==      Total: 1
2019-05-23 14:39:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-05-23 14:39:01 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 14:39:01 -<==      Total: 1
2019-05-23 14:39:01 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-05-23 14:39:01 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 14:39:01 -<==      Total: 1
2019-05-23 14:39:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-05-23 14:39:01 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 14:39:01 -<==      Total: 1
2019-05-23 14:39:01 -==>  Preparing: SELECT ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-05-23 14:39:01 -
### Error querying database.  Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :'),0),0) FROM ELEC_LOG
	   	  WHERE ',expect RPAREN, actual RPAREN ID : SELECT ifnull(COUNT(ID),0),0) FROM ELEC_LOG
	   	  WHERE ELEC_TYPE = "11"
 			 
	   and `create_time` = ?
	  
	  
	  
	   and user_org = ?
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\ElecLogMapper.xml]
### The error may involve com.bootdo.moneyLog.dao.ElecLogDao.CountZElecLog
### The error occurred while executing a query
### SQL: SELECT ifnull(COUNT(ID),0),0) FROM ELEC_LOG        WHERE ELEC_TYPE = "11"           and `create_time` = ?                 and user_org = ?
### Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :'),0),0) FROM ELEC_LOG
	   	  WHERE ',expect RPAREN, actual RPAREN ID : SELECT ifnull(COUNT(ID),0),0) FROM ELEC_LOG
	   	  WHERE ELEC_TYPE = "11"
 			 
	   and `create_time` = ?
	  
	  
	  
	   and user_org = ?
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, syntax error: syntax error, error in :'),0),0) FROM ELEC_LOG
	   	  WHERE ',expect RPAREN, actual RPAREN ID : SELECT ifnull(COUNT(ID),0),0) FROM ELEC_LOG
	   	  WHERE ELEC_TYPE = "11"
 			 
	   and `create_time` = ?
	  
	  
	  
	   and user_org = ?; nested exception is java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :'),0),0) FROM ELEC_LOG
	   	  WHERE ',expect RPAREN, actual RPAREN ID : SELECT ifnull(COUNT(ID),0),0) FROM ELEC_LOG
	   	  WHERE ELEC_TYPE = "11"
 			 
	   and `create_time` = ?
	  
	  
	  
	   and user_org = ?
org.springframework.jdbc.UncategorizedSQLException: 
### Error querying database.  Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :'),0),0) FROM ELEC_LOG
	   	  WHERE ',expect RPAREN, actual RPAREN ID : SELECT ifnull(COUNT(ID),0),0) FROM ELEC_LOG
	   	  WHERE ELEC_TYPE = "11"
 			 
	   and `create_time` = ?
	  
	  
	  
	   and user_org = ?
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\ElecLogMapper.xml]
### The error may involve com.bootdo.moneyLog.dao.ElecLogDao.CountZElecLog
### The error occurred while executing a query
### SQL: SELECT ifnull(COUNT(ID),0),0) FROM ELEC_LOG        WHERE ELEC_TYPE = "11"           and `create_time` = ?                 and user_org = ?
### Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :'),0),0) FROM ELEC_LOG
	   	  WHERE ',expect RPAREN, actual RPAREN ID : SELECT ifnull(COUNT(ID),0),0) FROM ELEC_LOG
	   	  WHERE ELEC_TYPE = "11"
 			 
	   and `create_time` = ?
	  
	  
	  
	   and user_org = ?
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, syntax error: syntax error, error in :'),0),0) FROM ELEC_LOG
	   	  WHERE ',expect RPAREN, actual RPAREN ID : SELECT ifnull(COUNT(ID),0),0) FROM ELEC_LOG
	   	  WHERE ELEC_TYPE = "11"
 			 
	   and `create_time` = ?
	  
	  
	  
	   and user_org = ?; nested exception is java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :'),0),0) FROM ELEC_LOG
	   	  WHERE ',expect RPAREN, actual RPAREN ID : SELECT ifnull(COUNT(ID),0),0) FROM ELEC_LOG
	   	  WHERE ELEC_TYPE = "11"
 			 
	   and `create_time` = ?
	  
	  
	  
	   and user_org = ?
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:89)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:167)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:82)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy102.CountZElecLog(Unknown Source)
	at com.bootdo.moneyLog.service.impl.ElecLogServiceImpl.CountZElecLog(ElecLogServiceImpl.java:253)
	at com.bootdo.charts.controller.countMMController.getCountMM(countMMController.java:77)
	at com.bootdo.charts.controller.countMMController$$FastClassBySpringCGLIB$$81fa892e.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor127.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.countMMController$$EnhancerBySpringCGLIB$$4d5aff67.getCountMM(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :'),0),0) FROM ELEC_LOG
	   	  WHERE ',expect RPAREN, actual RPAREN ID : SELECT ifnull(COUNT(ID),0),0) FROM ELEC_LOG
	   	  WHERE ELEC_TYPE = "11"
 			 
	   and `create_time` = ?
	  
	  
	  
	   and user_org = ?
	at com.alibaba.druid.wall.WallFilter.check(WallFilter.java:725)
	at com.alibaba.druid.wall.WallFilter.connection_prepareStatement(WallFilter.java:253)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:448)
	at com.alibaba.druid.filter.FilterAdapter.connection_prepareStatement(FilterAdapter.java:928)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_prepareStatement(FilterEventAdapter.java:122)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:448)
	at com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl.prepareStatement(ConnectionProxyImpl.java:342)
	at com.alibaba.druid.pool.DruidPooledConnection.prepareStatement(DruidPooledConnection.java:331)
	at sun.reflect.GeneratedMethodAccessor129.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.ConnectionLogger.invoke(ConnectionLogger.java:55)
	at com.sun.proxy.$Proxy172.prepareStatement(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.instantiateStatement(PreparedStatementHandler.java:87)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.prepare(BaseStatementHandler.java:88)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.prepare(RoutingStatementHandler.java:59)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:85)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:77)
	at sun.reflect.GeneratedMethodAccessor139.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 99 common frames omitted
Caused by: com.alibaba.druid.sql.parser.ParserException: syntax error, error in :'),0),0) FROM ELEC_LOG
	   	  WHERE ',expect RPAREN, actual RPAREN ID
	at com.alibaba.druid.sql.parser.SQLParser.printError(SQLParser.java:239)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:362)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:79)
	at com.alibaba.druid.wall.WallProvider.checkInternal(WallProvider.java:620)
	at com.alibaba.druid.wall.WallProvider.check(WallProvider.java:574)
	at com.alibaba.druid.wall.WallFilter.check(WallFilter.java:712)
	... 127 common frames omitted
2019-05-23 14:39:01 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-23 14:39:01 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/countMM/getCountMM(String), org.springframework.jdbc.UncategorizedSQLException: 
### Error querying database.  Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :'),0),0) FROM ELEC_LOG
	   	  WHERE ',expect RPAREN, actual RPAREN ID : SELECT ifnull(COUNT(ID),0),0) FROM ELEC_LOG
	   	  WHERE ELEC_TYPE = "11"
 			 
	   and `create_time` = ?
	  
	  
	  
	   and user_org = ?
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\ElecLogMapper.xml]
### The error may involve com.bootdo.moneyLog.dao.ElecLogDao.CountZElecLog
### The error occurred while executing a query
### SQL: SELECT ifnull(COUNT(ID),0),0) FROM ELEC_LOG        WHERE ELEC_TYPE = "11"           and `create_time` = ?                 and user_org = ?
### Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :'),0),0) FROM ELEC_LOG
	   	  WHERE ',expect RPAREN, actual RPAREN ID : SELECT ifnull(COUNT(ID),0),0) FROM ELEC_LOG
	   	  WHERE ELEC_TYPE = "11"
 			 
	   and `create_time` = ?
	  
	  
	  
	   and user_org = ?
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, syntax error: syntax error, error in :'),0),0) FROM ELEC_LOG
	   	  WHERE ',expect RPAREN, actual RPAREN ID : SELECT ifnull(COUNT(ID),0),0) FROM ELEC_LOG
	   	  WHERE ELEC_TYPE = "11"
 			 
	   and `create_time` = ?
	  
	  
	  
	   and user_org = ?; nested exception is java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :'),0),0) FROM ELEC_LOG
	   	  WHERE ',expect RPAREN, actual RPAREN ID : SELECT ifnull(COUNT(ID),0),0) FROM ELEC_LOG
	   	  WHERE ELEC_TYPE = "11"
 			 
	   and `create_time` = ?
	  
	  
	  
	   and user_org = ?(String), null, 2019-05-23 14:39:01.767(Timestamp)
2019-05-23 14:39:01 -<==    Updates: 1
2019-05-23 14:39:02 -请求地址 : http://localhost:8081/charts/countMM/getCountMM
2019-05-23 14:39:02 -HTTP METHOD : POST
2019-05-23 14:39:02 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.getCountMM
2019-05-23 14:39:02 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@63a3baa4, com.bootdo.moneyLog.vo.WaterLogVo@7626f018, com.bootdo.moneyLog.vo.HeatLogVo@3ea7b9e6]
2019-05-23 14:39:02 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-23 14:39:02 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 14:39:02 -<==      Total: 1
2019-05-23 14:39:02 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-23 14:39:02 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 14:39:02 -<==      Total: 1
2019-05-23 14:39:02 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-23 14:39:02 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 14:39:02 -<==      Total: 1
2019-05-23 14:39:02 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-23 14:39:02 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 14:39:02 -<==      Total: 1
2019-05-23 14:39:02 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-23 14:39:02 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 14:39:02 -<==      Total: 1
2019-05-23 14:39:02 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-23 14:39:02 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 14:39:02 -<==      Total: 1
2019-05-23 14:39:02 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-23 14:39:02 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 14:39:02 -<==      Total: 1
2019-05-23 14:39:02 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-23 14:39:02 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 14:39:02 -<==      Total: 1
2019-05-23 14:39:02 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-05-23 14:39:02 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 14:39:02 -<==      Total: 1
2019-05-23 14:39:02 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-05-23 14:39:02 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 14:39:02 -<==      Total: 1
2019-05-23 14:39:02 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-05-23 14:39:02 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 14:39:02 -<==      Total: 1
2019-05-23 14:39:02 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-05-23 14:39:02 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 14:39:02 -<==      Total: 1
2019-05-23 14:39:03 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-05-23 14:39:03 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 14:39:03 -<==      Total: 1
2019-05-23 14:39:03 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-05-23 14:39:03 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 14:39:03 -<==      Total: 1
2019-05-23 14:39:03 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-05-23 14:39:03 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 14:39:03 -<==      Total: 1
2019-05-23 14:39:03 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-05-23 14:39:03 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 14:39:03 -<==      Total: 1
2019-05-23 14:39:03 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-05-23 14:39:03 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 14:39:03 -<==      Total: 1
2019-05-23 14:39:03 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-05-23 14:39:03 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 14:39:03 -<==      Total: 1
2019-05-23 14:39:03 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-05-23 14:39:03 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 14:39:03 -<==      Total: 1
2019-05-23 14:39:03 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-05-23 14:39:03 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 14:39:03 -<==      Total: 1
2019-05-23 14:39:03 -==>  Preparing: SELECT ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-05-23 14:39:03 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-23 14:39:03 -
### Error querying database.  Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :'),0),0) FROM ELEC_LOG
	   	  WHERE ',expect RPAREN, actual RPAREN ID : SELECT ifnull(COUNT(ID),0),0) FROM ELEC_LOG
	   	  WHERE ELEC_TYPE = "11"
 			 
	   and `create_time` = ?
	  
	  
	  
	   and user_org = ?
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\ElecLogMapper.xml]
### The error may involve com.bootdo.moneyLog.dao.ElecLogDao.CountZElecLog
### The error occurred while executing a query
### SQL: SELECT ifnull(COUNT(ID),0),0) FROM ELEC_LOG        WHERE ELEC_TYPE = "11"           and `create_time` = ?                 and user_org = ?
### Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :'),0),0) FROM ELEC_LOG
	   	  WHERE ',expect RPAREN, actual RPAREN ID : SELECT ifnull(COUNT(ID),0),0) FROM ELEC_LOG
	   	  WHERE ELEC_TYPE = "11"
 			 
	   and `create_time` = ?
	  
	  
	  
	   and user_org = ?
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, syntax error: syntax error, error in :'),0),0) FROM ELEC_LOG
	   	  WHERE ',expect RPAREN, actual RPAREN ID : SELECT ifnull(COUNT(ID),0),0) FROM ELEC_LOG
	   	  WHERE ELEC_TYPE = "11"
 			 
	   and `create_time` = ?
	  
	  
	  
	   and user_org = ?; nested exception is java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :'),0),0) FROM ELEC_LOG
	   	  WHERE ',expect RPAREN, actual RPAREN ID : SELECT ifnull(COUNT(ID),0),0) FROM ELEC_LOG
	   	  WHERE ELEC_TYPE = "11"
 			 
	   and `create_time` = ?
	  
	  
	  
	   and user_org = ?
org.springframework.jdbc.UncategorizedSQLException: 
### Error querying database.  Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :'),0),0) FROM ELEC_LOG
	   	  WHERE ',expect RPAREN, actual RPAREN ID : SELECT ifnull(COUNT(ID),0),0) FROM ELEC_LOG
	   	  WHERE ELEC_TYPE = "11"
 			 
	   and `create_time` = ?
	  
	  
	  
	   and user_org = ?
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\ElecLogMapper.xml]
### The error may involve com.bootdo.moneyLog.dao.ElecLogDao.CountZElecLog
### The error occurred while executing a query
### SQL: SELECT ifnull(COUNT(ID),0),0) FROM ELEC_LOG        WHERE ELEC_TYPE = "11"           and `create_time` = ?                 and user_org = ?
### Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :'),0),0) FROM ELEC_LOG
	   	  WHERE ',expect RPAREN, actual RPAREN ID : SELECT ifnull(COUNT(ID),0),0) FROM ELEC_LOG
	   	  WHERE ELEC_TYPE = "11"
 			 
	   and `create_time` = ?
	  
	  
	  
	   and user_org = ?
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, syntax error: syntax error, error in :'),0),0) FROM ELEC_LOG
	   	  WHERE ',expect RPAREN, actual RPAREN ID : SELECT ifnull(COUNT(ID),0),0) FROM ELEC_LOG
	   	  WHERE ELEC_TYPE = "11"
 			 
	   and `create_time` = ?
	  
	  
	  
	   and user_org = ?; nested exception is java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :'),0),0) FROM ELEC_LOG
	   	  WHERE ',expect RPAREN, actual RPAREN ID : SELECT ifnull(COUNT(ID),0),0) FROM ELEC_LOG
	   	  WHERE ELEC_TYPE = "11"
 			 
	   and `create_time` = ?
	  
	  
	  
	   and user_org = ?
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:89)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:167)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:82)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy102.CountZElecLog(Unknown Source)
	at com.bootdo.moneyLog.service.impl.ElecLogServiceImpl.CountZElecLog(ElecLogServiceImpl.java:253)
	at com.bootdo.charts.controller.countMMController.getCountMM(countMMController.java:77)
	at com.bootdo.charts.controller.countMMController$$FastClassBySpringCGLIB$$81fa892e.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor127.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.countMMController$$EnhancerBySpringCGLIB$$4d5aff67.getCountMM(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :'),0),0) FROM ELEC_LOG
	   	  WHERE ',expect RPAREN, actual RPAREN ID : SELECT ifnull(COUNT(ID),0),0) FROM ELEC_LOG
	   	  WHERE ELEC_TYPE = "11"
 			 
	   and `create_time` = ?
	  
	  
	  
	   and user_org = ?
	at com.alibaba.druid.wall.WallFilter.check(WallFilter.java:725)
	at com.alibaba.druid.wall.WallFilter.connection_prepareStatement(WallFilter.java:253)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:448)
	at com.alibaba.druid.filter.FilterAdapter.connection_prepareStatement(FilterAdapter.java:928)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_prepareStatement(FilterEventAdapter.java:122)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:448)
	at com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl.prepareStatement(ConnectionProxyImpl.java:342)
	at com.alibaba.druid.pool.DruidPooledConnection.prepareStatement(DruidPooledConnection.java:331)
	at sun.reflect.GeneratedMethodAccessor129.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.ConnectionLogger.invoke(ConnectionLogger.java:55)
	at com.sun.proxy.$Proxy172.prepareStatement(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.instantiateStatement(PreparedStatementHandler.java:87)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.prepare(BaseStatementHandler.java:88)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.prepare(RoutingStatementHandler.java:59)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:85)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:77)
	at sun.reflect.GeneratedMethodAccessor139.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 99 common frames omitted
Caused by: com.alibaba.druid.sql.parser.ParserException: syntax error, error in :'),0),0) FROM ELEC_LOG
	   	  WHERE ',expect RPAREN, actual RPAREN ID
	at com.alibaba.druid.sql.parser.SQLParser.printError(SQLParser.java:239)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:362)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:79)
	at com.alibaba.druid.wall.WallProvider.checkInternal(WallProvider.java:620)
	at com.alibaba.druid.wall.WallProvider.check(WallProvider.java:574)
	at com.alibaba.druid.wall.WallFilter.check(WallFilter.java:712)
	... 127 common frames omitted
2019-05-23 14:39:03 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/countMM/getCountMM(String), org.springframework.jdbc.UncategorizedSQLException: 
### Error querying database.  Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :'),0),0) FROM ELEC_LOG
	   	  WHERE ',expect RPAREN, actual RPAREN ID : SELECT ifnull(COUNT(ID),0),0) FROM ELEC_LOG
	   	  WHERE ELEC_TYPE = "11"
 			 
	   and `create_time` = ?
	  
	  
	  
	   and user_org = ?
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\ElecLogMapper.xml]
### The error may involve com.bootdo.moneyLog.dao.ElecLogDao.CountZElecLog
### The error occurred while executing a query
### SQL: SELECT ifnull(COUNT(ID),0),0) FROM ELEC_LOG        WHERE ELEC_TYPE = "11"           and `create_time` = ?                 and user_org = ?
### Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :'),0),0) FROM ELEC_LOG
	   	  WHERE ',expect RPAREN, actual RPAREN ID : SELECT ifnull(COUNT(ID),0),0) FROM ELEC_LOG
	   	  WHERE ELEC_TYPE = "11"
 			 
	   and `create_time` = ?
	  
	  
	  
	   and user_org = ?
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, syntax error: syntax error, error in :'),0),0) FROM ELEC_LOG
	   	  WHERE ',expect RPAREN, actual RPAREN ID : SELECT ifnull(COUNT(ID),0),0) FROM ELEC_LOG
	   	  WHERE ELEC_TYPE = "11"
 			 
	   and `create_time` = ?
	  
	  
	  
	   and user_org = ?; nested exception is java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :'),0),0) FROM ELEC_LOG
	   	  WHERE ',expect RPAREN, actual RPAREN ID : SELECT ifnull(COUNT(ID),0),0) FROM ELEC_LOG
	   	  WHERE ELEC_TYPE = "11"
 			 
	   and `create_time` = ?
	  
	  
	  
	   and user_org = ?(String), null, 2019-05-23 14:39:03.023(Timestamp)
2019-05-23 14:39:03 -<==    Updates: 1
2019-05-23 14:49:59 -Starting BootdoApplication on PC-201905091110 with PID 28512 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-23 14:49:59 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-23 14:49:59 -The following profiles are active: dev
2019-05-23 14:49:59 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@70e9c95d: startup date [Thu May 23 14:49:59 CST 2019]; root of context hierarchy
2019-05-23 14:50:13 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-23 14:50:20 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$16ae8ea5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 14:50:21 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$907bd4c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 14:50:29 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 14:50:30 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 14:50:30 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 14:50:30 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-23 14:50:30 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-23 14:50:30 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 14:50:30 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 14:50:30 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 14:50:30 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 14:50:32 -Tomcat initialized with port(s): 8081 (http)
2019-05-23 14:50:32 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-23 14:50:32 -Starting service [Tomcat]
2019-05-23 14:50:32 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-23 14:50:32 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-23 14:50:33 -Initializing Spring embedded WebApplicationContext
2019-05-23 14:50:33 -Root WebApplicationContext: initialization completed in 33544 ms
2019-05-23 14:50:34 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-23 14:50:34 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-23 14:50:34 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-23 14:50:34 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-23 14:50:34 -Filter xssFilter was not registered (disabled)
2019-05-23 14:50:34 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-23 14:50:34 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-23 14:50:34 -Servlet statViewServlet mapped to [/druid/*]
2019-05-23 14:50:34 -Servlet dispatcherServlet mapped to [/]
2019-05-23 14:50:40 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@70e9c95d: startup date [Thu May 23 14:49:59 CST 2019]; root of context hierarchy
2019-05-23 14:50:41 -Using default implementation for ThreadExecutor
2019-05-23 14:50:41 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-23 14:50:41 -Quartz Scheduler v.2.2.1 created.
2019-05-23 14:50:41 -RAMJobStore initialized.
2019-05-23 14:50:41 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-23 14:50:41 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-23 14:50:41 -Quartz scheduler version: 2.2.1
2019-05-23 14:50:41 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@7b377a53
2019-05-23 14:50:42 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-23 14:50:42 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-23 14:50:46 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-23 14:50:46 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-23 14:50:46 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 14:50:46 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-23 14:50:46 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-23 14:50:46 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 14:50:46 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-23 14:50:46 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-23 14:50:46 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-23 14:50:46 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 14:50:46 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-23 14:50:46 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-23 14:50:46 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-23 14:50:46 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 14:50:46 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-23 14:50:46 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-23 14:50:46 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-23 14:50:46 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 14:50:46 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 14:50:46 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-23 14:50:46 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-23 14:50:46 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-23 14:50:46 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-23 14:50:46 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 14:50:46 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 14:50:46 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-23 14:50:46 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-23 14:50:46 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 14:50:46 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-23 14:50:46 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-23 14:50:46 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 14:50:46 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-23 14:50:46 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-23 14:50:46 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 14:50:46 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-23 14:50:46 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-23 14:50:46 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-23 14:50:46 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-23 14:50:46 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-23 14:50:46 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-23 14:50:46 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 14:50:46 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-23 14:50:46 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-23 14:50:46 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-23 14:50:46 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-23 14:50:46 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 14:50:46 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-23 14:50:46 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-23 14:50:46 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-23 14:50:46 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-23 14:50:46 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-23 14:50:46 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 14:50:46 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-23 14:50:46 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-23 14:50:46 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-23 14:50:46 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-23 14:50:46 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 14:50:47 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 14:50:47 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-23 14:50:47 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-23 14:50:47 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-23 14:50:47 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-23 14:50:47 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-23 14:50:47 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-23 14:50:47 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-23 14:50:47 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-23 14:50:47 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-23 14:50:47 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 14:50:47 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-23 14:50:47 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-23 14:50:47 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 14:50:47 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-23 14:50:47 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-23 14:50:47 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-23 14:50:47 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-23 14:50:47 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 14:50:47 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-23 14:50:47 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-23 14:50:47 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-23 14:50:47 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-23 14:50:47 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-23 14:50:47 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-23 14:50:47 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-23 14:50:47 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-23 14:50:47 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-23 14:50:47 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-23 14:50:47 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-23 14:50:47 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 14:50:47 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-23 14:50:47 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-23 14:50:47 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-23 14:50:47 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-23 14:50:47 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-23 14:50:47 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-23 14:50:47 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-23 14:50:47 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-23 14:50:47 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-23 14:50:47 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 14:50:47 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-23 14:50:47 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 14:50:47 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-23 14:50:47 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-23 14:50:47 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-23 14:50:47 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-23 14:50:47 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-23 14:50:47 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-23 14:50:47 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-23 14:50:47 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-23 14:50:47 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 14:50:47 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-23 14:50:47 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-23 14:50:47 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-23 14:50:47 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-23 14:50:47 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-23 14:50:47 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-23 14:50:47 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-23 14:50:47 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-23 14:50:47 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-23 14:50:47 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-23 14:50:47 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-23 14:50:47 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 14:50:47 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-23 14:50:47 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-23 14:50:47 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 14:50:47 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-23 14:50:47 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-23 14:50:47 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-23 14:50:47 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-23 14:50:47 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-23 14:50:47 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-23 14:50:47 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-23 14:50:47 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-23 14:50:47 -Mapped "{[/moneyList/moneyList/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 14:50:47 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-23 14:50:47 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-23 14:50:47 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-23 14:50:47 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-23 14:50:47 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 14:50:47 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-23 14:50:47 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-23 14:50:47 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-23 14:50:47 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 14:50:47 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-23 14:50:47 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-23 14:50:47 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-23 14:50:47 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-23 14:50:47 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 14:50:47 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-23 14:50:47 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-23 14:50:47 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-23 14:50:47 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 14:50:47 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-23 14:50:47 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-23 14:50:47 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-23 14:50:47 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-23 14:50:47 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 14:50:47 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-23 14:50:47 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-23 14:50:47 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-23 14:50:47 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 14:50:47 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-23 14:50:47 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-23 14:50:47 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-23 14:50:47 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-23 14:50:47 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-23 14:50:47 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 14:50:47 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-23 14:50:47 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-23 14:50:47 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-23 14:50:47 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 14:50:47 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-23 14:50:47 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 14:50:47 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-23 14:50:47 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-23 14:50:47 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-05-23 14:50:47 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-23 14:50:47 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 14:50:47 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-23 14:50:47 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-23 14:50:47 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 14:50:47 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-23 14:50:47 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 14:50:47 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-23 14:50:47 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-23 14:50:47 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-23 14:50:47 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-23 14:50:47 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-23 14:50:47 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-23 14:50:47 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-23 14:50:47 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-23 14:50:47 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 14:50:47 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-23 14:50:47 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-23 14:50:47 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-23 14:50:47 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-23 14:50:47 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-23 14:50:47 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-23 14:50:47 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-23 14:50:47 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-23 14:50:47 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-23 14:50:47 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-23 14:50:47 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-23 14:50:47 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-23 14:50:47 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 14:50:47 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-23 14:50:47 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-23 14:50:47 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-23 14:50:47 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-23 14:50:47 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-23 14:50:47 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-23 14:50:47 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-23 14:50:47 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-23 14:50:47 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-23 14:50:47 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-23 14:50:47 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-23 14:50:47 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-23 14:50:47 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 14:50:47 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-23 14:50:47 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-23 14:50:47 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-23 14:50:47 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-23 14:50:47 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 14:50:47 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-23 14:50:47 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-23 14:50:47 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-23 14:50:47 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 14:50:47 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-23 14:50:47 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-23 14:50:47 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-23 14:50:47 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-23 14:50:47 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-23 14:50:47 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-23 14:50:47 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-23 14:50:47 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-23 14:50:47 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-23 14:50:47 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-23 14:50:47 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-23 14:50:47 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-23 14:50:47 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-23 14:50:47 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-23 14:50:47 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-23 14:50:47 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-23 14:50:47 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-23 14:50:47 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 14:50:47 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-23 14:50:47 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 14:50:47 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-23 14:50:47 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-23 14:50:47 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-23 14:50:47 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-23 14:50:47 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-23 14:50:47 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-23 14:50:47 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-23 14:50:47 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-23 14:50:47 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-23 14:50:47 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 14:50:47 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-23 14:50:47 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-23 14:50:47 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 14:50:47 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-23 14:50:47 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-23 14:50:47 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-23 14:50:47 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-23 14:50:47 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-23 14:50:47 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-23 14:50:47 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-23 14:50:47 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-23 14:50:48 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-23 14:50:48 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-23 14:50:48 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-23 14:50:49 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-23 14:50:49 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@70e9c95d: startup date [Thu May 23 14:49:59 CST 2019]; root of context hierarchy
2019-05-23 14:50:50 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-23 14:50:50 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-23 14:50:50 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-23 14:50:50 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-23 14:50:50 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-23 14:50:54 -Registering beans for JMX exposure on startup
2019-05-23 14:50:54 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-23 14:50:54 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-23 14:50:54 -Starting beans in phase 2147483647
2019-05-23 14:50:54 -Context refreshed
2019-05-23 14:50:54 -Found 1 custom documentation plugin(s)
2019-05-23 14:50:54 -Scanning for api listing references
2019-05-23 14:50:55 -Generating unique operation named: getCountDUsingPOST_1
2019-05-23 14:50:55 -Generating unique operation named: removeUsingPOST_1
2019-05-23 14:50:55 -Generating unique operation named: addUsingGET_1
2019-05-23 14:50:55 -Generating unique operation named: editUsingGET_1
2019-05-23 14:50:55 -Generating unique operation named: listUsingGET_1
2019-05-23 14:50:55 -Generating unique operation named: removeUsingPOST_2
2019-05-23 14:50:55 -Generating unique operation named: removeUsingPOST_3
2019-05-23 14:50:55 -Generating unique operation named: saveUsingPOST_1
2019-05-23 14:50:55 -Generating unique operation named: updateUsingGET_1
2019-05-23 14:50:55 -Generating unique operation named: updateUsingHEAD_1
2019-05-23 14:50:55 -Generating unique operation named: updateUsingPOST_1
2019-05-23 14:50:55 -Generating unique operation named: updateUsingPUT_1
2019-05-23 14:50:55 -Generating unique operation named: updateUsingPATCH_1
2019-05-23 14:50:55 -Generating unique operation named: updateUsingDELETE_1
2019-05-23 14:50:56 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-23 14:50:56 -Generating unique operation named: updateUsingTRACE_1
2019-05-23 14:50:56 -Generating unique operation named: addUsingGET_2
2019-05-23 14:50:56 -Generating unique operation named: editUsingGET_2
2019-05-23 14:50:56 -Generating unique operation named: listUsingGET_2
2019-05-23 14:50:56 -Generating unique operation named: removeUsingPOST_4
2019-05-23 14:50:56 -Generating unique operation named: removeUsingPOST_5
2019-05-23 14:50:56 -Generating unique operation named: saveUsingPOST_2
2019-05-23 14:50:56 -Generating unique operation named: updateUsingPOST_2
2019-05-23 14:50:56 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-23 14:50:56 -Generating unique operation named: addUsingGET_3
2019-05-23 14:50:56 -Generating unique operation named: editUsingGET_3
2019-05-23 14:50:56 -Generating unique operation named: listUsingGET_3
2019-05-23 14:50:56 -Generating unique operation named: removeUsingPOST_6
2019-05-23 14:50:56 -Generating unique operation named: removeUsingPOST_7
2019-05-23 14:50:56 -Generating unique operation named: saveUsingPOST_3
2019-05-23 14:50:56 -Generating unique operation named: updateUsingGET_2
2019-05-23 14:50:56 -Generating unique operation named: updateUsingHEAD_2
2019-05-23 14:50:56 -Generating unique operation named: updateUsingPOST_3
2019-05-23 14:50:56 -Generating unique operation named: updateUsingPUT_2
2019-05-23 14:50:56 -Generating unique operation named: updateUsingPATCH_2
2019-05-23 14:50:56 -Generating unique operation named: updateUsingDELETE_2
2019-05-23 14:50:56 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-23 14:50:56 -Generating unique operation named: updateUsingTRACE_2
2019-05-23 14:50:56 -Generating unique operation named: addUsingGET_4
2019-05-23 14:50:56 -Generating unique operation named: editUsingGET_4
2019-05-23 14:50:56 -Generating unique operation named: listUsingGET_4
2019-05-23 14:50:56 -Generating unique operation named: removeUsingPOST_8
2019-05-23 14:50:56 -Generating unique operation named: removeUsingPOST_9
2019-05-23 14:50:56 -Generating unique operation named: saveUsingPOST_4
2019-05-23 14:50:56 -Generating unique operation named: updateUsingGET_3
2019-05-23 14:50:56 -Generating unique operation named: updateUsingHEAD_3
2019-05-23 14:50:56 -Generating unique operation named: updateUsingPOST_4
2019-05-23 14:50:56 -Generating unique operation named: updateUsingPUT_3
2019-05-23 14:50:56 -Generating unique operation named: updateUsingPATCH_3
2019-05-23 14:50:56 -Generating unique operation named: updateUsingDELETE_3
2019-05-23 14:50:56 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-23 14:50:56 -Generating unique operation named: updateUsingTRACE_3
2019-05-23 14:50:56 -Generating unique operation named: ElecUsingGET_1
2019-05-23 14:50:56 -Generating unique operation named: addUsingGET_5
2019-05-23 14:50:56 -Generating unique operation named: editUsingGET_5
2019-05-23 14:50:56 -Generating unique operation named: listUsingGET_5
2019-05-23 14:50:56 -Generating unique operation named: removeUsingPOST_10
2019-05-23 14:50:56 -Generating unique operation named: removeUsingPOST_11
2019-05-23 14:50:56 -Generating unique operation named: saveUsingPOST_5
2019-05-23 14:50:56 -Generating unique operation named: updateUsingGET_4
2019-05-23 14:50:56 -Generating unique operation named: updateUsingHEAD_4
2019-05-23 14:50:56 -Generating unique operation named: updateUsingPOST_5
2019-05-23 14:50:56 -Generating unique operation named: updateUsingPUT_4
2019-05-23 14:50:56 -Generating unique operation named: updateUsingPATCH_4
2019-05-23 14:50:56 -Generating unique operation named: updateUsingDELETE_4
2019-05-23 14:50:56 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-23 14:50:56 -Generating unique operation named: updateUsingTRACE_4
2019-05-23 14:50:56 -Generating unique operation named: editUsingGET_6
2019-05-23 14:50:56 -Generating unique operation named: listUsingGET_6
2019-05-23 14:50:56 -Generating unique operation named: updateUsingPOST_6
2019-05-23 14:50:56 -Generating unique operation named: addUsingGET_6
2019-05-23 14:50:56 -Generating unique operation named: editUsingGET_7
2019-05-23 14:50:56 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-23 14:50:57 -Generating unique operation named: listUsingGET_7
2019-05-23 14:50:57 -Generating unique operation named: removeUsingPOST_12
2019-05-23 14:50:57 -Generating unique operation named: removeUsingPOST_13
2019-05-23 14:50:57 -Generating unique operation named: saveUsingPOST_6
2019-05-23 14:50:57 -Generating unique operation named: updateUsingGET_5
2019-05-23 14:50:57 -Generating unique operation named: updateUsingHEAD_5
2019-05-23 14:50:57 -Generating unique operation named: updateUsingPOST_7
2019-05-23 14:50:57 -Generating unique operation named: updateUsingPUT_5
2019-05-23 14:50:57 -Generating unique operation named: updateUsingPATCH_5
2019-05-23 14:50:57 -Generating unique operation named: updateUsingDELETE_5
2019-05-23 14:50:57 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-23 14:50:57 -Generating unique operation named: updateUsingTRACE_5
2019-05-23 14:50:57 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-23 14:50:57 -Generating unique operation named: addUsingGET_7
2019-05-23 14:50:57 -Generating unique operation named: editUsingGET_8
2019-05-23 14:50:57 -Generating unique operation named: listUsingGET_8
2019-05-23 14:50:57 -Generating unique operation named: removeUsingPOST_14
2019-05-23 14:50:57 -Generating unique operation named: removeUsingPOST_15
2019-05-23 14:50:57 -Generating unique operation named: saveUsingPOST_7
2019-05-23 14:50:57 -Generating unique operation named: updateUsingGET_6
2019-05-23 14:50:57 -Generating unique operation named: updateUsingHEAD_6
2019-05-23 14:50:57 -Generating unique operation named: updateUsingPOST_8
2019-05-23 14:50:57 -Generating unique operation named: updateUsingPUT_6
2019-05-23 14:50:57 -Generating unique operation named: updateUsingPATCH_6
2019-05-23 14:50:57 -Generating unique operation named: updateUsingDELETE_6
2019-05-23 14:50:57 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-23 14:50:57 -Generating unique operation named: updateUsingTRACE_6
2019-05-23 14:50:57 -Generating unique operation named: addUsingGET_8
2019-05-23 14:50:57 -Generating unique operation named: editUsingGET_9
2019-05-23 14:50:57 -Generating unique operation named: listUsingGET_9
2019-05-23 14:50:57 -Generating unique operation named: removeUsingPOST_16
2019-05-23 14:50:57 -Generating unique operation named: removeUsingPOST_17
2019-05-23 14:50:57 -Generating unique operation named: saveUsingPOST_8
2019-05-23 14:50:57 -Generating unique operation named: updateUsingGET_7
2019-05-23 14:50:57 -Generating unique operation named: updateUsingHEAD_7
2019-05-23 14:50:57 -Generating unique operation named: updateUsingPOST_9
2019-05-23 14:50:57 -Generating unique operation named: updateUsingPUT_7
2019-05-23 14:50:57 -Generating unique operation named: updateUsingPATCH_7
2019-05-23 14:50:57 -Generating unique operation named: updateUsingDELETE_7
2019-05-23 14:50:57 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-23 14:50:57 -Generating unique operation named: updateUsingTRACE_7
2019-05-23 14:50:57 -Generating unique operation named: addUsingGET_9
2019-05-23 14:50:57 -Generating unique operation named: editUsingGET_10
2019-05-23 14:50:57 -Generating unique operation named: infoUsingGET_1
2019-05-23 14:50:57 -Generating unique operation named: infoUsingHEAD_1
2019-05-23 14:50:57 -Generating unique operation named: infoUsingPOST_1
2019-05-23 14:50:57 -Generating unique operation named: infoUsingPUT_1
2019-05-23 14:50:57 -Generating unique operation named: infoUsingPATCH_1
2019-05-23 14:50:57 -Generating unique operation named: infoUsingDELETE_1
2019-05-23 14:50:57 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-23 14:50:57 -Generating unique operation named: infoUsingTRACE_1
2019-05-23 14:50:57 -Generating unique operation named: listUsingGET_10
2019-05-23 14:50:57 -Generating unique operation named: removeUsingPOST_18
2019-05-23 14:50:57 -Generating unique operation named: removeUsingPOST_19
2019-05-23 14:50:57 -Generating unique operation named: saveUsingPOST_9
2019-05-23 14:50:57 -Generating unique operation named: updateUsingPOST_10
2019-05-23 14:50:57 -Generating unique operation named: listUsingGET_11
2019-05-23 14:50:57 -Generating unique operation named: removeUsingPOST_20
2019-05-23 14:50:57 -Generating unique operation named: welcomeUsingGET_1
2019-05-23 14:50:57 -Generating unique operation named: addUsingGET_10
2019-05-23 14:50:57 -Generating unique operation named: editUsingGET_11
2019-05-23 14:50:57 -Generating unique operation named: listUsingGET_12
2019-05-23 14:50:57 -Generating unique operation named: removeUsingPOST_21
2019-05-23 14:50:57 -Generating unique operation named: saveUsingPOST_10
2019-05-23 14:50:57 -Generating unique operation named: treeUsingGET_1
2019-05-23 14:50:57 -Generating unique operation named: treeUsingGET_2
2019-05-23 14:50:57 -Generating unique operation named: updateUsingPOST_11
2019-05-23 14:50:57 -Generating unique operation named: editUsingGET_12
2019-05-23 14:50:57 -Generating unique operation named: addUsingGET_11
2019-05-23 14:50:58 -Generating unique operation named: editUsingGET_13
2019-05-23 14:50:58 -Generating unique operation named: listUsingGET_13
2019-05-23 14:50:58 -Generating unique operation named: removeUsingPOST_22
2019-05-23 14:50:58 -Generating unique operation named: removeUsingPOST_23
2019-05-23 14:50:58 -Generating unique operation named: saveUsingPOST_11
2019-05-23 14:50:58 -Generating unique operation named: updateUsingGET_8
2019-05-23 14:50:58 -Generating unique operation named: updateUsingHEAD_8
2019-05-23 14:50:58 -Generating unique operation named: updateUsingPOST_12
2019-05-23 14:50:58 -Generating unique operation named: updateUsingPUT_8
2019-05-23 14:50:58 -Generating unique operation named: updateUsingPATCH_8
2019-05-23 14:50:58 -Generating unique operation named: updateUsingDELETE_8
2019-05-23 14:50:58 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-23 14:50:58 -Generating unique operation named: updateUsingTRACE_8
2019-05-23 14:50:58 -Generating unique operation named: addUsingGET_12
2019-05-23 14:50:58 -Generating unique operation named: editUsingGET_14
2019-05-23 14:50:58 -Generating unique operation named: listUsingGET_14
2019-05-23 14:50:58 -Generating unique operation named: removeUsingPOST_24
2019-05-23 14:50:58 -Generating unique operation named: removeUsingPOST_25
2019-05-23 14:50:58 -Generating unique operation named: saveUsingPOST_12
2019-05-23 14:50:58 -Generating unique operation named: updateUsingGET_9
2019-05-23 14:50:58 -Generating unique operation named: updateUsingHEAD_9
2019-05-23 14:50:58 -Generating unique operation named: updateUsingPOST_13
2019-05-23 14:50:58 -Generating unique operation named: updateUsingPUT_9
2019-05-23 14:50:58 -Generating unique operation named: updateUsingPATCH_9
2019-05-23 14:50:58 -Generating unique operation named: updateUsingDELETE_9
2019-05-23 14:50:58 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-23 14:50:58 -Generating unique operation named: updateUsingTRACE_9
2019-05-23 14:50:58 -Generating unique operation named: addUsingGET_13
2019-05-23 14:50:58 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-23 14:50:58 -Generating unique operation named: editUsingGET_15
2019-05-23 14:50:58 -Generating unique operation named: listUsingGET_15
2019-05-23 14:50:58 -Generating unique operation named: saveUsingPOST_13
2019-05-23 14:50:58 -Generating unique operation named: saveUsingPOST_14
2019-05-23 14:50:58 -Generating unique operation named: updateUsingPOST_14
2019-05-23 14:50:58 -Generating unique operation named: listUsingGET_16
2019-05-23 14:50:58 -Generating unique operation named: listUsingHEAD_1
2019-05-23 14:50:58 -Generating unique operation named: listUsingPOST_1
2019-05-23 14:50:58 -Generating unique operation named: listUsingPUT_1
2019-05-23 14:50:58 -Generating unique operation named: listUsingPATCH_1
2019-05-23 14:50:58 -Generating unique operation named: listUsingDELETE_1
2019-05-23 14:50:58 -Generating unique operation named: listUsingOPTIONS_1
2019-05-23 14:50:58 -Generating unique operation named: listUsingTRACE_1
2019-05-23 14:50:58 -Generating unique operation named: countDDUsingGET_1
2019-05-23 14:50:58 -Generating unique operation named: exportDDUsingGET_1
2019-05-23 14:50:58 -Generating unique operation named: addUsingGET_14
2019-05-23 14:50:58 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-23 14:50:58 -Generating unique operation named: editUsingGET_16
2019-05-23 14:50:58 -Generating unique operation named: listUsingGET_17
2019-05-23 14:50:58 -Generating unique operation named: removeUsingPOST_26
2019-05-23 14:50:58 -Generating unique operation named: saveUsingPOST_15
2019-05-23 14:50:58 -Generating unique operation named: treeUsingGET_3
2019-05-23 14:50:58 -Generating unique operation named: treeViewUsingGET_1
2019-05-23 14:50:58 -Generating unique operation named: updateUsingPOST_15
2019-05-23 14:50:58 -Generating unique operation named: addUsingGET_15
2019-05-23 14:50:58 -Generating unique operation named: editUsingGET_17
2019-05-23 14:50:58 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-23 14:50:58 -Generating unique operation named: listUsingGET_18
2019-05-23 14:50:58 -Generating unique operation named: removeUsingPOST_27
2019-05-23 14:50:58 -Generating unique operation named: removeUsingPOST_28
2019-05-23 14:50:58 -Generating unique operation named: saveUsingPOST_16
2019-05-23 14:50:58 -Generating unique operation named: updateUsingGET_10
2019-05-23 14:50:58 -Generating unique operation named: updateUsingHEAD_10
2019-05-23 14:50:58 -Generating unique operation named: updateUsingPOST_16
2019-05-23 14:50:58 -Generating unique operation named: updateUsingPUT_10
2019-05-23 14:50:58 -Generating unique operation named: updateUsingPATCH_10
2019-05-23 14:50:58 -Generating unique operation named: updateUsingDELETE_10
2019-05-23 14:50:58 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-23 14:50:58 -Generating unique operation named: updateUsingTRACE_10
2019-05-23 14:50:58 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-23 14:50:59 -Generating unique operation named: addUsingGET_16
2019-05-23 14:50:59 -Generating unique operation named: editUsingGET_18
2019-05-23 14:50:59 -Generating unique operation named: listUsingGET_19
2019-05-23 14:50:59 -Generating unique operation named: removeUsingPOST_29
2019-05-23 14:50:59 -Generating unique operation named: removeUsingPOST_30
2019-05-23 14:50:59 -Generating unique operation named: saveUsingPOST_17
2019-05-23 14:50:59 -Generating unique operation named: updateUsingGET_11
2019-05-23 14:50:59 -Generating unique operation named: updateUsingHEAD_11
2019-05-23 14:50:59 -Generating unique operation named: updateUsingPOST_17
2019-05-23 14:50:59 -Generating unique operation named: updateUsingPUT_11
2019-05-23 14:50:59 -Generating unique operation named: updateUsingPATCH_11
2019-05-23 14:50:59 -Generating unique operation named: updateUsingDELETE_11
2019-05-23 14:50:59 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-23 14:50:59 -Generating unique operation named: updateUsingTRACE_11
2019-05-23 14:50:59 -Generating unique operation named: addUsingGET_17
2019-05-23 14:50:59 -Generating unique operation named: editUsingGET_19
2019-05-23 14:50:59 -Generating unique operation named: listUsingGET_20
2019-05-23 14:50:59 -Generating unique operation named: removeUsingPOST_31
2019-05-23 14:50:59 -Generating unique operation named: removeUsingPOST_32
2019-05-23 14:50:59 -Generating unique operation named: saveUsingPOST_18
2019-05-23 14:50:59 -Generating unique operation named: updateUsingGET_12
2019-05-23 14:50:59 -Generating unique operation named: updateUsingHEAD_12
2019-05-23 14:50:59 -Generating unique operation named: updateUsingPOST_18
2019-05-23 14:50:59 -Generating unique operation named: updateUsingPUT_12
2019-05-23 14:50:59 -Generating unique operation named: updateUsingPATCH_12
2019-05-23 14:50:59 -Generating unique operation named: updateUsingDELETE_12
2019-05-23 14:50:59 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-23 14:50:59 -Generating unique operation named: updateUsingTRACE_12
2019-05-23 14:50:59 -Starting Quartz Scheduler now
2019-05-23 14:50:59 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-23 14:50:59 -Starting...
2019-05-23 14:50:59 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-23 14:50:59 -Started.
2019-05-23 14:50:59 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-23 14:50:59 -Using a shared selector for servlet write/read
2019-05-23 14:50:59 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-23 14:50:59 -Started BootdoApplication in 63.811 seconds (JVM running for 65.027)
2019-05-23 14:50:59 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-23 14:51:00 -==> Parameters: 
2019-05-23 14:51:00 -<==      Total: 1
2019-05-23 14:51:10 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-23 14:51:10 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-23 14:51:10 -FrameworkServlet 'dispatcherServlet': initialization completed in 97 ms
2019-05-23 14:51:10 -Enabling session validation scheduler...
2019-05-23 14:51:10 -请求地址 : http://localhost:8081/login;JSESSIONID=7bd46a77-b7ac-417e-b548-4c794a9b88eb
2019-05-23 14:51:10 -HTTP METHOD : GET
2019-05-23 14:51:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-23 14:51:10 -参数 : [{}]
2019-05-23 14:51:10 -耗时 : 5
2019-05-23 14:51:10 -返回值 : login
2019-05-23 14:51:12 -请求地址 : http://localhost:8081/getVerify
2019-05-23 14:51:12 -HTTP METHOD : GET
2019-05-23 14:51:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-23 14:51:12 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@12c15d89, org.apache.shiro.web.servlet.ShiroHttpServletResponse@16fedb09]
2019-05-23 14:51:18 -9215
2019-05-23 14:51:19 -耗时 : 6384
2019-05-23 14:51:19 -返回值 : null
2019-05-23 14:51:24 -请求地址 : http://localhost:8081/login
2019-05-23 14:51:24 -HTTP METHOD : POST
2019-05-23 14:51:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-23 14:51:24 -参数 : [admin, 111111, 9215, org.apache.shiro.web.servlet.ShiroHttpServletRequest@78113778]
2019-05-23 14:51:24 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-23 14:51:24 -==> Parameters: admin(String)
2019-05-23 14:51:24 -<==      Total: 1
2019-05-23 14:51:24 -耗时 : 246
2019-05-23 14:51:25 -返回值 : {msg=操作成功, code=0}
2019-05-23 14:51:25 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-23 14:51:25 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-23 14:51:25 -==> Parameters: 1(Long), admin(String), 登录(String), 247(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-23 14:51:25.217(Timestamp)
2019-05-23 14:51:25 -<==    Updates: 1
2019-05-23 14:51:25 -请求地址 : http://localhost:8081/index
2019-05-23 14:51:25 -HTTP METHOD : GET
2019-05-23 14:51:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-23 14:51:25 -参数 : [{}]
2019-05-23 14:51:25 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-23 14:51:25 -==> Parameters: 1(Long)
2019-05-23 14:51:25 -<==      Total: 49
2019-05-23 14:51:25 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-23 14:51:25 -==> Parameters: 138(Long)
2019-05-23 14:51:25 -<==      Total: 1
2019-05-23 14:51:25 -耗时 : 367
2019-05-23 14:51:25 -返回值 : index_v1
2019-05-23 14:51:26 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-23 14:51:26 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 367(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-23 14:51:26.101(Timestamp)
2019-05-23 14:51:26 -请求地址 : http://localhost:8081/main
2019-05-23 14:51:26 -HTTP METHOD : GET
2019-05-23 14:51:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-23 14:51:26 -参数 : []
2019-05-23 14:51:26 -耗时 : 0
2019-05-23 14:51:26 -返回值 : main
2019-05-23 14:51:26 -<==    Updates: 1
2019-05-23 14:51:26 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-23 14:51:26 -HTTP METHOD : GET
2019-05-23 14:51:26 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-23 14:51:26 -参数 : []
2019-05-23 14:51:26 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-23 14:51:26 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-23 14:51:26 -<==      Total: 0
2019-05-23 14:51:26 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-23 14:51:26 -==> Parameters: 1(Long), 0(String)
2019-05-23 14:51:26 -<==      Total: 1
2019-05-23 14:51:26 -耗时 : 50
2019-05-23 14:51:26 -返回值 : com.bootdo.common.utils.PageUtils@65c03fc6
2019-05-23 14:51:26 -请求地址 : http://localhost:8081/main
2019-05-23 14:51:26 -HTTP METHOD : GET
2019-05-23 14:51:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-23 14:51:26 -参数 : []
2019-05-23 14:51:26 -耗时 : 0
2019-05-23 14:51:26 -返回值 : main
2019-05-23 14:51:37 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-23 14:51:37 -==> Parameters: 1(Long)
2019-05-23 14:51:37 -<==      Total: 93
2019-05-23 14:51:37 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-23 14:51:37 -HTTP METHOD : GET
2019-05-23 14:51:37 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-23 14:51:37 -参数 : []
2019-05-23 14:51:37 -耗时 : 6
2019-05-23 14:51:37 -返回值 : charts/tableElecYY
2019-05-23 14:51:38 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-23 14:51:38 -HTTP METHOD : GET
2019-05-23 14:51:38 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-23 14:51:38 -参数 : [userType]
2019-05-23 14:51:38 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-23 14:51:38 -==> Parameters: userType(String)
2019-05-23 14:51:38 -<==      Total: 4
2019-05-23 14:51:38 -耗时 : 58
2019-05-23 14:51:38 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-23 14:51:38 -请求地址 : http://localhost:8081/charts/countYY
2019-05-23 14:51:38 -HTTP METHOD : GET
2019-05-23 14:51:38 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.countYY
2019-05-23 14:51:38 -参数 : []
2019-05-23 14:51:38 -耗时 : 0
2019-05-23 14:51:38 -返回值 : charts/countYY
2019-05-23 14:51:39 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-23 14:51:39 -HTTP METHOD : GET
2019-05-23 14:51:39 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-23 14:51:39 -参数 : [userType]
2019-05-23 14:51:39 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-23 14:51:39 -==> Parameters: userType(String)
2019-05-23 14:51:39 -<==      Total: 4
2019-05-23 14:51:39 -耗时 : 7
2019-05-23 14:51:39 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-23 14:51:40 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-05-23 14:51:40 -HTTP METHOD : GET
2019-05-23 14:51:40 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-23 14:51:40 -参数 : []
2019-05-23 14:51:40 -耗时 : 9
2019-05-23 14:51:40 -返回值 : charts/tableElecMM
2019-05-23 14:51:41 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-23 14:51:41 -HTTP METHOD : GET
2019-05-23 14:51:41 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-23 14:51:41 -参数 : [userType]
2019-05-23 14:51:41 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-23 14:51:41 -==> Parameters: userType(String)
2019-05-23 14:51:41 -<==      Total: 4
2019-05-23 14:51:41 -耗时 : 8
2019-05-23 14:51:41 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-23 14:51:41 -请求地址 : http://localhost:8081/charts/countMM
2019-05-23 14:51:41 -HTTP METHOD : GET
2019-05-23 14:51:41 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-05-23 14:51:41 -参数 : []
2019-05-23 14:51:41 -耗时 : 9
2019-05-23 14:51:41 -返回值 : charts/countMM
2019-05-23 14:51:42 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-23 14:51:42 -HTTP METHOD : GET
2019-05-23 14:51:42 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-23 14:51:42 -参数 : [userType]
2019-05-23 14:51:42 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-23 14:51:42 -==> Parameters: userType(String)
2019-05-23 14:51:42 -<==      Total: 4
2019-05-23 14:51:42 -耗时 : 11
2019-05-23 14:51:42 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-23 14:51:48 -WebSocketSession[1 current WS(0)-HttpStream(1)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 12], outboundChannelpool size = 2, active threads = 0, queued tasks = 0, completed tasks = 2], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 5]
2019-05-23 14:51:55 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-23 14:51:55 -HTTP METHOD : GET
2019-05-23 14:51:55 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-23 14:51:55 -参数 : []
2019-05-23 14:51:55 -耗时 : 1
2019-05-23 14:51:55 -返回值 : system/dept/deptTree
2019-05-23 14:51:55 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-23 14:51:55 -HTTP METHOD : GET
2019-05-23 14:51:55 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-23 14:51:55 -参数 : []
2019-05-23 14:51:55 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-23 14:51:55 -==> Parameters: 
2019-05-23 14:51:55 -<==      Total: 3
2019-05-23 14:51:55 -耗时 : 41
2019-05-23 14:51:55 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-23 14:52:01 -请求地址 : http://localhost:8081/charts/countMM/getCountMM
2019-05-23 14:52:01 -HTTP METHOD : POST
2019-05-23 14:52:01 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.getCountMM
2019-05-23 14:52:01 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@5afe2866, com.bootdo.moneyLog.vo.WaterLogVo@7e963b4f, com.bootdo.moneyLog.vo.HeatLogVo@181dd024]
2019-05-23 14:52:01 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-23 14:52:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-23 14:52:01 -<==      Total: 1
2019-05-23 14:52:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-23 14:52:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-23 14:52:01 -<==      Total: 1
2019-05-23 14:52:01 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-23 14:52:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-23 14:52:01 -<==      Total: 1
2019-05-23 14:52:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-23 14:52:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-23 14:52:01 -<==      Total: 1
2019-05-23 14:52:01 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-23 14:52:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-23 14:52:02 -<==      Total: 1
2019-05-23 14:52:02 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-23 14:52:02 -==> Parameters: 2019-03(String), 2(String)
2019-05-23 14:52:02 -<==      Total: 1
2019-05-23 14:52:02 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-23 14:52:02 -==> Parameters: 2019-03(String), 2(String)
2019-05-23 14:52:02 -<==      Total: 1
2019-05-23 14:52:02 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-23 14:52:02 -==> Parameters: 2019-03(String), 2(String)
2019-05-23 14:52:02 -<==      Total: 1
2019-05-23 14:52:02 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-05-23 14:52:02 -==> Parameters: 2019-03(String), 2(String)
2019-05-23 14:52:02 -<==      Total: 1
2019-05-23 14:52:02 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-05-23 14:52:02 -==> Parameters: 2019-03(String), 2(String)
2019-05-23 14:52:02 -<==      Total: 1
2019-05-23 14:52:02 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-05-23 14:52:02 -==> Parameters: 2019-03(String), 2(String)
2019-05-23 14:52:02 -<==      Total: 1
2019-05-23 14:52:02 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-05-23 14:52:02 -==> Parameters: 2019-03(String), 2(String)
2019-05-23 14:52:02 -<==      Total: 1
2019-05-23 14:52:02 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-05-23 14:52:02 -==> Parameters: 2019-03(String), 2(String)
2019-05-23 14:52:02 -<==      Total: 1
2019-05-23 14:52:02 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-05-23 14:52:02 -==> Parameters: 2019-03(String), 2(String)
2019-05-23 14:52:02 -<==      Total: 1
2019-05-23 14:52:02 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-05-23 14:52:02 -==> Parameters: 2019-03(String), 2(String)
2019-05-23 14:52:02 -<==      Total: 1
2019-05-23 14:52:02 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-05-23 14:52:02 -==> Parameters: 2019-03(String), 2(String)
2019-05-23 14:52:02 -<==      Total: 1
2019-05-23 14:52:02 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-05-23 14:52:02 -==> Parameters: 2019-03(String), 2(String)
2019-05-23 14:52:02 -<==      Total: 1
2019-05-23 14:52:02 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-05-23 14:52:02 -==> Parameters: 2019-03(String), 2(String)
2019-05-23 14:52:02 -<==      Total: 1
2019-05-23 14:52:02 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-05-23 14:52:02 -==> Parameters: 2019-03(String), 2(String)
2019-05-23 14:52:02 -<==      Total: 1
2019-05-23 14:52:02 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-05-23 14:52:02 -==> Parameters: 2019-03(String), 2(String)
2019-05-23 14:52:02 -<==      Total: 1
2019-05-23 14:52:02 -==>  Preparing: SELECT ifnull(COUNT(ID),0)FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-05-23 14:52:02 -==> Parameters: 2019-03(String), 2(String)
2019-05-23 14:52:02 -<==      Total: 1
2019-05-23 14:52:02 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-05-23 14:52:02 -==> Parameters: 2019-03(String), 2(String)
2019-05-23 14:52:02 -<==      Total: 1
2019-05-23 14:52:02 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-23 14:52:02 -==> Parameters: 2019-03(String), 2(String)
2019-05-23 14:52:02 -<==      Total: 1
2019-05-23 14:52:02 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-23 14:52:02 -==> Parameters: 2019-03(String), 2(String)
2019-05-23 14:52:02 -<==      Total: 1
2019-05-23 14:52:02 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-23 14:52:02 -==> Parameters: 2019-03(String), 2(String)
2019-05-23 14:52:02 -<==      Total: 1
2019-05-23 14:52:02 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-23 14:52:02 -==> Parameters: 2019-03(String), 2(String)
2019-05-23 14:52:02 -<==      Total: 1
2019-05-23 14:52:02 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-23 14:52:02 -==> Parameters: 2019-03(String), 2(String)
2019-05-23 14:52:02 -<==      Total: 1
2019-05-23 14:52:02 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-23 14:52:02 -==> Parameters: 2019-03(String), 2(String)
2019-05-23 14:52:02 -<==      Total: 1
2019-05-23 14:52:02 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-23 14:52:02 -==> Parameters: 2019-03(String), 2(String)
2019-05-23 14:52:02 -<==      Total: 1
2019-05-23 14:52:02 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-23 14:52:02 -==> Parameters: 2019-03(String), 2(String)
2019-05-23 14:52:02 -<==      Total: 1
2019-05-23 14:52:02 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE WATER_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-23 14:52:02 -==> Parameters: 2019-03(String), 2(String)
2019-05-23 14:52:02 -<==      Total: 1
2019-05-23 14:52:02 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE WATER_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-23 14:52:02 -==> Parameters: 2019-03(String), 2(String)
2019-05-23 14:52:02 -<==      Total: 1
2019-05-23 14:52:02 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-23 14:52:02 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/countMM/getCountMM(String), org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.moneyLog.dao.WaterLogDao.CountS1WaterLog(String), null, 2019-05-23 14:52:02.289(Timestamp)
2019-05-23 14:52:02 -Invalid bound statement (not found): com.bootdo.moneyLog.dao.WaterLogDao.CountS1WaterLog
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.moneyLog.dao.WaterLogDao.CountS1WaterLog
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy104.CountS1WaterLog(Unknown Source)
	at com.bootdo.moneyLog.service.impl.WaterLogServiceImpl.CountS1WaterLog(WaterLogServiceImpl.java:137)
	at com.bootdo.charts.controller.countMMController.getCountMM(countMMController.java:97)
	at com.bootdo.charts.controller.countMMController$$FastClassBySpringCGLIB$$81fa892e.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor145.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.countMMController$$EnhancerBySpringCGLIB$$9901ae5a.getCountMM(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-23 14:52:02 -<==    Updates: 1
2019-05-23 14:52:04 -请求地址 : http://localhost:8081/charts/countMM/getCountMM
2019-05-23 14:52:04 -HTTP METHOD : POST
2019-05-23 14:52:04 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.getCountMM
2019-05-23 14:52:04 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@3a510e7a, com.bootdo.moneyLog.vo.WaterLogVo@58b3d0e4, com.bootdo.moneyLog.vo.HeatLogVo@510dfd1e]
2019-05-23 14:52:04 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-23 14:52:04 -==> Parameters: 2019-03(String), 2(String)
2019-05-23 14:52:04 -<==      Total: 1
2019-05-23 14:52:04 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-23 14:52:04 -==> Parameters: 2019-03(String), 2(String)
2019-05-23 14:52:04 -<==      Total: 1
2019-05-23 14:52:04 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-23 14:52:04 -==> Parameters: 2019-03(String), 2(String)
2019-05-23 14:52:04 -<==      Total: 1
2019-05-23 14:52:04 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-23 14:52:04 -==> Parameters: 2019-03(String), 2(String)
2019-05-23 14:52:04 -<==      Total: 1
2019-05-23 14:52:04 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-23 14:52:04 -==> Parameters: 2019-03(String), 2(String)
2019-05-23 14:52:04 -<==      Total: 1
2019-05-23 14:52:04 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-23 14:52:04 -==> Parameters: 2019-03(String), 2(String)
2019-05-23 14:52:04 -<==      Total: 1
2019-05-23 14:52:04 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-23 14:52:04 -==> Parameters: 2019-03(String), 2(String)
2019-05-23 14:52:04 -<==      Total: 1
2019-05-23 14:52:04 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-23 14:52:04 -==> Parameters: 2019-03(String), 2(String)
2019-05-23 14:52:04 -<==      Total: 1
2019-05-23 14:52:04 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-05-23 14:52:04 -==> Parameters: 2019-03(String), 2(String)
2019-05-23 14:52:04 -<==      Total: 1
2019-05-23 14:52:04 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-05-23 14:52:04 -==> Parameters: 2019-03(String), 2(String)
2019-05-23 14:52:04 -<==      Total: 1
2019-05-23 14:52:04 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-05-23 14:52:04 -==> Parameters: 2019-03(String), 2(String)
2019-05-23 14:52:04 -<==      Total: 1
2019-05-23 14:52:04 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-05-23 14:52:04 -==> Parameters: 2019-03(String), 2(String)
2019-05-23 14:52:04 -<==      Total: 1
2019-05-23 14:52:04 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-05-23 14:52:04 -==> Parameters: 2019-03(String), 2(String)
2019-05-23 14:52:04 -<==      Total: 1
2019-05-23 14:52:04 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-05-23 14:52:04 -==> Parameters: 2019-03(String), 2(String)
2019-05-23 14:52:04 -<==      Total: 1
2019-05-23 14:52:04 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-05-23 14:52:04 -==> Parameters: 2019-03(String), 2(String)
2019-05-23 14:52:04 -<==      Total: 1
2019-05-23 14:52:04 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-05-23 14:52:04 -==> Parameters: 2019-03(String), 2(String)
2019-05-23 14:52:04 -<==      Total: 1
2019-05-23 14:52:04 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-05-23 14:52:04 -==> Parameters: 2019-03(String), 2(String)
2019-05-23 14:52:04 -<==      Total: 1
2019-05-23 14:52:04 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-05-23 14:52:04 -==> Parameters: 2019-03(String), 2(String)
2019-05-23 14:52:04 -<==      Total: 1
2019-05-23 14:52:04 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-05-23 14:52:04 -==> Parameters: 2019-03(String), 2(String)
2019-05-23 14:52:04 -<==      Total: 1
2019-05-23 14:52:04 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-05-23 14:52:04 -==> Parameters: 2019-03(String), 2(String)
2019-05-23 14:52:04 -<==      Total: 1
2019-05-23 14:52:04 -==>  Preparing: SELECT ifnull(COUNT(ID),0)FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-05-23 14:52:04 -==> Parameters: 2019-03(String), 2(String)
2019-05-23 14:52:04 -<==      Total: 1
2019-05-23 14:52:04 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-05-23 14:52:04 -==> Parameters: 2019-03(String), 2(String)
2019-05-23 14:52:04 -<==      Total: 1
2019-05-23 14:52:04 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-23 14:52:04 -==> Parameters: 2019-03(String), 2(String)
2019-05-23 14:52:04 -<==      Total: 1
2019-05-23 14:52:04 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-23 14:52:04 -==> Parameters: 2019-03(String), 2(String)
2019-05-23 14:52:04 -<==      Total: 1
2019-05-23 14:52:04 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-23 14:52:04 -==> Parameters: 2019-03(String), 2(String)
2019-05-23 14:52:04 -<==      Total: 1
2019-05-23 14:52:04 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-23 14:52:04 -==> Parameters: 2019-03(String), 2(String)
2019-05-23 14:52:04 -<==      Total: 1
2019-05-23 14:52:04 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-23 14:52:04 -==> Parameters: 2019-03(String), 2(String)
2019-05-23 14:52:04 -<==      Total: 1
2019-05-23 14:52:04 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-23 14:52:04 -==> Parameters: 2019-03(String), 2(String)
2019-05-23 14:52:04 -<==      Total: 1
2019-05-23 14:52:04 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-23 14:52:04 -==> Parameters: 2019-03(String), 2(String)
2019-05-23 14:52:04 -<==      Total: 1
2019-05-23 14:52:04 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-23 14:52:04 -==> Parameters: 2019-03(String), 2(String)
2019-05-23 14:52:04 -<==      Total: 1
2019-05-23 14:52:04 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE WATER_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-23 14:52:04 -==> Parameters: 2019-03(String), 2(String)
2019-05-23 14:52:04 -<==      Total: 1
2019-05-23 14:52:04 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE WATER_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-23 14:52:04 -==> Parameters: 2019-03(String), 2(String)
2019-05-23 14:52:04 -<==      Total: 1
2019-05-23 14:52:04 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-23 14:52:04 -Invalid bound statement (not found): com.bootdo.moneyLog.dao.WaterLogDao.CountS1WaterLog
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.moneyLog.dao.WaterLogDao.CountS1WaterLog
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy104.CountS1WaterLog(Unknown Source)
	at com.bootdo.moneyLog.service.impl.WaterLogServiceImpl.CountS1WaterLog(WaterLogServiceImpl.java:137)
	at com.bootdo.charts.controller.countMMController.getCountMM(countMMController.java:97)
	at com.bootdo.charts.controller.countMMController$$FastClassBySpringCGLIB$$81fa892e.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor145.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.countMMController$$EnhancerBySpringCGLIB$$9901ae5a.getCountMM(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-23 14:52:04 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/countMM/getCountMM(String), org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.moneyLog.dao.WaterLogDao.CountS1WaterLog(String), null, 2019-05-23 14:52:04.735(Timestamp)
2019-05-23 14:52:04 -<==    Updates: 1
2019-05-23 15:01:44 -请求地址 : http://localhost:8081/index
2019-05-23 15:01:44 -HTTP METHOD : GET
2019-05-23 15:01:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-23 15:01:44 -参数 : [{}]
2019-05-23 15:01:44 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-23 15:01:44 -==> Parameters: 1(Long)
2019-05-23 15:01:44 -<==      Total: 49
2019-05-23 15:01:44 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-23 15:01:44 -==> Parameters: 138(Long)
2019-05-23 15:01:44 -<==      Total: 1
2019-05-23 15:01:44 -耗时 : 115
2019-05-23 15:01:44 -返回值 : index_v1
2019-05-23 15:01:44 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-23 15:01:44 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 115(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-23 15:01:44.231(Timestamp)
2019-05-23 15:01:44 -<==    Updates: 1
2019-05-23 15:01:44 -请求地址 : http://localhost:8081/main
2019-05-23 15:01:44 -HTTP METHOD : GET
2019-05-23 15:01:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-23 15:01:44 -参数 : []
2019-05-23 15:01:44 -耗时 : 0
2019-05-23 15:01:44 -返回值 : main
2019-05-23 15:01:45 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-23 15:01:45 -HTTP METHOD : GET
2019-05-23 15:01:45 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-23 15:01:45 -参数 : []
2019-05-23 15:01:45 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-23 15:01:45 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-23 15:01:45 -<==      Total: 0
2019-05-23 15:01:45 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-23 15:01:45 -==> Parameters: 1(Long), 0(String)
2019-05-23 15:01:45 -<==      Total: 1
2019-05-23 15:01:45 -耗时 : 8
2019-05-23 15:01:45 -返回值 : com.bootdo.common.utils.PageUtils@683404b8
2019-05-23 15:01:45 -请求地址 : http://localhost:8081/main
2019-05-23 15:01:45 -HTTP METHOD : GET
2019-05-23 15:01:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-23 15:01:45 -参数 : []
2019-05-23 15:01:45 -耗时 : 0
2019-05-23 15:01:45 -返回值 : main
2019-05-23 15:02:19 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:20)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:23)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:424)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:232)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-23 15:03:51 -Starting BootdoApplication on PC-201905091110 with PID 21968 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-23 15:03:51 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-23 15:03:51 -The following profiles are active: dev
2019-05-23 15:03:51 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Thu May 23 15:03:51 CST 2019]; root of context hierarchy
2019-05-23 15:03:55 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-23 15:03:58 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$c41ba62b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 15:03:58 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$b674d4d2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 15:03:59 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 15:04:00 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 15:04:00 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 15:04:00 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-23 15:04:00 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-23 15:04:00 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 15:04:00 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 15:04:00 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 15:04:01 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 15:04:02 -Tomcat initialized with port(s): 8081 (http)
2019-05-23 15:04:02 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-23 15:04:02 -Starting service [Tomcat]
2019-05-23 15:04:02 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-23 15:04:02 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-23 15:04:02 -Initializing Spring embedded WebApplicationContext
2019-05-23 15:04:02 -Root WebApplicationContext: initialization completed in 11214 ms
2019-05-23 15:04:03 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-23 15:04:03 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-23 15:04:03 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-23 15:04:03 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-23 15:04:03 -Filter xssFilter was not registered (disabled)
2019-05-23 15:04:03 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-23 15:04:03 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-23 15:04:03 -Servlet statViewServlet mapped to [/druid/*]
2019-05-23 15:04:03 -Servlet dispatcherServlet mapped to [/]
2019-05-23 15:04:08 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Thu May 23 15:03:51 CST 2019]; root of context hierarchy
2019-05-23 15:04:09 -Using default implementation for ThreadExecutor
2019-05-23 15:04:09 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-23 15:04:09 -Quartz Scheduler v.2.2.1 created.
2019-05-23 15:04:09 -RAMJobStore initialized.
2019-05-23 15:04:09 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-23 15:04:09 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-23 15:04:09 -Quartz scheduler version: 2.2.1
2019-05-23 15:04:09 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@22865072
2019-05-23 15:04:10 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-23 15:04:10 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-23 15:04:13 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 15:04:13 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-23 15:04:13 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-23 15:04:13 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 15:04:13 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-23 15:04:13 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-23 15:04:13 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-23 15:04:13 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-23 15:04:13 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-23 15:04:13 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-23 15:04:13 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-23 15:04:13 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 15:04:13 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-23 15:04:13 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 15:04:13 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-23 15:04:13 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 15:04:13 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-23 15:04:13 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-23 15:04:13 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-23 15:04:13 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-23 15:04:13 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 15:04:13 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-23 15:04:13 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-23 15:04:13 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 15:04:13 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-23 15:04:13 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-23 15:04:13 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 15:04:13 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 15:04:13 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-23 15:04:13 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-23 15:04:13 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-23 15:04:13 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-23 15:04:13 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 15:04:13 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 15:04:13 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-23 15:04:13 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-23 15:04:13 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-23 15:04:13 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-23 15:04:13 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-23 15:04:13 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-23 15:04:13 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 15:04:13 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-23 15:04:13 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-23 15:04:13 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-23 15:04:13 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-23 15:04:13 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-23 15:04:13 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 15:04:13 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-23 15:04:13 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-23 15:04:13 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-23 15:04:13 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-23 15:04:13 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 15:04:13 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-23 15:04:13 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-23 15:04:13 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-23 15:04:13 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-23 15:04:13 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 15:04:13 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 15:04:13 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-23 15:04:13 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-23 15:04:13 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-23 15:04:13 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-23 15:04:13 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-23 15:04:13 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-23 15:04:13 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-23 15:04:13 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-23 15:04:13 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-23 15:04:13 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 15:04:13 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-23 15:04:13 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-23 15:04:13 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-23 15:04:13 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-23 15:04:13 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 15:04:13 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-23 15:04:13 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-23 15:04:13 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 15:04:13 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-23 15:04:13 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-23 15:04:13 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-23 15:04:13 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-23 15:04:13 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-23 15:04:13 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-23 15:04:13 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-23 15:04:13 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-23 15:04:13 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-23 15:04:13 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-23 15:04:13 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-23 15:04:13 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-23 15:04:13 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-23 15:04:13 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 15:04:13 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-23 15:04:13 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-23 15:04:13 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-23 15:04:13 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-23 15:04:13 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-23 15:04:13 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-23 15:04:13 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-23 15:04:13 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 15:04:13 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-23 15:04:13 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-23 15:04:13 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 15:04:13 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-23 15:04:13 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-23 15:04:13 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-23 15:04:13 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-23 15:04:13 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-23 15:04:13 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-23 15:04:13 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-23 15:04:13 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 15:04:13 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-23 15:04:13 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-23 15:04:13 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-23 15:04:13 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-23 15:04:13 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-23 15:04:13 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-23 15:04:13 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-23 15:04:13 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-23 15:04:13 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-23 15:04:13 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-23 15:04:13 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-23 15:04:13 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 15:04:13 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-23 15:04:13 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-23 15:04:13 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 15:04:13 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-23 15:04:13 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-23 15:04:13 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-23 15:04:13 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-23 15:04:13 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-23 15:04:13 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-23 15:04:13 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-23 15:04:13 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-23 15:04:13 -Mapped "{[/moneyList/moneyList/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 15:04:13 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-23 15:04:13 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-23 15:04:13 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-23 15:04:13 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-23 15:04:13 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 15:04:13 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-23 15:04:13 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-23 15:04:13 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-23 15:04:13 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 15:04:13 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-23 15:04:13 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-23 15:04:13 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-23 15:04:13 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-23 15:04:13 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 15:04:13 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-23 15:04:13 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-23 15:04:13 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-23 15:04:13 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 15:04:13 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-23 15:04:13 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-23 15:04:13 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-23 15:04:13 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-23 15:04:13 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 15:04:13 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-23 15:04:13 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-23 15:04:13 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-23 15:04:13 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 15:04:13 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-23 15:04:13 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-23 15:04:13 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-23 15:04:13 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-23 15:04:13 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-23 15:04:13 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 15:04:13 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-23 15:04:13 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-23 15:04:13 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-23 15:04:13 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 15:04:13 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-23 15:04:13 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 15:04:13 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-23 15:04:13 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-23 15:04:13 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-05-23 15:04:13 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-23 15:04:13 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 15:04:13 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-23 15:04:13 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-23 15:04:13 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 15:04:13 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-23 15:04:13 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-23 15:04:13 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 15:04:13 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-23 15:04:13 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-23 15:04:13 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-23 15:04:13 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-23 15:04:13 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-23 15:04:13 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-23 15:04:13 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-23 15:04:13 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-23 15:04:13 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-23 15:04:13 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 15:04:13 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-23 15:04:13 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-23 15:04:13 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-23 15:04:13 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-23 15:04:13 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-23 15:04:13 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-23 15:04:13 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-23 15:04:13 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-23 15:04:13 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-23 15:04:13 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-23 15:04:13 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 15:04:13 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-23 15:04:13 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-23 15:04:13 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-23 15:04:13 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-23 15:04:13 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-23 15:04:13 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-23 15:04:13 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-23 15:04:13 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-23 15:04:13 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-23 15:04:13 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-23 15:04:13 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-23 15:04:13 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-23 15:04:13 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 15:04:13 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-23 15:04:13 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-23 15:04:13 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-23 15:04:13 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-23 15:04:13 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 15:04:13 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-23 15:04:13 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-23 15:04:13 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-23 15:04:13 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 15:04:13 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-23 15:04:13 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-23 15:04:13 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-23 15:04:13 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-23 15:04:13 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-23 15:04:13 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-23 15:04:13 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-23 15:04:13 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-23 15:04:13 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-23 15:04:13 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-23 15:04:13 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-23 15:04:13 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-23 15:04:13 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-23 15:04:13 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-23 15:04:13 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-23 15:04:13 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-23 15:04:13 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-23 15:04:13 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 15:04:13 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-23 15:04:13 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-23 15:04:13 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-23 15:04:13 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 15:04:13 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-23 15:04:13 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-23 15:04:13 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-23 15:04:13 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-23 15:04:13 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-23 15:04:13 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-23 15:04:13 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-23 15:04:13 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 15:04:13 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-23 15:04:13 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-23 15:04:13 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 15:04:13 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-23 15:04:13 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-23 15:04:13 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-23 15:04:13 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-23 15:04:13 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-23 15:04:14 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-23 15:04:14 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-23 15:04:14 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-23 15:04:14 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-23 15:04:14 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-23 15:04:14 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-23 15:04:15 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-23 15:04:15 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Thu May 23 15:03:51 CST 2019]; root of context hierarchy
2019-05-23 15:04:15 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-23 15:04:15 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-23 15:04:15 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-23 15:04:16 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-23 15:04:16 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-23 15:04:18 -Registering beans for JMX exposure on startup
2019-05-23 15:04:18 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-23 15:04:18 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-23 15:04:18 -Starting beans in phase 2147483647
2019-05-23 15:04:18 -Context refreshed
2019-05-23 15:04:19 -Found 1 custom documentation plugin(s)
2019-05-23 15:04:19 -Scanning for api listing references
2019-05-23 15:04:19 -Generating unique operation named: getCountDUsingPOST_1
2019-05-23 15:04:20 -Generating unique operation named: removeUsingPOST_1
2019-05-23 15:04:20 -Generating unique operation named: addUsingGET_1
2019-05-23 15:04:20 -Generating unique operation named: editUsingGET_1
2019-05-23 15:04:20 -Generating unique operation named: listUsingGET_1
2019-05-23 15:04:20 -Generating unique operation named: removeUsingPOST_2
2019-05-23 15:04:20 -Generating unique operation named: removeUsingPOST_3
2019-05-23 15:04:20 -Generating unique operation named: saveUsingPOST_1
2019-05-23 15:04:20 -Generating unique operation named: updateUsingGET_1
2019-05-23 15:04:20 -Generating unique operation named: updateUsingHEAD_1
2019-05-23 15:04:20 -Generating unique operation named: updateUsingPOST_1
2019-05-23 15:04:20 -Generating unique operation named: updateUsingPUT_1
2019-05-23 15:04:20 -Generating unique operation named: updateUsingPATCH_1
2019-05-23 15:04:20 -Generating unique operation named: updateUsingDELETE_1
2019-05-23 15:04:20 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-23 15:04:20 -Generating unique operation named: updateUsingTRACE_1
2019-05-23 15:04:20 -Generating unique operation named: addUsingGET_2
2019-05-23 15:04:20 -Generating unique operation named: editUsingGET_2
2019-05-23 15:04:20 -Generating unique operation named: listUsingGET_2
2019-05-23 15:04:20 -Generating unique operation named: removeUsingPOST_4
2019-05-23 15:04:20 -Generating unique operation named: removeUsingPOST_5
2019-05-23 15:04:20 -Generating unique operation named: saveUsingPOST_2
2019-05-23 15:04:20 -Generating unique operation named: updateUsingPOST_2
2019-05-23 15:04:20 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-23 15:04:20 -Generating unique operation named: addUsingGET_3
2019-05-23 15:04:20 -Generating unique operation named: editUsingGET_3
2019-05-23 15:04:20 -Generating unique operation named: listUsingGET_3
2019-05-23 15:04:20 -Generating unique operation named: removeUsingPOST_6
2019-05-23 15:04:20 -Generating unique operation named: removeUsingPOST_7
2019-05-23 15:04:20 -Generating unique operation named: saveUsingPOST_3
2019-05-23 15:04:20 -Generating unique operation named: updateUsingGET_2
2019-05-23 15:04:20 -Generating unique operation named: updateUsingHEAD_2
2019-05-23 15:04:20 -Generating unique operation named: updateUsingPOST_3
2019-05-23 15:04:20 -Generating unique operation named: updateUsingPUT_2
2019-05-23 15:04:20 -Generating unique operation named: updateUsingPATCH_2
2019-05-23 15:04:20 -Generating unique operation named: updateUsingDELETE_2
2019-05-23 15:04:20 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-23 15:04:20 -Generating unique operation named: updateUsingTRACE_2
2019-05-23 15:04:20 -Generating unique operation named: addUsingGET_4
2019-05-23 15:04:20 -Generating unique operation named: editUsingGET_4
2019-05-23 15:04:20 -Generating unique operation named: listUsingGET_4
2019-05-23 15:04:20 -Generating unique operation named: removeUsingPOST_8
2019-05-23 15:04:20 -Generating unique operation named: removeUsingPOST_9
2019-05-23 15:04:20 -Generating unique operation named: saveUsingPOST_4
2019-05-23 15:04:20 -Generating unique operation named: updateUsingGET_3
2019-05-23 15:04:20 -Generating unique operation named: updateUsingHEAD_3
2019-05-23 15:04:20 -Generating unique operation named: updateUsingPOST_4
2019-05-23 15:04:20 -Generating unique operation named: updateUsingPUT_3
2019-05-23 15:04:20 -Generating unique operation named: updateUsingPATCH_3
2019-05-23 15:04:20 -Generating unique operation named: updateUsingDELETE_3
2019-05-23 15:04:20 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-23 15:04:20 -Generating unique operation named: updateUsingTRACE_3
2019-05-23 15:04:20 -Generating unique operation named: ElecUsingGET_1
2019-05-23 15:04:20 -Generating unique operation named: addUsingGET_5
2019-05-23 15:04:20 -Generating unique operation named: editUsingGET_5
2019-05-23 15:04:20 -Generating unique operation named: listUsingGET_5
2019-05-23 15:04:20 -Generating unique operation named: removeUsingPOST_10
2019-05-23 15:04:20 -Generating unique operation named: removeUsingPOST_11
2019-05-23 15:04:20 -Generating unique operation named: saveUsingPOST_5
2019-05-23 15:04:21 -Generating unique operation named: updateUsingGET_4
2019-05-23 15:04:21 -Generating unique operation named: updateUsingHEAD_4
2019-05-23 15:04:21 -Generating unique operation named: updateUsingPOST_5
2019-05-23 15:04:21 -Generating unique operation named: updateUsingPUT_4
2019-05-23 15:04:21 -Generating unique operation named: updateUsingPATCH_4
2019-05-23 15:04:21 -Generating unique operation named: updateUsingDELETE_4
2019-05-23 15:04:21 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-23 15:04:21 -Generating unique operation named: updateUsingTRACE_4
2019-05-23 15:04:21 -Generating unique operation named: editUsingGET_6
2019-05-23 15:04:21 -Generating unique operation named: listUsingGET_6
2019-05-23 15:04:21 -Generating unique operation named: updateUsingPOST_6
2019-05-23 15:04:21 -Generating unique operation named: addUsingGET_6
2019-05-23 15:04:21 -Generating unique operation named: editUsingGET_7
2019-05-23 15:04:21 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-23 15:04:21 -Generating unique operation named: listUsingGET_7
2019-05-23 15:04:21 -Generating unique operation named: removeUsingPOST_12
2019-05-23 15:04:21 -Generating unique operation named: removeUsingPOST_13
2019-05-23 15:04:21 -Generating unique operation named: saveUsingPOST_6
2019-05-23 15:04:21 -Generating unique operation named: updateUsingGET_5
2019-05-23 15:04:21 -Generating unique operation named: updateUsingHEAD_5
2019-05-23 15:04:21 -Generating unique operation named: updateUsingPOST_7
2019-05-23 15:04:21 -Generating unique operation named: updateUsingPUT_5
2019-05-23 15:04:21 -Generating unique operation named: updateUsingPATCH_5
2019-05-23 15:04:21 -Generating unique operation named: updateUsingDELETE_5
2019-05-23 15:04:21 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-23 15:04:21 -Generating unique operation named: updateUsingTRACE_5
2019-05-23 15:04:21 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-23 15:04:21 -Generating unique operation named: addUsingGET_7
2019-05-23 15:04:21 -Generating unique operation named: editUsingGET_8
2019-05-23 15:04:21 -Generating unique operation named: listUsingGET_8
2019-05-23 15:04:21 -Generating unique operation named: removeUsingPOST_14
2019-05-23 15:04:21 -Generating unique operation named: removeUsingPOST_15
2019-05-23 15:04:21 -Generating unique operation named: saveUsingPOST_7
2019-05-23 15:04:21 -Generating unique operation named: updateUsingGET_6
2019-05-23 15:04:21 -Generating unique operation named: updateUsingHEAD_6
2019-05-23 15:04:21 -Generating unique operation named: updateUsingPOST_8
2019-05-23 15:04:21 -Generating unique operation named: updateUsingPUT_6
2019-05-23 15:04:21 -Generating unique operation named: updateUsingPATCH_6
2019-05-23 15:04:21 -Generating unique operation named: updateUsingDELETE_6
2019-05-23 15:04:21 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-23 15:04:21 -Generating unique operation named: updateUsingTRACE_6
2019-05-23 15:04:21 -Generating unique operation named: addUsingGET_8
2019-05-23 15:04:21 -Generating unique operation named: editUsingGET_9
2019-05-23 15:04:21 -Generating unique operation named: listUsingGET_9
2019-05-23 15:04:21 -Generating unique operation named: removeUsingPOST_16
2019-05-23 15:04:21 -Generating unique operation named: removeUsingPOST_17
2019-05-23 15:04:21 -Generating unique operation named: saveUsingPOST_8
2019-05-23 15:04:21 -Generating unique operation named: updateUsingGET_7
2019-05-23 15:04:21 -Generating unique operation named: updateUsingHEAD_7
2019-05-23 15:04:21 -Generating unique operation named: updateUsingPOST_9
2019-05-23 15:04:21 -Generating unique operation named: updateUsingPUT_7
2019-05-23 15:04:21 -Generating unique operation named: updateUsingPATCH_7
2019-05-23 15:04:21 -Generating unique operation named: updateUsingDELETE_7
2019-05-23 15:04:21 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-23 15:04:21 -Generating unique operation named: updateUsingTRACE_7
2019-05-23 15:04:21 -Generating unique operation named: addUsingGET_9
2019-05-23 15:04:21 -Generating unique operation named: editUsingGET_10
2019-05-23 15:04:21 -Generating unique operation named: infoUsingGET_1
2019-05-23 15:04:21 -Generating unique operation named: infoUsingHEAD_1
2019-05-23 15:04:21 -Generating unique operation named: infoUsingPOST_1
2019-05-23 15:04:21 -Generating unique operation named: infoUsingPUT_1
2019-05-23 15:04:21 -Generating unique operation named: infoUsingPATCH_1
2019-05-23 15:04:21 -Generating unique operation named: infoUsingDELETE_1
2019-05-23 15:04:21 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-23 15:04:21 -Generating unique operation named: infoUsingTRACE_1
2019-05-23 15:04:21 -Generating unique operation named: listUsingGET_10
2019-05-23 15:04:21 -Generating unique operation named: removeUsingPOST_18
2019-05-23 15:04:21 -Generating unique operation named: removeUsingPOST_19
2019-05-23 15:04:21 -Generating unique operation named: saveUsingPOST_9
2019-05-23 15:04:21 -Generating unique operation named: updateUsingPOST_10
2019-05-23 15:04:21 -Generating unique operation named: listUsingGET_11
2019-05-23 15:04:21 -Generating unique operation named: removeUsingPOST_20
2019-05-23 15:04:21 -Generating unique operation named: welcomeUsingGET_1
2019-05-23 15:04:21 -Generating unique operation named: addUsingGET_10
2019-05-23 15:04:21 -Generating unique operation named: editUsingGET_11
2019-05-23 15:04:21 -Generating unique operation named: listUsingGET_12
2019-05-23 15:04:21 -Generating unique operation named: removeUsingPOST_21
2019-05-23 15:04:21 -Generating unique operation named: saveUsingPOST_10
2019-05-23 15:04:21 -Generating unique operation named: treeUsingGET_1
2019-05-23 15:04:21 -Generating unique operation named: treeUsingGET_2
2019-05-23 15:04:21 -Generating unique operation named: updateUsingPOST_11
2019-05-23 15:04:21 -Generating unique operation named: editUsingGET_12
2019-05-23 15:04:22 -Generating unique operation named: addUsingGET_11
2019-05-23 15:04:22 -Generating unique operation named: editUsingGET_13
2019-05-23 15:04:22 -Generating unique operation named: listUsingGET_13
2019-05-23 15:04:22 -Generating unique operation named: removeUsingPOST_22
2019-05-23 15:04:22 -Generating unique operation named: removeUsingPOST_23
2019-05-23 15:04:22 -Generating unique operation named: saveUsingPOST_11
2019-05-23 15:04:22 -Generating unique operation named: updateUsingGET_8
2019-05-23 15:04:22 -Generating unique operation named: updateUsingHEAD_8
2019-05-23 15:04:22 -Generating unique operation named: updateUsingPOST_12
2019-05-23 15:04:22 -Generating unique operation named: updateUsingPUT_8
2019-05-23 15:04:22 -Generating unique operation named: updateUsingPATCH_8
2019-05-23 15:04:22 -Generating unique operation named: updateUsingDELETE_8
2019-05-23 15:04:22 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-23 15:04:22 -Generating unique operation named: updateUsingTRACE_8
2019-05-23 15:04:22 -Generating unique operation named: addUsingGET_12
2019-05-23 15:04:22 -Generating unique operation named: editUsingGET_14
2019-05-23 15:04:22 -Generating unique operation named: listUsingGET_14
2019-05-23 15:04:22 -Generating unique operation named: removeUsingPOST_24
2019-05-23 15:04:22 -Generating unique operation named: removeUsingPOST_25
2019-05-23 15:04:22 -Generating unique operation named: saveUsingPOST_12
2019-05-23 15:04:22 -Generating unique operation named: updateUsingGET_9
2019-05-23 15:04:22 -Generating unique operation named: updateUsingHEAD_9
2019-05-23 15:04:22 -Generating unique operation named: updateUsingPOST_13
2019-05-23 15:04:22 -Generating unique operation named: updateUsingPUT_9
2019-05-23 15:04:22 -Generating unique operation named: updateUsingPATCH_9
2019-05-23 15:04:22 -Generating unique operation named: updateUsingDELETE_9
2019-05-23 15:04:22 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-23 15:04:22 -Generating unique operation named: updateUsingTRACE_9
2019-05-23 15:04:22 -Generating unique operation named: addUsingGET_13
2019-05-23 15:04:22 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-23 15:04:22 -Generating unique operation named: editUsingGET_15
2019-05-23 15:04:22 -Generating unique operation named: listUsingGET_15
2019-05-23 15:04:22 -Generating unique operation named: saveUsingPOST_13
2019-05-23 15:04:22 -Generating unique operation named: saveUsingPOST_14
2019-05-23 15:04:22 -Generating unique operation named: updateUsingPOST_14
2019-05-23 15:04:22 -Generating unique operation named: listUsingGET_16
2019-05-23 15:04:22 -Generating unique operation named: listUsingHEAD_1
2019-05-23 15:04:22 -Generating unique operation named: listUsingPOST_1
2019-05-23 15:04:22 -Generating unique operation named: listUsingPUT_1
2019-05-23 15:04:22 -Generating unique operation named: listUsingPATCH_1
2019-05-23 15:04:22 -Generating unique operation named: listUsingDELETE_1
2019-05-23 15:04:22 -Generating unique operation named: listUsingOPTIONS_1
2019-05-23 15:04:22 -Generating unique operation named: listUsingTRACE_1
2019-05-23 15:04:22 -Generating unique operation named: countDDUsingGET_1
2019-05-23 15:04:22 -Generating unique operation named: exportDDUsingGET_1
2019-05-23 15:04:22 -Generating unique operation named: addUsingGET_14
2019-05-23 15:04:22 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-23 15:04:22 -Generating unique operation named: editUsingGET_16
2019-05-23 15:04:22 -Generating unique operation named: listUsingGET_17
2019-05-23 15:04:22 -Generating unique operation named: removeUsingPOST_26
2019-05-23 15:04:22 -Generating unique operation named: saveUsingPOST_15
2019-05-23 15:04:22 -Generating unique operation named: treeUsingGET_3
2019-05-23 15:04:22 -Generating unique operation named: treeViewUsingGET_1
2019-05-23 15:04:22 -Generating unique operation named: updateUsingPOST_15
2019-05-23 15:04:22 -Generating unique operation named: addUsingGET_15
2019-05-23 15:04:22 -Generating unique operation named: editUsingGET_17
2019-05-23 15:04:22 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-23 15:04:22 -Generating unique operation named: listUsingGET_18
2019-05-23 15:04:22 -Generating unique operation named: removeUsingPOST_27
2019-05-23 15:04:22 -Generating unique operation named: removeUsingPOST_28
2019-05-23 15:04:22 -Generating unique operation named: saveUsingPOST_16
2019-05-23 15:04:22 -Generating unique operation named: updateUsingGET_10
2019-05-23 15:04:22 -Generating unique operation named: updateUsingHEAD_10
2019-05-23 15:04:22 -Generating unique operation named: updateUsingPOST_16
2019-05-23 15:04:22 -Generating unique operation named: updateUsingPUT_10
2019-05-23 15:04:22 -Generating unique operation named: updateUsingPATCH_10
2019-05-23 15:04:22 -Generating unique operation named: updateUsingDELETE_10
2019-05-23 15:04:22 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-23 15:04:22 -Generating unique operation named: updateUsingTRACE_10
2019-05-23 15:04:22 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-23 15:04:22 -Generating unique operation named: addUsingGET_16
2019-05-23 15:04:22 -Generating unique operation named: editUsingGET_18
2019-05-23 15:04:22 -Generating unique operation named: listUsingGET_19
2019-05-23 15:04:22 -Generating unique operation named: removeUsingPOST_29
2019-05-23 15:04:22 -Generating unique operation named: removeUsingPOST_30
2019-05-23 15:04:22 -Generating unique operation named: saveUsingPOST_17
2019-05-23 15:04:22 -Generating unique operation named: updateUsingGET_11
2019-05-23 15:04:22 -Generating unique operation named: updateUsingHEAD_11
2019-05-23 15:04:22 -Generating unique operation named: updateUsingPOST_17
2019-05-23 15:04:22 -Generating unique operation named: updateUsingPUT_11
2019-05-23 15:04:22 -Generating unique operation named: updateUsingPATCH_11
2019-05-23 15:04:22 -Generating unique operation named: updateUsingDELETE_11
2019-05-23 15:04:22 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-23 15:04:22 -Generating unique operation named: updateUsingTRACE_11
2019-05-23 15:04:22 -Generating unique operation named: addUsingGET_17
2019-05-23 15:04:22 -Generating unique operation named: editUsingGET_19
2019-05-23 15:04:22 -Generating unique operation named: listUsingGET_20
2019-05-23 15:04:22 -Generating unique operation named: removeUsingPOST_31
2019-05-23 15:04:22 -Generating unique operation named: removeUsingPOST_32
2019-05-23 15:04:22 -Generating unique operation named: saveUsingPOST_18
2019-05-23 15:04:22 -Generating unique operation named: updateUsingGET_12
2019-05-23 15:04:23 -Generating unique operation named: updateUsingHEAD_12
2019-05-23 15:04:23 -Generating unique operation named: updateUsingPOST_18
2019-05-23 15:04:23 -Generating unique operation named: updateUsingPUT_12
2019-05-23 15:04:23 -Generating unique operation named: updateUsingPATCH_12
2019-05-23 15:04:23 -Generating unique operation named: updateUsingDELETE_12
2019-05-23 15:04:23 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-23 15:04:23 -Generating unique operation named: updateUsingTRACE_12
2019-05-23 15:04:23 -Starting Quartz Scheduler now
2019-05-23 15:04:23 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-23 15:04:23 -Starting...
2019-05-23 15:04:23 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-23 15:04:23 -Started.
2019-05-23 15:04:23 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-23 15:04:23 -Using a shared selector for servlet write/read
2019-05-23 15:04:23 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-23 15:04:23 -Started BootdoApplication in 33.567 seconds (JVM running for 34.45)
2019-05-23 15:04:23 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-23 15:04:23 -==> Parameters: 
2019-05-23 15:04:23 -<==      Total: 1
2019-05-23 15:04:37 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-23 15:04:37 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-23 15:04:37 -FrameworkServlet 'dispatcherServlet': initialization completed in 67 ms
2019-05-23 15:04:37 -Enabling session validation scheduler...
2019-05-23 15:04:37 -请求地址 : http://localhost:8081/login;JSESSIONID=89da60d3-264a-4537-91c2-057d8a7cd5a9
2019-05-23 15:04:37 -HTTP METHOD : GET
2019-05-23 15:04:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-23 15:04:37 -参数 : [{}]
2019-05-23 15:04:37 -耗时 : 4
2019-05-23 15:04:37 -返回值 : login
2019-05-23 15:04:39 -请求地址 : http://localhost:8081/getVerify
2019-05-23 15:04:39 -HTTP METHOD : GET
2019-05-23 15:04:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-23 15:04:39 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@4ce4ae2a, org.apache.shiro.web.servlet.ShiroHttpServletResponse@624f9958]
2019-05-23 15:04:58 -2250
2019-05-23 15:04:58 -耗时 : 19434
2019-05-23 15:04:58 -返回值 : null
2019-05-23 15:05:02 -请求地址 : http://localhost:8081/login
2019-05-23 15:05:02 -HTTP METHOD : POST
2019-05-23 15:05:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-23 15:05:02 -参数 : [admin, 111111, 2250, org.apache.shiro.web.servlet.ShiroHttpServletRequest@72eb776a]
2019-05-23 15:05:02 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-23 15:05:02 -==> Parameters: admin(String)
2019-05-23 15:05:02 -<==      Total: 1
2019-05-23 15:05:02 -耗时 : 366
2019-05-23 15:05:02 -返回值 : {msg=操作成功, code=0}
2019-05-23 15:05:02 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-23 15:05:02 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-23 15:05:02 -==> Parameters: 1(Long), admin(String), 登录(String), 366(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-23 15:05:02.757(Timestamp)
2019-05-23 15:05:02 -请求地址 : http://localhost:8081/index
2019-05-23 15:05:02 -HTTP METHOD : GET
2019-05-23 15:05:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-23 15:05:02 -参数 : [{}]
2019-05-23 15:05:02 -<==    Updates: 1
2019-05-23 15:05:02 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-23 15:05:03 -==> Parameters: 1(Long)
2019-05-23 15:05:03 -<==      Total: 49
2019-05-23 15:05:03 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-23 15:05:03 -==> Parameters: 138(Long)
2019-05-23 15:05:03 -<==      Total: 1
2019-05-23 15:05:03 -耗时 : 425
2019-05-23 15:05:03 -返回值 : index_v1
2019-05-23 15:05:03 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-23 15:05:03 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 425(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-23 15:05:03.412(Timestamp)
2019-05-23 15:05:03 -<==    Updates: 1
2019-05-23 15:05:03 -请求地址 : http://localhost:8081/main
2019-05-23 15:05:03 -HTTP METHOD : GET
2019-05-23 15:05:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-23 15:05:03 -参数 : []
2019-05-23 15:05:03 -耗时 : 2
2019-05-23 15:05:03 -返回值 : main
2019-05-23 15:05:04 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-23 15:05:04 -HTTP METHOD : GET
2019-05-23 15:05:04 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-23 15:05:04 -参数 : []
2019-05-23 15:05:04 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-23 15:05:04 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-23 15:05:04 -请求地址 : http://localhost:8081/main
2019-05-23 15:05:04 -HTTP METHOD : GET
2019-05-23 15:05:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-23 15:05:04 -参数 : []
2019-05-23 15:05:04 -耗时 : 0
2019-05-23 15:05:04 -返回值 : main
2019-05-23 15:05:04 -<==      Total: 0
2019-05-23 15:05:04 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-23 15:05:04 -==> Parameters: 1(Long), 0(String)
2019-05-23 15:05:04 -<==      Total: 1
2019-05-23 15:05:04 -耗时 : 303
2019-05-23 15:05:04 -返回值 : com.bootdo.common.utils.PageUtils@768e6dfe
2019-05-23 15:05:14 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 3]
2019-05-23 15:05:35 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-23 15:05:35 -==> Parameters: 1(Long)
2019-05-23 15:05:35 -<==      Total: 93
2019-05-23 15:05:35 -请求地址 : http://localhost:8081/charts/countRun
2019-05-23 15:05:35 -HTTP METHOD : GET
2019-05-23 15:05:35 -CLASS_METHOD : com.bootdo.charts.controller.countRunController.countRun
2019-05-23 15:05:35 -参数 : []
2019-05-23 15:05:35 -耗时 : 0
2019-05-23 15:05:35 -返回值 : charts/countRun
2019-05-23 15:05:36 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-23 15:05:36 -HTTP METHOD : GET
2019-05-23 15:05:36 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-23 15:05:36 -参数 : [userType]
2019-05-23 15:05:36 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-23 15:05:36 -==> Parameters: userType(String)
2019-05-23 15:05:36 -<==      Total: 4
2019-05-23 15:05:36 -耗时 : 96
2019-05-23 15:05:36 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-23 15:07:59 -请求地址 : http://localhost:8081/index
2019-05-23 15:07:59 -HTTP METHOD : GET
2019-05-23 15:07:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-23 15:07:59 -参数 : [{}]
2019-05-23 15:07:59 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-23 15:07:59 -==> Parameters: 1(Long)
2019-05-23 15:07:59 -<==      Total: 49
2019-05-23 15:07:59 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-23 15:07:59 -==> Parameters: 138(Long)
2019-05-23 15:07:59 -<==      Total: 1
2019-05-23 15:07:59 -耗时 : 60
2019-05-23 15:07:59 -返回值 : index_v1
2019-05-23 15:07:59 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-23 15:07:59 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 61(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-23 15:07:59.211(Timestamp)
2019-05-23 15:07:59 -请求地址 : http://localhost:8081/main
2019-05-23 15:07:59 -HTTP METHOD : GET
2019-05-23 15:07:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-23 15:07:59 -参数 : []
2019-05-23 15:07:59 -耗时 : 1
2019-05-23 15:07:59 -返回值 : main
2019-05-23 15:07:59 -<==    Updates: 1
2019-05-23 15:07:59 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-23 15:07:59 -HTTP METHOD : GET
2019-05-23 15:07:59 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-23 15:07:59 -参数 : []
2019-05-23 15:07:59 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-23 15:07:59 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-23 15:07:59 -<==      Total: 0
2019-05-23 15:07:59 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-23 15:07:59 -==> Parameters: 1(Long), 0(String)
2019-05-23 15:07:59 -<==      Total: 1
2019-05-23 15:07:59 -耗时 : 6
2019-05-23 15:07:59 -返回值 : com.bootdo.common.utils.PageUtils@1250c4ea
2019-05-23 15:07:59 -请求地址 : http://localhost:8081/main
2019-05-23 15:07:59 -HTTP METHOD : GET
2019-05-23 15:07:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-23 15:07:59 -参数 : []
2019-05-23 15:07:59 -耗时 : 0
2019-05-23 15:07:59 -返回值 : main
2019-05-23 15:08:05 -请求地址 : http://localhost:8081/water/water
2019-05-23 15:08:05 -HTTP METHOD : GET
2019-05-23 15:08:05 -CLASS_METHOD : com.bootdo.water.controller.WaterController.Water
2019-05-23 15:08:05 -参数 : []
2019-05-23 15:08:05 -耗时 : 0
2019-05-23 15:08:05 -返回值 : water/water/water
2019-05-23 15:08:06 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-23 15:08:06 -HTTP METHOD : GET
2019-05-23 15:08:06 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-23 15:08:06 -参数 : [userType]
2019-05-23 15:08:06 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-05-23 15:08:06 -HTTP METHOD : GET
2019-05-23 15:08:06 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-23 15:08:06 -参数 : [waterType]
2019-05-23 15:08:06 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-23 15:08:06 -==> Parameters: userType(String)
2019-05-23 15:08:06 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-23 15:08:06 -==> Parameters: waterType(String)
2019-05-23 15:08:06 -<==      Total: 4
2019-05-23 15:08:06 -耗时 : 11
2019-05-23 15:08:06 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-23 15:08:06 -<==      Total: 4
2019-05-23 15:08:06 -耗时 : 213
2019-05-23 15:08:06 -返回值 : [DictDO{id=188, name='民用水', value='1', type='waterType', description='水费性质', sort=10, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=187, name='商业水1', value='2', type='waterType', description='水费性质', sort=20, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=186, name='商业水2', value='3', type='waterType', description='水费性质', sort=30, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=185, name='商业水3', value='4', type='waterType', description='水费性质', sort=40, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-23 15:08:06 -请求地址 : http://localhost:8081/water/water/list
2019-05-23 15:08:06 -HTTP METHOD : GET
2019-05-23 15:08:06 -CLASS_METHOD : com.bootdo.water.controller.WaterController.list
2019-05-23 15:08:06 -参数 : [{limit=10, offset=0, userType=, waterType=, userOrg=, userId=, createTime=, queryType=1}]
2019-05-23 15:08:06 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_cost`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water order by id asc limit ?, ? 
2019-05-23 15:08:06 -==> Parameters: 0(Integer), 10(Integer)
2019-05-23 15:08:06 -<==      Total: 10
2019-05-23 15:08:06 -==>  Preparing: select count(*) from water 
2019-05-23 15:08:06 -==> Parameters: 
2019-05-23 15:08:06 -<==      Total: 1
2019-05-23 15:08:06 -耗时 : 282
2019-05-23 15:08:06 -返回值 : com.bootdo.common.utils.PageUtils@61bf2a88
2019-05-23 15:08:13 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-05-23 15:08:13 -HTTP METHOD : GET
2019-05-23 15:08:13 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-23 15:08:13 -参数 : []
2019-05-23 15:08:13 -耗时 : 20
2019-05-23 15:08:13 -返回值 : charts/tableElecMM
2019-05-23 15:08:13 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-23 15:08:13 -HTTP METHOD : GET
2019-05-23 15:08:13 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-23 15:08:13 -参数 : [userType]
2019-05-23 15:08:13 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-23 15:08:13 -==> Parameters: userType(String)
2019-05-23 15:08:13 -<==      Total: 4
2019-05-23 15:08:13 -耗时 : 10
2019-05-23 15:08:13 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-23 15:09:03 -请求地址 : http://localhost:8081/index
2019-05-23 15:09:03 -HTTP METHOD : GET
2019-05-23 15:09:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-23 15:09:03 -参数 : [{}]
2019-05-23 15:09:03 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-23 15:09:03 -==> Parameters: 1(Long)
2019-05-23 15:09:03 -<==      Total: 49
2019-05-23 15:09:03 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-23 15:09:03 -==> Parameters: 138(Long)
2019-05-23 15:09:03 -<==      Total: 1
2019-05-23 15:09:03 -耗时 : 133
2019-05-23 15:09:03 -返回值 : index_v1
2019-05-23 15:09:03 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-23 15:09:03 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 133(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-23 15:09:03.574(Timestamp)
2019-05-23 15:09:03 -请求地址 : http://localhost:8081/main
2019-05-23 15:09:03 -HTTP METHOD : GET
2019-05-23 15:09:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-23 15:09:03 -参数 : []
2019-05-23 15:09:03 -耗时 : 1
2019-05-23 15:09:03 -返回值 : main
2019-05-23 15:09:03 -<==    Updates: 1
2019-05-23 15:09:03 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-23 15:09:03 -HTTP METHOD : GET
2019-05-23 15:09:03 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-23 15:09:03 -参数 : []
2019-05-23 15:09:03 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-23 15:09:03 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-23 15:09:03 -<==      Total: 0
2019-05-23 15:09:03 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-23 15:09:03 -==> Parameters: 1(Long), 0(String)
2019-05-23 15:09:03 -<==      Total: 1
2019-05-23 15:09:03 -耗时 : 9
2019-05-23 15:09:03 -返回值 : com.bootdo.common.utils.PageUtils@14b4a2ad
2019-05-23 15:09:03 -请求地址 : http://localhost:8081/main
2019-05-23 15:09:03 -HTTP METHOD : GET
2019-05-23 15:09:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-23 15:09:03 -参数 : []
2019-05-23 15:09:03 -耗时 : 3
2019-05-23 15:09:03 -返回值 : main
2019-05-23 15:09:18 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-23 15:09:18 -HTTP METHOD : GET
2019-05-23 15:09:18 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-23 15:09:18 -参数 : []
2019-05-23 15:09:18 -耗时 : 13
2019-05-23 15:09:18 -返回值 : charts/tableElecYY
2019-05-23 15:09:18 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-23 15:09:18 -HTTP METHOD : GET
2019-05-23 15:09:18 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-23 15:09:18 -参数 : [userType]
2019-05-23 15:09:18 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-23 15:09:18 -==> Parameters: userType(String)
2019-05-23 15:09:18 -<==      Total: 4
2019-05-23 15:09:18 -耗时 : 4
2019-05-23 15:09:18 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-23 15:09:19 -请求地址 : http://localhost:8081/charts/countYY
2019-05-23 15:09:19 -HTTP METHOD : GET
2019-05-23 15:09:19 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.countYY
2019-05-23 15:09:19 -参数 : []
2019-05-23 15:09:19 -耗时 : 0
2019-05-23 15:09:19 -返回值 : charts/countYY
2019-05-23 15:09:19 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-23 15:09:19 -HTTP METHOD : GET
2019-05-23 15:09:19 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-23 15:09:19 -参数 : [userType]
2019-05-23 15:09:19 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-23 15:09:19 -==> Parameters: userType(String)
2019-05-23 15:09:19 -<==      Total: 4
2019-05-23 15:09:19 -耗时 : 4
2019-05-23 15:09:19 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-23 15:09:34 -请求地址 : http://localhost:8081/charts/countOwe
2019-05-23 15:09:34 -HTTP METHOD : GET
2019-05-23 15:09:34 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.countOwe
2019-05-23 15:09:34 -参数 : []
2019-05-23 15:09:34 -耗时 : 1
2019-05-23 15:09:34 -返回值 : charts/countOwe
2019-05-23 15:09:34 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-23 15:09:34 -HTTP METHOD : GET
2019-05-23 15:09:34 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-23 15:09:34 -参数 : [userType]
2019-05-23 15:09:34 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-23 15:09:34 -==> Parameters: userType(String)
2019-05-23 15:09:34 -<==      Total: 4
2019-05-23 15:09:34 -耗时 : 6
2019-05-23 15:09:34 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-23 15:09:34 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-05-23 15:09:34 -HTTP METHOD : GET
2019-05-23 15:09:34 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-23 15:09:34 -参数 : []
2019-05-23 15:09:34 -耗时 : 0
2019-05-23 15:09:34 -返回值 : charts/tableElecMM
2019-05-23 15:09:35 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-23 15:09:35 -HTTP METHOD : GET
2019-05-23 15:09:35 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-23 15:09:35 -参数 : [userType]
2019-05-23 15:09:35 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-23 15:09:35 -==> Parameters: userType(String)
2019-05-23 15:09:35 -<==      Total: 4
2019-05-23 15:09:35 -耗时 : 5
2019-05-23 15:09:35 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-23 15:09:36 -请求地址 : http://localhost:8081/charts/countMM
2019-05-23 15:09:36 -HTTP METHOD : GET
2019-05-23 15:09:36 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-05-23 15:09:36 -参数 : []
2019-05-23 15:09:36 -耗时 : 11
2019-05-23 15:09:36 -返回值 : charts/countMM
2019-05-23 15:09:36 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-23 15:09:36 -HTTP METHOD : GET
2019-05-23 15:09:36 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-23 15:09:36 -参数 : [userType]
2019-05-23 15:09:36 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-23 15:09:36 -==> Parameters: userType(String)
2019-05-23 15:09:36 -<==      Total: 4
2019-05-23 15:09:36 -耗时 : 4
2019-05-23 15:09:36 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-23 15:09:42 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-23 15:09:42 -HTTP METHOD : GET
2019-05-23 15:09:42 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-23 15:09:42 -参数 : []
2019-05-23 15:09:42 -耗时 : 1
2019-05-23 15:09:42 -返回值 : system/dept/deptTree
2019-05-23 15:09:42 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-23 15:09:42 -HTTP METHOD : GET
2019-05-23 15:09:42 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-23 15:09:42 -参数 : []
2019-05-23 15:09:42 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-23 15:09:42 -==> Parameters: 
2019-05-23 15:09:42 -<==      Total: 3
2019-05-23 15:09:42 -耗时 : 19
2019-05-23 15:09:42 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-23 15:09:44 -请求地址 : http://localhost:8081/charts/countMM/getCountMM
2019-05-23 15:09:44 -HTTP METHOD : POST
2019-05-23 15:09:44 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.getCountMM
2019-05-23 15:09:44 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@2193754d, com.bootdo.moneyLog.vo.WaterLogVo@6210c6ef, com.bootdo.moneyLog.vo.HeatLogVo@685119df]
2019-05-23 15:09:44 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-23 15:09:44 -==> Parameters: 2019-03(String), 2(String)
2019-05-23 15:09:44 -<==      Total: 1
2019-05-23 15:09:44 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-23 15:09:44 -==> Parameters: 2019-03(String), 2(String)
2019-05-23 15:09:44 -<==      Total: 1
2019-05-23 15:09:44 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-23 15:09:44 -==> Parameters: 2019-03(String), 2(String)
2019-05-23 15:09:44 -<==      Total: 1
2019-05-23 15:09:44 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-23 15:09:44 -==> Parameters: 2019-03(String), 2(String)
2019-05-23 15:09:44 -<==      Total: 1
2019-05-23 15:09:44 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-23 15:09:44 -==> Parameters: 2019-03(String), 2(String)
2019-05-23 15:09:44 -<==      Total: 1
2019-05-23 15:09:44 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-23 15:09:44 -==> Parameters: 2019-03(String), 2(String)
2019-05-23 15:09:44 -<==      Total: 1
2019-05-23 15:09:44 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-23 15:09:44 -==> Parameters: 2019-03(String), 2(String)
2019-05-23 15:09:44 -<==      Total: 1
2019-05-23 15:09:44 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-23 15:09:44 -==> Parameters: 2019-03(String), 2(String)
2019-05-23 15:09:44 -<==      Total: 1
2019-05-23 15:09:44 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-05-23 15:09:44 -==> Parameters: 2019-03(String), 2(String)
2019-05-23 15:09:44 -<==      Total: 1
2019-05-23 15:09:44 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-05-23 15:09:44 -==> Parameters: 2019-03(String), 2(String)
2019-05-23 15:09:44 -<==      Total: 1
2019-05-23 15:09:44 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-05-23 15:09:44 -==> Parameters: 2019-03(String), 2(String)
2019-05-23 15:09:44 -<==      Total: 1
2019-05-23 15:09:44 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-05-23 15:09:44 -==> Parameters: 2019-03(String), 2(String)
2019-05-23 15:09:44 -<==      Total: 1
2019-05-23 15:09:44 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-05-23 15:09:44 -==> Parameters: 2019-03(String), 2(String)
2019-05-23 15:09:44 -<==      Total: 1
2019-05-23 15:09:44 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-05-23 15:09:44 -==> Parameters: 2019-03(String), 2(String)
2019-05-23 15:09:44 -<==      Total: 1
2019-05-23 15:09:44 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-05-23 15:09:44 -==> Parameters: 2019-03(String), 2(String)
2019-05-23 15:09:44 -<==      Total: 1
2019-05-23 15:09:44 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-05-23 15:09:44 -==> Parameters: 2019-03(String), 2(String)
2019-05-23 15:09:44 -<==      Total: 1
2019-05-23 15:09:44 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-05-23 15:09:44 -==> Parameters: 2019-03(String), 2(String)
2019-05-23 15:09:44 -<==      Total: 1
2019-05-23 15:09:44 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-05-23 15:09:44 -==> Parameters: 2019-03(String), 2(String)
2019-05-23 15:09:44 -<==      Total: 1
2019-05-23 15:09:44 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-05-23 15:09:44 -==> Parameters: 2019-03(String), 2(String)
2019-05-23 15:09:44 -<==      Total: 1
2019-05-23 15:09:44 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-05-23 15:09:44 -==> Parameters: 2019-03(String), 2(String)
2019-05-23 15:09:44 -<==      Total: 1
2019-05-23 15:09:44 -==>  Preparing: SELECT ifnull(COUNT(ID),0)FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-05-23 15:09:44 -==> Parameters: 2019-03(String), 2(String)
2019-05-23 15:09:44 -<==      Total: 1
2019-05-23 15:09:44 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-05-23 15:09:44 -==> Parameters: 2019-03(String), 2(String)
2019-05-23 15:09:44 -<==      Total: 1
2019-05-23 15:09:44 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-23 15:09:44 -==> Parameters: 2019-03(String), 2(String)
2019-05-23 15:09:45 -<==      Total: 1
2019-05-23 15:09:45 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-23 15:09:45 -==> Parameters: 2019-03(String), 2(String)
2019-05-23 15:09:45 -<==      Total: 1
2019-05-23 15:09:45 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-23 15:09:45 -==> Parameters: 2019-03(String), 2(String)
2019-05-23 15:09:45 -<==      Total: 1
2019-05-23 15:09:45 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-23 15:09:45 -==> Parameters: 2019-03(String), 2(String)
2019-05-23 15:09:45 -<==      Total: 1
2019-05-23 15:09:45 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-23 15:09:45 -==> Parameters: 2019-03(String), 2(String)
2019-05-23 15:09:45 -<==      Total: 1
2019-05-23 15:09:45 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-23 15:09:45 -==> Parameters: 2019-03(String), 2(String)
2019-05-23 15:09:45 -<==      Total: 1
2019-05-23 15:09:45 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-23 15:09:45 -==> Parameters: 2019-03(String), 2(String)
2019-05-23 15:09:45 -<==      Total: 1
2019-05-23 15:09:45 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-23 15:09:45 -==> Parameters: 2019-03(String), 2(String)
2019-05-23 15:09:45 -<==      Total: 1
2019-05-23 15:09:45 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE WATER_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-23 15:09:45 -==> Parameters: 2019-03(String), 2(String)
2019-05-23 15:09:45 -<==      Total: 1
2019-05-23 15:09:45 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE WATER_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-23 15:09:45 -==> Parameters: 2019-03(String), 2(String)
2019-05-23 15:09:45 -<==      Total: 1
2019-05-23 15:09:45 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE WATER_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-23 15:09:45 -==> Parameters: 2019-03(String), 2(String)
2019-05-23 15:09:45 -<==      Total: 1
2019-05-23 15:09:45 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE WATER_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-23 15:09:45 -==> Parameters: 2019-03(String), 2(String)
2019-05-23 15:09:45 -<==      Total: 1
2019-05-23 15:09:45 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE WATER_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-23 15:09:45 -==> Parameters: 2019-03(String), 2(String)
2019-05-23 15:09:45 -<==      Total: 1
2019-05-23 15:09:45 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE WATER_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-23 15:09:45 -==> Parameters: 2019-03(String), 2(String)
2019-05-23 15:09:45 -<==      Total: 1
2019-05-23 15:09:45 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE WATER_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-23 15:09:45 -==> Parameters: 2019-03(String), 2(String)
2019-05-23 15:09:45 -<==      Total: 1
2019-05-23 15:09:45 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE WATER_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-23 15:09:45 -==> Parameters: 2019-03(String), 2(String)
2019-05-23 15:09:45 -<==      Total: 1
2019-05-23 15:09:45 -耗时 : 428
2019-05-23 15:09:45 -返回值 : {CountSHeatLog=1, CountG2ElecLog=0, CountG3ElecLog=1, SumG1ElecLog=0, CountG1ElecLog=0, SumWSElecLog=80, SumS2WaterLog=120, totalSumElec=392, SumG2ElecLog=0, CountWSElecLog=1, SumWMElecLog=0, totalCount=33, CountMMElecLog=0, SumSHeatLog=40, SumS3WaterLog=0, CountWMElecLog=0, CountMElecLog=3, SumG3ElecLog=90, CountSElecLog=1, SumGSHeatLog=0, SumS1WaterLog=20, CountZElecLog=0, SumGMHeatLog=80, totalSumWater=273, CountMHeatLog=6, CountGSHeatLog=0, CountWGElecLog=1, SumSElecLog=60, CountS3WaterLog=0, SumMHeatLog=124, SumZElecLog=0, SumWGElecLog=10, CountGMHeatLog=1, CountS1WaterLog=1, CountMWaterLog=15, CountS2WaterLog=2, CountMSElecLog=0, totalSum=909, SumMElecLog=152, totalSumHeat=244, SumMMElecLog=0, SumMWaterLog=133, SumMSElecLog=0}
2019-05-23 15:10:24 -请求地址 : http://localhost:8081/charts/countDD
2019-05-23 15:10:24 -HTTP METHOD : GET
2019-05-23 15:10:24 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-05-23 15:10:24 -参数 : []
2019-05-23 15:10:24 -耗时 : 14
2019-05-23 15:10:24 -返回值 : charts/countDD
2019-05-23 15:10:24 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-23 15:10:24 -HTTP METHOD : GET
2019-05-23 15:10:24 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-23 15:10:24 -参数 : [userType]
2019-05-23 15:10:24 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-23 15:10:24 -==> Parameters: userType(String)
2019-05-23 15:10:24 -<==      Total: 4
2019-05-23 15:10:24 -耗时 : 5
2019-05-23 15:10:24 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-23 15:10:29 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-23 15:10:29 -HTTP METHOD : GET
2019-05-23 15:10:29 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-23 15:10:29 -参数 : []
2019-05-23 15:10:29 -耗时 : 0
2019-05-23 15:10:29 -返回值 : system/dept/deptTree
2019-05-23 15:10:29 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-23 15:10:29 -HTTP METHOD : GET
2019-05-23 15:10:29 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-23 15:10:29 -参数 : []
2019-05-23 15:10:29 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-23 15:10:29 -==> Parameters: 
2019-05-23 15:10:29 -<==      Total: 3
2019-05-23 15:10:29 -耗时 : 4
2019-05-23 15:10:29 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-23 15:10:32 -请求地址 : http://localhost:8081/charts/countDD/getCountDD
2019-05-23 15:10:32 -HTTP METHOD : POST
2019-05-23 15:10:32 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.getCountD
2019-05-23 15:10:32 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@554bff2f, com.bootdo.moneyLog.vo.WaterLogVo@5a24546e, com.bootdo.moneyLog.vo.HeatLogVo@25ec1beb]
2019-05-23 15:10:32 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-23 15:10:32 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-23 15:10:32 -<==      Total: 1
2019-05-23 15:10:32 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-23 15:10:32 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-23 15:10:32 -<==      Total: 1
2019-05-23 15:10:32 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-23 15:10:32 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-23 15:10:32 -<==      Total: 1
2019-05-23 15:10:32 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-23 15:10:32 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-23 15:10:32 -<==      Total: 1
2019-05-23 15:10:32 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-23 15:10:32 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-23 15:10:32 -<==      Total: 1
2019-05-23 15:10:32 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-23 15:10:32 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-23 15:10:32 -<==      Total: 1
2019-05-23 15:10:32 -耗时 : 43
2019-05-23 15:10:32 -返回值 : com.bootdo.charts.vo.CountDayVo@38c31039
2019-05-23 15:11:05 -请求地址 : http://localhost:8081/charts/countMM/getCountMM
2019-05-23 15:11:05 -HTTP METHOD : POST
2019-05-23 15:11:05 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.getCountMM
2019-05-23 15:11:05 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@7159c67c, com.bootdo.moneyLog.vo.WaterLogVo@2b423bb1, com.bootdo.moneyLog.vo.HeatLogVo@2a761c07]
2019-05-23 15:11:05 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-23 15:11:05 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 15:11:05 -<==      Total: 1
2019-05-23 15:11:05 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-23 15:11:05 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 15:11:05 -<==      Total: 1
2019-05-23 15:11:05 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-23 15:11:05 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 15:11:05 -<==      Total: 1
2019-05-23 15:11:05 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-23 15:11:05 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 15:11:05 -<==      Total: 1
2019-05-23 15:11:05 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-23 15:11:05 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 15:11:05 -<==      Total: 1
2019-05-23 15:11:05 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-23 15:11:05 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 15:11:05 -<==      Total: 1
2019-05-23 15:11:05 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-23 15:11:05 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 15:11:05 -<==      Total: 1
2019-05-23 15:11:05 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-23 15:11:05 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 15:11:05 -<==      Total: 1
2019-05-23 15:11:05 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-05-23 15:11:05 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 15:11:05 -<==      Total: 1
2019-05-23 15:11:05 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-05-23 15:11:05 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 15:11:05 -<==      Total: 1
2019-05-23 15:11:05 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-05-23 15:11:05 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 15:11:05 -<==      Total: 1
2019-05-23 15:11:05 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-05-23 15:11:05 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 15:11:05 -<==      Total: 1
2019-05-23 15:11:05 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-05-23 15:11:05 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 15:11:05 -<==      Total: 1
2019-05-23 15:11:05 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-05-23 15:11:05 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 15:11:05 -<==      Total: 1
2019-05-23 15:11:05 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-05-23 15:11:05 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 15:11:05 -<==      Total: 1
2019-05-23 15:11:05 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-05-23 15:11:05 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 15:11:05 -<==      Total: 1
2019-05-23 15:11:05 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-05-23 15:11:05 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 15:11:05 -<==      Total: 1
2019-05-23 15:11:05 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-05-23 15:11:05 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 15:11:05 -<==      Total: 1
2019-05-23 15:11:05 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-05-23 15:11:05 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 15:11:05 -<==      Total: 1
2019-05-23 15:11:05 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-05-23 15:11:05 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 15:11:05 -<==      Total: 1
2019-05-23 15:11:05 -==>  Preparing: SELECT ifnull(COUNT(ID),0)FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-05-23 15:11:05 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 15:11:05 -<==      Total: 1
2019-05-23 15:11:05 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-05-23 15:11:05 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 15:11:05 -<==      Total: 1
2019-05-23 15:11:05 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-23 15:11:05 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 15:11:05 -<==      Total: 1
2019-05-23 15:11:05 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-23 15:11:05 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 15:11:05 -<==      Total: 1
2019-05-23 15:11:05 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-23 15:11:05 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 15:11:05 -<==      Total: 1
2019-05-23 15:11:05 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-23 15:11:05 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 15:11:05 -<==      Total: 1
2019-05-23 15:11:05 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-23 15:11:05 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 15:11:05 -<==      Total: 1
2019-05-23 15:11:05 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-23 15:11:05 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 15:11:05 -<==      Total: 1
2019-05-23 15:11:05 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-23 15:11:05 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 15:11:05 -<==      Total: 1
2019-05-23 15:11:05 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-23 15:11:05 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 15:11:05 -<==      Total: 1
2019-05-23 15:11:05 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE WATER_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-23 15:11:05 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 15:11:05 -<==      Total: 1
2019-05-23 15:11:05 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE WATER_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-23 15:11:05 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 15:11:05 -<==      Total: 1
2019-05-23 15:11:05 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE WATER_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-23 15:11:05 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 15:11:05 -<==      Total: 1
2019-05-23 15:11:05 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE WATER_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-23 15:11:05 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 15:11:05 -<==      Total: 1
2019-05-23 15:11:05 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE WATER_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-23 15:11:05 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 15:11:05 -<==      Total: 1
2019-05-23 15:11:05 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE WATER_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-23 15:11:05 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 15:11:05 -<==      Total: 1
2019-05-23 15:11:05 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE WATER_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-23 15:11:05 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 15:11:05 -<==      Total: 1
2019-05-23 15:11:05 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE WATER_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-23 15:11:05 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 15:11:05 -<==      Total: 1
2019-05-23 15:11:05 -耗时 : 119
2019-05-23 15:11:05 -返回值 : {CountSHeatLog=0, CountG2ElecLog=0, CountG3ElecLog=0, SumG1ElecLog=0, CountG1ElecLog=0, SumWSElecLog=0, SumS2WaterLog=0, totalSumElec=0, SumG2ElecLog=0, CountWSElecLog=0, SumWMElecLog=0, totalCount=0, CountMMElecLog=0, SumSHeatLog=0, SumS3WaterLog=0, CountWMElecLog=0, CountMElecLog=0, SumG3ElecLog=0, CountSElecLog=0, SumGSHeatLog=0, SumS1WaterLog=0, CountZElecLog=0, SumGMHeatLog=0, totalSumWater=0, CountMHeatLog=0, CountGSHeatLog=0, CountWGElecLog=0, SumSElecLog=0, CountS3WaterLog=0, SumMHeatLog=0, SumZElecLog=0, SumWGElecLog=0, CountGMHeatLog=0, CountS1WaterLog=0, CountMWaterLog=0, CountS2WaterLog=0, CountMSElecLog=0, totalSum=0, SumMElecLog=0, totalSumHeat=0, SumMMElecLog=0, SumMWaterLog=0, SumMSElecLog=0}
2019-05-23 15:11:06 -请求地址 : http://localhost:8081/charts/countMM/getCountMM
2019-05-23 15:11:06 -HTTP METHOD : POST
2019-05-23 15:11:06 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.getCountMM
2019-05-23 15:11:06 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@87002e5, com.bootdo.moneyLog.vo.WaterLogVo@697c5168, com.bootdo.moneyLog.vo.HeatLogVo@5f57995d]
2019-05-23 15:11:06 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-23 15:11:06 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 15:11:06 -<==      Total: 1
2019-05-23 15:11:06 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-23 15:11:06 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 15:11:06 -<==      Total: 1
2019-05-23 15:11:06 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-23 15:11:06 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 15:11:06 -<==      Total: 1
2019-05-23 15:11:06 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-23 15:11:06 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 15:11:06 -<==      Total: 1
2019-05-23 15:11:06 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-23 15:11:06 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 15:11:06 -<==      Total: 1
2019-05-23 15:11:06 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-23 15:11:06 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 15:11:06 -<==      Total: 1
2019-05-23 15:11:06 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-23 15:11:06 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 15:11:06 -<==      Total: 1
2019-05-23 15:11:06 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-23 15:11:06 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 15:11:06 -<==      Total: 1
2019-05-23 15:11:06 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-05-23 15:11:06 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 15:11:06 -<==      Total: 1
2019-05-23 15:11:06 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-05-23 15:11:06 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 15:11:06 -<==      Total: 1
2019-05-23 15:11:06 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-05-23 15:11:06 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 15:11:06 -<==      Total: 1
2019-05-23 15:11:06 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-05-23 15:11:06 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 15:11:06 -<==      Total: 1
2019-05-23 15:11:06 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-05-23 15:11:06 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 15:11:06 -<==      Total: 1
2019-05-23 15:11:06 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-05-23 15:11:06 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 15:11:06 -<==      Total: 1
2019-05-23 15:11:06 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-05-23 15:11:06 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 15:11:06 -<==      Total: 1
2019-05-23 15:11:06 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-05-23 15:11:06 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 15:11:06 -<==      Total: 1
2019-05-23 15:11:06 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-05-23 15:11:06 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 15:11:06 -<==      Total: 1
2019-05-23 15:11:06 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-05-23 15:11:06 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 15:11:06 -<==      Total: 1
2019-05-23 15:11:06 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-05-23 15:11:06 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 15:11:06 -<==      Total: 1
2019-05-23 15:11:06 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-05-23 15:11:06 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 15:11:06 -<==      Total: 1
2019-05-23 15:11:06 -==>  Preparing: SELECT ifnull(COUNT(ID),0)FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-05-23 15:11:06 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 15:11:06 -<==      Total: 1
2019-05-23 15:11:06 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-05-23 15:11:06 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 15:11:06 -<==      Total: 1
2019-05-23 15:11:06 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-23 15:11:06 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 15:11:06 -<==      Total: 1
2019-05-23 15:11:06 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-23 15:11:06 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 15:11:06 -<==      Total: 1
2019-05-23 15:11:06 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-23 15:11:06 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 15:11:06 -<==      Total: 1
2019-05-23 15:11:06 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-23 15:11:06 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 15:11:06 -<==      Total: 1
2019-05-23 15:11:06 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-23 15:11:06 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 15:11:06 -<==      Total: 1
2019-05-23 15:11:06 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-23 15:11:06 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 15:11:06 -<==      Total: 1
2019-05-23 15:11:06 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-23 15:11:06 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 15:11:06 -<==      Total: 1
2019-05-23 15:11:06 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-23 15:11:06 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 15:11:06 -<==      Total: 1
2019-05-23 15:11:06 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE WATER_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-23 15:11:06 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 15:11:06 -<==      Total: 1
2019-05-23 15:11:06 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE WATER_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-23 15:11:06 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 15:11:06 -<==      Total: 1
2019-05-23 15:11:06 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE WATER_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-23 15:11:06 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 15:11:06 -<==      Total: 1
2019-05-23 15:11:06 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE WATER_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-23 15:11:06 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 15:11:06 -<==      Total: 1
2019-05-23 15:11:06 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE WATER_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-23 15:11:06 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 15:11:06 -<==      Total: 1
2019-05-23 15:11:06 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE WATER_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-23 15:11:06 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 15:11:06 -<==      Total: 1
2019-05-23 15:11:06 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE WATER_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-23 15:11:06 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 15:11:06 -<==      Total: 1
2019-05-23 15:11:06 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE WATER_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-23 15:11:06 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 15:11:06 -<==      Total: 1
2019-05-23 15:11:06 -耗时 : 116
2019-05-23 15:11:06 -返回值 : {CountSHeatLog=0, CountG2ElecLog=0, CountG3ElecLog=0, SumG1ElecLog=0, CountG1ElecLog=0, SumWSElecLog=0, SumS2WaterLog=0, totalSumElec=0, SumG2ElecLog=0, CountWSElecLog=0, SumWMElecLog=0, totalCount=0, CountMMElecLog=0, SumSHeatLog=0, SumS3WaterLog=0, CountWMElecLog=0, CountMElecLog=0, SumG3ElecLog=0, CountSElecLog=0, SumGSHeatLog=0, SumS1WaterLog=0, CountZElecLog=0, SumGMHeatLog=0, totalSumWater=0, CountMHeatLog=0, CountGSHeatLog=0, CountWGElecLog=0, SumSElecLog=0, CountS3WaterLog=0, SumMHeatLog=0, SumZElecLog=0, SumWGElecLog=0, CountGMHeatLog=0, CountS1WaterLog=0, CountMWaterLog=0, CountS2WaterLog=0, CountMSElecLog=0, totalSum=0, SumMElecLog=0, totalSumHeat=0, SumMMElecLog=0, SumMWaterLog=0, SumMSElecLog=0}
2019-05-23 15:11:08 -请求地址 : http://localhost:8081/charts/countMM/getCountMM
2019-05-23 15:11:08 -HTTP METHOD : POST
2019-05-23 15:11:08 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.getCountMM
2019-05-23 15:11:08 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@2687f53f, com.bootdo.moneyLog.vo.WaterLogVo@126dd3d, com.bootdo.moneyLog.vo.HeatLogVo@e88b29]
2019-05-23 15:11:08 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-23 15:11:08 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 15:11:08 -<==      Total: 1
2019-05-23 15:11:08 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-23 15:11:08 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 15:11:08 -<==      Total: 1
2019-05-23 15:11:08 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-23 15:11:08 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 15:11:08 -<==      Total: 1
2019-05-23 15:11:08 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-23 15:11:08 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 15:11:08 -<==      Total: 1
2019-05-23 15:11:08 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-23 15:11:08 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 15:11:08 -<==      Total: 1
2019-05-23 15:11:08 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-23 15:11:08 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 15:11:08 -<==      Total: 1
2019-05-23 15:11:08 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-23 15:11:08 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 15:11:08 -<==      Total: 1
2019-05-23 15:11:08 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-23 15:11:08 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 15:11:08 -<==      Total: 1
2019-05-23 15:11:08 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-05-23 15:11:08 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 15:11:08 -<==      Total: 1
2019-05-23 15:11:08 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-05-23 15:11:08 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 15:11:08 -<==      Total: 1
2019-05-23 15:11:08 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-05-23 15:11:08 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 15:11:08 -<==      Total: 1
2019-05-23 15:11:08 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-05-23 15:11:08 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 15:11:08 -<==      Total: 1
2019-05-23 15:11:08 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-05-23 15:11:08 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 15:11:08 -<==      Total: 1
2019-05-23 15:11:08 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-05-23 15:11:08 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 15:11:08 -<==      Total: 1
2019-05-23 15:11:08 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-05-23 15:11:08 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 15:11:08 -<==      Total: 1
2019-05-23 15:11:08 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-05-23 15:11:08 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 15:11:08 -<==      Total: 1
2019-05-23 15:11:08 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-05-23 15:11:08 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 15:11:08 -<==      Total: 1
2019-05-23 15:11:08 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-05-23 15:11:08 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 15:11:08 -<==      Total: 1
2019-05-23 15:11:08 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-05-23 15:11:08 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 15:11:08 -<==      Total: 1
2019-05-23 15:11:08 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-05-23 15:11:08 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 15:11:08 -<==      Total: 1
2019-05-23 15:11:08 -==>  Preparing: SELECT ifnull(COUNT(ID),0)FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-05-23 15:11:08 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 15:11:08 -<==      Total: 1
2019-05-23 15:11:08 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-05-23 15:11:08 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 15:11:08 -<==      Total: 1
2019-05-23 15:11:08 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-23 15:11:08 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 15:11:08 -<==      Total: 1
2019-05-23 15:11:08 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-23 15:11:08 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 15:11:08 -<==      Total: 1
2019-05-23 15:11:08 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-23 15:11:08 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 15:11:08 -<==      Total: 1
2019-05-23 15:11:08 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-23 15:11:08 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 15:11:08 -<==      Total: 1
2019-05-23 15:11:08 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-23 15:11:08 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 15:11:08 -<==      Total: 1
2019-05-23 15:11:08 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-23 15:11:08 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 15:11:08 -<==      Total: 1
2019-05-23 15:11:08 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-23 15:11:08 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 15:11:08 -<==      Total: 1
2019-05-23 15:11:08 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-23 15:11:08 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 15:11:08 -<==      Total: 1
2019-05-23 15:11:08 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE WATER_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-23 15:11:08 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 15:11:08 -<==      Total: 1
2019-05-23 15:11:08 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE WATER_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-23 15:11:08 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 15:11:08 -<==      Total: 1
2019-05-23 15:11:08 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE WATER_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-23 15:11:08 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 15:11:08 -<==      Total: 1
2019-05-23 15:11:08 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE WATER_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-23 15:11:08 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 15:11:08 -<==      Total: 1
2019-05-23 15:11:08 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE WATER_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-23 15:11:08 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 15:11:08 -<==      Total: 1
2019-05-23 15:11:08 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE WATER_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-23 15:11:08 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 15:11:08 -<==      Total: 1
2019-05-23 15:11:08 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE WATER_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-23 15:11:08 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 15:11:08 -<==      Total: 1
2019-05-23 15:11:08 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE WATER_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-23 15:11:08 -==> Parameters: 2019-12(String), 2(String)
2019-05-23 15:11:08 -<==      Total: 1
2019-05-23 15:11:08 -耗时 : 109
2019-05-23 15:11:08 -返回值 : {CountSHeatLog=0, CountG2ElecLog=0, CountG3ElecLog=0, SumG1ElecLog=0, CountG1ElecLog=0, SumWSElecLog=0, SumS2WaterLog=0, totalSumElec=0, SumG2ElecLog=0, CountWSElecLog=0, SumWMElecLog=0, totalCount=0, CountMMElecLog=0, SumSHeatLog=0, SumS3WaterLog=0, CountWMElecLog=0, CountMElecLog=0, SumG3ElecLog=0, CountSElecLog=0, SumGSHeatLog=0, SumS1WaterLog=0, CountZElecLog=0, SumGMHeatLog=0, totalSumWater=0, CountMHeatLog=0, CountGSHeatLog=0, CountWGElecLog=0, SumSElecLog=0, CountS3WaterLog=0, SumMHeatLog=0, SumZElecLog=0, SumWGElecLog=0, CountGMHeatLog=0, CountS1WaterLog=0, CountMWaterLog=0, CountS2WaterLog=0, CountMSElecLog=0, totalSum=0, SumMElecLog=0, totalSumHeat=0, SumMMElecLog=0, SumMWaterLog=0, SumMSElecLog=0}
2019-05-23 15:35:14 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 3 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(3)-CONNECTED(3)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 33], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 5], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 434]
2019-05-23 16:04:37 -Validating all active sessions...
2019-05-23 16:04:37 -Finished session validation.  [1] sessions were stopped.
2019-05-23 16:05:14 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 3 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(3)-CONNECTED(3)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 33], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 5], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 867]
2019-05-23 16:17:14 -Starting BootdoApplication on PC-201905091110 with PID 34500 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-23 16:17:14 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-23 16:17:14 -The following profiles are active: dev
2019-05-23 16:17:14 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Thu May 23 16:17:14 CST 2019]; root of context hierarchy
2019-05-23 16:17:19 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-23 16:17:22 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$c41ba62b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 16:17:22 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$b674d4d2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 16:17:23 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 16:17:24 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 16:17:24 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 16:17:24 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-23 16:17:24 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-23 16:17:24 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 16:17:24 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 16:17:24 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 16:17:24 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 16:17:26 -Tomcat initialized with port(s): 8081 (http)
2019-05-23 16:17:26 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-23 16:17:26 -Starting service [Tomcat]
2019-05-23 16:17:26 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-23 16:17:26 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-23 16:17:26 -Initializing Spring embedded WebApplicationContext
2019-05-23 16:17:26 -Root WebApplicationContext: initialization completed in 11806 ms
2019-05-23 16:17:27 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-23 16:17:27 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-23 16:17:27 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-23 16:17:27 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-23 16:17:27 -Filter xssFilter was not registered (disabled)
2019-05-23 16:17:27 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-23 16:17:27 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-23 16:17:27 -Servlet statViewServlet mapped to [/druid/*]
2019-05-23 16:17:27 -Servlet dispatcherServlet mapped to [/]
2019-05-23 16:17:32 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Thu May 23 16:17:14 CST 2019]; root of context hierarchy
2019-05-23 16:17:33 -Using default implementation for ThreadExecutor
2019-05-23 16:17:33 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-23 16:17:33 -Quartz Scheduler v.2.2.1 created.
2019-05-23 16:17:33 -RAMJobStore initialized.
2019-05-23 16:17:33 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-23 16:17:33 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-23 16:17:33 -Quartz scheduler version: 2.2.1
2019-05-23 16:17:33 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@22865072
2019-05-23 16:17:33 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-23 16:17:34 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-23 16:17:37 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-23 16:17:37 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-23 16:17:37 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 16:17:37 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-23 16:17:37 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-23 16:17:37 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 16:17:37 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-23 16:17:37 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-23 16:17:37 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-23 16:17:37 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-23 16:17:37 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-23 16:17:37 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 16:17:37 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-23 16:17:37 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-23 16:17:37 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 16:17:37 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-23 16:17:37 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 16:17:37 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-23 16:17:37 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-23 16:17:37 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-23 16:17:37 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 16:17:37 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-23 16:17:37 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-23 16:17:37 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 16:17:37 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 16:17:37 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-23 16:17:37 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-23 16:17:37 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 16:17:37 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-23 16:17:37 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-23 16:17:37 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 16:17:37 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-23 16:17:37 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-23 16:17:37 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 16:17:37 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-23 16:17:37 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-23 16:17:37 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-23 16:17:37 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-23 16:17:37 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-23 16:17:37 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-23 16:17:37 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 16:17:37 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-23 16:17:37 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-23 16:17:37 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-23 16:17:37 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 16:17:37 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-23 16:17:37 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-23 16:17:37 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-23 16:17:37 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-23 16:17:37 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-23 16:17:37 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-23 16:17:37 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 16:17:37 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-23 16:17:37 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-23 16:17:37 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-23 16:17:37 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 16:17:37 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-23 16:17:37 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 16:17:37 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-23 16:17:37 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-23 16:17:37 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-23 16:17:37 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-23 16:17:37 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-23 16:17:37 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-23 16:17:37 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-23 16:17:37 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-23 16:17:37 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-23 16:17:37 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 16:17:37 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-23 16:17:37 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-23 16:17:37 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 16:17:37 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-23 16:17:37 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-23 16:17:37 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-23 16:17:37 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-23 16:17:37 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 16:17:37 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-23 16:17:37 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-23 16:17:37 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-23 16:17:37 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-23 16:17:37 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-23 16:17:37 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-23 16:17:37 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-23 16:17:37 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-23 16:17:37 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-23 16:17:37 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-23 16:17:37 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-23 16:17:37 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-23 16:17:37 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-23 16:17:37 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 16:17:37 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-23 16:17:37 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-23 16:17:37 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-23 16:17:37 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-23 16:17:37 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-23 16:17:37 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-23 16:17:37 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-23 16:17:37 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 16:17:37 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-23 16:17:37 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-23 16:17:37 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 16:17:37 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-23 16:17:37 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-23 16:17:37 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-23 16:17:37 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-23 16:17:37 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-23 16:17:37 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-23 16:17:37 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-23 16:17:37 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 16:17:37 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-23 16:17:37 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-23 16:17:37 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-23 16:17:37 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-23 16:17:37 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-23 16:17:37 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-23 16:17:37 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-23 16:17:37 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-23 16:17:37 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-23 16:17:37 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-23 16:17:37 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-23 16:17:37 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 16:17:37 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-23 16:17:37 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 16:17:37 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-23 16:17:37 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-23 16:17:37 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-23 16:17:37 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-23 16:17:37 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-23 16:17:37 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-23 16:17:37 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-23 16:17:37 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 16:17:37 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-23 16:17:37 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-23 16:17:37 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-23 16:17:37 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-23 16:17:37 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-23 16:17:37 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-23 16:17:37 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 16:17:37 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-23 16:17:37 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-23 16:17:37 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-23 16:17:37 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 16:17:37 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-23 16:17:37 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-23 16:17:37 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-23 16:17:37 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-23 16:17:37 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 16:17:37 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-23 16:17:37 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-23 16:17:37 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-23 16:17:37 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 16:17:37 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-23 16:17:37 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-23 16:17:37 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-23 16:17:37 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-23 16:17:37 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 16:17:37 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-23 16:17:37 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-23 16:17:37 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-23 16:17:37 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 16:17:37 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-23 16:17:37 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-23 16:17:37 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-23 16:17:37 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-23 16:17:37 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-23 16:17:37 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 16:17:37 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-23 16:17:37 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-23 16:17:37 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 16:17:37 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-23 16:17:37 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-23 16:17:37 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 16:17:37 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-23 16:17:37 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-23 16:17:37 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-05-23 16:17:37 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-23 16:17:37 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 16:17:37 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-23 16:17:37 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-23 16:17:37 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-23 16:17:37 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 16:17:37 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-23 16:17:37 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 16:17:37 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-23 16:17:37 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-23 16:17:37 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-23 16:17:37 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-23 16:17:37 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-23 16:17:37 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-23 16:17:37 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-23 16:17:37 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-23 16:17:37 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-23 16:17:37 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 16:17:37 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-23 16:17:37 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-23 16:17:37 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-23 16:17:37 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-23 16:17:37 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-23 16:17:37 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-23 16:17:37 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-23 16:17:37 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-23 16:17:37 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-23 16:17:37 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-23 16:17:37 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 16:17:37 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-23 16:17:37 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-23 16:17:37 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-23 16:17:37 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-23 16:17:37 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-23 16:17:37 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-23 16:17:37 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-23 16:17:37 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-23 16:17:37 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-23 16:17:37 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-23 16:17:37 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-23 16:17:37 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-23 16:17:37 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 16:17:37 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-23 16:17:37 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-23 16:17:37 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-23 16:17:37 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-23 16:17:37 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 16:17:37 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-23 16:17:37 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-23 16:17:37 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-23 16:17:37 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 16:17:37 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-23 16:17:37 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-23 16:17:37 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-23 16:17:37 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-23 16:17:37 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-23 16:17:37 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-23 16:17:37 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-23 16:17:37 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-23 16:17:37 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-23 16:17:37 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-23 16:17:37 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-23 16:17:37 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-23 16:17:37 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-23 16:17:37 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-23 16:17:37 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-23 16:17:37 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-23 16:17:37 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-23 16:17:37 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 16:17:37 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-23 16:17:37 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-23 16:17:37 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-23 16:17:37 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 16:17:37 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-23 16:17:37 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-23 16:17:37 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-23 16:17:37 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-23 16:17:37 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-23 16:17:37 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-23 16:17:37 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-23 16:17:37 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 16:17:37 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-23 16:17:37 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-23 16:17:37 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 16:17:37 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-23 16:17:37 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-23 16:17:37 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-23 16:17:37 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-23 16:17:37 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-23 16:17:37 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-23 16:17:37 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-23 16:17:37 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-23 16:17:44 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-23 16:17:45 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-23 16:17:45 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-23 16:17:45 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-23 16:17:45 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Thu May 23 16:17:14 CST 2019]; root of context hierarchy
2019-05-23 16:17:46 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-23 16:17:46 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-23 16:17:46 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-23 16:17:46 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-23 16:17:46 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-23 16:17:49 -Registering beans for JMX exposure on startup
2019-05-23 16:17:49 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-23 16:17:49 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-23 16:17:49 -Starting beans in phase 2147483647
2019-05-23 16:17:49 -Context refreshed
2019-05-23 16:17:49 -Found 1 custom documentation plugin(s)
2019-05-23 16:17:49 -Scanning for api listing references
2019-05-23 16:17:50 -Generating unique operation named: getCountDUsingPOST_1
2019-05-23 16:17:50 -Generating unique operation named: removeUsingPOST_1
2019-05-23 16:17:50 -Generating unique operation named: addUsingGET_1
2019-05-23 16:17:50 -Generating unique operation named: editUsingGET_1
2019-05-23 16:17:50 -Generating unique operation named: listUsingGET_1
2019-05-23 16:17:50 -Generating unique operation named: removeUsingPOST_2
2019-05-23 16:17:50 -Generating unique operation named: removeUsingPOST_3
2019-05-23 16:17:50 -Generating unique operation named: saveUsingPOST_1
2019-05-23 16:17:50 -Generating unique operation named: updateUsingGET_1
2019-05-23 16:17:50 -Generating unique operation named: updateUsingHEAD_1
2019-05-23 16:17:50 -Generating unique operation named: updateUsingPOST_1
2019-05-23 16:17:50 -Generating unique operation named: updateUsingPUT_1
2019-05-23 16:17:51 -Generating unique operation named: updateUsingPATCH_1
2019-05-23 16:17:51 -Generating unique operation named: updateUsingDELETE_1
2019-05-23 16:17:51 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-23 16:17:51 -Generating unique operation named: updateUsingTRACE_1
2019-05-23 16:17:51 -Generating unique operation named: addUsingGET_2
2019-05-23 16:17:51 -Generating unique operation named: editUsingGET_2
2019-05-23 16:17:51 -Generating unique operation named: listUsingGET_2
2019-05-23 16:17:51 -Generating unique operation named: removeUsingPOST_4
2019-05-23 16:17:51 -Generating unique operation named: removeUsingPOST_5
2019-05-23 16:17:51 -Generating unique operation named: saveUsingPOST_2
2019-05-23 16:17:51 -Generating unique operation named: updateUsingPOST_2
2019-05-23 16:17:51 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-23 16:17:51 -Generating unique operation named: addUsingGET_3
2019-05-23 16:17:51 -Generating unique operation named: editUsingGET_3
2019-05-23 16:17:51 -Generating unique operation named: listUsingGET_3
2019-05-23 16:17:51 -Generating unique operation named: removeUsingPOST_6
2019-05-23 16:17:51 -Generating unique operation named: removeUsingPOST_7
2019-05-23 16:17:51 -Generating unique operation named: saveUsingPOST_3
2019-05-23 16:17:51 -Generating unique operation named: updateUsingGET_2
2019-05-23 16:17:51 -Generating unique operation named: updateUsingHEAD_2
2019-05-23 16:17:51 -Generating unique operation named: updateUsingPOST_3
2019-05-23 16:17:51 -Generating unique operation named: updateUsingPUT_2
2019-05-23 16:17:51 -Generating unique operation named: updateUsingPATCH_2
2019-05-23 16:17:51 -Generating unique operation named: updateUsingDELETE_2
2019-05-23 16:17:51 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-23 16:17:51 -Generating unique operation named: updateUsingTRACE_2
2019-05-23 16:17:51 -Generating unique operation named: addUsingGET_4
2019-05-23 16:17:51 -Generating unique operation named: editUsingGET_4
2019-05-23 16:17:51 -Generating unique operation named: listUsingGET_4
2019-05-23 16:17:51 -Generating unique operation named: removeUsingPOST_8
2019-05-23 16:17:51 -Generating unique operation named: removeUsingPOST_9
2019-05-23 16:17:51 -Generating unique operation named: saveUsingPOST_4
2019-05-23 16:17:51 -Generating unique operation named: updateUsingGET_3
2019-05-23 16:17:51 -Generating unique operation named: updateUsingHEAD_3
2019-05-23 16:17:51 -Generating unique operation named: updateUsingPOST_4
2019-05-23 16:17:51 -Generating unique operation named: updateUsingPUT_3
2019-05-23 16:17:51 -Generating unique operation named: updateUsingPATCH_3
2019-05-23 16:17:51 -Generating unique operation named: updateUsingDELETE_3
2019-05-23 16:17:51 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-23 16:17:51 -Generating unique operation named: updateUsingTRACE_3
2019-05-23 16:17:51 -Generating unique operation named: ElecUsingGET_1
2019-05-23 16:17:51 -Generating unique operation named: addUsingGET_5
2019-05-23 16:17:51 -Generating unique operation named: editUsingGET_5
2019-05-23 16:17:51 -Generating unique operation named: listUsingGET_5
2019-05-23 16:17:51 -Generating unique operation named: removeUsingPOST_10
2019-05-23 16:17:51 -Generating unique operation named: removeUsingPOST_11
2019-05-23 16:17:51 -Generating unique operation named: saveUsingPOST_5
2019-05-23 16:17:51 -Generating unique operation named: updateUsingGET_4
2019-05-23 16:17:51 -Generating unique operation named: updateUsingHEAD_4
2019-05-23 16:17:51 -Generating unique operation named: updateUsingPOST_5
2019-05-23 16:17:51 -Generating unique operation named: updateUsingPUT_4
2019-05-23 16:17:51 -Generating unique operation named: updateUsingPATCH_4
2019-05-23 16:17:51 -Generating unique operation named: updateUsingDELETE_4
2019-05-23 16:17:51 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-23 16:17:51 -Generating unique operation named: updateUsingTRACE_4
2019-05-23 16:17:51 -Generating unique operation named: editUsingGET_6
2019-05-23 16:17:51 -Generating unique operation named: listUsingGET_6
2019-05-23 16:17:51 -Generating unique operation named: updateUsingPOST_6
2019-05-23 16:17:51 -Generating unique operation named: addUsingGET_6
2019-05-23 16:17:51 -Generating unique operation named: editUsingGET_7
2019-05-23 16:17:51 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-23 16:17:51 -Generating unique operation named: listUsingGET_7
2019-05-23 16:17:51 -Generating unique operation named: removeUsingPOST_12
2019-05-23 16:17:51 -Generating unique operation named: removeUsingPOST_13
2019-05-23 16:17:52 -Generating unique operation named: saveUsingPOST_6
2019-05-23 16:17:52 -Generating unique operation named: updateUsingGET_5
2019-05-23 16:17:52 -Generating unique operation named: updateUsingHEAD_5
2019-05-23 16:17:52 -Generating unique operation named: updateUsingPOST_7
2019-05-23 16:17:52 -Generating unique operation named: updateUsingPUT_5
2019-05-23 16:17:52 -Generating unique operation named: updateUsingPATCH_5
2019-05-23 16:17:52 -Generating unique operation named: updateUsingDELETE_5
2019-05-23 16:17:52 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-23 16:17:52 -Generating unique operation named: updateUsingTRACE_5
2019-05-23 16:17:52 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-23 16:17:52 -Generating unique operation named: addUsingGET_7
2019-05-23 16:17:52 -Generating unique operation named: editUsingGET_8
2019-05-23 16:17:52 -Generating unique operation named: listUsingGET_8
2019-05-23 16:17:52 -Generating unique operation named: removeUsingPOST_14
2019-05-23 16:17:52 -Generating unique operation named: removeUsingPOST_15
2019-05-23 16:17:52 -Generating unique operation named: saveUsingPOST_7
2019-05-23 16:17:52 -Generating unique operation named: updateUsingGET_6
2019-05-23 16:17:52 -Generating unique operation named: updateUsingHEAD_6
2019-05-23 16:17:52 -Generating unique operation named: updateUsingPOST_8
2019-05-23 16:17:52 -Generating unique operation named: updateUsingPUT_6
2019-05-23 16:17:52 -Generating unique operation named: updateUsingPATCH_6
2019-05-23 16:17:52 -Generating unique operation named: updateUsingDELETE_6
2019-05-23 16:17:52 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-23 16:17:52 -Generating unique operation named: updateUsingTRACE_6
2019-05-23 16:17:52 -Generating unique operation named: addUsingGET_8
2019-05-23 16:17:52 -Generating unique operation named: editUsingGET_9
2019-05-23 16:17:52 -Generating unique operation named: listUsingGET_9
2019-05-23 16:17:52 -Generating unique operation named: removeUsingPOST_16
2019-05-23 16:17:52 -Generating unique operation named: removeUsingPOST_17
2019-05-23 16:17:52 -Generating unique operation named: saveUsingPOST_8
2019-05-23 16:17:52 -Generating unique operation named: updateUsingGET_7
2019-05-23 16:17:52 -Generating unique operation named: updateUsingHEAD_7
2019-05-23 16:17:52 -Generating unique operation named: updateUsingPOST_9
2019-05-23 16:17:52 -Generating unique operation named: updateUsingPUT_7
2019-05-23 16:17:52 -Generating unique operation named: updateUsingPATCH_7
2019-05-23 16:17:52 -Generating unique operation named: updateUsingDELETE_7
2019-05-23 16:17:52 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-23 16:17:52 -Generating unique operation named: updateUsingTRACE_7
2019-05-23 16:17:52 -Generating unique operation named: addUsingGET_9
2019-05-23 16:17:52 -Generating unique operation named: editUsingGET_10
2019-05-23 16:17:52 -Generating unique operation named: infoUsingGET_1
2019-05-23 16:17:52 -Generating unique operation named: infoUsingHEAD_1
2019-05-23 16:17:52 -Generating unique operation named: infoUsingPOST_1
2019-05-23 16:17:52 -Generating unique operation named: infoUsingPUT_1
2019-05-23 16:17:52 -Generating unique operation named: infoUsingPATCH_1
2019-05-23 16:17:52 -Generating unique operation named: infoUsingDELETE_1
2019-05-23 16:17:52 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-23 16:17:52 -Generating unique operation named: infoUsingTRACE_1
2019-05-23 16:17:52 -Generating unique operation named: listUsingGET_10
2019-05-23 16:17:52 -Generating unique operation named: removeUsingPOST_18
2019-05-23 16:17:52 -Generating unique operation named: removeUsingPOST_19
2019-05-23 16:17:52 -Generating unique operation named: saveUsingPOST_9
2019-05-23 16:17:52 -Generating unique operation named: updateUsingPOST_10
2019-05-23 16:17:52 -Generating unique operation named: listUsingGET_11
2019-05-23 16:17:52 -Generating unique operation named: removeUsingPOST_20
2019-05-23 16:17:52 -Generating unique operation named: welcomeUsingGET_1
2019-05-23 16:17:52 -Generating unique operation named: addUsingGET_10
2019-05-23 16:17:52 -Generating unique operation named: editUsingGET_11
2019-05-23 16:17:52 -Generating unique operation named: listUsingGET_12
2019-05-23 16:17:52 -Generating unique operation named: removeUsingPOST_21
2019-05-23 16:17:52 -Generating unique operation named: saveUsingPOST_10
2019-05-23 16:17:52 -Generating unique operation named: treeUsingGET_1
2019-05-23 16:17:52 -Generating unique operation named: treeUsingGET_2
2019-05-23 16:17:52 -Generating unique operation named: updateUsingPOST_11
2019-05-23 16:17:52 -Generating unique operation named: addUsingGET_11
2019-05-23 16:17:52 -Generating unique operation named: editUsingGET_12
2019-05-23 16:17:52 -Generating unique operation named: listUsingGET_13
2019-05-23 16:17:52 -Generating unique operation named: removeUsingPOST_22
2019-05-23 16:17:52 -Generating unique operation named: removeUsingPOST_23
2019-05-23 16:17:52 -Generating unique operation named: saveUsingPOST_11
2019-05-23 16:17:52 -Generating unique operation named: updateUsingGET_8
2019-05-23 16:17:52 -Generating unique operation named: updateUsingHEAD_8
2019-05-23 16:17:52 -Generating unique operation named: updateUsingPOST_12
2019-05-23 16:17:52 -Generating unique operation named: updateUsingPUT_8
2019-05-23 16:17:52 -Generating unique operation named: updateUsingPATCH_8
2019-05-23 16:17:52 -Generating unique operation named: updateUsingDELETE_8
2019-05-23 16:17:52 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-23 16:17:52 -Generating unique operation named: updateUsingTRACE_8
2019-05-23 16:17:52 -Generating unique operation named: addUsingGET_12
2019-05-23 16:17:52 -Generating unique operation named: editUsingGET_13
2019-05-23 16:17:52 -Generating unique operation named: listUsingGET_14
2019-05-23 16:17:52 -Generating unique operation named: printEditUsingGET_1
2019-05-23 16:17:52 -Generating unique operation named: removeUsingPOST_24
2019-05-23 16:17:52 -Generating unique operation named: removeUsingPOST_25
2019-05-23 16:17:52 -Generating unique operation named: saveUsingPOST_12
2019-05-23 16:17:52 -Generating unique operation named: updateUsingGET_9
2019-05-23 16:17:52 -Generating unique operation named: updateUsingHEAD_9
2019-05-23 16:17:52 -Generating unique operation named: updateUsingPOST_13
2019-05-23 16:17:52 -Generating unique operation named: updateUsingPUT_9
2019-05-23 16:17:52 -Generating unique operation named: updateUsingPATCH_9
2019-05-23 16:17:52 -Generating unique operation named: updateUsingDELETE_9
2019-05-23 16:17:52 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-23 16:17:52 -Generating unique operation named: updateUsingTRACE_9
2019-05-23 16:17:52 -Generating unique operation named: addUsingGET_13
2019-05-23 16:17:52 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-23 16:17:52 -Generating unique operation named: editUsingGET_14
2019-05-23 16:17:52 -Generating unique operation named: listUsingGET_15
2019-05-23 16:17:52 -Generating unique operation named: saveUsingPOST_13
2019-05-23 16:17:52 -Generating unique operation named: saveUsingPOST_14
2019-05-23 16:17:52 -Generating unique operation named: updateUsingPOST_14
2019-05-23 16:17:52 -Generating unique operation named: listUsingGET_16
2019-05-23 16:17:52 -Generating unique operation named: listUsingHEAD_1
2019-05-23 16:17:52 -Generating unique operation named: listUsingPOST_1
2019-05-23 16:17:52 -Generating unique operation named: listUsingPUT_1
2019-05-23 16:17:52 -Generating unique operation named: listUsingPATCH_1
2019-05-23 16:17:52 -Generating unique operation named: listUsingDELETE_1
2019-05-23 16:17:52 -Generating unique operation named: listUsingOPTIONS_1
2019-05-23 16:17:52 -Generating unique operation named: listUsingTRACE_1
2019-05-23 16:17:52 -Generating unique operation named: countDDUsingGET_1
2019-05-23 16:17:52 -Generating unique operation named: exportDDUsingGET_1
2019-05-23 16:17:53 -Generating unique operation named: addUsingGET_14
2019-05-23 16:17:53 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-23 16:17:53 -Generating unique operation named: editUsingGET_15
2019-05-23 16:17:53 -Generating unique operation named: listUsingGET_17
2019-05-23 16:17:53 -Generating unique operation named: removeUsingPOST_26
2019-05-23 16:17:53 -Generating unique operation named: saveUsingPOST_15
2019-05-23 16:17:53 -Generating unique operation named: treeUsingGET_3
2019-05-23 16:17:53 -Generating unique operation named: treeViewUsingGET_1
2019-05-23 16:17:53 -Generating unique operation named: updateUsingPOST_15
2019-05-23 16:17:53 -Generating unique operation named: addUsingGET_15
2019-05-23 16:17:53 -Generating unique operation named: editUsingGET_16
2019-05-23 16:17:53 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-23 16:17:53 -Generating unique operation named: listUsingGET_18
2019-05-23 16:17:53 -Generating unique operation named: removeUsingPOST_27
2019-05-23 16:17:53 -Generating unique operation named: removeUsingPOST_28
2019-05-23 16:17:53 -Generating unique operation named: saveUsingPOST_16
2019-05-23 16:17:53 -Generating unique operation named: updateUsingGET_10
2019-05-23 16:17:53 -Generating unique operation named: updateUsingHEAD_10
2019-05-23 16:17:53 -Generating unique operation named: updateUsingPOST_16
2019-05-23 16:17:53 -Generating unique operation named: updateUsingPUT_10
2019-05-23 16:17:53 -Generating unique operation named: updateUsingPATCH_10
2019-05-23 16:17:53 -Generating unique operation named: updateUsingDELETE_10
2019-05-23 16:17:53 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-23 16:17:53 -Generating unique operation named: updateUsingTRACE_10
2019-05-23 16:17:53 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-23 16:17:53 -Generating unique operation named: addUsingGET_16
2019-05-23 16:17:53 -Generating unique operation named: editUsingGET_17
2019-05-23 16:17:53 -Generating unique operation named: listUsingGET_19
2019-05-23 16:17:53 -Generating unique operation named: removeUsingPOST_29
2019-05-23 16:17:53 -Generating unique operation named: removeUsingPOST_30
2019-05-23 16:17:53 -Generating unique operation named: saveUsingPOST_17
2019-05-23 16:17:53 -Generating unique operation named: updateUsingGET_11
2019-05-23 16:17:53 -Generating unique operation named: updateUsingHEAD_11
2019-05-23 16:17:53 -Generating unique operation named: updateUsingPOST_17
2019-05-23 16:17:53 -Generating unique operation named: updateUsingPUT_11
2019-05-23 16:17:53 -Generating unique operation named: updateUsingPATCH_11
2019-05-23 16:17:53 -Generating unique operation named: updateUsingDELETE_11
2019-05-23 16:17:53 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-23 16:17:53 -Generating unique operation named: updateUsingTRACE_11
2019-05-23 16:17:53 -Generating unique operation named: addUsingGET_17
2019-05-23 16:17:53 -Generating unique operation named: editUsingGET_18
2019-05-23 16:17:53 -Generating unique operation named: listUsingGET_20
2019-05-23 16:17:53 -Generating unique operation named: removeUsingPOST_31
2019-05-23 16:17:53 -Generating unique operation named: removeUsingPOST_32
2019-05-23 16:17:53 -Generating unique operation named: saveUsingPOST_18
2019-05-23 16:17:53 -Generating unique operation named: updateUsingGET_12
2019-05-23 16:17:53 -Generating unique operation named: updateUsingHEAD_12
2019-05-23 16:17:53 -Generating unique operation named: updateUsingPOST_18
2019-05-23 16:17:53 -Generating unique operation named: updateUsingPUT_12
2019-05-23 16:17:53 -Generating unique operation named: updateUsingPATCH_12
2019-05-23 16:17:53 -Generating unique operation named: updateUsingDELETE_12
2019-05-23 16:17:53 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-23 16:17:53 -Generating unique operation named: updateUsingTRACE_12
2019-05-23 16:17:53 -Starting Quartz Scheduler now
2019-05-23 16:17:53 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-23 16:17:53 -Starting...
2019-05-23 16:17:53 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-23 16:17:53 -Started.
2019-05-23 16:17:53 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-23 16:17:53 -Using a shared selector for servlet write/read
2019-05-23 16:17:53 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-23 16:17:53 -Started BootdoApplication in 40.368 seconds (JVM running for 41.243)
2019-05-23 16:17:53 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-23 16:17:54 -==> Parameters: 
2019-05-23 16:17:54 -<==      Total: 1
2019-05-23 16:18:33 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-23 16:18:33 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-23 16:18:33 -FrameworkServlet 'dispatcherServlet': initialization completed in 215 ms
2019-05-23 16:18:33 -Enabling session validation scheduler...
2019-05-23 16:18:34 -请求地址 : http://localhost:8081/login;JSESSIONID=a0e04f0e-ccae-4f2a-a266-0128f19b7a7b
2019-05-23 16:18:34 -HTTP METHOD : GET
2019-05-23 16:18:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-23 16:18:34 -参数 : [{}]
2019-05-23 16:18:34 -耗时 : 4
2019-05-23 16:18:34 -返回值 : login
2019-05-23 16:18:43 -请求地址 : http://localhost:8081/getVerify
2019-05-23 16:18:43 -HTTP METHOD : GET
2019-05-23 16:18:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-23 16:18:43 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@33ad2a7c, org.apache.shiro.web.servlet.ShiroHttpServletResponse@4b98f558]
2019-05-23 16:18:45 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-05-23 16:18:57 -8281
2019-05-23 16:18:58 -耗时 : 14679
2019-05-23 16:18:58 -返回值 : null
2019-05-23 16:19:07 -请求地址 : http://localhost:8081/login
2019-05-23 16:19:07 -HTTP METHOD : POST
2019-05-23 16:19:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-23 16:19:07 -参数 : [admin, 111111, 8281, org.apache.shiro.web.servlet.ShiroHttpServletRequest@7ecc130d]
2019-05-23 16:19:07 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-23 16:19:07 -==> Parameters: admin(String)
2019-05-23 16:19:07 -<==      Total: 1
2019-05-23 16:19:07 -耗时 : 584
2019-05-23 16:19:07 -返回值 : {msg=操作成功, code=0}
2019-05-23 16:19:08 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-23 16:19:08 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-23 16:19:08 -==> Parameters: 1(Long), admin(String), 登录(String), 584(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-23 16:19:08.018(Timestamp)
2019-05-23 16:19:08 -请求地址 : http://localhost:8081/index
2019-05-23 16:19:08 -HTTP METHOD : GET
2019-05-23 16:19:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-23 16:19:08 -参数 : [{}]
2019-05-23 16:19:08 -<==    Updates: 1
2019-05-23 16:19:08 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-23 16:19:08 -==> Parameters: 1(Long)
2019-05-23 16:19:09 -<==      Total: 49
2019-05-23 16:19:09 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-23 16:19:09 -==> Parameters: 138(Long)
2019-05-23 16:19:09 -<==      Total: 1
2019-05-23 16:19:09 -耗时 : 716
2019-05-23 16:19:09 -返回值 : index_v1
2019-05-23 16:19:09 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-23 16:19:09 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 716(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-23 16:19:09.38(Timestamp)
2019-05-23 16:19:09 -<==    Updates: 1
2019-05-23 16:19:10 -请求地址 : http://localhost:8081/main
2019-05-23 16:19:10 -HTTP METHOD : GET
2019-05-23 16:19:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-23 16:19:10 -参数 : []
2019-05-23 16:19:10 -耗时 : 1
2019-05-23 16:19:10 -返回值 : main
2019-05-23 16:19:10 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-23 16:19:10 -HTTP METHOD : GET
2019-05-23 16:19:10 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-23 16:19:10 -参数 : []
2019-05-23 16:19:10 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-23 16:19:10 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-23 16:19:11 -<==      Total: 0
2019-05-23 16:19:11 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-23 16:19:11 -==> Parameters: 1(Long), 0(String)
2019-05-23 16:19:11 -<==      Total: 1
2019-05-23 16:19:11 -耗时 : 924
2019-05-23 16:19:11 -返回值 : com.bootdo.common.utils.PageUtils@5053a216
2019-05-23 16:19:12 -请求地址 : http://localhost:8081/main
2019-05-23 16:19:12 -HTTP METHOD : GET
2019-05-23 16:19:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-23 16:19:12 -参数 : []
2019-05-23 16:19:12 -耗时 : 0
2019-05-23 16:19:12 -返回值 : main
2019-05-23 16:19:29 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-23 16:19:29 -==> Parameters: 1(Long)
2019-05-23 16:19:29 -<==      Total: 93
2019-05-23 16:19:29 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-05-23 16:19:29 -HTTP METHOD : GET
2019-05-23 16:19:29 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-05-23 16:19:29 -参数 : []
2019-05-23 16:19:29 -耗时 : 0
2019-05-23 16:19:29 -返回值 : /moneyList/moneyList
2019-05-23 16:19:37 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-23 16:19:37 -HTTP METHOD : GET
2019-05-23 16:19:37 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-23 16:19:37 -参数 : []
2019-05-23 16:19:37 -耗时 : 1
2019-05-23 16:19:37 -返回值 : system/dept/deptTree
2019-05-23 16:19:38 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-23 16:19:38 -HTTP METHOD : GET
2019-05-23 16:19:38 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-23 16:19:38 -参数 : []
2019-05-23 16:19:38 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-23 16:19:38 -==> Parameters: 
2019-05-23 16:19:38 -<==      Total: 3
2019-05-23 16:19:38 -耗时 : 27
2019-05-23 16:19:38 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-23 16:19:44 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-05-23 16:19:44 -HTTP METHOD : POST
2019-05-23 16:19:44 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-05-23 16:19:44 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@7b42bb15]
2019-05-23 16:19:44 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-05-23 16:19:44 -==> Parameters: 2019-03(String), 2(String), 1-0001(String), 2019-03(String), 2(String), 1-0001(String), 2019-03(String), 2(String), 1-0001(String)
2019-05-23 16:19:45 -<==      Total: 3
2019-05-23 16:19:45 -耗时 : 763
2019-05-23 16:19:45 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@532b4161, com.bootdo.moneyList.damain.MoneyListDO@6bfcd4f0, com.bootdo.moneyList.damain.MoneyListDO@6a78cf0]
2019-05-23 16:26:31 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-05-23 16:26:31 -HTTP METHOD : POST
2019-05-23 16:26:31 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-05-23 16:26:31 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@5d614f43]
2019-05-23 16:26:31 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-05-23 16:26:31 -==> Parameters: 2019-03(String), 2(String), 1-0001(String), 2019-03(String), 2(String), 1-0001(String), 2019-03(String), 2(String), 1-0001(String)
2019-05-23 16:26:31 -<==      Total: 3
2019-05-23 16:26:31 -==>  Preparing: select el.start,el.end,el.hu,el.elec_amount,el.elec_cost,el.elec_price,el.elec_sum from elec el WHERE el.user_Id = ? and el.create_time = ? and el.user_org = ? and user_type != 'B' 
2019-05-23 16:26:31 -==> Parameters: 1-0001(String), 2019-03(String), 2(String)
2019-05-23 16:26:31 -<==      Total: 0
2019-05-23 16:26:31 -==>  Preparing: select he.heat_area, he.heat_cost, he.heat_price, he.heat_sum from heat he WHERE he.user_Id = ? and he.create_time = ? and he.user_org = ? and user_type != 'B' 
2019-05-23 16:26:31 -==> Parameters: 1-0001(String), 2019-03(String), 2(String)
2019-05-23 16:26:31 -<==      Total: 1
2019-05-23 16:26:31 -==>  Preparing: select wa.water_price,wa.water_sum from water wa WHERE wa.user_Id = ? and wa.create_time = ? and wa.user_org = ? and user_type != 'B' 
2019-05-23 16:26:31 -==> Parameters: 1-0001(String), 2019-03(String), 2(String)
2019-05-23 16:26:31 -<==      Total: 1
2019-05-23 16:26:31 -==>  Preparing: update water set water_sum = water_sum + ?,user_type=? WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-05-23 16:26:32 -==> Parameters: 1(String), A(String), 2019-03(String), 2(String), 1-0001(String)
2019-05-23 16:26:32 -<==    Updates: 1
2019-05-23 16:26:32 -==>  Preparing: insert into water_log ( `user_id`, `user_name`, `user_type`, `user_org`, `water_type`, `water_money`, `water_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-23 16:26:32 -==> Parameters: 1-0001(String), 姜海龙(String), A(String), 2(String), 1(String), 1(BigDecimal), 2019-05-23 16:26:31.952(Timestamp), 2019-03(String), 1(Long), 2019-05-23 16:26:31.952(Timestamp), 1(Long), null
2019-05-23 16:26:33 -<==    Updates: 1
2019-05-23 16:26:33 -==>  Preparing: insert into print ( `user_id`, `user_name`, `user_type`, `user_org`, `start`, `end`, `hu`, `elec_price`, `elec_amount`, `elec_cost`, `elec_sum`, `elec_money`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `heat_money`, `water_price`, `water_cost`, `water_sum`, `water_money`, `print_state`, `print_date`, `cost_poper`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-23 16:26:33 -==> Parameters: 1-0001(String), 姜海龙(String), A(String), 2(String), null, null, null, null, null, null, null, null, 3.50(BigDecimal), 100.00(BigDecimal), 100.00(BigDecimal), -74.35(BigDecimal), null, 6.30(BigDecimal), null, 23.00(BigDecimal), 1(BigDecimal), 0(String), 2019-05-23 16:26:31.979(Timestamp), null, 2019-03(String), 1(Long), 2019-05-23 16:26:31.98(Timestamp), 1(Long), null
2019-05-23 16:26:33 -<==    Updates: 1
2019-05-23 16:26:33 -耗时 : 1777
2019-05-23 16:26:33 -返回值 : 24
2019-05-23 16:26:35 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-05-23 16:26:35 -HTTP METHOD : POST
2019-05-23 16:26:35 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-05-23 16:26:35 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@7d7782c7]
2019-05-23 16:26:35 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-05-23 16:26:35 -==> Parameters: 2019-03(String), 2(String), 1-0001(String), 2019-03(String), 2(String), 1-0001(String), 2019-03(String), 2(String), 1-0001(String)
2019-05-23 16:26:35 -<==      Total: 3
2019-05-23 16:26:35 -耗时 : 21
2019-05-23 16:26:35 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@3313fe5c, com.bootdo.moneyList.damain.MoneyListDO@72b33343, com.bootdo.moneyList.damain.MoneyListDO@386ce30b]
2019-05-23 16:26:40 -请求地址 : http://localhost:8081/moneyList/moneyList/moneyPrint/24
2019-05-23 16:26:40 -HTTP METHOD : GET
2019-05-23 16:26:40 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.printEdit
2019-05-23 16:26:40 -参数 : [24, {}]
2019-05-23 16:26:40 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-05-23 16:26:40 -==> Parameters: 24(Long)
2019-05-23 16:26:40 -<==      Total: 1
2019-05-23 16:26:40 -耗时 : 16
2019-05-23 16:26:40 -返回值 : moneyList/moneyPrint
2019-05-23 16:26:40 -[THYMELEAF][http-nio-8081-exec-1] Exception processing template "moneyList/moneyPrint": An error happened during template parsing (template: "class path resource [templates/moneyList/moneyPrint.html]")
org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/moneyList/moneyPrint.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:354)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:187)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1325)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1069)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.attoparser.ParseException: Cannot execute multiplication: operands are "null" and "null" (template: "moneyList/moneyPrint" - line 25, col 58)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 69 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Cannot execute multiplication: operands are "null" and "null" (template: "moneyList/moneyPrint" - line 25, col 58)
	at org.thymeleaf.standard.expression.MultiplicationExpression.executeMultiplication(MultiplicationExpression.java:98)
	at org.thymeleaf.standard.expression.ComplexExpression.executeComplex(ComplexExpression.java:68)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:112)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:126)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleOpenElementEnd(TemplateHandlerAdapterMarkupHandler.java:304)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:278)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleOpenElementEnd(OutputExpressionInlinePreProcessorHandler.java:186)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:124)
	at org.attoparser.HtmlElement.handleOpenElementEnd(HtmlElement.java:109)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 71 common frames omitted
2019-05-23 16:26:40 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/moneyList/moneyPrint.html]")] with root cause
org.thymeleaf.exceptions.TemplateProcessingException: Cannot execute multiplication: operands are "null" and "null" (template: "moneyList/moneyPrint" - line 25, col 58)
	at org.thymeleaf.standard.expression.MultiplicationExpression.executeMultiplication(MultiplicationExpression.java:98)
	at org.thymeleaf.standard.expression.ComplexExpression.executeComplex(ComplexExpression.java:68)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:112)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:126)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleOpenElementEnd(TemplateHandlerAdapterMarkupHandler.java:304)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:278)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleOpenElementEnd(OutputExpressionInlinePreProcessorHandler.java:186)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:124)
	at org.attoparser.HtmlElement.handleOpenElementEnd(HtmlElement.java:109)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:354)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:187)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1325)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1069)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-23 16:31:54 -请求地址 : http://localhost:8081/index
2019-05-23 16:31:54 -HTTP METHOD : GET
2019-05-23 16:31:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-23 16:31:54 -参数 : [{}]
2019-05-23 16:31:54 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-23 16:31:54 -==> Parameters: 1(Long)
2019-05-23 16:31:54 -<==      Total: 49
2019-05-23 16:31:54 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-23 16:31:54 -==> Parameters: 138(Long)
2019-05-23 16:31:54 -<==      Total: 1
2019-05-23 16:31:54 -耗时 : 70
2019-05-23 16:31:54 -返回值 : index_v1
2019-05-23 16:31:54 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-23 16:31:54 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 70(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-23 16:31:54.374(Timestamp)
2019-05-23 16:31:54 -请求地址 : http://localhost:8081/main
2019-05-23 16:31:54 -HTTP METHOD : GET
2019-05-23 16:31:54 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-23 16:31:54 -HTTP METHOD : GET
2019-05-23 16:31:54 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-23 16:31:54 -参数 : []
2019-05-23 16:31:54 -请求地址 : http://localhost:8081/main
2019-05-23 16:31:54 -HTTP METHOD : GET
2019-05-23 16:31:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-23 16:31:54 -参数 : []
2019-05-23 16:31:54 -耗时 : 0
2019-05-23 16:31:54 -返回值 : main
2019-05-23 16:31:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-23 16:31:54 -参数 : []
2019-05-23 16:31:54 -耗时 : 87
2019-05-23 16:31:54 -返回值 : main
2019-05-23 16:31:55 -<==    Updates: 1
2019-05-23 16:31:55 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-23 16:31:55 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-23 16:31:55 -<==      Total: 0
2019-05-23 16:31:55 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-23 16:31:55 -==> Parameters: 1(Long), 0(String)
2019-05-23 16:31:55 -<==      Total: 1
2019-05-23 16:31:55 -耗时 : 830
2019-05-23 16:31:55 -返回值 : com.bootdo.common.utils.PageUtils@45d138d9
2019-05-23 16:32:37 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:20)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:23)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:424)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:232)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-23 16:39:38 -Starting BootdoApplication on PC-201905091110 with PID 9344 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-23 16:39:38 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-23 16:39:38 -The following profiles are active: dev
2019-05-23 16:39:38 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Thu May 23 16:39:38 CST 2019]; root of context hierarchy
2019-05-23 16:39:41 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-23 16:39:43 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d4b53e4c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 16:39:43 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$c70e6cf3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 16:39:45 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 16:39:46 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 16:39:46 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 16:39:46 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-23 16:39:46 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-23 16:39:46 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 16:39:46 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 16:39:46 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 16:39:46 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 16:39:47 -Tomcat initialized with port(s): 8081 (http)
2019-05-23 16:39:47 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-23 16:39:48 -Starting service [Tomcat]
2019-05-23 16:39:48 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-23 16:39:48 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-23 16:39:48 -Initializing Spring embedded WebApplicationContext
2019-05-23 16:39:48 -Root WebApplicationContext: initialization completed in 10272 ms
2019-05-23 16:39:49 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-23 16:39:49 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-23 16:39:49 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-23 16:39:49 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-23 16:39:49 -Filter xssFilter was not registered (disabled)
2019-05-23 16:39:49 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-23 16:39:49 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-23 16:39:49 -Servlet statViewServlet mapped to [/druid/*]
2019-05-23 16:39:49 -Servlet dispatcherServlet mapped to [/]
2019-05-23 16:39:54 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Thu May 23 16:39:38 CST 2019]; root of context hierarchy
2019-05-23 16:39:54 -Using default implementation for ThreadExecutor
2019-05-23 16:39:55 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-23 16:39:55 -Quartz Scheduler v.2.2.1 created.
2019-05-23 16:39:55 -RAMJobStore initialized.
2019-05-23 16:39:55 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-23 16:39:55 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-23 16:39:55 -Quartz scheduler version: 2.2.1
2019-05-23 16:39:55 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@8077c97
2019-05-23 16:39:56 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-23 16:39:56 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-23 16:39:59 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-23 16:39:59 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 16:39:59 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-23 16:39:59 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-23 16:39:59 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-23 16:39:59 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 16:39:59 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-23 16:39:59 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-23 16:39:59 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-23 16:39:59 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 16:39:59 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-23 16:39:59 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-23 16:39:59 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-23 16:39:59 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 16:39:59 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-23 16:39:59 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-23 16:39:59 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 16:39:59 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-23 16:39:59 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-23 16:39:59 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-23 16:39:59 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 16:39:59 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-23 16:39:59 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-23 16:39:59 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 16:39:59 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-23 16:39:59 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-23 16:39:59 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 16:39:59 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 16:39:59 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-23 16:39:59 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-23 16:39:59 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 16:39:59 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-23 16:39:59 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-23 16:39:59 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 16:39:59 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-23 16:39:59 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-23 16:39:59 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-23 16:39:59 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-23 16:39:59 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-23 16:39:59 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-23 16:39:59 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 16:39:59 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-23 16:39:59 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-23 16:39:59 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-23 16:39:59 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-23 16:39:59 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-23 16:39:59 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 16:39:59 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-23 16:39:59 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-23 16:39:59 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-23 16:39:59 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-23 16:39:59 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 16:39:59 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-23 16:39:59 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-23 16:39:59 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-23 16:39:59 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 16:39:59 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-23 16:39:59 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 16:39:59 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-23 16:39:59 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-23 16:39:59 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-23 16:39:59 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-23 16:39:59 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-23 16:39:59 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-23 16:39:59 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-23 16:39:59 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-23 16:39:59 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-23 16:39:59 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 16:39:59 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-23 16:39:59 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-23 16:39:59 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 16:39:59 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-23 16:39:59 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-23 16:39:59 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-23 16:39:59 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-23 16:39:59 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 16:39:59 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-23 16:39:59 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-23 16:39:59 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-23 16:39:59 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-23 16:39:59 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-23 16:39:59 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-23 16:39:59 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-23 16:39:59 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-23 16:39:59 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-23 16:39:59 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-23 16:39:59 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-23 16:39:59 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 16:39:59 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-23 16:39:59 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-23 16:39:59 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-23 16:39:59 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-23 16:39:59 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-23 16:39:59 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-23 16:39:59 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-23 16:39:59 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-23 16:39:59 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-23 16:39:59 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 16:39:59 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-23 16:39:59 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 16:39:59 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-23 16:39:59 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-23 16:39:59 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-23 16:39:59 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-23 16:39:59 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-23 16:39:59 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-23 16:39:59 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-23 16:39:59 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-23 16:39:59 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 16:39:59 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-23 16:39:59 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-23 16:39:59 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-23 16:39:59 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-23 16:39:59 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-23 16:39:59 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-23 16:39:59 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-23 16:39:59 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-23 16:39:59 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-23 16:39:59 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-23 16:39:59 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-23 16:39:59 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 16:39:59 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-23 16:39:59 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-23 16:39:59 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 16:39:59 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-23 16:39:59 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-23 16:39:59 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-23 16:39:59 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-23 16:40:00 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-23 16:40:00 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-23 16:40:00 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 16:40:00 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-23 16:40:00 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-23 16:40:00 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-23 16:40:00 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-23 16:40:00 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-23 16:40:00 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-23 16:40:00 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 16:40:00 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-23 16:40:00 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 16:40:00 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-23 16:40:00 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-23 16:40:00 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-23 16:40:00 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-23 16:40:00 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-23 16:40:00 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-23 16:40:00 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 16:40:00 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-23 16:40:00 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 16:40:00 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-23 16:40:00 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-23 16:40:00 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-23 16:40:00 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-23 16:40:00 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-23 16:40:00 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-23 16:40:00 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 16:40:00 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-23 16:40:00 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 16:40:00 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-23 16:40:00 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-23 16:40:00 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-23 16:40:00 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-23 16:40:00 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-23 16:40:00 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-23 16:40:00 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-23 16:40:00 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 16:40:00 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-23 16:40:00 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-23 16:40:00 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 16:40:00 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-23 16:40:00 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 16:40:00 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-23 16:40:00 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-23 16:40:00 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-23 16:40:00 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-05-23 16:40:00 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-23 16:40:00 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 16:40:00 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-23 16:40:00 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 16:40:00 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 16:40:00 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-23 16:40:00 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-23 16:40:00 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-23 16:40:00 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-23 16:40:00 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-23 16:40:00 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-23 16:40:00 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-23 16:40:00 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-23 16:40:00 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-23 16:40:00 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-23 16:40:00 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 16:40:00 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-23 16:40:00 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-23 16:40:00 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-23 16:40:00 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-23 16:40:00 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-23 16:40:00 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-23 16:40:00 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-23 16:40:00 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-23 16:40:00 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-23 16:40:00 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-23 16:40:00 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-23 16:40:00 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-23 16:40:00 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 16:40:00 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-23 16:40:00 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-23 16:40:00 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-23 16:40:00 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-23 16:40:00 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-23 16:40:00 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-23 16:40:00 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-23 16:40:00 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-23 16:40:00 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-23 16:40:00 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-23 16:40:00 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-23 16:40:00 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 16:40:00 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-23 16:40:00 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-23 16:40:00 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-23 16:40:00 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-23 16:40:00 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-23 16:40:00 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 16:40:00 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-23 16:40:00 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-23 16:40:00 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-23 16:40:00 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 16:40:00 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-23 16:40:00 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-23 16:40:00 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-23 16:40:00 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-23 16:40:00 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-23 16:40:00 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-23 16:40:00 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-23 16:40:00 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-23 16:40:00 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-23 16:40:00 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-23 16:40:00 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-23 16:40:00 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-23 16:40:00 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-23 16:40:00 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-23 16:40:00 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-23 16:40:00 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-23 16:40:00 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-23 16:40:00 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 16:40:00 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-23 16:40:00 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 16:40:00 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-23 16:40:00 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-23 16:40:00 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-23 16:40:00 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-23 16:40:00 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-23 16:40:00 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-23 16:40:00 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-23 16:40:00 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-23 16:40:00 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-23 16:40:00 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 16:40:00 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-23 16:40:00 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-23 16:40:00 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 16:40:00 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-23 16:40:00 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-23 16:40:00 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-23 16:40:00 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-23 16:40:00 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-23 16:40:00 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-23 16:40:00 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-23 16:40:00 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-23 16:40:00 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-23 16:40:00 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-23 16:40:01 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-23 16:40:01 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-23 16:40:02 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Thu May 23 16:39:38 CST 2019]; root of context hierarchy
2019-05-23 16:40:02 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-23 16:40:02 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-23 16:40:02 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-23 16:40:02 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-23 16:40:02 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-23 16:40:05 -Registering beans for JMX exposure on startup
2019-05-23 16:40:05 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-23 16:40:05 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-23 16:40:05 -Starting beans in phase 2147483647
2019-05-23 16:40:05 -Context refreshed
2019-05-23 16:40:08 -Found 1 custom documentation plugin(s)
2019-05-23 16:40:08 -Scanning for api listing references
2019-05-23 16:40:11 -Generating unique operation named: getCountDUsingPOST_1
2019-05-23 16:40:11 -Generating unique operation named: removeUsingPOST_1
2019-05-23 16:40:11 -Generating unique operation named: addUsingGET_1
2019-05-23 16:40:11 -Generating unique operation named: editUsingGET_1
2019-05-23 16:40:11 -Generating unique operation named: listUsingGET_1
2019-05-23 16:40:12 -Generating unique operation named: removeUsingPOST_2
2019-05-23 16:40:12 -Generating unique operation named: removeUsingPOST_3
2019-05-23 16:40:12 -Generating unique operation named: saveUsingPOST_1
2019-05-23 16:40:12 -Generating unique operation named: updateUsingGET_1
2019-05-23 16:40:12 -Generating unique operation named: updateUsingHEAD_1
2019-05-23 16:40:12 -Generating unique operation named: updateUsingPOST_1
2019-05-23 16:40:12 -Generating unique operation named: updateUsingPUT_1
2019-05-23 16:40:12 -Generating unique operation named: updateUsingPATCH_1
2019-05-23 16:40:12 -Generating unique operation named: updateUsingDELETE_1
2019-05-23 16:40:12 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-23 16:40:12 -Generating unique operation named: updateUsingTRACE_1
2019-05-23 16:40:12 -Generating unique operation named: addUsingGET_2
2019-05-23 16:40:12 -Generating unique operation named: editUsingGET_2
2019-05-23 16:40:12 -Generating unique operation named: listUsingGET_2
2019-05-23 16:40:12 -Generating unique operation named: removeUsingPOST_4
2019-05-23 16:40:12 -Generating unique operation named: removeUsingPOST_5
2019-05-23 16:40:12 -Generating unique operation named: saveUsingPOST_2
2019-05-23 16:40:12 -Generating unique operation named: updateUsingPOST_2
2019-05-23 16:40:12 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-23 16:40:12 -Generating unique operation named: addUsingGET_3
2019-05-23 16:40:12 -Generating unique operation named: editUsingGET_3
2019-05-23 16:40:12 -Generating unique operation named: listUsingGET_3
2019-05-23 16:40:12 -Generating unique operation named: removeUsingPOST_6
2019-05-23 16:40:12 -Generating unique operation named: removeUsingPOST_7
2019-05-23 16:40:12 -Generating unique operation named: saveUsingPOST_3
2019-05-23 16:40:12 -Generating unique operation named: updateUsingGET_2
2019-05-23 16:40:12 -Generating unique operation named: updateUsingHEAD_2
2019-05-23 16:40:12 -Generating unique operation named: updateUsingPOST_3
2019-05-23 16:40:12 -Generating unique operation named: updateUsingPUT_2
2019-05-23 16:40:12 -Generating unique operation named: updateUsingPATCH_2
2019-05-23 16:40:12 -Generating unique operation named: updateUsingDELETE_2
2019-05-23 16:40:12 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-23 16:40:12 -Generating unique operation named: updateUsingTRACE_2
2019-05-23 16:40:12 -Generating unique operation named: addUsingGET_4
2019-05-23 16:40:12 -Generating unique operation named: editUsingGET_4
2019-05-23 16:40:12 -Generating unique operation named: listUsingGET_4
2019-05-23 16:40:12 -Generating unique operation named: removeUsingPOST_8
2019-05-23 16:40:12 -Generating unique operation named: removeUsingPOST_9
2019-05-23 16:40:12 -Generating unique operation named: saveUsingPOST_4
2019-05-23 16:40:12 -Generating unique operation named: updateUsingGET_3
2019-05-23 16:40:12 -Generating unique operation named: updateUsingHEAD_3
2019-05-23 16:40:12 -Generating unique operation named: updateUsingPOST_4
2019-05-23 16:40:12 -Generating unique operation named: updateUsingPUT_3
2019-05-23 16:40:12 -Generating unique operation named: updateUsingPATCH_3
2019-05-23 16:40:12 -Generating unique operation named: updateUsingDELETE_3
2019-05-23 16:40:12 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-23 16:40:12 -Generating unique operation named: updateUsingTRACE_3
2019-05-23 16:40:12 -Generating unique operation named: ElecUsingGET_1
2019-05-23 16:40:12 -Generating unique operation named: addUsingGET_5
2019-05-23 16:40:12 -Generating unique operation named: editUsingGET_5
2019-05-23 16:40:12 -Generating unique operation named: listUsingGET_5
2019-05-23 16:40:12 -Generating unique operation named: removeUsingPOST_10
2019-05-23 16:40:12 -Generating unique operation named: removeUsingPOST_11
2019-05-23 16:40:12 -Generating unique operation named: saveUsingPOST_5
2019-05-23 16:40:12 -Generating unique operation named: updateUsingGET_4
2019-05-23 16:40:12 -Generating unique operation named: updateUsingHEAD_4
2019-05-23 16:40:12 -Generating unique operation named: updateUsingPOST_5
2019-05-23 16:40:12 -Generating unique operation named: updateUsingPUT_4
2019-05-23 16:40:12 -Generating unique operation named: updateUsingPATCH_4
2019-05-23 16:40:12 -Generating unique operation named: updateUsingDELETE_4
2019-05-23 16:40:12 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-23 16:40:12 -Generating unique operation named: updateUsingTRACE_4
2019-05-23 16:40:12 -Generating unique operation named: editUsingGET_6
2019-05-23 16:40:12 -Generating unique operation named: listUsingGET_6
2019-05-23 16:40:12 -Generating unique operation named: updateUsingPOST_6
2019-05-23 16:40:12 -Generating unique operation named: addUsingGET_6
2019-05-23 16:40:12 -Generating unique operation named: editUsingGET_7
2019-05-23 16:40:12 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-23 16:40:12 -Generating unique operation named: listUsingGET_7
2019-05-23 16:40:12 -Generating unique operation named: removeUsingPOST_12
2019-05-23 16:40:12 -Generating unique operation named: removeUsingPOST_13
2019-05-23 16:40:12 -Generating unique operation named: saveUsingPOST_6
2019-05-23 16:40:12 -Generating unique operation named: updateUsingGET_5
2019-05-23 16:40:12 -Generating unique operation named: updateUsingHEAD_5
2019-05-23 16:40:12 -Generating unique operation named: updateUsingPOST_7
2019-05-23 16:40:12 -Generating unique operation named: updateUsingPUT_5
2019-05-23 16:40:12 -Generating unique operation named: updateUsingPATCH_5
2019-05-23 16:40:12 -Generating unique operation named: updateUsingDELETE_5
2019-05-23 16:40:12 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-23 16:40:12 -Generating unique operation named: updateUsingTRACE_5
2019-05-23 16:40:12 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-23 16:40:12 -Generating unique operation named: addUsingGET_7
2019-05-23 16:40:12 -Generating unique operation named: editUsingGET_8
2019-05-23 16:40:12 -Generating unique operation named: listUsingGET_8
2019-05-23 16:40:12 -Generating unique operation named: removeUsingPOST_14
2019-05-23 16:40:12 -Generating unique operation named: removeUsingPOST_15
2019-05-23 16:40:12 -Generating unique operation named: saveUsingPOST_7
2019-05-23 16:40:12 -Generating unique operation named: updateUsingGET_6
2019-05-23 16:40:12 -Generating unique operation named: updateUsingHEAD_6
2019-05-23 16:40:12 -Generating unique operation named: updateUsingPOST_8
2019-05-23 16:40:12 -Generating unique operation named: updateUsingPUT_6
2019-05-23 16:40:12 -Generating unique operation named: updateUsingPATCH_6
2019-05-23 16:40:12 -Generating unique operation named: updateUsingDELETE_6
2019-05-23 16:40:12 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-23 16:40:12 -Generating unique operation named: updateUsingTRACE_6
2019-05-23 16:40:12 -Generating unique operation named: addUsingGET_8
2019-05-23 16:40:12 -Generating unique operation named: editUsingGET_9
2019-05-23 16:40:12 -Generating unique operation named: listUsingGET_9
2019-05-23 16:40:12 -Generating unique operation named: removeUsingPOST_16
2019-05-23 16:40:12 -Generating unique operation named: removeUsingPOST_17
2019-05-23 16:40:12 -Generating unique operation named: saveUsingPOST_8
2019-05-23 16:40:12 -Generating unique operation named: updateUsingGET_7
2019-05-23 16:40:12 -Generating unique operation named: updateUsingHEAD_7
2019-05-23 16:40:12 -Generating unique operation named: updateUsingPOST_9
2019-05-23 16:40:12 -Generating unique operation named: updateUsingPUT_7
2019-05-23 16:40:12 -Generating unique operation named: updateUsingPATCH_7
2019-05-23 16:40:12 -Generating unique operation named: updateUsingDELETE_7
2019-05-23 16:40:12 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-23 16:40:12 -Generating unique operation named: updateUsingTRACE_7
2019-05-23 16:40:12 -Generating unique operation named: addUsingGET_9
2019-05-23 16:40:13 -Generating unique operation named: editUsingGET_10
2019-05-23 16:40:13 -Generating unique operation named: infoUsingGET_1
2019-05-23 16:40:13 -Generating unique operation named: infoUsingHEAD_1
2019-05-23 16:40:13 -Generating unique operation named: infoUsingPOST_1
2019-05-23 16:40:13 -Generating unique operation named: infoUsingPUT_1
2019-05-23 16:40:13 -Generating unique operation named: infoUsingPATCH_1
2019-05-23 16:40:13 -Generating unique operation named: infoUsingDELETE_1
2019-05-23 16:40:13 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-23 16:40:13 -Generating unique operation named: infoUsingTRACE_1
2019-05-23 16:40:13 -Generating unique operation named: listUsingGET_10
2019-05-23 16:40:13 -Generating unique operation named: removeUsingPOST_18
2019-05-23 16:40:13 -Generating unique operation named: removeUsingPOST_19
2019-05-23 16:40:13 -Generating unique operation named: saveUsingPOST_9
2019-05-23 16:40:13 -Generating unique operation named: updateUsingPOST_10
2019-05-23 16:40:13 -Generating unique operation named: listUsingGET_11
2019-05-23 16:40:13 -Generating unique operation named: removeUsingPOST_20
2019-05-23 16:40:13 -Generating unique operation named: welcomeUsingGET_1
2019-05-23 16:40:13 -Generating unique operation named: addUsingGET_10
2019-05-23 16:40:13 -Generating unique operation named: editUsingGET_11
2019-05-23 16:40:13 -Generating unique operation named: listUsingGET_12
2019-05-23 16:40:13 -Generating unique operation named: removeUsingPOST_21
2019-05-23 16:40:13 -Generating unique operation named: saveUsingPOST_10
2019-05-23 16:40:13 -Generating unique operation named: treeUsingGET_1
2019-05-23 16:40:13 -Generating unique operation named: treeUsingGET_2
2019-05-23 16:40:13 -Generating unique operation named: updateUsingPOST_11
2019-05-23 16:40:13 -Generating unique operation named: addUsingGET_11
2019-05-23 16:40:13 -Generating unique operation named: editUsingGET_12
2019-05-23 16:40:13 -Generating unique operation named: listUsingGET_13
2019-05-23 16:40:13 -Generating unique operation named: removeUsingPOST_22
2019-05-23 16:40:13 -Generating unique operation named: removeUsingPOST_23
2019-05-23 16:40:13 -Generating unique operation named: saveUsingPOST_11
2019-05-23 16:40:13 -Generating unique operation named: updateUsingGET_8
2019-05-23 16:40:13 -Generating unique operation named: updateUsingHEAD_8
2019-05-23 16:40:13 -Generating unique operation named: updateUsingPOST_12
2019-05-23 16:40:13 -Generating unique operation named: updateUsingPUT_8
2019-05-23 16:40:13 -Generating unique operation named: updateUsingPATCH_8
2019-05-23 16:40:13 -Generating unique operation named: updateUsingDELETE_8
2019-05-23 16:40:13 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-23 16:40:13 -Generating unique operation named: updateUsingTRACE_8
2019-05-23 16:40:13 -Generating unique operation named: addUsingGET_12
2019-05-23 16:40:13 -Generating unique operation named: editUsingGET_13
2019-05-23 16:40:13 -Generating unique operation named: listUsingGET_14
2019-05-23 16:40:13 -Generating unique operation named: printEditUsingGET_1
2019-05-23 16:40:13 -Generating unique operation named: removeUsingPOST_24
2019-05-23 16:40:13 -Generating unique operation named: removeUsingPOST_25
2019-05-23 16:40:13 -Generating unique operation named: saveUsingPOST_12
2019-05-23 16:40:13 -Generating unique operation named: updateUsingGET_9
2019-05-23 16:40:13 -Generating unique operation named: updateUsingHEAD_9
2019-05-23 16:40:13 -Generating unique operation named: updateUsingPOST_13
2019-05-23 16:40:13 -Generating unique operation named: updateUsingPUT_9
2019-05-23 16:40:13 -Generating unique operation named: updateUsingPATCH_9
2019-05-23 16:40:13 -Generating unique operation named: updateUsingDELETE_9
2019-05-23 16:40:13 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-23 16:40:13 -Generating unique operation named: updateUsingTRACE_9
2019-05-23 16:40:13 -Generating unique operation named: addUsingGET_13
2019-05-23 16:40:13 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-23 16:40:13 -Generating unique operation named: editUsingGET_14
2019-05-23 16:40:13 -Generating unique operation named: listUsingGET_15
2019-05-23 16:40:13 -Generating unique operation named: saveUsingPOST_13
2019-05-23 16:40:13 -Generating unique operation named: saveUsingPOST_14
2019-05-23 16:40:13 -Generating unique operation named: updateUsingPOST_14
2019-05-23 16:40:13 -Generating unique operation named: listUsingGET_16
2019-05-23 16:40:13 -Generating unique operation named: listUsingHEAD_1
2019-05-23 16:40:13 -Generating unique operation named: listUsingPOST_1
2019-05-23 16:40:13 -Generating unique operation named: listUsingPUT_1
2019-05-23 16:40:13 -Generating unique operation named: listUsingPATCH_1
2019-05-23 16:40:13 -Generating unique operation named: listUsingDELETE_1
2019-05-23 16:40:13 -Generating unique operation named: listUsingOPTIONS_1
2019-05-23 16:40:13 -Generating unique operation named: listUsingTRACE_1
2019-05-23 16:40:13 -Generating unique operation named: countDDUsingGET_1
2019-05-23 16:40:13 -Generating unique operation named: exportDDUsingGET_1
2019-05-23 16:40:13 -Generating unique operation named: addUsingGET_14
2019-05-23 16:40:13 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-23 16:40:13 -Generating unique operation named: editUsingGET_15
2019-05-23 16:40:13 -Generating unique operation named: listUsingGET_17
2019-05-23 16:40:13 -Generating unique operation named: removeUsingPOST_26
2019-05-23 16:40:13 -Generating unique operation named: saveUsingPOST_15
2019-05-23 16:40:13 -Generating unique operation named: treeUsingGET_3
2019-05-23 16:40:13 -Generating unique operation named: treeViewUsingGET_1
2019-05-23 16:40:13 -Generating unique operation named: updateUsingPOST_15
2019-05-23 16:40:13 -Generating unique operation named: addUsingGET_15
2019-05-23 16:40:13 -Generating unique operation named: editUsingGET_16
2019-05-23 16:40:13 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-23 16:40:13 -Generating unique operation named: listUsingGET_18
2019-05-23 16:40:13 -Generating unique operation named: removeUsingPOST_27
2019-05-23 16:40:13 -Generating unique operation named: removeUsingPOST_28
2019-05-23 16:40:13 -Generating unique operation named: saveUsingPOST_16
2019-05-23 16:40:13 -Generating unique operation named: updateUsingGET_10
2019-05-23 16:40:13 -Generating unique operation named: updateUsingHEAD_10
2019-05-23 16:40:13 -Generating unique operation named: updateUsingPOST_16
2019-05-23 16:40:13 -Generating unique operation named: updateUsingPUT_10
2019-05-23 16:40:13 -Generating unique operation named: updateUsingPATCH_10
2019-05-23 16:40:13 -Generating unique operation named: updateUsingDELETE_10
2019-05-23 16:40:13 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-23 16:40:13 -Generating unique operation named: updateUsingTRACE_10
2019-05-23 16:40:13 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-23 16:40:13 -Generating unique operation named: addUsingGET_16
2019-05-23 16:40:13 -Generating unique operation named: editUsingGET_17
2019-05-23 16:40:13 -Generating unique operation named: listUsingGET_19
2019-05-23 16:40:13 -Generating unique operation named: removeUsingPOST_29
2019-05-23 16:40:13 -Generating unique operation named: removeUsingPOST_30
2019-05-23 16:40:13 -Generating unique operation named: saveUsingPOST_17
2019-05-23 16:40:13 -Generating unique operation named: updateUsingGET_11
2019-05-23 16:40:14 -Generating unique operation named: updateUsingHEAD_11
2019-05-23 16:40:14 -Generating unique operation named: updateUsingPOST_17
2019-05-23 16:40:14 -Generating unique operation named: updateUsingPUT_11
2019-05-23 16:40:14 -Generating unique operation named: updateUsingPATCH_11
2019-05-23 16:40:14 -Generating unique operation named: updateUsingDELETE_11
2019-05-23 16:40:14 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-23 16:40:14 -Generating unique operation named: updateUsingTRACE_11
2019-05-23 16:40:14 -Generating unique operation named: addUsingGET_17
2019-05-23 16:40:14 -Generating unique operation named: editUsingGET_18
2019-05-23 16:40:14 -Generating unique operation named: listUsingGET_20
2019-05-23 16:40:14 -Generating unique operation named: removeUsingPOST_31
2019-05-23 16:40:14 -Generating unique operation named: removeUsingPOST_32
2019-05-23 16:40:14 -Generating unique operation named: saveUsingPOST_18
2019-05-23 16:40:14 -Generating unique operation named: updateUsingGET_12
2019-05-23 16:40:14 -Generating unique operation named: updateUsingHEAD_12
2019-05-23 16:40:14 -Generating unique operation named: updateUsingPOST_18
2019-05-23 16:40:14 -Generating unique operation named: updateUsingPUT_12
2019-05-23 16:40:14 -Generating unique operation named: updateUsingPATCH_12
2019-05-23 16:40:14 -Generating unique operation named: updateUsingDELETE_12
2019-05-23 16:40:14 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-23 16:40:14 -Generating unique operation named: updateUsingTRACE_12
2019-05-23 16:40:14 -Starting Quartz Scheduler now
2019-05-23 16:40:14 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-23 16:40:14 -Starting...
2019-05-23 16:40:14 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-23 16:40:14 -Started.
2019-05-23 16:40:14 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-23 16:40:14 -Using a shared selector for servlet write/read
2019-05-23 16:40:14 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-23 16:40:14 -Started BootdoApplication in 37.294 seconds (JVM running for 38.131)
2019-05-23 16:40:14 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-23 16:40:14 -==> Parameters: 
2019-05-23 16:40:14 -<==      Total: 1
2019-05-23 16:41:01 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-05-23 16:41:44 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-23 16:41:44 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-23 16:41:44 -FrameworkServlet 'dispatcherServlet': initialization completed in 70 ms
2019-05-23 16:41:44 -Enabling session validation scheduler...
2019-05-23 16:41:44 -请求地址 : http://localhost:8081/login;JSESSIONID=2a334625-6a6d-487a-b8d2-e0fb66429191
2019-05-23 16:41:44 -HTTP METHOD : GET
2019-05-23 16:41:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-23 16:41:44 -参数 : [{}]
2019-05-23 16:41:44 -耗时 : 5
2019-05-23 16:41:44 -返回值 : login
2019-05-23 16:41:46 -请求地址 : http://localhost:8081/getVerify
2019-05-23 16:41:46 -HTTP METHOD : GET
2019-05-23 16:41:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-23 16:41:46 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@255a1319, org.apache.shiro.web.servlet.ShiroHttpServletResponse@2165936a]
2019-05-23 16:41:53 -5879
2019-05-23 16:41:53 -耗时 : 7171
2019-05-23 16:41:53 -返回值 : null
2019-05-23 16:41:58 -请求地址 : http://localhost:8081/login
2019-05-23 16:41:58 -HTTP METHOD : POST
2019-05-23 16:41:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-23 16:41:58 -参数 : [admin, 111111, 5879, org.apache.shiro.web.servlet.ShiroHttpServletRequest@3104ee62]
2019-05-23 16:41:58 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-23 16:41:58 -==> Parameters: admin(String)
2019-05-23 16:41:58 -<==      Total: 1
2019-05-23 16:41:58 -耗时 : 175
2019-05-23 16:41:58 -返回值 : {msg=操作成功, code=0}
2019-05-23 16:41:59 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-23 16:41:59 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-23 16:41:59 -==> Parameters: 1(Long), admin(String), 登录(String), 176(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-23 16:41:59.172(Timestamp)
2019-05-23 16:41:59 -请求地址 : http://localhost:8081/index
2019-05-23 16:41:59 -HTTP METHOD : GET
2019-05-23 16:41:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-23 16:41:59 -参数 : [{}]
2019-05-23 16:41:59 -<==    Updates: 1
2019-05-23 16:41:59 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-23 16:41:59 -==> Parameters: 1(Long)
2019-05-23 16:41:59 -<==      Total: 49
2019-05-23 16:41:59 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-23 16:41:59 -==> Parameters: 138(Long)
2019-05-23 16:41:59 -<==      Total: 1
2019-05-23 16:41:59 -耗时 : 578
2019-05-23 16:41:59 -返回值 : index_v1
2019-05-23 16:41:59 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-23 16:41:59 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 578(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-23 16:41:59.997(Timestamp)
2019-05-23 16:42:00 -<==    Updates: 1
2019-05-23 16:42:00 -请求地址 : http://localhost:8081/main
2019-05-23 16:42:00 -HTTP METHOD : GET
2019-05-23 16:42:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-23 16:42:00 -参数 : []
2019-05-23 16:42:00 -耗时 : 0
2019-05-23 16:42:00 -返回值 : main
2019-05-23 16:42:00 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-23 16:42:00 -HTTP METHOD : GET
2019-05-23 16:42:00 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-23 16:42:00 -参数 : []
2019-05-23 16:42:00 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-23 16:42:00 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-23 16:42:00 -<==      Total: 0
2019-05-23 16:42:00 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-23 16:42:00 -==> Parameters: 1(Long), 0(String)
2019-05-23 16:42:00 -<==      Total: 1
2019-05-23 16:42:00 -耗时 : 90
2019-05-23 16:42:00 -返回值 : com.bootdo.common.utils.PageUtils@50f5c981
2019-05-23 16:42:01 -请求地址 : http://localhost:8081/main
2019-05-23 16:42:01 -HTTP METHOD : GET
2019-05-23 16:42:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-23 16:42:01 -参数 : []
2019-05-23 16:42:01 -耗时 : 0
2019-05-23 16:42:01 -返回值 : main
2019-05-23 16:42:19 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-23 16:42:19 -==> Parameters: 1(Long)
2019-05-23 16:42:19 -<==      Total: 93
2019-05-23 16:42:19 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-05-23 16:42:19 -HTTP METHOD : GET
2019-05-23 16:42:19 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-05-23 16:42:19 -参数 : []
2019-05-23 16:42:19 -耗时 : 0
2019-05-23 16:42:19 -返回值 : /moneyList/moneyList
2019-05-23 16:42:36 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-23 16:42:36 -HTTP METHOD : GET
2019-05-23 16:42:36 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-23 16:42:36 -参数 : []
2019-05-23 16:42:36 -耗时 : 1
2019-05-23 16:42:36 -返回值 : system/dept/deptTree
2019-05-23 16:42:37 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-23 16:42:37 -HTTP METHOD : GET
2019-05-23 16:42:37 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-23 16:42:37 -参数 : []
2019-05-23 16:42:37 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-23 16:42:37 -==> Parameters: 
2019-05-23 16:42:37 -<==      Total: 3
2019-05-23 16:42:37 -耗时 : 58
2019-05-23 16:42:37 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-23 16:42:39 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-05-23 16:42:39 -HTTP METHOD : POST
2019-05-23 16:42:39 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-05-23 16:42:39 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@5692fd2b]
2019-05-23 16:42:39 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-05-23 16:42:39 -==> Parameters: 2019-03(String), 2(String), 1-0001(String), 2019-03(String), 2(String), 1-0001(String), 2019-03(String), 2(String), 1-0001(String)
2019-05-23 16:42:40 -<==      Total: 3
2019-05-23 16:42:40 -耗时 : 391
2019-05-23 16:42:40 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@59d182b3, com.bootdo.moneyList.damain.MoneyListDO@2bcaea91, com.bootdo.moneyList.damain.MoneyListDO@33df7b95]
2019-05-23 16:42:48 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-05-23 16:42:48 -HTTP METHOD : POST
2019-05-23 16:42:48 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-05-23 16:42:48 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@ede87d4]
2019-05-23 16:42:48 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-05-23 16:42:48 -==> Parameters: 2019-03(String), 2(String), 1-0001(String), 2019-03(String), 2(String), 1-0001(String), 2019-03(String), 2(String), 1-0001(String)
2019-05-23 16:42:48 -<==      Total: 3
2019-05-23 16:42:48 -==>  Preparing: select el.start,el.end,el.hu,el.elec_amount,el.elec_cost,el.elec_price,el.elec_sum from elec el WHERE el.user_Id = ? and el.create_time = ? and el.user_org = ? and user_type != 'B' 
2019-05-23 16:42:48 -==> Parameters: 1-0001(String), 2019-03(String), 2(String)
2019-05-23 16:42:48 -<==      Total: 0
2019-05-23 16:42:48 -==>  Preparing: select he.heat_area, he.heat_cost, he.heat_price, he.heat_sum from heat he WHERE he.user_Id = ? and he.create_time = ? and he.user_org = ? and user_type != 'B' 
2019-05-23 16:42:48 -==> Parameters: 1-0001(String), 2019-03(String), 2(String)
2019-05-23 16:42:48 -<==      Total: 1
2019-05-23 16:42:48 -==>  Preparing: select wa.water_price,wa.water_sum from water wa WHERE wa.user_Id = ? and wa.create_time = ? and wa.user_org = ? and user_type != 'B' 
2019-05-23 16:42:48 -==> Parameters: 1-0001(String), 2019-03(String), 2(String)
2019-05-23 16:42:48 -<==      Total: 1
2019-05-23 16:42:48 -==>  Preparing: update heat set heat_sum = heat_sum + ?,user_type=? WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-05-23 16:42:48 -==> Parameters: 1(String), A(String), 2019-03(String), 2(String), 1-0001(String)
2019-05-23 16:42:48 -<==    Updates: 1
2019-05-23 16:42:48 -==>  Preparing: insert into heat_log ( `user_id`, `user_name`, `user_type`, `user_org`, `heat_type`, `heat_money`, `heat_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-23 16:42:48 -==> Parameters: 1-0001(String), 姜海龙(String), A(String), 2(String), 1(String), 1(BigDecimal), 2019-05-23 16:42:48.761(Timestamp), 2019-03(String), 1(Long), 2019-05-23 16:42:48.761(Timestamp), 1(Long), null
2019-05-23 16:42:49 -<==    Updates: 1
2019-05-23 16:42:49 -==>  Preparing: insert into print ( `user_id`, `user_name`, `user_type`, `user_org`, `start`, `end`, `hu`, `elec_price`, `elec_amount`, `elec_cost`, `elec_sum`, `elec_money`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `heat_money`, `water_price`, `water_cost`, `water_sum`, `water_money`, `print_state`, `print_date`, `cost_poper`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-23 16:42:49 -==> Parameters: 1-0001(String), 姜海龙(String), A(String), 2(String), null, null, null, null, null, null, null, null, 3.50(BigDecimal), 100.00(BigDecimal), 100.00(BigDecimal), -74.35(BigDecimal), 1(BigDecimal), 6.30(BigDecimal), null, 24.00(BigDecimal), null, 0(String), 2019-05-23 16:42:48.776(Timestamp), null, 2019-03(String), 1(Long), 2019-05-23 16:42:48.776(Timestamp), 1(Long), null
2019-05-23 16:42:49 -<==    Updates: 1
2019-05-23 16:42:49 -耗时 : 657
2019-05-23 16:42:49 -返回值 : 25
2019-05-23 16:42:50 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-05-23 16:42:50 -HTTP METHOD : POST
2019-05-23 16:42:50 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-05-23 16:42:50 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@79a0b87e]
2019-05-23 16:42:50 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-05-23 16:42:50 -==> Parameters: 2019-03(String), 2(String), 1-0001(String), 2019-03(String), 2(String), 1-0001(String), 2019-03(String), 2(String), 1-0001(String)
2019-05-23 16:42:50 -<==      Total: 3
2019-05-23 16:42:50 -耗时 : 41
2019-05-23 16:42:50 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@29edd045, com.bootdo.moneyList.damain.MoneyListDO@55f2fe4e, com.bootdo.moneyList.damain.MoneyListDO@737ba3f3]
2019-05-23 16:42:53 -请求地址 : http://localhost:8081/moneyList/moneyList/moneyPrint/25
2019-05-23 16:42:53 -HTTP METHOD : GET
2019-05-23 16:42:53 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.printEdit
2019-05-23 16:42:53 -参数 : [25, {}]
2019-05-23 16:42:53 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-05-23 16:42:53 -==> Parameters: 25(Long)
2019-05-23 16:42:53 -<==      Total: 1
2019-05-23 16:42:53 -耗时 : 20
2019-05-23 16:42:53 -返回值 : moneyList/moneyPrint
2019-05-23 16:45:24 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-05-23 16:45:24 -HTTP METHOD : POST
2019-05-23 16:45:24 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-05-23 16:45:24 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@253d2e3b]
2019-05-23 16:45:24 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-05-23 16:45:24 -==> Parameters: 2019-03(String), 2(String), 1-0001(String), 2019-03(String), 2(String), 1-0001(String), 2019-03(String), 2(String), 1-0001(String)
2019-05-23 16:45:24 -<==      Total: 3
2019-05-23 16:45:24 -==>  Preparing: select el.start,el.end,el.hu,el.elec_amount,el.elec_cost,el.elec_price,el.elec_sum from elec el WHERE el.user_Id = ? and el.create_time = ? and el.user_org = ? and user_type != 'B' 
2019-05-23 16:45:24 -==> Parameters: 1-0001(String), 2019-03(String), 2(String)
2019-05-23 16:45:24 -<==      Total: 0
2019-05-23 16:45:24 -==>  Preparing: select he.heat_area, he.heat_cost, he.heat_price, he.heat_sum from heat he WHERE he.user_Id = ? and he.create_time = ? and he.user_org = ? and user_type != 'B' 
2019-05-23 16:45:24 -==> Parameters: 1-0001(String), 2019-03(String), 2(String)
2019-05-23 16:45:24 -<==      Total: 1
2019-05-23 16:45:24 -==>  Preparing: select wa.water_price,wa.water_sum from water wa WHERE wa.user_Id = ? and wa.create_time = ? and wa.user_org = ? and user_type != 'B' 
2019-05-23 16:45:24 -==> Parameters: 1-0001(String), 2019-03(String), 2(String)
2019-05-23 16:45:24 -<==      Total: 1
2019-05-23 16:45:24 -==>  Preparing: update water set water_sum = water_sum + ?,user_type=? WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-05-23 16:45:24 -==> Parameters: 1(String), A(String), 2019-03(String), 2(String), 1-0001(String)
2019-05-23 16:45:25 -<==    Updates: 1
2019-05-23 16:45:25 -==>  Preparing: insert into water_log ( `user_id`, `user_name`, `user_type`, `user_org`, `water_type`, `water_money`, `water_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-23 16:45:25 -==> Parameters: 1-0001(String), 姜海龙(String), A(String), 2(String), 1(String), 1(BigDecimal), 2019-05-23 16:45:24.966(Timestamp), 2019-03(String), 1(Long), 2019-05-23 16:45:24.966(Timestamp), 1(Long), null
2019-05-23 16:45:25 -<==    Updates: 1
2019-05-23 16:45:25 -==>  Preparing: insert into print ( `user_id`, `user_name`, `user_type`, `user_org`, `start`, `end`, `hu`, `elec_price`, `elec_amount`, `elec_cost`, `elec_sum`, `elec_money`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `heat_money`, `water_price`, `water_cost`, `water_sum`, `water_money`, `print_state`, `print_date`, `cost_poper`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-23 16:45:25 -==> Parameters: 1-0001(String), 姜海龙(String), A(String), 2(String), null, null, null, null, null, null, null, null, 3.50(BigDecimal), 100.00(BigDecimal), 100.00(BigDecimal), -73.35(BigDecimal), null, 6.30(BigDecimal), null, 24.00(BigDecimal), 1(BigDecimal), 0(String), 2019-05-23 16:45:24.978(Timestamp), null, 2019-03(String), 1(Long), 2019-05-23 16:45:24.978(Timestamp), 1(Long), null
2019-05-23 16:45:25 -<==    Updates: 1
2019-05-23 16:45:25 -耗时 : 221
2019-05-23 16:45:25 -返回值 : 26
2019-05-23 16:45:26 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-05-23 16:45:26 -HTTP METHOD : POST
2019-05-23 16:45:26 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-05-23 16:45:26 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@6fff4187]
2019-05-23 16:45:26 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-05-23 16:45:26 -==> Parameters: 2019-03(String), 2(String), 1-0001(String), 2019-03(String), 2(String), 1-0001(String), 2019-03(String), 2(String), 1-0001(String)
2019-05-23 16:45:26 -<==      Total: 3
2019-05-23 16:45:26 -耗时 : 62
2019-05-23 16:45:26 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@5c760cb2, com.bootdo.moneyList.damain.MoneyListDO@49908dc2, com.bootdo.moneyList.damain.MoneyListDO@2d044369]
2019-05-23 16:45:28 -请求地址 : http://localhost:8081/moneyList/moneyList/moneyPrint/26
2019-05-23 16:45:28 -HTTP METHOD : GET
2019-05-23 16:45:28 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.printEdit
2019-05-23 16:45:28 -参数 : [26, {}]
2019-05-23 16:45:28 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-05-23 16:45:28 -==> Parameters: 26(Long)
2019-05-23 16:45:28 -<==      Total: 1
2019-05-23 16:45:28 -耗时 : 7
2019-05-23 16:45:28 -返回值 : moneyList/moneyPrint
2019-05-23 16:46:46 -请求地址 : http://localhost:8081/index
2019-05-23 16:46:46 -HTTP METHOD : GET
2019-05-23 16:46:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-23 16:46:46 -参数 : [{}]
2019-05-23 16:46:46 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-23 16:46:46 -==> Parameters: 1(Long)
2019-05-23 16:46:46 -<==      Total: 49
2019-05-23 16:46:46 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-23 16:46:46 -==> Parameters: 138(Long)
2019-05-23 16:46:46 -<==      Total: 1
2019-05-23 16:46:46 -耗时 : 18
2019-05-23 16:46:46 -返回值 : index_v1
2019-05-23 16:46:46 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-23 16:46:46 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 18(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-23 16:46:46.274(Timestamp)
2019-05-23 16:46:46 -请求地址 : http://localhost:8081/main
2019-05-23 16:46:46 -HTTP METHOD : GET
2019-05-23 16:46:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-23 16:46:46 -参数 : []
2019-05-23 16:46:46 -耗时 : 0
2019-05-23 16:46:46 -返回值 : main
2019-05-23 16:46:46 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-23 16:46:46 -HTTP METHOD : GET
2019-05-23 16:46:46 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-23 16:46:46 -参数 : []
2019-05-23 16:46:46 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-23 16:46:46 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-23 16:46:46 -请求地址 : http://localhost:8081/main
2019-05-23 16:46:46 -HTTP METHOD : GET
2019-05-23 16:46:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-23 16:46:46 -参数 : []
2019-05-23 16:46:46 -耗时 : 0
2019-05-23 16:46:46 -返回值 : main
2019-05-23 16:46:46 -<==    Updates: 1
2019-05-23 16:46:46 -<==      Total: 0
2019-05-23 16:46:46 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-23 16:46:46 -==> Parameters: 1(Long), 0(String)
2019-05-23 16:46:46 -<==      Total: 1
2019-05-23 16:46:46 -耗时 : 182
2019-05-23 16:46:46 -返回值 : com.bootdo.common.utils.PageUtils@3715f59e
2019-05-23 16:46:50 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-05-23 16:46:50 -HTTP METHOD : GET
2019-05-23 16:46:50 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-05-23 16:46:50 -参数 : []
2019-05-23 16:46:50 -耗时 : 1
2019-05-23 16:46:50 -返回值 : /moneyLog/elecLog/elecLog
2019-05-23 16:46:51 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-05-23 16:46:51 -HTTP METHOD : GET
2019-05-23 16:46:51 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-23 16:46:51 -参数 : [elecType]
2019-05-23 16:46:51 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-05-23 16:46:51 -HTTP METHOD : GET
2019-05-23 16:46:51 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-23 16:46:51 -HTTP METHOD : GET
2019-05-23 16:46:51 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-05-23 16:46:51 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-23 16:46:51 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, elecDate=}]
2019-05-23 16:46:51 -参数 : [userType]
2019-05-23 16:46:51 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-05-23 16:46:51 -==> Parameters: 0(Integer), 10(Integer)
2019-05-23 16:46:51 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-23 16:46:51 -==> Parameters: userType(String)
2019-05-23 16:46:51 -<==      Total: 4
2019-05-23 16:46:51 -耗时 : 25
2019-05-23 16:46:51 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-23 16:46:51 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-23 16:46:51 -==> Parameters: elecType(String)
2019-05-23 16:46:51 -<==      Total: 11
2019-05-23 16:46:51 -耗时 : 40
2019-05-23 16:46:51 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-23 16:46:52 -<==      Total: 10
2019-05-23 16:46:52 -==>  Preparing: select count(*) from elec_log 
2019-05-23 16:46:52 -==> Parameters: 
2019-05-23 16:46:52 -<==      Total: 1
2019-05-23 16:46:52 -耗时 : 499
2019-05-23 16:46:52 -返回值 : com.bootdo.common.utils.PageUtils@7bb4da8c
2019-05-23 16:46:54 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-05-23 16:46:54 -HTTP METHOD : GET
2019-05-23 16:46:54 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-05-23 16:46:54 -参数 : []
2019-05-23 16:46:54 -耗时 : 1
2019-05-23 16:46:54 -返回值 : /moneyList/moneyList
2019-05-23 16:47:04 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-23 16:47:04 -HTTP METHOD : GET
2019-05-23 16:47:04 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-23 16:47:04 -参数 : []
2019-05-23 16:47:04 -耗时 : 1
2019-05-23 16:47:04 -返回值 : system/dept/deptTree
2019-05-23 16:47:05 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-23 16:47:05 -HTTP METHOD : GET
2019-05-23 16:47:05 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-23 16:47:05 -参数 : []
2019-05-23 16:47:05 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-23 16:47:05 -==> Parameters: 
2019-05-23 16:47:05 -<==      Total: 3
2019-05-23 16:47:05 -耗时 : 94
2019-05-23 16:47:05 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-23 16:47:08 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-05-23 16:47:08 -HTTP METHOD : POST
2019-05-23 16:47:08 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-05-23 16:47:08 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@1ae99a40]
2019-05-23 16:47:08 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-05-23 16:47:08 -==> Parameters: 2019-03(String), 2(String), 1-0001(String), 2019-03(String), 2(String), 1-0001(String), 2019-03(String), 2(String), 1-0001(String)
2019-05-23 16:47:08 -<==      Total: 3
2019-05-23 16:47:08 -耗时 : 257
2019-05-23 16:47:08 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@6d593b8d, com.bootdo.moneyList.damain.MoneyListDO@6adf2ecd, com.bootdo.moneyList.damain.MoneyListDO@7d0848f5]
2019-05-23 16:47:11 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-05-23 16:47:11 -HTTP METHOD : POST
2019-05-23 16:47:11 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-05-23 16:47:11 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@693435b2]
2019-05-23 16:47:11 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-05-23 16:47:11 -==> Parameters: 2019-03(String), 2(String), 1-0001(String), 2019-03(String), 2(String), 1-0001(String), 2019-03(String), 2(String), 1-0001(String)
2019-05-23 16:47:11 -<==      Total: 3
2019-05-23 16:47:11 -==>  Preparing: select el.start,el.end,el.hu,el.elec_amount,el.elec_cost,el.elec_price,el.elec_sum from elec el WHERE el.user_Id = ? and el.create_time = ? and el.user_org = ? and user_type != 'B' 
2019-05-23 16:47:11 -==> Parameters: 1-0001(String), 2019-03(String), 2(String)
2019-05-23 16:47:11 -<==      Total: 0
2019-05-23 16:47:11 -==>  Preparing: select he.heat_area, he.heat_cost, he.heat_price, he.heat_sum from heat he WHERE he.user_Id = ? and he.create_time = ? and he.user_org = ? and user_type != 'B' 
2019-05-23 16:47:11 -==> Parameters: 1-0001(String), 2019-03(String), 2(String)
2019-05-23 16:47:11 -<==      Total: 1
2019-05-23 16:47:11 -==>  Preparing: select wa.water_price,wa.water_sum from water wa WHERE wa.user_Id = ? and wa.create_time = ? and wa.user_org = ? and user_type != 'B' 
2019-05-23 16:47:11 -==> Parameters: 1-0001(String), 2019-03(String), 2(String)
2019-05-23 16:47:11 -<==      Total: 1
2019-05-23 16:47:11 -==>  Preparing: update water set water_sum = water_sum + ?,user_type=? WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-05-23 16:47:11 -==> Parameters: 1(String), A(String), 2019-03(String), 2(String), 1-0001(String)
2019-05-23 16:47:11 -<==    Updates: 1
2019-05-23 16:47:11 -==>  Preparing: insert into water_log ( `user_id`, `user_name`, `user_type`, `user_org`, `water_type`, `water_money`, `water_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-23 16:47:11 -==> Parameters: 1-0001(String), 姜海龙(String), A(String), 2(String), 1(String), 1(BigDecimal), 2019-05-23 16:47:11.653(Timestamp), 2019-03(String), 1(Long), 2019-05-23 16:47:11.653(Timestamp), 1(Long), null
2019-05-23 16:47:11 -<==    Updates: 1
2019-05-23 16:47:11 -==>  Preparing: insert into print ( `user_id`, `user_name`, `user_type`, `user_org`, `start`, `end`, `hu`, `elec_price`, `elec_amount`, `elec_cost`, `elec_sum`, `elec_money`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `heat_money`, `water_price`, `water_cost`, `water_sum`, `water_money`, `print_state`, `print_date`, `cost_poper`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-23 16:47:11 -==> Parameters: 1-0001(String), 姜海龙(String), A(String), 2(String), null, null, null, null, null, null, null, null, 3.50(BigDecimal), 100.00(BigDecimal), 100.00(BigDecimal), -73.35(BigDecimal), null, 6.30(BigDecimal), null, 25.00(BigDecimal), 1(BigDecimal), 0(String), 2019-05-23 16:47:11.664(Timestamp), null, 2019-03(String), 1(Long), 2019-05-23 16:47:11.664(Timestamp), 1(Long), null
2019-05-23 16:47:12 -<==    Updates: 1
2019-05-23 16:47:12 -耗时 : 359
2019-05-23 16:47:12 -返回值 : 27
2019-05-23 16:47:13 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-05-23 16:47:13 -HTTP METHOD : POST
2019-05-23 16:47:13 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-05-23 16:47:13 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@17775f09]
2019-05-23 16:47:13 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-05-23 16:47:13 -==> Parameters: 2019-03(String), 2(String), 1-0001(String), 2019-03(String), 2(String), 1-0001(String), 2019-03(String), 2(String), 1-0001(String)
2019-05-23 16:47:13 -<==      Total: 3
2019-05-23 16:47:13 -耗时 : 10
2019-05-23 16:47:13 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@80db5ff, com.bootdo.moneyList.damain.MoneyListDO@712a539c, com.bootdo.moneyList.damain.MoneyListDO@32d5567c]
2019-05-23 16:47:15 -请求地址 : http://localhost:8081/moneyList/moneyList/moneyPrint/27
2019-05-23 16:47:15 -HTTP METHOD : GET
2019-05-23 16:47:15 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.printEdit
2019-05-23 16:47:15 -参数 : [27, {}]
2019-05-23 16:47:15 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-05-23 16:47:15 -==> Parameters: 27(Long)
2019-05-23 16:47:15 -<==      Total: 1
2019-05-23 16:47:15 -耗时 : 13
2019-05-23 16:47:15 -返回值 : moneyList/moneyPrint
2019-05-23 16:47:29 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:20)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:23)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:424)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:232)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-23 16:59:31 -请求地址 : http://localhost:8081/index
2019-05-23 16:59:31 -HTTP METHOD : GET
2019-05-23 16:59:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-23 16:59:31 -参数 : [{}]
2019-05-23 16:59:31 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-23 16:59:31 -==> Parameters: 1(Long)
2019-05-23 16:59:32 -<==      Total: 49
2019-05-23 16:59:32 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-23 16:59:32 -==> Parameters: 138(Long)
2019-05-23 16:59:32 -<==      Total: 1
2019-05-23 16:59:32 -耗时 : 156
2019-05-23 16:59:32 -返回值 : index_v1
2019-05-23 16:59:32 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-23 16:59:32 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 157(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-23 16:59:32.124(Timestamp)
2019-05-23 16:59:32 -<==    Updates: 1
2019-05-23 16:59:32 -请求地址 : http://localhost:8081/main
2019-05-23 16:59:32 -HTTP METHOD : GET
2019-05-23 16:59:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-23 16:59:32 -参数 : []
2019-05-23 16:59:32 -耗时 : 1
2019-05-23 16:59:32 -返回值 : main
2019-05-23 16:59:32 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-23 16:59:32 -HTTP METHOD : GET
2019-05-23 16:59:32 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-23 16:59:32 -参数 : []
2019-05-23 16:59:32 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-23 16:59:32 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-23 16:59:32 -<==      Total: 0
2019-05-23 16:59:32 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-23 16:59:32 -==> Parameters: 1(Long), 0(String)
2019-05-23 16:59:32 -<==      Total: 1
2019-05-23 16:59:32 -耗时 : 13
2019-05-23 16:59:32 -返回值 : com.bootdo.common.utils.PageUtils@10c4a8f4
2019-05-23 16:59:32 -请求地址 : http://localhost:8081/main
2019-05-23 16:59:32 -HTTP METHOD : GET
2019-05-23 16:59:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-23 16:59:32 -参数 : []
2019-05-23 16:59:32 -耗时 : 1
2019-05-23 16:59:32 -返回值 : main
2019-05-23 16:59:34 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-23 16:59:34 -==> Parameters: 1(Long)
2019-05-23 16:59:34 -<==      Total: 93
2019-05-23 16:59:34 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-05-23 16:59:34 -HTTP METHOD : GET
2019-05-23 16:59:34 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-05-23 16:59:34 -参数 : []
2019-05-23 16:59:34 -耗时 : 0
2019-05-23 16:59:34 -返回值 : /moneyList/moneyList
2019-05-23 16:59:42 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-23 16:59:42 -HTTP METHOD : GET
2019-05-23 16:59:42 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-23 16:59:42 -参数 : []
2019-05-23 16:59:42 -耗时 : 1
2019-05-23 16:59:42 -返回值 : system/dept/deptTree
2019-05-23 16:59:42 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-23 16:59:42 -HTTP METHOD : GET
2019-05-23 16:59:42 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-23 16:59:42 -参数 : []
2019-05-23 16:59:42 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-23 16:59:42 -==> Parameters: 
2019-05-23 16:59:42 -<==      Total: 3
2019-05-23 16:59:42 -耗时 : 5
2019-05-23 16:59:42 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-23 16:59:46 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-05-23 16:59:46 -HTTP METHOD : POST
2019-05-23 16:59:46 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-05-23 16:59:46 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@56047d46]
2019-05-23 16:59:46 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-05-23 16:59:46 -==> Parameters: 2019-03(String), 2(String), 1-0001(String), 2019-03(String), 2(String), 1-0001(String), 2019-03(String), 2(String), 1-0001(String)
2019-05-23 16:59:46 -<==      Total: 3
2019-05-23 16:59:46 -耗时 : 7
2019-05-23 16:59:46 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@7e59f238, com.bootdo.moneyList.damain.MoneyListDO@4bef660f, com.bootdo.moneyList.damain.MoneyListDO@3e74dc79]
2019-05-23 16:59:50 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-05-23 16:59:50 -HTTP METHOD : POST
2019-05-23 16:59:50 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-05-23 16:59:50 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@73c21aa5]
2019-05-23 16:59:50 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-05-23 16:59:50 -==> Parameters: 2019-03(String), 2(String), 1-0001(String), 2019-03(String), 2(String), 1-0001(String), 2019-03(String), 2(String), 1-0001(String)
2019-05-23 16:59:50 -<==      Total: 3
2019-05-23 16:59:50 -==>  Preparing: select el.start,el.end,el.hu,el.elec_amount,el.elec_cost,el.elec_price,el.elec_sum from elec el WHERE el.user_Id = ? and el.create_time = ? and el.user_org = ? and user_type != 'B' 
2019-05-23 16:59:50 -==> Parameters: 1-0001(String), 2019-03(String), 2(String)
2019-05-23 16:59:50 -<==      Total: 0
2019-05-23 16:59:50 -==>  Preparing: select he.heat_area, he.heat_cost, he.heat_price, he.heat_sum from heat he WHERE he.user_Id = ? and he.create_time = ? and he.user_org = ? and user_type != 'B' 
2019-05-23 16:59:50 -==> Parameters: 1-0001(String), 2019-03(String), 2(String)
2019-05-23 16:59:50 -<==      Total: 1
2019-05-23 16:59:50 -==>  Preparing: select wa.water_price,wa.water_sum from water wa WHERE wa.user_Id = ? and wa.create_time = ? and wa.user_org = ? and user_type != 'B' 
2019-05-23 16:59:50 -==> Parameters: 1-0001(String), 2019-03(String), 2(String)
2019-05-23 16:59:50 -<==      Total: 1
2019-05-23 16:59:50 -==>  Preparing: update water set water_sum = water_sum + ?,user_type=? WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-05-23 16:59:50 -==> Parameters: 1(String), A(String), 2019-03(String), 2(String), 1-0001(String)
2019-05-23 16:59:50 -<==    Updates: 1
2019-05-23 16:59:50 -==>  Preparing: insert into water_log ( `user_id`, `user_name`, `user_type`, `user_org`, `water_type`, `water_money`, `water_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-23 16:59:50 -==> Parameters: 1-0001(String), 姜海龙(String), A(String), 2(String), 1(String), 1(BigDecimal), 2019-05-23 16:59:50.523(Timestamp), 2019-03(String), 1(Long), 2019-05-23 16:59:50.523(Timestamp), 1(Long), null
2019-05-23 16:59:50 -<==    Updates: 1
2019-05-23 16:59:50 -==>  Preparing: insert into print ( `user_id`, `user_name`, `user_type`, `user_org`, `start`, `end`, `hu`, `elec_price`, `elec_amount`, `elec_cost`, `elec_sum`, `elec_money`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `heat_money`, `water_price`, `water_cost`, `water_sum`, `water_money`, `print_state`, `print_date`, `cost_poper`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-23 16:59:50 -==> Parameters: 1-0001(String), 姜海龙(String), A(String), 2(String), null, null, null, null, null, null, null, null, 3.50(BigDecimal), 100.00(BigDecimal), 100.00(BigDecimal), -73.35(BigDecimal), null, 6.30(BigDecimal), null, 26.00(BigDecimal), 1(BigDecimal), 0(String), 2019-05-23 16:59:50.535(Timestamp), null, 2019-03(String), 1(Long), 2019-05-23 16:59:50.535(Timestamp), 1(Long), null
2019-05-23 16:59:50 -<==    Updates: 1
2019-05-23 16:59:50 -耗时 : 151
2019-05-23 16:59:50 -返回值 : 28
2019-05-23 16:59:51 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-05-23 16:59:51 -HTTP METHOD : POST
2019-05-23 16:59:51 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-05-23 16:59:51 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@2753179]
2019-05-23 16:59:51 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-05-23 16:59:51 -==> Parameters: 2019-03(String), 2(String), 1-0001(String), 2019-03(String), 2(String), 1-0001(String), 2019-03(String), 2(String), 1-0001(String)
2019-05-23 16:59:51 -<==      Total: 3
2019-05-23 16:59:51 -耗时 : 9
2019-05-23 16:59:51 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@57f26def, com.bootdo.moneyList.damain.MoneyListDO@48c7a514, com.bootdo.moneyList.damain.MoneyListDO@6392bb8c]
2019-05-23 16:59:54 -请求地址 : http://localhost:8081/moneyList/moneyList/moneyPrint/28
2019-05-23 16:59:54 -HTTP METHOD : GET
2019-05-23 16:59:54 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.printEdit
2019-05-23 16:59:54 -参数 : [28, {}]
2019-05-23 16:59:54 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-05-23 16:59:54 -==> Parameters: 28(Long)
2019-05-23 16:59:54 -<==      Total: 1
2019-05-23 16:59:54 -耗时 : 7
2019-05-23 16:59:54 -返回值 : moneyList/moneyPrint
2019-05-23 16:59:54 -[THYMELEAF][http-nio-8081-exec-10] Exception processing template "moneyList/moneyPrint": An error happened during template parsing (template: "class path resource [templates/moneyList/moneyPrint.html]")
org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/moneyList/moneyPrint.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:354)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:187)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1325)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1069)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.attoparser.ParseException: Could not parse as expression: "${print.waterMoney}==null?'':${print.waterMoney}+${print.heatMoney}==null?'':${print.heatMoney}+${print.elecMoney}==null?'':${print.elecMoney}" (template: "moneyList/moneyPrint" - line 60, col 58)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 69 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Could not parse as expression: "${print.waterMoney}==null?'':${print.waterMoney}+${print.heatMoney}==null?'':${print.heatMoney}+${print.elecMoney}==null?'':${print.elecMoney}" (template: "moneyList/moneyPrint" - line 60, col 58)
	at org.thymeleaf.standard.expression.StandardExpressionParser.parseExpression(StandardExpressionParser.java:131)
	at org.thymeleaf.standard.expression.StandardExpressionParser.parseExpression(StandardExpressionParser.java:62)
	at org.thymeleaf.standard.expression.StandardExpressionParser.parseExpression(StandardExpressionParser.java:44)
	at org.thymeleaf.engine.EngineEventUtils.parseAttributeExpression(EngineEventUtils.java:220)
	at org.thymeleaf.engine.EngineEventUtils.computeAttributeExpression(EngineEventUtils.java:207)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:103)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleOpenElementEnd(TemplateHandlerAdapterMarkupHandler.java:304)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:278)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleOpenElementEnd(OutputExpressionInlinePreProcessorHandler.java:186)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:124)
	at org.attoparser.HtmlElement.handleOpenElementEnd(HtmlElement.java:109)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 71 common frames omitted
2019-05-23 16:59:54 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/moneyList/moneyPrint.html]")] with root cause
org.thymeleaf.exceptions.TemplateProcessingException: Could not parse as expression: "${print.waterMoney}==null?'':${print.waterMoney}+${print.heatMoney}==null?'':${print.heatMoney}+${print.elecMoney}==null?'':${print.elecMoney}" (template: "moneyList/moneyPrint" - line 60, col 58)
	at org.thymeleaf.standard.expression.StandardExpressionParser.parseExpression(StandardExpressionParser.java:131)
	at org.thymeleaf.standard.expression.StandardExpressionParser.parseExpression(StandardExpressionParser.java:62)
	at org.thymeleaf.standard.expression.StandardExpressionParser.parseExpression(StandardExpressionParser.java:44)
	at org.thymeleaf.engine.EngineEventUtils.parseAttributeExpression(EngineEventUtils.java:220)
	at org.thymeleaf.engine.EngineEventUtils.computeAttributeExpression(EngineEventUtils.java:207)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:103)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleOpenElementEnd(TemplateHandlerAdapterMarkupHandler.java:304)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:278)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleOpenElementEnd(OutputExpressionInlinePreProcessorHandler.java:186)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:124)
	at org.attoparser.HtmlElement.handleOpenElementEnd(HtmlElement.java:109)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:354)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:187)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1325)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1069)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-23 17:01:37 -请求地址 : http://localhost:8081/index
2019-05-23 17:01:37 -HTTP METHOD : GET
2019-05-23 17:01:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-23 17:01:37 -参数 : [{}]
2019-05-23 17:01:37 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-23 17:01:37 -==> Parameters: 1(Long)
2019-05-23 17:01:37 -<==      Total: 49
2019-05-23 17:01:37 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-23 17:01:37 -==> Parameters: 138(Long)
2019-05-23 17:01:37 -<==      Total: 1
2019-05-23 17:01:37 -耗时 : 33
2019-05-23 17:01:37 -返回值 : index_v1
2019-05-23 17:01:37 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-23 17:01:37 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 33(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-23 17:01:37.198(Timestamp)
2019-05-23 17:01:37 -<==    Updates: 1
2019-05-23 17:01:37 -请求地址 : http://localhost:8081/main
2019-05-23 17:01:37 -HTTP METHOD : GET
2019-05-23 17:01:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-23 17:01:37 -参数 : []
2019-05-23 17:01:37 -耗时 : 0
2019-05-23 17:01:37 -返回值 : main
2019-05-23 17:01:37 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-23 17:01:37 -HTTP METHOD : GET
2019-05-23 17:01:37 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-23 17:01:37 -参数 : []
2019-05-23 17:01:37 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-23 17:01:37 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-23 17:01:37 -<==      Total: 0
2019-05-23 17:01:37 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-23 17:01:37 -==> Parameters: 1(Long), 0(String)
2019-05-23 17:01:37 -<==      Total: 1
2019-05-23 17:01:37 -耗时 : 7
2019-05-23 17:01:37 -返回值 : com.bootdo.common.utils.PageUtils@1e2988dd
2019-05-23 17:01:37 -请求地址 : http://localhost:8081/main
2019-05-23 17:01:37 -HTTP METHOD : GET
2019-05-23 17:01:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-23 17:01:37 -参数 : []
2019-05-23 17:01:37 -耗时 : 4
2019-05-23 17:01:37 -返回值 : main
2019-05-23 17:01:39 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-05-23 17:01:39 -HTTP METHOD : GET
2019-05-23 17:01:39 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-05-23 17:01:39 -参数 : []
2019-05-23 17:01:39 -耗时 : 0
2019-05-23 17:01:39 -返回值 : /moneyList/moneyList
2019-05-23 17:01:45 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-23 17:01:45 -HTTP METHOD : GET
2019-05-23 17:01:45 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-23 17:01:45 -参数 : []
2019-05-23 17:01:45 -耗时 : 1
2019-05-23 17:01:45 -返回值 : system/dept/deptTree
2019-05-23 17:01:45 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-23 17:01:45 -HTTP METHOD : GET
2019-05-23 17:01:45 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-23 17:01:45 -参数 : []
2019-05-23 17:01:45 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-23 17:01:45 -==> Parameters: 
2019-05-23 17:01:45 -<==      Total: 3
2019-05-23 17:01:45 -耗时 : 3
2019-05-23 17:01:45 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-23 17:01:48 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-05-23 17:01:48 -HTTP METHOD : POST
2019-05-23 17:01:48 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-05-23 17:01:48 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@6e64fc35]
2019-05-23 17:01:48 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-05-23 17:01:48 -==> Parameters: 2019-03(String), 2(String), 1-0001(String), 2019-03(String), 2(String), 1-0001(String), 2019-03(String), 2(String), 1-0001(String)
2019-05-23 17:01:48 -<==      Total: 3
2019-05-23 17:01:48 -耗时 : 5
2019-05-23 17:01:48 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@c9f10af, com.bootdo.moneyList.damain.MoneyListDO@70ac4b63, com.bootdo.moneyList.damain.MoneyListDO@39608417]
2019-05-23 17:01:52 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-05-23 17:01:52 -HTTP METHOD : POST
2019-05-23 17:01:52 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-05-23 17:01:52 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@1353a924]
2019-05-23 17:01:52 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-05-23 17:01:52 -==> Parameters: 2019-03(String), 2(String), 1-0001(String), 2019-03(String), 2(String), 1-0001(String), 2019-03(String), 2(String), 1-0001(String)
2019-05-23 17:01:52 -<==      Total: 3
2019-05-23 17:01:52 -==>  Preparing: select el.start,el.end,el.hu,el.elec_amount,el.elec_cost,el.elec_price,el.elec_sum from elec el WHERE el.user_Id = ? and el.create_time = ? and el.user_org = ? and user_type != 'B' 
2019-05-23 17:01:52 -==> Parameters: 1-0001(String), 2019-03(String), 2(String)
2019-05-23 17:01:52 -<==      Total: 0
2019-05-23 17:01:52 -==>  Preparing: select he.heat_area, he.heat_cost, he.heat_price, he.heat_sum from heat he WHERE he.user_Id = ? and he.create_time = ? and he.user_org = ? and user_type != 'B' 
2019-05-23 17:01:52 -==> Parameters: 1-0001(String), 2019-03(String), 2(String)
2019-05-23 17:01:52 -<==      Total: 1
2019-05-23 17:01:52 -==>  Preparing: select wa.water_price,wa.water_sum from water wa WHERE wa.user_Id = ? and wa.create_time = ? and wa.user_org = ? and user_type != 'B' 
2019-05-23 17:01:52 -==> Parameters: 1-0001(String), 2019-03(String), 2(String)
2019-05-23 17:01:52 -<==      Total: 1
2019-05-23 17:01:52 -==>  Preparing: update water set water_sum = water_sum + ?,user_type=? WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-05-23 17:01:52 -==> Parameters: 1(String), A(String), 2019-03(String), 2(String), 1-0001(String)
2019-05-23 17:01:52 -<==    Updates: 1
2019-05-23 17:01:52 -==>  Preparing: insert into water_log ( `user_id`, `user_name`, `user_type`, `user_org`, `water_type`, `water_money`, `water_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-23 17:01:52 -==> Parameters: 1-0001(String), 姜海龙(String), A(String), 2(String), 1(String), 1(BigDecimal), 2019-05-23 17:01:52.823(Timestamp), 2019-03(String), 1(Long), 2019-05-23 17:01:52.823(Timestamp), 1(Long), null
2019-05-23 17:01:53 -<==    Updates: 1
2019-05-23 17:01:53 -==>  Preparing: insert into print ( `user_id`, `user_name`, `user_type`, `user_org`, `start`, `end`, `hu`, `elec_price`, `elec_amount`, `elec_cost`, `elec_sum`, `elec_money`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `heat_money`, `water_price`, `water_cost`, `water_sum`, `water_money`, `print_state`, `print_date`, `cost_poper`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-23 17:01:53 -==> Parameters: 1-0001(String), 姜海龙(String), A(String), 2(String), null, null, null, null, null, null, null, null, 3.50(BigDecimal), 100.00(BigDecimal), 100.00(BigDecimal), -73.35(BigDecimal), null, 6.30(BigDecimal), null, 27.00(BigDecimal), 1(BigDecimal), 0(String), 2019-05-23 17:01:52.875(Timestamp), null, 2019-03(String), 1(Long), 2019-05-23 17:01:52.875(Timestamp), 1(Long), null
2019-05-23 17:01:53 -<==    Updates: 1
2019-05-23 17:01:53 -耗时 : 285
2019-05-23 17:01:53 -返回值 : 29
2019-05-23 17:01:54 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-05-23 17:01:54 -HTTP METHOD : POST
2019-05-23 17:01:54 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-05-23 17:01:54 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@39c13d48]
2019-05-23 17:01:54 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-05-23 17:01:54 -==> Parameters: 2019-03(String), 2(String), 1-0001(String), 2019-03(String), 2(String), 1-0001(String), 2019-03(String), 2(String), 1-0001(String)
2019-05-23 17:01:54 -<==      Total: 3
2019-05-23 17:01:54 -耗时 : 6
2019-05-23 17:01:54 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@7664c790, com.bootdo.moneyList.damain.MoneyListDO@503e01fb, com.bootdo.moneyList.damain.MoneyListDO@60a55dc9]
2019-05-23 17:01:56 -请求地址 : http://localhost:8081/moneyList/moneyList/moneyPrint/29
2019-05-23 17:01:56 -HTTP METHOD : GET
2019-05-23 17:01:56 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.printEdit
2019-05-23 17:01:56 -参数 : [29, {}]
2019-05-23 17:01:56 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-05-23 17:01:56 -==> Parameters: 29(Long)
2019-05-23 17:01:56 -<==      Total: 1
2019-05-23 17:01:56 -耗时 : 6
2019-05-23 17:01:56 -返回值 : moneyList/moneyPrint
2019-05-23 17:21:58 -Starting BootdoApplication on PC-201905091110 with PID 40404 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-23 17:21:58 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-23 17:21:58 -The following profiles are active: dev
2019-05-23 17:21:58 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@70e9c95d: startup date [Thu May 23 17:21:58 CST 2019]; root of context hierarchy
2019-05-23 17:22:07 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-23 17:22:15 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$14971f41] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 17:22:16 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$6f04de8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 17:22:17 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 17:22:18 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 17:22:18 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 17:22:18 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-23 17:22:18 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-23 17:22:18 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 17:22:18 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 17:22:18 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 17:22:18 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 17:22:20 -Tomcat initialized with port(s): 8081 (http)
2019-05-23 17:22:20 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-23 17:22:20 -Starting service [Tomcat]
2019-05-23 17:22:20 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-23 17:22:20 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-23 17:22:21 -Initializing Spring embedded WebApplicationContext
2019-05-23 17:22:21 -Root WebApplicationContext: initialization completed in 22787 ms
2019-05-23 17:22:22 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-23 17:22:22 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-23 17:22:22 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-23 17:22:22 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-23 17:22:22 -Filter xssFilter was not registered (disabled)
2019-05-23 17:22:22 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-23 17:22:22 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-23 17:22:22 -Servlet statViewServlet mapped to [/druid/*]
2019-05-23 17:22:22 -Servlet dispatcherServlet mapped to [/]
2019-05-23 17:22:28 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@70e9c95d: startup date [Thu May 23 17:21:58 CST 2019]; root of context hierarchy
2019-05-23 17:22:29 -Using default implementation for ThreadExecutor
2019-05-23 17:22:29 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-23 17:22:29 -Quartz Scheduler v.2.2.1 created.
2019-05-23 17:22:29 -RAMJobStore initialized.
2019-05-23 17:22:29 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-23 17:22:29 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-23 17:22:29 -Quartz scheduler version: 2.2.1
2019-05-23 17:22:29 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@25214797
2019-05-23 17:22:30 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-23 17:22:30 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-23 17:22:34 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-23 17:22:34 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-23 17:22:34 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 17:22:34 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-23 17:22:34 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 17:22:34 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-23 17:22:34 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-23 17:22:34 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-23 17:22:34 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-23 17:22:34 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-23 17:22:34 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-23 17:22:34 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 17:22:34 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-23 17:22:34 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 17:22:34 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-23 17:22:34 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-23 17:22:34 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 17:22:34 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-23 17:22:34 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-23 17:22:34 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-23 17:22:34 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 17:22:34 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-23 17:22:34 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-23 17:22:34 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 17:22:34 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-23 17:22:34 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-23 17:22:34 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 17:22:34 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 17:22:34 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-23 17:22:34 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-23 17:22:34 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-23 17:22:34 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-23 17:22:34 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 17:22:34 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 17:22:34 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-23 17:22:34 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-23 17:22:34 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-23 17:22:34 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-23 17:22:34 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-23 17:22:34 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-23 17:22:34 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 17:22:34 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-23 17:22:34 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-23 17:22:34 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-23 17:22:34 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 17:22:34 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-23 17:22:34 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-23 17:22:34 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-23 17:22:34 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-23 17:22:34 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-23 17:22:34 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-23 17:22:34 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 17:22:34 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-23 17:22:34 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-23 17:22:34 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-23 17:22:34 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 17:22:34 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-23 17:22:34 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 17:22:34 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-23 17:22:34 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-23 17:22:34 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-23 17:22:34 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-23 17:22:34 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-23 17:22:34 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-23 17:22:34 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-23 17:22:34 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-23 17:22:34 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-23 17:22:34 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 17:22:34 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-23 17:22:34 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-23 17:22:34 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 17:22:34 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-23 17:22:34 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-23 17:22:34 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-23 17:22:34 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-23 17:22:34 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 17:22:34 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-23 17:22:34 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-23 17:22:34 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-23 17:22:34 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-23 17:22:34 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-23 17:22:34 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-23 17:22:34 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-23 17:22:34 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-23 17:22:34 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-23 17:22:34 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-23 17:22:34 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-23 17:22:34 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 17:22:34 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-23 17:22:34 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-23 17:22:34 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-23 17:22:34 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-23 17:22:34 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-23 17:22:34 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-23 17:22:34 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-23 17:22:34 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-23 17:22:34 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-23 17:22:34 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 17:22:34 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-23 17:22:34 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-23 17:22:34 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 17:22:34 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-23 17:22:34 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-23 17:22:34 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-23 17:22:34 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-23 17:22:34 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-23 17:22:34 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-23 17:22:34 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-23 17:22:34 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 17:22:34 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-23 17:22:34 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-23 17:22:34 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-23 17:22:34 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-23 17:22:34 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-23 17:22:34 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-23 17:22:34 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-23 17:22:34 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-23 17:22:34 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-23 17:22:34 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-23 17:22:34 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-23 17:22:34 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 17:22:34 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-23 17:22:34 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 17:22:34 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-23 17:22:34 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-23 17:22:34 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-23 17:22:34 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-23 17:22:34 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-23 17:22:34 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-23 17:22:34 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-23 17:22:34 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 17:22:34 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-23 17:22:34 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-23 17:22:34 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-23 17:22:34 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-23 17:22:34 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-23 17:22:34 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-23 17:22:34 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 17:22:34 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-23 17:22:34 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-23 17:22:34 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-23 17:22:34 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 17:22:34 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-23 17:22:34 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-23 17:22:34 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-23 17:22:34 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-23 17:22:34 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 17:22:34 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-23 17:22:34 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-23 17:22:34 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-23 17:22:34 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 17:22:34 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-23 17:22:34 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-23 17:22:34 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-23 17:22:34 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-23 17:22:34 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 17:22:34 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-23 17:22:34 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-23 17:22:34 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-23 17:22:34 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 17:22:34 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-23 17:22:34 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-23 17:22:34 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-23 17:22:34 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-23 17:22:34 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-23 17:22:34 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 17:22:34 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-23 17:22:34 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-23 17:22:34 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-23 17:22:34 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-23 17:22:34 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 17:22:34 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 17:22:34 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-23 17:22:34 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-23 17:22:34 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-05-23 17:22:34 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-23 17:22:34 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 17:22:34 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-23 17:22:34 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-23 17:22:34 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-23 17:22:34 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-23 17:22:34 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 17:22:34 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 17:22:34 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-23 17:22:34 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-23 17:22:34 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-23 17:22:34 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-23 17:22:34 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-23 17:22:34 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-23 17:22:34 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-23 17:22:34 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-23 17:22:34 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-23 17:22:34 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 17:22:34 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-23 17:22:34 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-23 17:22:34 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-23 17:22:34 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-23 17:22:34 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-23 17:22:34 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-23 17:22:34 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-23 17:22:34 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-23 17:22:34 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-23 17:22:34 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-23 17:22:34 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 17:22:34 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-23 17:22:34 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-23 17:22:34 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-23 17:22:34 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-23 17:22:34 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-23 17:22:34 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-23 17:22:34 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-23 17:22:34 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-23 17:22:34 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-23 17:22:34 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-23 17:22:34 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-23 17:22:34 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-23 17:22:34 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 17:22:34 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-23 17:22:34 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-23 17:22:34 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-23 17:22:34 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-23 17:22:34 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 17:22:34 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-23 17:22:34 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-23 17:22:34 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-23 17:22:34 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 17:22:34 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-23 17:22:34 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-23 17:22:34 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-23 17:22:34 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-23 17:22:34 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-23 17:22:34 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-23 17:22:34 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-23 17:22:34 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-23 17:22:34 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-23 17:22:34 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-23 17:22:34 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-23 17:22:34 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-23 17:22:34 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-23 17:22:34 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-23 17:22:34 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-23 17:22:34 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-23 17:22:34 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-23 17:22:34 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 17:22:34 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-23 17:22:34 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-23 17:22:34 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 17:22:34 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-23 17:22:34 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-23 17:22:34 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-23 17:22:34 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-23 17:22:34 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-23 17:22:34 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-23 17:22:34 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-23 17:22:34 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-23 17:22:34 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 17:22:34 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-23 17:22:34 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 17:22:34 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-23 17:22:34 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-23 17:22:34 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-23 17:22:34 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-23 17:22:34 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-23 17:22:34 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-23 17:22:34 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-23 17:22:34 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-23 17:22:34 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-23 17:22:35 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-23 17:22:35 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-23 17:22:35 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-23 17:22:36 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-23 17:22:36 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@70e9c95d: startup date [Thu May 23 17:21:58 CST 2019]; root of context hierarchy
2019-05-23 17:22:36 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-23 17:22:36 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-23 17:22:36 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-23 17:22:37 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-23 17:22:37 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-23 17:22:41 -Registering beans for JMX exposure on startup
2019-05-23 17:22:41 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-23 17:22:41 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-23 17:22:41 -Starting beans in phase 2147483647
2019-05-23 17:22:41 -Context refreshed
2019-05-23 17:22:41 -Found 1 custom documentation plugin(s)
2019-05-23 17:22:41 -Scanning for api listing references
2019-05-23 17:22:42 -Generating unique operation named: getCountDUsingPOST_1
2019-05-23 17:22:42 -Generating unique operation named: removeUsingPOST_1
2019-05-23 17:22:42 -Generating unique operation named: addUsingGET_1
2019-05-23 17:22:42 -Generating unique operation named: editUsingGET_1
2019-05-23 17:22:42 -Generating unique operation named: listUsingGET_1
2019-05-23 17:22:42 -Generating unique operation named: removeUsingPOST_2
2019-05-23 17:22:42 -Generating unique operation named: removeUsingPOST_3
2019-05-23 17:22:42 -Generating unique operation named: saveUsingPOST_1
2019-05-23 17:22:42 -Generating unique operation named: updateUsingGET_1
2019-05-23 17:22:42 -Generating unique operation named: updateUsingHEAD_1
2019-05-23 17:22:42 -Generating unique operation named: updateUsingPOST_1
2019-05-23 17:22:42 -Generating unique operation named: updateUsingPUT_1
2019-05-23 17:22:42 -Generating unique operation named: updateUsingPATCH_1
2019-05-23 17:22:42 -Generating unique operation named: updateUsingDELETE_1
2019-05-23 17:22:42 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-23 17:22:42 -Generating unique operation named: updateUsingTRACE_1
2019-05-23 17:22:42 -Generating unique operation named: addUsingGET_2
2019-05-23 17:22:42 -Generating unique operation named: editUsingGET_2
2019-05-23 17:22:42 -Generating unique operation named: listUsingGET_2
2019-05-23 17:22:42 -Generating unique operation named: removeUsingPOST_4
2019-05-23 17:22:42 -Generating unique operation named: removeUsingPOST_5
2019-05-23 17:22:42 -Generating unique operation named: saveUsingPOST_2
2019-05-23 17:22:42 -Generating unique operation named: updateUsingPOST_2
2019-05-23 17:22:43 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-23 17:22:43 -Generating unique operation named: addUsingGET_3
2019-05-23 17:22:43 -Generating unique operation named: editUsingGET_3
2019-05-23 17:22:43 -Generating unique operation named: listUsingGET_3
2019-05-23 17:22:43 -Generating unique operation named: removeUsingPOST_6
2019-05-23 17:22:43 -Generating unique operation named: removeUsingPOST_7
2019-05-23 17:22:43 -Generating unique operation named: saveUsingPOST_3
2019-05-23 17:22:43 -Generating unique operation named: updateUsingGET_2
2019-05-23 17:22:43 -Generating unique operation named: updateUsingHEAD_2
2019-05-23 17:22:43 -Generating unique operation named: updateUsingPOST_3
2019-05-23 17:22:43 -Generating unique operation named: updateUsingPUT_2
2019-05-23 17:22:43 -Generating unique operation named: updateUsingPATCH_2
2019-05-23 17:22:43 -Generating unique operation named: updateUsingDELETE_2
2019-05-23 17:22:43 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-23 17:22:43 -Generating unique operation named: updateUsingTRACE_2
2019-05-23 17:22:43 -Generating unique operation named: addUsingGET_4
2019-05-23 17:22:43 -Generating unique operation named: editUsingGET_4
2019-05-23 17:22:43 -Generating unique operation named: listUsingGET_4
2019-05-23 17:22:43 -Generating unique operation named: removeUsingPOST_8
2019-05-23 17:22:43 -Generating unique operation named: removeUsingPOST_9
2019-05-23 17:22:43 -Generating unique operation named: saveUsingPOST_4
2019-05-23 17:22:43 -Generating unique operation named: updateUsingGET_3
2019-05-23 17:22:43 -Generating unique operation named: updateUsingHEAD_3
2019-05-23 17:22:43 -Generating unique operation named: updateUsingPOST_4
2019-05-23 17:22:43 -Generating unique operation named: updateUsingPUT_3
2019-05-23 17:22:43 -Generating unique operation named: updateUsingPATCH_3
2019-05-23 17:22:43 -Generating unique operation named: updateUsingDELETE_3
2019-05-23 17:22:43 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-23 17:22:43 -Generating unique operation named: updateUsingTRACE_3
2019-05-23 17:22:43 -Generating unique operation named: ElecUsingGET_1
2019-05-23 17:22:43 -Generating unique operation named: addUsingGET_5
2019-05-23 17:22:43 -Generating unique operation named: editUsingGET_5
2019-05-23 17:22:43 -Generating unique operation named: listUsingGET_5
2019-05-23 17:22:43 -Generating unique operation named: removeUsingPOST_10
2019-05-23 17:22:43 -Generating unique operation named: removeUsingPOST_11
2019-05-23 17:22:43 -Generating unique operation named: saveUsingPOST_5
2019-05-23 17:22:43 -Generating unique operation named: updateUsingGET_4
2019-05-23 17:22:43 -Generating unique operation named: updateUsingHEAD_4
2019-05-23 17:22:43 -Generating unique operation named: updateUsingPOST_5
2019-05-23 17:22:43 -Generating unique operation named: updateUsingPUT_4
2019-05-23 17:22:43 -Generating unique operation named: updateUsingPATCH_4
2019-05-23 17:22:43 -Generating unique operation named: updateUsingDELETE_4
2019-05-23 17:22:43 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-23 17:22:43 -Generating unique operation named: updateUsingTRACE_4
2019-05-23 17:22:43 -Generating unique operation named: editUsingGET_6
2019-05-23 17:22:43 -Generating unique operation named: listUsingGET_6
2019-05-23 17:22:43 -Generating unique operation named: updateUsingPOST_6
2019-05-23 17:22:43 -Generating unique operation named: addUsingGET_6
2019-05-23 17:22:43 -Generating unique operation named: editUsingGET_7
2019-05-23 17:22:43 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-23 17:22:43 -Generating unique operation named: listUsingGET_7
2019-05-23 17:22:43 -Generating unique operation named: removeUsingPOST_12
2019-05-23 17:22:43 -Generating unique operation named: removeUsingPOST_13
2019-05-23 17:22:43 -Generating unique operation named: saveUsingPOST_6
2019-05-23 17:22:43 -Generating unique operation named: updateUsingGET_5
2019-05-23 17:22:43 -Generating unique operation named: updateUsingHEAD_5
2019-05-23 17:22:43 -Generating unique operation named: updateUsingPOST_7
2019-05-23 17:22:43 -Generating unique operation named: updateUsingPUT_5
2019-05-23 17:22:43 -Generating unique operation named: updateUsingPATCH_5
2019-05-23 17:22:43 -Generating unique operation named: updateUsingDELETE_5
2019-05-23 17:22:43 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-23 17:22:43 -Generating unique operation named: updateUsingTRACE_5
2019-05-23 17:22:43 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-23 17:22:43 -Generating unique operation named: addUsingGET_7
2019-05-23 17:22:43 -Generating unique operation named: editUsingGET_8
2019-05-23 17:22:43 -Generating unique operation named: listUsingGET_8
2019-05-23 17:22:43 -Generating unique operation named: removeUsingPOST_14
2019-05-23 17:22:43 -Generating unique operation named: removeUsingPOST_15
2019-05-23 17:22:43 -Generating unique operation named: saveUsingPOST_7
2019-05-23 17:22:43 -Generating unique operation named: updateUsingGET_6
2019-05-23 17:22:43 -Generating unique operation named: updateUsingHEAD_6
2019-05-23 17:22:43 -Generating unique operation named: updateUsingPOST_8
2019-05-23 17:22:43 -Generating unique operation named: updateUsingPUT_6
2019-05-23 17:22:43 -Generating unique operation named: updateUsingPATCH_6
2019-05-23 17:22:43 -Generating unique operation named: updateUsingDELETE_6
2019-05-23 17:22:43 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-23 17:22:43 -Generating unique operation named: updateUsingTRACE_6
2019-05-23 17:22:43 -Generating unique operation named: addUsingGET_8
2019-05-23 17:22:43 -Generating unique operation named: editUsingGET_9
2019-05-23 17:22:43 -Generating unique operation named: listUsingGET_9
2019-05-23 17:22:43 -Generating unique operation named: removeUsingPOST_16
2019-05-23 17:22:43 -Generating unique operation named: removeUsingPOST_17
2019-05-23 17:22:43 -Generating unique operation named: saveUsingPOST_8
2019-05-23 17:22:43 -Generating unique operation named: updateUsingGET_7
2019-05-23 17:22:43 -Generating unique operation named: updateUsingHEAD_7
2019-05-23 17:22:43 -Generating unique operation named: updateUsingPOST_9
2019-05-23 17:22:43 -Generating unique operation named: updateUsingPUT_7
2019-05-23 17:22:43 -Generating unique operation named: updateUsingPATCH_7
2019-05-23 17:22:43 -Generating unique operation named: updateUsingDELETE_7
2019-05-23 17:22:43 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-23 17:22:43 -Generating unique operation named: updateUsingTRACE_7
2019-05-23 17:22:43 -Generating unique operation named: addUsingGET_9
2019-05-23 17:22:43 -Generating unique operation named: editUsingGET_10
2019-05-23 17:22:43 -Generating unique operation named: infoUsingGET_1
2019-05-23 17:22:43 -Generating unique operation named: infoUsingHEAD_1
2019-05-23 17:22:43 -Generating unique operation named: infoUsingPOST_1
2019-05-23 17:22:43 -Generating unique operation named: infoUsingPUT_1
2019-05-23 17:22:43 -Generating unique operation named: infoUsingPATCH_1
2019-05-23 17:22:43 -Generating unique operation named: infoUsingDELETE_1
2019-05-23 17:22:43 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-23 17:22:43 -Generating unique operation named: infoUsingTRACE_1
2019-05-23 17:22:43 -Generating unique operation named: listUsingGET_10
2019-05-23 17:22:43 -Generating unique operation named: removeUsingPOST_18
2019-05-23 17:22:43 -Generating unique operation named: removeUsingPOST_19
2019-05-23 17:22:43 -Generating unique operation named: saveUsingPOST_9
2019-05-23 17:22:43 -Generating unique operation named: updateUsingPOST_10
2019-05-23 17:22:44 -Generating unique operation named: listUsingGET_11
2019-05-23 17:22:44 -Generating unique operation named: removeUsingPOST_20
2019-05-23 17:22:44 -Generating unique operation named: welcomeUsingGET_1
2019-05-23 17:22:44 -Generating unique operation named: addUsingGET_10
2019-05-23 17:22:44 -Generating unique operation named: editUsingGET_11
2019-05-23 17:22:44 -Generating unique operation named: listUsingGET_12
2019-05-23 17:22:44 -Generating unique operation named: removeUsingPOST_21
2019-05-23 17:22:44 -Generating unique operation named: saveUsingPOST_10
2019-05-23 17:22:44 -Generating unique operation named: treeUsingGET_1
2019-05-23 17:22:44 -Generating unique operation named: treeUsingGET_2
2019-05-23 17:22:44 -Generating unique operation named: updateUsingPOST_11
2019-05-23 17:22:44 -Generating unique operation named: addUsingGET_11
2019-05-23 17:22:44 -Generating unique operation named: editUsingGET_12
2019-05-23 17:22:44 -Generating unique operation named: listUsingGET_13
2019-05-23 17:22:44 -Generating unique operation named: removeUsingPOST_22
2019-05-23 17:22:44 -Generating unique operation named: removeUsingPOST_23
2019-05-23 17:22:44 -Generating unique operation named: saveUsingPOST_11
2019-05-23 17:22:44 -Generating unique operation named: updateUsingGET_8
2019-05-23 17:22:44 -Generating unique operation named: updateUsingHEAD_8
2019-05-23 17:22:44 -Generating unique operation named: updateUsingPOST_12
2019-05-23 17:22:44 -Generating unique operation named: updateUsingPUT_8
2019-05-23 17:22:44 -Generating unique operation named: updateUsingPATCH_8
2019-05-23 17:22:44 -Generating unique operation named: updateUsingDELETE_8
2019-05-23 17:22:44 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-23 17:22:44 -Generating unique operation named: updateUsingTRACE_8
2019-05-23 17:22:44 -Generating unique operation named: addUsingGET_12
2019-05-23 17:22:44 -Generating unique operation named: editUsingGET_13
2019-05-23 17:22:44 -Generating unique operation named: listUsingGET_14
2019-05-23 17:22:44 -Generating unique operation named: printEditUsingGET_1
2019-05-23 17:22:44 -Generating unique operation named: removeUsingPOST_24
2019-05-23 17:22:44 -Generating unique operation named: removeUsingPOST_25
2019-05-23 17:22:44 -Generating unique operation named: saveUsingPOST_12
2019-05-23 17:22:44 -Generating unique operation named: updateUsingGET_9
2019-05-23 17:22:44 -Generating unique operation named: updateUsingHEAD_9
2019-05-23 17:22:44 -Generating unique operation named: updateUsingPOST_13
2019-05-23 17:22:44 -Generating unique operation named: updateUsingPUT_9
2019-05-23 17:22:44 -Generating unique operation named: updateUsingPATCH_9
2019-05-23 17:22:44 -Generating unique operation named: updateUsingDELETE_9
2019-05-23 17:22:44 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-23 17:22:44 -Generating unique operation named: updateUsingTRACE_9
2019-05-23 17:22:44 -Generating unique operation named: addUsingGET_13
2019-05-23 17:22:44 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-23 17:22:44 -Generating unique operation named: editUsingGET_14
2019-05-23 17:22:44 -Generating unique operation named: listUsingGET_15
2019-05-23 17:22:44 -Generating unique operation named: saveUsingPOST_13
2019-05-23 17:22:44 -Generating unique operation named: saveUsingPOST_14
2019-05-23 17:22:44 -Generating unique operation named: updateUsingPOST_14
2019-05-23 17:22:44 -Generating unique operation named: listUsingGET_16
2019-05-23 17:22:44 -Generating unique operation named: listUsingHEAD_1
2019-05-23 17:22:44 -Generating unique operation named: listUsingPOST_1
2019-05-23 17:22:45 -Generating unique operation named: listUsingPUT_1
2019-05-23 17:22:45 -Generating unique operation named: listUsingPATCH_1
2019-05-23 17:22:45 -Generating unique operation named: listUsingDELETE_1
2019-05-23 17:22:45 -Generating unique operation named: listUsingOPTIONS_1
2019-05-23 17:22:45 -Generating unique operation named: listUsingTRACE_1
2019-05-23 17:22:45 -Generating unique operation named: countDDUsingGET_1
2019-05-23 17:22:45 -Generating unique operation named: exportDDUsingGET_1
2019-05-23 17:22:45 -Generating unique operation named: addUsingGET_14
2019-05-23 17:22:45 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-23 17:22:45 -Generating unique operation named: editUsingGET_15
2019-05-23 17:22:45 -Generating unique operation named: listUsingGET_17
2019-05-23 17:22:45 -Generating unique operation named: removeUsingPOST_26
2019-05-23 17:22:45 -Generating unique operation named: saveUsingPOST_15
2019-05-23 17:22:45 -Generating unique operation named: treeUsingGET_3
2019-05-23 17:22:45 -Generating unique operation named: treeViewUsingGET_1
2019-05-23 17:22:45 -Generating unique operation named: updateUsingPOST_15
2019-05-23 17:22:45 -Generating unique operation named: addUsingGET_15
2019-05-23 17:22:45 -Generating unique operation named: editUsingGET_16
2019-05-23 17:22:45 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-23 17:22:45 -Generating unique operation named: listUsingGET_18
2019-05-23 17:22:45 -Generating unique operation named: removeUsingPOST_27
2019-05-23 17:22:45 -Generating unique operation named: removeUsingPOST_28
2019-05-23 17:22:45 -Generating unique operation named: saveUsingPOST_16
2019-05-23 17:22:45 -Generating unique operation named: updateUsingGET_10
2019-05-23 17:22:45 -Generating unique operation named: updateUsingHEAD_10
2019-05-23 17:22:45 -Generating unique operation named: updateUsingPOST_16
2019-05-23 17:22:45 -Generating unique operation named: updateUsingPUT_10
2019-05-23 17:22:45 -Generating unique operation named: updateUsingPATCH_10
2019-05-23 17:22:45 -Generating unique operation named: updateUsingDELETE_10
2019-05-23 17:22:45 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-23 17:22:45 -Generating unique operation named: updateUsingTRACE_10
2019-05-23 17:22:45 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-23 17:22:45 -Generating unique operation named: addUsingGET_16
2019-05-23 17:22:45 -Generating unique operation named: editUsingGET_17
2019-05-23 17:22:45 -Generating unique operation named: listUsingGET_19
2019-05-23 17:22:45 -Generating unique operation named: removeUsingPOST_29
2019-05-23 17:22:45 -Generating unique operation named: removeUsingPOST_30
2019-05-23 17:22:45 -Generating unique operation named: saveUsingPOST_17
2019-05-23 17:22:45 -Generating unique operation named: updateUsingGET_11
2019-05-23 17:22:45 -Generating unique operation named: updateUsingHEAD_11
2019-05-23 17:22:45 -Generating unique operation named: updateUsingPOST_17
2019-05-23 17:22:45 -Generating unique operation named: updateUsingPUT_11
2019-05-23 17:22:45 -Generating unique operation named: updateUsingPATCH_11
2019-05-23 17:22:45 -Generating unique operation named: updateUsingDELETE_11
2019-05-23 17:22:45 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-23 17:22:45 -Generating unique operation named: updateUsingTRACE_11
2019-05-23 17:22:45 -Generating unique operation named: addUsingGET_17
2019-05-23 17:22:45 -Generating unique operation named: editUsingGET_18
2019-05-23 17:22:45 -Generating unique operation named: listUsingGET_20
2019-05-23 17:22:45 -Generating unique operation named: removeUsingPOST_31
2019-05-23 17:22:45 -Generating unique operation named: removeUsingPOST_32
2019-05-23 17:22:45 -Generating unique operation named: saveUsingPOST_18
2019-05-23 17:22:45 -Generating unique operation named: updateUsingGET_12
2019-05-23 17:22:45 -Generating unique operation named: updateUsingHEAD_12
2019-05-23 17:22:45 -Generating unique operation named: updateUsingPOST_18
2019-05-23 17:22:45 -Generating unique operation named: updateUsingPUT_12
2019-05-23 17:22:45 -Generating unique operation named: updateUsingPATCH_12
2019-05-23 17:22:45 -Generating unique operation named: updateUsingDELETE_12
2019-05-23 17:22:45 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-23 17:22:45 -Generating unique operation named: updateUsingTRACE_12
2019-05-23 17:22:45 -Starting Quartz Scheduler now
2019-05-23 17:22:45 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-23 17:22:45 -Starting...
2019-05-23 17:22:45 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-23 17:22:45 -Started.
2019-05-23 17:22:45 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-23 17:22:45 -Using a shared selector for servlet write/read
2019-05-23 17:22:46 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-23 17:22:46 -Started BootdoApplication in 49.054 seconds (JVM running for 50.061)
2019-05-23 17:22:46 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-23 17:22:46 -==> Parameters: 
2019-05-23 17:22:46 -<==      Total: 1
2019-05-23 17:23:15 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-23 17:23:15 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-23 17:23:15 -FrameworkServlet 'dispatcherServlet': initialization completed in 58 ms
2019-05-23 17:23:15 -Enabling session validation scheduler...
2019-05-23 17:23:15 -请求地址 : http://localhost:8081/login;JSESSIONID=d540ab52-8322-4e95-afb6-e5c40eadd096
2019-05-23 17:23:15 -HTTP METHOD : GET
2019-05-23 17:23:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-23 17:23:15 -参数 : [{}]
2019-05-23 17:23:15 -耗时 : 4
2019-05-23 17:23:15 -返回值 : login
2019-05-23 17:23:21 -请求地址 : http://localhost:8081/getVerify
2019-05-23 17:23:21 -HTTP METHOD : GET
2019-05-23 17:23:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-23 17:23:21 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@29968bf3, org.apache.shiro.web.servlet.ShiroHttpServletResponse@2c64327f]
2019-05-23 17:23:35 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-05-23 17:23:43 -4997
2019-05-23 17:23:45 -耗时 : 24243
2019-05-23 17:23:45 -返回值 : null
2019-05-23 17:24:13 -请求地址 : http://localhost:8081/login
2019-05-23 17:24:13 -HTTP METHOD : POST
2019-05-23 17:24:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-23 17:24:13 -参数 : [admin, 111111, 4997, org.apache.shiro.web.servlet.ShiroHttpServletRequest@547f5920]
2019-05-23 17:24:14 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-23 17:24:14 -==> Parameters: admin(String)
2019-05-23 17:24:14 -<==      Total: 1
2019-05-23 17:24:14 -耗时 : 488
2019-05-23 17:24:14 -返回值 : {msg=操作成功, code=0}
2019-05-23 17:24:14 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-23 17:24:14 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-23 17:24:14 -==> Parameters: 1(Long), admin(String), 登录(String), 489(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-23 17:24:14.742(Timestamp)
2019-05-23 17:24:15 -请求地址 : http://localhost:8081/index
2019-05-23 17:24:15 -HTTP METHOD : GET
2019-05-23 17:24:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-23 17:24:15 -参数 : [{}]
2019-05-23 17:24:15 -<==    Updates: 1
2019-05-23 17:24:15 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-23 17:24:15 -==> Parameters: 1(Long)
2019-05-23 17:24:15 -<==      Total: 49
2019-05-23 17:24:15 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-23 17:24:15 -==> Parameters: 138(Long)
2019-05-23 17:24:15 -<==      Total: 1
2019-05-23 17:24:15 -耗时 : 783
2019-05-23 17:24:15 -返回值 : index_v1
2019-05-23 17:24:16 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-23 17:24:16 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 783(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-23 17:24:16.143(Timestamp)
2019-05-23 17:24:16 -<==    Updates: 1
2019-05-23 17:24:16 -请求地址 : http://localhost:8081/main
2019-05-23 17:24:16 -HTTP METHOD : GET
2019-05-23 17:24:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-23 17:24:16 -参数 : []
2019-05-23 17:24:16 -耗时 : 1
2019-05-23 17:24:16 -返回值 : main
2019-05-23 17:24:17 -请求地址 : http://localhost:8081/main
2019-05-23 17:24:17 -HTTP METHOD : GET
2019-05-23 17:24:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-23 17:24:17 -参数 : []
2019-05-23 17:24:17 -耗时 : 1
2019-05-23 17:24:17 -返回值 : main
2019-05-23 17:24:17 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-23 17:24:17 -HTTP METHOD : GET
2019-05-23 17:24:17 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-23 17:24:17 -参数 : []
2019-05-23 17:24:17 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-23 17:24:17 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-23 17:24:17 -<==      Total: 0
2019-05-23 17:24:17 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-23 17:24:17 -==> Parameters: 1(Long), 0(String)
2019-05-23 17:24:17 -<==      Total: 1
2019-05-23 17:24:17 -耗时 : 391
2019-05-23 17:24:17 -返回值 : com.bootdo.common.utils.PageUtils@5edfb3fe
2019-05-23 17:25:07 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-23 17:25:07 -==> Parameters: 1(Long)
2019-05-23 17:25:07 -<==      Total: 93
2019-05-23 17:25:07 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-23 17:25:07 -HTTP METHOD : GET
2019-05-23 17:25:07 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-23 17:25:07 -参数 : []
2019-05-23 17:25:07 -耗时 : 9
2019-05-23 17:25:07 -返回值 : charts/tableElecYY
2019-05-23 17:25:08 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-23 17:25:08 -HTTP METHOD : GET
2019-05-23 17:25:08 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-23 17:25:08 -参数 : [userType]
2019-05-23 17:25:08 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-23 17:25:08 -==> Parameters: userType(String)
2019-05-23 17:25:08 -<==      Total: 4
2019-05-23 17:25:08 -耗时 : 98
2019-05-23 17:25:08 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-23 17:25:16 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-05-23 17:25:16 -HTTP METHOD : GET
2019-05-23 17:25:16 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-05-23 17:25:16 -参数 : []
2019-05-23 17:25:16 -耗时 : 0
2019-05-23 17:25:16 -返回值 : /moneyList/moneyList
2019-05-23 17:25:21 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-23 17:25:21 -HTTP METHOD : GET
2019-05-23 17:25:21 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-23 17:25:21 -参数 : []
2019-05-23 17:25:21 -耗时 : 0
2019-05-23 17:25:21 -返回值 : system/dept/deptTree
2019-05-23 17:25:21 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-23 17:25:21 -HTTP METHOD : GET
2019-05-23 17:25:21 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-23 17:25:21 -参数 : []
2019-05-23 17:25:21 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-23 17:25:21 -==> Parameters: 
2019-05-23 17:25:21 -<==      Total: 3
2019-05-23 17:25:21 -耗时 : 31
2019-05-23 17:25:21 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-23 17:25:28 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-05-23 17:25:28 -HTTP METHOD : POST
2019-05-23 17:25:28 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-05-23 17:25:28 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@3d0dbfd1]
2019-05-23 17:25:28 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-05-23 17:25:28 -==> Parameters: 2019-03(String), 2(String), 1-0001(String), 2019-03(String), 2(String), 1-0001(String), 2019-03(String), 2(String), 1-0001(String)
2019-05-23 17:25:28 -<==      Total: 3
2019-05-23 17:25:28 -耗时 : 421
2019-05-23 17:25:28 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@dc26ce6, com.bootdo.moneyList.damain.MoneyListDO@63972f8d, com.bootdo.moneyList.damain.MoneyListDO@50e1b08d]
2019-05-23 17:25:34 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-05-23 17:25:34 -HTTP METHOD : POST
2019-05-23 17:25:34 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-05-23 17:25:34 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@5d2b83e]
2019-05-23 17:25:34 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-05-23 17:25:34 -==> Parameters: 2019-03(String), 2(String), 1-0001(String), 2019-03(String), 2(String), 1-0001(String), 2019-03(String), 2(String), 1-0001(String)
2019-05-23 17:25:34 -<==      Total: 3
2019-05-23 17:25:34 -==>  Preparing: select el.start,el.end,el.hu,el.elec_amount,el.elec_cost,el.elec_price,el.elec_sum from elec el WHERE el.user_Id = ? and el.create_time = ? and el.user_org = ? and user_type != 'B' 
2019-05-23 17:25:34 -==> Parameters: 1-0001(String), 2019-03(String), 2(String)
2019-05-23 17:25:34 -<==      Total: 0
2019-05-23 17:25:34 -==>  Preparing: select he.heat_area, he.heat_cost, he.heat_price, he.heat_sum from heat he WHERE he.user_Id = ? and he.create_time = ? and he.user_org = ? and user_type != 'B' 
2019-05-23 17:25:34 -==> Parameters: 1-0001(String), 2019-03(String), 2(String)
2019-05-23 17:25:34 -<==      Total: 1
2019-05-23 17:25:34 -==>  Preparing: select wa.water_price,wa.water_sum from water wa WHERE wa.user_Id = ? and wa.create_time = ? and wa.user_org = ? and user_type != 'B' 
2019-05-23 17:25:34 -==> Parameters: 1-0001(String), 2019-03(String), 2(String)
2019-05-23 17:25:34 -<==      Total: 1
2019-05-23 17:25:35 -==>  Preparing: update heat set heat_sum = heat_sum + ?,user_type=? WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-05-23 17:25:35 -==> Parameters: 1(String), A(String), 2019-03(String), 2(String), 1-0001(String)
2019-05-23 17:25:35 -<==    Updates: 1
2019-05-23 17:25:35 -==>  Preparing: insert into heat_log ( `user_id`, `user_name`, `user_type`, `user_org`, `heat_type`, `heat_money`, `heat_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-23 17:25:35 -==> Parameters: 1-0001(String), 姜海龙(String), A(String), 2(String), 1(String), 1(BigDecimal), 2019-05-23 17:25:34.979(Timestamp), 2019-03(String), 1(Long), 2019-05-23 17:25:34.979(Timestamp), 1(Long), null
2019-05-23 17:25:35 -<==    Updates: 1
2019-05-23 17:25:35 -==>  Preparing: insert into print ( `user_id`, `user_name`, `user_type`, `user_org`, `start`, `end`, `hu`, `elec_price`, `elec_amount`, `elec_cost`, `elec_sum`, `elec_money`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `heat_money`, `water_price`, `water_cost`, `water_sum`, `water_money`, `print_state`, `print_date`, `cost_poper`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-23 17:25:35 -==> Parameters: 1-0001(String), 姜海龙(String), A(String), 2(String), null, null, null, null, null, null, null, null, 3.50(BigDecimal), 100.00(BigDecimal), 100.00(BigDecimal), -73.35(BigDecimal), 1(BigDecimal), 6.30(BigDecimal), null, 28.00(BigDecimal), null, 0(String), 2019-05-23 17:25:34.999(Timestamp), null, 2019-03(String), 1(Long), 2019-05-23 17:25:34.999(Timestamp), 1(Long), null
2019-05-23 17:25:35 -<==    Updates: 1
2019-05-23 17:25:35 -耗时 : 740
2019-05-23 17:25:35 -返回值 : 30
2019-05-23 17:25:36 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-05-23 17:25:36 -HTTP METHOD : POST
2019-05-23 17:25:36 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-05-23 17:25:36 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@aaf36aa]
2019-05-23 17:25:36 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-05-23 17:25:36 -==> Parameters: 2019-03(String), 2(String), 1-0001(String), 2019-03(String), 2(String), 1-0001(String), 2019-03(String), 2(String), 1-0001(String)
2019-05-23 17:25:36 -<==      Total: 3
2019-05-23 17:25:36 -耗时 : 6
2019-05-23 17:25:36 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@747aea15, com.bootdo.moneyList.damain.MoneyListDO@7938856, com.bootdo.moneyList.damain.MoneyListDO@669784fe]
2019-05-23 17:25:39 -请求地址 : http://localhost:8081/moneyList/moneyList/moneyPrint/30
2019-05-23 17:25:39 -HTTP METHOD : GET
2019-05-23 17:25:39 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.printEdit
2019-05-23 17:25:39 -参数 : [30, {}]
2019-05-23 17:25:39 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-05-23 17:25:39 -==> Parameters: 30(Long)
2019-05-23 17:25:39 -<==      Total: 1
2019-05-23 17:25:39 -耗时 : 13
2019-05-23 17:25:39 -返回值 : moneyList/moneyPrint
2019-05-23 17:39:26 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-23 17:39:26 -==> Parameters: 1(Long)
2019-05-23 17:39:26 -<==      Total: 93
2019-05-23 17:39:26 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-05-23 17:39:26 -HTTP METHOD : GET
2019-05-23 17:39:26 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-05-23 17:39:26 -参数 : []
2019-05-23 17:39:26 -耗时 : 1
2019-05-23 17:39:26 -返回值 : /moneyLog/elecLog/elecLog
2019-05-23 17:39:27 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-05-23 17:39:27 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-23 17:39:27 -HTTP METHOD : GET
2019-05-23 17:39:27 -HTTP METHOD : GET
2019-05-23 17:39:27 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-23 17:39:27 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-23 17:39:27 -参数 : [elecType]
2019-05-23 17:39:27 -参数 : [userType]
2019-05-23 17:39:27 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-23 17:39:27 -==> Parameters: userType(String)
2019-05-23 17:39:27 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-23 17:39:27 -==> Parameters: elecType(String)
2019-05-23 17:39:27 -<==      Total: 4
2019-05-23 17:39:27 -耗时 : 13
2019-05-23 17:39:27 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-23 17:39:27 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-05-23 17:39:27 -HTTP METHOD : GET
2019-05-23 17:39:27 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-05-23 17:39:27 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, elecDate=}]
2019-05-23 17:39:27 -<==      Total: 11
2019-05-23 17:39:27 -耗时 : 87
2019-05-23 17:39:27 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-23 17:39:27 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-05-23 17:39:27 -==> Parameters: 0(Integer), 10(Integer)
2019-05-23 17:39:27 -<==      Total: 10
2019-05-23 17:39:27 -==>  Preparing: select count(*) from elec_log 
2019-05-23 17:39:27 -==> Parameters: 
2019-05-23 17:39:27 -<==      Total: 1
2019-05-23 17:39:27 -耗时 : 134
2019-05-23 17:39:27 -返回值 : com.bootdo.common.utils.PageUtils@4d51ddbe
2019-05-23 21:04:19 -Starting BootdoApplication on PC-201905091110 with PID 39840 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-23 21:04:19 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-23 21:04:19 -The following profiles are active: dev
2019-05-23 21:04:19 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Thu May 23 21:04:19 CST 2019]; root of context hierarchy
2019-05-23 21:04:24 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-23 21:04:27 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$c41ba62b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 21:04:27 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$b674d4d2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 21:04:28 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 21:04:29 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 21:04:29 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 21:04:29 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-23 21:04:29 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-23 21:04:29 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 21:04:29 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 21:04:29 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 21:04:29 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-23 21:04:30 -Tomcat initialized with port(s): 8081 (http)
2019-05-23 21:04:30 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-23 21:04:31 -Starting service [Tomcat]
2019-05-23 21:04:31 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-23 21:04:31 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-23 21:04:31 -Initializing Spring embedded WebApplicationContext
2019-05-23 21:04:31 -Root WebApplicationContext: initialization completed in 11870 ms
2019-05-23 21:04:32 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-23 21:04:32 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-23 21:04:32 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-23 21:04:32 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-23 21:04:32 -Filter xssFilter was not registered (disabled)
2019-05-23 21:04:32 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-23 21:04:32 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-23 21:04:32 -Servlet statViewServlet mapped to [/druid/*]
2019-05-23 21:04:32 -Servlet dispatcherServlet mapped to [/]
2019-05-23 21:04:37 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Thu May 23 21:04:19 CST 2019]; root of context hierarchy
2019-05-23 21:04:38 -Using default implementation for ThreadExecutor
2019-05-23 21:04:38 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-23 21:04:38 -Quartz Scheduler v.2.2.1 created.
2019-05-23 21:04:38 -RAMJobStore initialized.
2019-05-23 21:04:38 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-23 21:04:38 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-23 21:04:38 -Quartz scheduler version: 2.2.1
2019-05-23 21:04:38 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@22865072
2019-05-23 21:04:38 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-23 21:04:39 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-23 21:04:42 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-23 21:04:42 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-23 21:04:42 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 21:04:42 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-23 21:04:42 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-23 21:04:42 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 21:04:42 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-23 21:04:42 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-23 21:04:42 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-23 21:04:42 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 21:04:42 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-23 21:04:42 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-23 21:04:42 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 21:04:42 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-23 21:04:42 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-23 21:04:42 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-23 21:04:42 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-23 21:04:42 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 21:04:42 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-23 21:04:42 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-23 21:04:42 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 21:04:42 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-23 21:04:42 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-23 21:04:42 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 21:04:42 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 21:04:42 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-23 21:04:42 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-23 21:04:42 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 21:04:42 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-23 21:04:42 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-23 21:04:42 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 21:04:42 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-23 21:04:42 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-23 21:04:42 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-23 21:04:42 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-23 21:04:42 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-23 21:04:42 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-23 21:04:42 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-23 21:04:42 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-23 21:04:42 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-23 21:04:42 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 21:04:42 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-23 21:04:42 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-23 21:04:42 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 21:04:42 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-23 21:04:42 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-23 21:04:42 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-23 21:04:42 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-23 21:04:42 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-23 21:04:42 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-23 21:04:42 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-23 21:04:42 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 21:04:42 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-23 21:04:42 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-23 21:04:42 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 21:04:42 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-23 21:04:42 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-23 21:04:42 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 21:04:42 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-23 21:04:42 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-23 21:04:42 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-23 21:04:42 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-23 21:04:42 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-23 21:04:42 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-23 21:04:42 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-23 21:04:42 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-23 21:04:42 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-23 21:04:42 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 21:04:42 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-23 21:04:42 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-23 21:04:42 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 21:04:42 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-23 21:04:42 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-23 21:04:42 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-23 21:04:42 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-23 21:04:42 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 21:04:42 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-23 21:04:42 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-23 21:04:42 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-23 21:04:42 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-23 21:04:42 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-23 21:04:42 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-23 21:04:42 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-23 21:04:42 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-23 21:04:42 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-23 21:04:42 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-23 21:04:42 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-23 21:04:42 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-23 21:04:42 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-23 21:04:42 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 21:04:42 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-23 21:04:42 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-23 21:04:42 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-23 21:04:42 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-23 21:04:42 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-23 21:04:42 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-23 21:04:42 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-23 21:04:42 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 21:04:42 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-23 21:04:42 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 21:04:42 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-23 21:04:42 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-23 21:04:42 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-23 21:04:42 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-23 21:04:42 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-23 21:04:42 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-23 21:04:42 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-23 21:04:42 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-23 21:04:42 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 21:04:42 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-23 21:04:42 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-23 21:04:42 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-23 21:04:42 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-23 21:04:42 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-23 21:04:42 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-23 21:04:42 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-23 21:04:42 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-23 21:04:42 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-23 21:04:42 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-23 21:04:42 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-23 21:04:42 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 21:04:42 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-23 21:04:42 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-23 21:04:42 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 21:04:42 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-23 21:04:42 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-23 21:04:42 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-23 21:04:42 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-23 21:04:42 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-23 21:04:42 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 21:04:42 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-23 21:04:42 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-23 21:04:42 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-23 21:04:42 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-23 21:04:42 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-23 21:04:42 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-23 21:04:42 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-23 21:04:42 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 21:04:42 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-23 21:04:42 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 21:04:42 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-23 21:04:42 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-23 21:04:42 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-23 21:04:42 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-23 21:04:42 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-23 21:04:42 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-23 21:04:42 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 21:04:42 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-23 21:04:42 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 21:04:42 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-23 21:04:42 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-23 21:04:42 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-23 21:04:42 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-23 21:04:42 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-23 21:04:42 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-23 21:04:42 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 21:04:42 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-23 21:04:42 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 21:04:42 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-23 21:04:42 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-23 21:04:42 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-23 21:04:42 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-23 21:04:42 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-23 21:04:42 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-23 21:04:42 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-23 21:04:42 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 21:04:42 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-23 21:04:42 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-23 21:04:42 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 21:04:42 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 21:04:42 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-23 21:04:42 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-23 21:04:42 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-23 21:04:42 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-23 21:04:42 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-05-23 21:04:42 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-23 21:04:42 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 21:04:42 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-23 21:04:42 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 21:04:42 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-23 21:04:42 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 21:04:42 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-23 21:04:42 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-23 21:04:42 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-23 21:04:42 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-23 21:04:42 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-23 21:04:42 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-23 21:04:42 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-23 21:04:42 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-23 21:04:42 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-23 21:04:42 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 21:04:42 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-23 21:04:42 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-23 21:04:42 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-23 21:04:42 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-23 21:04:42 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-23 21:04:42 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-23 21:04:42 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-23 21:04:42 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-23 21:04:42 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-23 21:04:42 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-23 21:04:42 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-23 21:04:42 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-23 21:04:42 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 21:04:42 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-23 21:04:42 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-23 21:04:42 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-23 21:04:42 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-23 21:04:42 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-23 21:04:42 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-23 21:04:42 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-23 21:04:42 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-23 21:04:42 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-23 21:04:42 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-23 21:04:42 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-23 21:04:42 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-23 21:04:42 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 21:04:42 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-23 21:04:42 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-23 21:04:42 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-23 21:04:42 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-23 21:04:42 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 21:04:42 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-23 21:04:42 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-23 21:04:42 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-23 21:04:42 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 21:04:42 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-23 21:04:42 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-23 21:04:42 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-23 21:04:42 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-23 21:04:42 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-23 21:04:42 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-23 21:04:42 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-23 21:04:42 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-23 21:04:42 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-23 21:04:42 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-23 21:04:42 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-23 21:04:42 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-23 21:04:42 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-23 21:04:42 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-23 21:04:42 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-23 21:04:42 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-23 21:04:42 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-23 21:04:42 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 21:04:42 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-23 21:04:42 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-23 21:04:42 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 21:04:42 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-23 21:04:42 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-23 21:04:42 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-23 21:04:42 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-23 21:04:42 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-23 21:04:42 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-23 21:04:42 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-23 21:04:42 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-23 21:04:42 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-23 21:04:42 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-23 21:04:42 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-23 21:04:42 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-23 21:04:42 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-23 21:04:42 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-23 21:04:42 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-23 21:04:42 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-23 21:04:42 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-23 21:04:43 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-23 21:04:43 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-23 21:04:43 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-23 21:04:43 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-23 21:04:43 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-23 21:04:43 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-23 21:04:44 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-23 21:04:44 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Thu May 23 21:04:19 CST 2019]; root of context hierarchy
2019-05-23 21:04:45 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-23 21:04:45 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-23 21:04:45 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-23 21:04:45 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-23 21:04:45 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-23 21:04:51 -Registering beans for JMX exposure on startup
2019-05-23 21:04:51 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-23 21:04:51 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-23 21:04:51 -Starting beans in phase 2147483647
2019-05-23 21:04:51 -Context refreshed
2019-05-23 21:04:51 -Found 1 custom documentation plugin(s)
2019-05-23 21:04:51 -Scanning for api listing references
2019-05-23 21:04:51 -Generating unique operation named: getCountDUsingPOST_1
2019-05-23 21:04:51 -Generating unique operation named: removeUsingPOST_1
2019-05-23 21:04:52 -Generating unique operation named: addUsingGET_1
2019-05-23 21:04:52 -Generating unique operation named: editUsingGET_1
2019-05-23 21:04:52 -Generating unique operation named: listUsingGET_1
2019-05-23 21:04:52 -Generating unique operation named: removeUsingPOST_2
2019-05-23 21:04:52 -Generating unique operation named: removeUsingPOST_3
2019-05-23 21:04:52 -Generating unique operation named: saveUsingPOST_1
2019-05-23 21:04:52 -Generating unique operation named: updateUsingGET_1
2019-05-23 21:04:52 -Generating unique operation named: updateUsingHEAD_1
2019-05-23 21:04:52 -Generating unique operation named: updateUsingPOST_1
2019-05-23 21:04:52 -Generating unique operation named: updateUsingPUT_1
2019-05-23 21:04:52 -Generating unique operation named: updateUsingPATCH_1
2019-05-23 21:04:52 -Generating unique operation named: updateUsingDELETE_1
2019-05-23 21:04:52 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-23 21:04:52 -Generating unique operation named: updateUsingTRACE_1
2019-05-23 21:04:52 -Generating unique operation named: addUsingGET_2
2019-05-23 21:04:52 -Generating unique operation named: editUsingGET_2
2019-05-23 21:04:52 -Generating unique operation named: listUsingGET_2
2019-05-23 21:04:52 -Generating unique operation named: removeUsingPOST_4
2019-05-23 21:04:52 -Generating unique operation named: removeUsingPOST_5
2019-05-23 21:04:52 -Generating unique operation named: saveUsingPOST_2
2019-05-23 21:04:52 -Generating unique operation named: updateUsingPOST_2
2019-05-23 21:04:52 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-23 21:04:52 -Generating unique operation named: addUsingGET_3
2019-05-23 21:04:52 -Generating unique operation named: editUsingGET_3
2019-05-23 21:04:52 -Generating unique operation named: listUsingGET_3
2019-05-23 21:04:52 -Generating unique operation named: removeUsingPOST_6
2019-05-23 21:04:52 -Generating unique operation named: removeUsingPOST_7
2019-05-23 21:04:52 -Generating unique operation named: saveUsingPOST_3
2019-05-23 21:04:52 -Generating unique operation named: updateUsingGET_2
2019-05-23 21:04:52 -Generating unique operation named: updateUsingHEAD_2
2019-05-23 21:04:52 -Generating unique operation named: updateUsingPOST_3
2019-05-23 21:04:52 -Generating unique operation named: updateUsingPUT_2
2019-05-23 21:04:52 -Generating unique operation named: updateUsingPATCH_2
2019-05-23 21:04:52 -Generating unique operation named: updateUsingDELETE_2
2019-05-23 21:04:52 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-23 21:04:52 -Generating unique operation named: updateUsingTRACE_2
2019-05-23 21:04:52 -Generating unique operation named: addUsingGET_4
2019-05-23 21:04:52 -Generating unique operation named: editUsingGET_4
2019-05-23 21:04:52 -Generating unique operation named: listUsingGET_4
2019-05-23 21:04:52 -Generating unique operation named: removeUsingPOST_8
2019-05-23 21:04:52 -Generating unique operation named: removeUsingPOST_9
2019-05-23 21:04:52 -Generating unique operation named: saveUsingPOST_4
2019-05-23 21:04:52 -Generating unique operation named: updateUsingGET_3
2019-05-23 21:04:52 -Generating unique operation named: updateUsingHEAD_3
2019-05-23 21:04:52 -Generating unique operation named: updateUsingPOST_4
2019-05-23 21:04:52 -Generating unique operation named: updateUsingPUT_3
2019-05-23 21:04:52 -Generating unique operation named: updateUsingPATCH_3
2019-05-23 21:04:52 -Generating unique operation named: updateUsingDELETE_3
2019-05-23 21:04:52 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-23 21:04:52 -Generating unique operation named: updateUsingTRACE_3
2019-05-23 21:04:52 -Generating unique operation named: ElecUsingGET_1
2019-05-23 21:04:52 -Generating unique operation named: addUsingGET_5
2019-05-23 21:04:52 -Generating unique operation named: editUsingGET_5
2019-05-23 21:04:52 -Generating unique operation named: listUsingGET_5
2019-05-23 21:04:52 -Generating unique operation named: removeUsingPOST_10
2019-05-23 21:04:52 -Generating unique operation named: removeUsingPOST_11
2019-05-23 21:04:52 -Generating unique operation named: saveUsingPOST_5
2019-05-23 21:04:52 -Generating unique operation named: updateUsingGET_4
2019-05-23 21:04:52 -Generating unique operation named: updateUsingHEAD_4
2019-05-23 21:04:52 -Generating unique operation named: updateUsingPOST_5
2019-05-23 21:04:52 -Generating unique operation named: updateUsingPUT_4
2019-05-23 21:04:52 -Generating unique operation named: updateUsingPATCH_4
2019-05-23 21:04:52 -Generating unique operation named: updateUsingDELETE_4
2019-05-23 21:04:52 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-23 21:04:52 -Generating unique operation named: updateUsingTRACE_4
2019-05-23 21:04:52 -Generating unique operation named: editUsingGET_6
2019-05-23 21:04:52 -Generating unique operation named: listUsingGET_6
2019-05-23 21:04:52 -Generating unique operation named: updateUsingPOST_6
2019-05-23 21:04:52 -Generating unique operation named: addUsingGET_6
2019-05-23 21:04:52 -Generating unique operation named: editUsingGET_7
2019-05-23 21:04:52 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-23 21:04:52 -Generating unique operation named: listUsingGET_7
2019-05-23 21:04:52 -Generating unique operation named: removeUsingPOST_12
2019-05-23 21:04:52 -Generating unique operation named: removeUsingPOST_13
2019-05-23 21:04:52 -Generating unique operation named: saveUsingPOST_6
2019-05-23 21:04:52 -Generating unique operation named: updateUsingGET_5
2019-05-23 21:04:52 -Generating unique operation named: updateUsingHEAD_5
2019-05-23 21:04:52 -Generating unique operation named: updateUsingPOST_7
2019-05-23 21:04:52 -Generating unique operation named: updateUsingPUT_5
2019-05-23 21:04:52 -Generating unique operation named: updateUsingPATCH_5
2019-05-23 21:04:52 -Generating unique operation named: updateUsingDELETE_5
2019-05-23 21:04:52 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-23 21:04:52 -Generating unique operation named: updateUsingTRACE_5
2019-05-23 21:04:52 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-23 21:04:52 -Generating unique operation named: addUsingGET_7
2019-05-23 21:04:52 -Generating unique operation named: editUsingGET_8
2019-05-23 21:04:52 -Generating unique operation named: listUsingGET_8
2019-05-23 21:04:52 -Generating unique operation named: removeUsingPOST_14
2019-05-23 21:04:52 -Generating unique operation named: removeUsingPOST_15
2019-05-23 21:04:52 -Generating unique operation named: saveUsingPOST_7
2019-05-23 21:04:52 -Generating unique operation named: updateUsingGET_6
2019-05-23 21:04:52 -Generating unique operation named: updateUsingHEAD_6
2019-05-23 21:04:52 -Generating unique operation named: updateUsingPOST_8
2019-05-23 21:04:52 -Generating unique operation named: updateUsingPUT_6
2019-05-23 21:04:52 -Generating unique operation named: updateUsingPATCH_6
2019-05-23 21:04:52 -Generating unique operation named: updateUsingDELETE_6
2019-05-23 21:04:52 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-23 21:04:52 -Generating unique operation named: updateUsingTRACE_6
2019-05-23 21:04:52 -Generating unique operation named: addUsingGET_8
2019-05-23 21:04:52 -Generating unique operation named: editUsingGET_9
2019-05-23 21:04:52 -Generating unique operation named: listUsingGET_9
2019-05-23 21:04:52 -Generating unique operation named: removeUsingPOST_16
2019-05-23 21:04:52 -Generating unique operation named: removeUsingPOST_17
2019-05-23 21:04:52 -Generating unique operation named: saveUsingPOST_8
2019-05-23 21:04:52 -Generating unique operation named: updateUsingGET_7
2019-05-23 21:04:52 -Generating unique operation named: updateUsingHEAD_7
2019-05-23 21:04:52 -Generating unique operation named: updateUsingPOST_9
2019-05-23 21:04:53 -Generating unique operation named: updateUsingPUT_7
2019-05-23 21:04:53 -Generating unique operation named: updateUsingPATCH_7
2019-05-23 21:04:53 -Generating unique operation named: updateUsingDELETE_7
2019-05-23 21:04:53 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-23 21:04:53 -Generating unique operation named: updateUsingTRACE_7
2019-05-23 21:04:53 -Generating unique operation named: addUsingGET_9
2019-05-23 21:04:53 -Generating unique operation named: editUsingGET_10
2019-05-23 21:04:53 -Generating unique operation named: infoUsingGET_1
2019-05-23 21:04:53 -Generating unique operation named: infoUsingHEAD_1
2019-05-23 21:04:53 -Generating unique operation named: infoUsingPOST_1
2019-05-23 21:04:53 -Generating unique operation named: infoUsingPUT_1
2019-05-23 21:04:53 -Generating unique operation named: infoUsingPATCH_1
2019-05-23 21:04:53 -Generating unique operation named: infoUsingDELETE_1
2019-05-23 21:04:53 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-23 21:04:53 -Generating unique operation named: infoUsingTRACE_1
2019-05-23 21:04:53 -Generating unique operation named: listUsingGET_10
2019-05-23 21:04:53 -Generating unique operation named: removeUsingPOST_18
2019-05-23 21:04:53 -Generating unique operation named: removeUsingPOST_19
2019-05-23 21:04:53 -Generating unique operation named: saveUsingPOST_9
2019-05-23 21:04:53 -Generating unique operation named: updateUsingPOST_10
2019-05-23 21:04:53 -Generating unique operation named: listUsingGET_11
2019-05-23 21:04:53 -Generating unique operation named: removeUsingPOST_20
2019-05-23 21:04:53 -Generating unique operation named: welcomeUsingGET_1
2019-05-23 21:04:53 -Generating unique operation named: addUsingGET_10
2019-05-23 21:04:53 -Generating unique operation named: editUsingGET_11
2019-05-23 21:04:53 -Generating unique operation named: listUsingGET_12
2019-05-23 21:04:53 -Generating unique operation named: removeUsingPOST_21
2019-05-23 21:04:53 -Generating unique operation named: saveUsingPOST_10
2019-05-23 21:04:53 -Generating unique operation named: treeUsingGET_1
2019-05-23 21:04:53 -Generating unique operation named: treeUsingGET_2
2019-05-23 21:04:53 -Generating unique operation named: updateUsingPOST_11
2019-05-23 21:04:53 -Generating unique operation named: addUsingGET_11
2019-05-23 21:04:53 -Generating unique operation named: editUsingGET_12
2019-05-23 21:04:53 -Generating unique operation named: listUsingGET_13
2019-05-23 21:04:53 -Generating unique operation named: removeUsingPOST_22
2019-05-23 21:04:53 -Generating unique operation named: removeUsingPOST_23
2019-05-23 21:04:53 -Generating unique operation named: saveUsingPOST_11
2019-05-23 21:04:53 -Generating unique operation named: updateUsingGET_8
2019-05-23 21:04:53 -Generating unique operation named: updateUsingHEAD_8
2019-05-23 21:04:53 -Generating unique operation named: updateUsingPOST_12
2019-05-23 21:04:53 -Generating unique operation named: updateUsingPUT_8
2019-05-23 21:04:53 -Generating unique operation named: updateUsingPATCH_8
2019-05-23 21:04:53 -Generating unique operation named: updateUsingDELETE_8
2019-05-23 21:04:53 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-23 21:04:53 -Generating unique operation named: updateUsingTRACE_8
2019-05-23 21:04:53 -Generating unique operation named: addUsingGET_12
2019-05-23 21:04:53 -Generating unique operation named: editUsingGET_13
2019-05-23 21:04:53 -Generating unique operation named: listUsingGET_14
2019-05-23 21:04:53 -Generating unique operation named: printEditUsingGET_1
2019-05-23 21:04:53 -Generating unique operation named: removeUsingPOST_24
2019-05-23 21:04:53 -Generating unique operation named: removeUsingPOST_25
2019-05-23 21:04:53 -Generating unique operation named: saveUsingPOST_12
2019-05-23 21:04:53 -Generating unique operation named: updateUsingGET_9
2019-05-23 21:04:53 -Generating unique operation named: updateUsingHEAD_9
2019-05-23 21:04:53 -Generating unique operation named: updateUsingPOST_13
2019-05-23 21:04:53 -Generating unique operation named: updateUsingPUT_9
2019-05-23 21:04:53 -Generating unique operation named: updateUsingPATCH_9
2019-05-23 21:04:53 -Generating unique operation named: updateUsingDELETE_9
2019-05-23 21:04:53 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-23 21:04:53 -Generating unique operation named: updateUsingTRACE_9
2019-05-23 21:04:53 -Generating unique operation named: addUsingGET_13
2019-05-23 21:04:53 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-23 21:04:53 -Generating unique operation named: editUsingGET_14
2019-05-23 21:04:53 -Generating unique operation named: listUsingGET_15
2019-05-23 21:04:53 -Generating unique operation named: saveUsingPOST_13
2019-05-23 21:04:53 -Generating unique operation named: saveUsingPOST_14
2019-05-23 21:04:53 -Generating unique operation named: updateUsingPOST_14
2019-05-23 21:04:53 -Generating unique operation named: listUsingGET_16
2019-05-23 21:04:53 -Generating unique operation named: listUsingHEAD_1
2019-05-23 21:04:53 -Generating unique operation named: listUsingPOST_1
2019-05-23 21:04:53 -Generating unique operation named: listUsingPUT_1
2019-05-23 21:04:53 -Generating unique operation named: listUsingPATCH_1
2019-05-23 21:04:53 -Generating unique operation named: listUsingDELETE_1
2019-05-23 21:04:53 -Generating unique operation named: listUsingOPTIONS_1
2019-05-23 21:04:53 -Generating unique operation named: listUsingTRACE_1
2019-05-23 21:04:54 -Generating unique operation named: countDDUsingGET_1
2019-05-23 21:04:54 -Generating unique operation named: exportDDUsingGET_1
2019-05-23 21:04:54 -Generating unique operation named: addUsingGET_14
2019-05-23 21:04:54 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-23 21:04:54 -Generating unique operation named: editUsingGET_15
2019-05-23 21:04:54 -Generating unique operation named: listUsingGET_17
2019-05-23 21:04:54 -Generating unique operation named: removeUsingPOST_26
2019-05-23 21:04:54 -Generating unique operation named: saveUsingPOST_15
2019-05-23 21:04:54 -Generating unique operation named: treeUsingGET_3
2019-05-23 21:04:54 -Generating unique operation named: treeViewUsingGET_1
2019-05-23 21:04:54 -Generating unique operation named: updateUsingPOST_15
2019-05-23 21:04:54 -Generating unique operation named: addUsingGET_15
2019-05-23 21:04:54 -Generating unique operation named: editUsingGET_16
2019-05-23 21:04:54 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-23 21:04:54 -Generating unique operation named: listUsingGET_18
2019-05-23 21:04:54 -Generating unique operation named: removeUsingPOST_27
2019-05-23 21:04:54 -Generating unique operation named: removeUsingPOST_28
2019-05-23 21:04:54 -Generating unique operation named: saveUsingPOST_16
2019-05-23 21:04:54 -Generating unique operation named: updateUsingGET_10
2019-05-23 21:04:54 -Generating unique operation named: updateUsingHEAD_10
2019-05-23 21:04:54 -Generating unique operation named: updateUsingPOST_16
2019-05-23 21:04:54 -Generating unique operation named: updateUsingPUT_10
2019-05-23 21:04:54 -Generating unique operation named: updateUsingPATCH_10
2019-05-23 21:04:54 -Generating unique operation named: updateUsingDELETE_10
2019-05-23 21:04:54 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-23 21:04:54 -Generating unique operation named: updateUsingTRACE_10
2019-05-23 21:04:54 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-23 21:04:54 -Generating unique operation named: addUsingGET_16
2019-05-23 21:04:54 -Generating unique operation named: editUsingGET_17
2019-05-23 21:04:54 -Generating unique operation named: listUsingGET_19
2019-05-23 21:04:54 -Generating unique operation named: removeUsingPOST_29
2019-05-23 21:04:54 -Generating unique operation named: removeUsingPOST_30
2019-05-23 21:04:54 -Generating unique operation named: saveUsingPOST_17
2019-05-23 21:04:54 -Generating unique operation named: updateUsingGET_11
2019-05-23 21:04:54 -Generating unique operation named: updateUsingHEAD_11
2019-05-23 21:04:54 -Generating unique operation named: updateUsingPOST_17
2019-05-23 21:04:54 -Generating unique operation named: updateUsingPUT_11
2019-05-23 21:04:54 -Generating unique operation named: updateUsingPATCH_11
2019-05-23 21:04:54 -Generating unique operation named: updateUsingDELETE_11
2019-05-23 21:04:54 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-23 21:04:54 -Generating unique operation named: updateUsingTRACE_11
2019-05-23 21:04:54 -Generating unique operation named: addUsingGET_17
2019-05-23 21:04:54 -Generating unique operation named: editUsingGET_18
2019-05-23 21:04:54 -Generating unique operation named: listUsingGET_20
2019-05-23 21:04:54 -Generating unique operation named: removeUsingPOST_31
2019-05-23 21:04:54 -Generating unique operation named: removeUsingPOST_32
2019-05-23 21:04:54 -Generating unique operation named: saveUsingPOST_18
2019-05-23 21:04:54 -Generating unique operation named: updateUsingGET_12
2019-05-23 21:04:54 -Generating unique operation named: updateUsingHEAD_12
2019-05-23 21:04:54 -Generating unique operation named: updateUsingPOST_18
2019-05-23 21:04:54 -Generating unique operation named: updateUsingPUT_12
2019-05-23 21:04:54 -Generating unique operation named: updateUsingPATCH_12
2019-05-23 21:04:54 -Generating unique operation named: updateUsingDELETE_12
2019-05-23 21:04:54 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-23 21:04:54 -Generating unique operation named: updateUsingTRACE_12
2019-05-23 21:04:54 -Starting Quartz Scheduler now
2019-05-23 21:04:54 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-23 21:04:54 -Starting...
2019-05-23 21:04:54 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-23 21:04:54 -Started.
2019-05-23 21:04:54 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-23 21:04:55 -Using a shared selector for servlet write/read
2019-05-23 21:04:55 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-23 21:04:55 -Started BootdoApplication in 36.815 seconds (JVM running for 37.572)
2019-05-23 21:04:55 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-23 21:04:55 -==> Parameters: 
2019-05-23 21:04:55 -<==      Total: 1
2019-05-23 21:05:43 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-05-23 21:12:02 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-23 21:12:02 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-23 21:12:02 -FrameworkServlet 'dispatcherServlet': initialization completed in 91 ms
2019-05-23 21:12:02 -Enabling session validation scheduler...
2019-05-23 21:12:02 -请求地址 : http://localhost:8081/login;JSESSIONID=0b513b8e-c457-4765-a93f-56745c6b4b5a
2019-05-23 21:12:02 -HTTP METHOD : GET
2019-05-23 21:12:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-23 21:12:02 -参数 : [{}]
2019-05-23 21:12:02 -耗时 : 5
2019-05-23 21:12:02 -返回值 : login
2019-05-23 21:12:05 -请求地址 : http://localhost:8081/getVerify
2019-05-23 21:12:05 -HTTP METHOD : GET
2019-05-23 21:12:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-23 21:12:05 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@64439bd1, org.apache.shiro.web.servlet.ShiroHttpServletResponse@607c0381]
2019-05-23 21:12:13 -2701
2019-05-23 21:12:13 -耗时 : 8002
2019-05-23 21:12:13 -返回值 : null
2019-05-23 21:12:17 -请求地址 : http://localhost:8081/login
2019-05-23 21:12:17 -HTTP METHOD : POST
2019-05-23 21:12:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-23 21:12:17 -参数 : [admin, 111111, 2701, org.apache.shiro.web.servlet.ShiroHttpServletRequest@13943248]
2019-05-23 21:12:17 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-23 21:12:17 -==> Parameters: admin(String)
2019-05-23 21:12:17 -<==      Total: 1
2019-05-23 21:12:17 -耗时 : 418
2019-05-23 21:12:17 -返回值 : {msg=操作成功, code=0}
2019-05-23 21:12:17 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-23 21:12:17 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-23 21:12:17 -==> Parameters: 1(Long), admin(String), 登录(String), 418(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-23 21:12:17.956(Timestamp)
2019-05-23 21:12:18 -<==    Updates: 1
2019-05-23 21:12:18 -请求地址 : http://localhost:8081/index
2019-05-23 21:12:18 -HTTP METHOD : GET
2019-05-23 21:12:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-23 21:12:18 -参数 : [{}]
2019-05-23 21:12:18 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-23 21:12:18 -==> Parameters: 1(Long)
2019-05-23 21:12:19 -<==      Total: 49
2019-05-23 21:12:19 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-23 21:12:19 -==> Parameters: 138(Long)
2019-05-23 21:12:19 -<==      Total: 1
2019-05-23 21:12:19 -耗时 : 976
2019-05-23 21:12:19 -返回值 : index_v1
2019-05-23 21:12:19 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-23 21:12:19 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 977(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-23 21:12:19.677(Timestamp)
2019-05-23 21:12:20 -<==    Updates: 1
2019-05-23 21:12:20 -请求地址 : http://localhost:8081/main
2019-05-23 21:12:20 -HTTP METHOD : GET
2019-05-23 21:12:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-23 21:12:20 -参数 : []
2019-05-23 21:12:20 -耗时 : 0
2019-05-23 21:12:20 -返回值 : main
2019-05-23 21:12:22 -请求地址 : http://localhost:8081/main
2019-05-23 21:12:22 -HTTP METHOD : GET
2019-05-23 21:12:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-23 21:12:22 -参数 : []
2019-05-23 21:12:22 -耗时 : 2
2019-05-23 21:12:22 -返回值 : main
2019-05-23 21:12:22 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-23 21:12:22 -HTTP METHOD : GET
2019-05-23 21:12:22 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-23 21:12:22 -参数 : []
2019-05-23 21:12:22 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-23 21:12:22 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-23 21:12:22 -<==      Total: 0
2019-05-23 21:12:22 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-23 21:12:22 -==> Parameters: 1(Long), 0(String)
2019-05-23 21:12:22 -<==      Total: 1
2019-05-23 21:12:22 -耗时 : 722
2019-05-23 21:12:22 -返回值 : com.bootdo.common.utils.PageUtils@5ed867b
2019-05-23 21:12:30 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-23 21:12:30 -==> Parameters: 1(Long)
2019-05-23 21:12:30 -<==      Total: 93
2019-05-23 21:12:30 -请求地址 : http://localhost:8081/print/print
2019-05-23 21:12:30 -HTTP METHOD : GET
2019-05-23 21:12:30 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-05-23 21:12:30 -参数 : []
2019-05-23 21:12:30 -耗时 : 0
2019-05-23 21:12:30 -返回值 : print/print/print
2019-05-23 21:12:31 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-23 21:12:31 -HTTP METHOD : GET
2019-05-23 21:12:31 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-23 21:12:31 -参数 : [userType]
2019-05-23 21:12:31 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-23 21:12:31 -==> Parameters: userType(String)
2019-05-23 21:12:31 -请求地址 : http://localhost:8081/print/print/list
2019-05-23 21:12:31 -HTTP METHOD : GET
2019-05-23 21:12:31 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-05-23 21:12:31 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-05-23 21:12:31 -<==      Total: 4
2019-05-23 21:12:31 -耗时 : 82
2019-05-23 21:12:31 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-23 21:12:31 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-05-23 21:12:31 -==> Parameters: 0(Integer), 10(Integer)
2019-05-23 21:12:31 -<==      Total: 10
2019-05-23 21:12:31 -==>  Preparing: select count(*) from print 
2019-05-23 21:12:31 -==> Parameters: 
2019-05-23 21:12:31 -<==      Total: 1
2019-05-23 21:12:31 -耗时 : 453
2019-05-23 21:12:31 -返回值 : com.bootdo.common.utils.PageUtils@63e6d7f4
2019-05-23 21:13:17 -请求地址 : http://localhost:8081/print/print/edit/1
2019-05-23 21:13:17 -HTTP METHOD : GET
2019-05-23 21:13:17 -CLASS_METHOD : com.bootdo.print.controller.PrintController.edit
2019-05-23 21:13:17 -参数 : [1, {}]
2019-05-23 21:13:17 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-05-23 21:13:17 -==> Parameters: 1(Long)
2019-05-23 21:13:17 -<==      Total: 1
2019-05-23 21:13:17 -耗时 : 12
2019-05-23 21:13:17 -返回值 : print/print/edit
2019-05-23 21:13:17 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-23 21:13:17 -HTTP METHOD : GET
2019-05-23 21:13:17 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-23 21:13:17 -参数 : [userType]
2019-05-23 21:13:17 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-23 21:13:17 -==> Parameters: userType(String)
2019-05-23 21:13:17 -<==      Total: 4
2019-05-23 21:13:17 -耗时 : 5
2019-05-23 21:13:17 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-23 21:13:29 -请求地址 : http://localhost:8081/print/print/add
2019-05-23 21:13:29 -HTTP METHOD : GET
2019-05-23 21:13:29 -CLASS_METHOD : com.bootdo.print.controller.PrintController.add
2019-05-23 21:13:29 -参数 : []
2019-05-23 21:13:29 -耗时 : 0
2019-05-23 21:13:29 -返回值 : print/print/add
2019-05-23 21:13:29 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-23 21:13:29 -HTTP METHOD : GET
2019-05-23 21:13:29 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-23 21:13:29 -参数 : [userType]
2019-05-23 21:13:29 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-23 21:13:29 -==> Parameters: userType(String)
2019-05-23 21:13:29 -<==      Total: 4
2019-05-23 21:13:29 -耗时 : 5
2019-05-23 21:13:29 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-23 21:13:39 -请求地址 : http://localhost:8081/print/print/add
2019-05-23 21:13:39 -HTTP METHOD : GET
2019-05-23 21:13:39 -CLASS_METHOD : com.bootdo.print.controller.PrintController.add
2019-05-23 21:13:39 -参数 : []
2019-05-23 21:13:39 -耗时 : 0
2019-05-23 21:13:39 -返回值 : print/print/add
2019-05-23 21:13:39 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-23 21:13:39 -HTTP METHOD : GET
2019-05-23 21:13:39 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-23 21:13:39 -参数 : [userType]
2019-05-23 21:13:39 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-23 21:13:39 -==> Parameters: userType(String)
2019-05-23 21:13:39 -<==      Total: 4
2019-05-23 21:13:39 -耗时 : 13
2019-05-23 21:13:39 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-23 21:13:42 -请求地址 : http://localhost:8081/print/print/add
2019-05-23 21:13:42 -HTTP METHOD : GET
2019-05-23 21:13:42 -CLASS_METHOD : com.bootdo.print.controller.PrintController.add
2019-05-23 21:13:42 -参数 : []
2019-05-23 21:13:42 -耗时 : 0
2019-05-23 21:13:42 -返回值 : print/print/add
2019-05-23 21:13:43 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-23 21:13:43 -HTTP METHOD : GET
2019-05-23 21:13:43 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-23 21:13:43 -参数 : [userType]
2019-05-23 21:13:43 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-23 21:13:43 -==> Parameters: userType(String)
2019-05-23 21:13:43 -<==      Total: 4
2019-05-23 21:13:43 -耗时 : 6
2019-05-23 21:13:43 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-23 21:15:40 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-05-23 21:15:40 -HTTP METHOD : GET
2019-05-23 21:15:40 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-05-23 21:15:40 -参数 : []
2019-05-23 21:15:40 -耗时 : 0
2019-05-23 21:15:40 -返回值 : /moneyLog/elecLog/elecLog
2019-05-23 21:15:40 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-23 21:15:40 -HTTP METHOD : GET
2019-05-23 21:15:40 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-23 21:15:40 -参数 : [userType]
2019-05-23 21:15:40 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-23 21:15:40 -==> Parameters: userType(String)
2019-05-23 21:15:40 -<==      Total: 4
2019-05-23 21:15:40 -耗时 : 10
2019-05-23 21:15:40 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-23 21:15:40 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-05-23 21:15:40 -HTTP METHOD : GET
2019-05-23 21:15:40 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-23 21:15:40 -参数 : [elecType]
2019-05-23 21:15:40 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-23 21:15:40 -==> Parameters: elecType(String)
2019-05-23 21:15:40 -<==      Total: 11
2019-05-23 21:15:40 -耗时 : 6
2019-05-23 21:15:40 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-23 21:15:40 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-05-23 21:15:40 -HTTP METHOD : GET
2019-05-23 21:15:40 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-05-23 21:15:40 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, elecDate=}]
2019-05-23 21:15:40 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-05-23 21:15:40 -==> Parameters: 0(Integer), 10(Integer)
2019-05-23 21:15:40 -<==      Total: 10
2019-05-23 21:15:40 -==>  Preparing: select count(*) from elec_log 
2019-05-23 21:15:40 -==> Parameters: 
2019-05-23 21:15:40 -<==      Total: 1
2019-05-23 21:15:40 -耗时 : 187
2019-05-23 21:15:40 -返回值 : com.bootdo.common.utils.PageUtils@4faec2d0
2019-05-23 21:15:40 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-05-23 21:15:40 -HTTP METHOD : GET
2019-05-23 21:15:40 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-05-23 21:15:40 -参数 : []
2019-05-23 21:15:40 -耗时 : 1
2019-05-23 21:15:40 -返回值 : /moneyList/moneyList
2019-05-23 21:15:53 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-05-23 21:15:53 -HTTP METHOD : GET
2019-05-23 21:15:53 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-05-23 21:15:53 -参数 : []
2019-05-23 21:15:53 -耗时 : 1
2019-05-23 21:15:53 -返回值 : /moneyLog/heatLog/heatLog
2019-05-23 21:15:53 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-23 21:15:53 -HTTP METHOD : GET
2019-05-23 21:15:53 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-23 21:15:53 -参数 : [userType]
2019-05-23 21:15:53 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-23 21:15:53 -==> Parameters: userType(String)
2019-05-23 21:15:53 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-05-23 21:15:53 -HTTP METHOD : GET
2019-05-23 21:15:53 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-23 21:15:53 -参数 : [heatType]
2019-05-23 21:15:53 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-23 21:15:53 -<==      Total: 4
2019-05-23 21:15:53 -==> Parameters: heatType(String)
2019-05-23 21:15:53 -耗时 : 6
2019-05-23 21:15:53 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-23 21:15:53 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-05-23 21:15:53 -HTTP METHOD : GET
2019-05-23 21:15:53 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-05-23 21:15:53 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-05-23 21:15:53 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-05-23 21:15:53 -==> Parameters: 0(Integer), 10(Integer)
2019-05-23 21:15:53 -<==      Total: 4
2019-05-23 21:15:53 -耗时 : 189
2019-05-23 21:15:53 -返回值 : [DictDO{id=184, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=183, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=182, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=181, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-23 21:15:54 -<==      Total: 10
2019-05-23 21:15:54 -==>  Preparing: select count(*) from heat_log 
2019-05-23 21:15:54 -==> Parameters: 
2019-05-23 21:15:54 -<==      Total: 1
2019-05-23 21:15:54 -耗时 : 288
2019-05-23 21:15:54 -返回值 : com.bootdo.common.utils.PageUtils@2772cbcc
2019-05-23 21:15:54 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-05-23 21:15:54 -HTTP METHOD : GET
2019-05-23 21:15:54 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-05-23 21:15:54 -参数 : []
2019-05-23 21:15:54 -耗时 : 0
2019-05-23 21:15:54 -返回值 : /moneyLog/waterLog/waterLog
2019-05-23 21:15:54 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-23 21:15:54 -HTTP METHOD : GET
2019-05-23 21:15:54 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-23 21:15:54 -参数 : [userType]
2019-05-23 21:15:54 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-23 21:15:54 -==> Parameters: userType(String)
2019-05-23 21:15:54 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-05-23 21:15:54 -HTTP METHOD : GET
2019-05-23 21:15:54 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-23 21:15:54 -参数 : [waterType]
2019-05-23 21:15:54 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-23 21:15:54 -==> Parameters: waterType(String)
2019-05-23 21:15:54 -<==      Total: 4
2019-05-23 21:15:54 -耗时 : 6
2019-05-23 21:15:54 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-23 21:15:54 -<==      Total: 4
2019-05-23 21:15:54 -耗时 : 10
2019-05-23 21:15:54 -返回值 : [DictDO{id=188, name='民用水', value='1', type='waterType', description='水费性质', sort=10, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=187, name='商业水1', value='2', type='waterType', description='水费性质', sort=20, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=186, name='商业水2', value='3', type='waterType', description='水费性质', sort=30, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=185, name='商业水3', value='4', type='waterType', description='水费性质', sort=40, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-23 21:15:54 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-05-23 21:15:54 -HTTP METHOD : GET
2019-05-23 21:15:54 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-05-23 21:15:54 -参数 : [{limit=10, offset=0, userType=, waterType=, userOrg=, userId=, waterDate=}]
2019-05-23 21:15:54 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-05-23 21:15:54 -==> Parameters: 0(Integer), 10(Integer)
2019-05-23 21:15:54 -<==      Total: 10
2019-05-23 21:15:54 -==>  Preparing: select count(*) from water_log 
2019-05-23 21:15:54 -==> Parameters: 
2019-05-23 21:15:54 -<==      Total: 1
2019-05-23 21:15:54 -耗时 : 173
2019-05-23 21:15:54 -返回值 : com.bootdo.common.utils.PageUtils@5105182
2019-05-23 21:15:54 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-05-23 21:15:54 -HTTP METHOD : GET
2019-05-23 21:15:54 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-05-23 21:15:54 -参数 : []
2019-05-23 21:15:54 -耗时 : 0
2019-05-23 21:15:54 -返回值 : /moneyLog/heatLog/heatLog
2019-05-23 21:15:55 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-05-23 21:15:55 -HTTP METHOD : GET
2019-05-23 21:15:55 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-23 21:15:55 -参数 : [heatType]
2019-05-23 21:15:55 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-23 21:15:55 -HTTP METHOD : GET
2019-05-23 21:15:55 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-23 21:15:55 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-23 21:15:55 -参数 : [userType]
2019-05-23 21:15:55 -==> Parameters: heatType(String)
2019-05-23 21:15:55 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-23 21:15:55 -==> Parameters: userType(String)
2019-05-23 21:15:55 -<==      Total: 4
2019-05-23 21:15:55 -<==      Total: 4
2019-05-23 21:15:55 -耗时 : 4
2019-05-23 21:15:55 -耗时 : 4
2019-05-23 21:15:55 -返回值 : [DictDO{id=184, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=183, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=182, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=181, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-23 21:15:55 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-23 21:15:55 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-05-23 21:15:55 -HTTP METHOD : GET
2019-05-23 21:15:55 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-05-23 21:15:55 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-05-23 21:15:55 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-05-23 21:15:55 -==> Parameters: 0(Integer), 10(Integer)
2019-05-23 21:15:55 -<==      Total: 10
2019-05-23 21:15:55 -==>  Preparing: select count(*) from heat_log 
2019-05-23 21:15:55 -==> Parameters: 
2019-05-23 21:15:55 -<==      Total: 1
2019-05-23 21:15:55 -耗时 : 20
2019-05-23 21:15:55 -返回值 : com.bootdo.common.utils.PageUtils@7571f224
2019-05-23 21:15:55 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-05-23 21:15:55 -HTTP METHOD : GET
2019-05-23 21:15:55 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-05-23 21:15:55 -参数 : []
2019-05-23 21:15:55 -耗时 : 0
2019-05-23 21:15:55 -返回值 : /moneyLog/elecLog/elecLog
2019-05-23 21:15:55 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-23 21:15:55 -HTTP METHOD : GET
2019-05-23 21:15:55 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-23 21:15:55 -参数 : [userType]
2019-05-23 21:15:55 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-05-23 21:15:55 -HTTP METHOD : GET
2019-05-23 21:15:55 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-23 21:15:55 -参数 : [elecType]
2019-05-23 21:15:55 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-23 21:15:55 -==> Parameters: elecType(String)
2019-05-23 21:15:55 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-23 21:15:55 -==> Parameters: userType(String)
2019-05-23 21:15:55 -<==      Total: 11
2019-05-23 21:15:55 -耗时 : 12
2019-05-23 21:15:55 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-23 21:15:55 -<==      Total: 4
2019-05-23 21:15:55 -耗时 : 14
2019-05-23 21:15:55 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-23 21:15:55 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-05-23 21:15:55 -HTTP METHOD : GET
2019-05-23 21:15:55 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-05-23 21:15:55 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, elecDate=}]
2019-05-23 21:15:55 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-05-23 21:15:55 -==> Parameters: 0(Integer), 10(Integer)
2019-05-23 21:15:55 -<==      Total: 10
2019-05-23 21:15:55 -==>  Preparing: select count(*) from elec_log 
2019-05-23 21:15:55 -==> Parameters: 
2019-05-23 21:15:55 -<==      Total: 1
2019-05-23 21:15:55 -耗时 : 88
2019-05-23 21:15:55 -返回值 : com.bootdo.common.utils.PageUtils@6f56435
2019-05-23 21:16:02 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-23 21:16:02 -HTTP METHOD : GET
2019-05-23 21:16:02 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-23 21:16:02 -参数 : []
2019-05-23 21:16:02 -耗时 : 12
2019-05-23 21:16:02 -返回值 : charts/tableElecYY
2019-05-23 21:16:02 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-23 21:16:02 -HTTP METHOD : GET
2019-05-23 21:16:02 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-23 21:16:02 -参数 : [userType]
2019-05-23 21:16:02 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-23 21:16:02 -==> Parameters: userType(String)
2019-05-23 21:16:02 -<==      Total: 4
2019-05-23 21:16:02 -耗时 : 6
2019-05-23 21:16:02 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-23 21:16:06 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-23 21:16:06 -HTTP METHOD : GET
2019-05-23 21:16:06 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-23 21:16:06 -参数 : []
2019-05-23 21:16:06 -耗时 : 0
2019-05-23 21:16:06 -返回值 : system/dept/deptTree
2019-05-23 21:16:06 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-23 21:16:06 -HTTP METHOD : GET
2019-05-23 21:16:06 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-23 21:16:06 -参数 : []
2019-05-23 21:16:06 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-23 21:16:06 -==> Parameters: 
2019-05-23 21:16:06 -<==      Total: 3
2019-05-23 21:16:06 -耗时 : 21
2019-05-23 21:16:06 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-23 21:16:09 -请求地址 : http://localhost:8081/charts/tableElecYY/tableElecYY
2019-05-23 21:16:09 -HTTP METHOD : POST
2019-05-23 21:16:09 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-23 21:16:09 -参数 : [com.bootdo.elec.vo.ElecVo@1628d361, com.bootdo.moneyLog.vo.ElecLogVo@70072ec5]
2019-05-23 21:16:09 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-23 21:16:09 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-23 21:16:09 -<==      Total: 1
2019-05-23 21:16:09 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-23 21:16:09 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-23 21:16:09 -<==      Total: 1
2019-05-23 21:16:09 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-23 21:16:09 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-23 21:16:09 -<==      Total: 1
2019-05-23 21:16:09 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-23 21:16:09 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-23 21:16:09 -<==      Total: 1
2019-05-23 21:16:09 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-23 21:16:09 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-23 21:16:09 -<==      Total: 1
2019-05-23 21:16:09 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-23 21:16:09 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-23 21:16:09 -<==      Total: 1
2019-05-23 21:16:09 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-23 21:16:09 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-23 21:16:09 -<==      Total: 1
2019-05-23 21:16:09 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-23 21:16:09 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-23 21:16:09 -<==      Total: 1
2019-05-23 21:16:09 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-23 21:16:09 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-23 21:16:09 -<==      Total: 1
2019-05-23 21:16:09 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-23 21:16:09 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-23 21:16:09 -<==      Total: 1
2019-05-23 21:16:09 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-23 21:16:09 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-23 21:16:09 -<==      Total: 1
2019-05-23 21:16:09 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-23 21:16:09 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-23 21:16:09 -<==      Total: 1
2019-05-23 21:16:09 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-23 21:16:09 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-23 21:16:09 -<==      Total: 1
2019-05-23 21:16:09 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-23 21:16:09 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-23 21:16:09 -<==      Total: 1
2019-05-23 21:16:09 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-23 21:16:09 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-23 21:16:09 -<==      Total: 1
2019-05-23 21:16:09 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-23 21:16:09 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-23 21:16:09 -<==      Total: 1
2019-05-23 21:16:09 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-23 21:16:09 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-23 21:16:09 -<==      Total: 1
2019-05-23 21:16:09 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-23 21:16:09 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-23 21:16:09 -<==      Total: 1
2019-05-23 21:16:09 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-23 21:16:09 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-23 21:16:09 -<==      Total: 1
2019-05-23 21:16:09 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-23 21:16:09 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-23 21:16:09 -<==      Total: 1
2019-05-23 21:16:09 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-23 21:16:09 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-23 21:16:09 -<==      Total: 1
2019-05-23 21:16:09 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-23 21:16:09 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-23 21:16:09 -<==      Total: 1
2019-05-23 21:16:09 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-23 21:16:09 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-23 21:16:09 -<==      Total: 1
2019-05-23 21:16:09 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-23 21:16:09 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-23 21:16:09 -<==      Total: 1
2019-05-23 21:16:09 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-23 21:16:09 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-23 21:16:09 -<==      Total: 1
2019-05-23 21:16:09 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-23 21:16:09 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-23 21:16:09 -<==      Total: 1
2019-05-23 21:16:09 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-23 21:16:09 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-23 21:16:09 -<==      Total: 1
2019-05-23 21:16:09 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-23 21:16:09 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-23 21:16:09 -<==      Total: 1
2019-05-23 21:16:09 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-23 21:16:09 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-23 21:16:09 -<==      Total: 1
2019-05-23 21:16:09 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-23 21:16:09 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-23 21:16:09 -<==      Total: 1
2019-05-23 21:16:09 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-23 21:16:09 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-23 21:16:09 -<==      Total: 1
2019-05-23 21:16:09 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-23 21:16:09 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-23 21:16:09 -<==      Total: 1
2019-05-23 21:16:09 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-23 21:16:09 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-23 21:16:09 -<==      Total: 1
2019-05-23 21:16:09 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-23 21:16:09 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-23 21:16:09 -<==      Total: 1
2019-05-23 21:16:09 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-23 21:16:09 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-23 21:16:09 -<==      Total: 1
2019-05-23 21:16:09 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-23 21:16:09 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-23 21:16:09 -<==      Total: 1
2019-05-23 21:16:09 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-23 21:16:09 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-23 21:16:09 -<==      Total: 1
2019-05-23 21:16:09 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-23 21:16:09 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-23 21:16:09 -<==      Total: 1
2019-05-23 21:16:09 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-23 21:16:09 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-23 21:16:09 -<==      Total: 1
2019-05-23 21:16:09 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-23 21:16:09 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-23 21:16:09 -<==      Total: 1
2019-05-23 21:16:09 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-23 21:16:09 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-23 21:16:09 -<==      Total: 1
2019-05-23 21:16:09 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-23 21:16:09 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-23 21:16:09 -<==      Total: 1
2019-05-23 21:16:09 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-23 21:16:09 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-23 21:16:09 -<==      Total: 1
2019-05-23 21:16:09 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-23 21:16:09 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-23 21:16:09 -<==      Total: 1
2019-05-23 21:16:09 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-23 21:16:09 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-23 21:16:09 -<==      Total: 1
2019-05-23 21:16:09 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-23 21:16:09 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-23 21:16:09 -<==      Total: 1
2019-05-23 21:16:09 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-23 21:16:09 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-23 21:16:09 -<==      Total: 1
2019-05-23 21:16:09 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-23 21:16:09 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-23 21:16:09 -<==      Total: 1
2019-05-23 21:16:09 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-23 21:16:09 -==> Parameters: 2018-12(String), 5(String), 2(String)
2019-05-23 21:16:09 -<==      Total: 1
2019-05-23 21:16:09 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-23 21:16:09 -==> Parameters: 2018-12(String), 5(String), 2(String)
2019-05-23 21:16:09 -<==      Total: 1
2019-05-23 21:16:09 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-23 21:16:09 -==> Parameters: 2018-12(String), 5(String), 2(String)
2019-05-23 21:16:09 -<==      Total: 1
2019-05-23 21:16:09 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-23 21:16:09 -==> Parameters: 2018-12(String), 5(String), 2(String)
2019-05-23 21:16:09 -<==      Total: 1
2019-05-23 21:16:09 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-23 21:16:09 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-23 21:16:09 -<==      Total: 1
2019-05-23 21:16:09 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-23 21:16:09 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-23 21:16:09 -<==      Total: 1
2019-05-23 21:16:09 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-23 21:16:09 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-23 21:16:09 -<==      Total: 1
2019-05-23 21:16:09 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-23 21:16:09 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-23 21:16:09 -<==      Total: 1
2019-05-23 21:16:09 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-23 21:16:09 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-23 21:16:09 -<==      Total: 1
2019-05-23 21:16:09 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-23 21:16:09 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-23 21:16:09 -<==      Total: 1
2019-05-23 21:16:09 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-23 21:16:09 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-23 21:16:09 -<==      Total: 1
2019-05-23 21:16:09 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-23 21:16:09 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-23 21:16:09 -<==      Total: 1
2019-05-23 21:16:09 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-23 21:16:09 -==> Parameters: 2018-12(String), 6(String), 2(String)
2019-05-23 21:16:09 -<==      Total: 1
2019-05-23 21:16:09 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-23 21:16:09 -==> Parameters: 2018-12(String), 6(String), 2(String)
2019-05-23 21:16:09 -<==      Total: 1
2019-05-23 21:16:09 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-23 21:16:09 -==> Parameters: 2018-12(String), 6(String), 2(String)
2019-05-23 21:16:09 -<==      Total: 1
2019-05-23 21:16:09 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-23 21:16:09 -==> Parameters: 2018-12(String), 6(String), 2(String)
2019-05-23 21:16:09 -<==      Total: 1
2019-05-23 21:16:09 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-23 21:16:09 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-23 21:16:09 -<==      Total: 1
2019-05-23 21:16:09 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-23 21:16:09 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-23 21:16:09 -<==      Total: 1
2019-05-23 21:16:09 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-23 21:16:09 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-23 21:16:09 -<==      Total: 1
2019-05-23 21:16:09 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-23 21:16:09 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-23 21:16:09 -<==      Total: 1
2019-05-23 21:16:09 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-23 21:16:09 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-23 21:16:09 -<==      Total: 1
2019-05-23 21:16:09 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-23 21:16:09 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-23 21:16:09 -<==      Total: 1
2019-05-23 21:16:09 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-23 21:16:09 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-23 21:16:09 -<==      Total: 1
2019-05-23 21:16:09 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-23 21:16:09 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-23 21:16:09 -<==      Total: 1
2019-05-23 21:16:09 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-23 21:16:09 -==> Parameters: 2018-12(String), 7(String), 2(String)
2019-05-23 21:16:09 -<==      Total: 1
2019-05-23 21:16:09 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-23 21:16:09 -==> Parameters: 2018-12(String), 7(String), 2(String)
2019-05-23 21:16:09 -<==      Total: 1
2019-05-23 21:16:09 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-23 21:16:09 -==> Parameters: 2018-12(String), 7(String), 2(String)
2019-05-23 21:16:09 -<==      Total: 1
2019-05-23 21:16:09 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-23 21:16:09 -==> Parameters: 2018-12(String), 7(String), 2(String)
2019-05-23 21:16:09 -<==      Total: 1
2019-05-23 21:16:09 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-23 21:16:09 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-23 21:16:09 -<==      Total: 1
2019-05-23 21:16:09 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-23 21:16:09 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-23 21:16:09 -<==      Total: 1
2019-05-23 21:16:09 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-23 21:16:09 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-23 21:16:09 -<==      Total: 1
2019-05-23 21:16:09 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-23 21:16:09 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-23 21:16:09 -<==      Total: 1
2019-05-23 21:16:09 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-23 21:16:09 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-23 21:16:09 -<==      Total: 1
2019-05-23 21:16:09 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-23 21:16:09 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-23 21:16:09 -<==      Total: 1
2019-05-23 21:16:09 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-23 21:16:09 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-23 21:16:09 -<==      Total: 1
2019-05-23 21:16:09 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-23 21:16:09 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-23 21:16:09 -<==      Total: 1
2019-05-23 21:16:09 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-23 21:16:09 -==> Parameters: 2018-12(String), 8(String), 2(String)
2019-05-23 21:16:09 -<==      Total: 1
2019-05-23 21:16:09 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-23 21:16:09 -==> Parameters: 2018-12(String), 8(String), 2(String)
2019-05-23 21:16:09 -<==      Total: 1
2019-05-23 21:16:09 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-23 21:16:09 -==> Parameters: 2018-12(String), 8(String), 2(String)
2019-05-23 21:16:09 -<==      Total: 1
2019-05-23 21:16:09 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-23 21:16:09 -==> Parameters: 2018-12(String), 8(String), 2(String)
2019-05-23 21:16:09 -<==      Total: 1
2019-05-23 21:16:09 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-23 21:16:09 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-23 21:16:09 -<==      Total: 1
2019-05-23 21:16:09 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-23 21:16:09 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-23 21:16:09 -<==      Total: 1
2019-05-23 21:16:09 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-23 21:16:09 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-23 21:16:09 -<==      Total: 1
2019-05-23 21:16:09 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-23 21:16:09 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-23 21:16:09 -<==      Total: 1
2019-05-23 21:16:09 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-23 21:16:09 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-23 21:16:09 -<==      Total: 1
2019-05-23 21:16:09 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-23 21:16:09 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-23 21:16:09 -<==      Total: 1
2019-05-23 21:16:09 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-23 21:16:09 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-23 21:16:09 -<==      Total: 1
2019-05-23 21:16:09 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-23 21:16:09 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-23 21:16:09 -<==      Total: 1
2019-05-23 21:16:09 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-23 21:16:09 -==> Parameters: 2018-12(String), 9(String), 2(String)
2019-05-23 21:16:09 -<==      Total: 1
2019-05-23 21:16:09 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-23 21:16:09 -==> Parameters: 2018-12(String), 9(String), 2(String)
2019-05-23 21:16:09 -<==      Total: 1
2019-05-23 21:16:09 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-23 21:16:09 -==> Parameters: 2018-12(String), 9(String), 2(String)
2019-05-23 21:16:09 -<==      Total: 1
2019-05-23 21:16:09 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-23 21:16:09 -==> Parameters: 2018-12(String), 9(String), 2(String)
2019-05-23 21:16:09 -<==      Total: 1
2019-05-23 21:16:09 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-23 21:16:09 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-23 21:16:09 -<==      Total: 1
2019-05-23 21:16:09 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-23 21:16:09 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-23 21:16:09 -<==      Total: 1
2019-05-23 21:16:09 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-23 21:16:09 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-23 21:16:09 -<==      Total: 1
2019-05-23 21:16:09 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-23 21:16:09 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-23 21:16:09 -<==      Total: 1
2019-05-23 21:16:09 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-23 21:16:09 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-23 21:16:09 -<==      Total: 1
2019-05-23 21:16:09 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-23 21:16:09 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-23 21:16:09 -<==      Total: 1
2019-05-23 21:16:09 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-23 21:16:09 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-23 21:16:09 -<==      Total: 1
2019-05-23 21:16:09 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-23 21:16:09 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-23 21:16:09 -<==      Total: 1
2019-05-23 21:16:09 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-23 21:16:09 -==> Parameters: 2018-12(String), 10(String), 2(String)
2019-05-23 21:16:09 -<==      Total: 1
2019-05-23 21:16:09 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-23 21:16:09 -==> Parameters: 2018-12(String), 10(String), 2(String)
2019-05-23 21:16:09 -<==      Total: 1
2019-05-23 21:16:09 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-23 21:16:09 -==> Parameters: 2018-12(String), 10(String), 2(String)
2019-05-23 21:16:09 -<==      Total: 1
2019-05-23 21:16:09 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-23 21:16:09 -==> Parameters: 2018-12(String), 10(String), 2(String)
2019-05-23 21:16:09 -<==      Total: 1
2019-05-23 21:16:09 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-23 21:16:09 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-23 21:16:09 -<==      Total: 1
2019-05-23 21:16:09 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-23 21:16:09 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-23 21:16:09 -<==      Total: 1
2019-05-23 21:16:09 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-23 21:16:09 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-23 21:16:09 -<==      Total: 1
2019-05-23 21:16:09 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-23 21:16:09 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-23 21:16:09 -<==      Total: 1
2019-05-23 21:16:09 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-23 21:16:09 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-23 21:16:09 -<==      Total: 1
2019-05-23 21:16:09 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-23 21:16:09 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-23 21:16:09 -<==      Total: 1
2019-05-23 21:16:09 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-23 21:16:09 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-23 21:16:09 -<==      Total: 1
2019-05-23 21:16:09 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-23 21:16:09 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-23 21:16:09 -<==      Total: 1
2019-05-23 21:16:09 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-23 21:16:09 -==> Parameters: 2018-12(String), 11(String), 2(String)
2019-05-23 21:16:09 -<==      Total: 1
2019-05-23 21:16:09 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-23 21:16:09 -==> Parameters: 2018-12(String), 11(String), 2(String)
2019-05-23 21:16:09 -<==      Total: 1
2019-05-23 21:16:09 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-23 21:16:09 -==> Parameters: 2018-12(String), 11(String), 2(String)
2019-05-23 21:16:09 -<==      Total: 1
2019-05-23 21:16:09 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-23 21:16:09 -==> Parameters: 2018-12(String), 11(String), 2(String)
2019-05-23 21:16:09 -<==      Total: 1
2019-05-23 21:16:10 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-23 21:16:10 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-23 21:16:10 -<==      Total: 1
2019-05-23 21:16:10 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-23 21:16:10 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-23 21:16:10 -<==      Total: 1
2019-05-23 21:16:10 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-23 21:16:10 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-23 21:16:10 -<==      Total: 1
2019-05-23 21:16:10 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-23 21:16:10 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-23 21:16:10 -<==      Total: 1
2019-05-23 21:16:10 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-23 21:16:10 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-23 21:16:10 -<==      Total: 1
2019-05-23 21:16:10 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-23 21:16:10 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-23 21:16:10 -<==      Total: 1
2019-05-23 21:16:10 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-23 21:16:10 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-23 21:16:10 -<==      Total: 1
2019-05-23 21:16:10 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-23 21:16:10 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-23 21:16:10 -<==      Total: 1
2019-05-23 21:16:10 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-23 21:16:10 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-23 21:16:10 -<==      Total: 1
2019-05-23 21:16:10 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-23 21:16:10 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-23 21:16:10 -<==      Total: 1
2019-05-23 21:16:10 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-23 21:16:10 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-23 21:16:10 -<==      Total: 1
2019-05-23 21:16:10 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-23 21:16:10 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-23 21:16:10 -<==      Total: 1
2019-05-23 21:16:10 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-23 21:16:10 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-23 21:16:10 -<==      Total: 1
2019-05-23 21:16:10 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-23 21:16:10 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-23 21:16:10 -<==      Total: 1
2019-05-23 21:16:10 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-23 21:16:10 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-23 21:16:10 -<==      Total: 1
2019-05-23 21:16:10 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-23 21:16:10 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-23 21:16:10 -<==      Total: 1
2019-05-23 21:16:10 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-23 21:16:10 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-23 21:16:10 -<==      Total: 1
2019-05-23 21:16:10 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-23 21:16:10 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-23 21:16:10 -<==      Total: 1
2019-05-23 21:16:10 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-23 21:16:10 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-23 21:16:10 -<==      Total: 1
2019-05-23 21:16:10 -==>  Preparing: select m_elec,s_elec,g1_elec,g2_elec,g3_elec,wm_elec,ws_elec,wg_elec,mm_elec,ms_elec,z_elec,elec_org from elec_price 
2019-05-23 21:16:10 -==> Parameters: 
2019-05-23 21:16:10 -<==      Total: 2
2019-05-23 21:16:10 -耗时 : 1031
2019-05-23 21:16:10 -返回值 : {WGOweElecSumYYNew=0, G1OweElecCountYYNew=0, G3TotalyuNew=-1, MMPreElecSumYYNew=1, MMOweElecCountYYNew=0, TotalPreyuNew=202, WGTotalyuNew=0, TotalCostyu=304, SElecPrice=2, WSElecPrice=0, WGTotalhuOld=0, WMPreElecSumYYOld=0, SElecLogYYSum=80, G3TotalhuOld=0, G1PreElecSumYYOld=0, TotalOwehuNew=2, TotalCosthu=8, MSTotalyuOld=0, WSOweElecCountYYNew=0, ZOweElecCountYYOld=0, STotalhuNew=0, MTotalyuOld=0, G2PreElecSumYYNew=100, G1OweElecSumYYNew=0, ZElecPrice=0, G1ElecLogYYCount=0, MMTotalhuNew=1, G2OweElecCountYYOld=0, WMOweElecSumYYNew=0, G2PreElecCountYYOld=0, WGPreElecSumYYOld=0, SElecLogYYCount=2, ZTotalyuOld=0, G3PreElecSumYYNew=0, ZElecLogYYSum=0, WSPreElecCountYYNew=0, WGElecPrice=0, WMTotalyuOld=0, WSElecLogYYCount=1, WSTotalhuNew=0, MOweElecSumYYOld=0, ZElecCostYYCount=0, MOweElecCountYYOld=0, AmountTotalYY=0, G1ElecPrice=0, G2OweElecSumYYNew=0, WSOweElecSumYYOld=0, MSPreElecSumYYOld=0, G3OweElecCountYYOld=0, SElecCostYYCount=1, MSPreElecCountYYOld=0, ZOweElecSumYYOld=0, MElecLogYYCount=16, G1PreElecCountYYOld=0, MMPreElecCountYYOld=0, MElecLogYYSum=4374, G2TotalyuNew=100, G2TotalhuOld=0, MMOweElecSumYYNew=0, WGOweElecCountYYNew=0, WGPreElecCountYYOld=0, TotalAllyuOld=0, ZTotalyuNew=0, WGElecLogYYCount=1, MMOweElecCountYYOld=0, WSPreElecCountYYOld=0, MSTotalhuOld=0, SOweElecSumYYOld=0, ZElecAmountYY=0, STotalyuNew=0, SOweElecCountYYNew=0, MMTotalyuNew=1, WGTotalyuOld=0, MSElecCostYYSum=0, TotalPreyuOld=0, G3TotalyuOld=0, G1OweElecCountYYOld=0, MPreElecCountYYOld=0, WMPreElecSumYYNew=1, WMOweElecCountYYOld=0, G1ElecAmountYY=0, STotalhuOld=0, G2PreElecCountYYNew=1, G3ElecAmountYY=0, WSOweElecSumYYNew=0, G2ElecCostYYCount=1, MPreElecSumYYOld=0, MMTotalhuOld=0, WSOweElecCountYYOld=0, MSTotalyuNew=0, G3PreElecSumYYOld=0, MMPreElecSumYYOld=0, MTotalhuNew=1, MTotalyuNew=-1, G2OweElecCountYYNew=0, G1TotalyuNew=100, G3ElecPrice=0, WMOweElecSumYYOld=0, SPreElecCountYYNew=0, ZTotalhuOld=0, G3ElecCostYYCount=1, WSElecLogYYSum=80, G2OweElecSumYYOld=0, WGElecAmountYY=0, ZElecCostYYSum=0, WMElecAmountYY=0, MElecCostYYCount=2, G1TotalhuOld=0, MSElecCostYYCount=0, MSPreElecSumYYNew=0, MOweElecCountYYNew=1, TotalOweyuNew=-2, MSOweElecCountYYOld=0, TotalPrehuOld=0, WGElecLogYYSum=10, TotalOwehuOld=0, WGOweElecCountYYOld=0, WSElecAmountYY=0, WMElecLogYYSum=0, G2TotalyuOld=0, TotalAllyuNew=200, TotalAllhuOld=0, STotalyuOld=0, SElecCostYYSum=100, MPreElecCountYYNew=0, SOweElecSumYYNew=0, WMElecCostYYSum=1, G3ElecCostYYSum=1, MMTotalyuOld=0, MMElecCostYYSum=1, type=2, SOweElecCountYYOld=0, MSTotalhuNew=0, G3PreElecCountYYNew=0, G3OweElecSumYYOld=0, WSTotalyuOld=0, G1ElecCostYYCount=1, WMElecCostYYCount=1, ZOweElecSumYYNew=0, MElecPrice=1, WGElecCostYYCount=0, TotalLogyu=4636, ZTotalhuNew=0, WMElecPrice=0, MPreElecSumYYNew=0, G2ElecLogYYSum=0, G1ElecLogYYSum=0, G3ElecLogYYSum=90, TotalLoghu=23, SPreElecCountYYOld=0, TotalOweyuOld=0, MSOweElecSumYYOld=0, WSElecCostYYCount=0, MSOweElecCountYYNew=0, WSPreElecSumYYNew=0, ZPreElecSumYYNew=0, G2ElecCostYYSum=100, MTotalhuOld=0, G1TotalyuOld=0, TotalPrehuNew=4, WMOweElecCountYYNew=0, WMPreElecCountYYOld=0, G3TotalhuNew=1, SPreElecSumYYNew=0, MMElecLogYYCount=1, PriceTotal=3, ZPreElecCountYYNew=0, WMTotalhuNew=1, WGTotalhuNew=0, MElecAmountYY=0, TotalAllhuNew=6, G1ElecCostYYSum=0, MMElecCostYYCount=1, WGOweElecSumYYOld=0, WSElecCostYYSum=0, G3PreElecCountYYOld=0, G2TotalhuNew=1, G3OweElecSumYYNew=-1, G1PreElecSumYYNew=100, SElecAmountYY=0, WGElecCostYYSum=0, MElecCostYYSum=101, WGPreElecSumYYNew=0, G2PreElecSumYYOld=0, G2ElecAmountYY=0, G2ElecPrice=0, MSElecAmountYY=0, WSTotalyuNew=0, G1TotalhuNew=1, G1OweElecSumYYOld=0, MMElecPrice=0, MMElecLogYYSum=1, MSOweElecSumYYNew=0, WMTotalyuNew=1, WSPreElecSumYYOld=0, MSElecLogYYSum=1, ZPreElecSumYYOld=0, MSElecLogYYCount=1, ZPreElecCountYYOld=0, MOweElecSumYYNew=-1, MSElecPrice=0, WMPreElecCountYYNew=1, MMPreElecCountYYNew=1, WSTotalhuOld=0, G2ElecLogYYCount=0, ZOweElecCountYYNew=0, WMElecLogYYCount=0, WMTotalhuOld=0, WGPreElecCountYYNew=0, G3OweElecCountYYNew=1, MSPreElecCountYYNew=0, MMOweElecSumYYOld=0, ZElecLogYYCount=0, MMElecAmountYY=0, G1PreElecCountYYNew=1, SPreElecSumYYOld=0, G3ElecLogYYCount=1}
2019-05-23 21:17:01 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-23 21:17:01 -HTTP METHOD : GET
2019-05-23 21:17:01 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-23 21:17:01 -参数 : []
2019-05-23 21:17:01 -耗时 : 11
2019-05-23 21:17:01 -返回值 : charts/tableHeatYY
2019-05-23 21:17:01 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-23 21:17:01 -HTTP METHOD : GET
2019-05-23 21:17:01 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-23 21:17:01 -参数 : [userType]
2019-05-23 21:17:01 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-23 21:17:01 -==> Parameters: userType(String)
2019-05-23 21:17:01 -<==      Total: 4
2019-05-23 21:17:01 -耗时 : 5
2019-05-23 21:17:01 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-23 21:17:02 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-23 21:17:02 -HTTP METHOD : GET
2019-05-23 21:17:02 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-23 21:17:02 -参数 : []
2019-05-23 21:17:02 -耗时 : 0
2019-05-23 21:17:02 -返回值 : charts/tableElecYY
2019-05-23 21:17:02 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-23 21:17:02 -HTTP METHOD : GET
2019-05-23 21:17:02 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-23 21:17:02 -参数 : [userType]
2019-05-23 21:17:02 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-23 21:17:02 -==> Parameters: userType(String)
2019-05-23 21:17:02 -<==      Total: 4
2019-05-23 21:17:02 -耗时 : 6
2019-05-23 21:17:02 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-23 21:17:02 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-05-23 21:17:02 -HTTP METHOD : GET
2019-05-23 21:17:02 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-23 21:17:02 -参数 : []
2019-05-23 21:17:02 -耗时 : 7
2019-05-23 21:17:02 -返回值 : charts/tableWaterYY
2019-05-23 21:17:03 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-23 21:17:03 -HTTP METHOD : GET
2019-05-23 21:17:03 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-23 21:17:03 -参数 : [userType]
2019-05-23 21:17:03 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-23 21:17:03 -==> Parameters: userType(String)
2019-05-23 21:17:03 -<==      Total: 4
2019-05-23 21:17:03 -耗时 : 5
2019-05-23 21:17:03 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-23 21:17:03 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-23 21:17:03 -HTTP METHOD : GET
2019-05-23 21:17:03 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-23 21:17:03 -参数 : []
2019-05-23 21:17:03 -耗时 : 0
2019-05-23 21:17:03 -返回值 : charts/tableHeatYY
2019-05-23 21:17:03 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-23 21:17:03 -HTTP METHOD : GET
2019-05-23 21:17:03 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-23 21:17:03 -参数 : [userType]
2019-05-23 21:17:03 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-23 21:17:03 -==> Parameters: userType(String)
2019-05-23 21:17:03 -<==      Total: 4
2019-05-23 21:17:03 -耗时 : 5
2019-05-23 21:17:03 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-23 21:17:03 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-23 21:17:03 -HTTP METHOD : GET
2019-05-23 21:17:03 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-23 21:17:03 -参数 : []
2019-05-23 21:17:03 -耗时 : 0
2019-05-23 21:17:03 -返回值 : charts/tableElecYY
2019-05-23 21:17:03 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-23 21:17:03 -HTTP METHOD : GET
2019-05-23 21:17:03 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-23 21:17:03 -参数 : [userType]
2019-05-23 21:17:03 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-23 21:17:03 -==> Parameters: userType(String)
2019-05-23 21:17:03 -<==      Total: 4
2019-05-23 21:17:03 -耗时 : 5
2019-05-23 21:17:03 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-23 21:17:04 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-23 21:17:04 -HTTP METHOD : GET
2019-05-23 21:17:04 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-23 21:17:04 -参数 : []
2019-05-23 21:17:04 -耗时 : 0
2019-05-23 21:17:04 -返回值 : charts/tableHeatYY
2019-05-23 21:17:04 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-23 21:17:04 -HTTP METHOD : GET
2019-05-23 21:17:04 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-23 21:17:04 -参数 : [userType]
2019-05-23 21:17:04 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-23 21:17:04 -==> Parameters: userType(String)
2019-05-23 21:17:04 -<==      Total: 4
2019-05-23 21:17:04 -耗时 : 4
2019-05-23 21:17:04 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-23 21:17:04 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-05-23 21:17:04 -HTTP METHOD : GET
2019-05-23 21:17:04 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-23 21:17:04 -参数 : []
2019-05-23 21:17:04 -耗时 : 1
2019-05-23 21:17:04 -返回值 : charts/tableWaterYY
2019-05-23 21:17:04 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-23 21:17:04 -HTTP METHOD : GET
2019-05-23 21:17:04 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-23 21:17:04 -参数 : [userType]
2019-05-23 21:17:04 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-23 21:17:04 -==> Parameters: userType(String)
2019-05-23 21:17:04 -<==      Total: 4
2019-05-23 21:17:04 -耗时 : 4
2019-05-23 21:17:04 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-23 21:17:05 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-23 21:17:05 -HTTP METHOD : GET
2019-05-23 21:17:05 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-23 21:17:05 -参数 : []
2019-05-23 21:17:05 -耗时 : 0
2019-05-23 21:17:05 -返回值 : charts/tableHeatYY
2019-05-23 21:17:05 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-23 21:17:05 -HTTP METHOD : GET
2019-05-23 21:17:05 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-23 21:17:05 -参数 : [userType]
2019-05-23 21:17:05 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-23 21:17:05 -==> Parameters: userType(String)
2019-05-23 21:17:05 -<==      Total: 4
2019-05-23 21:17:05 -耗时 : 5
2019-05-23 21:17:05 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-23 21:17:05 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-23 21:17:05 -HTTP METHOD : GET
2019-05-23 21:17:05 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-23 21:17:05 -参数 : []
2019-05-23 21:17:05 -耗时 : 0
2019-05-23 21:17:05 -返回值 : charts/tableElecYY
2019-05-23 21:17:05 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-23 21:17:05 -HTTP METHOD : GET
2019-05-23 21:17:05 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-23 21:17:05 -参数 : [userType]
2019-05-23 21:17:05 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-23 21:17:05 -==> Parameters: userType(String)
2019-05-23 21:17:05 -<==      Total: 4
2019-05-23 21:17:05 -耗时 : 5
2019-05-23 21:17:05 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-23 21:17:05 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-23 21:17:05 -HTTP METHOD : GET
2019-05-23 21:17:05 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-23 21:17:05 -参数 : []
2019-05-23 21:17:05 -耗时 : 1
2019-05-23 21:17:05 -返回值 : charts/tableHeatYY
2019-05-23 21:17:05 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-23 21:17:05 -HTTP METHOD : GET
2019-05-23 21:17:05 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-23 21:17:05 -参数 : [userType]
2019-05-23 21:17:05 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-23 21:17:05 -==> Parameters: userType(String)
2019-05-23 21:17:05 -<==      Total: 4
2019-05-23 21:17:05 -耗时 : 7
2019-05-23 21:17:05 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-23 21:17:06 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-05-23 21:17:06 -HTTP METHOD : GET
2019-05-23 21:17:06 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-23 21:17:06 -参数 : []
2019-05-23 21:17:06 -耗时 : 1
2019-05-23 21:17:06 -返回值 : charts/tableWaterYY
2019-05-23 21:17:06 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-23 21:17:06 -HTTP METHOD : GET
2019-05-23 21:17:06 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-23 21:17:06 -参数 : [userType]
2019-05-23 21:17:06 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-23 21:17:06 -==> Parameters: userType(String)
2019-05-23 21:17:06 -<==      Total: 4
2019-05-23 21:17:06 -耗时 : 3
2019-05-23 21:17:06 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-23 21:17:06 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-23 21:17:06 -HTTP METHOD : GET
2019-05-23 21:17:06 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-23 21:17:06 -参数 : []
2019-05-23 21:17:06 -耗时 : 1
2019-05-23 21:17:06 -返回值 : charts/tableHeatYY
2019-05-23 21:17:06 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-23 21:17:06 -HTTP METHOD : GET
2019-05-23 21:17:06 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-23 21:17:06 -参数 : [userType]
2019-05-23 21:17:06 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-23 21:17:06 -==> Parameters: userType(String)
2019-05-23 21:17:06 -<==      Total: 4
2019-05-23 21:17:06 -耗时 : 4
2019-05-23 21:17:06 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-23 21:17:06 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-23 21:17:06 -HTTP METHOD : GET
2019-05-23 21:17:06 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-23 21:17:06 -参数 : []
2019-05-23 21:17:06 -耗时 : 0
2019-05-23 21:17:06 -返回值 : charts/tableElecYY
2019-05-23 21:17:07 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-23 21:17:07 -HTTP METHOD : GET
2019-05-23 21:17:07 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-23 21:17:07 -参数 : [userType]
2019-05-23 21:17:07 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-23 21:17:07 -==> Parameters: userType(String)
2019-05-23 21:17:07 -<==      Total: 4
2019-05-23 21:17:07 -耗时 : 4
2019-05-23 21:17:07 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-23 21:17:57 -请求地址 : http://localhost:8081/elec/elec
2019-05-23 21:17:57 -HTTP METHOD : GET
2019-05-23 21:17:57 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-05-23 21:17:57 -参数 : []
2019-05-23 21:17:57 -耗时 : 1
2019-05-23 21:17:57 -返回值 : elec/elec/elec
2019-05-23 21:17:57 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-23 21:17:57 -HTTP METHOD : GET
2019-05-23 21:17:57 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-23 21:17:57 -参数 : [userType]
2019-05-23 21:17:57 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-05-23 21:17:57 -HTTP METHOD : GET
2019-05-23 21:17:57 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-23 21:17:57 -参数 : [elecType]
2019-05-23 21:17:57 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-23 21:17:57 -==> Parameters: userType(String)
2019-05-23 21:17:57 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-23 21:17:57 -==> Parameters: elecType(String)
2019-05-23 21:17:57 -<==      Total: 4
2019-05-23 21:17:57 -耗时 : 4
2019-05-23 21:17:57 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-23 21:17:57 -<==      Total: 11
2019-05-23 21:17:57 -耗时 : 4
2019-05-23 21:17:57 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-23 21:17:57 -请求地址 : http://localhost:8081/elec/elec/list
2019-05-23 21:17:57 -HTTP METHOD : GET
2019-05-23 21:17:57 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-05-23 21:17:57 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@34809f5]
2019-05-23 21:17:57 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-05-23 21:17:57 -==> Parameters: 0(Integer), 10(Integer)
2019-05-23 21:17:58 -<==      Total: 9
2019-05-23 21:17:58 -==>  Preparing: select count(*) from elec 
2019-05-23 21:17:58 -==> Parameters: 
2019-05-23 21:17:58 -<==      Total: 1
2019-05-23 21:17:58 -耗时 : 140
2019-05-23 21:17:58 -返回值 : com.bootdo.common.utils.PageUtils@76eac2f5
2019-05-23 21:18:00 -请求地址 : http://localhost:8081/elec/elecUpLoad
2019-05-23 21:18:00 -HTTP METHOD : GET
2019-05-23 21:18:00 -CLASS_METHOD : com.bootdo.elec.controller.ElecUpLoadController.Elec
2019-05-23 21:18:00 -参数 : []
2019-05-23 21:18:00 -耗时 : 1
2019-05-23 21:18:00 -返回值 : elec/elecUpLoad/elecUpLoad
2019-05-23 21:18:03 -请求地址 : http://localhost:8081/file/downImport/elecUpload
2019-05-23 21:18:03 -HTTP METHOD : GET
2019-05-23 21:18:03 -CLASS_METHOD : com.bootdo.temple.controller.TempletController.downImport
2019-05-23 21:18:03 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletResponse@ac74f9f, elecUpload]
2019-05-23 21:18:03 -耗时 : 48
2019-05-23 21:18:03 -返回值 : null
2019-05-23 21:35:43 -WebSocketSession[1 current WS(0)-HttpStream(1)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 12], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 2], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 337]

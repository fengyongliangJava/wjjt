2019-05-07 09:33:20 -Starting BootdoApplication on ZJZL-20180906VX with PID 3076 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-07 09:33:20 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-07 09:33:20 -The following profiles are active: dev
2019-05-07 09:33:20 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Tue May 07 09:33:20 CST 2019]; root of context hierarchy
2019-05-07 09:33:37 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-07 09:33:56 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$c846a4eb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 09:33:57 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$ba9fd392] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 09:34:04 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 09:34:05 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 09:34:05 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 09:34:05 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-07 09:34:05 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-07 09:34:05 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 09:34:05 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 09:34:05 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 09:34:06 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 09:34:21 -Tomcat initialized with port(s): 8081 (http)
2019-05-07 09:34:21 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-07 09:34:21 -Starting service [Tomcat]
2019-05-07 09:34:21 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-07 09:34:21 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-07 09:34:22 -Initializing Spring embedded WebApplicationContext
2019-05-07 09:34:22 -Root WebApplicationContext: initialization completed in 62618 ms
2019-05-07 09:34:24 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-07 09:34:24 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-07 09:34:24 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-07 09:34:24 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-07 09:34:24 -Filter xssFilter was not registered (disabled)
2019-05-07 09:34:24 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-07 09:34:24 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-07 09:34:24 -Servlet statViewServlet mapped to [/druid/*]
2019-05-07 09:34:24 -Servlet dispatcherServlet mapped to [/]
2019-05-07 09:34:46 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Tue May 07 09:33:20 CST 2019]; root of context hierarchy
2019-05-07 09:34:50 -Using default implementation for ThreadExecutor
2019-05-07 09:34:50 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-07 09:34:50 -Quartz Scheduler v.2.2.1 created.
2019-05-07 09:34:50 -RAMJobStore initialized.
2019-05-07 09:34:50 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-07 09:34:50 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-07 09:34:50 -Quartz scheduler version: 2.2.1
2019-05-07 09:34:50 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@5cd8d029
2019-05-07 09:34:51 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-07 09:34:51 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-07 09:34:57 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-07 09:34:57 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-07 09:34:57 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-07 09:34:57 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-07 09:34:57 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-07 09:34:57 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-07 09:34:57 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-07 09:34:57 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-07 09:34:57 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-07 09:34:57 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-07 09:34:57 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-07 09:34:57 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-07 09:34:57 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-07 09:34:57 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-07 09:34:57 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-07 09:34:57 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-07 09:34:57 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-07 09:34:57 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-07 09:34:57 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-07 09:34:57 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-07 09:34:57 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-07 09:34:57 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-07 09:34:57 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.getCountYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-07 09:34:57 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-07 09:34:57 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-07 09:34:57 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-07 09:34:57 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-07 09:34:57 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.getCountMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-07 09:34:57 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-07 09:34:57 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-07 09:34:57 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-07 09:34:57 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-07 09:34:57 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-05-07 09:34:57 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-07 09:34:57 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-07 09:34:57 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-07 09:34:57 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-07 09:34:57 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-07 09:34:57 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-07 09:34:57 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-07 09:34:57 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-07 09:34:57 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-07 09:34:57 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-07 09:34:57 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-07 09:34:57 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-07 09:34:57 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-07 09:34:57 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-07 09:34:57 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-07 09:34:57 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-07 09:34:57 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-07 09:34:57 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-07 09:34:57 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-07 09:34:57 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-07 09:34:57 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-07 09:34:57 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-07 09:34:57 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-07 09:34:57 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-07 09:34:57 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-07 09:34:57 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-07 09:34:57 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-07 09:34:57 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-07 09:34:57 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-07 09:34:57 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-07 09:34:57 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-07 09:34:57 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-07 09:34:57 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-07 09:34:57 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-07 09:34:57 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-07 09:34:57 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-07 09:34:57 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-07 09:34:57 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-07 09:34:57 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-07 09:34:57 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-07 09:34:57 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-07 09:34:57 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-07 09:34:57 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-07 09:34:57 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-07 09:34:57 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-07 09:34:57 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-07 09:34:57 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-07 09:34:57 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-07 09:34:57 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-07 09:34:57 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-07 09:34:57 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-07 09:34:57 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-07 09:34:57 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-07 09:34:57 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-07 09:34:57 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-07 09:34:57 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-07 09:34:57 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-07 09:34:57 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-07 09:34:57 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-07 09:34:57 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-07 09:34:57 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-07 09:34:57 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-07 09:34:57 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-07 09:34:57 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-07 09:34:57 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-07 09:34:57 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-07 09:34:57 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-07 09:34:57 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-07 09:34:57 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-07 09:34:57 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-07 09:34:57 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-07 09:34:57 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-07 09:34:57 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-07 09:34:57 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-07 09:34:57 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-07 09:34:57 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-07 09:34:57 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-07 09:34:57 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-07 09:34:57 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-07 09:34:57 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-07 09:34:57 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-07 09:34:57 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-07 09:34:57 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-07 09:34:57 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-07 09:34:57 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-07 09:34:57 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-07 09:34:57 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-07 09:34:57 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-07 09:34:57 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-07 09:34:57 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-07 09:34:57 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-07 09:34:57 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-07 09:34:57 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-07 09:34:57 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-07 09:34:57 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-07 09:34:57 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-07 09:34:57 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-07 09:34:57 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-07 09:34:57 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-07 09:34:57 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-07 09:34:57 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-07 09:34:57 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-07 09:34:57 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-07 09:34:57 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-07 09:34:57 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-07 09:34:57 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-07 09:34:57 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-07 09:34:57 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-07 09:34:57 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-07 09:34:57 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-07 09:34:57 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-07 09:34:57 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-07 09:34:57 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-07 09:34:57 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-07 09:34:57 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-07 09:34:57 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-07 09:34:57 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-07 09:34:57 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-07 09:34:57 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-07 09:34:57 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-07 09:34:57 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-07 09:34:57 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-07 09:34:57 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-07 09:34:57 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-07 09:34:57 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-07 09:34:57 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-07 09:34:57 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-07 09:34:57 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-07 09:34:57 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-07 09:34:57 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-07 09:34:57 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-07 09:34:57 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-07 09:34:57 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-07 09:34:57 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-07 09:34:57 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-07 09:34:57 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-07 09:34:57 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-07 09:34:57 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-07 09:34:57 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-07 09:34:57 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-07 09:34:57 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-07 09:34:57 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-07 09:34:57 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-05-07 09:34:57 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-07 09:34:57 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-07 09:34:57 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-07 09:34:57 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-07 09:34:57 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-07 09:34:57 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-07 09:34:57 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-07 09:34:57 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-07 09:34:57 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-07 09:34:57 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-07 09:34:57 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-07 09:34:57 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-07 09:34:57 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-07 09:34:57 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-07 09:34:57 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-07 09:34:57 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-07 09:34:57 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-07 09:34:57 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-07 09:34:57 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-07 09:34:57 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-07 09:34:57 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-07 09:34:57 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-07 09:34:57 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-07 09:34:57 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-07 09:34:57 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-07 09:34:57 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-07 09:34:57 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-07 09:34:57 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-07 09:34:57 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-07 09:34:57 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-07 09:34:57 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-07 09:34:57 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-07 09:34:57 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-07 09:34:57 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-07 09:34:57 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-07 09:34:57 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-07 09:34:57 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-07 09:34:57 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-07 09:34:57 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-07 09:34:57 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-07 09:34:57 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-07 09:34:57 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-07 09:34:57 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-07 09:34:57 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-07 09:34:57 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-07 09:34:57 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-07 09:34:57 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-07 09:34:57 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-07 09:34:57 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-07 09:34:57 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-07 09:34:57 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-07 09:34:57 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-07 09:34:57 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-07 09:34:57 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-07 09:34:57 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-07 09:34:57 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-07 09:34:57 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-07 09:34:57 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-07 09:34:57 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-07 09:34:57 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-07 09:34:57 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-07 09:34:57 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-07 09:34:57 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-07 09:34:57 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-07 09:34:57 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-07 09:34:57 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-07 09:34:57 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-07 09:34:57 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-07 09:34:57 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-07 09:34:57 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-07 09:34:57 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-07 09:34:57 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-07 09:34:57 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-07 09:34:57 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-07 09:34:57 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-07 09:34:57 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-07 09:34:57 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-07 09:34:57 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-07 09:34:57 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-07 09:34:57 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-07 09:34:57 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-07 09:34:57 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-07 09:34:57 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-07 09:34:57 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-07 09:34:57 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-07 09:34:57 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-07 09:34:57 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-07 09:34:57 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-07 09:34:57 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-07 09:34:57 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-07 09:34:57 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-07 09:34:57 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-07 09:34:58 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-07 09:34:58 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-07 09:34:59 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-07 09:35:02 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-07 09:35:04 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Tue May 07 09:33:20 CST 2019]; root of context hierarchy
2019-05-07 09:35:05 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-07 09:35:05 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-07 09:35:05 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-07 09:35:05 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-07 09:35:06 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-07 09:35:19 -Registering beans for JMX exposure on startup
2019-05-07 09:35:19 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-07 09:35:19 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-07 09:35:19 -Starting beans in phase 2147483647
2019-05-07 09:35:19 -Context refreshed
2019-05-07 09:35:19 -Found 1 custom documentation plugin(s)
2019-05-07 09:35:20 -Scanning for api listing references
2019-05-07 09:35:21 -Generating unique operation named: getCountDUsingPOST_1
2019-05-07 09:35:22 -Generating unique operation named: removeUsingPOST_1
2019-05-07 09:35:22 -Generating unique operation named: addUsingGET_1
2019-05-07 09:35:22 -Generating unique operation named: editUsingGET_1
2019-05-07 09:35:22 -Generating unique operation named: listUsingGET_1
2019-05-07 09:35:22 -Generating unique operation named: removeUsingPOST_2
2019-05-07 09:35:22 -Generating unique operation named: removeUsingPOST_3
2019-05-07 09:35:22 -Generating unique operation named: saveUsingPOST_1
2019-05-07 09:35:22 -Generating unique operation named: updateUsingGET_1
2019-05-07 09:35:22 -Generating unique operation named: updateUsingHEAD_1
2019-05-07 09:35:22 -Generating unique operation named: updateUsingPOST_1
2019-05-07 09:35:22 -Generating unique operation named: updateUsingPUT_1
2019-05-07 09:35:22 -Generating unique operation named: updateUsingPATCH_1
2019-05-07 09:35:22 -Generating unique operation named: updateUsingDELETE_1
2019-05-07 09:35:22 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-07 09:35:22 -Generating unique operation named: updateUsingTRACE_1
2019-05-07 09:35:22 -Generating unique operation named: addUsingGET_2
2019-05-07 09:35:22 -Generating unique operation named: editUsingGET_2
2019-05-07 09:35:22 -Generating unique operation named: listUsingGET_2
2019-05-07 09:35:22 -Generating unique operation named: removeUsingPOST_4
2019-05-07 09:35:22 -Generating unique operation named: removeUsingPOST_5
2019-05-07 09:35:22 -Generating unique operation named: saveUsingPOST_2
2019-05-07 09:35:22 -Generating unique operation named: updateUsingPOST_2
2019-05-07 09:35:22 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-07 09:35:22 -Generating unique operation named: addUsingGET_3
2019-05-07 09:35:22 -Generating unique operation named: editUsingGET_3
2019-05-07 09:35:22 -Generating unique operation named: listUsingGET_3
2019-05-07 09:35:22 -Generating unique operation named: removeUsingPOST_6
2019-05-07 09:35:22 -Generating unique operation named: removeUsingPOST_7
2019-05-07 09:35:22 -Generating unique operation named: saveUsingPOST_3
2019-05-07 09:35:22 -Generating unique operation named: updateUsingGET_2
2019-05-07 09:35:22 -Generating unique operation named: updateUsingHEAD_2
2019-05-07 09:35:22 -Generating unique operation named: updateUsingPOST_3
2019-05-07 09:35:22 -Generating unique operation named: updateUsingPUT_2
2019-05-07 09:35:22 -Generating unique operation named: updateUsingPATCH_2
2019-05-07 09:35:22 -Generating unique operation named: updateUsingDELETE_2
2019-05-07 09:35:22 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-07 09:35:22 -Generating unique operation named: updateUsingTRACE_2
2019-05-07 09:35:22 -Generating unique operation named: addUsingGET_4
2019-05-07 09:35:22 -Generating unique operation named: editUsingGET_4
2019-05-07 09:35:22 -Generating unique operation named: listUsingGET_4
2019-05-07 09:35:22 -Generating unique operation named: removeUsingPOST_8
2019-05-07 09:35:22 -Generating unique operation named: removeUsingPOST_9
2019-05-07 09:35:22 -Generating unique operation named: saveUsingPOST_4
2019-05-07 09:35:22 -Generating unique operation named: updateUsingGET_3
2019-05-07 09:35:22 -Generating unique operation named: updateUsingHEAD_3
2019-05-07 09:35:22 -Generating unique operation named: updateUsingPOST_4
2019-05-07 09:35:22 -Generating unique operation named: updateUsingPUT_3
2019-05-07 09:35:22 -Generating unique operation named: updateUsingPATCH_3
2019-05-07 09:35:22 -Generating unique operation named: updateUsingDELETE_3
2019-05-07 09:35:22 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-07 09:35:22 -Generating unique operation named: updateUsingTRACE_3
2019-05-07 09:35:22 -Generating unique operation named: ElecUsingGET_1
2019-05-07 09:35:22 -Generating unique operation named: addUsingGET_5
2019-05-07 09:35:22 -Generating unique operation named: editUsingGET_5
2019-05-07 09:35:22 -Generating unique operation named: listUsingGET_5
2019-05-07 09:35:22 -Generating unique operation named: removeUsingPOST_10
2019-05-07 09:35:22 -Generating unique operation named: removeUsingPOST_11
2019-05-07 09:35:22 -Generating unique operation named: saveUsingPOST_5
2019-05-07 09:35:22 -Generating unique operation named: updateUsingGET_4
2019-05-07 09:35:22 -Generating unique operation named: updateUsingHEAD_4
2019-05-07 09:35:22 -Generating unique operation named: updateUsingPOST_5
2019-05-07 09:35:22 -Generating unique operation named: updateUsingPUT_4
2019-05-07 09:35:22 -Generating unique operation named: updateUsingPATCH_4
2019-05-07 09:35:22 -Generating unique operation named: updateUsingDELETE_4
2019-05-07 09:35:22 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-07 09:35:22 -Generating unique operation named: updateUsingTRACE_4
2019-05-07 09:35:22 -Generating unique operation named: editUsingGET_6
2019-05-07 09:35:22 -Generating unique operation named: listUsingGET_6
2019-05-07 09:35:22 -Generating unique operation named: updateUsingPOST_6
2019-05-07 09:35:22 -Generating unique operation named: addUsingGET_6
2019-05-07 09:35:22 -Generating unique operation named: editUsingGET_7
2019-05-07 09:35:22 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-07 09:35:22 -Generating unique operation named: listUsingGET_7
2019-05-07 09:35:22 -Generating unique operation named: removeUsingPOST_12
2019-05-07 09:35:22 -Generating unique operation named: removeUsingPOST_13
2019-05-07 09:35:22 -Generating unique operation named: saveUsingPOST_6
2019-05-07 09:35:22 -Generating unique operation named: updateUsingGET_5
2019-05-07 09:35:22 -Generating unique operation named: updateUsingHEAD_5
2019-05-07 09:35:22 -Generating unique operation named: updateUsingPOST_7
2019-05-07 09:35:22 -Generating unique operation named: updateUsingPUT_5
2019-05-07 09:35:22 -Generating unique operation named: updateUsingPATCH_5
2019-05-07 09:35:22 -Generating unique operation named: updateUsingDELETE_5
2019-05-07 09:35:22 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-07 09:35:22 -Generating unique operation named: updateUsingTRACE_5
2019-05-07 09:35:22 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-07 09:35:22 -Generating unique operation named: addUsingGET_7
2019-05-07 09:35:23 -Generating unique operation named: editUsingGET_8
2019-05-07 09:35:23 -Generating unique operation named: listUsingGET_8
2019-05-07 09:35:23 -Generating unique operation named: removeUsingPOST_14
2019-05-07 09:35:23 -Generating unique operation named: removeUsingPOST_15
2019-05-07 09:35:23 -Generating unique operation named: saveUsingPOST_7
2019-05-07 09:35:23 -Generating unique operation named: updateUsingGET_6
2019-05-07 09:35:23 -Generating unique operation named: updateUsingHEAD_6
2019-05-07 09:35:23 -Generating unique operation named: updateUsingPOST_8
2019-05-07 09:35:23 -Generating unique operation named: updateUsingPUT_6
2019-05-07 09:35:23 -Generating unique operation named: updateUsingPATCH_6
2019-05-07 09:35:23 -Generating unique operation named: updateUsingDELETE_6
2019-05-07 09:35:23 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-07 09:35:23 -Generating unique operation named: updateUsingTRACE_6
2019-05-07 09:35:23 -Generating unique operation named: addUsingGET_8
2019-05-07 09:35:23 -Generating unique operation named: editUsingGET_9
2019-05-07 09:35:23 -Generating unique operation named: listUsingGET_9
2019-05-07 09:35:23 -Generating unique operation named: removeUsingPOST_16
2019-05-07 09:35:23 -Generating unique operation named: removeUsingPOST_17
2019-05-07 09:35:23 -Generating unique operation named: saveUsingPOST_8
2019-05-07 09:35:23 -Generating unique operation named: updateUsingGET_7
2019-05-07 09:35:23 -Generating unique operation named: updateUsingHEAD_7
2019-05-07 09:35:23 -Generating unique operation named: updateUsingPOST_9
2019-05-07 09:35:23 -Generating unique operation named: updateUsingPUT_7
2019-05-07 09:35:23 -Generating unique operation named: updateUsingPATCH_7
2019-05-07 09:35:23 -Generating unique operation named: updateUsingDELETE_7
2019-05-07 09:35:23 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-07 09:35:23 -Generating unique operation named: updateUsingTRACE_7
2019-05-07 09:35:23 -Generating unique operation named: addUsingGET_9
2019-05-07 09:35:23 -Generating unique operation named: editUsingGET_10
2019-05-07 09:35:23 -Generating unique operation named: infoUsingGET_1
2019-05-07 09:35:23 -Generating unique operation named: infoUsingHEAD_1
2019-05-07 09:35:23 -Generating unique operation named: infoUsingPOST_1
2019-05-07 09:35:23 -Generating unique operation named: infoUsingPUT_1
2019-05-07 09:35:23 -Generating unique operation named: infoUsingPATCH_1
2019-05-07 09:35:23 -Generating unique operation named: infoUsingDELETE_1
2019-05-07 09:35:23 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-07 09:35:23 -Generating unique operation named: infoUsingTRACE_1
2019-05-07 09:35:23 -Generating unique operation named: listUsingGET_10
2019-05-07 09:35:23 -Generating unique operation named: removeUsingPOST_18
2019-05-07 09:35:23 -Generating unique operation named: removeUsingPOST_19
2019-05-07 09:35:23 -Generating unique operation named: saveUsingPOST_9
2019-05-07 09:35:23 -Generating unique operation named: updateUsingPOST_10
2019-05-07 09:35:23 -Generating unique operation named: listUsingGET_11
2019-05-07 09:35:23 -Generating unique operation named: removeUsingPOST_20
2019-05-07 09:35:23 -Generating unique operation named: welcomeUsingGET_1
2019-05-07 09:35:23 -Generating unique operation named: addUsingGET_10
2019-05-07 09:35:23 -Generating unique operation named: editUsingGET_11
2019-05-07 09:35:23 -Generating unique operation named: listUsingGET_12
2019-05-07 09:35:23 -Generating unique operation named: removeUsingPOST_21
2019-05-07 09:35:23 -Generating unique operation named: saveUsingPOST_10
2019-05-07 09:35:23 -Generating unique operation named: treeUsingGET_1
2019-05-07 09:35:23 -Generating unique operation named: treeUsingGET_2
2019-05-07 09:35:23 -Generating unique operation named: updateUsingPOST_11
2019-05-07 09:35:23 -Generating unique operation named: addUsingGET_11
2019-05-07 09:35:23 -Generating unique operation named: editUsingGET_12
2019-05-07 09:35:23 -Generating unique operation named: listUsingGET_13
2019-05-07 09:35:23 -Generating unique operation named: removeUsingPOST_22
2019-05-07 09:35:23 -Generating unique operation named: removeUsingPOST_23
2019-05-07 09:35:23 -Generating unique operation named: saveUsingPOST_11
2019-05-07 09:35:23 -Generating unique operation named: updateUsingGET_8
2019-05-07 09:35:23 -Generating unique operation named: updateUsingHEAD_8
2019-05-07 09:35:23 -Generating unique operation named: updateUsingPOST_12
2019-05-07 09:35:23 -Generating unique operation named: updateUsingPUT_8
2019-05-07 09:35:23 -Generating unique operation named: updateUsingPATCH_8
2019-05-07 09:35:23 -Generating unique operation named: updateUsingDELETE_8
2019-05-07 09:35:23 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-07 09:35:23 -Generating unique operation named: updateUsingTRACE_8
2019-05-07 09:35:23 -Generating unique operation named: addUsingGET_12
2019-05-07 09:35:23 -Generating unique operation named: editUsingGET_13
2019-05-07 09:35:23 -Generating unique operation named: listUsingGET_14
2019-05-07 09:35:23 -Generating unique operation named: removeUsingPOST_24
2019-05-07 09:35:23 -Generating unique operation named: removeUsingPOST_25
2019-05-07 09:35:23 -Generating unique operation named: saveUsingPOST_12
2019-05-07 09:35:23 -Generating unique operation named: updateUsingGET_9
2019-05-07 09:35:23 -Generating unique operation named: updateUsingHEAD_9
2019-05-07 09:35:23 -Generating unique operation named: updateUsingPOST_13
2019-05-07 09:35:23 -Generating unique operation named: updateUsingPUT_9
2019-05-07 09:35:23 -Generating unique operation named: updateUsingPATCH_9
2019-05-07 09:35:23 -Generating unique operation named: updateUsingDELETE_9
2019-05-07 09:35:23 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-07 09:35:23 -Generating unique operation named: updateUsingTRACE_9
2019-05-07 09:35:23 -Generating unique operation named: addUsingGET_13
2019-05-07 09:35:23 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-07 09:35:23 -Generating unique operation named: editUsingGET_14
2019-05-07 09:35:23 -Generating unique operation named: listUsingGET_15
2019-05-07 09:35:23 -Generating unique operation named: saveUsingPOST_13
2019-05-07 09:35:23 -Generating unique operation named: saveUsingPOST_14
2019-05-07 09:35:23 -Generating unique operation named: updateUsingPOST_14
2019-05-07 09:35:23 -Generating unique operation named: listUsingGET_16
2019-05-07 09:35:23 -Generating unique operation named: listUsingHEAD_1
2019-05-07 09:35:23 -Generating unique operation named: listUsingPOST_1
2019-05-07 09:35:23 -Generating unique operation named: listUsingPUT_1
2019-05-07 09:35:23 -Generating unique operation named: listUsingPATCH_1
2019-05-07 09:35:23 -Generating unique operation named: listUsingDELETE_1
2019-05-07 09:35:23 -Generating unique operation named: listUsingOPTIONS_1
2019-05-07 09:35:23 -Generating unique operation named: listUsingTRACE_1
2019-05-07 09:35:23 -Generating unique operation named: countDDUsingGET_1
2019-05-07 09:35:23 -Generating unique operation named: exportDDUsingGET_1
2019-05-07 09:35:23 -Generating unique operation named: getCountYYUsingPOST_1
2019-05-07 09:35:23 -Generating unique operation named: getCountMMUsingPOST_1
2019-05-07 09:35:23 -Generating unique operation named: addUsingGET_14
2019-05-07 09:35:23 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-07 09:35:24 -Generating unique operation named: editUsingGET_15
2019-05-07 09:35:24 -Generating unique operation named: listUsingGET_17
2019-05-07 09:35:24 -Generating unique operation named: removeUsingPOST_26
2019-05-07 09:35:24 -Generating unique operation named: saveUsingPOST_15
2019-05-07 09:35:24 -Generating unique operation named: treeUsingGET_3
2019-05-07 09:35:24 -Generating unique operation named: treeViewUsingGET_1
2019-05-07 09:35:24 -Generating unique operation named: updateUsingPOST_15
2019-05-07 09:35:24 -Generating unique operation named: addUsingGET_15
2019-05-07 09:35:24 -Generating unique operation named: editUsingGET_16
2019-05-07 09:35:24 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-07 09:35:24 -Generating unique operation named: listUsingGET_18
2019-05-07 09:35:24 -Generating unique operation named: removeUsingPOST_27
2019-05-07 09:35:24 -Generating unique operation named: removeUsingPOST_28
2019-05-07 09:35:24 -Generating unique operation named: saveUsingPOST_16
2019-05-07 09:35:24 -Generating unique operation named: updateUsingGET_10
2019-05-07 09:35:24 -Generating unique operation named: updateUsingHEAD_10
2019-05-07 09:35:24 -Generating unique operation named: updateUsingPOST_16
2019-05-07 09:35:24 -Generating unique operation named: updateUsingPUT_10
2019-05-07 09:35:24 -Generating unique operation named: updateUsingPATCH_10
2019-05-07 09:35:24 -Generating unique operation named: updateUsingDELETE_10
2019-05-07 09:35:24 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-07 09:35:24 -Generating unique operation named: updateUsingTRACE_10
2019-05-07 09:35:24 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-07 09:35:24 -Generating unique operation named: addUsingGET_16
2019-05-07 09:35:24 -Generating unique operation named: editUsingGET_17
2019-05-07 09:35:24 -Generating unique operation named: listUsingGET_19
2019-05-07 09:35:24 -Generating unique operation named: removeUsingPOST_29
2019-05-07 09:35:24 -Generating unique operation named: removeUsingPOST_30
2019-05-07 09:35:24 -Generating unique operation named: saveUsingPOST_17
2019-05-07 09:35:24 -Generating unique operation named: updateUsingGET_11
2019-05-07 09:35:24 -Generating unique operation named: updateUsingHEAD_11
2019-05-07 09:35:24 -Generating unique operation named: updateUsingPOST_17
2019-05-07 09:35:24 -Generating unique operation named: updateUsingPUT_11
2019-05-07 09:35:24 -Generating unique operation named: updateUsingPATCH_11
2019-05-07 09:35:24 -Generating unique operation named: updateUsingDELETE_11
2019-05-07 09:35:24 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-07 09:35:24 -Generating unique operation named: updateUsingTRACE_11
2019-05-07 09:35:24 -Generating unique operation named: addUsingGET_17
2019-05-07 09:35:24 -Generating unique operation named: editUsingGET_18
2019-05-07 09:35:24 -Generating unique operation named: listUsingGET_20
2019-05-07 09:35:24 -Generating unique operation named: removeUsingPOST_31
2019-05-07 09:35:24 -Generating unique operation named: removeUsingPOST_32
2019-05-07 09:35:24 -Generating unique operation named: saveUsingPOST_18
2019-05-07 09:35:24 -Generating unique operation named: updateUsingGET_12
2019-05-07 09:35:24 -Generating unique operation named: updateUsingHEAD_12
2019-05-07 09:35:24 -Generating unique operation named: updateUsingPOST_18
2019-05-07 09:35:24 -Generating unique operation named: updateUsingPUT_12
2019-05-07 09:35:24 -Generating unique operation named: updateUsingPATCH_12
2019-05-07 09:35:24 -Generating unique operation named: updateUsingDELETE_12
2019-05-07 09:35:24 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-07 09:35:24 -Generating unique operation named: updateUsingTRACE_12
2019-05-07 09:35:24 -Starting Quartz Scheduler now
2019-05-07 09:35:24 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-07 09:35:24 -Starting...
2019-05-07 09:35:24 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-07 09:35:24 -Started.
2019-05-07 09:35:24 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-07 09:35:24 -Using a shared selector for servlet write/read
2019-05-07 09:35:25 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-07 09:35:25 -Started BootdoApplication in 126.631 seconds (JVM running for 127.522)
2019-05-07 09:35:25 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-07 09:35:25 -==> Parameters: 
2019-05-07 09:35:26 -<==      Total: 1
2019-05-07 09:35:33 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-07 09:35:33 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-07 09:35:33 -FrameworkServlet 'dispatcherServlet': initialization completed in 194 ms
2019-05-07 09:35:33 -Enabling session validation scheduler...
2019-05-07 09:35:34 -请求地址 : http://localhost:8081/login;JSESSIONID=df38b9cd-ca7a-4b24-97aa-b937c48b3598
2019-05-07 09:35:34 -HTTP METHOD : GET
2019-05-07 09:35:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-07 09:35:34 -参数 : [{}]
2019-05-07 09:35:34 -耗时 : 4
2019-05-07 09:35:34 -返回值 : login
2019-05-07 09:35:42 -请求地址 : http://localhost:8081/getVerify
2019-05-07 09:35:42 -HTTP METHOD : GET
2019-05-07 09:35:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-07 09:35:42 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@39a95d5c, org.apache.shiro.web.servlet.ShiroHttpServletResponse@7c516682]
2019-05-07 09:35:59 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-05-07 09:36:01 -6810
2019-05-07 09:36:02 -耗时 : 19643
2019-05-07 09:36:02 -返回值 : null
2019-05-07 09:36:08 -请求地址 : http://localhost:8081/login
2019-05-07 09:36:08 -HTTP METHOD : POST
2019-05-07 09:36:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-07 09:36:08 -参数 : [admin, 111111, 6810, org.apache.shiro.web.servlet.ShiroHttpServletRequest@32634171]
2019-05-07 09:36:08 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-07 09:36:08 -==> Parameters: admin(String)
2019-05-07 09:36:09 -<==      Total: 1
2019-05-07 09:36:09 -耗时 : 928
2019-05-07 09:36:09 -返回值 : {msg=操作成功, code=0}
2019-05-07 09:36:09 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-07 09:36:09 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-07 09:36:09 -==> Parameters: 1(Long), admin(String), 登录(String), 928(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-07 09:36:09.5(Timestamp)
2019-05-07 09:36:09 -请求地址 : http://localhost:8081/index
2019-05-07 09:36:09 -HTTP METHOD : GET
2019-05-07 09:36:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-07 09:36:09 -参数 : [{}]
2019-05-07 09:36:10 -<==    Updates: 1
2019-05-07 09:36:10 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-07 09:36:10 -==> Parameters: 1(Long)
2019-05-07 09:36:11 -<==      Total: 49
2019-05-07 09:36:11 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-07 09:36:11 -==> Parameters: 138(Long)
2019-05-07 09:36:11 -<==      Total: 1
2019-05-07 09:36:11 -耗时 : 1149
2019-05-07 09:36:11 -返回值 : index_v1
2019-05-07 09:36:11 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-07 09:36:11 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 1149(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-07 09:36:11.183(Timestamp)
2019-05-07 09:36:11 -<==    Updates: 1
2019-05-07 09:36:12 -请求地址 : http://localhost:8081/main
2019-05-07 09:36:12 -HTTP METHOD : GET
2019-05-07 09:36:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-07 09:36:12 -参数 : []
2019-05-07 09:36:12 -耗时 : 0
2019-05-07 09:36:12 -返回值 : main
2019-05-07 09:36:15 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-07 09:36:15 -HTTP METHOD : GET
2019-05-07 09:36:15 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-07 09:36:15 -参数 : []
2019-05-07 09:36:15 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-07 09:36:15 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-07 09:36:15 -请求地址 : http://localhost:8081/main
2019-05-07 09:36:15 -HTTP METHOD : GET
2019-05-07 09:36:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-07 09:36:15 -参数 : []
2019-05-07 09:36:15 -耗时 : 1
2019-05-07 09:36:15 -返回值 : main
2019-05-07 09:36:16 -<==      Total: 0
2019-05-07 09:36:16 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-07 09:36:16 -==> Parameters: 1(Long), 0(String)
2019-05-07 09:36:16 -<==      Total: 1
2019-05-07 09:36:16 -耗时 : 1077
2019-05-07 09:36:16 -返回值 : com.bootdo.common.utils.PageUtils@4295b4fa
2019-05-07 09:36:23 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-07 09:36:23 -==> Parameters: 1(Long)
2019-05-07 09:36:23 -<==      Total: 93
2019-05-07 09:36:23 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-07 09:36:23 -HTTP METHOD : GET
2019-05-07 09:36:23 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-07 09:36:23 -参数 : []
2019-05-07 09:36:23 -耗时 : 9
2019-05-07 09:36:23 -返回值 : charts/tableElecYY
2019-05-07 09:36:25 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-07 09:36:25 -HTTP METHOD : GET
2019-05-07 09:36:25 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-07 09:36:25 -参数 : [userType]
2019-05-07 09:36:25 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-07 09:36:25 -==> Parameters: userType(String)
2019-05-07 09:36:25 -<==      Total: 4
2019-05-07 09:36:25 -耗时 : 106
2019-05-07 09:36:25 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-07 09:36:25 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-05-07 09:36:25 -HTTP METHOD : GET
2019-05-07 09:36:25 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-07 09:36:25 -参数 : []
2019-05-07 09:36:25 -耗时 : 10
2019-05-07 09:36:25 -返回值 : charts/tableWaterYY
2019-05-07 09:36:26 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-07 09:36:26 -HTTP METHOD : GET
2019-05-07 09:36:26 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-07 09:36:26 -参数 : [userType]
2019-05-07 09:36:26 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-07 09:36:26 -==> Parameters: userType(String)
2019-05-07 09:36:26 -<==      Total: 4
2019-05-07 09:36:26 -耗时 : 16
2019-05-07 09:36:26 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-07 09:36:29 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-07 09:36:29 -HTTP METHOD : GET
2019-05-07 09:36:29 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-07 09:36:29 -参数 : []
2019-05-07 09:36:29 -耗时 : 1
2019-05-07 09:36:29 -返回值 : system/dept/deptTree
2019-05-07 09:36:29 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-07 09:36:29 -HTTP METHOD : GET
2019-05-07 09:36:29 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-07 09:36:29 -参数 : []
2019-05-07 09:36:29 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-07 09:36:29 -==> Parameters: 
2019-05-07 09:36:29 -<==      Total: 3
2019-05-07 09:36:29 -耗时 : 113
2019-05-07 09:36:29 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-07 09:36:33 -请求地址 : http://localhost:8081/charts/tableWaterYY/tableWaterYY
2019-05-07 09:36:33 -HTTP METHOD : POST
2019-05-07 09:36:33 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-07 09:36:33 -参数 : [com.bootdo.water.vo.WaterVo@43e9a6e5, com.bootdo.moneyLog.vo.WaterLogVo@2dd36fd2]
2019-05-07 09:36:33 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE WATER_SUM >= 0 and `create_time` = CONCAT("?","-01") and user_type = ? and user_org = ? 
2019-05-07 09:36:33 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-07 09:36:33 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/tableWaterYY/tableWaterYY(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #3 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (3 > number of parameters, which is 2).(String), null, 2019-05-07 09:36:33.972(Timestamp)
2019-05-07 09:36:33 -nested exception is org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #3 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (3 > number of parameters, which is 2).
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #3 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (3 > number of parameters, which is 2).
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:167)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:82)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy107.MWaterCountPre1(Unknown Source)
	at com.bootdo.water.service.impl.WaterServiceImpl.MWaterCountPre1(WaterServiceImpl.java:179)
	at com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(tableWaterYYController.java:54)
	at com.bootdo.charts.controller.tableWaterYYController$$FastClassBySpringCGLIB$$e46653e2.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.tableWaterYYController$$EnhancerBySpringCGLIB$$ab68e542.tableWaterYY(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #3 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (3 > number of parameters, which is 2).
	at org.apache.ibatis.scripting.defaults.DefaultParameterHandler.setParameters(DefaultParameterHandler.java:89)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.parameterize(PreparedStatementHandler.java:93)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.parameterize(RoutingStatementHandler.java:64)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:86)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:77)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 100 common frames omitted
Caused by: org.apache.ibatis.type.TypeException: Error setting non null for parameter #3 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (3 > number of parameters, which is 2).
	at org.apache.ibatis.type.BaseTypeHandler.setParameter(BaseTypeHandler.java:55)
	at org.apache.ibatis.scripting.defaults.DefaultParameterHandler.setParameters(DefaultParameterHandler.java:87)
	... 116 common frames omitted
Caused by: java.sql.SQLException: Parameter index out of range (3 > number of parameters, which is 2).
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.PreparedStatement.checkBounds(PreparedStatement.java:3327)
	at com.mysql.jdbc.PreparedStatement.setInternal(PreparedStatement.java:3312)
	at com.mysql.jdbc.PreparedStatement.setString(PreparedStatement.java:4027)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2823)
	at com.alibaba.druid.filter.FilterAdapter.preparedStatement_setString(FilterAdapter.java:1340)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2820)
	at com.alibaba.druid.filter.FilterAdapter.preparedStatement_setString(FilterAdapter.java:1340)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2820)
	at com.alibaba.druid.filter.FilterAdapter.preparedStatement_setString(FilterAdapter.java:1340)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2820)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.setString(PreparedStatementProxyImpl.java:560)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.setString(DruidPooledPreparedStatement.java:365)
	at sun.reflect.GeneratedMethodAccessor124.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:67)
	at com.sun.proxy.$Proxy173.setString(Unknown Source)
	at org.apache.ibatis.type.StringTypeHandler.setNonNullParameter(StringTypeHandler.java:31)
	at org.apache.ibatis.type.StringTypeHandler.setNonNullParameter(StringTypeHandler.java:26)
	at org.apache.ibatis.type.BaseTypeHandler.setParameter(BaseTypeHandler.java:53)
	... 117 common frames omitted
2019-05-07 09:36:34 -<==    Updates: 1
2019-05-07 09:36:44 -请求地址 : http://localhost:8081/charts/tableWaterYY/tableWaterYY
2019-05-07 09:36:44 -HTTP METHOD : POST
2019-05-07 09:36:44 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-07 09:36:44 -参数 : [com.bootdo.water.vo.WaterVo@3f6d9f4b, com.bootdo.moneyLog.vo.WaterLogVo@16a1af84]
2019-05-07 09:36:44 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE WATER_SUM >= 0 and `create_time` = CONCAT("?","-01") and user_type = ? and user_org = ? 
2019-05-07 09:36:44 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-07 09:36:44 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/tableWaterYY/tableWaterYY(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #3 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (3 > number of parameters, which is 2).(String), null, 2019-05-07 09:36:44.542(Timestamp)
2019-05-07 09:36:44 -nested exception is org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #3 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (3 > number of parameters, which is 2).
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #3 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (3 > number of parameters, which is 2).
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:167)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:82)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy107.MWaterCountPre1(Unknown Source)
	at com.bootdo.water.service.impl.WaterServiceImpl.MWaterCountPre1(WaterServiceImpl.java:179)
	at com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(tableWaterYYController.java:54)
	at com.bootdo.charts.controller.tableWaterYYController$$FastClassBySpringCGLIB$$e46653e2.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.tableWaterYYController$$EnhancerBySpringCGLIB$$ab68e542.tableWaterYY(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #3 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (3 > number of parameters, which is 2).
	at org.apache.ibatis.scripting.defaults.DefaultParameterHandler.setParameters(DefaultParameterHandler.java:89)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.parameterize(PreparedStatementHandler.java:93)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.parameterize(RoutingStatementHandler.java:64)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:86)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:77)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 100 common frames omitted
Caused by: org.apache.ibatis.type.TypeException: Error setting non null for parameter #3 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (3 > number of parameters, which is 2).
	at org.apache.ibatis.type.BaseTypeHandler.setParameter(BaseTypeHandler.java:55)
	at org.apache.ibatis.scripting.defaults.DefaultParameterHandler.setParameters(DefaultParameterHandler.java:87)
	... 116 common frames omitted
Caused by: java.sql.SQLException: Parameter index out of range (3 > number of parameters, which is 2).
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.PreparedStatement.checkBounds(PreparedStatement.java:3327)
	at com.mysql.jdbc.PreparedStatement.setInternal(PreparedStatement.java:3312)
	at com.mysql.jdbc.PreparedStatement.setString(PreparedStatement.java:4027)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2823)
	at com.alibaba.druid.filter.FilterAdapter.preparedStatement_setString(FilterAdapter.java:1340)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2820)
	at com.alibaba.druid.filter.FilterAdapter.preparedStatement_setString(FilterAdapter.java:1340)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2820)
	at com.alibaba.druid.filter.FilterAdapter.preparedStatement_setString(FilterAdapter.java:1340)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2820)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.setString(PreparedStatementProxyImpl.java:560)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.setString(DruidPooledPreparedStatement.java:365)
	at sun.reflect.GeneratedMethodAccessor124.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:67)
	at com.sun.proxy.$Proxy173.setString(Unknown Source)
	at org.apache.ibatis.type.StringTypeHandler.setNonNullParameter(StringTypeHandler.java:31)
	at org.apache.ibatis.type.StringTypeHandler.setNonNullParameter(StringTypeHandler.java:26)
	at org.apache.ibatis.type.BaseTypeHandler.setParameter(BaseTypeHandler.java:53)
	... 117 common frames omitted
2019-05-07 09:36:44 -<==    Updates: 1
2019-05-07 09:37:00 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-07 09:37:00 -HTTP METHOD : GET
2019-05-07 09:37:00 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-07 09:37:00 -参数 : []
2019-05-07 09:37:01 -耗时 : 9
2019-05-07 09:37:01 -返回值 : charts/tableHeatYY
2019-05-07 09:37:01 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-07 09:37:01 -HTTP METHOD : GET
2019-05-07 09:37:01 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-07 09:37:01 -参数 : [userType]
2019-05-07 09:37:01 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-07 09:37:01 -==> Parameters: userType(String)
2019-05-07 09:37:01 -<==      Total: 4
2019-05-07 09:37:01 -耗时 : 6
2019-05-07 09:37:01 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-07 09:37:05 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-07 09:37:05 -HTTP METHOD : GET
2019-05-07 09:37:05 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-07 09:37:05 -参数 : []
2019-05-07 09:37:05 -耗时 : 0
2019-05-07 09:37:05 -返回值 : system/dept/deptTree
2019-05-07 09:37:05 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-07 09:37:05 -HTTP METHOD : GET
2019-05-07 09:37:05 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-07 09:37:05 -参数 : []
2019-05-07 09:37:05 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-07 09:37:05 -==> Parameters: 
2019-05-07 09:37:05 -<==      Total: 3
2019-05-07 09:37:05 -耗时 : 7
2019-05-07 09:37:05 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-07 09:37:31 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-07 09:37:31 -HTTP METHOD : GET
2019-05-07 09:37:31 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-07 09:37:31 -参数 : []
2019-05-07 09:37:31 -耗时 : 1
2019-05-07 09:37:31 -返回值 : charts/tableElecYY
2019-05-07 09:37:31 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-07 09:37:31 -HTTP METHOD : GET
2019-05-07 09:37:31 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-07 09:37:31 -参数 : [userType]
2019-05-07 09:37:31 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-07 09:37:31 -==> Parameters: userType(String)
2019-05-07 09:37:31 -<==      Total: 4
2019-05-07 09:37:31 -耗时 : 7
2019-05-07 09:37:31 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-07 09:37:34 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-07 09:37:34 -HTTP METHOD : GET
2019-05-07 09:37:34 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-07 09:37:34 -参数 : []
2019-05-07 09:37:34 -耗时 : 1
2019-05-07 09:37:34 -返回值 : system/dept/deptTree
2019-05-07 09:37:34 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-07 09:37:34 -HTTP METHOD : GET
2019-05-07 09:37:34 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-07 09:37:34 -参数 : []
2019-05-07 09:37:34 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-07 09:37:34 -==> Parameters: 
2019-05-07 09:37:34 -<==      Total: 3
2019-05-07 09:37:34 -耗时 : 5
2019-05-07 09:37:34 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-07 09:41:52 -请求地址 : http://localhost:8081/index
2019-05-07 09:41:52 -HTTP METHOD : GET
2019-05-07 09:41:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-07 09:41:52 -参数 : [{}]
2019-05-07 09:41:52 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-07 09:41:52 -==> Parameters: 1(Long)
2019-05-07 09:41:53 -<==      Total: 49
2019-05-07 09:41:53 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-07 09:41:53 -==> Parameters: 138(Long)
2019-05-07 09:41:53 -<==      Total: 1
2019-05-07 09:41:53 -耗时 : 139
2019-05-07 09:41:53 -返回值 : index_v1
2019-05-07 09:41:53 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-07 09:41:53 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 140(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-07 09:41:53.12(Timestamp)
2019-05-07 09:41:53 -请求地址 : http://localhost:8081/main
2019-05-07 09:41:53 -<==    Updates: 1
2019-05-07 09:41:53 -HTTP METHOD : GET
2019-05-07 09:41:53 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-07 09:41:53 -参数 : []
2019-05-07 09:41:53 -耗时 : 70
2019-05-07 09:41:53 -返回值 : main
2019-05-07 09:41:53 -请求地址 : http://localhost:8081/main
2019-05-07 09:41:53 -HTTP METHOD : GET
2019-05-07 09:41:53 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-07 09:41:53 -参数 : []
2019-05-07 09:41:53 -耗时 : 1
2019-05-07 09:41:53 -返回值 : main
2019-05-07 09:41:53 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-07 09:41:53 -HTTP METHOD : GET
2019-05-07 09:41:53 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-07 09:41:53 -参数 : []
2019-05-07 09:41:53 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-07 09:41:53 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-07 09:41:53 -<==      Total: 0
2019-05-07 09:41:53 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-07 09:41:53 -==> Parameters: 1(Long), 0(String)
2019-05-07 09:41:53 -<==      Total: 1
2019-05-07 09:41:53 -耗时 : 232
2019-05-07 09:41:53 -返回值 : com.bootdo.common.utils.PageUtils@69cb2548
2019-05-07 09:42:33 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:20)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:23)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:424)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:232)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-05-07 09:53:44 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-07 09:53:44 -==> Parameters: 1(Long)
2019-05-07 09:53:44 -<==      Total: 93
2019-05-07 09:53:44 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-05-07 09:53:44 -HTTP METHOD : GET
2019-05-07 09:53:44 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-05-07 09:53:44 -参数 : []
2019-05-07 09:53:44 -耗时 : 1
2019-05-07 09:53:44 -返回值 : /moneyLog/elecLog/elecLog
2019-05-07 09:53:45 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-05-07 09:53:45 -HTTP METHOD : GET
2019-05-07 09:53:45 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-07 09:53:45 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-07 09:53:45 -参数 : [elecType]
2019-05-07 09:53:45 -HTTP METHOD : GET
2019-05-07 09:53:45 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-07 09:53:45 -参数 : [userType]
2019-05-07 09:53:45 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-07 09:53:45 -==> Parameters: elecType(String)
2019-05-07 09:53:45 -<==      Total: 11
2019-05-07 09:53:45 -耗时 : 207
2019-05-07 09:53:45 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-07 09:53:45 -==> Parameters: userType(String)
2019-05-07 09:53:45 -返回值 : [DictDO{id=152, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=151, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=150, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=149, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=148, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=147, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=146, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=139, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=137, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=136, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-07 09:53:45 -<==      Total: 4
2019-05-07 09:53:45 -耗时 : 211
2019-05-07 09:53:45 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-07 09:53:45 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-05-07 09:53:45 -HTTP METHOD : GET
2019-05-07 09:53:45 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-05-07 09:53:45 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, elecDate=}]
2019-05-07 09:53:46 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-05-07 09:53:46 -==> Parameters: 0(Integer), 10(Integer)
2019-05-07 09:53:46 -<==      Total: 10
2019-05-07 09:53:46 -==>  Preparing: select count(*) from elec_log 
2019-05-07 09:53:46 -==> Parameters: 
2019-05-07 09:53:46 -<==      Total: 1
2019-05-07 09:53:46 -耗时 : 981
2019-05-07 09:53:46 -返回值 : com.bootdo.common.utils.PageUtils@4a35e7df
2019-05-07 09:53:50 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-05-07 09:53:50 -HTTP METHOD : GET
2019-05-07 09:53:50 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-05-07 09:53:50 -参数 : []
2019-05-07 09:53:50 -耗时 : 1
2019-05-07 09:53:50 -返回值 : /moneyLog/waterLog/waterLog
2019-05-07 09:53:50 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-07 09:53:50 -HTTP METHOD : GET
2019-05-07 09:53:50 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-07 09:53:50 -参数 : [userType]
2019-05-07 09:53:50 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-07 09:53:50 -==> Parameters: userType(String)
2019-05-07 09:53:50 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-05-07 09:53:50 -HTTP METHOD : GET
2019-05-07 09:53:50 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-07 09:53:50 -参数 : [waterType]
2019-05-07 09:53:50 -<==      Total: 4
2019-05-07 09:53:50 -耗时 : 6
2019-05-07 09:53:50 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-07 09:53:50 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-07 09:53:50 -==> Parameters: waterType(String)
2019-05-07 09:53:50 -<==      Total: 2
2019-05-07 09:53:50 -耗时 : 10
2019-05-07 09:53:50 -返回值 : [DictDO{id=128, name='民用水', value='1', type='waterType', description='水费性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=127, name='商业水', value='2', type='waterType', description='水费性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-07 09:53:50 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-05-07 09:53:50 -HTTP METHOD : GET
2019-05-07 09:53:50 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-05-07 09:53:50 -参数 : [{limit=10, offset=0, userType=, waterType=, userOrg=, userId=, waterDate=}]
2019-05-07 09:53:50 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-05-07 09:53:50 -==> Parameters: 0(Integer), 10(Integer)
2019-05-07 09:53:51 -<==      Total: 6
2019-05-07 09:53:51 -==>  Preparing: select count(*) from water_log 
2019-05-07 09:53:51 -==> Parameters: 
2019-05-07 09:53:51 -<==      Total: 1
2019-05-07 09:53:51 -耗时 : 607
2019-05-07 09:53:51 -返回值 : com.bootdo.common.utils.PageUtils@4d039b1f
2019-05-07 09:54:03 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-07 09:54:03 -HTTP METHOD : GET
2019-05-07 09:54:03 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-07 09:54:03 -参数 : []
2019-05-07 09:54:03 -耗时 : 1
2019-05-07 09:54:03 -返回值 : system/dept/deptTree
2019-05-07 09:54:04 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-07 09:54:04 -HTTP METHOD : GET
2019-05-07 09:54:04 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-07 09:54:04 -参数 : []
2019-05-07 09:54:04 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-07 09:54:04 -==> Parameters: 
2019-05-07 09:54:04 -<==      Total: 3
2019-05-07 09:54:04 -耗时 : 5
2019-05-07 09:54:04 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-07 09:54:09 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-05-07 09:54:09 -HTTP METHOD : GET
2019-05-07 09:54:09 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-05-07 09:54:09 -参数 : [{limit=10, offset=0, userType=A, waterType=, userOrg=2, userId=, waterDate=2019-03-08, type=A}]
2019-05-07 09:54:09 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log WHERE `water_date` >= ? and `water_date` <= ? and user_type = ? and user_org = ? order by id asc limit ?, ? 
2019-05-07 09:54:09 -==> Parameters: 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String), A(String), 2(String), 0(Integer), 10(Integer)
2019-05-07 09:54:09 -<==      Total: 2
2019-05-07 09:54:09 -==>  Preparing: select count(*) from water_log WHERE `water_date` >= ? and `water_date` <= ? and user_type = ? and user_org = ? 
2019-05-07 09:54:09 -==> Parameters: 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String), A(String), 2(String)
2019-05-07 09:54:09 -<==      Total: 1
2019-05-07 09:54:09 -耗时 : 363
2019-05-07 09:54:09 -返回值 : com.bootdo.common.utils.PageUtils@3ac9ffd6
2019-05-07 09:54:14 -请求地址 : http://localhost:8081/moneyLog/waterLog/exprotWaterLog
2019-05-07 09:54:14 -HTTP METHOD : GET
2019-05-07 09:54:14 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog
2019-05-07 09:54:14 -参数 : [com.bootdo.moneyLog.vo.WaterLogVo@4f714cff, org.apache.shiro.web.servlet.ShiroHttpServletResponse@75966685, org.apache.shiro.web.servlet.ShiroHttpServletRequest@cf871d6]
2019-05-07 09:54:14 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log WHERE `water_date` >= ? and `water_date` <= ? and user_type = ? and user_org = ? 
2019-05-07 09:54:14 -==> Parameters: 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String), A(String), 2(String)
2019-05-07 09:54:14 -<==      Total: 2
2019-05-07 09:54:24 -耗时 : 9669
2019-05-07 09:54:24 -返回值 : null
2019-05-07 09:55:57 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-05-07 09:55:57 -HTTP METHOD : GET
2019-05-07 09:55:57 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-05-07 09:55:57 -参数 : []
2019-05-07 09:55:57 -耗时 : 1
2019-05-07 09:55:57 -返回值 : /moneyLog/heatLog/heatLog
2019-05-07 09:55:58 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-05-07 09:55:58 -HTTP METHOD : GET
2019-05-07 09:55:58 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-05-07 09:55:58 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-05-07 09:55:58 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-07 09:55:58 -HTTP METHOD : GET
2019-05-07 09:55:58 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-07 09:55:58 -参数 : [userType]
2019-05-07 09:55:58 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-05-07 09:55:58 -HTTP METHOD : GET
2019-05-07 09:55:58 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-07 09:55:58 -参数 : [heatType]
2019-05-07 09:55:58 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-07 09:55:58 -==> Parameters: heatType(String)
2019-05-07 09:55:58 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-07 09:55:58 -==> Parameters: userType(String)
2019-05-07 09:55:58 -<==      Total: 4
2019-05-07 09:55:58 -耗时 : 189
2019-05-07 09:55:58 -返回值 : [DictDO{id=154, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=153, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=134, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=133, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-07 09:55:58 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-05-07 09:55:58 -==> Parameters: 0(Integer), 10(Integer)
2019-05-07 09:55:58 -<==      Total: 4
2019-05-07 09:55:58 -耗时 : 707
2019-05-07 09:55:58 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-07 09:55:58 -<==      Total: 6
2019-05-07 09:55:58 -==>  Preparing: select count(*) from heat_log 
2019-05-07 09:55:58 -==> Parameters: 
2019-05-07 09:55:58 -<==      Total: 1
2019-05-07 09:55:58 -耗时 : 884
2019-05-07 09:55:58 -返回值 : com.bootdo.common.utils.PageUtils@6a64b92a
2019-05-07 09:56:00 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-05-07 09:56:00 -HTTP METHOD : GET
2019-05-07 09:56:00 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-05-07 09:56:00 -参数 : []
2019-05-07 09:56:00 -耗时 : 2
2019-05-07 09:56:00 -返回值 : /moneyLog/heatLog/heatLog
2019-05-07 09:56:00 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-05-07 09:56:00 -HTTP METHOD : GET
2019-05-07 09:56:00 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-07 09:56:00 -参数 : [heatType]
2019-05-07 09:56:00 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-07 09:56:00 -==> Parameters: heatType(String)
2019-05-07 09:56:00 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-07 09:56:00 -HTTP METHOD : GET
2019-05-07 09:56:00 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-07 09:56:00 -参数 : [userType]
2019-05-07 09:56:00 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-07 09:56:00 -==> Parameters: userType(String)
2019-05-07 09:56:00 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-05-07 09:56:00 -HTTP METHOD : GET
2019-05-07 09:56:00 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-05-07 09:56:00 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-05-07 09:56:00 -<==      Total: 4
2019-05-07 09:56:00 -耗时 : 8
2019-05-07 09:56:00 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-05-07 09:56:00 -返回值 : [DictDO{id=154, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=153, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=134, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=133, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-07 09:56:00 -<==      Total: 4
2019-05-07 09:56:00 -==> Parameters: 0(Integer), 10(Integer)
2019-05-07 09:56:00 -耗时 : 6
2019-05-07 09:56:00 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-07 09:56:00 -<==      Total: 6
2019-05-07 09:56:00 -==>  Preparing: select count(*) from heat_log 
2019-05-07 09:56:00 -==> Parameters: 
2019-05-07 09:56:00 -<==      Total: 1
2019-05-07 09:56:00 -耗时 : 15
2019-05-07 09:56:00 -返回值 : com.bootdo.common.utils.PageUtils@3aba2518
2019-05-07 09:56:01 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-05-07 09:56:01 -HTTP METHOD : GET
2019-05-07 09:56:01 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-05-07 09:56:01 -参数 : []
2019-05-07 09:56:01 -耗时 : 0
2019-05-07 09:56:01 -返回值 : /moneyLog/heatLog/heatLog
2019-05-07 09:56:01 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-05-07 09:56:01 -HTTP METHOD : GET
2019-05-07 09:56:01 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-07 09:56:01 -参数 : [heatType]
2019-05-07 09:56:01 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-07 09:56:01 -==> Parameters: heatType(String)
2019-05-07 09:56:01 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-07 09:56:01 -HTTP METHOD : GET
2019-05-07 09:56:01 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-07 09:56:01 -参数 : [userType]
2019-05-07 09:56:01 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-05-07 09:56:01 -HTTP METHOD : GET
2019-05-07 09:56:01 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-05-07 09:56:01 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-05-07 09:56:01 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-05-07 09:56:01 -==> Parameters: 0(Integer), 10(Integer)
2019-05-07 09:56:01 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-07 09:56:01 -==> Parameters: userType(String)
2019-05-07 09:56:01 -<==      Total: 4
2019-05-07 09:56:01 -耗时 : 69
2019-05-07 09:56:01 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-07 09:56:01 -<==      Total: 6
2019-05-07 09:56:01 -==>  Preparing: select count(*) from heat_log 
2019-05-07 09:56:01 -==> Parameters: 
2019-05-07 09:56:01 -<==      Total: 1
2019-05-07 09:56:01 -耗时 : 134
2019-05-07 09:56:01 -返回值 : com.bootdo.common.utils.PageUtils@225a4661
2019-05-07 09:56:01 -<==      Total: 4
2019-05-07 09:56:01 -耗时 : 527
2019-05-07 09:56:01 -返回值 : [DictDO{id=154, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=153, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=134, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=133, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-07 09:56:02 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-05-07 09:56:02 -HTTP METHOD : GET
2019-05-07 09:56:02 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-05-07 09:56:02 -参数 : []
2019-05-07 09:56:02 -耗时 : 1
2019-05-07 09:56:02 -返回值 : /moneyLog/heatLog/heatLog
2019-05-07 09:56:02 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-05-07 09:56:02 -HTTP METHOD : GET
2019-05-07 09:56:02 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-05-07 09:56:02 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-05-07 09:56:02 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-05-07 09:56:02 -==> Parameters: 0(Integer), 10(Integer)
2019-05-07 09:56:02 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-07 09:56:02 -HTTP METHOD : GET
2019-05-07 09:56:02 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-07 09:56:02 -参数 : [userType]
2019-05-07 09:56:02 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-05-07 09:56:02 -HTTP METHOD : GET
2019-05-07 09:56:02 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-07 09:56:02 -参数 : [heatType]
2019-05-07 09:56:02 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-07 09:56:02 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-07 09:56:02 -==> Parameters: heatType(String)
2019-05-07 09:56:02 -<==      Total: 4
2019-05-07 09:56:02 -耗时 : 4
2019-05-07 09:56:02 -返回值 : [DictDO{id=154, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=153, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=134, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=133, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-07 09:56:02 -==> Parameters: userType(String)
2019-05-07 09:56:02 -<==      Total: 4
2019-05-07 09:56:02 -耗时 : 12
2019-05-07 09:56:02 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-07 09:56:05 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-05-07 09:56:05 -HTTP METHOD : GET
2019-05-07 09:56:05 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-05-07 09:56:05 -参数 : []
2019-05-07 09:56:05 -耗时 : 1
2019-05-07 09:56:05 -返回值 : /moneyLog/elecLog/elecLog
2019-05-07 09:56:05 -<==      Total: 6
2019-05-07 09:56:05 -==>  Preparing: select count(*) from heat_log 
2019-05-07 09:56:05 -==> Parameters: 
2019-05-07 09:56:05 -<==      Total: 1
2019-05-07 09:56:05 -耗时 : 2209
2019-05-07 09:56:05 -返回值 : com.bootdo.common.utils.PageUtils@268e1897
2019-05-07 09:56:05 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-07 09:56:05 -HTTP METHOD : GET
2019-05-07 09:56:05 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-07 09:56:05 -参数 : [userType]
2019-05-07 09:56:05 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-07 09:56:05 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-05-07 09:56:05 -HTTP METHOD : GET
2019-05-07 09:56:05 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-07 09:56:05 -==> Parameters: userType(String)
2019-05-07 09:56:05 -参数 : [elecType]
2019-05-07 09:56:05 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-07 09:56:05 -==> Parameters: elecType(String)
2019-05-07 09:56:05 -<==      Total: 4
2019-05-07 09:56:05 -耗时 : 55
2019-05-07 09:56:05 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-07 09:56:05 -<==      Total: 11
2019-05-07 09:56:05 -耗时 : 56
2019-05-07 09:56:05 -返回值 : [DictDO{id=152, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=151, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=150, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=149, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=148, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=147, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=146, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=139, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=137, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=136, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-07 09:56:05 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-05-07 09:56:05 -HTTP METHOD : GET
2019-05-07 09:56:05 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-05-07 09:56:05 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, elecDate=}]
2019-05-07 09:56:05 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-05-07 09:56:05 -==> Parameters: 0(Integer), 10(Integer)
2019-05-07 09:56:05 -<==      Total: 10
2019-05-07 09:56:05 -==>  Preparing: select count(*) from elec_log 
2019-05-07 09:56:05 -==> Parameters: 
2019-05-07 09:56:05 -<==      Total: 1
2019-05-07 09:56:05 -耗时 : 23
2019-05-07 09:56:05 -返回值 : com.bootdo.common.utils.PageUtils@734e6118
2019-05-07 09:56:43 -请求地址 : http://localhost:8081/print/print
2019-05-07 09:56:43 -HTTP METHOD : GET
2019-05-07 09:56:43 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-05-07 09:56:43 -参数 : []
2019-05-07 09:56:43 -耗时 : 3
2019-05-07 09:56:43 -返回值 : print/print/print
2019-05-07 09:56:43 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-07 09:56:43 -HTTP METHOD : GET
2019-05-07 09:56:43 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-07 09:56:43 -参数 : [userType]
2019-05-07 09:56:43 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-07 09:56:43 -==> Parameters: userType(String)
2019-05-07 09:56:43 -<==      Total: 4
2019-05-07 09:56:43 -耗时 : 6
2019-05-07 09:56:43 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-07 09:56:43 -请求地址 : http://localhost:8081/print/print/list
2019-05-07 09:56:43 -HTTP METHOD : GET
2019-05-07 09:56:43 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-05-07 09:56:43 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-05-07 09:56:44 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-05-07 09:56:44 -==> Parameters: 0(Integer), 10(Integer)
2019-05-07 09:56:44 -<==      Total: 5
2019-05-07 09:56:44 -==>  Preparing: select count(*) from print 
2019-05-07 09:56:44 -==> Parameters: 
2019-05-07 09:56:44 -<==      Total: 1
2019-05-07 09:56:44 -耗时 : 1078
2019-05-07 09:56:44 -返回值 : com.bootdo.common.utils.PageUtils@22a74876
2019-05-07 09:56:47 -请求地址 : http://localhost:8081/print/print/printEdit/1
2019-05-07 09:56:47 -HTTP METHOD : GET
2019-05-07 09:56:47 -CLASS_METHOD : com.bootdo.print.controller.PrintController.printEdit
2019-05-07 09:56:47 -参数 : [1, {}]
2019-05-07 09:56:47 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-05-07 09:56:47 -==> Parameters: 1(Long)
2019-05-07 09:56:47 -<==      Total: 1
2019-05-07 09:56:47 -耗时 : 47
2019-05-07 09:56:47 -返回值 : print/print/printEdit
2019-05-07 09:59:24 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-07 09:59:24 -HTTP METHOD : GET
2019-05-07 09:59:24 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-07 09:59:24 -参数 : []
2019-05-07 09:59:24 -耗时 : 1
2019-05-07 09:59:24 -返回值 : system/dept/deptTree
2019-05-07 09:59:24 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-07 09:59:24 -HTTP METHOD : GET
2019-05-07 09:59:24 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-07 09:59:24 -参数 : []
2019-05-07 09:59:24 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-07 09:59:24 -==> Parameters: 
2019-05-07 09:59:24 -<==      Total: 3
2019-05-07 09:59:24 -耗时 : 7
2019-05-07 09:59:24 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-07 09:59:28 -请求地址 : http://localhost:8081/print/print/edit/1
2019-05-07 09:59:28 -HTTP METHOD : GET
2019-05-07 09:59:28 -CLASS_METHOD : com.bootdo.print.controller.PrintController.edit
2019-05-07 09:59:28 -参数 : [1, {}]
2019-05-07 09:59:28 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-05-07 09:59:28 -==> Parameters: 1(Long)
2019-05-07 09:59:28 -<==      Total: 1
2019-05-07 09:59:28 -耗时 : 19
2019-05-07 09:59:28 -返回值 : print/print/edit
2019-05-07 09:59:28 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-07 09:59:28 -HTTP METHOD : GET
2019-05-07 09:59:28 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-07 09:59:28 -参数 : [userType]
2019-05-07 09:59:28 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-07 09:59:28 -==> Parameters: userType(String)
2019-05-07 09:59:28 -<==      Total: 4
2019-05-07 09:59:28 -耗时 : 4
2019-05-07 09:59:28 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-07 10:00:32 -请求地址 : http://localhost:8081/elec/elecPrice
2019-05-07 10:00:32 -HTTP METHOD : GET
2019-05-07 10:00:32 -CLASS_METHOD : com.bootdo.elec.controller.ElecPriceController.ElecPrice
2019-05-07 10:00:32 -参数 : []
2019-05-07 10:00:32 -耗时 : 0
2019-05-07 10:00:32 -返回值 : elec/elecPrice/elecPrice
2019-05-07 10:00:33 -请求地址 : http://localhost:8081/elec/elecPrice/list
2019-05-07 10:00:33 -HTTP METHOD : GET
2019-05-07 10:00:33 -CLASS_METHOD : com.bootdo.elec.controller.ElecPriceController.list
2019-05-07 10:00:33 -参数 : [{limit=10, offset=0}]
2019-05-07 10:00:33 -==>  Preparing: select `id`,`elec_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `elec_org`) AS elecOrgName,`business_elec`,`civil_elec`,`noindustry_elec`,`industry_elec`,`special_1`,`special_2`,`special_3`,`special_4`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_price order by id desc limit ?, ? 
2019-05-07 10:00:33 -==> Parameters: 0(Integer), 10(Integer)
2019-05-07 10:00:33 -<==      Total: 2
2019-05-07 10:00:33 -==>  Preparing: select count(*) from elec_price 
2019-05-07 10:00:33 -==> Parameters: 
2019-05-07 10:00:33 -<==      Total: 1
2019-05-07 10:00:33 -耗时 : 516
2019-05-07 10:00:33 -返回值 : com.bootdo.common.utils.PageUtils@188d2a52
2019-05-07 10:00:40 -请求地址 : http://localhost:8081/elec/elecPrice/edit/2
2019-05-07 10:00:40 -HTTP METHOD : GET
2019-05-07 10:00:40 -CLASS_METHOD : com.bootdo.elec.controller.ElecPriceController.edit
2019-05-07 10:00:40 -参数 : [2, {}]
2019-05-07 10:00:40 -==>  Preparing: select `id`, `elec_org`, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `elec_org`) AS elecOrgName, `business_elec`, `civil_elec`, `noindustry_elec`, `industry_elec`, `special_1`, `special_2`, `special_3`, `special_4`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` from elec_price where id = ? 
2019-05-07 10:00:40 -==> Parameters: 2(Long)
2019-05-07 10:00:40 -<==      Total: 1
2019-05-07 10:00:40 -耗时 : 40
2019-05-07 10:00:40 -返回值 : elec/elecPrice/edit
2019-05-07 10:05:59 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 21], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 3], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 430]
2019-05-07 10:35:34 -Validating all active sessions...
2019-05-07 10:35:34 -Finished session validation.  [2] sessions were stopped.
2019-05-07 10:35:59 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 21], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 3], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 863]
2019-05-07 11:05:59 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 21], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 3], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 1296]
2019-05-07 11:35:34 -Validating all active sessions...
2019-05-07 11:35:34 -Finished session validation.  No sessions were stopped.
2019-05-07 11:35:59 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 21], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 3], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 1729]
2019-05-07 12:05:59 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 21], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 3], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 2162]
2019-05-07 12:45:16 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 21], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 3], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 2655]
2019-05-07 13:05:59 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 21], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 3], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 2954]
2019-05-07 13:06:40 -Validating all active sessions...
2019-05-07 13:06:40 -Finished session validation.  No sessions were stopped.
2019-05-07 13:25:04 -Starting BootdoApplication on ZJZL-20180906VX with PID 2288 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-07 13:25:04 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-07 13:25:04 -The following profiles are active: dev
2019-05-07 13:25:05 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Tue May 07 13:25:05 CST 2019]; root of context hierarchy
2019-05-07 13:25:21 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-07 13:25:23 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$464ea31d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 13:25:23 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$38a7d1c4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 13:25:25 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 13:25:26 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 13:25:26 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 13:25:26 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-07 13:25:26 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-07 13:25:26 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 13:25:26 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 13:25:26 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 13:25:26 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 13:25:27 -Tomcat initialized with port(s): 8081 (http)
2019-05-07 13:25:27 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-07 13:25:27 -Starting service [Tomcat]
2019-05-07 13:25:27 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-07 13:25:27 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-07 13:25:28 -Initializing Spring embedded WebApplicationContext
2019-05-07 13:25:28 -Root WebApplicationContext: initialization completed in 23234 ms
2019-05-07 13:25:29 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-07 13:25:29 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-07 13:25:29 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-07 13:25:29 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-07 13:25:29 -Filter xssFilter was not registered (disabled)
2019-05-07 13:25:29 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-07 13:25:29 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-07 13:25:29 -Servlet statViewServlet mapped to [/druid/*]
2019-05-07 13:25:29 -Servlet dispatcherServlet mapped to [/]
2019-05-07 13:25:35 -Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'countDDController': Unsatisfied dependency expressed through field 'elecLogService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogServiceImpl': Unsatisfied dependency expressed through field 'elecLogDao'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogDao' defined in file [D:\eclipse2018-work\bootdo\target\classes\com\bootdo\moneyLog\dao\ElecLogDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\eclipse2018-work\bootdo\target\classes\mybatis\water\WaterMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: java.lang.IllegalArgumentException: Mapped Statements collection already contains value for com.bootdo.water.dao.WaterDao.LMWaterSumPre1
2019-05-07 13:25:35 -Stopping service [Tomcat]
2019-05-07 13:25:36 -

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2019-05-07 13:25:36 -Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'countDDController': Unsatisfied dependency expressed through field 'elecLogService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogServiceImpl': Unsatisfied dependency expressed through field 'elecLogDao'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogDao' defined in file [D:\eclipse2018-work\bootdo\target\classes\com\bootdo\moneyLog\dao\ElecLogDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\eclipse2018-work\bootdo\target\classes\mybatis\water\WaterMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: java.lang.IllegalArgumentException: Mapped Statements collection already contains value for com.bootdo.water.dao.WaterDao.LMWaterSumPre1
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:587)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:91)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:373)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1350)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:580)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:760)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:869)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.bootdo.BootdoApplication.main(BootdoApplication.java:22)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogServiceImpl': Unsatisfied dependency expressed through field 'elecLogDao'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogDao' defined in file [D:\eclipse2018-work\bootdo\target\classes\com\bootdo\moneyLog\dao\ElecLogDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\eclipse2018-work\bootdo\target\classes\mybatis\water\WaterMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: java.lang.IllegalArgumentException: Mapped Statements collection already contains value for com.bootdo.water.dao.WaterDao.LMWaterSumPre1
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:587)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:91)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:373)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1350)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:580)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:251)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1065)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:584)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogDao' defined in file [D:\eclipse2018-work\bootdo\target\classes\com\bootdo\moneyLog\dao\ElecLogDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\eclipse2018-work\bootdo\target\classes\mybatis\water\WaterMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: java.lang.IllegalArgumentException: Mapped Statements collection already contains value for com.bootdo.water.dao.WaterDao.LMWaterSumPre1
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1445)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1332)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:580)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:251)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1065)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:584)
	... 32 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\eclipse2018-work\bootdo\target\classes\mybatis\water\WaterMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: java.lang.IllegalArgumentException: Mapped Statements collection already contains value for com.bootdo.water.dao.WaterDao.LMWaterSumPre1
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:590)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1256)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1105)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:251)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1065)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1430)
	... 43 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\eclipse2018-work\bootdo\target\classes\mybatis\water\WaterMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: java.lang.IllegalArgumentException: Mapped Statements collection already contains value for com.bootdo.water.dao.WaterDao.LMWaterSumPre1
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:582)
	... 55 common frames omitted
Caused by: org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\eclipse2018-work\bootdo\target\classes\mybatis\water\WaterMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: java.lang.IllegalArgumentException: Mapped Statements collection already contains value for com.bootdo.water.dao.WaterDao.LMWaterSumPre1
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:522)
	at org.mybatis.spring.SqlSessionFactoryBean.afterPropertiesSet(SqlSessionFactoryBean.java:381)
	at org.mybatis.spring.SqlSessionFactoryBean.getObject(SqlSessionFactoryBean.java:546)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration.sqlSessionFactory(MybatisAutoConfiguration.java:130)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$7922f44d.CGLIB$sqlSessionFactory$1(<generated>)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$7922f44d$$FastClassBySpringCGLIB$$3fd1198e.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:361)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$7922f44d.sqlSessionFactory(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 56 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: java.lang.IllegalArgumentException: Mapped Statements collection already contains value for com.bootdo.water.dao.WaterDao.LMWaterSumPre1
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:120)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.parse(XMLMapperBuilder.java:92)
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:520)
	... 69 common frames omitted
Caused by: java.lang.IllegalArgumentException: Mapped Statements collection already contains value for com.bootdo.water.dao.WaterDao.LMWaterSumPre1
	at org.apache.ibatis.session.Configuration$StrictMap.put(Configuration.java:859)
	at org.apache.ibatis.session.Configuration$StrictMap.put(Configuration.java:831)
	at org.apache.ibatis.session.Configuration.addMappedStatement(Configuration.java:655)
	at org.apache.ibatis.builder.MapperBuilderAssistant.addMappedStatement(MapperBuilderAssistant.java:302)
	at org.apache.ibatis.builder.xml.XMLStatementBuilder.parseStatementNode(XMLStatementBuilder.java:109)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.buildStatementFromContext(XMLMapperBuilder.java:135)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.buildStatementFromContext(XMLMapperBuilder.java:128)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:118)
	... 71 common frames omitted
2019-05-07 14:55:02 -Starting BootdoApplication on ZJZL-20180906VX with PID 16184 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-07 14:55:02 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-07 14:55:02 -The following profiles are active: dev
2019-05-07 14:55:02 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Tue May 07 14:55:02 CST 2019]; root of context hierarchy
2019-05-07 14:55:07 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-07 14:55:11 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$9594011c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 14:55:11 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$87ed2fc3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 14:55:13 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 14:55:20 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 14:55:20 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 14:55:20 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-07 14:55:20 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-07 14:55:20 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 14:55:21 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 14:55:21 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 14:55:21 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 14:55:22 -Tomcat initialized with port(s): 8081 (http)
2019-05-07 14:55:22 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-07 14:55:22 -Starting service [Tomcat]
2019-05-07 14:55:22 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-07 14:55:23 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-07 14:55:23 -Initializing Spring embedded WebApplicationContext
2019-05-07 14:55:23 -Root WebApplicationContext: initialization completed in 20909 ms
2019-05-07 14:55:24 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-07 14:55:24 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-07 14:55:24 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-07 14:55:24 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-07 14:55:24 -Filter xssFilter was not registered (disabled)
2019-05-07 14:55:24 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-07 14:55:24 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-07 14:55:24 -Servlet statViewServlet mapped to [/druid/*]
2019-05-07 14:55:24 -Servlet dispatcherServlet mapped to [/]
2019-05-07 14:55:32 -Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'countDDController': Unsatisfied dependency expressed through field 'elecLogService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogServiceImpl': Unsatisfied dependency expressed through field 'elecLogDao'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogDao' defined in file [D:\eclipse2018-work\bootdo\target\classes\com\bootdo\moneyLog\dao\ElecLogDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\eclipse2018-work\bootdo\target\classes\mybatis\water\WaterMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: java.lang.IllegalArgumentException: Mapped Statements collection already contains value for com.bootdo.water.dao.WaterDao.LMWaterSumPre1
2019-05-07 14:55:32 -Stopping service [Tomcat]
2019-05-07 14:55:32 -

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2019-05-07 14:55:32 -Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'countDDController': Unsatisfied dependency expressed through field 'elecLogService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogServiceImpl': Unsatisfied dependency expressed through field 'elecLogDao'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogDao' defined in file [D:\eclipse2018-work\bootdo\target\classes\com\bootdo\moneyLog\dao\ElecLogDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\eclipse2018-work\bootdo\target\classes\mybatis\water\WaterMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: java.lang.IllegalArgumentException: Mapped Statements collection already contains value for com.bootdo.water.dao.WaterDao.LMWaterSumPre1
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:587)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:91)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:373)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1350)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:580)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:760)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:869)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.bootdo.BootdoApplication.main(BootdoApplication.java:22)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogServiceImpl': Unsatisfied dependency expressed through field 'elecLogDao'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogDao' defined in file [D:\eclipse2018-work\bootdo\target\classes\com\bootdo\moneyLog\dao\ElecLogDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\eclipse2018-work\bootdo\target\classes\mybatis\water\WaterMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: java.lang.IllegalArgumentException: Mapped Statements collection already contains value for com.bootdo.water.dao.WaterDao.LMWaterSumPre1
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:587)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:91)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:373)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1350)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:580)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:251)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1065)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:584)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogDao' defined in file [D:\eclipse2018-work\bootdo\target\classes\com\bootdo\moneyLog\dao\ElecLogDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\eclipse2018-work\bootdo\target\classes\mybatis\water\WaterMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: java.lang.IllegalArgumentException: Mapped Statements collection already contains value for com.bootdo.water.dao.WaterDao.LMWaterSumPre1
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1445)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1332)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:580)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:251)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1065)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:584)
	... 32 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\eclipse2018-work\bootdo\target\classes\mybatis\water\WaterMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: java.lang.IllegalArgumentException: Mapped Statements collection already contains value for com.bootdo.water.dao.WaterDao.LMWaterSumPre1
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:590)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1256)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1105)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:251)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1065)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1430)
	... 43 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\eclipse2018-work\bootdo\target\classes\mybatis\water\WaterMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: java.lang.IllegalArgumentException: Mapped Statements collection already contains value for com.bootdo.water.dao.WaterDao.LMWaterSumPre1
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:582)
	... 55 common frames omitted
Caused by: org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\eclipse2018-work\bootdo\target\classes\mybatis\water\WaterMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: java.lang.IllegalArgumentException: Mapped Statements collection already contains value for com.bootdo.water.dao.WaterDao.LMWaterSumPre1
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:522)
	at org.mybatis.spring.SqlSessionFactoryBean.afterPropertiesSet(SqlSessionFactoryBean.java:381)
	at org.mybatis.spring.SqlSessionFactoryBean.getObject(SqlSessionFactoryBean.java:546)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration.sqlSessionFactory(MybatisAutoConfiguration.java:130)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$c868524c.CGLIB$sqlSessionFactory$1(<generated>)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$c868524c$$FastClassBySpringCGLIB$$ecb03671.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:361)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$c868524c.sqlSessionFactory(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 56 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: java.lang.IllegalArgumentException: Mapped Statements collection already contains value for com.bootdo.water.dao.WaterDao.LMWaterSumPre1
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:120)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.parse(XMLMapperBuilder.java:92)
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:520)
	... 69 common frames omitted
Caused by: java.lang.IllegalArgumentException: Mapped Statements collection already contains value for com.bootdo.water.dao.WaterDao.LMWaterSumPre1
	at org.apache.ibatis.session.Configuration$StrictMap.put(Configuration.java:859)
	at org.apache.ibatis.session.Configuration$StrictMap.put(Configuration.java:831)
	at org.apache.ibatis.session.Configuration.addMappedStatement(Configuration.java:655)
	at org.apache.ibatis.builder.MapperBuilderAssistant.addMappedStatement(MapperBuilderAssistant.java:302)
	at org.apache.ibatis.builder.xml.XMLStatementBuilder.parseStatementNode(XMLStatementBuilder.java:109)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.buildStatementFromContext(XMLMapperBuilder.java:135)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.buildStatementFromContext(XMLMapperBuilder.java:128)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:118)
	... 71 common frames omitted
2019-05-07 15:22:13 -Starting BootdoApplication on ZJZL-20180906VX with PID 648 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-07 15:22:13 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-07 15:22:13 -The following profiles are active: dev
2019-05-07 15:22:14 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Tue May 07 15:22:14 CST 2019]; root of context hierarchy
2019-05-07 15:22:17 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-07 15:22:19 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$9594011c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 15:22:19 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$87ed2fc3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 15:22:20 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 15:22:21 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 15:22:21 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 15:22:21 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-07 15:22:21 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-07 15:22:21 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 15:22:21 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 15:22:21 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 15:22:21 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 15:22:22 -Tomcat initialized with port(s): 8081 (http)
2019-05-07 15:22:22 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-07 15:22:22 -Starting service [Tomcat]
2019-05-07 15:22:22 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-07 15:22:22 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-07 15:22:22 -Initializing Spring embedded WebApplicationContext
2019-05-07 15:22:22 -Root WebApplicationContext: initialization completed in 8781 ms
2019-05-07 15:22:23 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-07 15:22:23 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-07 15:22:23 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-07 15:22:23 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-07 15:22:23 -Filter xssFilter was not registered (disabled)
2019-05-07 15:22:23 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-07 15:22:23 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-07 15:22:23 -Servlet statViewServlet mapped to [/druid/*]
2019-05-07 15:22:23 -Servlet dispatcherServlet mapped to [/]
2019-05-07 15:22:36 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Tue May 07 15:22:14 CST 2019]; root of context hierarchy
2019-05-07 15:22:37 -Using default implementation for ThreadExecutor
2019-05-07 15:22:37 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-07 15:22:37 -Quartz Scheduler v.2.2.1 created.
2019-05-07 15:22:37 -RAMJobStore initialized.
2019-05-07 15:22:37 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-07 15:22:37 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-07 15:22:37 -Quartz scheduler version: 2.2.1
2019-05-07 15:22:37 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@54c11750
2019-05-07 15:22:38 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-07 15:22:38 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-07 15:22:41 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-07 15:22:41 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-07 15:22:41 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-07 15:22:41 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-07 15:22:41 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-07 15:22:41 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-07 15:22:41 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-07 15:22:41 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-07 15:22:41 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-07 15:22:41 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-07 15:22:41 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-07 15:22:41 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-07 15:22:41 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-07 15:22:41 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-07 15:22:41 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-07 15:22:41 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-07 15:22:41 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-07 15:22:41 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-07 15:22:41 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-07 15:22:41 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-07 15:22:41 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-07 15:22:41 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.getCountYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-07 15:22:41 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-07 15:22:41 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-07 15:22:41 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-07 15:22:41 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-07 15:22:41 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-07 15:22:41 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.getCountMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-07 15:22:41 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-07 15:22:41 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-07 15:22:41 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-07 15:22:41 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-07 15:22:41 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-05-07 15:22:41 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-07 15:22:41 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-07 15:22:41 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-07 15:22:41 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-07 15:22:41 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-07 15:22:41 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-07 15:22:41 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-07 15:22:41 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-07 15:22:41 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-07 15:22:41 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-07 15:22:41 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-07 15:22:41 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-07 15:22:41 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-07 15:22:41 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-07 15:22:41 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-07 15:22:41 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-07 15:22:41 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-07 15:22:41 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-07 15:22:41 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-07 15:22:41 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-07 15:22:41 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-07 15:22:41 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-07 15:22:41 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-07 15:22:41 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-07 15:22:41 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-07 15:22:41 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-07 15:22:41 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-07 15:22:41 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-07 15:22:41 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-07 15:22:41 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-07 15:22:41 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-07 15:22:41 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-07 15:22:41 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-07 15:22:41 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-07 15:22:41 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-07 15:22:41 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-07 15:22:41 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-07 15:22:41 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-07 15:22:41 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-07 15:22:41 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-07 15:22:41 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-07 15:22:41 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-07 15:22:41 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-07 15:22:41 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-07 15:22:41 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-07 15:22:41 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-07 15:22:41 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-07 15:22:41 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-07 15:22:41 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-07 15:22:41 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-07 15:22:41 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-07 15:22:41 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-07 15:22:41 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-07 15:22:41 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-07 15:22:41 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-07 15:22:41 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-07 15:22:41 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-07 15:22:41 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-07 15:22:41 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-07 15:22:41 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-07 15:22:41 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-07 15:22:41 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-07 15:22:41 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-07 15:22:41 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-07 15:22:41 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-07 15:22:41 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-07 15:22:41 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-07 15:22:41 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-07 15:22:41 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-07 15:22:41 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-07 15:22:41 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-07 15:22:41 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-07 15:22:41 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-07 15:22:41 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-07 15:22:41 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-07 15:22:41 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-07 15:22:41 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-07 15:22:41 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-07 15:22:41 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-07 15:22:41 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-07 15:22:41 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-07 15:22:41 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-07 15:22:41 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-07 15:22:41 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-07 15:22:41 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-07 15:22:41 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-07 15:22:41 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-07 15:22:41 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-07 15:22:41 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-07 15:22:41 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-07 15:22:41 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-07 15:22:41 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-07 15:22:41 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-07 15:22:41 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-07 15:22:41 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-07 15:22:41 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-07 15:22:41 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-07 15:22:41 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-07 15:22:41 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-07 15:22:41 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-07 15:22:41 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-07 15:22:41 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-07 15:22:41 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-07 15:22:41 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-07 15:22:41 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-07 15:22:41 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-07 15:22:41 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-07 15:22:41 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-07 15:22:41 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-07 15:22:41 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-07 15:22:41 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-07 15:22:41 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-07 15:22:41 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-07 15:22:41 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-07 15:22:41 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-07 15:22:41 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-07 15:22:41 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-07 15:22:41 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-07 15:22:41 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-07 15:22:41 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-07 15:22:41 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-07 15:22:41 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-07 15:22:41 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-07 15:22:41 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-07 15:22:41 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-07 15:22:41 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-07 15:22:41 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-07 15:22:41 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-07 15:22:41 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-07 15:22:41 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-07 15:22:41 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-07 15:22:41 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-07 15:22:41 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-07 15:22:41 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-07 15:22:41 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-07 15:22:41 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-07 15:22:41 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-07 15:22:41 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-07 15:22:41 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-07 15:22:41 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-07 15:22:41 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-07 15:22:41 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-07 15:22:41 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-05-07 15:22:41 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-07 15:22:41 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-07 15:22:41 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-07 15:22:41 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-07 15:22:41 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-07 15:22:41 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-07 15:22:41 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-07 15:22:41 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-07 15:22:41 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-07 15:22:41 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-07 15:22:41 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-07 15:22:41 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-07 15:22:41 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-07 15:22:41 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-07 15:22:41 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-07 15:22:41 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-07 15:22:41 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-07 15:22:41 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-07 15:22:41 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-07 15:22:41 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-07 15:22:41 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-07 15:22:41 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-07 15:22:41 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-07 15:22:41 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-07 15:22:41 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-07 15:22:41 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-07 15:22:41 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-07 15:22:41 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-07 15:22:41 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-07 15:22:41 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-07 15:22:41 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-07 15:22:41 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-07 15:22:41 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-07 15:22:41 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-07 15:22:41 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-07 15:22:41 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-07 15:22:41 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-07 15:22:41 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-07 15:22:41 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-07 15:22:41 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-07 15:22:41 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-07 15:22:41 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-07 15:22:41 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-07 15:22:41 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-07 15:22:41 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-07 15:22:41 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-07 15:22:41 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-07 15:22:41 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-07 15:22:41 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-07 15:22:41 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-07 15:22:41 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-07 15:22:41 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-07 15:22:41 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-07 15:22:41 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-07 15:22:41 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-07 15:22:41 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-07 15:22:41 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-07 15:22:41 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-07 15:22:41 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-07 15:22:41 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-07 15:22:41 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-07 15:22:41 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-07 15:22:41 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-07 15:22:41 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-07 15:22:41 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-07 15:22:41 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-07 15:22:41 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-07 15:22:41 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-07 15:22:41 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-07 15:22:41 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-07 15:22:41 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-07 15:22:41 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-07 15:22:41 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-07 15:22:41 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-07 15:22:41 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-07 15:22:41 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-07 15:22:41 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-07 15:22:41 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-07 15:22:41 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-07 15:22:41 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-07 15:22:41 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-07 15:22:41 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-07 15:22:41 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-07 15:22:41 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-07 15:22:41 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-07 15:22:41 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-07 15:22:41 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-07 15:22:41 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-07 15:22:41 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-07 15:22:41 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-07 15:22:41 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-07 15:22:41 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-07 15:22:42 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-07 15:22:42 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-07 15:22:42 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-07 15:22:43 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-07 15:22:43 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Tue May 07 15:22:14 CST 2019]; root of context hierarchy
2019-05-07 15:22:43 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-07 15:22:43 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-07 15:22:44 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-07 15:22:44 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-07 15:22:44 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-07 15:22:47 -Registering beans for JMX exposure on startup
2019-05-07 15:22:47 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-07 15:22:47 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-07 15:22:47 -Starting beans in phase 2147483647
2019-05-07 15:22:47 -Context refreshed
2019-05-07 15:22:47 -Found 1 custom documentation plugin(s)
2019-05-07 15:22:47 -Scanning for api listing references
2019-05-07 15:22:48 -Generating unique operation named: getCountDUsingPOST_1
2019-05-07 15:22:48 -Generating unique operation named: removeUsingPOST_1
2019-05-07 15:22:48 -Generating unique operation named: addUsingGET_1
2019-05-07 15:22:48 -Generating unique operation named: editUsingGET_1
2019-05-07 15:22:48 -Generating unique operation named: listUsingGET_1
2019-05-07 15:22:48 -Generating unique operation named: removeUsingPOST_2
2019-05-07 15:22:48 -Generating unique operation named: removeUsingPOST_3
2019-05-07 15:22:48 -Generating unique operation named: saveUsingPOST_1
2019-05-07 15:22:48 -Generating unique operation named: updateUsingGET_1
2019-05-07 15:22:48 -Generating unique operation named: updateUsingHEAD_1
2019-05-07 15:22:48 -Generating unique operation named: updateUsingPOST_1
2019-05-07 15:22:48 -Generating unique operation named: updateUsingPUT_1
2019-05-07 15:22:48 -Generating unique operation named: updateUsingPATCH_1
2019-05-07 15:22:48 -Generating unique operation named: updateUsingDELETE_1
2019-05-07 15:22:48 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-07 15:22:48 -Generating unique operation named: updateUsingTRACE_1
2019-05-07 15:22:48 -Generating unique operation named: addUsingGET_2
2019-05-07 15:22:48 -Generating unique operation named: editUsingGET_2
2019-05-07 15:22:49 -Generating unique operation named: listUsingGET_2
2019-05-07 15:22:49 -Generating unique operation named: removeUsingPOST_4
2019-05-07 15:22:49 -Generating unique operation named: removeUsingPOST_5
2019-05-07 15:22:49 -Generating unique operation named: saveUsingPOST_2
2019-05-07 15:22:49 -Generating unique operation named: updateUsingPOST_2
2019-05-07 15:22:49 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-07 15:22:49 -Generating unique operation named: addUsingGET_3
2019-05-07 15:22:49 -Generating unique operation named: editUsingGET_3
2019-05-07 15:22:49 -Generating unique operation named: listUsingGET_3
2019-05-07 15:22:49 -Generating unique operation named: removeUsingPOST_6
2019-05-07 15:22:49 -Generating unique operation named: removeUsingPOST_7
2019-05-07 15:22:49 -Generating unique operation named: saveUsingPOST_3
2019-05-07 15:22:49 -Generating unique operation named: updateUsingGET_2
2019-05-07 15:22:49 -Generating unique operation named: updateUsingHEAD_2
2019-05-07 15:22:49 -Generating unique operation named: updateUsingPOST_3
2019-05-07 15:22:49 -Generating unique operation named: updateUsingPUT_2
2019-05-07 15:22:49 -Generating unique operation named: updateUsingPATCH_2
2019-05-07 15:22:49 -Generating unique operation named: updateUsingDELETE_2
2019-05-07 15:22:49 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-07 15:22:49 -Generating unique operation named: updateUsingTRACE_2
2019-05-07 15:22:49 -Generating unique operation named: addUsingGET_4
2019-05-07 15:22:49 -Generating unique operation named: editUsingGET_4
2019-05-07 15:22:49 -Generating unique operation named: listUsingGET_4
2019-05-07 15:22:49 -Generating unique operation named: removeUsingPOST_8
2019-05-07 15:22:49 -Generating unique operation named: removeUsingPOST_9
2019-05-07 15:22:49 -Generating unique operation named: saveUsingPOST_4
2019-05-07 15:22:49 -Generating unique operation named: updateUsingGET_3
2019-05-07 15:22:49 -Generating unique operation named: updateUsingHEAD_3
2019-05-07 15:22:49 -Generating unique operation named: updateUsingPOST_4
2019-05-07 15:22:49 -Generating unique operation named: updateUsingPUT_3
2019-05-07 15:22:49 -Generating unique operation named: updateUsingPATCH_3
2019-05-07 15:22:49 -Generating unique operation named: updateUsingDELETE_3
2019-05-07 15:22:49 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-07 15:22:49 -Generating unique operation named: updateUsingTRACE_3
2019-05-07 15:22:49 -Generating unique operation named: ElecUsingGET_1
2019-05-07 15:22:49 -Generating unique operation named: addUsingGET_5
2019-05-07 15:22:49 -Generating unique operation named: editUsingGET_5
2019-05-07 15:22:49 -Generating unique operation named: listUsingGET_5
2019-05-07 15:22:49 -Generating unique operation named: removeUsingPOST_10
2019-05-07 15:22:49 -Generating unique operation named: removeUsingPOST_11
2019-05-07 15:22:49 -Generating unique operation named: saveUsingPOST_5
2019-05-07 15:22:49 -Generating unique operation named: updateUsingGET_4
2019-05-07 15:22:49 -Generating unique operation named: updateUsingHEAD_4
2019-05-07 15:22:49 -Generating unique operation named: updateUsingPOST_5
2019-05-07 15:22:49 -Generating unique operation named: updateUsingPUT_4
2019-05-07 15:22:49 -Generating unique operation named: updateUsingPATCH_4
2019-05-07 15:22:49 -Generating unique operation named: updateUsingDELETE_4
2019-05-07 15:22:49 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-07 15:22:49 -Generating unique operation named: updateUsingTRACE_4
2019-05-07 15:22:49 -Generating unique operation named: editUsingGET_6
2019-05-07 15:22:49 -Generating unique operation named: listUsingGET_6
2019-05-07 15:22:49 -Generating unique operation named: updateUsingPOST_6
2019-05-07 15:22:49 -Generating unique operation named: addUsingGET_6
2019-05-07 15:22:49 -Generating unique operation named: editUsingGET_7
2019-05-07 15:22:49 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-07 15:22:49 -Generating unique operation named: listUsingGET_7
2019-05-07 15:22:49 -Generating unique operation named: removeUsingPOST_12
2019-05-07 15:22:49 -Generating unique operation named: removeUsingPOST_13
2019-05-07 15:22:49 -Generating unique operation named: saveUsingPOST_6
2019-05-07 15:22:49 -Generating unique operation named: updateUsingGET_5
2019-05-07 15:22:49 -Generating unique operation named: updateUsingHEAD_5
2019-05-07 15:22:49 -Generating unique operation named: updateUsingPOST_7
2019-05-07 15:22:49 -Generating unique operation named: updateUsingPUT_5
2019-05-07 15:22:49 -Generating unique operation named: updateUsingPATCH_5
2019-05-07 15:22:49 -Generating unique operation named: updateUsingDELETE_5
2019-05-07 15:22:49 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-07 15:22:49 -Generating unique operation named: updateUsingTRACE_5
2019-05-07 15:22:49 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-07 15:22:49 -Generating unique operation named: addUsingGET_7
2019-05-07 15:22:49 -Generating unique operation named: editUsingGET_8
2019-05-07 15:22:49 -Generating unique operation named: listUsingGET_8
2019-05-07 15:22:49 -Generating unique operation named: removeUsingPOST_14
2019-05-07 15:22:49 -Generating unique operation named: removeUsingPOST_15
2019-05-07 15:22:49 -Generating unique operation named: saveUsingPOST_7
2019-05-07 15:22:49 -Generating unique operation named: updateUsingGET_6
2019-05-07 15:22:49 -Generating unique operation named: updateUsingHEAD_6
2019-05-07 15:22:49 -Generating unique operation named: updateUsingPOST_8
2019-05-07 15:22:49 -Generating unique operation named: updateUsingPUT_6
2019-05-07 15:22:49 -Generating unique operation named: updateUsingPATCH_6
2019-05-07 15:22:49 -Generating unique operation named: updateUsingDELETE_6
2019-05-07 15:22:49 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-07 15:22:49 -Generating unique operation named: updateUsingTRACE_6
2019-05-07 15:22:49 -Generating unique operation named: addUsingGET_8
2019-05-07 15:22:49 -Generating unique operation named: editUsingGET_9
2019-05-07 15:22:49 -Generating unique operation named: listUsingGET_9
2019-05-07 15:22:49 -Generating unique operation named: removeUsingPOST_16
2019-05-07 15:22:49 -Generating unique operation named: removeUsingPOST_17
2019-05-07 15:22:49 -Generating unique operation named: saveUsingPOST_8
2019-05-07 15:22:49 -Generating unique operation named: updateUsingGET_7
2019-05-07 15:22:49 -Generating unique operation named: updateUsingHEAD_7
2019-05-07 15:22:49 -Generating unique operation named: updateUsingPOST_9
2019-05-07 15:22:49 -Generating unique operation named: updateUsingPUT_7
2019-05-07 15:22:49 -Generating unique operation named: updateUsingPATCH_7
2019-05-07 15:22:49 -Generating unique operation named: updateUsingDELETE_7
2019-05-07 15:22:49 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-07 15:22:49 -Generating unique operation named: updateUsingTRACE_7
2019-05-07 15:22:49 -Generating unique operation named: addUsingGET_9
2019-05-07 15:22:49 -Generating unique operation named: editUsingGET_10
2019-05-07 15:22:49 -Generating unique operation named: infoUsingGET_1
2019-05-07 15:22:49 -Generating unique operation named: infoUsingHEAD_1
2019-05-07 15:22:49 -Generating unique operation named: infoUsingPOST_1
2019-05-07 15:22:49 -Generating unique operation named: infoUsingPUT_1
2019-05-07 15:22:49 -Generating unique operation named: infoUsingPATCH_1
2019-05-07 15:22:49 -Generating unique operation named: infoUsingDELETE_1
2019-05-07 15:22:49 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-07 15:22:49 -Generating unique operation named: infoUsingTRACE_1
2019-05-07 15:22:49 -Generating unique operation named: listUsingGET_10
2019-05-07 15:22:49 -Generating unique operation named: removeUsingPOST_18
2019-05-07 15:22:49 -Generating unique operation named: removeUsingPOST_19
2019-05-07 15:22:49 -Generating unique operation named: saveUsingPOST_9
2019-05-07 15:22:49 -Generating unique operation named: updateUsingPOST_10
2019-05-07 15:22:49 -Generating unique operation named: listUsingGET_11
2019-05-07 15:22:49 -Generating unique operation named: removeUsingPOST_20
2019-05-07 15:22:49 -Generating unique operation named: welcomeUsingGET_1
2019-05-07 15:22:49 -Generating unique operation named: addUsingGET_10
2019-05-07 15:22:49 -Generating unique operation named: editUsingGET_11
2019-05-07 15:22:49 -Generating unique operation named: listUsingGET_12
2019-05-07 15:22:49 -Generating unique operation named: removeUsingPOST_21
2019-05-07 15:22:49 -Generating unique operation named: saveUsingPOST_10
2019-05-07 15:22:49 -Generating unique operation named: treeUsingGET_1
2019-05-07 15:22:49 -Generating unique operation named: treeUsingGET_2
2019-05-07 15:22:49 -Generating unique operation named: updateUsingPOST_11
2019-05-07 15:22:49 -Generating unique operation named: addUsingGET_11
2019-05-07 15:22:49 -Generating unique operation named: editUsingGET_12
2019-05-07 15:22:49 -Generating unique operation named: listUsingGET_13
2019-05-07 15:22:49 -Generating unique operation named: removeUsingPOST_22
2019-05-07 15:22:49 -Generating unique operation named: removeUsingPOST_23
2019-05-07 15:22:50 -Generating unique operation named: saveUsingPOST_11
2019-05-07 15:22:50 -Generating unique operation named: updateUsingGET_8
2019-05-07 15:22:50 -Generating unique operation named: updateUsingHEAD_8
2019-05-07 15:22:50 -Generating unique operation named: updateUsingPOST_12
2019-05-07 15:22:50 -Generating unique operation named: updateUsingPUT_8
2019-05-07 15:22:50 -Generating unique operation named: updateUsingPATCH_8
2019-05-07 15:22:50 -Generating unique operation named: updateUsingDELETE_8
2019-05-07 15:22:50 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-07 15:22:50 -Generating unique operation named: updateUsingTRACE_8
2019-05-07 15:22:50 -Generating unique operation named: addUsingGET_12
2019-05-07 15:22:50 -Generating unique operation named: editUsingGET_13
2019-05-07 15:22:50 -Generating unique operation named: listUsingGET_14
2019-05-07 15:22:50 -Generating unique operation named: removeUsingPOST_24
2019-05-07 15:22:50 -Generating unique operation named: removeUsingPOST_25
2019-05-07 15:22:50 -Generating unique operation named: saveUsingPOST_12
2019-05-07 15:22:50 -Generating unique operation named: updateUsingGET_9
2019-05-07 15:22:50 -Generating unique operation named: updateUsingHEAD_9
2019-05-07 15:22:50 -Generating unique operation named: updateUsingPOST_13
2019-05-07 15:22:50 -Generating unique operation named: updateUsingPUT_9
2019-05-07 15:22:50 -Generating unique operation named: updateUsingPATCH_9
2019-05-07 15:22:50 -Generating unique operation named: updateUsingDELETE_9
2019-05-07 15:22:50 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-07 15:22:50 -Generating unique operation named: updateUsingTRACE_9
2019-05-07 15:22:50 -Generating unique operation named: addUsingGET_13
2019-05-07 15:22:50 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-07 15:22:50 -Generating unique operation named: editUsingGET_14
2019-05-07 15:22:50 -Generating unique operation named: listUsingGET_15
2019-05-07 15:22:50 -Generating unique operation named: saveUsingPOST_13
2019-05-07 15:22:50 -Generating unique operation named: saveUsingPOST_14
2019-05-07 15:22:50 -Generating unique operation named: updateUsingPOST_14
2019-05-07 15:22:50 -Generating unique operation named: listUsingGET_16
2019-05-07 15:22:50 -Generating unique operation named: listUsingHEAD_1
2019-05-07 15:22:50 -Generating unique operation named: listUsingPOST_1
2019-05-07 15:22:50 -Generating unique operation named: listUsingPUT_1
2019-05-07 15:22:50 -Generating unique operation named: listUsingPATCH_1
2019-05-07 15:22:50 -Generating unique operation named: listUsingDELETE_1
2019-05-07 15:22:50 -Generating unique operation named: listUsingOPTIONS_1
2019-05-07 15:22:50 -Generating unique operation named: listUsingTRACE_1
2019-05-07 15:22:50 -Generating unique operation named: countDDUsingGET_1
2019-05-07 15:22:50 -Generating unique operation named: exportDDUsingGET_1
2019-05-07 15:22:50 -Generating unique operation named: getCountYYUsingPOST_1
2019-05-07 15:22:50 -Generating unique operation named: getCountMMUsingPOST_1
2019-05-07 15:22:50 -Generating unique operation named: addUsingGET_14
2019-05-07 15:22:50 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-07 15:22:50 -Generating unique operation named: editUsingGET_15
2019-05-07 15:22:50 -Generating unique operation named: listUsingGET_17
2019-05-07 15:22:50 -Generating unique operation named: removeUsingPOST_26
2019-05-07 15:22:50 -Generating unique operation named: saveUsingPOST_15
2019-05-07 15:22:50 -Generating unique operation named: treeUsingGET_3
2019-05-07 15:22:50 -Generating unique operation named: treeViewUsingGET_1
2019-05-07 15:22:50 -Generating unique operation named: updateUsingPOST_15
2019-05-07 15:22:50 -Generating unique operation named: addUsingGET_15
2019-05-07 15:22:50 -Generating unique operation named: editUsingGET_16
2019-05-07 15:22:50 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-07 15:22:50 -Generating unique operation named: listUsingGET_18
2019-05-07 15:22:50 -Generating unique operation named: removeUsingPOST_27
2019-05-07 15:22:50 -Generating unique operation named: removeUsingPOST_28
2019-05-07 15:22:50 -Generating unique operation named: saveUsingPOST_16
2019-05-07 15:22:50 -Generating unique operation named: updateUsingGET_10
2019-05-07 15:22:50 -Generating unique operation named: updateUsingHEAD_10
2019-05-07 15:22:50 -Generating unique operation named: updateUsingPOST_16
2019-05-07 15:22:50 -Generating unique operation named: updateUsingPUT_10
2019-05-07 15:22:50 -Generating unique operation named: updateUsingPATCH_10
2019-05-07 15:22:50 -Generating unique operation named: updateUsingDELETE_10
2019-05-07 15:22:50 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-07 15:22:50 -Generating unique operation named: updateUsingTRACE_10
2019-05-07 15:22:50 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-07 15:22:50 -Generating unique operation named: addUsingGET_16
2019-05-07 15:22:50 -Generating unique operation named: editUsingGET_17
2019-05-07 15:22:50 -Generating unique operation named: listUsingGET_19
2019-05-07 15:22:50 -Generating unique operation named: removeUsingPOST_29
2019-05-07 15:22:50 -Generating unique operation named: removeUsingPOST_30
2019-05-07 15:22:50 -Generating unique operation named: saveUsingPOST_17
2019-05-07 15:22:50 -Generating unique operation named: updateUsingGET_11
2019-05-07 15:22:50 -Generating unique operation named: updateUsingHEAD_11
2019-05-07 15:22:50 -Generating unique operation named: updateUsingPOST_17
2019-05-07 15:22:50 -Generating unique operation named: updateUsingPUT_11
2019-05-07 15:22:50 -Generating unique operation named: updateUsingPATCH_11
2019-05-07 15:22:50 -Generating unique operation named: updateUsingDELETE_11
2019-05-07 15:22:50 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-07 15:22:50 -Generating unique operation named: updateUsingTRACE_11
2019-05-07 15:22:50 -Generating unique operation named: addUsingGET_17
2019-05-07 15:22:50 -Generating unique operation named: editUsingGET_18
2019-05-07 15:22:50 -Generating unique operation named: listUsingGET_20
2019-05-07 15:22:50 -Generating unique operation named: removeUsingPOST_31
2019-05-07 15:22:50 -Generating unique operation named: removeUsingPOST_32
2019-05-07 15:22:50 -Generating unique operation named: saveUsingPOST_18
2019-05-07 15:22:50 -Generating unique operation named: updateUsingGET_12
2019-05-07 15:22:50 -Generating unique operation named: updateUsingHEAD_12
2019-05-07 15:22:50 -Generating unique operation named: updateUsingPOST_18
2019-05-07 15:22:50 -Generating unique operation named: updateUsingPUT_12
2019-05-07 15:22:50 -Generating unique operation named: updateUsingPATCH_12
2019-05-07 15:22:50 -Generating unique operation named: updateUsingDELETE_12
2019-05-07 15:22:50 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-07 15:22:50 -Generating unique operation named: updateUsingTRACE_12
2019-05-07 15:22:50 -Starting Quartz Scheduler now
2019-05-07 15:22:50 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-07 15:22:50 -Starting...
2019-05-07 15:22:50 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-07 15:22:50 -Started.
2019-05-07 15:22:50 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-07 15:22:50 -Using a shared selector for servlet write/read
2019-05-07 15:22:51 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-07 15:22:51 -Started BootdoApplication in 38.507 seconds (JVM running for 39.395)
2019-05-07 15:22:51 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-07 15:22:51 -==> Parameters: 
2019-05-07 15:22:51 -<==      Total: 1
2019-05-07 15:23:28 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-07 15:23:28 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-07 15:23:28 -FrameworkServlet 'dispatcherServlet': initialization completed in 385 ms
2019-05-07 15:23:29 -Enabling session validation scheduler...
2019-05-07 15:23:30 -请求地址 : http://localhost:8081/login;JSESSIONID=d2e16a21-2b43-48d4-b777-bea8bd277ed1
2019-05-07 15:23:30 -HTTP METHOD : GET
2019-05-07 15:23:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-07 15:23:30 -参数 : [{}]
2019-05-07 15:23:30 -耗时 : 3
2019-05-07 15:23:30 -返回值 : login
2019-05-07 15:23:42 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-05-07 15:23:43 -请求地址 : http://localhost:8081/getVerify
2019-05-07 15:23:43 -HTTP METHOD : GET
2019-05-07 15:23:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-07 15:23:43 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@814ec70, org.apache.shiro.web.servlet.ShiroHttpServletResponse@36ffc3c5]
2019-05-07 15:24:02 -4501
2019-05-07 15:24:03 -耗时 : 20106
2019-05-07 15:24:03 -返回值 : null
2019-05-07 15:24:05 -请求地址 : http://localhost:8081/login
2019-05-07 15:24:05 -HTTP METHOD : GET
2019-05-07 15:24:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-07 15:24:05 -参数 : [{}]
2019-05-07 15:24:05 -耗时 : 0
2019-05-07 15:24:05 -返回值 : login
2019-05-07 15:24:24 -请求地址 : http://localhost:8081/login
2019-05-07 15:24:24 -HTTP METHOD : POST
2019-05-07 15:24:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-07 15:24:24 -参数 : [admin, 111111, 4501, org.apache.shiro.web.servlet.ShiroHttpServletRequest@4f9a87bb]
2019-05-07 15:24:24 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-07 15:24:24 -==> Parameters: admin(String)
2019-05-07 15:24:24 -<==      Total: 1
2019-05-07 15:24:24 -耗时 : 761
2019-05-07 15:24:24 -返回值 : {msg=操作成功, code=0}
2019-05-07 15:24:25 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-07 15:24:25 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-07 15:24:25 -==> Parameters: 1(Long), admin(String), 登录(String), 761(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-07 15:24:25.069(Timestamp)
2019-05-07 15:24:25 -请求地址 : http://localhost:8081/index
2019-05-07 15:24:25 -HTTP METHOD : GET
2019-05-07 15:24:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-07 15:24:25 -参数 : [{}]
2019-05-07 15:24:26 -<==    Updates: 1
2019-05-07 15:24:26 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-07 15:24:26 -==> Parameters: 1(Long)
2019-05-07 15:24:26 -<==      Total: 49
2019-05-07 15:24:27 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-07 15:24:27 -==> Parameters: 138(Long)
2019-05-07 15:24:27 -<==      Total: 1
2019-05-07 15:24:27 -耗时 : 1437
2019-05-07 15:24:27 -返回值 : index_v1
2019-05-07 15:24:27 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-07 15:24:27 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 1437(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-07 15:24:27.222(Timestamp)
2019-05-07 15:24:27 -<==    Updates: 1
2019-05-07 15:24:28 -请求地址 : http://localhost:8081/main
2019-05-07 15:24:28 -HTTP METHOD : GET
2019-05-07 15:24:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-07 15:24:28 -参数 : []
2019-05-07 15:24:28 -耗时 : 1
2019-05-07 15:24:28 -返回值 : main
2019-05-07 15:24:31 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-07 15:24:31 -HTTP METHOD : GET
2019-05-07 15:24:31 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-07 15:24:31 -参数 : []
2019-05-07 15:24:31 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-07 15:24:31 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-07 15:24:31 -<==      Total: 0
2019-05-07 15:24:31 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-07 15:24:31 -==> Parameters: 1(Long), 0(String)
2019-05-07 15:24:31 -<==      Total: 1
2019-05-07 15:24:31 -耗时 : 650
2019-05-07 15:24:31 -返回值 : com.bootdo.common.utils.PageUtils@561d8737
2019-05-07 15:24:32 -请求地址 : http://localhost:8081/main
2019-05-07 15:24:32 -HTTP METHOD : GET
2019-05-07 15:24:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-07 15:24:32 -参数 : []
2019-05-07 15:24:32 -耗时 : 1
2019-05-07 15:24:32 -返回值 : main
2019-05-07 15:24:53 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-07 15:24:53 -==> Parameters: 1(Long)
2019-05-07 15:24:53 -<==      Total: 93
2019-05-07 15:24:53 -请求地址 : http://localhost:8081/charts/countYY
2019-05-07 15:24:53 -HTTP METHOD : GET
2019-05-07 15:24:53 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.countYY
2019-05-07 15:24:53 -参数 : []
2019-05-07 15:24:53 -耗时 : 1
2019-05-07 15:24:53 -返回值 : charts/countYY
2019-05-07 15:24:54 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-07 15:24:54 -HTTP METHOD : GET
2019-05-07 15:24:54 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-07 15:24:54 -参数 : []
2019-05-07 15:24:54 -耗时 : 31
2019-05-07 15:24:54 -返回值 : charts/tableElecYY
2019-05-07 15:24:56 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-07 15:24:56 -HTTP METHOD : GET
2019-05-07 15:24:56 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-07 15:24:56 -参数 : [userType]
2019-05-07 15:24:56 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-07 15:24:56 -==> Parameters: userType(String)
2019-05-07 15:24:56 -<==      Total: 4
2019-05-07 15:24:56 -耗时 : 356
2019-05-07 15:24:56 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-07 15:24:57 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-07 15:24:57 -HTTP METHOD : GET
2019-05-07 15:24:57 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-07 15:24:57 -参数 : [userType]
2019-05-07 15:24:57 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-07 15:24:57 -==> Parameters: userType(String)
2019-05-07 15:24:57 -<==      Total: 4
2019-05-07 15:24:57 -耗时 : 6
2019-05-07 15:24:57 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-07 15:25:04 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-07 15:25:04 -HTTP METHOD : GET
2019-05-07 15:25:04 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-07 15:25:04 -参数 : []
2019-05-07 15:25:04 -耗时 : 10
2019-05-07 15:25:04 -返回值 : charts/tableHeatYY
2019-05-07 15:25:04 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-07 15:25:04 -HTTP METHOD : GET
2019-05-07 15:25:04 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-07 15:25:04 -参数 : [userType]
2019-05-07 15:25:04 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-07 15:25:04 -==> Parameters: userType(String)
2019-05-07 15:25:04 -<==      Total: 4
2019-05-07 15:25:04 -耗时 : 7
2019-05-07 15:25:04 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-07 15:25:05 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-07 15:25:05 -HTTP METHOD : GET
2019-05-07 15:25:05 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-07 15:25:05 -参数 : []
2019-05-07 15:25:05 -耗时 : 0
2019-05-07 15:25:05 -返回值 : charts/tableElecYY
2019-05-07 15:25:06 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-07 15:25:06 -HTTP METHOD : GET
2019-05-07 15:25:06 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-07 15:25:06 -参数 : [userType]
2019-05-07 15:25:06 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-07 15:25:06 -==> Parameters: userType(String)
2019-05-07 15:25:06 -<==      Total: 4
2019-05-07 15:25:06 -耗时 : 10
2019-05-07 15:25:06 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-07 15:25:07 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-05-07 15:25:07 -HTTP METHOD : GET
2019-05-07 15:25:07 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-07 15:25:07 -参数 : []
2019-05-07 15:25:07 -耗时 : 9
2019-05-07 15:25:07 -返回值 : charts/tableWaterYY
2019-05-07 15:25:07 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-07 15:25:07 -HTTP METHOD : GET
2019-05-07 15:25:07 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-07 15:25:07 -参数 : [userType]
2019-05-07 15:25:07 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-07 15:25:07 -==> Parameters: userType(String)
2019-05-07 15:25:07 -<==      Total: 4
2019-05-07 15:25:07 -耗时 : 5
2019-05-07 15:25:07 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-07 15:25:18 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-07 15:25:18 -HTTP METHOD : GET
2019-05-07 15:25:18 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-07 15:25:18 -参数 : []
2019-05-07 15:25:18 -耗时 : 0
2019-05-07 15:25:18 -返回值 : system/dept/deptTree
2019-05-07 15:25:18 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-07 15:25:18 -HTTP METHOD : GET
2019-05-07 15:25:18 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-07 15:25:18 -参数 : []
2019-05-07 15:25:18 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-07 15:25:18 -==> Parameters: 
2019-05-07 15:25:19 -<==      Total: 3
2019-05-07 15:25:19 -耗时 : 100
2019-05-07 15:25:19 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-07 15:25:26 -请求地址 : http://localhost:8081/charts/tableWaterYY/tableWaterYY
2019-05-07 15:25:26 -HTTP METHOD : POST
2019-05-07 15:25:26 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-07 15:25:26 -参数 : [com.bootdo.water.vo.WaterVo@3c3265f9, com.bootdo.moneyLog.vo.WaterLogVo@36faa186]
2019-05-07 15:25:26 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE WATER_SUM >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-1) , '%Y' ) , date_format( CONCAT(create_time,"-12"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-07 15:25:26 -==> Parameters: 2019(String), 2(String)
2019-05-07 15:25:26 -<==      Total: 1
2019-05-07 15:25:26 -==>  Preparing: SELECT ifnull(SUM(WATER_SUM >= 0),0) FROM WATER WHERE water_type = "1" and PERIOD_DIFF( date_format(CONCAT(?,-1) , '%Y' ) , date_format( CONCAT(create_time,"-12"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-07 15:25:26 -==> Parameters: 2019(String), 2(String)
2019-05-07 15:25:26 -<==      Total: 1
2019-05-07 15:25:26 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE WATER_SUM < 0 and PERIOD_DIFF( date_format(CONCAT(?,-1) , '%Y' ) , date_format( CONCAT(create_time,"-12"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-07 15:25:26 -==> Parameters: 2019(String), 2(String)
2019-05-07 15:25:26 -<==      Total: 1
2019-05-07 15:25:26 -==>  Preparing: SELECT ifnull(SUM(WATER_SUM < 0),0) FROM WATER WHERE water_type = "1" and PERIOD_DIFF( date_format(CONCAT(?,-1) , '%Y' ) , date_format( CONCAT(create_time,"-12"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-07 15:25:26 -==> Parameters: 2019(String), 2(String)
2019-05-07 15:25:26 -<==      Total: 1
2019-05-07 15:25:26 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE WATER_SUM >= 0 and `create_time` = CONCAT("?","-01") and user_org = ? 
2019-05-07 15:25:26 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-07 15:25:26 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/tableWaterYY/tableWaterYY(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).(String), null, 2019-05-07 15:25:26.551(Timestamp)
2019-05-07 15:25:26 -nested exception is org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:167)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:82)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy107.MWaterCountPre1(Unknown Source)
	at com.bootdo.water.service.impl.WaterServiceImpl.MWaterCountPre1(WaterServiceImpl.java:198)
	at com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(tableWaterYYController.java:58)
	at com.bootdo.charts.controller.tableWaterYYController$$FastClassBySpringCGLIB$$e46653e2.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor124.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.tableWaterYYController$$EnhancerBySpringCGLIB$$be363a06.tableWaterYY(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
	at org.apache.ibatis.scripting.defaults.DefaultParameterHandler.setParameters(DefaultParameterHandler.java:89)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.parameterize(PreparedStatementHandler.java:93)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.parameterize(RoutingStatementHandler.java:64)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:86)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:77)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 99 common frames omitted
Caused by: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
	at org.apache.ibatis.type.BaseTypeHandler.setParameter(BaseTypeHandler.java:55)
	at org.apache.ibatis.scripting.defaults.DefaultParameterHandler.setParameters(DefaultParameterHandler.java:87)
	... 115 common frames omitted
Caused by: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.PreparedStatement.checkBounds(PreparedStatement.java:3327)
	at com.mysql.jdbc.PreparedStatement.setInternal(PreparedStatement.java:3312)
	at com.mysql.jdbc.PreparedStatement.setString(PreparedStatement.java:4027)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2823)
	at com.alibaba.druid.filter.FilterAdapter.preparedStatement_setString(FilterAdapter.java:1340)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2820)
	at com.alibaba.druid.filter.FilterAdapter.preparedStatement_setString(FilterAdapter.java:1340)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2820)
	at com.alibaba.druid.filter.FilterAdapter.preparedStatement_setString(FilterAdapter.java:1340)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2820)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.setString(PreparedStatementProxyImpl.java:560)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.setString(DruidPooledPreparedStatement.java:365)
	at sun.reflect.GeneratedMethodAccessor126.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:67)
	at com.sun.proxy.$Proxy173.setString(Unknown Source)
	at org.apache.ibatis.type.StringTypeHandler.setNonNullParameter(StringTypeHandler.java:31)
	at org.apache.ibatis.type.StringTypeHandler.setNonNullParameter(StringTypeHandler.java:26)
	at org.apache.ibatis.type.BaseTypeHandler.setParameter(BaseTypeHandler.java:53)
	... 116 common frames omitted
2019-05-07 15:25:26 -<==    Updates: 1
2019-05-07 15:53:42 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 421]
2019-05-07 16:10:16 -请求地址 : http://localhost:8081/login;JSESSIONID=e0590ef8-0d77-45c4-a682-0144ce37c0b6
2019-05-07 16:10:16 -HTTP METHOD : GET
2019-05-07 16:10:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-07 16:10:16 -参数 : [{}]
2019-05-07 16:10:16 -耗时 : 1
2019-05-07 16:10:16 -返回值 : login
2019-05-07 16:10:17 -请求地址 : http://localhost:8081/login;JSESSIONID=e0590ef8-0d77-45c4-a682-0144ce37c0b6
2019-05-07 16:10:17 -HTTP METHOD : GET
2019-05-07 16:10:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-07 16:10:17 -参数 : [{}]
2019-05-07 16:10:17 -耗时 : 0
2019-05-07 16:10:17 -返回值 : login
2019-05-07 16:10:17 -请求地址 : http://localhost:8081/getVerify
2019-05-07 16:10:17 -HTTP METHOD : GET
2019-05-07 16:10:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-07 16:10:17 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@483bfa2c, org.apache.shiro.web.servlet.ShiroHttpServletResponse@1f5218f9]
2019-05-07 16:10:22 -请求地址 : http://localhost:8081/getVerify
2019-05-07 16:10:22 -HTTP METHOD : GET
2019-05-07 16:10:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-07 16:10:22 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@7f529af, org.apache.shiro.web.servlet.ShiroHttpServletResponse@7b3feb33]
2019-05-07 16:10:22 -3501
2019-05-07 16:10:22 -4875
2019-05-07 16:10:22 -耗时 : 4849
2019-05-07 16:10:22 -返回值 : null
2019-05-07 16:10:22 -耗时 : 56
2019-05-07 16:10:22 -返回值 : null
2019-05-07 16:23:29 -Validating all active sessions...
2019-05-07 16:23:29 -Finished session validation.  No sessions were stopped.
2019-05-07 16:23:42 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 12], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 2], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 1, completed tasks = 822]
2019-05-07 16:51:12 -请求地址 : http://localhost:8081/login
2019-05-07 16:51:12 -HTTP METHOD : POST
2019-05-07 16:51:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-07 16:51:12 -参数 : [admin, 111111, 4875, org.apache.shiro.web.servlet.ShiroHttpServletRequest@243e3ca]
2019-05-07 16:51:12 -验证码校验失败
java.lang.NullPointerException: null
	at com.bootdo.system.controller.LoginController.ajaxLogin(LoginController.java:90)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor124.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.LogAspect.around(LogAspect.java:50)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:174)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.system.controller.LoginController$$EnhancerBySpringCGLIB$$2e96afe0.ajaxLogin(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-05-07 16:51:12 -耗时 : 8
2019-05-07 16:51:12 -返回值 : {msg=验证码校验失败, code=500}
2019-05-07 16:51:12 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-07 16:51:12 -==> Parameters: -1(Long), 获取用户信息为空(String), 登录(String), 9(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-07 16:51:12.528(Timestamp)
2019-05-07 16:51:12 -<==    Updates: 1
2019-05-07 16:51:17 -请求地址 : http://localhost:8081/login;JSESSIONID=e0590ef8-0d77-45c4-a682-0144ce37c0b6
2019-05-07 16:51:17 -HTTP METHOD : GET
2019-05-07 16:51:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-07 16:51:17 -参数 : [{}]
2019-05-07 16:51:17 -耗时 : 1
2019-05-07 16:51:17 -返回值 : login
2019-05-07 16:51:17 -请求地址 : http://localhost:8081/getVerify
2019-05-07 16:51:17 -HTTP METHOD : GET
2019-05-07 16:51:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-07 16:51:17 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@2385e0f6, org.apache.shiro.web.servlet.ShiroHttpServletResponse@5e780994]
2019-05-07 16:51:17 -4982
2019-05-07 16:51:17 -耗时 : 15
2019-05-07 16:51:17 -返回值 : null
2019-05-07 16:51:17 -请求地址 : http://localhost:8081/login
2019-05-07 16:51:17 -HTTP METHOD : GET
2019-05-07 16:51:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-07 16:51:17 -参数 : [{}]
2019-05-07 16:51:17 -耗时 : 1
2019-05-07 16:51:17 -返回值 : login
2019-05-07 16:51:24 -请求地址 : http://localhost:8081/login
2019-05-07 16:51:24 -HTTP METHOD : POST
2019-05-07 16:51:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-07 16:51:24 -参数 : [admin, 111111, 4982, org.apache.shiro.web.servlet.ShiroHttpServletRequest@49b71d50]
2019-05-07 16:51:24 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-07 16:51:24 -==> Parameters: admin(String)
2019-05-07 16:51:24 -<==      Total: 1
2019-05-07 16:51:24 -耗时 : 11
2019-05-07 16:51:24 -返回值 : {msg=操作成功, code=0}
2019-05-07 16:51:24 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-07 16:51:24 -==> Parameters: 1(Long), admin(String), 登录(String), 12(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-07 16:51:24.057(Timestamp)
2019-05-07 16:51:24 -请求地址 : http://localhost:8081/index
2019-05-07 16:51:24 -HTTP METHOD : GET
2019-05-07 16:51:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-07 16:51:24 -参数 : [{}]
2019-05-07 16:51:24 -<==    Updates: 1
2019-05-07 16:51:24 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-07 16:51:24 -==> Parameters: 1(Long)
2019-05-07 16:51:24 -<==      Total: 49
2019-05-07 16:51:24 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-07 16:51:25 -==> Parameters: 138(Long)
2019-05-07 16:51:25 -<==      Total: 1
2019-05-07 16:51:25 -耗时 : 972
2019-05-07 16:51:25 -返回值 : index_v1
2019-05-07 16:51:25 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-07 16:51:25 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 973(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-07 16:51:25.064(Timestamp)
2019-05-07 16:51:25 -请求地址 : http://localhost:8081/main
2019-05-07 16:51:25 -HTTP METHOD : GET
2019-05-07 16:51:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-07 16:51:25 -参数 : []
2019-05-07 16:51:25 -耗时 : 25
2019-05-07 16:51:25 -返回值 : main
2019-05-07 16:51:26 -请求地址 : http://localhost:8081/main
2019-05-07 16:51:26 -HTTP METHOD : GET
2019-05-07 16:51:26 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-07 16:51:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-07 16:51:26 -HTTP METHOD : GET
2019-05-07 16:51:26 -参数 : []
2019-05-07 16:51:26 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-07 16:51:26 -耗时 : 1
2019-05-07 16:51:26 -参数 : []
2019-05-07 16:51:26 -返回值 : main
2019-05-07 16:51:26 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-07 16:51:26 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-07 16:51:26 -<==      Total: 0
2019-05-07 16:51:26 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-07 16:51:26 -==> Parameters: 1(Long), 0(String)
2019-05-07 16:51:26 -<==      Total: 1
2019-05-07 16:51:26 -耗时 : 108
2019-05-07 16:51:26 -返回值 : com.bootdo.common.utils.PageUtils@21bcaadc
2019-05-07 16:51:26 -<==    Updates: 1
2019-05-07 16:51:28 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-07 16:51:28 -==> Parameters: 1(Long)
2019-05-07 16:51:28 -<==      Total: 93
2019-05-07 16:51:28 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-07 16:51:28 -HTTP METHOD : GET
2019-05-07 16:51:28 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-07 16:51:28 -参数 : []
2019-05-07 16:51:28 -耗时 : 1
2019-05-07 16:51:28 -返回值 : charts/tableElecYY
2019-05-07 16:51:30 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-05-07 16:51:30 -HTTP METHOD : GET
2019-05-07 16:51:30 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-07 16:51:30 -参数 : []
2019-05-07 16:51:30 -耗时 : 0
2019-05-07 16:51:30 -返回值 : charts/tableWaterYY
2019-05-07 16:51:31 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-07 16:51:31 -HTTP METHOD : GET
2019-05-07 16:51:31 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-07 16:51:31 -参数 : [userType]
2019-05-07 16:51:31 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-07 16:51:31 -==> Parameters: userType(String)
2019-05-07 16:51:31 -<==      Total: 4
2019-05-07 16:51:31 -耗时 : 321
2019-05-07 16:51:31 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-07 16:51:32 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-07 16:51:32 -HTTP METHOD : GET
2019-05-07 16:51:32 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-07 16:51:32 -参数 : []
2019-05-07 16:51:32 -耗时 : 0
2019-05-07 16:51:32 -返回值 : system/dept/deptTree
2019-05-07 16:51:32 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-07 16:51:32 -HTTP METHOD : GET
2019-05-07 16:51:32 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-07 16:51:32 -参数 : []
2019-05-07 16:51:32 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-07 16:51:32 -==> Parameters: 
2019-05-07 16:51:33 -<==      Total: 3
2019-05-07 16:51:33 -耗时 : 205
2019-05-07 16:51:33 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-07 16:52:51 -请求地址 : http://localhost:8081/elec/elecPrice
2019-05-07 16:52:51 -HTTP METHOD : GET
2019-05-07 16:52:51 -CLASS_METHOD : com.bootdo.elec.controller.ElecPriceController.ElecPrice
2019-05-07 16:52:51 -参数 : []
2019-05-07 16:52:51 -耗时 : 1
2019-05-07 16:52:51 -返回值 : elec/elecPrice/elecPrice
2019-05-07 16:52:52 -请求地址 : http://localhost:8081/elec/elecPrice/list
2019-05-07 16:52:52 -HTTP METHOD : GET
2019-05-07 16:52:52 -CLASS_METHOD : com.bootdo.elec.controller.ElecPriceController.list
2019-05-07 16:52:52 -参数 : [{limit=10, offset=0}]
2019-05-07 16:52:52 -==>  Preparing: select `id`,`elec_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `elec_org`) AS elecOrgName,`business_elec`,`civil_elec`,`noindustry_elec`,`industry_elec`,`special_1`,`special_2`,`special_3`,`special_4`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_price order by id desc limit ?, ? 
2019-05-07 16:52:52 -==> Parameters: 0(Integer), 10(Integer)
2019-05-07 16:52:52 -<==      Total: 2
2019-05-07 16:52:52 -==>  Preparing: select count(*) from elec_price 
2019-05-07 16:52:52 -==> Parameters: 
2019-05-07 16:52:52 -<==      Total: 1
2019-05-07 16:52:52 -耗时 : 519
2019-05-07 16:52:52 -返回值 : com.bootdo.common.utils.PageUtils@794d35ca
2019-05-07 16:53:42 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 21], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 3], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 1188]
2019-05-07 16:54:24 -请求地址 : http://localhost:8081/elec/elecPrice/edit/2
2019-05-07 16:54:24 -HTTP METHOD : GET
2019-05-07 16:54:24 -CLASS_METHOD : com.bootdo.elec.controller.ElecPriceController.edit
2019-05-07 16:54:24 -参数 : [2, {}]
2019-05-07 16:54:24 -==>  Preparing: select `id`, `elec_org`, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `elec_org`) AS elecOrgName, `business_elec`, `civil_elec`, `noindustry_elec`, `industry_elec`, `special_1`, `special_2`, `special_3`, `special_4`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` from elec_price where id = ? 
2019-05-07 16:54:24 -==> Parameters: 2(Long)
2019-05-07 16:54:24 -<==      Total: 1
2019-05-07 16:54:24 -耗时 : 23
2019-05-07 16:54:24 -返回值 : elec/elecPrice/edit
2019-05-07 17:00:46 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-05-07 17:00:46 -HTTP METHOD : GET
2019-05-07 17:00:46 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-05-07 17:00:46 -参数 : []
2019-05-07 17:00:46 -耗时 : 15
2019-05-07 17:00:46 -返回值 : /moneyLog/elecLog/elecLog
2019-05-07 17:00:47 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-05-07 17:00:47 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-07 17:00:47 -HTTP METHOD : GET
2019-05-07 17:00:47 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-07 17:00:47 -参数 : [userType]
2019-05-07 17:00:47 -HTTP METHOD : GET
2019-05-07 17:00:47 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-07 17:00:47 -==> Parameters: userType(String)
2019-05-07 17:00:47 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-07 17:00:47 -参数 : [elecType]
2019-05-07 17:00:47 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-05-07 17:00:47 -HTTP METHOD : GET
2019-05-07 17:00:47 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-05-07 17:00:47 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, elecDate=}]
2019-05-07 17:00:47 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-07 17:00:47 -==> Parameters: elecType(String)
2019-05-07 17:00:47 -<==      Total: 11
2019-05-07 17:00:47 -耗时 : 13
2019-05-07 17:00:47 -返回值 : [DictDO{id=152, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=151, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=150, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=149, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=148, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=147, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=146, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=139, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=137, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=136, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-07 17:00:47 -<==      Total: 4
2019-05-07 17:00:47 -耗时 : 47
2019-05-07 17:00:47 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-07 17:00:47 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-05-07 17:00:47 -==> Parameters: 0(Integer), 10(Integer)
2019-05-07 17:00:48 -<==      Total: 10
2019-05-07 17:00:48 -==>  Preparing: select count(*) from elec_log 
2019-05-07 17:00:48 -==> Parameters: 
2019-05-07 17:00:48 -<==      Total: 1
2019-05-07 17:00:48 -耗时 : 484
2019-05-07 17:00:48 -返回值 : com.bootdo.common.utils.PageUtils@42db2bbe
2019-05-07 17:05:42 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-07 17:05:42 -==> Parameters: 1(Long)
2019-05-07 17:05:42 -<==      Total: 93
2019-05-07 17:05:42 -请求地址 : http://localhost:8081/elec/elecPrice/add
2019-05-07 17:05:42 -HTTP METHOD : GET
2019-05-07 17:05:42 -CLASS_METHOD : com.bootdo.elec.controller.ElecPriceController.add
2019-05-07 17:05:42 -参数 : []
2019-05-07 17:05:42 -耗时 : 1
2019-05-07 17:05:42 -返回值 : elec/elecPrice/add
2019-05-07 17:23:42 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 21], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 3], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 1621]
2019-05-07 17:32:28 -Validating all active sessions...
2019-05-07 17:32:28 -Finished session validation.  No sessions were stopped.
